!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	codec2/defines.h	/^    float A[MAX_AMP+1];	  \/* amplitiude of each harmonic                *\/$/;"	m	struct:__anon135
A0	CMSIS/arm_math.h	/^    float32_t A0;          \/**< The derived gain, A0 = Kp + Ki + Kd . *\/$/;"	m	struct:__anon64
A0	CMSIS/arm_math.h	/^    q15_t A0;           \/**< The derived gain, A0 = Kp + Ki + Kd . *\/$/;"	m	struct:__anon62
A0	CMSIS/arm_math.h	/^    q31_t A0;            \/**< The derived gain, A0 = Kp + Ki + Kd . *\/$/;"	m	struct:__anon63
A1	CMSIS/arm_math.h	/^    float32_t A1;          \/**< The derived gain, A1 = -Kp - 2Kd. *\/$/;"	m	struct:__anon64
A1	CMSIS/arm_math.h	/^    q15_t A1;$/;"	m	struct:__anon62
A1	CMSIS/arm_math.h	/^    q31_t A1;            \/**< The derived gain, A1 = -Kp - 2Kd. *\/$/;"	m	struct:__anon63
A1	CMSIS/arm_math.h	/^    q31_t A1;           \/**< The derived gain A1 = -Kp - 2Kd | Kd.*\/$/;"	m	struct:__anon62
A2	CMSIS/arm_math.h	/^    float32_t A2;          \/**< The derived gain, A2 = Kd . *\/$/;"	m	struct:__anon64
A2	CMSIS/arm_math.h	/^    q15_t A2;$/;"	m	struct:__anon62
A2	CMSIS/arm_math.h	/^    q31_t A2;            \/**< The derived gain, A2 = Kd . *\/$/;"	m	struct:__anon63
AA_Factor	emwin/emWin_header/GUI.h	/^  U8 AA_Factor;$/;"	m	struct:GUI_CONTEXT
AA_HiResEnable	emwin/emWin_header/GUI.h	/^  U8 AA_HiResEnable;$/;"	m	struct:GUI_CONTEXT
AA_pfSetPixelAA	emwin/emWin_header/GUI.h	/^  void (* AA_pfSetPixelAA)(int x, int y, U8 Intens); \/\/ Function to be used for drawing a single pixel$/;"	m	struct:GUI_CONTEXT
ABFSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ABFSR;                  \/*!< Offset: 0x2A8 (R\/W)  Auxiliary Bus Fault Status Register *\/$/;"	m	struct:__anon18
ABORT	device/LPC54018.h	/^    __O  uint32_t ABORT;                             \/**< Channel Abort control for all DMA channels., array offset: 0x78, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
ACCESS_REG	radio/sx1276-LoRa.h	/^}ACCESS_REG;$/;"	t	typeref:enum:__anon479
ACKCIADDR	lwip/src/netif/ppp/ipcp.c	982;"	d	file:
ACKCIADDRS	lwip/src/netif/ppp/ipcp.c	937;"	d	file:
ACKCICHAP	lwip/src/netif/ppp/lcp.c	996;"	d	file:
ACKCICHAR	lwip/src/netif/ppp/lcp.c	982;"	d	file:
ACKCIDNS	lwip/src/netif/ppp/ipcp.c	999;"	d	file:
ACKCIENDP	lwip/src/netif/ppp/lcp.c	1044;"	d	file:
ACKCIIFACEID	lwip/src/netif/ppp/ipv6cp.c	629;"	d	file:
ACKCILONG	lwip/src/netif/ppp/lcp.c	1013;"	d	file:
ACKCILQR	lwip/src/netif/ppp/lcp.c	1027;"	d	file:
ACKCISHORT	lwip/src/netif/ppp/lcp.c	969;"	d	file:
ACKCIVJ	lwip/src/netif/ppp/ipcp.c	958;"	d	file:
ACKCIVJ	lwip/src/netif/ppp/ipv6cp.c	613;"	d	file:
ACKCIVOID	lwip/src/netif/ppp/lcp.c	959;"	d	file:
ACPR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t ACPR;                   \/*!< Offset: 0x010 (R\/W)  Asynchronous Clock Prescaler Register *\/$/;"	m	struct:__anon125
ACPR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ACPR;                   \/*!< Offset: 0x010 (R\/W)  Asynchronous Clock Prescaler Register *\/$/;"	m	struct:__anon24
ACPR	CMSIS/core_cm4.h	/^  __IOM uint32_t ACPR;                   \/*!< Offset: 0x010 (R\/W)  Asynchronous Clock Prescaler Register *\/$/;"	m	struct:__anon46
ACTIVE	device/LPC54018.h	/^    __I  uint32_t ACTIVE;                            \/**< Channel Active status for all DMA channels., array offset: 0x30, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
ACTLR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ACTLR;                  \/*!< Offset: 0x008 (R\/W)  Auxiliary Control Register *\/$/;"	m	struct:__anon19
ACTLR	CMSIS/core_cm4.h	/^  __IOM uint32_t ACTLR;                  \/*!< Offset: 0x008 (R\/W)  Auxiliary Control Register *\/$/;"	m	struct:__anon41
ADC0	device/LPC54018.h	782;"	d
ADC0_BASE	device/LPC54018.h	780;"	d
ADC0_CLOCKS	drivers/fsl_clock.h	141;"	d
ADC0_SEQA_IRQHandler	startup/startup_lpc54018.c	/^WEAK void ADC0_SEQA_IRQHandler(void)$/;"	f
ADC0_SEQA_IRQn	device/LPC54018.h	/^  ADC0_SEQA_IRQn               = 22,               \/**< ADC0 sequence A completion. *\/$/;"	e	enum:IRQn
ADC0_SEQB_IRQHandler	startup/startup_lpc54018.c	/^WEAK void ADC0_SEQB_IRQHandler(void)$/;"	f
ADC0_SEQB_IRQn	device/LPC54018.h	/^  ADC0_SEQB_IRQn               = 23,               \/**< ADC0 sequence B completion. *\/$/;"	e	enum:IRQn
ADC0_THCMP_IRQHandler	startup/startup_lpc54018.c	/^WEAK void ADC0_THCMP_IRQHandler(void)$/;"	f
ADC0_THCMP_IRQn	device/LPC54018.h	/^  ADC0_THCMP_IRQn              = 24,               \/**< ADC0 threshold compare and error. *\/$/;"	e	enum:IRQn
ADCCLKDIV	device/LPC54018.h	/^  __IO uint32_t ADCCLKDIV;                         \/**< ADC clock divider, offset: 0x394 *\/$/;"	m	struct:__anon185
ADCCLKSEL	device/LPC54018.h	/^  __IO uint32_t ADCCLKSEL;                         \/**< ADC clock source select, offset: 0x2A4 *\/$/;"	m	struct:__anon185
ADC_BASE_ADDRS	device/LPC54018.h	784;"	d
ADC_BASE_PTRS	device/LPC54018.h	786;"	d
ADC_CALIB_CALIB	device/LPC54018.h	763;"	d
ADC_CALIB_CALIB_MASK	device/LPC54018.h	761;"	d
ADC_CALIB_CALIB_SHIFT	device/LPC54018.h	762;"	d
ADC_CALIB_CALREQD	device/LPC54018.h	766;"	d
ADC_CALIB_CALREQD_MASK	device/LPC54018.h	764;"	d
ADC_CALIB_CALREQD_SHIFT	device/LPC54018.h	765;"	d
ADC_CALIB_CALVALUE	device/LPC54018.h	769;"	d
ADC_CALIB_CALVALUE_MASK	device/LPC54018.h	767;"	d
ADC_CALIB_CALVALUE_SHIFT	device/LPC54018.h	768;"	d
ADC_CHAN_THRSEL_CH0_THRSEL	device/LPC54018.h	545;"	d
ADC_CHAN_THRSEL_CH0_THRSEL_MASK	device/LPC54018.h	539;"	d
ADC_CHAN_THRSEL_CH0_THRSEL_SHIFT	device/LPC54018.h	540;"	d
ADC_CHAN_THRSEL_CH10_THRSEL	device/LPC54018.h	575;"	d
ADC_CHAN_THRSEL_CH10_THRSEL_MASK	device/LPC54018.h	573;"	d
ADC_CHAN_THRSEL_CH10_THRSEL_SHIFT	device/LPC54018.h	574;"	d
ADC_CHAN_THRSEL_CH11_THRSEL	device/LPC54018.h	578;"	d
ADC_CHAN_THRSEL_CH11_THRSEL_MASK	device/LPC54018.h	576;"	d
ADC_CHAN_THRSEL_CH11_THRSEL_SHIFT	device/LPC54018.h	577;"	d
ADC_CHAN_THRSEL_CH1_THRSEL	device/LPC54018.h	548;"	d
ADC_CHAN_THRSEL_CH1_THRSEL_MASK	device/LPC54018.h	546;"	d
ADC_CHAN_THRSEL_CH1_THRSEL_SHIFT	device/LPC54018.h	547;"	d
ADC_CHAN_THRSEL_CH2_THRSEL	device/LPC54018.h	551;"	d
ADC_CHAN_THRSEL_CH2_THRSEL_MASK	device/LPC54018.h	549;"	d
ADC_CHAN_THRSEL_CH2_THRSEL_SHIFT	device/LPC54018.h	550;"	d
ADC_CHAN_THRSEL_CH3_THRSEL	device/LPC54018.h	554;"	d
ADC_CHAN_THRSEL_CH3_THRSEL_MASK	device/LPC54018.h	552;"	d
ADC_CHAN_THRSEL_CH3_THRSEL_SHIFT	device/LPC54018.h	553;"	d
ADC_CHAN_THRSEL_CH4_THRSEL	device/LPC54018.h	557;"	d
ADC_CHAN_THRSEL_CH4_THRSEL_MASK	device/LPC54018.h	555;"	d
ADC_CHAN_THRSEL_CH4_THRSEL_SHIFT	device/LPC54018.h	556;"	d
ADC_CHAN_THRSEL_CH5_THRSEL	device/LPC54018.h	560;"	d
ADC_CHAN_THRSEL_CH5_THRSEL_MASK	device/LPC54018.h	558;"	d
ADC_CHAN_THRSEL_CH5_THRSEL_SHIFT	device/LPC54018.h	559;"	d
ADC_CHAN_THRSEL_CH6_THRSEL	device/LPC54018.h	563;"	d
ADC_CHAN_THRSEL_CH6_THRSEL_MASK	device/LPC54018.h	561;"	d
ADC_CHAN_THRSEL_CH6_THRSEL_SHIFT	device/LPC54018.h	562;"	d
ADC_CHAN_THRSEL_CH7_THRSEL	device/LPC54018.h	566;"	d
ADC_CHAN_THRSEL_CH7_THRSEL_MASK	device/LPC54018.h	564;"	d
ADC_CHAN_THRSEL_CH7_THRSEL_SHIFT	device/LPC54018.h	565;"	d
ADC_CHAN_THRSEL_CH8_THRSEL	device/LPC54018.h	569;"	d
ADC_CHAN_THRSEL_CH8_THRSEL_MASK	device/LPC54018.h	567;"	d
ADC_CHAN_THRSEL_CH8_THRSEL_SHIFT	device/LPC54018.h	568;"	d
ADC_CHAN_THRSEL_CH9_THRSEL	device/LPC54018.h	572;"	d
ADC_CHAN_THRSEL_CH9_THRSEL_MASK	device/LPC54018.h	570;"	d
ADC_CHAN_THRSEL_CH9_THRSEL_SHIFT	device/LPC54018.h	571;"	d
ADC_CLOCKS	drivers/fsl_clock.h	61;"	d
ADC_CTRL_ASYNMODE	device/LPC54018.h	324;"	d
ADC_CTRL_ASYNMODE_MASK	device/LPC54018.h	313;"	d
ADC_CTRL_ASYNMODE_SHIFT	device/LPC54018.h	314;"	d
ADC_CTRL_BYPASSCAL	device/LPC54018.h	350;"	d
ADC_CTRL_BYPASSCAL_MASK	device/LPC54018.h	340;"	d
ADC_CTRL_BYPASSCAL_SHIFT	device/LPC54018.h	341;"	d
ADC_CTRL_CLKDIV	device/LPC54018.h	312;"	d
ADC_CTRL_CLKDIV_MASK	device/LPC54018.h	310;"	d
ADC_CTRL_CLKDIV_SHIFT	device/LPC54018.h	311;"	d
ADC_CTRL_RESOL	device/LPC54018.h	339;"	d
ADC_CTRL_RESOL_MASK	device/LPC54018.h	325;"	d
ADC_CTRL_RESOL_SHIFT	device/LPC54018.h	326;"	d
ADC_CTRL_TSAMP	device/LPC54018.h	353;"	d
ADC_CTRL_TSAMP_MASK	device/LPC54018.h	351;"	d
ADC_CTRL_TSAMP_SHIFT	device/LPC54018.h	352;"	d
ADC_DAT_CHANNEL	device/LPC54018.h	497;"	d
ADC_DAT_CHANNEL_MASK	device/LPC54018.h	495;"	d
ADC_DAT_CHANNEL_SHIFT	device/LPC54018.h	496;"	d
ADC_DAT_COUNT	device/LPC54018.h	507;"	d
ADC_DAT_DATAVALID	device/LPC54018.h	503;"	d
ADC_DAT_DATAVALID_MASK	device/LPC54018.h	501;"	d
ADC_DAT_DATAVALID_SHIFT	device/LPC54018.h	502;"	d
ADC_DAT_OVERRUN	device/LPC54018.h	500;"	d
ADC_DAT_OVERRUN_MASK	device/LPC54018.h	498;"	d
ADC_DAT_OVERRUN_SHIFT	device/LPC54018.h	499;"	d
ADC_DAT_RESULT	device/LPC54018.h	488;"	d
ADC_DAT_RESULT_MASK	device/LPC54018.h	486;"	d
ADC_DAT_RESULT_SHIFT	device/LPC54018.h	487;"	d
ADC_DAT_THCMPCROSS	device/LPC54018.h	494;"	d
ADC_DAT_THCMPCROSS_MASK	device/LPC54018.h	492;"	d
ADC_DAT_THCMPCROSS_SHIFT	device/LPC54018.h	493;"	d
ADC_DAT_THCMPRANGE	device/LPC54018.h	491;"	d
ADC_DAT_THCMPRANGE_MASK	device/LPC54018.h	489;"	d
ADC_DAT_THCMPRANGE_SHIFT	device/LPC54018.h	490;"	d
ADC_FLAGS_OVERRUN0	device/LPC54018.h	695;"	d
ADC_FLAGS_OVERRUN0_MASK	device/LPC54018.h	693;"	d
ADC_FLAGS_OVERRUN0_SHIFT	device/LPC54018.h	694;"	d
ADC_FLAGS_OVERRUN1	device/LPC54018.h	698;"	d
ADC_FLAGS_OVERRUN10	device/LPC54018.h	725;"	d
ADC_FLAGS_OVERRUN10_MASK	device/LPC54018.h	723;"	d
ADC_FLAGS_OVERRUN10_SHIFT	device/LPC54018.h	724;"	d
ADC_FLAGS_OVERRUN11	device/LPC54018.h	728;"	d
ADC_FLAGS_OVERRUN11_MASK	device/LPC54018.h	726;"	d
ADC_FLAGS_OVERRUN11_SHIFT	device/LPC54018.h	727;"	d
ADC_FLAGS_OVERRUN1_MASK	device/LPC54018.h	696;"	d
ADC_FLAGS_OVERRUN1_SHIFT	device/LPC54018.h	697;"	d
ADC_FLAGS_OVERRUN2	device/LPC54018.h	701;"	d
ADC_FLAGS_OVERRUN2_MASK	device/LPC54018.h	699;"	d
ADC_FLAGS_OVERRUN2_SHIFT	device/LPC54018.h	700;"	d
ADC_FLAGS_OVERRUN3	device/LPC54018.h	704;"	d
ADC_FLAGS_OVERRUN3_MASK	device/LPC54018.h	702;"	d
ADC_FLAGS_OVERRUN3_SHIFT	device/LPC54018.h	703;"	d
ADC_FLAGS_OVERRUN4	device/LPC54018.h	707;"	d
ADC_FLAGS_OVERRUN4_MASK	device/LPC54018.h	705;"	d
ADC_FLAGS_OVERRUN4_SHIFT	device/LPC54018.h	706;"	d
ADC_FLAGS_OVERRUN5	device/LPC54018.h	710;"	d
ADC_FLAGS_OVERRUN5_MASK	device/LPC54018.h	708;"	d
ADC_FLAGS_OVERRUN5_SHIFT	device/LPC54018.h	709;"	d
ADC_FLAGS_OVERRUN6	device/LPC54018.h	713;"	d
ADC_FLAGS_OVERRUN6_MASK	device/LPC54018.h	711;"	d
ADC_FLAGS_OVERRUN6_SHIFT	device/LPC54018.h	712;"	d
ADC_FLAGS_OVERRUN7	device/LPC54018.h	716;"	d
ADC_FLAGS_OVERRUN7_MASK	device/LPC54018.h	714;"	d
ADC_FLAGS_OVERRUN7_SHIFT	device/LPC54018.h	715;"	d
ADC_FLAGS_OVERRUN8	device/LPC54018.h	719;"	d
ADC_FLAGS_OVERRUN8_MASK	device/LPC54018.h	717;"	d
ADC_FLAGS_OVERRUN8_SHIFT	device/LPC54018.h	718;"	d
ADC_FLAGS_OVERRUN9	device/LPC54018.h	722;"	d
ADC_FLAGS_OVERRUN9_MASK	device/LPC54018.h	720;"	d
ADC_FLAGS_OVERRUN9_SHIFT	device/LPC54018.h	721;"	d
ADC_FLAGS_OVR_INT	device/LPC54018.h	746;"	d
ADC_FLAGS_OVR_INT_MASK	device/LPC54018.h	744;"	d
ADC_FLAGS_OVR_INT_SHIFT	device/LPC54018.h	745;"	d
ADC_FLAGS_SEQA_INT	device/LPC54018.h	737;"	d
ADC_FLAGS_SEQA_INT_MASK	device/LPC54018.h	735;"	d
ADC_FLAGS_SEQA_INT_SHIFT	device/LPC54018.h	736;"	d
ADC_FLAGS_SEQA_OVR	device/LPC54018.h	731;"	d
ADC_FLAGS_SEQA_OVR_MASK	device/LPC54018.h	729;"	d
ADC_FLAGS_SEQA_OVR_SHIFT	device/LPC54018.h	730;"	d
ADC_FLAGS_SEQB_INT	device/LPC54018.h	740;"	d
ADC_FLAGS_SEQB_INT_MASK	device/LPC54018.h	738;"	d
ADC_FLAGS_SEQB_INT_SHIFT	device/LPC54018.h	739;"	d
ADC_FLAGS_SEQB_OVR	device/LPC54018.h	734;"	d
ADC_FLAGS_SEQB_OVR_MASK	device/LPC54018.h	732;"	d
ADC_FLAGS_SEQB_OVR_SHIFT	device/LPC54018.h	733;"	d
ADC_FLAGS_THCMP0	device/LPC54018.h	659;"	d
ADC_FLAGS_THCMP0_MASK	device/LPC54018.h	657;"	d
ADC_FLAGS_THCMP0_SHIFT	device/LPC54018.h	658;"	d
ADC_FLAGS_THCMP1	device/LPC54018.h	662;"	d
ADC_FLAGS_THCMP10	device/LPC54018.h	689;"	d
ADC_FLAGS_THCMP10_MASK	device/LPC54018.h	687;"	d
ADC_FLAGS_THCMP10_SHIFT	device/LPC54018.h	688;"	d
ADC_FLAGS_THCMP11	device/LPC54018.h	692;"	d
ADC_FLAGS_THCMP11_MASK	device/LPC54018.h	690;"	d
ADC_FLAGS_THCMP11_SHIFT	device/LPC54018.h	691;"	d
ADC_FLAGS_THCMP1_MASK	device/LPC54018.h	660;"	d
ADC_FLAGS_THCMP1_SHIFT	device/LPC54018.h	661;"	d
ADC_FLAGS_THCMP2	device/LPC54018.h	665;"	d
ADC_FLAGS_THCMP2_MASK	device/LPC54018.h	663;"	d
ADC_FLAGS_THCMP2_SHIFT	device/LPC54018.h	664;"	d
ADC_FLAGS_THCMP3	device/LPC54018.h	668;"	d
ADC_FLAGS_THCMP3_MASK	device/LPC54018.h	666;"	d
ADC_FLAGS_THCMP3_SHIFT	device/LPC54018.h	667;"	d
ADC_FLAGS_THCMP4	device/LPC54018.h	671;"	d
ADC_FLAGS_THCMP4_MASK	device/LPC54018.h	669;"	d
ADC_FLAGS_THCMP4_SHIFT	device/LPC54018.h	670;"	d
ADC_FLAGS_THCMP5	device/LPC54018.h	674;"	d
ADC_FLAGS_THCMP5_MASK	device/LPC54018.h	672;"	d
ADC_FLAGS_THCMP5_SHIFT	device/LPC54018.h	673;"	d
ADC_FLAGS_THCMP6	device/LPC54018.h	677;"	d
ADC_FLAGS_THCMP6_MASK	device/LPC54018.h	675;"	d
ADC_FLAGS_THCMP6_SHIFT	device/LPC54018.h	676;"	d
ADC_FLAGS_THCMP7	device/LPC54018.h	680;"	d
ADC_FLAGS_THCMP7_MASK	device/LPC54018.h	678;"	d
ADC_FLAGS_THCMP7_SHIFT	device/LPC54018.h	679;"	d
ADC_FLAGS_THCMP8	device/LPC54018.h	683;"	d
ADC_FLAGS_THCMP8_MASK	device/LPC54018.h	681;"	d
ADC_FLAGS_THCMP8_SHIFT	device/LPC54018.h	682;"	d
ADC_FLAGS_THCMP9	device/LPC54018.h	686;"	d
ADC_FLAGS_THCMP9_MASK	device/LPC54018.h	684;"	d
ADC_FLAGS_THCMP9_SHIFT	device/LPC54018.h	685;"	d
ADC_FLAGS_THCMP_INT	device/LPC54018.h	743;"	d
ADC_FLAGS_THCMP_INT_MASK	device/LPC54018.h	741;"	d
ADC_FLAGS_THCMP_INT_SHIFT	device/LPC54018.h	742;"	d
ADC_INSEL_SEL	device/LPC54018.h	364;"	d
ADC_INSEL_SEL_MASK	device/LPC54018.h	358;"	d
ADC_INSEL_SEL_SHIFT	device/LPC54018.h	359;"	d
ADC_INTEN_ADCMPINTEN0	device/LPC54018.h	619;"	d
ADC_INTEN_ADCMPINTEN0_MASK	device/LPC54018.h	611;"	d
ADC_INTEN_ADCMPINTEN0_SHIFT	device/LPC54018.h	612;"	d
ADC_INTEN_ADCMPINTEN1	device/LPC54018.h	622;"	d
ADC_INTEN_ADCMPINTEN10	device/LPC54018.h	649;"	d
ADC_INTEN_ADCMPINTEN10_MASK	device/LPC54018.h	647;"	d
ADC_INTEN_ADCMPINTEN10_SHIFT	device/LPC54018.h	648;"	d
ADC_INTEN_ADCMPINTEN11	device/LPC54018.h	652;"	d
ADC_INTEN_ADCMPINTEN11_MASK	device/LPC54018.h	650;"	d
ADC_INTEN_ADCMPINTEN11_SHIFT	device/LPC54018.h	651;"	d
ADC_INTEN_ADCMPINTEN1_MASK	device/LPC54018.h	620;"	d
ADC_INTEN_ADCMPINTEN1_SHIFT	device/LPC54018.h	621;"	d
ADC_INTEN_ADCMPINTEN2	device/LPC54018.h	625;"	d
ADC_INTEN_ADCMPINTEN2_MASK	device/LPC54018.h	623;"	d
ADC_INTEN_ADCMPINTEN2_SHIFT	device/LPC54018.h	624;"	d
ADC_INTEN_ADCMPINTEN3	device/LPC54018.h	628;"	d
ADC_INTEN_ADCMPINTEN3_MASK	device/LPC54018.h	626;"	d
ADC_INTEN_ADCMPINTEN3_SHIFT	device/LPC54018.h	627;"	d
ADC_INTEN_ADCMPINTEN4	device/LPC54018.h	631;"	d
ADC_INTEN_ADCMPINTEN4_MASK	device/LPC54018.h	629;"	d
ADC_INTEN_ADCMPINTEN4_SHIFT	device/LPC54018.h	630;"	d
ADC_INTEN_ADCMPINTEN5	device/LPC54018.h	634;"	d
ADC_INTEN_ADCMPINTEN5_MASK	device/LPC54018.h	632;"	d
ADC_INTEN_ADCMPINTEN5_SHIFT	device/LPC54018.h	633;"	d
ADC_INTEN_ADCMPINTEN6	device/LPC54018.h	637;"	d
ADC_INTEN_ADCMPINTEN6_MASK	device/LPC54018.h	635;"	d
ADC_INTEN_ADCMPINTEN6_SHIFT	device/LPC54018.h	636;"	d
ADC_INTEN_ADCMPINTEN7	device/LPC54018.h	640;"	d
ADC_INTEN_ADCMPINTEN7_MASK	device/LPC54018.h	638;"	d
ADC_INTEN_ADCMPINTEN7_SHIFT	device/LPC54018.h	639;"	d
ADC_INTEN_ADCMPINTEN8	device/LPC54018.h	643;"	d
ADC_INTEN_ADCMPINTEN8_MASK	device/LPC54018.h	641;"	d
ADC_INTEN_ADCMPINTEN8_SHIFT	device/LPC54018.h	642;"	d
ADC_INTEN_ADCMPINTEN9	device/LPC54018.h	646;"	d
ADC_INTEN_ADCMPINTEN9_MASK	device/LPC54018.h	644;"	d
ADC_INTEN_ADCMPINTEN9_SHIFT	device/LPC54018.h	645;"	d
ADC_INTEN_OVR_INTEN	device/LPC54018.h	610;"	d
ADC_INTEN_OVR_INTEN_MASK	device/LPC54018.h	601;"	d
ADC_INTEN_OVR_INTEN_SHIFT	device/LPC54018.h	602;"	d
ADC_INTEN_SEQA_INTEN	device/LPC54018.h	591;"	d
ADC_INTEN_SEQA_INTEN_MASK	device/LPC54018.h	583;"	d
ADC_INTEN_SEQA_INTEN_SHIFT	device/LPC54018.h	584;"	d
ADC_INTEN_SEQB_INTEN	device/LPC54018.h	600;"	d
ADC_INTEN_SEQB_INTEN_MASK	device/LPC54018.h	592;"	d
ADC_INTEN_SEQB_INTEN_SHIFT	device/LPC54018.h	593;"	d
ADC_RSTS	drivers/fsl_reset.h	100;"	d
ADC_SEQ_CTRL_BURST	device/LPC54018.h	407;"	d
ADC_SEQ_CTRL_BURST_MASK	device/LPC54018.h	405;"	d
ADC_SEQ_CTRL_BURST_SHIFT	device/LPC54018.h	406;"	d
ADC_SEQ_CTRL_CHANNELS	device/LPC54018.h	371;"	d
ADC_SEQ_CTRL_CHANNELS_MASK	device/LPC54018.h	369;"	d
ADC_SEQ_CTRL_CHANNELS_SHIFT	device/LPC54018.h	370;"	d
ADC_SEQ_CTRL_COUNT	device/LPC54018.h	457;"	d
ADC_SEQ_CTRL_LOWPRIO	device/LPC54018.h	421;"	d
ADC_SEQ_CTRL_LOWPRIO_MASK	device/LPC54018.h	411;"	d
ADC_SEQ_CTRL_LOWPRIO_SHIFT	device/LPC54018.h	412;"	d
ADC_SEQ_CTRL_MODE	device/LPC54018.h	438;"	d
ADC_SEQ_CTRL_MODE_MASK	device/LPC54018.h	422;"	d
ADC_SEQ_CTRL_MODE_SHIFT	device/LPC54018.h	423;"	d
ADC_SEQ_CTRL_SEQ_ENA	device/LPC54018.h	453;"	d
ADC_SEQ_CTRL_SEQ_ENA_MASK	device/LPC54018.h	439;"	d
ADC_SEQ_CTRL_SEQ_ENA_SHIFT	device/LPC54018.h	440;"	d
ADC_SEQ_CTRL_SINGLESTEP	device/LPC54018.h	410;"	d
ADC_SEQ_CTRL_SINGLESTEP_MASK	device/LPC54018.h	408;"	d
ADC_SEQ_CTRL_SINGLESTEP_SHIFT	device/LPC54018.h	409;"	d
ADC_SEQ_CTRL_START	device/LPC54018.h	404;"	d
ADC_SEQ_CTRL_START_MASK	device/LPC54018.h	402;"	d
ADC_SEQ_CTRL_START_SHIFT	device/LPC54018.h	403;"	d
ADC_SEQ_CTRL_SYNCBYPASS	device/LPC54018.h	401;"	d
ADC_SEQ_CTRL_SYNCBYPASS_MASK	device/LPC54018.h	384;"	d
ADC_SEQ_CTRL_SYNCBYPASS_SHIFT	device/LPC54018.h	385;"	d
ADC_SEQ_CTRL_TRIGGER	device/LPC54018.h	374;"	d
ADC_SEQ_CTRL_TRIGGER_MASK	device/LPC54018.h	372;"	d
ADC_SEQ_CTRL_TRIGGER_SHIFT	device/LPC54018.h	373;"	d
ADC_SEQ_CTRL_TRIGPOL	device/LPC54018.h	383;"	d
ADC_SEQ_CTRL_TRIGPOL_MASK	device/LPC54018.h	375;"	d
ADC_SEQ_CTRL_TRIGPOL_SHIFT	device/LPC54018.h	376;"	d
ADC_SEQ_GDAT_CHN	device/LPC54018.h	472;"	d
ADC_SEQ_GDAT_CHN_MASK	device/LPC54018.h	470;"	d
ADC_SEQ_GDAT_CHN_SHIFT	device/LPC54018.h	471;"	d
ADC_SEQ_GDAT_COUNT	device/LPC54018.h	482;"	d
ADC_SEQ_GDAT_DATAVALID	device/LPC54018.h	478;"	d
ADC_SEQ_GDAT_DATAVALID_MASK	device/LPC54018.h	476;"	d
ADC_SEQ_GDAT_DATAVALID_SHIFT	device/LPC54018.h	477;"	d
ADC_SEQ_GDAT_OVERRUN	device/LPC54018.h	475;"	d
ADC_SEQ_GDAT_OVERRUN_MASK	device/LPC54018.h	473;"	d
ADC_SEQ_GDAT_OVERRUN_SHIFT	device/LPC54018.h	474;"	d
ADC_SEQ_GDAT_RESULT	device/LPC54018.h	463;"	d
ADC_SEQ_GDAT_RESULT_MASK	device/LPC54018.h	461;"	d
ADC_SEQ_GDAT_RESULT_SHIFT	device/LPC54018.h	462;"	d
ADC_SEQ_GDAT_THCMPCROSS	device/LPC54018.h	469;"	d
ADC_SEQ_GDAT_THCMPCROSS_MASK	device/LPC54018.h	467;"	d
ADC_SEQ_GDAT_THCMPCROSS_SHIFT	device/LPC54018.h	468;"	d
ADC_SEQ_GDAT_THCMPRANGE	device/LPC54018.h	466;"	d
ADC_SEQ_GDAT_THCMPRANGE_MASK	device/LPC54018.h	464;"	d
ADC_SEQ_GDAT_THCMPRANGE_SHIFT	device/LPC54018.h	465;"	d
ADC_SEQ_IRQS	device/LPC54018.h	788;"	d
ADC_STARTUP_ADC_ENA	device/LPC54018.h	753;"	d
ADC_STARTUP_ADC_ENA_MASK	device/LPC54018.h	751;"	d
ADC_STARTUP_ADC_ENA_SHIFT	device/LPC54018.h	752;"	d
ADC_STARTUP_ADC_INIT	device/LPC54018.h	756;"	d
ADC_STARTUP_ADC_INIT_MASK	device/LPC54018.h	754;"	d
ADC_STARTUP_ADC_INIT_SHIFT	device/LPC54018.h	755;"	d
ADC_THCMP_IRQS	device/LPC54018.h	789;"	d
ADC_THR0_HIGH_THRHIGH	device/LPC54018.h	527;"	d
ADC_THR0_HIGH_THRHIGH_MASK	device/LPC54018.h	525;"	d
ADC_THR0_HIGH_THRHIGH_SHIFT	device/LPC54018.h	526;"	d
ADC_THR0_LOW_THRLOW	device/LPC54018.h	513;"	d
ADC_THR0_LOW_THRLOW_MASK	device/LPC54018.h	511;"	d
ADC_THR0_LOW_THRLOW_SHIFT	device/LPC54018.h	512;"	d
ADC_THR1_HIGH_THRHIGH	device/LPC54018.h	534;"	d
ADC_THR1_HIGH_THRHIGH_MASK	device/LPC54018.h	532;"	d
ADC_THR1_HIGH_THRHIGH_SHIFT	device/LPC54018.h	533;"	d
ADC_THR1_LOW_THRLOW	device/LPC54018.h	520;"	d
ADC_THR1_LOW_THRLOW_MASK	device/LPC54018.h	518;"	d
ADC_THR1_LOW_THRLOW_SHIFT	device/LPC54018.h	519;"	d
ADC_Type	device/LPC54018.h	/^} ADC_Type;$/;"	t	typeref:struct:__anon140
ADDCIADDR	lwip/src/netif/ppp/ipcp.c	844;"	d	file:
ADDCIADDRS	lwip/src/netif/ppp/ipcp.c	811;"	d	file:
ADDCICHAP	lwip/src/netif/ppp/lcp.c	851;"	d	file:
ADDCICHAR	lwip/src/netif/ppp/lcp.c	874;"	d	file:
ADDCIDNS	lwip/src/netif/ppp/ipcp.c	858;"	d	file:
ADDCIENDP	lwip/src/netif/ppp/lcp.c	880;"	d	file:
ADDCIIFACEID	lwip/src/netif/ppp/ipv6cp.c	568;"	d	file:
ADDCILONG	lwip/src/netif/ppp/lcp.c	859;"	d	file:
ADDCILQR	lwip/src/netif/ppp/lcp.c	866;"	d	file:
ADDCISHORT	lwip/src/netif/ppp/lcp.c	844;"	d	file:
ADDCIVJ	lwip/src/netif/ppp/ipcp.c	827;"	d	file:
ADDCIVJ	lwip/src/netif/ppp/ipv6cp.c	555;"	d	file:
ADDCIVOID	lwip/src/netif/ppp/lcp.c	839;"	d	file:
ADDR	device/LPC54018.h	/^  __IO uint32_t ADDR;                              \/**< Address register for automatic address matching., offset: 0x2C *\/$/;"	m	struct:__anon186
ADDR	device/LPC54018.h	/^  __IO uint32_t ADDR;                              \/**< SPIFI address register, offset: 0x8 *\/$/;"	m	struct:__anon184
ADD_TASK_WORK	source/common.h	41;"	d
ADOBE_TRANSFORM_RGB	emwin/emWin_header/GUI_JPEG_Private.h	134;"	d
ADOBE_TRANSFORM_YCBCR	emwin/emWin_header/GUI_JPEG_Private.h	135;"	d
ADR	CMSIS/core_cm4.h	/^  __IM  uint32_t ADR;                    \/*!< Offset: 0x04C (R\/ )  Auxiliary Feature Register *\/$/;"	m	struct:__anon40
AESKEY	device/LPC54018.h	/^  __I  uint32_t AESKEY[8];                         \/**< Register for reading the AES key., array offset: 0x10, array step: 0x4 *\/$/;"	m	struct:__anon168
AES_CLOCKS	drivers/fsl_clock.h	237;"	d
AES_RSTS	drivers/fsl_reset.h	104;"	d
AFC_EN	radio/sx1276-Fsk.h	/^}AFC_EN;$/;"	t	typeref:enum:__anon492
AFC_OFF	radio/sx1276-Fsk.h	/^    AFC_OFF                      =   0x00,       \/\/Disables Afc$/;"	e	enum:__anon492
AFC_ON	radio/sx1276-Fsk.h	/^    AFC_ON                       =   0x01,       \/\/Enables Afc$/;"	e	enum:__anon492
AFSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t AFSR;                   \/*!< Offset: 0x03C (R\/W)  Auxiliary Fault Status Register *\/$/;"	m	struct:__anon18
AFSR	CMSIS/core_cm4.h	/^  __IOM uint32_t AFSR;                   \/*!< Offset: 0x03C (R\/W)  Auxiliary Fault Status Register *\/$/;"	m	struct:__anon40
AF_INET	lwip/src/include/lwip/sockets.h	238;"	d
AF_INET6	lwip/src/include/lwip/sockets.h	240;"	d
AF_INET6	lwip/src/include/lwip/sockets.h	242;"	d
AF_UNSPEC	lwip/src/include/lwip/sockets.h	237;"	d
AHBCLKCTRL	device/LPC54018.h	/^  __IO uint32_t AHBCLKCTRL[3];                     \/**< AHB Clock control n, array offset: 0x200, array step: 0x4 *\/$/;"	m	struct:__anon185
AHBCLKCTRLCLR	device/LPC54018.h	/^  __O  uint32_t AHBCLKCTRLCLR[3];                  \/**< Clear bits in AHBCLKCTRLn, array offset: 0x240, array step: 0x4 *\/$/;"	m	struct:__anon185
AHBCLKCTRLSET	device/LPC54018.h	/^  __O  uint32_t AHBCLKCTRLSET[3];                  \/**< Set bits in AHBCLKCTRLn, array offset: 0x220, array step: 0x4 *\/$/;"	m	struct:__anon185
AHBCLKDIV	device/LPC54018.h	/^  __IO uint32_t AHBCLKDIV;                         \/**< AHB clock divider, offset: 0x380 *\/$/;"	m	struct:__anon185
AHBMATPRIO	device/LPC54018.h	/^  __IO uint32_t AHBMATPRIO;                        \/**< AHB multilayer matrix priority control, offset: 0x10 *\/$/;"	m	struct:__anon185
AHBPCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t AHBPCR;                 \/*!< Offset: 0x298 (R\/W)  AHBP Control Register *\/$/;"	m	struct:__anon18
AHBSCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t AHBSCR;                 \/*!< Offset: 0x2A0 (R\/W)  AHB Slave Control Register *\/$/;"	m	struct:__anon18
AHB_CLK_CTRL0	drivers/fsl_clock.h	298;"	d
AHB_CLK_CTRL1	drivers/fsl_clock.h	299;"	d
AHB_CLK_CTRL2	drivers/fsl_clock.h	300;"	d
AIRCR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t AIRCR;                  \/*!< Offset: 0x00C (R\/W)  Application Interrupt and Reset Control Register *\/$/;"	m	struct:__anon122
AIRCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t AIRCR;                  \/*!< Offset: 0x00C (R\/W)  Application Interrupt and Reset Control Register *\/$/;"	m	struct:__anon18
AIRCR	CMSIS/core_cm4.h	/^  __IOM uint32_t AIRCR;                  \/*!< Offset: 0x00C (R\/W)  Application Interrupt and Reset Control Register *\/$/;"	m	struct:__anon40
AI_ADDRCONFIG	lwip/src/include/lwip/netdb.h	88;"	d
AI_ALL	lwip/src/include/lwip/netdb.h	87;"	d
AI_CANONNAME	lwip/src/include/lwip/netdb.h	83;"	d
AI_NUMERICHOST	lwip/src/include/lwip/netdb.h	84;"	d
AI_NUMERICSERV	lwip/src/include/lwip/netdb.h	85;"	d
AI_PASSIVE	lwip/src/include/lwip/netdb.h	82;"	d
AI_V4MAPPED	lwip/src/include/lwip/netdb.h	86;"	d
ALIAS	device/LPC54018.h	/^  __O  uint32_t ALIAS[7];                          \/**< Alias register, array offset: 0x24, array step: 0x4 *\/$/;"	m	struct:__anon178
ALIAS	startup/startup_lpc54018.c	34;"	d	file:
ALIGN4	CMSIS/arm_math.h	389;"	d
ALIGN4	CMSIS/arm_math.h	392;"	d
ALIGN4	CMSIS/arm_math.h	394;"	d
ALIGN_D	lwip/src/include/lwip/sockets.h	156;"	d
ALIGN_H	lwip/src/include/lwip/sockets.h	155;"	d
ALPHA	codec2/lpc.c	31;"	d	file:
ALTCP_TCP_ASSERT_CONN	lwip/src/core/altcp_tcp.c	56;"	d	file:
ALTCP_TCP_ASSERT_CONN_PCB	lwip/src/core/altcp_tcp.c	59;"	d	file:
ANIM_ACCEL	emwin/emWin_header/GUI.h	1176;"	d
ANIM_ACCELDECEL	emwin/emWin_header/GUI.h	1178;"	d
ANIM_DECEL	emwin/emWin_header/GUI.h	1177;"	d
ANIM_LINEAR	emwin/emWin_header/GUI.h	1175;"	d
ANNOUNCE_INTERVAL	lwip/src/include/lwip/prot/autoip.h	60;"	d
ANNOUNCE_NUM	lwip/src/include/lwip/prot/autoip.h	59;"	d
ANNOUNCE_WAIT	lwip/src/include/lwip/prot/autoip.h	61;"	d
APIFILES	lwip/src/Filelists.mk	/^APIFILES=$(LWIPDIR)\/api\/api_lib.c \\$/;"	m
API_EVENT	lwip/src/include/lwip/api.h	301;"	d
API_EXPR_DEREF	lwip/src/include/lwip/priv/tcpip_priv.h	79;"	d
API_EXPR_DEREF	lwip/src/include/lwip/priv/tcpip_priv.h	92;"	d
API_EXPR_REF	lwip/src/include/lwip/priv/tcpip_priv.h	73;"	d
API_EXPR_REF	lwip/src/include/lwip/priv/tcpip_priv.h	90;"	d
API_EXPR_REF_SEM	lwip/src/include/lwip/priv/tcpip_priv.h	75;"	d
API_EXPR_REF_SEM	lwip/src/include/lwip/priv/tcpip_priv.h	77;"	d
API_EXPR_REF_SEM	lwip/src/include/lwip/priv/tcpip_priv.h	91;"	d
API_LIB_DEBUG	lwip/src/include/lwip/opt.h	3281;"	d
API_MSG_DEBUG	lwip/src/include/lwip/opt.h	3288;"	d
API_MSG_M_DEF	lwip/src/include/lwip/priv/tcpip_priv.h	80;"	d
API_MSG_M_DEF	lwip/src/include/lwip/priv/tcpip_priv.h	93;"	d
API_MSG_M_DEF_C	lwip/src/include/lwip/priv/tcpip_priv.h	81;"	d
API_MSG_M_DEF_C	lwip/src/include/lwip/priv/tcpip_priv.h	94;"	d
API_MSG_M_DEF_SEM	lwip/src/include/lwip/priv/api_msg.h	60;"	d
API_MSG_M_DEF_SEM	lwip/src/include/lwip/priv/api_msg.h	62;"	d
API_MSG_M_DEF_SEM	lwip/src/include/lwip/priv/api_msg.h	65;"	d
API_MSG_VAR_ALLOC	lwip/src/api/api_lib.c	80;"	d	file:
API_MSG_VAR_ALLOC_ACCEPT	lwip/src/api/api_lib.c	87;"	d	file:
API_MSG_VAR_ALLOC_ACCEPT	lwip/src/api/api_lib.c	90;"	d	file:
API_MSG_VAR_ALLOC_RETURN_NULL	lwip/src/api/api_lib.c	81;"	d	file:
API_MSG_VAR_DECLARE	lwip/src/api/api_lib.c	79;"	d	file:
API_MSG_VAR_FREE	lwip/src/api/api_lib.c	82;"	d	file:
API_MSG_VAR_FREE_ACCEPT	lwip/src/api/api_lib.c	88;"	d	file:
API_MSG_VAR_FREE_ACCEPT	lwip/src/api/api_lib.c	91;"	d	file:
API_MSG_VAR_REF	lwip/src/api/api_lib.c	78;"	d	file:
API_NAME	emwin/emWin_header/GUI_SetOrientationCX.h	/^const GUI_ORIENTATION_API API_NAME = {$/;"	v
API_SELECT_CB_VAR_ALLOC	lwip/src/api/sockets.c	85;"	d	file:
API_SELECT_CB_VAR_DECLARE	lwip/src/api/sockets.c	84;"	d	file:
API_SELECT_CB_VAR_FREE	lwip/src/api/sockets.c	86;"	d	file:
API_SELECT_CB_VAR_REF	lwip/src/api/sockets.c	83;"	d	file:
API_VAR_ALLOC	lwip/src/include/lwip/priv/tcpip_priv.h	64;"	d
API_VAR_ALLOC	lwip/src/include/lwip/priv/tcpip_priv.h	86;"	d
API_VAR_ALLOC_EXT	lwip/src/include/lwip/priv/tcpip_priv.h	58;"	d
API_VAR_ALLOC_EXT	lwip/src/include/lwip/priv/tcpip_priv.h	85;"	d
API_VAR_ALLOC_POOL	lwip/src/include/lwip/priv/tcpip_priv.h	65;"	d
API_VAR_ALLOC_POOL	lwip/src/include/lwip/priv/tcpip_priv.h	87;"	d
API_VAR_DECLARE	lwip/src/include/lwip/priv/tcpip_priv.h	57;"	d
API_VAR_DECLARE	lwip/src/include/lwip/priv/tcpip_priv.h	84;"	d
API_VAR_FREE	lwip/src/include/lwip/priv/tcpip_priv.h	71;"	d
API_VAR_FREE	lwip/src/include/lwip/priv/tcpip_priv.h	88;"	d
API_VAR_FREE_POOL	lwip/src/include/lwip/priv/tcpip_priv.h	72;"	d
API_VAR_FREE_POOL	lwip/src/include/lwip/priv/tcpip_priv.h	89;"	d
API_VAR_REF	lwip/src/include/lwip/priv/tcpip_priv.h	56;"	d
API_VAR_REF	lwip/src/include/lwip/priv/tcpip_priv.h	83;"	d
APPTask	vcom/composite.c	/^void APPTask(void *handle)$/;"	f
APP_DEVFUNC_INITORIENTATION	emwin/emWin_header/GUIDRV_S1D13781_Private.h	112;"	d
APSR_C_Msk	CMSIS/core_armv8mbl.h	254;"	d
APSR_C_Msk	CMSIS/core_armv8mml.h	338;"	d
APSR_C_Msk	CMSIS/core_cm4.h	283;"	d
APSR_C_Pos	CMSIS/core_armv8mbl.h	253;"	d
APSR_C_Pos	CMSIS/core_armv8mml.h	337;"	d
APSR_C_Pos	CMSIS/core_cm4.h	282;"	d
APSR_GE_Msk	CMSIS/core_armv8mml.h	347;"	d
APSR_GE_Msk	CMSIS/core_cm4.h	292;"	d
APSR_GE_Pos	CMSIS/core_armv8mml.h	346;"	d
APSR_GE_Pos	CMSIS/core_cm4.h	291;"	d
APSR_N_Msk	CMSIS/core_armv8mbl.h	248;"	d
APSR_N_Msk	CMSIS/core_armv8mml.h	332;"	d
APSR_N_Msk	CMSIS/core_cm4.h	277;"	d
APSR_N_Pos	CMSIS/core_armv8mbl.h	247;"	d
APSR_N_Pos	CMSIS/core_armv8mml.h	331;"	d
APSR_N_Pos	CMSIS/core_cm4.h	276;"	d
APSR_Q_Msk	CMSIS/core_armv8mml.h	344;"	d
APSR_Q_Msk	CMSIS/core_cm4.h	289;"	d
APSR_Q_Pos	CMSIS/core_armv8mml.h	343;"	d
APSR_Q_Pos	CMSIS/core_cm4.h	288;"	d
APSR_Type	CMSIS/core_armv8mbl.h	/^} APSR_Type;$/;"	t	typeref:union:__anon113
APSR_Type	CMSIS/core_armv8mml.h	/^} APSR_Type;$/;"	t	typeref:union:__anon9
APSR_Type	CMSIS/core_cm4.h	/^} APSR_Type;$/;"	t	typeref:union:__anon31
APSR_V_Msk	CMSIS/core_armv8mbl.h	257;"	d
APSR_V_Msk	CMSIS/core_armv8mml.h	341;"	d
APSR_V_Msk	CMSIS/core_cm4.h	286;"	d
APSR_V_Pos	CMSIS/core_armv8mbl.h	256;"	d
APSR_V_Pos	CMSIS/core_armv8mml.h	340;"	d
APSR_V_Pos	CMSIS/core_cm4.h	285;"	d
APSR_Z_Msk	CMSIS/core_armv8mbl.h	251;"	d
APSR_Z_Msk	CMSIS/core_armv8mml.h	335;"	d
APSR_Z_Msk	CMSIS/core_cm4.h	280;"	d
APSR_Z_Pos	CMSIS/core_armv8mbl.h	250;"	d
APSR_Z_Pos	CMSIS/core_armv8mml.h	334;"	d
APSR_Z_Pos	CMSIS/core_cm4.h	279;"	d
ARMBITREVINDEXTABLE_1024_TABLE_LENGTH	CMSIS/arm_common_tables.h	81;"	d
ARMBITREVINDEXTABLE_128_TABLE_LENGTH	CMSIS/arm_common_tables.h	78;"	d
ARMBITREVINDEXTABLE_16_TABLE_LENGTH	CMSIS/arm_common_tables.h	75;"	d
ARMBITREVINDEXTABLE_2048_TABLE_LENGTH	CMSIS/arm_common_tables.h	82;"	d
ARMBITREVINDEXTABLE_256_TABLE_LENGTH	CMSIS/arm_common_tables.h	79;"	d
ARMBITREVINDEXTABLE_32_TABLE_LENGTH	CMSIS/arm_common_tables.h	76;"	d
ARMBITREVINDEXTABLE_4096_TABLE_LENGTH	CMSIS/arm_common_tables.h	83;"	d
ARMBITREVINDEXTABLE_512_TABLE_LENGTH	CMSIS/arm_common_tables.h	80;"	d
ARMBITREVINDEXTABLE_64_TABLE_LENGTH	CMSIS/arm_common_tables.h	77;"	d
ARMBITREVINDEXTABLE_FIXED_1024_TABLE_LENGTH	CMSIS/arm_common_tables.h	102;"	d
ARMBITREVINDEXTABLE_FIXED_128_TABLE_LENGTH	CMSIS/arm_common_tables.h	99;"	d
ARMBITREVINDEXTABLE_FIXED_16_TABLE_LENGTH	CMSIS/arm_common_tables.h	96;"	d
ARMBITREVINDEXTABLE_FIXED_2048_TABLE_LENGTH	CMSIS/arm_common_tables.h	103;"	d
ARMBITREVINDEXTABLE_FIXED_256_TABLE_LENGTH	CMSIS/arm_common_tables.h	100;"	d
ARMBITREVINDEXTABLE_FIXED_32_TABLE_LENGTH	CMSIS/arm_common_tables.h	97;"	d
ARMBITREVINDEXTABLE_FIXED_4096_TABLE_LENGTH	CMSIS/arm_common_tables.h	104;"	d
ARMBITREVINDEXTABLE_FIXED_512_TABLE_LENGTH	CMSIS/arm_common_tables.h	101;"	d
ARMBITREVINDEXTABLE_FIXED_64_TABLE_LENGTH	CMSIS/arm_common_tables.h	98;"	d
ARMCC_SECTION	drivers/fsl_i2c_cmsis.c	38;"	d	file:
ARMCC_SECTION	drivers/fsl_spi_cmsis.c	42;"	d	file:
ARMTRACECLKDIV	device/LPC54018.h	/^  __IO uint32_t ARMTRACECLKDIV;                    \/**< ARM Trace clock divider, offset: 0x304 *\/$/;"	m	struct:__anon185
ARM_DRIVER_ERROR	CMSIS_driver/Driver_Common.h	53;"	d
ARM_DRIVER_ERROR_BUSY	CMSIS_driver/Driver_Common.h	54;"	d
ARM_DRIVER_ERROR_PARAMETER	CMSIS_driver/Driver_Common.h	57;"	d
ARM_DRIVER_ERROR_SPECIFIC	CMSIS_driver/Driver_Common.h	58;"	d
ARM_DRIVER_ERROR_TIMEOUT	CMSIS_driver/Driver_Common.h	55;"	d
ARM_DRIVER_ERROR_UNSUPPORTED	CMSIS_driver/Driver_Common.h	56;"	d
ARM_DRIVER_I2C	CMSIS_driver/Driver_I2C.h	/^} const ARM_DRIVER_I2C;$/;"	t
ARM_DRIVER_OK	CMSIS_driver/Driver_Common.h	52;"	d
ARM_DRIVER_SPI	CMSIS_driver/Driver_SPI.h	/^} const ARM_DRIVER_SPI;$/;"	t
ARM_DRIVER_VERSION	CMSIS_driver/Driver_Common.h	/^} ARM_DRIVER_VERSION;$/;"	t	typeref:struct:_ARM_DRIVER_VERSION
ARM_DRIVER_VERSION_MAJOR_MINOR	CMSIS_driver/Driver_Common.h	41;"	d
ARM_I2C_ABORT_TRANSFER	CMSIS_driver/Driver_I2C.h	71;"	d
ARM_I2C_ADDRESS_10BIT	CMSIS_driver/Driver_I2C.h	82;"	d
ARM_I2C_ADDRESS_GC	CMSIS_driver/Driver_I2C.h	83;"	d
ARM_I2C_API_VERSION	CMSIS_driver/Driver_I2C.h	63;"	d
ARM_I2C_BUS_CLEAR	CMSIS_driver/Driver_I2C.h	70;"	d
ARM_I2C_BUS_SPEED	CMSIS_driver/Driver_I2C.h	69;"	d
ARM_I2C_BUS_SPEED_FAST	CMSIS_driver/Driver_I2C.h	75;"	d
ARM_I2C_BUS_SPEED_FAST_PLUS	CMSIS_driver/Driver_I2C.h	76;"	d
ARM_I2C_BUS_SPEED_HIGH	CMSIS_driver/Driver_I2C.h	77;"	d
ARM_I2C_BUS_SPEED_STANDARD	CMSIS_driver/Driver_I2C.h	74;"	d
ARM_I2C_CAPABILITIES	CMSIS_driver/Driver_I2C.h	/^} ARM_I2C_CAPABILITIES;$/;"	t	typeref:struct:_ARM_I2C_CAPABILITIES
ARM_I2C_DRV_VERSION	drivers/fsl_i2c_cmsis.c	31;"	d	file:
ARM_I2C_EVENT_ADDRESS_NACK	CMSIS_driver/Driver_I2C.h	105;"	d
ARM_I2C_EVENT_ARBITRATION_LOST	CMSIS_driver/Driver_I2C.h	107;"	d
ARM_I2C_EVENT_BUS_CLEAR	CMSIS_driver/Driver_I2C.h	109;"	d
ARM_I2C_EVENT_BUS_ERROR	CMSIS_driver/Driver_I2C.h	108;"	d
ARM_I2C_EVENT_GENERAL_CALL	CMSIS_driver/Driver_I2C.h	106;"	d
ARM_I2C_EVENT_SLAVE_RECEIVE	CMSIS_driver/Driver_I2C.h	104;"	d
ARM_I2C_EVENT_SLAVE_TRANSMIT	CMSIS_driver/Driver_I2C.h	103;"	d
ARM_I2C_EVENT_TRANSFER_DONE	CMSIS_driver/Driver_I2C.h	101;"	d
ARM_I2C_EVENT_TRANSFER_INCOMPLETE	CMSIS_driver/Driver_I2C.h	102;"	d
ARM_I2C_OWN_ADDRESS	CMSIS_driver/Driver_I2C.h	68;"	d
ARM_I2C_STATUS	CMSIS_driver/Driver_I2C.h	/^} ARM_I2C_STATUS;$/;"	t	typeref:struct:_ARM_I2C_STATUS
ARM_I2C_SignalEvent_t	CMSIS_driver/Driver_I2C.h	/^typedef void (*ARM_I2C_SignalEvent_t) (uint32_t event);  \/\/\/< Pointer to \\ref ARM_I2C_SignalEvent : Signal I2C Event.$/;"	t
ARM_MATH_ARGUMENT_ERROR	CMSIS/arm_math.h	/^    ARM_MATH_ARGUMENT_ERROR = -1,        \/**< One or more arguments are incorrect *\/$/;"	e	enum:__anon50
ARM_MATH_CM0_FAMILY	CMSIS/arm_math.h	331;"	d
ARM_MATH_CM0_FAMILY	CMSIS/arm_math.h	334;"	d
ARM_MATH_CM0_FAMILY	CMSIS/arm_math.h	337;"	d
ARM_MATH_DSP	CMSIS/arm_math.h	320;"	d
ARM_MATH_DSP	CMSIS/arm_math.h	323;"	d
ARM_MATH_DSP	CMSIS/arm_math.h	326;"	d
ARM_MATH_DSP	CMSIS/arm_math.h	341;"	d
ARM_MATH_LENGTH_ERROR	CMSIS/arm_math.h	/^    ARM_MATH_LENGTH_ERROR = -2,          \/**< Length of data buffer is incorrect *\/$/;"	e	enum:__anon50
ARM_MATH_NANINF	CMSIS/arm_math.h	/^    ARM_MATH_NANINF = -4,                \/**< Not-a-number (NaN) or infinity is generated *\/$/;"	e	enum:__anon50
ARM_MATH_SINGULAR	CMSIS/arm_math.h	/^    ARM_MATH_SINGULAR = -5,              \/**< Generated by matrix inversion if the input matrix is singular and cannot be inverted. *\/$/;"	e	enum:__anon50
ARM_MATH_SIZE_MISMATCH	CMSIS/arm_math.h	/^    ARM_MATH_SIZE_MISMATCH = -3,         \/**< Size of matrices is not compatible with the operation. *\/$/;"	e	enum:__anon50
ARM_MATH_SUCCESS	CMSIS/arm_math.h	/^    ARM_MATH_SUCCESS = 0,                \/**< No error *\/$/;"	e	enum:__anon50
ARM_MATH_TEST_FAILURE	CMSIS/arm_math.h	/^    ARM_MATH_TEST_FAILURE = -6           \/**< Test Failed  *\/$/;"	e	enum:__anon50
ARM_MPU_AP_	CMSIS/mpu_armv8.h	80;"	d
ARM_MPU_AP_FULL	CMSIS/mpu_armv7.h	66;"	d
ARM_MPU_AP_NONE	CMSIS/mpu_armv7.h	63;"	d
ARM_MPU_AP_PRIV	CMSIS/mpu_armv7.h	64;"	d
ARM_MPU_AP_PRO	CMSIS/mpu_armv7.h	67;"	d
ARM_MPU_AP_RO	CMSIS/mpu_armv7.h	68;"	d
ARM_MPU_AP_URO	CMSIS/mpu_armv7.h	65;"	d
ARM_MPU_ARMV7_H	CMSIS/mpu_armv7.h	32;"	d
ARM_MPU_ARMV8_H	CMSIS/mpu_armv8.h	32;"	d
ARM_MPU_ATTR	CMSIS/mpu_armv8.h	65;"	d
ARM_MPU_ATTR_DEVICE	CMSIS/mpu_armv8.h	35;"	d
ARM_MPU_ATTR_DEVICE_GRE	CMSIS/mpu_armv8.h	59;"	d
ARM_MPU_ATTR_DEVICE_nGRE	CMSIS/mpu_armv8.h	56;"	d
ARM_MPU_ATTR_DEVICE_nGnRE	CMSIS/mpu_armv8.h	53;"	d
ARM_MPU_ATTR_DEVICE_nGnRnE	CMSIS/mpu_armv8.h	50;"	d
ARM_MPU_ATTR_MEMORY_	CMSIS/mpu_armv8.h	46;"	d
ARM_MPU_ATTR_NON_CACHEABLE	CMSIS/mpu_armv8.h	38;"	d
ARM_MPU_ClrRegion	CMSIS/mpu_armv7.h	/^__STATIC_INLINE void ARM_MPU_ClrRegion(uint32_t rnr)$/;"	f
ARM_MPU_ClrRegion	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_ClrRegion(uint32_t rnr)$/;"	f
ARM_MPU_ClrRegionEx	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_ClrRegionEx(MPU_Type* mpu, uint32_t rnr)$/;"	f
ARM_MPU_ClrRegion_NS	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_ClrRegion_NS(uint32_t rnr)$/;"	f
ARM_MPU_Disable	CMSIS/mpu_armv7.h	/^__STATIC_INLINE void ARM_MPU_Disable(void)$/;"	f
ARM_MPU_Disable	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_Disable(void)$/;"	f
ARM_MPU_Disable_NS	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_Disable_NS(void)$/;"	f
ARM_MPU_Enable	CMSIS/mpu_armv7.h	/^__STATIC_INLINE void ARM_MPU_Enable(uint32_t MPU_Control)$/;"	f
ARM_MPU_Enable	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_Enable(uint32_t MPU_Control)$/;"	f
ARM_MPU_Enable_NS	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_Enable_NS(uint32_t MPU_Control)$/;"	f
ARM_MPU_Load	CMSIS/mpu_armv7.h	/^__STATIC_INLINE void ARM_MPU_Load(ARM_MPU_Region_t const* table, uint32_t cnt) $/;"	f
ARM_MPU_Load	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_Load(uint32_t rnr, ARM_MPU_Region_t const* table, uint32_t cnt) $/;"	f
ARM_MPU_LoadEx	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_LoadEx(MPU_Type* mpu, uint32_t rnr, ARM_MPU_Region_t const* table, uint32_t cnt) $/;"	f
ARM_MPU_Load_NS	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_Load_NS(uint32_t rnr, ARM_MPU_Region_t const* table, uint32_t cnt) $/;"	f
ARM_MPU_RASR	CMSIS/mpu_armv7.h	92;"	d
ARM_MPU_RBAR	CMSIS/mpu_armv7.h	75;"	d
ARM_MPU_RBAR	CMSIS/mpu_armv8.h	89;"	d
ARM_MPU_REGION_SIZE_128B	CMSIS/mpu_armv7.h	36;"	d
ARM_MPU_REGION_SIZE_128KB	CMSIS/mpu_armv7.h	46;"	d
ARM_MPU_REGION_SIZE_128MB	CMSIS/mpu_armv7.h	56;"	d
ARM_MPU_REGION_SIZE_16KB	CMSIS/mpu_armv7.h	43;"	d
ARM_MPU_REGION_SIZE_16MB	CMSIS/mpu_armv7.h	53;"	d
ARM_MPU_REGION_SIZE_1GB	CMSIS/mpu_armv7.h	59;"	d
ARM_MPU_REGION_SIZE_1KB	CMSIS/mpu_armv7.h	39;"	d
ARM_MPU_REGION_SIZE_1MB	CMSIS/mpu_armv7.h	49;"	d
ARM_MPU_REGION_SIZE_256B	CMSIS/mpu_armv7.h	37;"	d
ARM_MPU_REGION_SIZE_256KB	CMSIS/mpu_armv7.h	47;"	d
ARM_MPU_REGION_SIZE_256MB	CMSIS/mpu_armv7.h	57;"	d
ARM_MPU_REGION_SIZE_2GB	CMSIS/mpu_armv7.h	60;"	d
ARM_MPU_REGION_SIZE_2KB	CMSIS/mpu_armv7.h	40;"	d
ARM_MPU_REGION_SIZE_2MB	CMSIS/mpu_armv7.h	50;"	d
ARM_MPU_REGION_SIZE_32B	CMSIS/mpu_armv7.h	34;"	d
ARM_MPU_REGION_SIZE_32KB	CMSIS/mpu_armv7.h	44;"	d
ARM_MPU_REGION_SIZE_32MB	CMSIS/mpu_armv7.h	54;"	d
ARM_MPU_REGION_SIZE_4GB	CMSIS/mpu_armv7.h	61;"	d
ARM_MPU_REGION_SIZE_4KB	CMSIS/mpu_armv7.h	41;"	d
ARM_MPU_REGION_SIZE_4MB	CMSIS/mpu_armv7.h	51;"	d
ARM_MPU_REGION_SIZE_512B	CMSIS/mpu_armv7.h	38;"	d
ARM_MPU_REGION_SIZE_512KB	CMSIS/mpu_armv7.h	48;"	d
ARM_MPU_REGION_SIZE_512MB	CMSIS/mpu_armv7.h	58;"	d
ARM_MPU_REGION_SIZE_64B	CMSIS/mpu_armv7.h	35;"	d
ARM_MPU_REGION_SIZE_64KB	CMSIS/mpu_armv7.h	45;"	d
ARM_MPU_REGION_SIZE_64MB	CMSIS/mpu_armv7.h	55;"	d
ARM_MPU_REGION_SIZE_8KB	CMSIS/mpu_armv7.h	42;"	d
ARM_MPU_REGION_SIZE_8MB	CMSIS/mpu_armv7.h	52;"	d
ARM_MPU_RLAR	CMSIS/mpu_armv8.h	99;"	d
ARM_MPU_Region_t	CMSIS/mpu_armv7.h	/^} ARM_MPU_Region_t;$/;"	t	typeref:struct:__anon112
ARM_MPU_Region_t	CMSIS/mpu_armv8.h	/^} ARM_MPU_Region_t;$/;"	t	typeref:struct:__anon8
ARM_MPU_SH_INNER	CMSIS/mpu_armv8.h	74;"	d
ARM_MPU_SH_NON	CMSIS/mpu_armv8.h	68;"	d
ARM_MPU_SH_OUTER	CMSIS/mpu_armv8.h	71;"	d
ARM_MPU_SetMemAttr	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_SetMemAttr(uint8_t idx, uint8_t attr)$/;"	f
ARM_MPU_SetMemAttrEx	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_SetMemAttrEx(MPU_Type* mpu, uint8_t idx, uint8_t attr)$/;"	f
ARM_MPU_SetMemAttr_NS	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_SetMemAttr_NS(uint8_t idx, uint8_t attr)$/;"	f
ARM_MPU_SetRegion	CMSIS/mpu_armv7.h	/^__STATIC_INLINE void ARM_MPU_SetRegion(uint32_t rbar, uint32_t rasr)$/;"	f
ARM_MPU_SetRegion	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_SetRegion(uint32_t rnr, uint32_t rbar, uint32_t rlar)$/;"	f
ARM_MPU_SetRegionEx	CMSIS/mpu_armv7.h	/^__STATIC_INLINE void ARM_MPU_SetRegionEx(uint32_t rnr, uint32_t rbar, uint32_t rasr)$/;"	f
ARM_MPU_SetRegionEx	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_SetRegionEx(MPU_Type* mpu, uint32_t rnr, uint32_t rbar, uint32_t rlar)$/;"	f
ARM_MPU_SetRegion_NS	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void ARM_MPU_SetRegion_NS(uint32_t rnr, uint32_t rbar, uint32_t rlar)$/;"	f
ARM_POWER_FULL	CMSIS_driver/Driver_Common.h	/^  ARM_POWER_FULL                        \/\/\/< Power on: full operation at maximum performance$/;"	e	enum:_ARM_POWER_STATE
ARM_POWER_LOW	CMSIS_driver/Driver_Common.h	/^  ARM_POWER_LOW,                        \/\/\/< Low Power mode: retain state, detect and signal wake-up events$/;"	e	enum:_ARM_POWER_STATE
ARM_POWER_OFF	CMSIS_driver/Driver_Common.h	/^  ARM_POWER_OFF,                        \/\/\/< Power off: no operation possible$/;"	e	enum:_ARM_POWER_STATE
ARM_POWER_STATE	CMSIS_driver/Driver_Common.h	/^} ARM_POWER_STATE;$/;"	t	typeref:enum:_ARM_POWER_STATE
ARM_SPI_ABORT_TRANSFER	CMSIS_driver/Driver_SPI.h	111;"	d
ARM_SPI_API_VERSION	CMSIS_driver/Driver_SPI.h	57;"	d
ARM_SPI_BIT_ORDER_Msk	CMSIS_driver/Driver_SPI.h	89;"	d
ARM_SPI_BIT_ORDER_Pos	CMSIS_driver/Driver_SPI.h	88;"	d
ARM_SPI_CAPABILITIES	CMSIS_driver/Driver_SPI.h	/^} ARM_SPI_CAPABILITIES;$/;"	t	typeref:struct:_ARM_SPI_CAPABILITIES
ARM_SPI_CONTROL_Msk	CMSIS_driver/Driver_SPI.h	63;"	d
ARM_SPI_CONTROL_Pos	CMSIS_driver/Driver_SPI.h	62;"	d
ARM_SPI_CONTROL_SS	CMSIS_driver/Driver_SPI.h	110;"	d
ARM_SPI_CPOL0_CPHA0	CMSIS_driver/Driver_SPI.h	75;"	d
ARM_SPI_CPOL0_CPHA1	CMSIS_driver/Driver_SPI.h	76;"	d
ARM_SPI_CPOL1_CPHA0	CMSIS_driver/Driver_SPI.h	77;"	d
ARM_SPI_CPOL1_CPHA1	CMSIS_driver/Driver_SPI.h	78;"	d
ARM_SPI_DATA_BITS	CMSIS_driver/Driver_SPI.h	85;"	d
ARM_SPI_DATA_BITS_Msk	CMSIS_driver/Driver_SPI.h	84;"	d
ARM_SPI_DATA_BITS_Pos	CMSIS_driver/Driver_SPI.h	83;"	d
ARM_SPI_DRV_VERSION	drivers/fsl_spi_cmsis.c	31;"	d	file:
ARM_SPI_ERROR_BIT_ORDER	CMSIS_driver/Driver_SPI.h	123;"	d
ARM_SPI_ERROR_DATA_BITS	CMSIS_driver/Driver_SPI.h	122;"	d
ARM_SPI_ERROR_FRAME_FORMAT	CMSIS_driver/Driver_SPI.h	121;"	d
ARM_SPI_ERROR_MODE	CMSIS_driver/Driver_SPI.h	120;"	d
ARM_SPI_ERROR_SS_MODE	CMSIS_driver/Driver_SPI.h	124;"	d
ARM_SPI_EVENT_DATA_LOST	CMSIS_driver/Driver_SPI.h	140;"	d
ARM_SPI_EVENT_MODE_FAULT	CMSIS_driver/Driver_SPI.h	141;"	d
ARM_SPI_EVENT_TRANSFER_COMPLETE	CMSIS_driver/Driver_SPI.h	139;"	d
ARM_SPI_FRAME_FORMAT_Msk	CMSIS_driver/Driver_SPI.h	74;"	d
ARM_SPI_FRAME_FORMAT_Pos	CMSIS_driver/Driver_SPI.h	73;"	d
ARM_SPI_GET_BUS_SPEED	CMSIS_driver/Driver_SPI.h	108;"	d
ARM_SPI_LSB_MSB	CMSIS_driver/Driver_SPI.h	91;"	d
ARM_SPI_MICROWIRE	CMSIS_driver/Driver_SPI.h	80;"	d
ARM_SPI_MODE_INACTIVE	CMSIS_driver/Driver_SPI.h	66;"	d
ARM_SPI_MODE_MASTER	CMSIS_driver/Driver_SPI.h	67;"	d
ARM_SPI_MODE_MASTER_SIMPLEX	CMSIS_driver/Driver_SPI.h	69;"	d
ARM_SPI_MODE_SLAVE	CMSIS_driver/Driver_SPI.h	68;"	d
ARM_SPI_MODE_SLAVE_SIMPLEX	CMSIS_driver/Driver_SPI.h	70;"	d
ARM_SPI_MSB_LSB	CMSIS_driver/Driver_SPI.h	90;"	d
ARM_SPI_SET_BUS_SPEED	CMSIS_driver/Driver_SPI.h	107;"	d
ARM_SPI_SET_DEFAULT_TX_VALUE	CMSIS_driver/Driver_SPI.h	109;"	d
ARM_SPI_SS_ACTIVE	CMSIS_driver/Driver_SPI.h	116;"	d
ARM_SPI_SS_INACTIVE	CMSIS_driver/Driver_SPI.h	115;"	d
ARM_SPI_SS_MASTER_HW_INPUT	CMSIS_driver/Driver_SPI.h	99;"	d
ARM_SPI_SS_MASTER_HW_OUTPUT	CMSIS_driver/Driver_SPI.h	98;"	d
ARM_SPI_SS_MASTER_MODE_Msk	CMSIS_driver/Driver_SPI.h	95;"	d
ARM_SPI_SS_MASTER_MODE_Pos	CMSIS_driver/Driver_SPI.h	94;"	d
ARM_SPI_SS_MASTER_SW	CMSIS_driver/Driver_SPI.h	97;"	d
ARM_SPI_SS_MASTER_UNUSED	CMSIS_driver/Driver_SPI.h	96;"	d
ARM_SPI_SS_SLAVE_HW	CMSIS_driver/Driver_SPI.h	102;"	d
ARM_SPI_SS_SLAVE_MODE_Msk	CMSIS_driver/Driver_SPI.h	101;"	d
ARM_SPI_SS_SLAVE_MODE_Pos	CMSIS_driver/Driver_SPI.h	100;"	d
ARM_SPI_SS_SLAVE_SW	CMSIS_driver/Driver_SPI.h	103;"	d
ARM_SPI_STATUS	CMSIS_driver/Driver_SPI.h	/^} ARM_SPI_STATUS;$/;"	t	typeref:struct:_ARM_SPI_STATUS
ARM_SPI_SignalEvent_t	CMSIS_driver/Driver_SPI.h	/^typedef void (*ARM_SPI_SignalEvent_t) (uint32_t event);  \/\/\/< Pointer to \\ref ARM_SPI_SignalEvent : Signal SPI Event.$/;"	t
ARM_SPI_TI_SSI	CMSIS_driver/Driver_SPI.h	79;"	d
ARP_AGE_REREQUEST_USED_BROADCAST	lwip/src/core/ipv4/etharp.c	67;"	d	file:
ARP_AGE_REREQUEST_USED_UNICAST	lwip/src/core/ipv4/etharp.c	66;"	d	file:
ARP_MAXAGE	lwip/src/include/lwip/opt.h	644;"	d
ARP_MAXPENDING	lwip/src/core/ipv4/etharp.c	76;"	d	file:
ARP_QUEUEING	lwip/src/include/lwip/opt.h	655;"	d
ARP_QUEUE_LEN	lwip/src/include/lwip/opt.h	663;"	d
ARP_REPLY	lwip/src/include/lwip/prot/etharp.h	/^  ARP_REPLY   = 2$/;"	e	enum:etharp_opcode
ARP_REQUEST	lwip/src/include/lwip/prot/etharp.h	/^  ARP_REQUEST = 1,$/;"	e	enum:etharp_opcode
ARP_TABLE_SIZE	lwip/src/include/lwip/opt.h	636;"	d
ARP_TMR_INTERVAL	lwip/src/include/lwip/etharp.h	64;"	d
ARRAY_SIZE	drivers/fsl_common.h	193;"	d
ASM_SRCS	Debug/sources.mk	/^ASM_SRCS := $/;"	m
ASYNCAPBCLKCTRL	device/LPC54018.h	/^  __IO uint32_t ASYNCAPBCLKCTRL;                   \/**< Async peripheral clock control, offset: 0x10 *\/$/;"	m	struct:__anon141
ASYNCAPBCLKCTRLCLR	device/LPC54018.h	/^  __O  uint32_t ASYNCAPBCLKCTRLCLR;                \/**< Clear bits in ASYNCAPBCLKCTRL, offset: 0x18 *\/$/;"	m	struct:__anon141
ASYNCAPBCLKCTRLSET	device/LPC54018.h	/^  __O  uint32_t ASYNCAPBCLKCTRLSET;                \/**< Set bits in ASYNCAPBCLKCTRL, offset: 0x14 *\/$/;"	m	struct:__anon141
ASYNCAPBCLKSELA	device/LPC54018.h	/^  __IO uint32_t ASYNCAPBCLKSELA;                   \/**< Async APB clock source select A, offset: 0x20 *\/$/;"	m	struct:__anon141
ASYNCAPBCTRL	device/LPC54018.h	/^  __IO uint32_t ASYNCAPBCTRL;                      \/**< Asynchronous APB Control, offset: 0x4C *\/$/;"	m	struct:__anon185
ASYNCPRESETCTRL	device/LPC54018.h	/^  __IO uint32_t ASYNCPRESETCTRL;                   \/**< Async peripheral reset control, offset: 0x0 *\/$/;"	m	struct:__anon141
ASYNCPRESETCTRLCLR	device/LPC54018.h	/^  __O  uint32_t ASYNCPRESETCTRLCLR;                \/**< Clear bits in ASYNCPRESETCTRL, offset: 0x8 *\/$/;"	m	struct:__anon141
ASYNCPRESETCTRLSET	device/LPC54018.h	/^  __O  uint32_t ASYNCPRESETCTRLSET;                \/**< Set bits in ASYNCPRESETCTRL, offset: 0x4 *\/$/;"	m	struct:__anon141
ASYNC_CLK_CTRL0	drivers/fsl_clock.h	301;"	d
ASYNC_SYSCON	device/LPC54018.h	898;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRLCLR_ACLK_CLR	device/LPC54018.h	872;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRLCLR_ACLK_CLR_MASK	device/LPC54018.h	870;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRLCLR_ACLK_CLR_SHIFT	device/LPC54018.h	871;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRLSET_ACLK_SET	device/LPC54018.h	865;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRLSET_ACLK_SET_MASK	device/LPC54018.h	863;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRLSET_ACLK_SET_SHIFT	device/LPC54018.h	864;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRL_CTIMER3	device/LPC54018.h	855;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRL_CTIMER3_MASK	device/LPC54018.h	853;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRL_CTIMER3_SHIFT	device/LPC54018.h	854;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRL_CTIMER4	device/LPC54018.h	858;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRL_CTIMER4_MASK	device/LPC54018.h	856;"	d
ASYNC_SYSCON_ASYNCAPBCLKCTRL_CTIMER4_SHIFT	device/LPC54018.h	857;"	d
ASYNC_SYSCON_ASYNCAPBCLKSELA_SEL	device/LPC54018.h	885;"	d
ASYNC_SYSCON_ASYNCAPBCLKSELA_SEL_MASK	device/LPC54018.h	877;"	d
ASYNC_SYSCON_ASYNCAPBCLKSELA_SEL_SHIFT	device/LPC54018.h	878;"	d
ASYNC_SYSCON_ASYNCPRESETCTRLCLR_ARST_CLR	device/LPC54018.h	848;"	d
ASYNC_SYSCON_ASYNCPRESETCTRLCLR_ARST_CLR_MASK	device/LPC54018.h	846;"	d
ASYNC_SYSCON_ASYNCPRESETCTRLCLR_ARST_CLR_SHIFT	device/LPC54018.h	847;"	d
ASYNC_SYSCON_ASYNCPRESETCTRLSET_ARST_SET	device/LPC54018.h	841;"	d
ASYNC_SYSCON_ASYNCPRESETCTRLSET_ARST_SET_MASK	device/LPC54018.h	839;"	d
ASYNC_SYSCON_ASYNCPRESETCTRLSET_ARST_SET_SHIFT	device/LPC54018.h	840;"	d
ASYNC_SYSCON_ASYNCPRESETCTRL_CTIMER3	device/LPC54018.h	831;"	d
ASYNC_SYSCON_ASYNCPRESETCTRL_CTIMER3_MASK	device/LPC54018.h	829;"	d
ASYNC_SYSCON_ASYNCPRESETCTRL_CTIMER3_SHIFT	device/LPC54018.h	830;"	d
ASYNC_SYSCON_ASYNCPRESETCTRL_CTIMER4	device/LPC54018.h	834;"	d
ASYNC_SYSCON_ASYNCPRESETCTRL_CTIMER4_MASK	device/LPC54018.h	832;"	d
ASYNC_SYSCON_ASYNCPRESETCTRL_CTIMER4_SHIFT	device/LPC54018.h	833;"	d
ASYNC_SYSCON_BASE	device/LPC54018.h	896;"	d
ASYNC_SYSCON_BASE_ADDRS	device/LPC54018.h	900;"	d
ASYNC_SYSCON_BASE_PTRS	device/LPC54018.h	902;"	d
ASYNC_SYSCON_Type	device/LPC54018.h	/^} ASYNC_SYSCON_Type;$/;"	t	typeref:struct:__anon141
ATL_PTD_BASE_ADDR	device/LPC54018.h	/^  __IO uint32_t ATL_PTD_BASE_ADDR;                 \/**< Memory base address where ATL PTD0 is stored, offset: 0x10 *\/$/;"	m	struct:__anon190
ATL_PTD_DONE_MAP	device/LPC54018.h	/^  __IO uint32_t ATL_PTD_DONE_MAP;                  \/**< Done map for each ATL PTD, offset: 0x30 *\/$/;"	m	struct:__anon190
ATL_PTD_SKIP_MAP	device/LPC54018.h	/^  __IO uint32_t ATL_PTD_SKIP_MAP;                  \/**< Skip map for each ATL PTD, offset: 0x34 *\/$/;"	m	struct:__anon190
AT_NONCACHEABLE_SECTION	drivers/fsl_common.h	287;"	d
AT_NONCACHEABLE_SECTION_ALIGN	drivers/fsl_common.h	288;"	d
AT_NONCACHEABLE_SECTION_ALIGN_INIT	drivers/fsl_common.h	290;"	d
AT_NONCACHEABLE_SECTION_INIT	drivers/fsl_common.h	289;"	d
AT_QUICKACCESS_SECTION_CODE	drivers/fsl_common.h	341;"	d
AT_QUICKACCESS_SECTION_DATA	drivers/fsl_common.h	342;"	d
AUDIO_PLL_FRACT_MD_INT_M	drivers/fsl_clock.c	82;"	d	file:
AUDIO_PLL_FRACT_MD_INT_P	drivers/fsl_clock.c	80;"	d	file:
AUDIO_PLL_FRACT_MD_M	drivers/fsl_clock.c	81;"	d	file:
AUDIO_PLL_FRACT_MD_P	drivers/fsl_clock.c	79;"	d	file:
AUDIO_PLL_MD_FRACT_SET	drivers/fsl_clock.c	84;"	d	file:
AUDIO_PLL_MD_INT_SET	drivers/fsl_clock.c	85;"	d	file:
AUDPLLCLKSEL	device/LPC54018.h	/^  __IO uint32_t AUDPLLCLKSEL;                      \/**< Audio PLL clock source select, offset: 0x298 *\/$/;"	m	struct:__anon185
AUDPLLCTRL	device/LPC54018.h	/^  __IO uint32_t AUDPLLCTRL;                        \/**< Audio PLL control, offset: 0x5A0 *\/$/;"	m	struct:__anon185
AUDPLLFRAC	device/LPC54018.h	/^  __IO uint32_t AUDPLLFRAC;                        \/**< Audio PLL fractional divider control, offset: 0x5B4 *\/$/;"	m	struct:__anon185
AUDPLLMDEC	device/LPC54018.h	/^  __IO uint32_t AUDPLLMDEC;                        \/**< Audio PLL M divider, offset: 0x5B0 *\/$/;"	m	struct:__anon185
AUDPLLNDEC	device/LPC54018.h	/^  __IO uint32_t AUDPLLNDEC;                        \/**< Audio PLL N divider, offset: 0x5A8 *\/$/;"	m	struct:__anon185
AUDPLLPDEC	device/LPC54018.h	/^  __IO uint32_t AUDPLLPDEC;                        \/**< Audio PLL P divider, offset: 0x5AC *\/$/;"	m	struct:__anon185
AUDPLLSTAT	device/LPC54018.h	/^  __IO uint32_t AUDPLLSTAT;                        \/**< Audio PLL status, offset: 0x5A4 *\/$/;"	m	struct:__anon185
AUTH_DONE	lwip/src/netif/ppp/chap-new.c	79;"	d	file:
AUTH_FAILED	lwip/src/netif/ppp/chap-new.c	80;"	d	file:
AUTH_STARTED	lwip/src/netif/ppp/chap-new.c	78;"	d	file:
AUTOCGOR	device/LPC54018.h	/^  __IO uint32_t AUTOCGOR;                          \/**< Auto Clock-Gate Override Register, offset: 0xE04 *\/$/;"	m	struct:__anon185
AUTOIP_DEBUG	lwip/src/include/lwip/opt.h	3464;"	d
AUTOIP_NET	lwip/src/include/lwip/prot/autoip.h	48;"	d
AUTOIP_RANGE_END	lwip/src/include/lwip/prot/autoip.h	52;"	d
AUTOIP_RANGE_START	lwip/src/include/lwip/prot/autoip.h	50;"	d
AUTOIP_STATE_ANNOUNCING	lwip/src/include/lwip/prot/autoip.h	/^  AUTOIP_STATE_ANNOUNCING = 2,$/;"	e	enum:__anon444
AUTOIP_STATE_BOUND	lwip/src/include/lwip/prot/autoip.h	/^  AUTOIP_STATE_BOUND      = 3$/;"	e	enum:__anon444
AUTOIP_STATE_OFF	lwip/src/include/lwip/prot/autoip.h	/^  AUTOIP_STATE_OFF        = 0,$/;"	e	enum:__anon444
AUTOIP_STATE_PROBING	lwip/src/include/lwip/prot/autoip.h	/^  AUTOIP_STATE_PROBING    = 1,$/;"	e	enum:__anon444
AUTOIP_TICKS_PER_SECOND	lwip/src/include/lwip/autoip.h	58;"	d
AUTOIP_TMR_INTERVAL	lwip/src/include/lwip/autoip.h	57;"	d
AX1276_assert_param	radio/sx1276.h	52;"	d
A_BLOCK_LINK	amazon-freertos/freertos/portable/heap_2.c	/^typedef struct A_BLOCK_LINK$/;"	s	file:
A_BLOCK_LINK	amazon-freertos/freertos/portable/heap_4.c	/^typedef struct A_BLOCK_LINK$/;"	s	file:
A_BLOCK_LINK	amazon-freertos/freertos/portable/heap_5.c	/^typedef struct A_BLOCK_LINK$/;"	s	file:
Addr	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U32 Addr;$/;"	m	struct:DRIVER_CONTEXT
Addr	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U32 Addr;$/;"	m	struct:DRIVER_CONTEXT
Addr	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  U32 Addr;             \/\/ Destination address of buffer$/;"	m	struct:DRIVER_CONTEXT
Align	emwin/emWin_header/BUTTON_Private.h	/^  I16 Align;$/;"	m	struct:__anon401
Align	emwin/emWin_header/CHECKBOX_Private.h	/^  I16                   Align;$/;"	m	struct:__anon205
Align	emwin/emWin_header/DROPDOWN_Private.h	/^  I16       Align;$/;"	m	struct:__anon359
Align	emwin/emWin_header/EDIT_Private.h	/^  int              Align;$/;"	m	struct:__anon217
Align	emwin/emWin_header/HEADER_Private.h	/^  I16     Align;$/;"	m	struct:__anon273
Align	emwin/emWin_header/LISTBOX_Private.h	/^  I16 Align;$/;"	m	struct:__anon312
Align	emwin/emWin_header/LISTVIEW_Private.h	/^  U8                           Align;$/;"	m	struct:__anon335
Align	emwin/emWin_header/LISTWHEEL_Private.h	/^  I16              Align;$/;"	m	struct:__anon352
Align	emwin/emWin_header/MULTIPAGE.h	/^  unsigned          Align;$/;"	m	struct:__anon200
Align	emwin/emWin_header/MULTIPAGE_Private.h	/^  unsigned                  Align;$/;"	m	struct:__anon340
Align	emwin/emWin_header/TEXT_Private.h	/^  I16 Align;$/;"	m	struct:__anon298
AllocSize	emwin/emWin_header/GUI.h	/^  U32 AllocSize;$/;"	m	struct:__anon392
Alpha	emwin/emWin_header/LCD.h	/^  int Alpha;$/;"	m	struct:__anon414
AlphaMode	emwin/emWin_header/LCD.h	/^  int AlphaMode;$/;"	m	struct:__anon416
Angle	emwin/emWin_header/KNOB_Private.h	/^  I32 Angle;$/;"	m	struct:__anon327
Angle	emwin/emWin_header/WM.h	/^  I32            Angle;     \/\/ Angle between the touch points$/;"	m	struct:__anon289
ArrowAreaWidth	emwin/emWin_header/MENU_Private.h	/^  unsigned            ArrowAreaWidth;$/;"	m	struct:__anon319
ArrowColor	emwin/emWin_header/HEADER_Private.h	/^  GUI_COLOR           ArrowColor;$/;"	m	struct:__anon275
ArrowColor	emwin/emWin_header/MENU.h	/^  GUI_COLOR ArrowColor;$/;"	m	struct:__anon230
B	device/LPC54018.h	/^  __IO uint8_t B[6][32];                           \/**< Byte pin registers for all port 0 and 1 GPIO pins, array offset: 0x0, array step: index*0x20, index2*0x1 *\/$/;"	m	struct:__anon159
BACKENDPWR	device/LPC54018.h	/^  __IO uint32_t BACKENDPWR;                        \/**< Power control, offset: 0x104 *\/$/;"	m	struct:__anon177
BCMP	lwip/src/include/netif/ppp/ppp_impl.h	540;"	d
BETA	codec2/lpc.c	32;"	d	file:
BFAR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t BFAR;                   \/*!< Offset: 0x038 (R\/W)  BusFault Address Register *\/$/;"	m	struct:__anon18
BFAR	CMSIS/core_cm4.h	/^  __IOM uint32_t BFAR;                   \/*!< Offset: 0x038 (R\/W)  BusFault Address Register *\/$/;"	m	struct:__anon40
BG_BETA	codec2/postfilter.c	48;"	d	file:
BG_MARGIN	codec2/postfilter.c	49;"	d	file:
BG_THRESH	codec2/postfilter.c	47;"	d	file:
BI2C_CLOCKS	drivers/fsl_clock.h	184;"	d
BIG_ENDIAN	lwip/src/include/lwip/arch.h	45;"	d
BI_BITFIELDS	emwin/emWin_header/GUI_BMP_Private.h	59;"	d
BI_RGB	emwin/emWin_header/GUI_BMP_Private.h	56;"	d
BI_RLE4	emwin/emWin_header/GUI_BMP_Private.h	58;"	d
BI_RLE8	emwin/emWin_header/GUI_BMP_Private.h	57;"	d
BLKSIZ	device/LPC54018.h	/^  __IO uint32_t BLKSIZ;                            \/**< Block Size register, offset: 0x1C *\/$/;"	m	struct:__anon177
BMOD	device/LPC54018.h	/^  __IO uint32_t BMOD;                              \/**< Bus Mode register, offset: 0x80 *\/$/;"	m	struct:__anon177
BOARD_ACCEL_I2C_BASEADDR	board/board.h	38;"	d
BOARD_ACCEL_I2C_CLOCK_FREQ	board/board.h	39;"	d
BOARD_ARDUINO_I2C_INDEX	board/board.h	157;"	d
BOARD_ARDUINO_I2C_IRQ	board/board.h	156;"	d
BOARD_ARDUINO_INT_IRQ	board/board.h	155;"	d
BOARD_Accel_I2C_Init	board/board.c	/^void BOARD_Accel_I2C_Init(void)$/;"	f
BOARD_Accel_I2C_Receive	board/board.c	/^status_t BOARD_Accel_I2C_Receive($/;"	f
BOARD_Accel_I2C_Send	board/board.c	/^status_t BOARD_Accel_I2C_Send(uint8_t deviceAddress, uint32_t subAddress, uint8_t subaddressSize, uint32_t txBuff)$/;"	f
BOARD_BOOTCLOCKFRO12M_CORE_CLOCK	board/clock_config.h	49;"	d
BOARD_BOOTCLOCKFROHF48M_CORE_CLOCK	board/clock_config.h	74;"	d
BOARD_BOOTCLOCKFROHF96M_CORE_CLOCK	board/clock_config.h	99;"	d
BOARD_BOOTCLOCKPLL180M_CORE_CLOCK	board/clock_config.h	124;"	d
BOARD_BootClockFRO12M	board/clock_config.c	/^void BOARD_BootClockFRO12M(void)$/;"	f
BOARD_BootClockFROHF48M	board/clock_config.c	/^void BOARD_BootClockFROHF48M(void)$/;"	f
BOARD_BootClockFROHF96M	board/clock_config.c	/^void BOARD_BootClockFROHF96M(void)$/;"	f
BOARD_BootClockPLL180M	board/clock_config.c	/^void BOARD_BootClockPLL180M(void)$/;"	f
BOARD_CODEC_I2C_BASEADDR	board/board.h	41;"	d
BOARD_CODEC_I2C_CLOCK_FREQ	board/board.h	43;"	d
BOARD_CODEC_I2C_INSTANCE	board/board.h	42;"	d
BOARD_Codec_I2C_Init	board/board.c	/^void BOARD_Codec_I2C_Init(void)$/;"	f
BOARD_Codec_I2C_Receive	board/board.c	/^status_t BOARD_Codec_I2C_Receive($/;"	f
BOARD_Codec_I2C_Send	board/board.c	/^status_t BOARD_Codec_I2C_Send($/;"	f
BOARD_DEBUG_SPI_CLK_FREQ	board/board.h	36;"	d
BOARD_DEBUG_UART_BASEADDR	board/board.h	28;"	d
BOARD_DEBUG_UART_BAUDRATE	board/board.h	46;"	d
BOARD_DEBUG_UART_CLK_ATTACH	board/board.h	31;"	d
BOARD_DEBUG_UART_CLK_FREQ	board/board.h	30;"	d
BOARD_DEBUG_UART_INSTANCE	board/board.h	29;"	d
BOARD_DEBUG_UART_RST	board/board.h	32;"	d
BOARD_DEBUG_UART_TYPE	board/board.h	27;"	d
BOARD_ENET0_PHY_ADDRESS	board/board.h	50;"	d
BOARD_EXTCLKINRATE	board/board.h	23;"	d
BOARD_I2C_Init	board/board.c	/^void BOARD_I2C_Init(I2C_Type *base, uint32_t clkSrc_Hz)$/;"	f
BOARD_I2C_Receive	board/board.c	/^status_t BOARD_I2C_Receive(I2C_Type *base,$/;"	f
BOARD_I2C_Send	board/board.c	/^status_t BOARD_I2C_Send(I2C_Type *base,$/;"	f
BOARD_InitBootClocks	board/clock_config.c	/^void BOARD_InitBootClocks(void)$/;"	f
BOARD_InitBootPins	board/pin_mux.c	/^void BOARD_InitBootPins(void) {$/;"	f
BOARD_InitDebugConsole	board/board.c	/^status_t BOARD_InitDebugConsole(void)$/;"	f
BOARD_InitPins	board/pin_mux.c	/^void BOARD_InitPins(void) { \/* Function assigned for the Core #0 (ARM Cortex-M4) *\/$/;"	f
BOARD_InitSDRAM	board/board.c	/^void BOARD_InitSDRAM(void)$/;"	f
BOARD_LCD_InterfaceDeinit	emwin/emwin_support.c	/^void BOARD_LCD_InterfaceDeinit(void)$/;"	f
BOARD_LCD_InterfaceInit	emwin/emwin_support.c	/^static void BOARD_LCD_InterfaceInit(void)$/;"	f	file:
BOARD_LED1_GPIO	board/board.h	53;"	d
BOARD_LED1_GPIO_PIN	board/board.h	57;"	d
BOARD_LED1_GPIO_PORT	board/board.h	55;"	d
BOARD_LED2_GPIO	board/board.h	60;"	d
BOARD_LED2_GPIO_PIN	board/board.h	64;"	d
BOARD_LED2_GPIO_PORT	board/board.h	62;"	d
BOARD_LED3_GPIO	board/board.h	67;"	d
BOARD_LED3_GPIO_PIN	board/board.h	71;"	d
BOARD_LED3_GPIO_PORT	board/board.h	69;"	d
BOARD_MMC_VCC_SUPPLY	board/board.h	140;"	d
BOARD_NAME	board/board.h	21;"	d
BOARD_SDIF_BASEADDR	board/board.h	136;"	d
BOARD_SDIF_CD_GPIO_INIT	board/board.h	146;"	d
BOARD_SDIF_CD_STATUS	board/board.h	152;"	d
BOARD_SDIF_CLK_ATTACH	board/board.h	138;"	d
BOARD_SDIF_CLK_FREQ	board/board.h	137;"	d
BOARD_SDIF_IRQ	board/board.h	139;"	d
BOARD_SD_CARD_DETECT_GPIO	board/board.h	143;"	d
BOARD_SD_CARD_DETECT_PIN	board/board.h	141;"	d
BOARD_SD_CARD_DETECT_PORT	board/board.h	142;"	d
BOARD_SD_DETECT_TYPE	board/board.h	144;"	d
BOARD_SW1_GPIO	board/board.h	75;"	d
BOARD_SW1_GPIO_PIN	board/board.h	79;"	d
BOARD_SW1_GPIO_PORT	board/board.h	77;"	d
BOARD_SW1_NAME	board/board.h	81;"	d
BOARD_SW2_GPIO	board/board.h	86;"	d
BOARD_SW2_GPIO_PIN	board/board.h	90;"	d
BOARD_SW2_GPIO_PORT	board/board.h	88;"	d
BOARD_SW2_IRQ	board/board.h	93;"	d
BOARD_SW2_IRQ_HANDLER	board/board.h	94;"	d
BOARD_SW2_NAME	board/board.h	92;"	d
BOARD_SW3_GPIO	board/board.h	97;"	d
BOARD_SW3_GPIO_PIN	board/board.h	101;"	d
BOARD_SW3_GPIO_PININT_INDEX	board/board.h	106;"	d
BOARD_SW3_GPIO_PORT	board/board.h	99;"	d
BOARD_SW3_IRQ	board/board.h	104;"	d
BOARD_SW3_IRQ	board/board.h	82;"	d
BOARD_SW3_IRQ_HANDLER	board/board.h	105;"	d
BOARD_SW3_IRQ_HANDLER	board/board.h	83;"	d
BOARD_SW3_NAME	board/board.h	103;"	d
BOARD_SW4_GPIO	board/board.h	109;"	d
BOARD_SW4_GPIO_PIN	board/board.h	115;"	d
BOARD_SW4_GPIO_PININT_INDEX	board/board.h	120;"	d
BOARD_SW4_GPIO_PORT	board/board.h	112;"	d
BOARD_SW4_IRQ	board/board.h	118;"	d
BOARD_SW4_IRQ_HANDLER	board/board.h	119;"	d
BOARD_SW4_NAME	board/board.h	117;"	d
BOARD_SW5_GPIO	board/board.h	123;"	d
BOARD_SW5_GPIO_PIN	board/board.h	129;"	d
BOARD_SW5_GPIO_PININT_INDEX	board/board.h	134;"	d
BOARD_SW5_GPIO_PORT	board/board.h	126;"	d
BOARD_SW5_IRQ	board/board.h	132;"	d
BOARD_SW5_IRQ_HANDLER	board/board.h	133;"	d
BOARD_SW5_NAME	board/board.h	131;"	d
BOARD_Touch_InterfaceDeinit	emwin/emwin_support.c	/^void BOARD_Touch_InterfaceDeinit(void)$/;"	f
BOARD_Touch_InterfaceInit	emwin/emwin_support.c	/^static void BOARD_Touch_InterfaceInit(void)$/;"	f	file:
BOARD_Touch_Poll	emwin/emwin_support.c	/^int BOARD_Touch_Poll(void)$/;"	f
BOARD_UART_IRQ	board/board.h	34;"	d
BOARD_UART_IRQ_HANDLER	board/board.h	33;"	d
BOARD_USE_VIRTUALCOM	utilities/fsl_debug_console_conf.h	154;"	d
BOARD_XTAL0_CLK_HZ	board/clock_config.h	22;"	d
BOARD_XTAL32K_CLK_HZ	board/clock_config.h	23;"	d
BODCTRL	device/LPC54018.h	/^  __IO uint32_t BODCTRL;                           \/**< Brown-Out Detect control, offset: 0x20044 *\/$/;"	m	struct:__anon185
BOOLEAN	radio/MyTypeDef.h	/^}BOOLEAN;$/;"	t	typeref:enum:__anon498
BOOL_FALSE	radio/MyTypeDef.h	/^	BOOL_FALSE = 0,$/;"	e	enum:__anon498
BOOL_TRUE	radio/MyTypeDef.h	/^	BOOL_TRUE  = 1$/;"	e	enum:__anon498
BPFB_N	codec2/bpfb.h	1;"	d
BPF_N	codec2/bpf.h	1;"	d
BRG	device/LPC54018.h	/^  __IO uint32_t BRG;                               \/**< Baud Rate Generator register. 16-bit integer baud rate divisor value., offset: 0x20 *\/$/;"	m	struct:__anon186
BRIDGEIF_AGE_TIMER_MS	lwip/src/netif/bridgeif_fdb.c	50;"	d	file:
BRIDGEIF_DEBUG	lwip/src/include/netif/bridgeif_opts.h	73;"	d
BRIDGEIF_DECL_PROTECT	lwip/src/include/netif/bridgeif.h	108;"	d
BRIDGEIF_DECL_PROTECT	lwip/src/include/netif/bridgeif.h	116;"	d
BRIDGEIF_FDB_DEBUG	lwip/src/include/netif/bridgeif_opts.h	78;"	d
BRIDGEIF_FW_DEBUG	lwip/src/include/netif/bridgeif_opts.h	83;"	d
BRIDGEIF_INITDATA1	lwip/src/include/netif/bridgeif.h	87;"	d
BRIDGEIF_INITDATA2	lwip/src/include/netif/bridgeif.h	92;"	d
BRIDGEIF_MAX_PORTS	lwip/src/include/netif/bridgeif_opts.h	68;"	d
BRIDGEIF_PORT_NETIFS_OUTPUT_DIRECT	lwip/src/include/netif/bridgeif_opts.h	58;"	d
BRIDGEIF_READ_PROTECT	lwip/src/include/netif/bridgeif.h	109;"	d
BRIDGEIF_READ_PROTECT	lwip/src/include/netif/bridgeif.h	117;"	d
BRIDGEIF_READ_UNPROTECT	lwip/src/include/netif/bridgeif.h	110;"	d
BRIDGEIF_READ_UNPROTECT	lwip/src/include/netif/bridgeif.h	118;"	d
BRIDGEIF_WRITE_PROTECT	lwip/src/include/netif/bridgeif.h	111;"	d
BRIDGEIF_WRITE_PROTECT	lwip/src/include/netif/bridgeif.h	119;"	d
BRIDGEIF_WRITE_UNPROTECT	lwip/src/include/netif/bridgeif.h	112;"	d
BRIDGEIF_WRITE_UNPROTECT	lwip/src/include/netif/bridgeif.h	120;"	d
BR_FDB_TIMEOUT_SEC	lwip/src/netif/bridgeif_fdb.c	52;"	d	file:
BR_FLOOD	lwip/src/include/netif/bridgeif.h	63;"	d
BSDCOMPRESS_SUPPORT	lwip/src/include/netif/ppp/ppp.h	96;"	d
BSD_CURRENT_VERSION	lwip/src/include/netif/ppp/ccp.h	84;"	d
BSD_MAKE_OPT	lwip/src/include/netif/ppp/ccp.h	85;"	d
BSD_MAX_BITS	lwip/src/include/netif/ppp/ccp.h	88;"	d
BSD_MIN_BITS	lwip/src/include/netif/ppp/ccp.h	87;"	d
BSD_NBITS	lwip/src/include/netif/ppp/ccp.h	82;"	d
BSD_VERSION	lwip/src/include/netif/ppp/ccp.h	83;"	d
BUFADDR	device/LPC54018.h	/^  __I  uint32_t BUFADDR;                           \/**< Current Buffer Descriptor Address register, offset: 0x98 *\/$/;"	m	struct:__anon177
BUFFER_CB	emwin/emWin_header/GUI_VNC.h	/^} BUFFER_CB;$/;"	t	typeref:struct:__anon344
BUFFER_NUM	source/i2s_transfer.c	49;"	d	file:
BUFFER_SIZE	source/i2s_transfer.c	48;"	d	file:
BUILD_ASSERT	drivers/fsl_sha.c	58;"	d	file:
BUSY	device/LPC54018.h	/^    __I  uint32_t BUSY;                              \/**< Channel Busy status for all DMA channels., array offset: 0x38, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
BUTTON_3D_MOVE_X	emwin/emWin_header/BUTTON_Private.h	60;"	d
BUTTON_3D_MOVE_Y	emwin/emWin_header/BUTTON_Private.h	63;"	d
BUTTON_BI_DISABLED	emwin/emWin_header/BUTTON.h	81;"	d
BUTTON_BI_PRESSED	emwin/emWin_header/BUTTON.h	80;"	d
BUTTON_BI_UNPRESSED	emwin/emWin_header/BUTTON.h	79;"	d
BUTTON_CF_HIDE	emwin/emWin_header/BUTTON.h	63;"	d
BUTTON_CF_MEMDEV	emwin/emWin_header/BUTTON.h	65;"	d
BUTTON_CF_SHOW	emwin/emWin_header/BUTTON.h	64;"	d
BUTTON_CI_DISABLED	emwin/emWin_header/BUTTON.h	73;"	d
BUTTON_CI_PRESSED	emwin/emWin_header/BUTTON.h	72;"	d
BUTTON_CI_UNPRESSED	emwin/emWin_header/BUTTON.h	71;"	d
BUTTON_H	emwin/emWin_header/BUTTON.h	46;"	d
BUTTON_Handle	emwin/emWin_header/BUTTON.h	/^typedef WM_HMEM BUTTON_Handle;$/;"	t
BUTTON_ID	emwin/emWin_header/WIDGET.h	100;"	d
BUTTON_INIT_ID	emwin/emWin_header/BUTTON_Private.h	102;"	d
BUTTON_INIT_ID	emwin/emWin_header/BUTTON_Private.h	104;"	d
BUTTON_LOCK_H	emwin/emWin_header/BUTTON_Private.h	109;"	d
BUTTON_LOCK_H	emwin/emWin_header/BUTTON_Private.h	111;"	d
BUTTON_Obj	emwin/emWin_header/BUTTON_Private.h	/^} BUTTON_Obj;$/;"	t	typeref:struct:__anon402
BUTTON_PRIVATE_H	emwin/emWin_header/BUTTON_Private.h	46;"	d
BUTTON_PROPS	emwin/emWin_header/BUTTON_Private.h	/^} BUTTON_PROPS;$/;"	t	typeref:struct:__anon401
BUTTON_SKINFLEX_PI_DISABLED	emwin/emWin_header/BUTTON.h	97;"	d
BUTTON_SKINFLEX_PI_ENABLED	emwin/emWin_header/BUTTON.h	96;"	d
BUTTON_SKINFLEX_PI_FOCUSED	emwin/emWin_header/BUTTON.h	95;"	d
BUTTON_SKINFLEX_PI_FOCUSSED	emwin/emWin_header/BUTTON.h	99;"	d
BUTTON_SKINFLEX_PI_PRESSED	emwin/emWin_header/BUTTON.h	94;"	d
BUTTON_SKINFLEX_PROPS	emwin/emWin_header/BUTTON.h	/^} BUTTON_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon337
BUTTON_SKIN_FLEX	emwin/emWin_header/BUTTON.h	210;"	d
BUTTON_SKIN_PRIVATE	emwin/emWin_header/BUTTON_Private.h	/^} BUTTON_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon400
BUTTON_STATE_FOCUS	emwin/emWin_header/BUTTON.h	87;"	d
BUTTON_STATE_PRESSED	emwin/emWin_header/BUTTON.h	88;"	d
BUTTON_SW5	source/main.c	45;"	d	file:
BUTTON_SetFocusable	emwin/emWin_header/BUTTON.h	194;"	d
BUTTON_SetFocussable	emwin/emWin_header/BUTTON.h	193;"	d
BYTCNT	device/LPC54018.h	/^  __IO uint32_t BYTCNT;                            \/**< Byte Count register, offset: 0x20 *\/$/;"	m	struct:__anon177
BYTE_ORDER	lwip/src/include/lwip/arch.h	67;"	d
BZERO	lwip/src/include/netif/ppp/ppp_impl.h	539;"	d
BarColor	emwin/emWin_header/SLIDER_Private.h	/^  GUI_COLOR           BarColor;$/;"	m	struct:__anon377
BaseAddr	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U32 BaseAddr;$/;"	m	struct:DRIVER_CONTEXT
BaseType_t	amazon-freertos/freertos/portable/portmacro.h	/^typedef long BaseType_t;$/;"	t
Baseline	emwin/emWin_header/GUI_Type.h	/^  U16 Baseline;     \/* Index of baseline *\/$/;"	m	struct:__anon262
Baseline	emwin/emWin_header/GUI_Type.h	/^  U8 Baseline;$/;"	m	struct:GUI_FONT
Baseline	emwin/emWin_header/GUI_Type.h	/^  U8 Baseline;$/;"	m	struct:__anon258
Binary2Fractional	drivers/fsl_clock.c	/^static double Binary2Fractional(uint32_t binaryPart)$/;"	f	file:
BitBuffer	emwin/emWin_header/GUI_JPEG_Private.h	/^  U32 BitBuffer;$/;"	m	struct:GUI_JPEG_DCONTEXT
BitMap	radio/MyTypeDef.h	41;"	d
Bitmap	emwin/emWin_header/IMAGE_Private.h	/^  GUI_BITMAP          Bitmap;       \/\/ Bitmap structure$/;"	m	struct:__anon315
BitmapAlign	emwin/emWin_header/SWIPELIST_Private.h	/^  int            BitmapAlign;$/;"	m	struct:__anon236
BitmapSpace	emwin/emWin_header/SWIPELIST_Private.h	/^  int              BitmapSpace;$/;"	m	struct:__anon237
BitrateIndex	radio/sx1276.h	/^    INT8U               BitrateIndex;$/;"	m	struct:__anon487
BitsPerPixel	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int BitsPerPixel;$/;"	m	struct:__anon370
BitsPerPixel	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int BitsPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BitsPerPixel	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  int BitsPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BitsPerPixel	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int BitsPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BitsPerPixel	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int BitsPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BitsPerPixel	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int BitsPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BitsPerPixel	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int BitsPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BitsPerPixel	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int BitsPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BitsPerPixel	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  int BitsPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BitsPerPixel	emwin/emWin_header/GUI_GCache_Private.h	/^  int BitsPerPixel;$/;"	m	struct:__anon239
BitsPerPixel	emwin/emWin_header/GUI_Private.h	/^  unsigned               BitsPerPixel;$/;"	m	struct:__anon295
BitsPerPixel	emwin/emWin_header/GUI_Type.h	/^  U16 BitsPerPixel;$/;"	m	struct:__anon244
BitsPerPixel	emwin/emWin_header/GUI_Type.h	/^  U16P BitsPerPixel;$/;"	m	struct:__anon243
BitsPerPixel	emwin/emWin_header/GUI_Type.h	/^  int BitsPerPixel;$/;"	m	struct:__anon246
BitsPerPixel	emwin/emWin_header/GUI_VNC.h	/^  int BitsPerPixel;  \/\/ Note, that from within the VNC server the function LCD_GetBitsBerPixel() can not be used because the VNC server runs in a separate thread and the device chain can change during the function call$/;"	m	struct:GUI_VNC_CONTEXT
BitsPerPixelDriver	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int BitsPerPixelDriver;$/;"	m	struct:__anon370
BkColor	emwin/emWin_header/CHECKBOX_Private.h	/^  GUI_COLOR             BkColor;        \/* Widget background color *\/$/;"	m	struct:__anon205
BkColor	emwin/emWin_header/GUI.h	/^  GUI_COLOR Color, BkColor;                \/\/ Required only when changing devices and for speed opt (caching)$/;"	m	struct:GUI_CONTEXT
BkColor	emwin/emWin_header/HEADER_Private.h	/^  GUI_COLOR           BkColor;$/;"	m	struct:__anon275
BkColor	emwin/emWin_header/KNOB_Private.h	/^  GUI_COLOR BkColor; \/\/ The Bk color$/;"	m	struct:__anon326
BkColor	emwin/emWin_header/MULTIPAGE.h	/^  GUI_COLOR BkColor;$/;"	m	struct:__anon198
BkColor	emwin/emWin_header/RADIO_Private.h	/^  GUI_COLOR BkColor;$/;"	m	struct:__anon342
BkColor	emwin/emWin_header/SLIDER_Private.h	/^  GUI_COLOR           BkColor;$/;"	m	struct:__anon377
BkColor	emwin/emWin_header/TEXT_Private.h	/^  GUI_COLOR BkColor;$/;"	m	struct:__anon297
BkColor	emwin/emWin_header/WINDOW_Private.h	/^  GUI_COLOR BkColor;$/;"	m	struct:__anon310
BkColorV	emwin/emWin_header/MENU.h	/^  GUI_COLOR BkColorV;$/;"	m	struct:__anon230
BkFlag	emwin/emWin_header/GUI_VNC.h	/^  char BkFlag;$/;"	m	struct:GUI_VNC_CONTEXT
BlockLink_t	amazon-freertos/freertos/portable/heap_2.c	/^} BlockLink_t;$/;"	t	typeref:struct:A_BLOCK_LINK	file:
BlockLink_t	amazon-freertos/freertos/portable/heap_4.c	/^} BlockLink_t;$/;"	t	typeref:struct:A_BLOCK_LINK	file:
BlockLink_t	amazon-freertos/freertos/portable/heap_5.c	/^} BlockLink_t;$/;"	t	typeref:struct:A_BLOCK_LINK	file:
BlockSize	emwin/emWin_header/GUI_JPEG_Private.h	/^  unsigned BlockSize;$/;"	m	struct:__anon363
Border	emwin/emWin_header/EDIT_Private.h	/^  int              Border;$/;"	m	struct:__anon217
BorderB	emwin/emWin_header/GRAPH_Private.h	/^  unsigned  BorderB;$/;"	m	struct:__anon309
BorderL	emwin/emWin_header/GRAPH_Private.h	/^  unsigned  BorderL;$/;"	m	struct:__anon309
BorderR	emwin/emWin_header/GRAPH_Private.h	/^  unsigned  BorderR;$/;"	m	struct:__anon309
BorderSize	emwin/emWin_header/FRAMEWIN_Private.h	/^  I16                   BorderSize;$/;"	m	struct:__anon279
BorderSize0	emwin/emWin_header/MULTIPAGE_Private.h	/^  int                       BorderSize0;$/;"	m	struct:__anon340
BorderSize1	emwin/emWin_header/MULTIPAGE_Private.h	/^  int                       BorderSize1;$/;"	m	struct:__anon340
BorderSizeB	emwin/emWin_header/FRAMEWIN.h	/^  int BorderSizeB;$/;"	m	struct:__anon277
BorderSizeL	emwin/emWin_header/FRAMEWIN.h	/^  int BorderSizeL;$/;"	m	struct:__anon277
BorderSizeR	emwin/emWin_header/FRAMEWIN.h	/^  int BorderSizeR;$/;"	m	struct:__anon277
BorderSizeT	emwin/emWin_header/FRAMEWIN.h	/^  int BorderSizeT;$/;"	m	struct:__anon277
BorderT	emwin/emWin_header/GRAPH_Private.h	/^  unsigned  BorderT;$/;"	m	struct:__anon309
BufferIndex	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 BufferIndex;$/;"	m	struct:GUI_JPEG_DCONTEXT
BufferOffset	emwin/emWin_header/GUIDRV_S1D13748.h	/^  U32 BufferOffset;$/;"	m	struct:__anon375
BufferOffset	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  U32 BufferOffset;$/;"	m	struct:DRIVER_CONTEXT
BufferOffset	emwin/emWin_header/GUIDRV_S1D13781.h	/^  U32 BufferOffset;$/;"	m	struct:__anon282
BufferOffset	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U32 BufferOffset;$/;"	m	struct:DRIVER_CONTEXT
BufferOffset	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  U32 BufferOffset;$/;"	m	struct:DRIVER_CONTEXT
BufferSize	emwin/emWin_header/EDIT_Private.h	/^  U16                  BufferSize;$/;"	m	struct:EDIT_Obj_struct
BufferSize	emwin/emWin_header/GUI_VNC.h	/^  int  BufferSize;$/;"	m	struct:__anon344
BufferSize	emwin/emWin_header/SEGGER.h	/^  int   BufferSize;$/;"	m	struct:__anon201
BusFault_Handler	startup/startup_lpc54018.c	/^WEAK_AV void BusFault_Handler(void)$/;"	f
BusFault_IRQn	device/LPC54018.h	/^  BusFault_IRQn                = -11,              \/**< Cortex-M4 Bus Fault Interrupt *\/$/;"	e	enum:IRQn
ButtonSize	emwin/emWin_header/CHECKBOX.h	/^  int       ButtonSize;$/;"	m	struct:__anon208
ButtonSize	emwin/emWin_header/CHECKBOX_Private.h	/^  U32                 ButtonSize;$/;"	m	struct:__anon206
ButtonSize	emwin/emWin_header/RADIO.h	/^  int       ButtonSize;$/;"	m	struct:__anon373
ButtonSize	emwin/emWin_header/SPINBOX_Private.h	/^  U16                  ButtonSize;           \/\/ Size of the button depending on the orientation.$/;"	m	struct:__anon321
BytesPerLine	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int BytesPerLine;$/;"	m	struct:DRIVER_CONTEXT
BytesPerLine	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int BytesPerLine;$/;"	m	struct:DRIVER_CONTEXT
BytesPerLine	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int BytesPerLine;$/;"	m	struct:DRIVER_CONTEXT
BytesPerLine	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  int BytesPerLine;$/;"	m	struct:DRIVER_CONTEXT
BytesPerLine	emwin/emWin_header/GUI_GCache_Private.h	/^  int BytesPerLine;$/;"	m	struct:__anon239
BytesPerLine	emwin/emWin_header/GUI_Private.h	/^  unsigned               BytesPerLine;$/;"	m	struct:__anon295
BytesPerLine	emwin/emWin_header/GUI_SetOrientation.h	/^  int BytesPerLine;$/;"	m	struct:DRIVER_CONTEXT
BytesPerLine	emwin/emWin_header/GUI_Type.h	/^  U16 BytesPerLine; \/* Number of bytes per line *\/$/;"	m	struct:__anon264
BytesPerLine	emwin/emWin_header/GUI_Type.h	/^  U16 BytesPerLine;$/;"	m	struct:__anon244
BytesPerLine	emwin/emWin_header/GUI_Type.h	/^  U16P BytesPerLine;$/;"	m	struct:__anon243
BytesPerLine	emwin/emWin_header/GUI_Type.h	/^  U8                         BytesPerLine;$/;"	m	struct:__anon257
BytesPerLine	emwin/emWin_header/GUI_Type.h	/^  U8 BytesPerLine;$/;"	m	struct:__anon255
BytesPerPixel	emwin/emWin_header/GUI.h	/^  int            BytesPerPixel;$/;"	m	struct:__anon398
BytesPerPixel	emwin/emWin_header/GUI.h	/^  int    BytesPerPixel; \/\/ Number of bytes required per pixel$/;"	m	struct:__anon385
BytesPerPixel	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int BytesPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BytesPerPixel	emwin/emWin_header/GUI_BMP_Private.h	/^  U32                   BytesPerPixel;$/;"	m	struct:__anon330
BytesPerPixel	emwin/emWin_header/GUI_SetOrientation.h	/^  int BytesPerPixel;$/;"	m	struct:DRIVER_CONTEXT
BytesPerPixel	emwin/emWin_header/GUI_VNC.h	/^  int BytesPerPixel;$/;"	m	struct:GUI_VNC_CONTEXT
BytesPerPixel	emwin/emWin_header/LCD.h	/^  int BytesPerPixel;$/;"	m	struct:__anon413
C	CMSIS/core_armv8mbl.h	/^    uint32_t C:1;                        \/*!< bit:     29  Carry condition code flag *\/$/;"	m	struct:__anon113::__anon114
C	CMSIS/core_armv8mbl.h	/^    uint32_t C:1;                        \/*!< bit:     29  Carry condition code flag *\/$/;"	m	struct:__anon117::__anon118
C	CMSIS/core_armv8mml.h	/^    uint32_t C:1;                        \/*!< bit:     29  Carry condition code flag *\/$/;"	m	struct:__anon13::__anon14
C	CMSIS/core_armv8mml.h	/^    uint32_t C:1;                        \/*!< bit:     29  Carry condition code flag *\/$/;"	m	struct:__anon9::__anon10
C	CMSIS/core_cm4.h	/^    uint32_t C:1;                        \/*!< bit:     29  Carry condition code flag *\/$/;"	m	struct:__anon31::__anon32
C	CMSIS/core_cm4.h	/^    uint32_t C:1;                        \/*!< bit:     29  Carry condition code flag *\/$/;"	m	struct:__anon35::__anon36
C2CONST	codec2/defines.h	/^} C2CONST;$/;"	t	typeref:struct:__anon134
C2WB_BPERF	codec2/c2wideband.h	25;"	d
C2WB_DEC	codec2/c2wideband.h	22;"	d
C2WB_FS	codec2/c2wideband.h	18;"	d
C2WB_K	codec2/c2wideband.h	17;"	d
C2WB_NT	codec2/c2wideband.h	20;"	d
C2WB_SPERF	codec2/c2wideband.h	23;"	d
C2WB_TF	codec2/c2wideband.h	21;"	d
C2WIDEBAND_H	codec2/c2wideband.h	9;"	d
CACR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CACR;                   \/*!< Offset: 0x29C (R\/W)  L1 Cache Control Register *\/$/;"	m	struct:__anon18
CALENDAR_CI_FRAME	emwin/emWin_header/CALENDAR.h	69;"	d
CALENDAR_CI_HEADER	emwin/emWin_header/CALENDAR.h	66;"	d
CALENDAR_CI_LABEL	emwin/emWin_header/CALENDAR.h	68;"	d
CALENDAR_CI_MONTH	emwin/emWin_header/CALENDAR.h	67;"	d
CALENDAR_CI_SEL	emwin/emWin_header/CALENDAR.h	64;"	d
CALENDAR_CI_WEEKDAY	emwin/emWin_header/CALENDAR.h	63;"	d
CALENDAR_CI_WEEKEND	emwin/emWin_header/CALENDAR.h	62;"	d
CALENDAR_DATE	emwin/emWin_header/CALENDAR.h	/^} CALENDAR_DATE;$/;"	t	typeref:struct:__anon240
CALENDAR_FI_CONTENT	emwin/emWin_header/CALENDAR.h	71;"	d
CALENDAR_FI_HEADER	emwin/emWin_header/CALENDAR.h	72;"	d
CALENDAR_H	emwin/emWin_header/CALENDAR.h	46;"	d
CALENDAR_NOTIFICATION_MONTH_CLICKED	emwin/emWin_header/CALENDAR.h	85;"	d
CALENDAR_NOTIFICATION_MONTH_RELEASED	emwin/emWin_header/CALENDAR.h	86;"	d
CALENDAR_SI_CELL_X	emwin/emWin_header/CALENDAR.h	75;"	d
CALENDAR_SI_CELL_Y	emwin/emWin_header/CALENDAR.h	76;"	d
CALENDAR_SI_HEADER	emwin/emWin_header/CALENDAR.h	74;"	d
CALENDAR_SKINFLEX_PROPS	emwin/emWin_header/CALENDAR.h	/^} CALENDAR_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon241
CALIB	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t CALIB;                  \/*!< Offset: 0x00C (R\/ )  SysTick Calibration Register *\/$/;"	m	struct:__anon123
CALIB	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CALIB;                  \/*!< Offset: 0x00C (R\/ )  SysTick Calibration Register *\/$/;"	m	struct:__anon20
CALIB	CMSIS/core_cm4.h	/^  __IM  uint32_t CALIB;                  \/*!< Offset: 0x00C (R\/ )  SysTick Calibration Register *\/$/;"	m	struct:__anon42
CALIB	device/LPC54018.h	/^  __IO uint32_t CALIB;                             \/**< ADC Calibration register., offset: 0x70 *\/$/;"	m	struct:__anon140
CAN0	device/LPC54018.h	1808;"	d
CAN0CLKDIV	device/LPC54018.h	/^  __IO uint32_t CAN0CLKDIV;                        \/**< MCAN0 clock divider, offset: 0x308 *\/$/;"	m	struct:__anon185
CAN0_BASE	device/LPC54018.h	1806;"	d
CAN0_IRQ0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CAN0_IRQ0_IRQHandler(void)$/;"	f
CAN0_IRQ0_IRQn	device/LPC54018.h	/^  CAN0_IRQ0_IRQn               = 43,               \/**< CAN0 interrupt0 *\/$/;"	e	enum:IRQn
CAN0_IRQ1_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CAN0_IRQ1_IRQHandler(void)$/;"	f
CAN0_IRQ1_IRQn	device/LPC54018.h	/^  CAN0_IRQ1_IRQn               = 44,               \/**< CAN0 interrupt1 *\/$/;"	e	enum:IRQn
CAN1	device/LPC54018.h	1812;"	d
CAN1CLKDIV	device/LPC54018.h	/^  __IO uint32_t CAN1CLKDIV;                        \/**< MCAN1 clock divider, offset: 0x30C *\/$/;"	m	struct:__anon185
CAN1_BASE	device/LPC54018.h	1810;"	d
CAN1_IRQ0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CAN1_IRQ0_IRQHandler(void)$/;"	f
CAN1_IRQ0_IRQn	device/LPC54018.h	/^  CAN1_IRQ0_IRQn               = 45,               \/**< CAN1 interrupt0 *\/$/;"	e	enum:IRQn
CAN1_IRQ1_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CAN1_IRQ1_IRQHandler(void)$/;"	f
CAN1_IRQ1_IRQn	device/LPC54018.h	/^  CAN1_IRQ1_IRQn               = 46,               \/**< CAN1 interrupt1 *\/$/;"	e	enum:IRQn
CAN_BASE_ADDRS	device/LPC54018.h	1814;"	d
CAN_BASE_PTRS	device/LPC54018.h	1816;"	d
CAN_CCCR_ASM	device/LPC54018.h	1029;"	d
CAN_CCCR_ASM_MASK	device/LPC54018.h	1027;"	d
CAN_CCCR_ASM_SHIFT	device/LPC54018.h	1028;"	d
CAN_CCCR_BRSE	device/LPC54018.h	1050;"	d
CAN_CCCR_BRSE_MASK	device/LPC54018.h	1048;"	d
CAN_CCCR_BRSE_SHIFT	device/LPC54018.h	1049;"	d
CAN_CCCR_CCE	device/LPC54018.h	1026;"	d
CAN_CCCR_CCE_MASK	device/LPC54018.h	1024;"	d
CAN_CCCR_CCE_SHIFT	device/LPC54018.h	1025;"	d
CAN_CCCR_CSA	device/LPC54018.h	1032;"	d
CAN_CCCR_CSA_MASK	device/LPC54018.h	1030;"	d
CAN_CCCR_CSA_SHIFT	device/LPC54018.h	1031;"	d
CAN_CCCR_CSR	device/LPC54018.h	1035;"	d
CAN_CCCR_CSR_MASK	device/LPC54018.h	1033;"	d
CAN_CCCR_CSR_SHIFT	device/LPC54018.h	1034;"	d
CAN_CCCR_DAR	device/LPC54018.h	1041;"	d
CAN_CCCR_DAR_MASK	device/LPC54018.h	1039;"	d
CAN_CCCR_DAR_SHIFT	device/LPC54018.h	1040;"	d
CAN_CCCR_EFBI	device/LPC54018.h	1056;"	d
CAN_CCCR_EFBI_MASK	device/LPC54018.h	1054;"	d
CAN_CCCR_EFBI_SHIFT	device/LPC54018.h	1055;"	d
CAN_CCCR_FDOE	device/LPC54018.h	1047;"	d
CAN_CCCR_FDOE_MASK	device/LPC54018.h	1045;"	d
CAN_CCCR_FDOE_SHIFT	device/LPC54018.h	1046;"	d
CAN_CCCR_INIT	device/LPC54018.h	1023;"	d
CAN_CCCR_INIT_MASK	device/LPC54018.h	1021;"	d
CAN_CCCR_INIT_SHIFT	device/LPC54018.h	1022;"	d
CAN_CCCR_MON	device/LPC54018.h	1038;"	d
CAN_CCCR_MON_MASK	device/LPC54018.h	1036;"	d
CAN_CCCR_MON_SHIFT	device/LPC54018.h	1037;"	d
CAN_CCCR_NISO	device/LPC54018.h	1062;"	d
CAN_CCCR_NISO_MASK	device/LPC54018.h	1060;"	d
CAN_CCCR_NISO_SHIFT	device/LPC54018.h	1061;"	d
CAN_CCCR_PXHD	device/LPC54018.h	1053;"	d
CAN_CCCR_PXHD_MASK	device/LPC54018.h	1051;"	d
CAN_CCCR_PXHD_SHIFT	device/LPC54018.h	1052;"	d
CAN_CCCR_TEST	device/LPC54018.h	1044;"	d
CAN_CCCR_TEST_MASK	device/LPC54018.h	1042;"	d
CAN_CCCR_TEST_SHIFT	device/LPC54018.h	1043;"	d
CAN_CCCR_TXP	device/LPC54018.h	1059;"	d
CAN_CCCR_TXP_MASK	device/LPC54018.h	1057;"	d
CAN_CCCR_TXP_SHIFT	device/LPC54018.h	1058;"	d
CAN_DBTP_DBRP	device/LPC54018.h	1000;"	d
CAN_DBTP_DBRP_MASK	device/LPC54018.h	998;"	d
CAN_DBTP_DBRP_SHIFT	device/LPC54018.h	999;"	d
CAN_DBTP_DSJW	device/LPC54018.h	991;"	d
CAN_DBTP_DSJW_MASK	device/LPC54018.h	989;"	d
CAN_DBTP_DSJW_SHIFT	device/LPC54018.h	990;"	d
CAN_DBTP_DTSEG1	device/LPC54018.h	997;"	d
CAN_DBTP_DTSEG1_MASK	device/LPC54018.h	995;"	d
CAN_DBTP_DTSEG1_SHIFT	device/LPC54018.h	996;"	d
CAN_DBTP_DTSEG2	device/LPC54018.h	994;"	d
CAN_DBTP_DTSEG2_MASK	device/LPC54018.h	992;"	d
CAN_DBTP_DTSEG2_SHIFT	device/LPC54018.h	993;"	d
CAN_DBTP_TDC	device/LPC54018.h	1003;"	d
CAN_DBTP_TDC_MASK	device/LPC54018.h	1001;"	d
CAN_DBTP_TDC_SHIFT	device/LPC54018.h	1002;"	d
CAN_ECR_CEL	device/LPC54018.h	1131;"	d
CAN_ECR_CEL_MASK	device/LPC54018.h	1129;"	d
CAN_ECR_CEL_SHIFT	device/LPC54018.h	1130;"	d
CAN_ECR_REC	device/LPC54018.h	1125;"	d
CAN_ECR_REC_MASK	device/LPC54018.h	1123;"	d
CAN_ECR_REC_SHIFT	device/LPC54018.h	1124;"	d
CAN_ECR_RP	device/LPC54018.h	1128;"	d
CAN_ECR_RP_MASK	device/LPC54018.h	1126;"	d
CAN_ECR_RP_SHIFT	device/LPC54018.h	1127;"	d
CAN_ECR_TEC	device/LPC54018.h	1122;"	d
CAN_ECR_TEC_MASK	device/LPC54018.h	1120;"	d
CAN_ECR_TEC_SHIFT	device/LPC54018.h	1121;"	d
CAN_ETSCC_ETCE	device/LPC54018.h	1788;"	d
CAN_ETSCC_ETCE_MASK	device/LPC54018.h	1786;"	d
CAN_ETSCC_ETCE_SHIFT	device/LPC54018.h	1787;"	d
CAN_ETSCC_ETCP	device/LPC54018.h	1785;"	d
CAN_ETSCC_ETCP_MASK	device/LPC54018.h	1783;"	d
CAN_ETSCC_ETCP_SHIFT	device/LPC54018.h	1784;"	d
CAN_ETSCV_ETSC	device/LPC54018.h	1795;"	d
CAN_ETSCV_ETSC_MASK	device/LPC54018.h	1793;"	d
CAN_ETSCV_ETSC_SHIFT	device/LPC54018.h	1794;"	d
CAN_GFC_ANFE	device/LPC54018.h	1483;"	d
CAN_GFC_ANFE_MASK	device/LPC54018.h	1481;"	d
CAN_GFC_ANFE_SHIFT	device/LPC54018.h	1482;"	d
CAN_GFC_ANFS	device/LPC54018.h	1486;"	d
CAN_GFC_ANFS_MASK	device/LPC54018.h	1484;"	d
CAN_GFC_ANFS_SHIFT	device/LPC54018.h	1485;"	d
CAN_GFC_RRFE	device/LPC54018.h	1477;"	d
CAN_GFC_RRFE_MASK	device/LPC54018.h	1475;"	d
CAN_GFC_RRFE_SHIFT	device/LPC54018.h	1476;"	d
CAN_GFC_RRFS	device/LPC54018.h	1480;"	d
CAN_GFC_RRFS_MASK	device/LPC54018.h	1478;"	d
CAN_GFC_RRFS_SHIFT	device/LPC54018.h	1479;"	d
CAN_HPMS_BIDX	device/LPC54018.h	1520;"	d
CAN_HPMS_BIDX_MASK	device/LPC54018.h	1518;"	d
CAN_HPMS_BIDX_SHIFT	device/LPC54018.h	1519;"	d
CAN_HPMS_FIDX	device/LPC54018.h	1526;"	d
CAN_HPMS_FIDX_MASK	device/LPC54018.h	1524;"	d
CAN_HPMS_FIDX_SHIFT	device/LPC54018.h	1525;"	d
CAN_HPMS_FLST	device/LPC54018.h	1529;"	d
CAN_HPMS_FLST_MASK	device/LPC54018.h	1527;"	d
CAN_HPMS_FLST_SHIFT	device/LPC54018.h	1528;"	d
CAN_HPMS_MSI	device/LPC54018.h	1523;"	d
CAN_HPMS_MSI_MASK	device/LPC54018.h	1521;"	d
CAN_HPMS_MSI_SHIFT	device/LPC54018.h	1522;"	d
CAN_IE_ARAE	device/LPC54018.h	1366;"	d
CAN_IE_ARAE_MASK	device/LPC54018.h	1364;"	d
CAN_IE_ARAE_SHIFT	device/LPC54018.h	1365;"	d
CAN_IE_BECE	device/LPC54018.h	1339;"	d
CAN_IE_BECE_MASK	device/LPC54018.h	1337;"	d
CAN_IE_BECE_SHIFT	device/LPC54018.h	1338;"	d
CAN_IE_BEUE	device/LPC54018.h	1342;"	d
CAN_IE_BEUE_MASK	device/LPC54018.h	1340;"	d
CAN_IE_BEUE_SHIFT	device/LPC54018.h	1341;"	d
CAN_IE_BOE	device/LPC54018.h	1354;"	d
CAN_IE_BOE_MASK	device/LPC54018.h	1352;"	d
CAN_IE_BOE_SHIFT	device/LPC54018.h	1353;"	d
CAN_IE_DRXE	device/LPC54018.h	1336;"	d
CAN_IE_DRXE_MASK	device/LPC54018.h	1334;"	d
CAN_IE_DRXE_SHIFT	device/LPC54018.h	1335;"	d
CAN_IE_ELOE	device/LPC54018.h	1345;"	d
CAN_IE_ELOE_MASK	device/LPC54018.h	1343;"	d
CAN_IE_ELOE_SHIFT	device/LPC54018.h	1344;"	d
CAN_IE_EPE	device/LPC54018.h	1348;"	d
CAN_IE_EPE_MASK	device/LPC54018.h	1346;"	d
CAN_IE_EPE_SHIFT	device/LPC54018.h	1347;"	d
CAN_IE_EWE	device/LPC54018.h	1351;"	d
CAN_IE_EWE_MASK	device/LPC54018.h	1349;"	d
CAN_IE_EWE_SHIFT	device/LPC54018.h	1350;"	d
CAN_IE_HPME	device/LPC54018.h	1303;"	d
CAN_IE_HPME_MASK	device/LPC54018.h	1301;"	d
CAN_IE_HPME_SHIFT	device/LPC54018.h	1302;"	d
CAN_IE_MRAFE	device/LPC54018.h	1330;"	d
CAN_IE_MRAFE_MASK	device/LPC54018.h	1328;"	d
CAN_IE_MRAFE_SHIFT	device/LPC54018.h	1329;"	d
CAN_IE_PEAE	device/LPC54018.h	1360;"	d
CAN_IE_PEAE_MASK	device/LPC54018.h	1358;"	d
CAN_IE_PEAE_SHIFT	device/LPC54018.h	1359;"	d
CAN_IE_PEDE	device/LPC54018.h	1363;"	d
CAN_IE_PEDE_MASK	device/LPC54018.h	1361;"	d
CAN_IE_PEDE_SHIFT	device/LPC54018.h	1362;"	d
CAN_IE_RF0FE	device/LPC54018.h	1285;"	d
CAN_IE_RF0FE_MASK	device/LPC54018.h	1283;"	d
CAN_IE_RF0FE_SHIFT	device/LPC54018.h	1284;"	d
CAN_IE_RF0LE	device/LPC54018.h	1288;"	d
CAN_IE_RF0LE_MASK	device/LPC54018.h	1286;"	d
CAN_IE_RF0LE_SHIFT	device/LPC54018.h	1287;"	d
CAN_IE_RF0NE	device/LPC54018.h	1279;"	d
CAN_IE_RF0NE_MASK	device/LPC54018.h	1277;"	d
CAN_IE_RF0NE_SHIFT	device/LPC54018.h	1278;"	d
CAN_IE_RF0WE	device/LPC54018.h	1282;"	d
CAN_IE_RF0WE_MASK	device/LPC54018.h	1280;"	d
CAN_IE_RF0WE_SHIFT	device/LPC54018.h	1281;"	d
CAN_IE_RF1FE	device/LPC54018.h	1297;"	d
CAN_IE_RF1FE_MASK	device/LPC54018.h	1295;"	d
CAN_IE_RF1FE_SHIFT	device/LPC54018.h	1296;"	d
CAN_IE_RF1LE	device/LPC54018.h	1300;"	d
CAN_IE_RF1LE_MASK	device/LPC54018.h	1298;"	d
CAN_IE_RF1LE_SHIFT	device/LPC54018.h	1299;"	d
CAN_IE_RF1NE	device/LPC54018.h	1291;"	d
CAN_IE_RF1NE_MASK	device/LPC54018.h	1289;"	d
CAN_IE_RF1NE_SHIFT	device/LPC54018.h	1290;"	d
CAN_IE_RF1WE	device/LPC54018.h	1294;"	d
CAN_IE_RF1WE_MASK	device/LPC54018.h	1292;"	d
CAN_IE_RF1WE_SHIFT	device/LPC54018.h	1293;"	d
CAN_IE_TCE	device/LPC54018.h	1306;"	d
CAN_IE_TCE_MASK	device/LPC54018.h	1304;"	d
CAN_IE_TCE_SHIFT	device/LPC54018.h	1305;"	d
CAN_IE_TCFE	device/LPC54018.h	1309;"	d
CAN_IE_TCFE_MASK	device/LPC54018.h	1307;"	d
CAN_IE_TCFE_SHIFT	device/LPC54018.h	1308;"	d
CAN_IE_TEFFE	device/LPC54018.h	1321;"	d
CAN_IE_TEFFE_MASK	device/LPC54018.h	1319;"	d
CAN_IE_TEFFE_SHIFT	device/LPC54018.h	1320;"	d
CAN_IE_TEFLE	device/LPC54018.h	1324;"	d
CAN_IE_TEFLE_MASK	device/LPC54018.h	1322;"	d
CAN_IE_TEFLE_SHIFT	device/LPC54018.h	1323;"	d
CAN_IE_TEFNE	device/LPC54018.h	1315;"	d
CAN_IE_TEFNE_MASK	device/LPC54018.h	1313;"	d
CAN_IE_TEFNE_SHIFT	device/LPC54018.h	1314;"	d
CAN_IE_TEFWE	device/LPC54018.h	1318;"	d
CAN_IE_TEFWE_MASK	device/LPC54018.h	1316;"	d
CAN_IE_TEFWE_SHIFT	device/LPC54018.h	1317;"	d
CAN_IE_TFEE	device/LPC54018.h	1312;"	d
CAN_IE_TFEE_MASK	device/LPC54018.h	1310;"	d
CAN_IE_TFEE_SHIFT	device/LPC54018.h	1311;"	d
CAN_IE_TOOE	device/LPC54018.h	1333;"	d
CAN_IE_TOOE_MASK	device/LPC54018.h	1331;"	d
CAN_IE_TOOE_SHIFT	device/LPC54018.h	1332;"	d
CAN_IE_TSWE	device/LPC54018.h	1327;"	d
CAN_IE_TSWE_MASK	device/LPC54018.h	1325;"	d
CAN_IE_TSWE_SHIFT	device/LPC54018.h	1326;"	d
CAN_IE_WDIE	device/LPC54018.h	1357;"	d
CAN_IE_WDIE_MASK	device/LPC54018.h	1355;"	d
CAN_IE_WDIE_SHIFT	device/LPC54018.h	1356;"	d
CAN_ILE_EINT0	device/LPC54018.h	1467;"	d
CAN_ILE_EINT0_MASK	device/LPC54018.h	1465;"	d
CAN_ILE_EINT0_SHIFT	device/LPC54018.h	1466;"	d
CAN_ILE_EINT1	device/LPC54018.h	1470;"	d
CAN_ILE_EINT1_MASK	device/LPC54018.h	1468;"	d
CAN_ILE_EINT1_SHIFT	device/LPC54018.h	1469;"	d
CAN_ILS_ARAL	device/LPC54018.h	1460;"	d
CAN_ILS_ARAL_MASK	device/LPC54018.h	1458;"	d
CAN_ILS_ARAL_SHIFT	device/LPC54018.h	1459;"	d
CAN_ILS_BECL	device/LPC54018.h	1433;"	d
CAN_ILS_BECL_MASK	device/LPC54018.h	1431;"	d
CAN_ILS_BECL_SHIFT	device/LPC54018.h	1432;"	d
CAN_ILS_BEUL	device/LPC54018.h	1436;"	d
CAN_ILS_BEUL_MASK	device/LPC54018.h	1434;"	d
CAN_ILS_BEUL_SHIFT	device/LPC54018.h	1435;"	d
CAN_ILS_BOL	device/LPC54018.h	1448;"	d
CAN_ILS_BOL_MASK	device/LPC54018.h	1446;"	d
CAN_ILS_BOL_SHIFT	device/LPC54018.h	1447;"	d
CAN_ILS_DRXL	device/LPC54018.h	1430;"	d
CAN_ILS_DRXL_MASK	device/LPC54018.h	1428;"	d
CAN_ILS_DRXL_SHIFT	device/LPC54018.h	1429;"	d
CAN_ILS_ELOL	device/LPC54018.h	1439;"	d
CAN_ILS_ELOL_MASK	device/LPC54018.h	1437;"	d
CAN_ILS_ELOL_SHIFT	device/LPC54018.h	1438;"	d
CAN_ILS_EPL	device/LPC54018.h	1442;"	d
CAN_ILS_EPL_MASK	device/LPC54018.h	1440;"	d
CAN_ILS_EPL_SHIFT	device/LPC54018.h	1441;"	d
CAN_ILS_EWL	device/LPC54018.h	1445;"	d
CAN_ILS_EWL_MASK	device/LPC54018.h	1443;"	d
CAN_ILS_EWL_SHIFT	device/LPC54018.h	1444;"	d
CAN_ILS_HPML	device/LPC54018.h	1397;"	d
CAN_ILS_HPML_MASK	device/LPC54018.h	1395;"	d
CAN_ILS_HPML_SHIFT	device/LPC54018.h	1396;"	d
CAN_ILS_MRAFL	device/LPC54018.h	1424;"	d
CAN_ILS_MRAFL_MASK	device/LPC54018.h	1422;"	d
CAN_ILS_MRAFL_SHIFT	device/LPC54018.h	1423;"	d
CAN_ILS_PEAL	device/LPC54018.h	1454;"	d
CAN_ILS_PEAL_MASK	device/LPC54018.h	1452;"	d
CAN_ILS_PEAL_SHIFT	device/LPC54018.h	1453;"	d
CAN_ILS_PEDL	device/LPC54018.h	1457;"	d
CAN_ILS_PEDL_MASK	device/LPC54018.h	1455;"	d
CAN_ILS_PEDL_SHIFT	device/LPC54018.h	1456;"	d
CAN_ILS_RF0FL	device/LPC54018.h	1379;"	d
CAN_ILS_RF0FL_MASK	device/LPC54018.h	1377;"	d
CAN_ILS_RF0FL_SHIFT	device/LPC54018.h	1378;"	d
CAN_ILS_RF0LL	device/LPC54018.h	1382;"	d
CAN_ILS_RF0LL_MASK	device/LPC54018.h	1380;"	d
CAN_ILS_RF0LL_SHIFT	device/LPC54018.h	1381;"	d
CAN_ILS_RF0NL	device/LPC54018.h	1373;"	d
CAN_ILS_RF0NL_MASK	device/LPC54018.h	1371;"	d
CAN_ILS_RF0NL_SHIFT	device/LPC54018.h	1372;"	d
CAN_ILS_RF0WL	device/LPC54018.h	1376;"	d
CAN_ILS_RF0WL_MASK	device/LPC54018.h	1374;"	d
CAN_ILS_RF0WL_SHIFT	device/LPC54018.h	1375;"	d
CAN_ILS_RF1FL	device/LPC54018.h	1391;"	d
CAN_ILS_RF1FL_MASK	device/LPC54018.h	1389;"	d
CAN_ILS_RF1FL_SHIFT	device/LPC54018.h	1390;"	d
CAN_ILS_RF1LL	device/LPC54018.h	1394;"	d
CAN_ILS_RF1LL_MASK	device/LPC54018.h	1392;"	d
CAN_ILS_RF1LL_SHIFT	device/LPC54018.h	1393;"	d
CAN_ILS_RF1NL	device/LPC54018.h	1385;"	d
CAN_ILS_RF1NL_MASK	device/LPC54018.h	1383;"	d
CAN_ILS_RF1NL_SHIFT	device/LPC54018.h	1384;"	d
CAN_ILS_RF1WL	device/LPC54018.h	1388;"	d
CAN_ILS_RF1WL_MASK	device/LPC54018.h	1386;"	d
CAN_ILS_RF1WL_SHIFT	device/LPC54018.h	1387;"	d
CAN_ILS_TCFL	device/LPC54018.h	1403;"	d
CAN_ILS_TCFL_MASK	device/LPC54018.h	1401;"	d
CAN_ILS_TCFL_SHIFT	device/LPC54018.h	1402;"	d
CAN_ILS_TCL	device/LPC54018.h	1400;"	d
CAN_ILS_TCL_MASK	device/LPC54018.h	1398;"	d
CAN_ILS_TCL_SHIFT	device/LPC54018.h	1399;"	d
CAN_ILS_TEFFL	device/LPC54018.h	1415;"	d
CAN_ILS_TEFFL_MASK	device/LPC54018.h	1413;"	d
CAN_ILS_TEFFL_SHIFT	device/LPC54018.h	1414;"	d
CAN_ILS_TEFLL	device/LPC54018.h	1418;"	d
CAN_ILS_TEFLL_MASK	device/LPC54018.h	1416;"	d
CAN_ILS_TEFLL_SHIFT	device/LPC54018.h	1417;"	d
CAN_ILS_TEFNL	device/LPC54018.h	1409;"	d
CAN_ILS_TEFNL_MASK	device/LPC54018.h	1407;"	d
CAN_ILS_TEFNL_SHIFT	device/LPC54018.h	1408;"	d
CAN_ILS_TEFWL	device/LPC54018.h	1412;"	d
CAN_ILS_TEFWL_MASK	device/LPC54018.h	1410;"	d
CAN_ILS_TEFWL_SHIFT	device/LPC54018.h	1411;"	d
CAN_ILS_TFEL	device/LPC54018.h	1406;"	d
CAN_ILS_TFEL_MASK	device/LPC54018.h	1404;"	d
CAN_ILS_TFEL_SHIFT	device/LPC54018.h	1405;"	d
CAN_ILS_TOOL	device/LPC54018.h	1427;"	d
CAN_ILS_TOOL_MASK	device/LPC54018.h	1425;"	d
CAN_ILS_TOOL_SHIFT	device/LPC54018.h	1426;"	d
CAN_ILS_TSWL	device/LPC54018.h	1421;"	d
CAN_ILS_TSWL_MASK	device/LPC54018.h	1419;"	d
CAN_ILS_TSWL_SHIFT	device/LPC54018.h	1420;"	d
CAN_ILS_WDIL	device/LPC54018.h	1451;"	d
CAN_ILS_WDIL_MASK	device/LPC54018.h	1449;"	d
CAN_ILS_WDIL_SHIFT	device/LPC54018.h	1450;"	d
CAN_IRQS	device/LPC54018.h	1818;"	d
CAN_IR_ARA	device/LPC54018.h	1272;"	d
CAN_IR_ARA_MASK	device/LPC54018.h	1270;"	d
CAN_IR_ARA_SHIFT	device/LPC54018.h	1271;"	d
CAN_IR_BEC	device/LPC54018.h	1245;"	d
CAN_IR_BEC_MASK	device/LPC54018.h	1243;"	d
CAN_IR_BEC_SHIFT	device/LPC54018.h	1244;"	d
CAN_IR_BEU	device/LPC54018.h	1248;"	d
CAN_IR_BEU_MASK	device/LPC54018.h	1246;"	d
CAN_IR_BEU_SHIFT	device/LPC54018.h	1247;"	d
CAN_IR_BO	device/LPC54018.h	1260;"	d
CAN_IR_BO_MASK	device/LPC54018.h	1258;"	d
CAN_IR_BO_SHIFT	device/LPC54018.h	1259;"	d
CAN_IR_DRX	device/LPC54018.h	1242;"	d
CAN_IR_DRX_MASK	device/LPC54018.h	1240;"	d
CAN_IR_DRX_SHIFT	device/LPC54018.h	1241;"	d
CAN_IR_ELO	device/LPC54018.h	1251;"	d
CAN_IR_ELO_MASK	device/LPC54018.h	1249;"	d
CAN_IR_ELO_SHIFT	device/LPC54018.h	1250;"	d
CAN_IR_EP	device/LPC54018.h	1254;"	d
CAN_IR_EP_MASK	device/LPC54018.h	1252;"	d
CAN_IR_EP_SHIFT	device/LPC54018.h	1253;"	d
CAN_IR_EW	device/LPC54018.h	1257;"	d
CAN_IR_EW_MASK	device/LPC54018.h	1255;"	d
CAN_IR_EW_SHIFT	device/LPC54018.h	1256;"	d
CAN_IR_HPM	device/LPC54018.h	1209;"	d
CAN_IR_HPM_MASK	device/LPC54018.h	1207;"	d
CAN_IR_HPM_SHIFT	device/LPC54018.h	1208;"	d
CAN_IR_MRAF	device/LPC54018.h	1236;"	d
CAN_IR_MRAF_MASK	device/LPC54018.h	1234;"	d
CAN_IR_MRAF_SHIFT	device/LPC54018.h	1235;"	d
CAN_IR_PEA	device/LPC54018.h	1266;"	d
CAN_IR_PEA_MASK	device/LPC54018.h	1264;"	d
CAN_IR_PEA_SHIFT	device/LPC54018.h	1265;"	d
CAN_IR_PED	device/LPC54018.h	1269;"	d
CAN_IR_PED_MASK	device/LPC54018.h	1267;"	d
CAN_IR_PED_SHIFT	device/LPC54018.h	1268;"	d
CAN_IR_RF0F	device/LPC54018.h	1191;"	d
CAN_IR_RF0F_MASK	device/LPC54018.h	1189;"	d
CAN_IR_RF0F_SHIFT	device/LPC54018.h	1190;"	d
CAN_IR_RF0L	device/LPC54018.h	1194;"	d
CAN_IR_RF0L_MASK	device/LPC54018.h	1192;"	d
CAN_IR_RF0L_SHIFT	device/LPC54018.h	1193;"	d
CAN_IR_RF0N	device/LPC54018.h	1185;"	d
CAN_IR_RF0N_MASK	device/LPC54018.h	1183;"	d
CAN_IR_RF0N_SHIFT	device/LPC54018.h	1184;"	d
CAN_IR_RF0W	device/LPC54018.h	1188;"	d
CAN_IR_RF0W_MASK	device/LPC54018.h	1186;"	d
CAN_IR_RF0W_SHIFT	device/LPC54018.h	1187;"	d
CAN_IR_RF1F	device/LPC54018.h	1203;"	d
CAN_IR_RF1F_MASK	device/LPC54018.h	1201;"	d
CAN_IR_RF1F_SHIFT	device/LPC54018.h	1202;"	d
CAN_IR_RF1L	device/LPC54018.h	1206;"	d
CAN_IR_RF1L_MASK	device/LPC54018.h	1204;"	d
CAN_IR_RF1L_SHIFT	device/LPC54018.h	1205;"	d
CAN_IR_RF1N	device/LPC54018.h	1197;"	d
CAN_IR_RF1N_MASK	device/LPC54018.h	1195;"	d
CAN_IR_RF1N_SHIFT	device/LPC54018.h	1196;"	d
CAN_IR_RF1W	device/LPC54018.h	1200;"	d
CAN_IR_RF1W_MASK	device/LPC54018.h	1198;"	d
CAN_IR_RF1W_SHIFT	device/LPC54018.h	1199;"	d
CAN_IR_TC	device/LPC54018.h	1212;"	d
CAN_IR_TCF	device/LPC54018.h	1215;"	d
CAN_IR_TCF_MASK	device/LPC54018.h	1213;"	d
CAN_IR_TCF_SHIFT	device/LPC54018.h	1214;"	d
CAN_IR_TC_MASK	device/LPC54018.h	1210;"	d
CAN_IR_TC_SHIFT	device/LPC54018.h	1211;"	d
CAN_IR_TEFF	device/LPC54018.h	1227;"	d
CAN_IR_TEFF_MASK	device/LPC54018.h	1225;"	d
CAN_IR_TEFF_SHIFT	device/LPC54018.h	1226;"	d
CAN_IR_TEFL	device/LPC54018.h	1230;"	d
CAN_IR_TEFL_MASK	device/LPC54018.h	1228;"	d
CAN_IR_TEFL_SHIFT	device/LPC54018.h	1229;"	d
CAN_IR_TEFN	device/LPC54018.h	1221;"	d
CAN_IR_TEFN_MASK	device/LPC54018.h	1219;"	d
CAN_IR_TEFN_SHIFT	device/LPC54018.h	1220;"	d
CAN_IR_TEFW	device/LPC54018.h	1224;"	d
CAN_IR_TEFW_MASK	device/LPC54018.h	1222;"	d
CAN_IR_TEFW_SHIFT	device/LPC54018.h	1223;"	d
CAN_IR_TFE	device/LPC54018.h	1218;"	d
CAN_IR_TFE_MASK	device/LPC54018.h	1216;"	d
CAN_IR_TFE_SHIFT	device/LPC54018.h	1217;"	d
CAN_IR_TOO	device/LPC54018.h	1239;"	d
CAN_IR_TOO_MASK	device/LPC54018.h	1237;"	d
CAN_IR_TOO_SHIFT	device/LPC54018.h	1238;"	d
CAN_IR_TSW	device/LPC54018.h	1233;"	d
CAN_IR_TSW_MASK	device/LPC54018.h	1231;"	d
CAN_IR_TSW_SHIFT	device/LPC54018.h	1232;"	d
CAN_IR_WDI	device/LPC54018.h	1263;"	d
CAN_IR_WDI_MASK	device/LPC54018.h	1261;"	d
CAN_IR_WDI_SHIFT	device/LPC54018.h	1262;"	d
CAN_MRBA_BA	device/LPC54018.h	1778;"	d
CAN_MRBA_BA_MASK	device/LPC54018.h	1776;"	d
CAN_MRBA_BA_SHIFT	device/LPC54018.h	1777;"	d
CAN_NBTP_NBRP	device/LPC54018.h	1075;"	d
CAN_NBTP_NBRP_MASK	device/LPC54018.h	1073;"	d
CAN_NBTP_NBRP_SHIFT	device/LPC54018.h	1074;"	d
CAN_NBTP_NSJW	device/LPC54018.h	1078;"	d
CAN_NBTP_NSJW_MASK	device/LPC54018.h	1076;"	d
CAN_NBTP_NSJW_SHIFT	device/LPC54018.h	1077;"	d
CAN_NBTP_NTSEG1	device/LPC54018.h	1072;"	d
CAN_NBTP_NTSEG1_MASK	device/LPC54018.h	1070;"	d
CAN_NBTP_NTSEG1_SHIFT	device/LPC54018.h	1071;"	d
CAN_NBTP_NTSEG2	device/LPC54018.h	1069;"	d
CAN_NBTP_NTSEG2_MASK	device/LPC54018.h	1067;"	d
CAN_NBTP_NTSEG2_SHIFT	device/LPC54018.h	1068;"	d
CAN_NDAT1_ND	device/LPC54018.h	1536;"	d
CAN_NDAT1_ND_MASK	device/LPC54018.h	1534;"	d
CAN_NDAT1_ND_SHIFT	device/LPC54018.h	1535;"	d
CAN_NDAT2_ND	device/LPC54018.h	1543;"	d
CAN_NDAT2_ND_MASK	device/LPC54018.h	1541;"	d
CAN_NDAT2_ND_SHIFT	device/LPC54018.h	1542;"	d
CAN_PSR_ACT	device/LPC54018.h	1141;"	d
CAN_PSR_ACT_MASK	device/LPC54018.h	1139;"	d
CAN_PSR_ACT_SHIFT	device/LPC54018.h	1140;"	d
CAN_PSR_BO	device/LPC54018.h	1150;"	d
CAN_PSR_BO_MASK	device/LPC54018.h	1148;"	d
CAN_PSR_BO_SHIFT	device/LPC54018.h	1149;"	d
CAN_PSR_DLEC	device/LPC54018.h	1153;"	d
CAN_PSR_DLEC_MASK	device/LPC54018.h	1151;"	d
CAN_PSR_DLEC_SHIFT	device/LPC54018.h	1152;"	d
CAN_PSR_EP	device/LPC54018.h	1144;"	d
CAN_PSR_EP_MASK	device/LPC54018.h	1142;"	d
CAN_PSR_EP_SHIFT	device/LPC54018.h	1143;"	d
CAN_PSR_EW	device/LPC54018.h	1147;"	d
CAN_PSR_EW_MASK	device/LPC54018.h	1145;"	d
CAN_PSR_EW_SHIFT	device/LPC54018.h	1146;"	d
CAN_PSR_LEC	device/LPC54018.h	1138;"	d
CAN_PSR_LEC_MASK	device/LPC54018.h	1136;"	d
CAN_PSR_LEC_SHIFT	device/LPC54018.h	1137;"	d
CAN_PSR_PXE	device/LPC54018.h	1165;"	d
CAN_PSR_PXE_MASK	device/LPC54018.h	1163;"	d
CAN_PSR_PXE_SHIFT	device/LPC54018.h	1164;"	d
CAN_PSR_RBRS	device/LPC54018.h	1159;"	d
CAN_PSR_RBRS_MASK	device/LPC54018.h	1157;"	d
CAN_PSR_RBRS_SHIFT	device/LPC54018.h	1158;"	d
CAN_PSR_RESI	device/LPC54018.h	1156;"	d
CAN_PSR_RESI_MASK	device/LPC54018.h	1154;"	d
CAN_PSR_RESI_SHIFT	device/LPC54018.h	1155;"	d
CAN_PSR_RFDF	device/LPC54018.h	1162;"	d
CAN_PSR_RFDF_MASK	device/LPC54018.h	1160;"	d
CAN_PSR_RFDF_SHIFT	device/LPC54018.h	1161;"	d
CAN_PSR_TDCV	device/LPC54018.h	1168;"	d
CAN_PSR_TDCV_MASK	device/LPC54018.h	1166;"	d
CAN_PSR_TDCV_SHIFT	device/LPC54018.h	1167;"	d
CAN_RXBC_RBSA	device/LPC54018.h	1592;"	d
CAN_RXBC_RBSA_MASK	device/LPC54018.h	1590;"	d
CAN_RXBC_RBSA_SHIFT	device/LPC54018.h	1591;"	d
CAN_RXESC_F0DS	device/LPC54018.h	1641;"	d
CAN_RXESC_F0DS_MASK	device/LPC54018.h	1639;"	d
CAN_RXESC_F0DS_SHIFT	device/LPC54018.h	1640;"	d
CAN_RXESC_F1DS	device/LPC54018.h	1644;"	d
CAN_RXESC_F1DS_MASK	device/LPC54018.h	1642;"	d
CAN_RXESC_F1DS_SHIFT	device/LPC54018.h	1643;"	d
CAN_RXESC_RBDS	device/LPC54018.h	1647;"	d
CAN_RXESC_RBDS_MASK	device/LPC54018.h	1645;"	d
CAN_RXESC_RBDS_SHIFT	device/LPC54018.h	1646;"	d
CAN_RXF0A_F0AI	device/LPC54018.h	1585;"	d
CAN_RXF0A_F0AI_MASK	device/LPC54018.h	1583;"	d
CAN_RXF0A_F0AI_SHIFT	device/LPC54018.h	1584;"	d
CAN_RXF0C_F0OM	device/LPC54018.h	1559;"	d
CAN_RXF0C_F0OM_MASK	device/LPC54018.h	1557;"	d
CAN_RXF0C_F0OM_SHIFT	device/LPC54018.h	1558;"	d
CAN_RXF0C_F0S	device/LPC54018.h	1553;"	d
CAN_RXF0C_F0SA	device/LPC54018.h	1550;"	d
CAN_RXF0C_F0SA_MASK	device/LPC54018.h	1548;"	d
CAN_RXF0C_F0SA_SHIFT	device/LPC54018.h	1549;"	d
CAN_RXF0C_F0S_MASK	device/LPC54018.h	1551;"	d
CAN_RXF0C_F0S_SHIFT	device/LPC54018.h	1552;"	d
CAN_RXF0C_F0WM	device/LPC54018.h	1556;"	d
CAN_RXF0C_F0WM_MASK	device/LPC54018.h	1554;"	d
CAN_RXF0C_F0WM_SHIFT	device/LPC54018.h	1555;"	d
CAN_RXF0S_F0F	device/LPC54018.h	1575;"	d
CAN_RXF0S_F0FL	device/LPC54018.h	1566;"	d
CAN_RXF0S_F0FL_MASK	device/LPC54018.h	1564;"	d
CAN_RXF0S_F0FL_SHIFT	device/LPC54018.h	1565;"	d
CAN_RXF0S_F0F_MASK	device/LPC54018.h	1573;"	d
CAN_RXF0S_F0F_SHIFT	device/LPC54018.h	1574;"	d
CAN_RXF0S_F0GI	device/LPC54018.h	1569;"	d
CAN_RXF0S_F0GI_MASK	device/LPC54018.h	1567;"	d
CAN_RXF0S_F0GI_SHIFT	device/LPC54018.h	1568;"	d
CAN_RXF0S_F0PI	device/LPC54018.h	1572;"	d
CAN_RXF0S_F0PI_MASK	device/LPC54018.h	1570;"	d
CAN_RXF0S_F0PI_SHIFT	device/LPC54018.h	1571;"	d
CAN_RXF0S_RF0L	device/LPC54018.h	1578;"	d
CAN_RXF0S_RF0L_MASK	device/LPC54018.h	1576;"	d
CAN_RXF0S_RF0L_SHIFT	device/LPC54018.h	1577;"	d
CAN_RXF1A_F1AI	device/LPC54018.h	1634;"	d
CAN_RXF1A_F1AI_MASK	device/LPC54018.h	1632;"	d
CAN_RXF1A_F1AI_SHIFT	device/LPC54018.h	1633;"	d
CAN_RXF1C_F1OM	device/LPC54018.h	1608;"	d
CAN_RXF1C_F1OM_MASK	device/LPC54018.h	1606;"	d
CAN_RXF1C_F1OM_SHIFT	device/LPC54018.h	1607;"	d
CAN_RXF1C_F1S	device/LPC54018.h	1602;"	d
CAN_RXF1C_F1SA	device/LPC54018.h	1599;"	d
CAN_RXF1C_F1SA_MASK	device/LPC54018.h	1597;"	d
CAN_RXF1C_F1SA_SHIFT	device/LPC54018.h	1598;"	d
CAN_RXF1C_F1S_MASK	device/LPC54018.h	1600;"	d
CAN_RXF1C_F1S_SHIFT	device/LPC54018.h	1601;"	d
CAN_RXF1C_F1WM	device/LPC54018.h	1605;"	d
CAN_RXF1C_F1WM_MASK	device/LPC54018.h	1603;"	d
CAN_RXF1C_F1WM_SHIFT	device/LPC54018.h	1604;"	d
CAN_RXF1S_F1F	device/LPC54018.h	1624;"	d
CAN_RXF1S_F1FL	device/LPC54018.h	1615;"	d
CAN_RXF1S_F1FL_MASK	device/LPC54018.h	1613;"	d
CAN_RXF1S_F1FL_SHIFT	device/LPC54018.h	1614;"	d
CAN_RXF1S_F1F_MASK	device/LPC54018.h	1622;"	d
CAN_RXF1S_F1F_SHIFT	device/LPC54018.h	1623;"	d
CAN_RXF1S_F1GI	device/LPC54018.h	1618;"	d
CAN_RXF1S_F1GI_MASK	device/LPC54018.h	1616;"	d
CAN_RXF1S_F1GI_SHIFT	device/LPC54018.h	1617;"	d
CAN_RXF1S_F1PI	device/LPC54018.h	1621;"	d
CAN_RXF1S_F1PI_MASK	device/LPC54018.h	1619;"	d
CAN_RXF1S_F1PI_SHIFT	device/LPC54018.h	1620;"	d
CAN_RXF1S_RF1L	device/LPC54018.h	1627;"	d
CAN_RXF1S_RF1L_MASK	device/LPC54018.h	1625;"	d
CAN_RXF1S_RF1L_SHIFT	device/LPC54018.h	1626;"	d
CAN_SIDFC_FLSSA	device/LPC54018.h	1493;"	d
CAN_SIDFC_FLSSA_MASK	device/LPC54018.h	1491;"	d
CAN_SIDFC_FLSSA_SHIFT	device/LPC54018.h	1492;"	d
CAN_SIDFC_LSS	device/LPC54018.h	1496;"	d
CAN_SIDFC_LSS_MASK	device/LPC54018.h	1494;"	d
CAN_SIDFC_LSS_SHIFT	device/LPC54018.h	1495;"	d
CAN_TDCR_TDCF	device/LPC54018.h	1175;"	d
CAN_TDCR_TDCF_MASK	device/LPC54018.h	1173;"	d
CAN_TDCR_TDCF_SHIFT	device/LPC54018.h	1174;"	d
CAN_TDCR_TDCO	device/LPC54018.h	1178;"	d
CAN_TDCR_TDCO_MASK	device/LPC54018.h	1176;"	d
CAN_TDCR_TDCO_SHIFT	device/LPC54018.h	1177;"	d
CAN_TEST_LBCK	device/LPC54018.h	1010;"	d
CAN_TEST_LBCK_MASK	device/LPC54018.h	1008;"	d
CAN_TEST_LBCK_SHIFT	device/LPC54018.h	1009;"	d
CAN_TEST_RX	device/LPC54018.h	1016;"	d
CAN_TEST_RX_MASK	device/LPC54018.h	1014;"	d
CAN_TEST_RX_SHIFT	device/LPC54018.h	1015;"	d
CAN_TEST_TX	device/LPC54018.h	1013;"	d
CAN_TEST_TX_MASK	device/LPC54018.h	1011;"	d
CAN_TEST_TX_SHIFT	device/LPC54018.h	1012;"	d
CAN_TOCC_ETOC	device/LPC54018.h	1102;"	d
CAN_TOCC_ETOC_MASK	device/LPC54018.h	1100;"	d
CAN_TOCC_ETOC_SHIFT	device/LPC54018.h	1101;"	d
CAN_TOCC_TOP	device/LPC54018.h	1108;"	d
CAN_TOCC_TOP_MASK	device/LPC54018.h	1106;"	d
CAN_TOCC_TOP_SHIFT	device/LPC54018.h	1107;"	d
CAN_TOCC_TOS	device/LPC54018.h	1105;"	d
CAN_TOCC_TOS_MASK	device/LPC54018.h	1103;"	d
CAN_TOCC_TOS_SHIFT	device/LPC54018.h	1104;"	d
CAN_TOCV_TOC	device/LPC54018.h	1115;"	d
CAN_TOCV_TOC_MASK	device/LPC54018.h	1113;"	d
CAN_TOCV_TOC_SHIFT	device/LPC54018.h	1114;"	d
CAN_TSCC_TCP	device/LPC54018.h	1088;"	d
CAN_TSCC_TCP_MASK	device/LPC54018.h	1086;"	d
CAN_TSCC_TCP_SHIFT	device/LPC54018.h	1087;"	d
CAN_TSCC_TSS	device/LPC54018.h	1085;"	d
CAN_TSCC_TSS_MASK	device/LPC54018.h	1083;"	d
CAN_TSCC_TSS_SHIFT	device/LPC54018.h	1084;"	d
CAN_TSCV_TSC	device/LPC54018.h	1095;"	d
CAN_TSCV_TSC_MASK	device/LPC54018.h	1093;"	d
CAN_TSCV_TSC_SHIFT	device/LPC54018.h	1094;"	d
CAN_TXBAR_AR	device/LPC54018.h	1697;"	d
CAN_TXBAR_AR_MASK	device/LPC54018.h	1695;"	d
CAN_TXBAR_AR_SHIFT	device/LPC54018.h	1696;"	d
CAN_TXBCF_TO	device/LPC54018.h	1718;"	d
CAN_TXBCF_TO_MASK	device/LPC54018.h	1716;"	d
CAN_TXBCF_TO_SHIFT	device/LPC54018.h	1717;"	d
CAN_TXBCIE_CFIE	device/LPC54018.h	1732;"	d
CAN_TXBCIE_CFIE_MASK	device/LPC54018.h	1730;"	d
CAN_TXBCIE_CFIE_SHIFT	device/LPC54018.h	1731;"	d
CAN_TXBCR_CR	device/LPC54018.h	1704;"	d
CAN_TXBCR_CR_MASK	device/LPC54018.h	1702;"	d
CAN_TXBCR_CR_SHIFT	device/LPC54018.h	1703;"	d
CAN_TXBC_NDTB	device/LPC54018.h	1657;"	d
CAN_TXBC_NDTB_MASK	device/LPC54018.h	1655;"	d
CAN_TXBC_NDTB_SHIFT	device/LPC54018.h	1656;"	d
CAN_TXBC_TBSA	device/LPC54018.h	1654;"	d
CAN_TXBC_TBSA_MASK	device/LPC54018.h	1652;"	d
CAN_TXBC_TBSA_SHIFT	device/LPC54018.h	1653;"	d
CAN_TXBC_TFQM	device/LPC54018.h	1663;"	d
CAN_TXBC_TFQM_MASK	device/LPC54018.h	1661;"	d
CAN_TXBC_TFQM_SHIFT	device/LPC54018.h	1662;"	d
CAN_TXBC_TFQS	device/LPC54018.h	1660;"	d
CAN_TXBC_TFQS_MASK	device/LPC54018.h	1658;"	d
CAN_TXBC_TFQS_SHIFT	device/LPC54018.h	1659;"	d
CAN_TXBRP_TRP	device/LPC54018.h	1690;"	d
CAN_TXBRP_TRP_MASK	device/LPC54018.h	1688;"	d
CAN_TXBRP_TRP_SHIFT	device/LPC54018.h	1689;"	d
CAN_TXBTIE_TIE	device/LPC54018.h	1725;"	d
CAN_TXBTIE_TIE_MASK	device/LPC54018.h	1723;"	d
CAN_TXBTIE_TIE_SHIFT	device/LPC54018.h	1724;"	d
CAN_TXBTO_TO	device/LPC54018.h	1711;"	d
CAN_TXBTO_TO_MASK	device/LPC54018.h	1709;"	d
CAN_TXBTO_TO_SHIFT	device/LPC54018.h	1710;"	d
CAN_TXEFA_EFAI	device/LPC54018.h	1771;"	d
CAN_TXEFA_EFAI_MASK	device/LPC54018.h	1769;"	d
CAN_TXEFA_EFAI_SHIFT	device/LPC54018.h	1770;"	d
CAN_TXEFC_EFS	device/LPC54018.h	1742;"	d
CAN_TXEFC_EFSA	device/LPC54018.h	1739;"	d
CAN_TXEFC_EFSA_MASK	device/LPC54018.h	1737;"	d
CAN_TXEFC_EFSA_SHIFT	device/LPC54018.h	1738;"	d
CAN_TXEFC_EFS_MASK	device/LPC54018.h	1740;"	d
CAN_TXEFC_EFS_SHIFT	device/LPC54018.h	1741;"	d
CAN_TXEFC_EFWM	device/LPC54018.h	1745;"	d
CAN_TXEFC_EFWM_MASK	device/LPC54018.h	1743;"	d
CAN_TXEFC_EFWM_SHIFT	device/LPC54018.h	1744;"	d
CAN_TXEFS_EFF	device/LPC54018.h	1761;"	d
CAN_TXEFS_EFFL	device/LPC54018.h	1752;"	d
CAN_TXEFS_EFFL_MASK	device/LPC54018.h	1750;"	d
CAN_TXEFS_EFFL_SHIFT	device/LPC54018.h	1751;"	d
CAN_TXEFS_EFF_MASK	device/LPC54018.h	1759;"	d
CAN_TXEFS_EFF_SHIFT	device/LPC54018.h	1760;"	d
CAN_TXEFS_EFGI	device/LPC54018.h	1755;"	d
CAN_TXEFS_EFGI_MASK	device/LPC54018.h	1753;"	d
CAN_TXEFS_EFGI_SHIFT	device/LPC54018.h	1754;"	d
CAN_TXEFS_EFPI	device/LPC54018.h	1758;"	d
CAN_TXEFS_EFPI_MASK	device/LPC54018.h	1756;"	d
CAN_TXEFS_EFPI_SHIFT	device/LPC54018.h	1757;"	d
CAN_TXEFS_TEFL	device/LPC54018.h	1764;"	d
CAN_TXEFS_TEFL_MASK	device/LPC54018.h	1762;"	d
CAN_TXEFS_TEFL_SHIFT	device/LPC54018.h	1763;"	d
CAN_TXESC_TBDS	device/LPC54018.h	1683;"	d
CAN_TXESC_TBDS_MASK	device/LPC54018.h	1681;"	d
CAN_TXESC_TBDS_SHIFT	device/LPC54018.h	1682;"	d
CAN_TXFQS_TFGI	device/LPC54018.h	1670;"	d
CAN_TXFQS_TFGI_MASK	device/LPC54018.h	1668;"	d
CAN_TXFQS_TFGI_SHIFT	device/LPC54018.h	1669;"	d
CAN_TXFQS_TFQF	device/LPC54018.h	1676;"	d
CAN_TXFQS_TFQF_MASK	device/LPC54018.h	1674;"	d
CAN_TXFQS_TFQF_SHIFT	device/LPC54018.h	1675;"	d
CAN_TXFQS_TFQPI	device/LPC54018.h	1673;"	d
CAN_TXFQS_TFQPI_MASK	device/LPC54018.h	1671;"	d
CAN_TXFQS_TFQPI_SHIFT	device/LPC54018.h	1672;"	d
CAN_Type	device/LPC54018.h	/^} CAN_Type;$/;"	t	typeref:struct:__anon142
CAN_XIDAM_EIDM	device/LPC54018.h	1513;"	d
CAN_XIDAM_EIDM_MASK	device/LPC54018.h	1511;"	d
CAN_XIDAM_EIDM_SHIFT	device/LPC54018.h	1512;"	d
CAN_XIDFC_FLESA	device/LPC54018.h	1503;"	d
CAN_XIDFC_FLESA_MASK	device/LPC54018.h	1501;"	d
CAN_XIDFC_FLESA_SHIFT	device/LPC54018.h	1502;"	d
CAN_XIDFC_LSE	device/LPC54018.h	1506;"	d
CAN_XIDFC_LSE_MASK	device/LPC54018.h	1504;"	d
CAN_XIDFC_LSE_SHIFT	device/LPC54018.h	1505;"	d
CAP	device/LPC54018.h	/^  __I  uint32_t CAP[4];                            \/**< Capture register ., array offset: 0x10, array step: 0x4 *\/$/;"	m	struct:__anon191
CAPCLR	device/LPC54018.h	/^  __O  uint32_t CAPCLR;                            \/**< Capture clear register., offset: 0xC *\/$/;"	m	struct:__anon191
CAPLENGTH_CHIPID	device/LPC54018.h	/^  __I  uint32_t CAPLENGTH_CHIPID;                  \/**< This register contains the offset value towards the start of the operational register space and the version number of the IP block, offset: 0x0 *\/$/;"	m	struct:__anon190
CARDTHRCTL	device/LPC54018.h	/^  __IO uint32_t CARDTHRCTL;                        \/**< Card Threshold Control, offset: 0x100 *\/$/;"	m	struct:__anon177
CBCP_OPT	lwip/src/include/netif/ppp/lcp.h	95;"	d
CBCP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	263;"	d
CCCR	device/LPC54018.h	/^  __IO uint32_t CCCR;                              \/**< CC Control Register, offset: 0x18 *\/$/;"	m	struct:__anon142
CCITT_POLY_16	lwip/src/netif/lowpan6.c	264;"	d	file:
CCP_CODE	lwip/src/include/netif/ppp/ccp.h	64;"	d
CCP_CONFACK	lwip/src/include/netif/ppp/ccp.h	48;"	d
CCP_CONFREQ	lwip/src/include/netif/ppp/ccp.h	47;"	d
CCP_H	lwip/src/include/netif/ppp/ccp.h	37;"	d
CCP_HDRLEN	lwip/src/include/netif/ppp/ccp.h	67;"	d
CCP_ID	lwip/src/include/netif/ppp/ccp.h	65;"	d
CCP_LENGTH	lwip/src/include/netif/ppp/ccp.h	66;"	d
CCP_MAX_OPTION_LENGTH	lwip/src/include/netif/ppp/ccp.h	58;"	d
CCP_OPT_CODE	lwip/src/include/netif/ppp/ccp.h	69;"	d
CCP_OPT_LENGTH	lwip/src/include/netif/ppp/ccp.h	70;"	d
CCP_OPT_MINLEN	lwip/src/include/netif/ppp/ccp.h	71;"	d
CCP_RESETACK	lwip/src/include/netif/ppp/ccp.h	52;"	d
CCP_RESETREQ	lwip/src/include/netif/ppp/ccp.h	51;"	d
CCP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	238;"	d
CCP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	249;"	d
CCP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	250;"	d
CCP_TERMACK	lwip/src/include/netif/ppp/ccp.h	50;"	d
CCP_TERMREQ	lwip/src/include/netif/ppp/ccp.h	49;"	d
CCR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t CCR;                    \/*!< Offset: 0x014 (R\/W)  Configuration Control Register *\/$/;"	m	struct:__anon122
CCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CCR;                    \/*!< Offset: 0x014 (R\/W)  Configuration Control Register *\/$/;"	m	struct:__anon18
CCR	CMSIS/core_cm4.h	/^  __IOM uint32_t CCR;                    \/*!< Offset: 0x014 (R\/W)  Configuration Control Register *\/$/;"	m	struct:__anon40
CCR	device/LPC54018.h	/^  __IO uint32_t CCR;                               \/**< Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place., offset: 0x28 *\/$/;"	m	struct:__anon145
CCSIDR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CCSIDR;                 \/*!< Offset: 0x080 (R\/ )  Cache Size ID Register *\/$/;"	m	struct:__anon18
CDETECT	device/LPC54018.h	/^  __I  uint32_t CDETECT;                           \/**< Card Detect register, offset: 0x50 *\/$/;"	m	struct:__anon177
CFG	device/LPC54018.h	/^    __IO uint32_t CFG;                               \/**< Configuration register for DMA channel ., array offset: 0x400, array step: 0x10 *\/$/;"	m	struct:__anon146::__anon148
CFG	device/LPC54018.h	/^  __IO uint32_t CFG;                               \/**< Capture configuration register., offset: 0x8 *\/$/;"	m	struct:__anon191
CFG	device/LPC54018.h	/^  __IO uint32_t CFG;                               \/**< Configuration for shared functions., offset: 0x800 *\/$/;"	m	struct:__anon160
CFG	device/LPC54018.h	/^  __IO uint32_t CFG;                               \/**< SPI Configuration register, offset: 0x400 *\/$/;"	m	struct:__anon183
CFG	device/LPC54018.h	/^  __IO uint32_t CFG;                               \/**< USART Configuration register. Basic USART configuration settings that typically are not changed during operation., offset: 0x0 *\/$/;"	m	struct:__anon186
CFG1	device/LPC54018.h	/^  __IO uint32_t CFG1;                              \/**< Configuration register 1 for the primary channel pair., offset: 0xC00 *\/$/;"	m	struct:__anon161
CFG2	device/LPC54018.h	/^  __IO uint32_t CFG2;                              \/**< Configuration register 2 for the primary channel pair., offset: 0xC04 *\/$/;"	m	struct:__anon161
CFSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CFSR;                   \/*!< Offset: 0x028 (R\/W)  Configurable Fault Status Register *\/$/;"	m	struct:__anon18
CFSR	CMSIS/core_cm4.h	/^  __IOM uint32_t CFSR;                   \/*!< Offset: 0x028 (R\/W)  Configurable Fault Status Register *\/$/;"	m	struct:__anon40
CHALLENGE_VALID	lwip/src/netif/ppp/chap-new.c	82;"	d	file:
CHAL_MAX_PKTLEN	lwip/src/include/netif/ppp/chap-new.h	75;"	d
CHANEN	device/LPC54018.h	/^  __IO uint32_t CHANEN;                            \/**< Channel Enable register, offset: 0xF00 *\/$/;"	m	struct:__anon149
CHANNEL	device/LPC54018.h	/^  } CHANNEL[2];$/;"	m	struct:__anon149	typeref:struct:__anon149::__anon150
CHANNEL	device/LPC54018.h	/^  } CHANNEL[32];$/;"	m	struct:__anon146	typeref:struct:__anon146::__anon148
CHANNEL	device/LPC54018.h	/^  } CHANNEL[4];$/;"	m	struct:__anon166	typeref:struct:__anon166::__anon167
CHAN_THRSEL	device/LPC54018.h	/^  __IO uint32_t CHAN_THRSEL;                       \/**< ADC Channel-Threshold Select register. Specifies which set of threshold compare registers are to be used for each channel, offset: 0x60 *\/$/;"	m	struct:__anon140
CHAPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	65;"	d
CHAPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	77;"	d
CHAPMS_INCLUDE	lwip/src/include/netif/ppp/chap_ms.h	37;"	d
CHAP_CANDIGEST	lwip/src/include/netif/ppp/chap-new.h	117;"	d
CHAP_CANDIGEST	lwip/src/include/netif/ppp/chap-new.h	123;"	d
CHAP_CHALLENGE	lwip/src/include/netif/ppp/chap-new.h	51;"	d
CHAP_DEFRECHALLENGETIME	lwip/src/include/netif/ppp/ppp_opts.h	435;"	d
CHAP_DEFTIMEOUT	lwip/src/include/netif/ppp/ppp_opts.h	420;"	d
CHAP_DEFTRANSMITS	lwip/src/include/netif/ppp/ppp_opts.h	427;"	d
CHAP_DIGEST	lwip/src/include/netif/ppp/chap-new.h	88;"	d
CHAP_DIGEST	lwip/src/include/netif/ppp/chap-new.h	94;"	d
CHAP_FAILURE	lwip/src/include/netif/ppp/chap-new.h	54;"	d
CHAP_H	lwip/src/include/netif/ppp/chap-new.h	35;"	d
CHAP_HDRLEN	lwip/src/include/netif/ppp/chap-new.h	46;"	d
CHAP_MD5	lwip/src/include/netif/ppp/chap-new.h	59;"	d
CHAP_MD5_PEER	lwip/src/include/netif/ppp/ppp_impl.h	345;"	d
CHAP_MD5_WITHPEER	lwip/src/include/netif/ppp/ppp_impl.h	344;"	d
CHAP_MDTYPE	lwip/src/include/netif/ppp/chap-new.h	100;"	d
CHAP_MDTYPE_D	lwip/src/include/netif/ppp/chap-new.h	104;"	d
CHAP_MDTYPE_D	lwip/src/include/netif/ppp/chap-new.h	110;"	d
CHAP_MDTYPE_SUPPORTED	lwip/src/include/netif/ppp/ppp_impl.h	359;"	d
CHAP_MDTYPE_SUPPORTED	lwip/src/include/netif/ppp/ppp_impl.h	361;"	d
CHAP_MDTYPE_SUPPORTED	lwip/src/include/netif/ppp/ppp_impl.h	365;"	d
CHAP_MICROSOFT	lwip/src/include/netif/ppp/chap-new.h	61;"	d
CHAP_MICROSOFT_V2	lwip/src/include/netif/ppp/chap-new.h	62;"	d
CHAP_MS2_PEER	lwip/src/include/netif/ppp/ppp_impl.h	351;"	d
CHAP_MS2_WITHPEER	lwip/src/include/netif/ppp/ppp_impl.h	350;"	d
CHAP_MS_PEER	lwip/src/include/netif/ppp/ppp_impl.h	349;"	d
CHAP_MS_SHIFT	lwip/src/include/netif/ppp/ppp_impl.h	347;"	d
CHAP_MS_WITHPEER	lwip/src/include/netif/ppp/ppp_impl.h	348;"	d
CHAP_PEER	lwip/src/include/netif/ppp/ppp_impl.h	335;"	d
CHAP_RESPONSE	lwip/src/include/netif/ppp/chap-new.h	52;"	d
CHAP_SUCCESS	lwip/src/include/netif/ppp/chap-new.h	53;"	d
CHAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	212;"	d
CHAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	223;"	d
CHAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	224;"	d
CHAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	255;"	d
CHAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	256;"	d
CHAP_WITHPEER	lwip/src/include/netif/ppp/ppp_impl.h	334;"	d
CHECKBOX_BI_ACTIV	emwin/emWin_header/CHECKBOX.h	206;"	d
CHECKBOX_BI_ACTIV_3STATE	emwin/emWin_header/CHECKBOX.h	81;"	d
CHECKBOX_BI_ACTIV_CHECKED	emwin/emWin_header/CHECKBOX.h	79;"	d
CHECKBOX_BI_ACTIV_UNCHECKED	emwin/emWin_header/CHECKBOX.h	77;"	d
CHECKBOX_BI_INACTIV	emwin/emWin_header/CHECKBOX.h	205;"	d
CHECKBOX_BI_INACTIV_3STATE	emwin/emWin_header/CHECKBOX.h	80;"	d
CHECKBOX_BI_INACTIV_CHECKED	emwin/emWin_header/CHECKBOX.h	78;"	d
CHECKBOX_BI_INACTIV_UNCHECKED	emwin/emWin_header/CHECKBOX.h	76;"	d
CHECKBOX_BKCOLOR0_DEFAULT	emwin/emWin_header/CHECKBOX_Private.h	61;"	d
CHECKBOX_BKCOLOR1_DEFAULT	emwin/emWin_header/CHECKBOX_Private.h	65;"	d
CHECKBOX_CI_DISABLED	emwin/emWin_header/CHECKBOX.h	69;"	d
CHECKBOX_CI_ENABLED	emwin/emWin_header/CHECKBOX.h	70;"	d
CHECKBOX_Check	emwin/emWin_header/CHECKBOX.h	202;"	d
CHECKBOX_DEFAULT_SIZE	emwin/emWin_header/CHECKBOX_Private.h	77;"	d
CHECKBOX_FGCOLOR0_DEFAULT	emwin/emWin_header/CHECKBOX_Private.h	69;"	d
CHECKBOX_FGCOLOR1_DEFAULT	emwin/emWin_header/CHECKBOX_Private.h	73;"	d
CHECKBOX_H	emwin/emWin_header/CHECKBOX.h	46;"	d
CHECKBOX_Handle	emwin/emWin_header/CHECKBOX.h	/^typedef WM_HMEM CHECKBOX_Handle;$/;"	t
CHECKBOX_ID	emwin/emWin_header/WIDGET.h	101;"	d
CHECKBOX_INIT_ID	emwin/emWin_header/CHECKBOX_Private.h	120;"	d
CHECKBOX_INIT_ID	emwin/emWin_header/CHECKBOX_Private.h	122;"	d
CHECKBOX_LOCK_H	emwin/emWin_header/CHECKBOX_Private.h	127;"	d
CHECKBOX_LOCK_H	emwin/emWin_header/CHECKBOX_Private.h	129;"	d
CHECKBOX_Obj	emwin/emWin_header/CHECKBOX_Private.h	/^} CHECKBOX_Obj;$/;"	t	typeref:struct:__anon206
CHECKBOX_PRIVATE_H	emwin/emWin_header/CHECKBOX_Private.h	46;"	d
CHECKBOX_PROPS	emwin/emWin_header/CHECKBOX_Private.h	/^} CHECKBOX_PROPS;$/;"	t	typeref:struct:__anon205
CHECKBOX_SKINFLEX_PI_DISABLED	emwin/emWin_header/CHECKBOX.h	88;"	d
CHECKBOX_SKINFLEX_PI_ENABLED	emwin/emWin_header/CHECKBOX.h	87;"	d
CHECKBOX_SKINFLEX_PROPS	emwin/emWin_header/CHECKBOX.h	/^} CHECKBOX_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon208
CHECKBOX_SKIN_FLEX	emwin/emWin_header/CHECKBOX.h	193;"	d
CHECKBOX_SKIN_PRIVATE	emwin/emWin_header/CHECKBOX_Private.h	/^} CHECKBOX_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon204
CHECKBOX_Uncheck	emwin/emWin_header/CHECKBOX.h	203;"	d
CHECKSUM_CHECK_ICMP	lwip/src/include/lwip/opt.h	2338;"	d
CHECKSUM_CHECK_ICMP6	lwip/src/include/lwip/opt.h	2345;"	d
CHECKSUM_CHECK_IP	lwip/src/include/lwip/opt.h	2317;"	d
CHECKSUM_CHECK_IP	source/lwipopts.h	213;"	d
CHECKSUM_CHECK_IP	source/lwipopts.h	226;"	d
CHECKSUM_CHECK_TCP	lwip/src/include/lwip/opt.h	2331;"	d
CHECKSUM_CHECK_TCP	source/lwipopts.h	217;"	d
CHECKSUM_CHECK_TCP	source/lwipopts.h	230;"	d
CHECKSUM_CHECK_UDP	lwip/src/include/lwip/opt.h	2324;"	d
CHECKSUM_CHECK_UDP	source/lwipopts.h	215;"	d
CHECKSUM_CHECK_UDP	source/lwipopts.h	228;"	d
CHECKSUM_GEN_ICMP	lwip/src/include/lwip/opt.h	2303;"	d
CHECKSUM_GEN_ICMP6	lwip/src/include/lwip/opt.h	2310;"	d
CHECKSUM_GEN_IP	lwip/src/include/lwip/opt.h	2282;"	d
CHECKSUM_GEN_IP	source/lwipopts.h	207;"	d
CHECKSUM_GEN_IP	source/lwipopts.h	220;"	d
CHECKSUM_GEN_IP_INLINE	lwip/src/core/ipv4/ip4.c	77;"	d	file:
CHECKSUM_GEN_IP_INLINE	lwip/src/core/ipv4/ip4.c	79;"	d	file:
CHECKSUM_GEN_TCP	lwip/src/include/lwip/opt.h	2296;"	d
CHECKSUM_GEN_TCP	source/lwipopts.h	211;"	d
CHECKSUM_GEN_TCP	source/lwipopts.h	224;"	d
CHECKSUM_GEN_UDP	lwip/src/include/lwip/opt.h	2289;"	d
CHECKSUM_GEN_UDP	source/lwipopts.h	209;"	d
CHECKSUM_GEN_UDP	source/lwipopts.h	222;"	d
CHECK_OVERFLOW_OP	codec2/_kiss_fft_guts.h	58;"	d
CHECK_OVERFLOW_OP	codec2/_kiss_fft_guts.h	97;"	d
CHOOSECOLOR_CF_MOVEABLE	emwin/emWin_header/CHOOSECOLOR.h	62;"	d
CHOOSECOLOR_CI_FOCUS	emwin/emWin_header/CHOOSECOLOR.h	65;"	d
CHOOSECOLOR_CI_FRAME	emwin/emWin_header/CHOOSECOLOR.h	64;"	d
CHOOSECOLOR_CONTEXT	emwin/emWin_header/CHOOSECOLOR.h	/^} CHOOSECOLOR_CONTEXT;$/;"	t	typeref:struct:__anon234
CHOOSECOLOR_H	emwin/emWin_header/CHOOSECOLOR.h	46;"	d
CHOOSECOLOR_PROPS	emwin/emWin_header/CHOOSECOLOR.h	/^} CHOOSECOLOR_PROPS;$/;"	t	typeref:struct:__anon233
CHOOSEFILE_BI_CANCEL	emwin/emWin_header/CHOOSEFILE.h	71;"	d
CHOOSEFILE_BI_OK	emwin/emWin_header/CHOOSEFILE.h	72;"	d
CHOOSEFILE_BI_UP	emwin/emWin_header/CHOOSEFILE.h	73;"	d
CHOOSEFILE_FINDFIRST	emwin/emWin_header/CHOOSEFILE.h	62;"	d
CHOOSEFILE_FINDNEXT	emwin/emWin_header/CHOOSEFILE.h	63;"	d
CHOOSEFILE_FLAG_DIRECTORY	emwin/emWin_header/CHOOSEFILE.h	65;"	d
CHOOSEFILE_H	emwin/emWin_header/CHOOSEFILE.h	46;"	d
CHOOSEFILE_INFO	emwin/emWin_header/CHOOSEFILE.h	/^struct CHOOSEFILE_INFO {$/;"	s
CHOOSEFILE_INFO	emwin/emWin_header/CHOOSEFILE.h	/^typedef struct CHOOSEFILE_INFO CHOOSEFILE_INFO;$/;"	t	typeref:struct:CHOOSEFILE_INFO
CHOOSEFILE_MAXLEN	emwin/emWin_header/CHOOSEFILE.h	68;"	d
CHeight	emwin/emWin_header/GUI_Type.h	/^  U16 CHeight;      \/* Height of a upper case character (A) *\/$/;"	m	struct:__anon262
CHeight	emwin/emWin_header/GUI_Type.h	/^  U8 CHeight;     \/* Height of a small upper case character (A,X) *\/$/;"	m	struct:GUI_FONT
CHeight	emwin/emWin_header/GUI_Type.h	/^  U8 CHeight;     \/* height of a small upper case character (A,X) *\/$/;"	m	struct:__anon258
CID0	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CID0;                   \/*!< Offset: 0xFF0 (R\/ )  ITM Component  Identification Register #0 *\/$/;"	m	struct:__anon21
CID0	CMSIS/core_cm4.h	/^  __IM  uint32_t CID0;                   \/*!< Offset: 0xFF0 (R\/ )  ITM Component  Identification Register #0 *\/$/;"	m	struct:__anon43
CID1	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CID1;                   \/*!< Offset: 0xFF4 (R\/ )  ITM Component  Identification Register #1 *\/$/;"	m	struct:__anon21
CID1	CMSIS/core_cm4.h	/^  __IM  uint32_t CID1;                   \/*!< Offset: 0xFF4 (R\/ )  ITM Component  Identification Register #1 *\/$/;"	m	struct:__anon43
CID2	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CID2;                   \/*!< Offset: 0xFF8 (R\/ )  ITM Component  Identification Register #2 *\/$/;"	m	struct:__anon21
CID2	CMSIS/core_cm4.h	/^  __IM  uint32_t CID2;                   \/*!< Offset: 0xFF8 (R\/ )  ITM Component  Identification Register #2 *\/$/;"	m	struct:__anon43
CID3	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CID3;                   \/*!< Offset: 0xFFC (R\/ )  ITM Component  Identification Register #3 *\/$/;"	m	struct:__anon21
CID3	CMSIS/core_cm4.h	/^  __IM  uint32_t CID3;                   \/*!< Offset: 0xFFC (R\/ )  ITM Component  Identification Register #3 *\/$/;"	m	struct:__anon43
CIENF	device/LPC54018.h	/^  __O  uint32_t CIENF;                             \/**< Pin interrupt active level or falling edge interrupt clear register, offset: 0x18 *\/$/;"	m	struct:__anon169
CIENR	device/LPC54018.h	/^  __O  uint32_t CIENR;                             \/**< Pin interrupt level (rising edge interrupt) clear register, offset: 0xC *\/$/;"	m	struct:__anon169
CILEN_ADDR	lwip/src/netif/ppp/ipcp.c	318;"	d	file:
CILEN_ADDRS	lwip/src/netif/ppp/ipcp.c	319;"	d	file:
CILEN_BSD_COMPRESS	lwip/src/include/netif/ppp/ccp.h	79;"	d
CILEN_CBCP	lwip/src/netif/ppp/lcp.c	317;"	d	file:
CILEN_CHAP	lwip/src/netif/ppp/lcp.c	311;"	d	file:
CILEN_CHAR	lwip/src/netif/ppp/lcp.c	308;"	d	file:
CILEN_COMPRESS	lwip/src/netif/ppp/ipcp.c	316;"	d	file:
CILEN_COMPRESS	lwip/src/netif/ppp/ipv6cp.c	313;"	d	file:
CILEN_DEFLATE	lwip/src/include/netif/ppp/ccp.h	98;"	d
CILEN_IFACEID	lwip/src/netif/ppp/ipv6cp.c	314;"	d	file:
CILEN_LONG	lwip/src/netif/ppp/lcp.c	313;"	d	file:
CILEN_LQR	lwip/src/netif/ppp/lcp.c	315;"	d	file:
CILEN_MPPE	lwip/src/include/netif/ppp/ccp.h	115;"	d
CILEN_PREDICTOR_1	lwip/src/include/netif/ppp/ccp.h	124;"	d
CILEN_PREDICTOR_2	lwip/src/include/netif/ppp/ccp.h	126;"	d
CILEN_SHORT	lwip/src/netif/ppp/lcp.c	309;"	d	file:
CILEN_VJ	lwip/src/netif/ppp/ipcp.c	317;"	d	file:
CILEN_VOID	lwip/src/netif/ppp/ipcp.c	315;"	d	file:
CILEN_VOID	lwip/src/netif/ppp/ipv6cp.c	312;"	d	file:
CILEN_VOID	lwip/src/netif/ppp/lcp.c	307;"	d	file:
CI_ACCOMPRESSION	lwip/src/include/netif/ppp/lcp.h	67;"	d
CI_ADDR	lwip/src/include/netif/ppp/ipcp.h	62;"	d
CI_ADDRS	lwip/src/include/netif/ppp/ipcp.h	58;"	d
CI_ASYNCMAP	lwip/src/include/netif/ppp/lcp.h	62;"	d
CI_AUTHTYPE	lwip/src/include/netif/ppp/lcp.h	63;"	d
CI_BSD_COMPRESS	lwip/src/include/netif/ppp/ccp.h	78;"	d
CI_CALLBACK	lwip/src/include/netif/ppp/lcp.h	71;"	d
CI_COBS	lwip/src/include/netif/ppp/lcp.h	78;"	d
CI_COMPRESSTYPE	lwip/src/include/netif/ppp/ipcp.h	60;"	d
CI_COMPRESSTYPE	lwip/src/include/netif/ppp/ipv6cp.h	158;"	d
CI_DEFLATE	lwip/src/include/netif/ppp/ccp.h	96;"	d
CI_DEFLATE_DRAFT	lwip/src/include/netif/ppp/ccp.h	97;"	d
CI_EPDISC	lwip/src/include/netif/ppp/lcp.h	74;"	d
CI_FCSALTERN	lwip/src/include/netif/ppp/lcp.h	68;"	d
CI_I18N	lwip/src/include/netif/ppp/lcp.h	81;"	d
CI_IFACEID	lwip/src/include/netif/ppp/ipv6cp.h	156;"	d
CI_LCPAUTH	lwip/src/include/netif/ppp/lcp.h	77;"	d
CI_LDISC	lwip/src/include/netif/ppp/lcp.h	76;"	d
CI_MAGICNUMBER	lwip/src/include/netif/ppp/lcp.h	65;"	d
CI_MPHDRFMT	lwip/src/include/netif/ppp/lcp.h	80;"	d
CI_MPPE	lwip/src/include/netif/ppp/ccp.h	114;"	d
CI_MPPLUS	lwip/src/include/netif/ppp/lcp.h	75;"	d
CI_MRRU	lwip/src/include/netif/ppp/lcp.h	72;"	d
CI_MRU	lwip/src/include/netif/ppp/lcp.h	61;"	d
CI_MS_DNS1	lwip/src/include/netif/ppp/ipcp.h	65;"	d
CI_MS_DNS2	lwip/src/include/netif/ppp/ipcp.h	66;"	d
CI_NUMBERED	lwip/src/include/netif/ppp/lcp.h	70;"	d
CI_PCOMPRESSION	lwip/src/include/netif/ppp/lcp.h	66;"	d
CI_PREDICTOR_1	lwip/src/include/netif/ppp/ccp.h	123;"	d
CI_PREDICTOR_2	lwip/src/include/netif/ppp/ccp.h	125;"	d
CI_PREFELIS	lwip/src/include/netif/ppp/lcp.h	79;"	d
CI_QUALITY	lwip/src/include/netif/ppp/lcp.h	64;"	d
CI_SDL	lwip/src/include/netif/ppp/lcp.h	82;"	d
CI_SDP	lwip/src/include/netif/ppp/lcp.h	69;"	d
CI_SSNHF	lwip/src/include/netif/ppp/lcp.h	73;"	d
CI_VENDOR	lwip/src/include/netif/ppp/lcp.h	60;"	d
CLAIMCLR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t CLAIMCLR;               \/*!< Offset: 0xFA4 (R\/W)  Claim tag clear *\/$/;"	m	struct:__anon125
CLAIMCLR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CLAIMCLR;               \/*!< Offset: 0xFA4 (R\/W)  Claim tag clear *\/$/;"	m	struct:__anon24
CLAIMCLR	CMSIS/core_cm4.h	/^  __IOM uint32_t CLAIMCLR;               \/*!< Offset: 0xFA4 (R\/W)  Claim tag clear *\/$/;"	m	struct:__anon46
CLAIMSET	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t CLAIMSET;               \/*!< Offset: 0xFA0 (R\/W)  Claim tag set *\/$/;"	m	struct:__anon125
CLAIMSET	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CLAIMSET;               \/*!< Offset: 0xFA0 (R\/W)  Claim tag set *\/$/;"	m	struct:__anon24
CLAIMSET	CMSIS/core_cm4.h	/^  __IOM uint32_t CLAIMSET;               \/*!< Offset: 0xFA0 (R\/W)  Claim tag set *\/$/;"	m	struct:__anon46
CLEAR_UNUSED_PIXELS	emwin/emWin_header/GUI_GIF_Private.h	/^typedef void CLEAR_UNUSED_PIXELS(int x0, int y0, IMAGE_DESCRIPTOR * pDescriptor, GUI_GIF_IMAGE_INFO * pInfo, int Num, int Denom);$/;"	t
CLIDR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CLIDR;                  \/*!< Offset: 0x078 (R\/ )  Cache Level ID register *\/$/;"	m	struct:__anon18
CLIMIT	device/LPC54018.h	/^  __IO uint32_t CLIMIT;                            \/**< SPIFI limit register, offset: 0x10 *\/$/;"	m	struct:__anon184
CLKDIV	device/LPC54018.h	/^  __IO uint32_t CLKDIV;                            \/**< Clock Divider register, offset: 0x8 *\/$/;"	m	struct:__anon177
CLKDIV	device/LPC54018.h	/^  __IO uint32_t CLKDIV;                            \/**< Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function., offset: 0x814 *\/$/;"	m	struct:__anon160
CLKENA	device/LPC54018.h	/^  __IO uint32_t CLKENA;                            \/**< Clock Enable register, offset: 0x10 *\/$/;"	m	struct:__anon177
CLKOUTDIV	device/LPC54018.h	/^  __IO uint32_t CLKOUTDIV;                         \/**< CLKOUT clock divider, offset: 0x384 *\/$/;"	m	struct:__anon185
CLKOUTSELA	device/LPC54018.h	/^  __IO uint32_t CLKOUTSELA;                        \/**< CLKOUT clock source select A, offset: 0x288 *\/$/;"	m	struct:__anon185
CLK_ATTACH_ID	drivers/fsl_clock.h	448;"	d
CLK_CLK_IN	device/system_LPC54018.h	67;"	d
CLK_FRO_12MHZ	device/system_LPC54018.h	64;"	d
CLK_FRO_48MHZ	device/system_LPC54018.h	65;"	d
CLK_FRO_96MHZ	device/system_LPC54018.h	66;"	d
CLK_GATE_ABSTRACT_BITS_SHIFT	drivers/fsl_clock.h	296;"	d
CLK_GATE_ABSTRACT_REG_OFFSET	drivers/fsl_clock.h	295;"	d
CLK_GATE_BIT_SHIFT_MASK	drivers/fsl_clock.h	289;"	d
CLK_GATE_BIT_SHIFT_SHIFT	drivers/fsl_clock.h	288;"	d
CLK_GATE_DEFINE	drivers/fsl_clock.h	291;"	d
CLK_GATE_REG_OFFSET_MASK	drivers/fsl_clock.h	287;"	d
CLK_GATE_REG_OFFSET_SHIFT	drivers/fsl_clock.h	286;"	d
CLK_RTC_32K_CLK	device/system_LPC54018.h	63;"	d
CLOCK_AttachClk	drivers/fsl_clock.c	/^void CLOCK_AttachClk(clock_attach_id_t connection)$/;"	f
CLOCK_DisableClock	drivers/fsl_clock.h	/^static inline void CLOCK_DisableClock(clock_ip_name_t clk)$/;"	f
CLOCK_DisableUsbDevicefs0Clock	drivers/fsl_clock.h	/^static inline void CLOCK_DisableUsbDevicefs0Clock(clock_ip_name_t clk)$/;"	f
CLOCK_EnableClock	drivers/fsl_clock.h	/^static inline void CLOCK_EnableClock(clock_ip_name_t clk)$/;"	f
CLOCK_EnableUsbfs0DeviceClock	drivers/fsl_clock.c	/^bool CLOCK_EnableUsbfs0DeviceClock(clock_usb_src_t src, uint32_t freq)$/;"	f
CLOCK_EnableUsbfs0HostClock	drivers/fsl_clock.c	/^bool CLOCK_EnableUsbfs0HostClock(clock_usb_src_t src, uint32_t freq)$/;"	f
CLOCK_EnableUsbhs0DeviceClock	drivers/fsl_clock.c	/^bool CLOCK_EnableUsbhs0DeviceClock(clock_usb_src_t src, uint32_t freq)$/;"	f
CLOCK_EnableUsbhs0HostClock	drivers/fsl_clock.c	/^bool CLOCK_EnableUsbhs0HostClock(clock_usb_src_t src, uint32_t freq)$/;"	f
CLOCK_Enable_SysOsc	drivers/fsl_clock.h	/^__STATIC_INLINE void CLOCK_Enable_SysOsc(bool enable)$/;"	f
CLOCK_GetAdcClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetAdcClkFreq(void)$/;"	f
CLOCK_GetAsyncApbClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetAsyncApbClkFreq(void)$/;"	f
CLOCK_GetAsyncApbClkSrc	drivers/fsl_clock.h	/^__STATIC_INLINE async_clock_src_t CLOCK_GetAsyncApbClkSrc(void)$/;"	f
CLOCK_GetAudioPLLInClockRate	drivers/fsl_clock.c	/^uint32_t CLOCK_GetAudioPLLInClockRate(void)$/;"	f
CLOCK_GetAudioPLLOutClockRate	drivers/fsl_clock.c	/^uint32_t CLOCK_GetAudioPLLOutClockRate(bool recompute)$/;"	f
CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate	drivers/fsl_clock.c	/^static void CLOCK_GetAudioPLLOutFromAudioFracSetupUpdate(pll_setup_t *pSetup)$/;"	f	file:
CLOCK_GetAudioPLLOutFromFractSetup	drivers/fsl_clock.c	/^uint32_t CLOCK_GetAudioPLLOutFromFractSetup(pll_setup_t *pSetup)$/;"	f
CLOCK_GetAudioPLLOutFromSetup	drivers/fsl_clock.c	/^uint32_t CLOCK_GetAudioPLLOutFromSetup(pll_setup_t *pSetup)$/;"	f
CLOCK_GetAudioPLLOutFromSetupUpdate	drivers/fsl_clock.c	/^static void CLOCK_GetAudioPLLOutFromSetupUpdate(pll_setup_t *pSetup)$/;"	f	file:
CLOCK_GetAudioPllOutFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetAudioPllOutFreq(void)$/;"	f
CLOCK_GetClockAttachId	drivers/fsl_clock.c	/^clock_attach_id_t CLOCK_GetClockAttachId(clock_attach_id_t attachId)$/;"	f
CLOCK_GetClockOutClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetClockOutClkFreq(void)$/;"	f
CLOCK_GetCoreSysClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetCoreSysClkFreq(void)$/;"	f
CLOCK_GetDmicClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetDmicClkFreq(void)$/;"	f
CLOCK_GetEmcClkFreq	drivers/fsl_clock.h	/^__STATIC_INLINE uint32_t CLOCK_GetEmcClkFreq(void)$/;"	f
CLOCK_GetExtClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetExtClkFreq(void)$/;"	f
CLOCK_GetFRGInputClock	drivers/fsl_clock.c	/^uint32_t CLOCK_GetFRGInputClock(void)$/;"	f
CLOCK_GetFlexCommClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetFlexCommClkFreq(uint32_t id)$/;"	f
CLOCK_GetFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetFreq(clock_name_t clockName)$/;"	f
CLOCK_GetFrgClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetFrgClkFreq(void)$/;"	f
CLOCK_GetFro12MFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetFro12MFreq(void)$/;"	f
CLOCK_GetFroHfFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetFroHfFreq(void)$/;"	f
CLOCK_GetI2SMClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetI2SMClkFreq(void)$/;"	f
CLOCK_GetLcdClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetLcdClkFreq(void)$/;"	f
CLOCK_GetLcdClkIn	drivers/fsl_clock.c	/^uint32_t CLOCK_GetLcdClkIn(void)$/;"	f
CLOCK_GetMCanClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetMCanClkFreq(uint32_t MCanSel)$/;"	f
CLOCK_GetMclkClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetMclkClkFreq(void)$/;"	f
CLOCK_GetOsc32KFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetOsc32KFreq(void)$/;"	f
CLOCK_GetPllConfig	drivers/fsl_clock.c	/^static pll_error_t CLOCK_GetPllConfig(uint32_t finHz, uint32_t foutHz, pll_setup_t *pSetup)$/;"	f	file:
CLOCK_GetPllConfigInternal	drivers/fsl_clock.c	/^static pll_error_t CLOCK_GetPllConfigInternal(uint32_t finHz, uint32_t foutHz, pll_setup_t *pSetup)$/;"	f	file:
CLOCK_GetPllOutFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetPllOutFreq(void)$/;"	f
CLOCK_GetRomVersion	drivers/fsl_clock.c	/^static uint32_t CLOCK_GetRomVersion(uint8_t *romVersion)$/;"	f	file:
CLOCK_GetSctClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetSctClkFreq(void)$/;"	f
CLOCK_GetSdioClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetSdioClkFreq(void)$/;"	f
CLOCK_GetSpifiClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetSpifiClkFreq(void)$/;"	f
CLOCK_GetSystemPLLInClockRate	drivers/fsl_clock.c	/^uint32_t CLOCK_GetSystemPLLInClockRate(void)$/;"	f
CLOCK_GetSystemPLLOutClockRate	drivers/fsl_clock.c	/^uint32_t CLOCK_GetSystemPLLOutClockRate(bool recompute)$/;"	f
CLOCK_GetSystemPLLOutFromSetup	drivers/fsl_clock.c	/^uint32_t CLOCK_GetSystemPLLOutFromSetup(pll_setup_t *pSetup)$/;"	f
CLOCK_GetSystemPLLOutFromSetupUpdate	drivers/fsl_clock.c	/^static void CLOCK_GetSystemPLLOutFromSetupUpdate(pll_setup_t *pSetup)$/;"	f	file:
CLOCK_GetUsb0ClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetUsb0ClkFreq(void)$/;"	f
CLOCK_GetUsb1ClkFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetUsb1ClkFreq(void)$/;"	f
CLOCK_GetUsbPLLOutClockRate	drivers/fsl_clock.c	/^uint32_t CLOCK_GetUsbPLLOutClockRate(bool recompute)$/;"	f
CLOCK_GetUsbPLLOutFromSetup	drivers/fsl_clock.c	/^uint32_t CLOCK_GetUsbPLLOutFromSetup(const usb_pll_setup_t *pSetup)$/;"	f
CLOCK_GetUsbPLLOutFromSetupUpdate	drivers/fsl_clock.c	/^static void CLOCK_GetUsbPLLOutFromSetupUpdate(const usb_pll_setup_t *pSetup)$/;"	f	file:
CLOCK_GetUsbPllOutFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetUsbPllOutFreq(void)$/;"	f
CLOCK_GetWdtOscFreq	drivers/fsl_clock.c	/^uint32_t CLOCK_GetWdtOscFreq(void)$/;"	f
CLOCK_IsAudioPLLLocked	drivers/fsl_clock.h	/^__STATIC_INLINE bool CLOCK_IsAudioPLLLocked(void)$/;"	f
CLOCK_IsSystemPLLLocked	drivers/fsl_clock.h	/^__STATIC_INLINE bool CLOCK_IsSystemPLLLocked(void)$/;"	f
CLOCK_IsUsbPLLLocked	drivers/fsl_clock.h	/^__STATIC_INLINE bool CLOCK_IsUsbPLLLocked(void)$/;"	f
CLOCK_SetAudioPLLFreq	drivers/fsl_clock.c	/^pll_error_t CLOCK_SetAudioPLLFreq(const pll_setup_t *pSetup)$/;"	f
CLOCK_SetBypassPLL	drivers/fsl_clock.h	/^__STATIC_INLINE void CLOCK_SetBypassPLL(bool bypass)$/;"	f
CLOCK_SetClkDiv	drivers/fsl_clock.c	/^void CLOCK_SetClkDiv(clock_div_name_t div_name, uint32_t divided_by_value, bool reset)$/;"	f
CLOCK_SetFRGClock	drivers/fsl_clock.c	/^uint32_t CLOCK_SetFRGClock(uint32_t freq)$/;"	f
CLOCK_SetPLLFreq	drivers/fsl_clock.c	/^pll_error_t CLOCK_SetPLLFreq(const pll_setup_t *pSetup)$/;"	f
CLOCK_SetStoredAudioPLLClockRate	drivers/fsl_clock.c	/^void CLOCK_SetStoredAudioPLLClockRate(uint32_t rate)$/;"	f
CLOCK_SetStoredPLLClockRate	drivers/fsl_clock.c	/^void CLOCK_SetStoredPLLClockRate(uint32_t rate)$/;"	f
CLOCK_SetStoredUsbPLLClockRate	drivers/fsl_clock.c	/^void CLOCK_SetStoredUsbPLLClockRate(uint32_t rate)$/;"	f
CLOCK_SetUsbPLLFreq	drivers/fsl_clock.c	/^pll_error_t CLOCK_SetUsbPLLFreq(const usb_pll_setup_t *pSetup)$/;"	f
CLOCK_SetupAudioPLLData	drivers/fsl_clock.c	/^pll_error_t CLOCK_SetupAudioPLLData(pll_config_t *pControl, pll_setup_t *pSetup)$/;"	f
CLOCK_SetupAudioPLLPrec	drivers/fsl_clock.c	/^pll_error_t CLOCK_SetupAudioPLLPrec(pll_setup_t *pSetup, uint32_t flagcfg)$/;"	f
CLOCK_SetupAudioPLLPrecFract	drivers/fsl_clock.c	/^pll_error_t CLOCK_SetupAudioPLLPrecFract(pll_setup_t *pSetup, uint32_t flagcfg)$/;"	f
CLOCK_SetupFROClocking	drivers/fsl_clock.c	/^void CLOCK_SetupFROClocking(uint32_t froFreq)$/;"	f
CLOCK_SetupPLLData	drivers/fsl_clock.c	/^pll_error_t CLOCK_SetupPLLData(pll_config_t *pControl, pll_setup_t *pSetup)$/;"	f
CLOCK_SetupSystemPLLMult	drivers/fsl_clock.c	/^void CLOCK_SetupSystemPLLMult(uint32_t multiply_by, uint32_t input_freq)$/;"	f
CLOCK_SetupSystemPLLPrec	drivers/fsl_clock.c	/^pll_error_t CLOCK_SetupSystemPLLPrec(pll_setup_t *pSetup, uint32_t flagcfg)$/;"	f
CLOCK_USR_CFG_PLL_CONFIG_CACHE_COUNT	drivers/fsl_clock.h	52;"	d
CLOSED	lwip/src/include/lwip/tcpbase.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	lwip/src/include/lwip/tcpbase.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	lwip/src/include/lwip/tcpbase.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CLR	device/LPC54018.h	/^    __IO uint32_t CLR;                               \/**< SCT output 0 clear register, array offset: 0x504, array step: 0x8 *\/$/;"	m	struct:__anon172::__anon176
CLR	device/LPC54018.h	/^  __O  uint32_t CLR[6];                            \/**< Clear port, array offset: 0x2280, array step: 0x4 *\/$/;"	m	struct:__anon159
CMD	device/LPC54018.h	/^  __IO uint32_t CMD;                               \/**< Command register, offset: 0x2C *\/$/;"	m	struct:__anon177
CMD	device/LPC54018.h	/^  __IO uint32_t CMD;                               \/**< SPIFI command register, offset: 0x4 *\/$/;"	m	struct:__anon184
CMDARG	device/LPC54018.h	/^  __IO uint32_t CMDARG;                            \/**< Command Argument register, offset: 0x28 *\/$/;"	m	struct:__anon177
CMSG_DATA	lwip/src/include/lwip/sockets.h	172;"	d
CMSG_FIRSTHDR	lwip/src/include/lwip/sockets.h	158;"	d
CMSG_LEN	lwip/src/include/lwip/sockets.h	178;"	d
CMSG_NXTHDR	lwip/src/include/lwip/sockets.h	163;"	d
CMSG_SPACE	lwip/src/include/lwip/sockets.h	175;"	d
CMSIS_INLINE	CMSIS/arm_math.h	449;"	d
CMSIS_INLINE	CMSIS/arm_math.h	454;"	d
CMSIS_INLINE	CMSIS/arm_math.h	459;"	d
CMSIS_INLINE	CMSIS/arm_math.h	464;"	d
CMSIS_INLINE	CMSIS/arm_math.h	469;"	d
CMSIS_INLINE	CMSIS/arm_math.h	474;"	d
CMSIS_INLINE	CMSIS/arm_math.h	479;"	d
CMSIS_NVIC_VIRTUAL_HEADER_FILE	CMSIS/core_armv8mbl.h	1238;"	d
CMSIS_NVIC_VIRTUAL_HEADER_FILE	CMSIS/core_armv8mml.h	2108;"	d
CMSIS_NVIC_VIRTUAL_HEADER_FILE	CMSIS/core_cm4.h	1605;"	d
CMSIS_UNUSED	CMSIS/arm_math.h	448;"	d
CMSIS_UNUSED	CMSIS/arm_math.h	453;"	d
CMSIS_UNUSED	CMSIS/arm_math.h	458;"	d
CMSIS_UNUSED	CMSIS/arm_math.h	463;"	d
CMSIS_UNUSED	CMSIS/arm_math.h	468;"	d
CMSIS_UNUSED	CMSIS/arm_math.h	473;"	d
CMSIS_UNUSED	CMSIS/arm_math.h	478;"	d
CMSIS_VECTAB_VIRTUAL_HEADER_FILE	CMSIS/core_armv8mbl.h	1258;"	d
CMSIS_VECTAB_VIRTUAL_HEADER_FILE	CMSIS/core_armv8mml.h	2128;"	d
CMSIS_VECTAB_VIRTUAL_HEADER_FILE	CMSIS/core_cm4.h	1625;"	d
CM_ADCASYNCCLKSEL	drivers/fsl_clock.h	465;"	d
CM_ASYNCAPB	drivers/fsl_clock.h	486;"	d
CM_AUDPLLCLKSEL	drivers/fsl_clock.h	463;"	d
CM_CLKOUTCLKSELA	drivers/fsl_clock.h	461;"	d
CM_DMICCLKSEL	drivers/fsl_clock.h	481;"	d
CM_FRGCLKSEL	drivers/fsl_clock.h	480;"	d
CM_FXCOMCLKSEL0	drivers/fsl_clock.h	468;"	d
CM_FXCOMCLKSEL1	drivers/fsl_clock.h	469;"	d
CM_FXCOMCLKSEL10	drivers/fsl_clock.h	478;"	d
CM_FXCOMCLKSEL2	drivers/fsl_clock.h	470;"	d
CM_FXCOMCLKSEL3	drivers/fsl_clock.h	471;"	d
CM_FXCOMCLKSEL4	drivers/fsl_clock.h	472;"	d
CM_FXCOMCLKSEL5	drivers/fsl_clock.h	473;"	d
CM_FXCOMCLKSEL6	drivers/fsl_clock.h	474;"	d
CM_FXCOMCLKSEL7	drivers/fsl_clock.h	475;"	d
CM_FXCOMCLKSEL8	drivers/fsl_clock.h	476;"	d
CM_FXCOMCLKSEL9	drivers/fsl_clock.h	477;"	d
CM_LCDCLKSEL	drivers/fsl_clock.h	483;"	d
CM_MAINCLKSELA	drivers/fsl_clock.h	459;"	d
CM_MAINCLKSELB	drivers/fsl_clock.h	460;"	d
CM_MCLKCLKSEL	drivers/fsl_clock.h	479;"	d
CM_SCTCLKSEL	drivers/fsl_clock.h	482;"	d
CM_SDIOCLKSEL	drivers/fsl_clock.h	484;"	d
CM_SPIFICLKSEL	drivers/fsl_clock.h	464;"	d
CM_STICKCLKSEL	drivers/fsl_clock.h	458;"	d
CM_SYSPLLCLKSEL	drivers/fsl_clock.h	462;"	d
CM_USB0CLKSEL	drivers/fsl_clock.h	466;"	d
CM_USB1CLKSEL	drivers/fsl_clock.h	467;"	d
CNLP	codec2/nlp.c	54;"	d	file:
CODEC2	codec2/codec2_internal.h	/^struct CODEC2 {$/;"	s
CODEC2_MODE_1200	codec2/codec2.h	43;"	d
CODEC2_MODE_1300	codec2/codec2.h	42;"	d
CODEC2_MODE_1400	codec2/codec2.h	41;"	d
CODEC2_MODE_1600	codec2/codec2.h	40;"	d
CODEC2_MODE_2400	codec2/codec2.h	39;"	d
CODEC2_MODE_3200	codec2/codec2.h	38;"	d
CODEC2_MODE_700	codec2/codec2.h	44;"	d
CODEC2_MODE_700B	codec2/codec2.h	45;"	d
CODEC2_MODE_700C	codec2/codec2.h	46;"	d
CODEC2_MODE_WB	codec2/codec2.h	47;"	d
CODEC2_OFDM_H	codec2/codec2_ofdm.h	29;"	d
CODEC2_RAND_MAX	codec2/sine.h	46;"	d
CODEC2_WIN32SUPPORT	codec2/codec2_fdmdv.h	50;"	d
CODEC2_WIN32SUPPORT	codec2/codec2_fdmdv.h	52;"	d
CODEC2_WIN32SUPPORT	codec2/codec2_fdmdv.h	55;"	d
CODEC_Deinit	codec/fsl_codec_common.c	/^status_t CODEC_Deinit(codec_handle_t *handle)$/;"	f
CODEC_HANDLE_SIZE	codec/fsl_codec_common.h	24;"	d
CODEC_I2C_Deinit	codec/fsl_codec_i2c.c	/^status_t CODEC_I2C_Deinit(void *handle)$/;"	f
CODEC_I2C_Init	codec/fsl_codec_i2c.c	/^status_t CODEC_I2C_Init(void *handle, uint32_t i2cInstance, uint32_t i2cBaudrate, uint32_t i2cSourceClockHz)$/;"	f
CODEC_I2C_Receive	codec/fsl_codec_i2c.c	/^status_t CODEC_I2C_Receive(void *handle,$/;"	f
CODEC_I2C_Send	codec/fsl_codec_i2c.c	/^status_t CODEC_I2C_Send(void *handle,$/;"	f
CODEC_Init	codec/fsl_codec_common.c	/^status_t CODEC_Init(codec_handle_t *handle, codec_config_t *config)$/;"	f
CODEC_ModuleControl	codec/fsl_codec_common.c	/^status_t CODEC_ModuleControl(codec_handle_t *handle, codec_module_ctrl_cmd_t cmd, uint32_t data)$/;"	f
CODEC_SetFormat	codec/fsl_codec_common.c	/^status_t CODEC_SetFormat(codec_handle_t *handle, uint32_t mclk, uint32_t sampleRate, uint32_t bitWidth)$/;"	f
CODEC_SetMute	codec/fsl_codec_common.c	/^status_t CODEC_SetMute(codec_handle_t *handle, uint32_t playChannel, bool mute)$/;"	f
CODEC_SetPlay	codec/fsl_codec_common.c	/^status_t CODEC_SetPlay(codec_handle_t *handle, uint32_t playSource)$/;"	f
CODEC_SetPower	codec/fsl_codec_common.c	/^status_t CODEC_SetPower(codec_handle_t *handle, codec_module_t module, bool powerOn)$/;"	f
CODEC_SetRecord	codec/fsl_codec_common.c	/^status_t CODEC_SetRecord(codec_handle_t *handle, uint32_t recordSource)$/;"	f
CODEC_SetRecordChannel	codec/fsl_codec_common.c	/^status_t CODEC_SetRecordChannel(codec_handle_t *handle, uint32_t leftRecordChannel, uint32_t rightRecordChannel)$/;"	f
CODEC_SetVolume	codec/fsl_codec_common.c	/^status_t CODEC_SetVolume(codec_handle_t *handle, uint32_t playChannel, uint32_t volume)$/;"	f
CODEC_VOLUME_MAX_VALUE	codec/fsl_codec_common.h	28;"	d
CODENAME	lwip/src/netif/ppp/ipcp.c	322;"	d	file:
CODENAME	lwip/src/netif/ppp/ipv6cp.c	316;"	d	file:
CODENAME	lwip/src/netif/ppp/lcp.c	319;"	d	file:
CODEREJ	lwip/src/include/netif/ppp/fsm.h	72;"	d
COEFF	codec2/nlp.c	47;"	d	file:
COEFF_BUFFER	emwin/emWin_header/GUI_JPEG_Private.h	/^} COEFF_BUFFER;$/;"	t	typeref:struct:__anon363
COHPSK_BITS_PER_FRAME	codec2/codec2_cohpsk.h	31;"	d
COHPSK_CLIP	codec2/codec2_cohpsk.h	39;"	d
COHPSK_FS	codec2/codec2_cohpsk.h	36;"	d
COHPSK_MAX_SAMPLES_PER_FRAME	codec2/codec2_cohpsk.h	34;"	d
COHPSK_NC	codec2/codec2_cohpsk.h	32;"	d
COHPSK_NOM_SAMPLES_PER_FRAME	codec2/codec2_cohpsk.h	33;"	d
COHPSK_RS	codec2/codec2_cohpsk.h	35;"	d
COLOR_CONVERSION	emwin/emwin_support.h	15;"	d
COMMON	device/LPC54018.h	/^  } COMMON[1];$/;"	m	struct:__anon146	typeref:struct:__anon146::__anon147
COMMON_H_	source/common.h	9;"	d
COMM_FEATURE_DATA_SIZE	vcom/virtual_com.h	40;"	d
COMP	codec2/comp.h	/^} COMP;$/;"	t	typeref:struct:__anon132
COMP0	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP0;                  \/*!< Offset: 0x020 (R\/W)  Comparator Register 0 *\/$/;"	m	struct:__anon124
COMP0	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP0;                  \/*!< Offset: 0x020 (R\/W)  Comparator Register 0 *\/$/;"	m	struct:__anon23
COMP0	CMSIS/core_cm4.h	/^  __IOM uint32_t COMP0;                  \/*!< Offset: 0x020 (R\/W)  Comparator Register 0 *\/$/;"	m	struct:__anon45
COMP1	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP1;                  \/*!< Offset: 0x030 (R\/W)  Comparator Register 1 *\/$/;"	m	struct:__anon124
COMP1	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP1;                  \/*!< Offset: 0x030 (R\/W)  Comparator Register 1 *\/$/;"	m	struct:__anon23
COMP1	CMSIS/core_cm4.h	/^  __IOM uint32_t COMP1;                  \/*!< Offset: 0x030 (R\/W)  Comparator Register 1 *\/$/;"	m	struct:__anon45
COMP10	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP10;                 \/*!< Offset: 0x0C0 (R\/W)  Comparator Register 10 *\/$/;"	m	struct:__anon124
COMP10	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP10;                 \/*!< Offset: 0x0C0 (R\/W)  Comparator Register 10 *\/$/;"	m	struct:__anon23
COMP11	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP11;                 \/*!< Offset: 0x0D0 (R\/W)  Comparator Register 11 *\/$/;"	m	struct:__anon124
COMP11	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP11;                 \/*!< Offset: 0x0D0 (R\/W)  Comparator Register 11 *\/$/;"	m	struct:__anon23
COMP12	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP12;                 \/*!< Offset: 0x0E0 (R\/W)  Comparator Register 12 *\/$/;"	m	struct:__anon124
COMP12	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP12;                 \/*!< Offset: 0x0E0 (R\/W)  Comparator Register 12 *\/$/;"	m	struct:__anon23
COMP13	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP13;                 \/*!< Offset: 0x0F0 (R\/W)  Comparator Register 13 *\/$/;"	m	struct:__anon124
COMP13	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP13;                 \/*!< Offset: 0x0F0 (R\/W)  Comparator Register 13 *\/$/;"	m	struct:__anon23
COMP14	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP14;                 \/*!< Offset: 0x100 (R\/W)  Comparator Register 14 *\/$/;"	m	struct:__anon124
COMP14	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP14;                 \/*!< Offset: 0x100 (R\/W)  Comparator Register 14 *\/$/;"	m	struct:__anon23
COMP15	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP15;                 \/*!< Offset: 0x110 (R\/W)  Comparator Register 15 *\/$/;"	m	struct:__anon124
COMP15	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP15;                 \/*!< Offset: 0x110 (R\/W)  Comparator Register 15 *\/$/;"	m	struct:__anon23
COMP2	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP2;                  \/*!< Offset: 0x040 (R\/W)  Comparator Register 2 *\/$/;"	m	struct:__anon124
COMP2	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP2;                  \/*!< Offset: 0x040 (R\/W)  Comparator Register 2 *\/$/;"	m	struct:__anon23
COMP2	CMSIS/core_cm4.h	/^  __IOM uint32_t COMP2;                  \/*!< Offset: 0x040 (R\/W)  Comparator Register 2 *\/$/;"	m	struct:__anon45
COMP3	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP3;                  \/*!< Offset: 0x050 (R\/W)  Comparator Register 3 *\/$/;"	m	struct:__anon124
COMP3	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP3;                  \/*!< Offset: 0x050 (R\/W)  Comparator Register 3 *\/$/;"	m	struct:__anon23
COMP3	CMSIS/core_cm4.h	/^  __IOM uint32_t COMP3;                  \/*!< Offset: 0x050 (R\/W)  Comparator Register 3 *\/$/;"	m	struct:__anon45
COMP4	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP4;                  \/*!< Offset: 0x060 (R\/W)  Comparator Register 4 *\/$/;"	m	struct:__anon124
COMP4	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP4;                  \/*!< Offset: 0x060 (R\/W)  Comparator Register 4 *\/$/;"	m	struct:__anon23
COMP5	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP5;                  \/*!< Offset: 0x070 (R\/W)  Comparator Register 5 *\/$/;"	m	struct:__anon124
COMP5	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP5;                  \/*!< Offset: 0x070 (R\/W)  Comparator Register 5 *\/$/;"	m	struct:__anon23
COMP6	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP6;                  \/*!< Offset: 0x080 (R\/W)  Comparator Register 6 *\/$/;"	m	struct:__anon124
COMP6	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP6;                  \/*!< Offset: 0x080 (R\/W)  Comparator Register 6 *\/$/;"	m	struct:__anon23
COMP7	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP7;                  \/*!< Offset: 0x090 (R\/W)  Comparator Register 7 *\/$/;"	m	struct:__anon124
COMP7	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP7;                  \/*!< Offset: 0x090 (R\/W)  Comparator Register 7 *\/$/;"	m	struct:__anon23
COMP8	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP8;                  \/*!< Offset: 0x0A0 (R\/W)  Comparator Register 8 *\/$/;"	m	struct:__anon124
COMP8	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP8;                  \/*!< Offset: 0x0A0 (R\/W)  Comparator Register 8 *\/$/;"	m	struct:__anon23
COMP9	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t COMP9;                  \/*!< Offset: 0x0B0 (R\/W)  Comparator Register 9 *\/$/;"	m	struct:__anon124
COMP9	CMSIS/core_armv8mml.h	/^  __IOM uint32_t COMP9;                  \/*!< Offset: 0x0B0 (R\/W)  Comparator Register 9 *\/$/;"	m	struct:__anon23
COMPVAL	device/LPC54018.h	/^  __IO uint32_t COMPVAL;                           \/**< Compare value LSB register, offset: 0x0 *\/$/;"	m	struct:__anon170
COMPVAL_H	device/LPC54018.h	/^  __IO uint32_t COMPVAL_H;                         \/**< Compare value MSB register, offset: 0x10 *\/$/;"	m	struct:__anon170
CONEN	device/LPC54018.h	/^  __IO uint32_t CONEN;                             \/**< SCT conflict interrupt enable register, offset: 0xF8 *\/$/;"	m	struct:__anon172
CONFACK	lwip/src/include/netif/ppp/fsm.h	67;"	d
CONFIG	device/LPC54018.h	/^  __IO uint32_t CONFIG;                            \/**< Configures operation of the memory controller, offset: 0x8 *\/$/;"	m	struct:__anon151
CONFIG	device/LPC54018.h	/^  __IO uint32_t CONFIG;                            \/**< SCT configuration register, offset: 0x0 *\/$/;"	m	struct:__anon172
CONFIG_BITPLAINS	emwin/emWin_header/GUIDRV_BitPlains.h	/^} CONFIG_BITPLAINS;$/;"	t	typeref:struct:__anon379
CONFIG_FLEXCOLOR	emwin/emWin_header/GUIDRV_FlexColor.h	/^} CONFIG_FLEXCOLOR;$/;"	t	typeref:struct:__anon364
CONFIG_S1D13748	emwin/emWin_header/GUIDRV_S1D13748.h	/^} CONFIG_S1D13748;$/;"	t	typeref:struct:__anon375
CONFIG_S1D13781	emwin/emWin_header/GUIDRV_S1D13781.h	/^} CONFIG_S1D13781;$/;"	t	typeref:struct:__anon282
CONFIG_S1D15G00	emwin/emWin_header/GUIDRV_S1D15G00.h	/^} CONFIG_S1D15G00;$/;"	t	typeref:struct:__anon228
CONFIG_SLIN	emwin/emWin_header/GUIDRV_SLin.h	/^} CONFIG_SLIN;$/;"	t	typeref:struct:__anon223
CONFIG_SPAGE	emwin/emWin_header/GUIDRV_SPage.h	/^} CONFIG_SPAGE;$/;"	t	typeref:struct:__anon346
CONFIG_SSD1926	emwin/emWin_header/GUIDRV_SSD1926.h	/^} CONFIG_SSD1926;$/;"	t	typeref:struct:__anon302
CONFIG_TEMPLATE_I	emwin/emWin_header/GUIDRV_TemplateI.h	/^} CONFIG_TEMPLATE_I;$/;"	t	typeref:struct:__anon354
CONFIG_VRAM_BITPLAINS	emwin/emWin_header/GUIDRV_BitPlains.h	/^} CONFIG_VRAM_BITPLAINS;$/;"	t	typeref:struct:__anon380
CONFLAG	device/LPC54018.h	/^  __IO uint32_t CONFLAG;                           \/**< SCT conflict flag register, offset: 0xFC *\/$/;"	m	struct:__anon172
CONFNAK	lwip/src/include/netif/ppp/fsm.h	68;"	d
CONFREJ	lwip/src/include/netif/ppp/fsm.h	69;"	d
CONFREQ	lwip/src/include/netif/ppp/fsm.h	66;"	d
CONTROL	device/LPC54018.h	/^  __IO uint32_t CONTROL;                           \/**< Controls operation of the memory controller, offset: 0x0 *\/$/;"	m	struct:__anon151
CONTROLLER_ID	vcom/composite.h	16;"	d
CONTROLLER_ID	vcom/composite.h	19;"	d
CONTROLLER_ID	vcom/composite.h	22;"	d
CONTROLLER_ID	vcom/composite.h	25;"	d
CONTROLLER_ID	vcom/virtual_com.h	14;"	d
CONTROLLER_ID	vcom/virtual_com.h	18;"	d
CONTROLLER_ID	vcom/virtual_com.h	22;"	d
CONTROLLER_ID	vcom/virtual_com.h	27;"	d
CONTROLLER_Q31_SHIFT	CMSIS/arm_math.h	374;"	d
CONTROL_FPCA_Msk	CMSIS/core_armv8mml.h	440;"	d
CONTROL_FPCA_Msk	CMSIS/core_cm4.h	385;"	d
CONTROL_FPCA_Pos	CMSIS/core_armv8mml.h	439;"	d
CONTROL_FPCA_Pos	CMSIS/core_cm4.h	384;"	d
CONTROL_SFPA_Msk	CMSIS/core_armv8mml.h	437;"	d
CONTROL_SFPA_Pos	CMSIS/core_armv8mml.h	436;"	d
CONTROL_SPSEL_Msk	CMSIS/core_armv8mbl.h	333;"	d
CONTROL_SPSEL_Msk	CMSIS/core_armv8mml.h	443;"	d
CONTROL_SPSEL_Msk	CMSIS/core_cm4.h	388;"	d
CONTROL_SPSEL_Pos	CMSIS/core_armv8mbl.h	332;"	d
CONTROL_SPSEL_Pos	CMSIS/core_armv8mml.h	442;"	d
CONTROL_SPSEL_Pos	CMSIS/core_cm4.h	387;"	d
CONTROL_Type	CMSIS/core_armv8mbl.h	/^} CONTROL_Type;$/;"	t	typeref:union:__anon119
CONTROL_Type	CMSIS/core_armv8mml.h	/^} CONTROL_Type;$/;"	t	typeref:union:__anon15
CONTROL_Type	CMSIS/core_cm4.h	/^} CONTROL_Type;$/;"	t	typeref:union:__anon37
CONTROL_nPRIV_Msk	CMSIS/core_armv8mbl.h	336;"	d
CONTROL_nPRIV_Msk	CMSIS/core_armv8mml.h	446;"	d
CONTROL_nPRIV_Msk	CMSIS/core_cm4.h	391;"	d
CONTROL_nPRIV_Pos	CMSIS/core_armv8mbl.h	335;"	d
CONTROL_nPRIV_Pos	CMSIS/core_armv8mml.h	445;"	d
CONTROL_nPRIV_Pos	CMSIS/core_cm4.h	390;"	d
CORE4FILES	lwip/src/Filelists.mk	/^CORE4FILES=$(LWIPDIR)\/core\/ipv4\/autoip.c \\$/;"	m
CORE6FILES	lwip/src/Filelists.mk	/^CORE6FILES=$(LWIPDIR)\/core\/ipv6\/dhcp6.c \\$/;"	m
COREFILES	lwip/src/Filelists.mk	/^COREFILES=$(LWIPDIR)\/core\/init.c \\$/;"	m
COUNT	device/LPC54018.h	/^  __IO uint32_t COUNT;                             \/**< RTC counter register, offset: 0x8 *\/$/;"	m	struct:__anon171
COUNT	device/LPC54018.h	/^  __IO uint32_t COUNT;                             \/**< SCT counter register, offset: 0x40 *\/$/;"	m	struct:__anon172
COUNTER	device/LPC54018.h	/^  __IO uint32_t COUNTER;                           \/**< Counter LSB register, offset: 0xC *\/$/;"	m	struct:__anon170
COUNTER_H	device/LPC54018.h	/^  __IO uint32_t COUNTER_H;                         \/**< Counter MSB register, offset: 0x1C *\/$/;"	m	struct:__anon170
COUNTRY_SETTING	vcom/virtual_com.h	42;"	d
COUNT_TO_MSEC	drivers/fsl_common.h	217;"	d
COUNT_TO_USEC	drivers/fsl_common.h	212;"	d
CPACR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CPACR;                  \/*!< Offset: 0x088 (R\/W)  Coprocessor Access Control Register *\/$/;"	m	struct:__anon18
CPACR	CMSIS/core_cm4.h	/^  __IOM uint32_t CPACR;                  \/*!< Offset: 0x088 (R\/W)  Coprocessor Access Control Register *\/$/;"	m	struct:__anon40
CPICNT	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CPICNT;                 \/*!< Offset: 0x008 (R\/W)  CPI Count Register *\/$/;"	m	struct:__anon23
CPICNT	CMSIS/core_cm4.h	/^  __IOM uint32_t CPICNT;                 \/*!< Offset: 0x008 (R\/W)  CPI Count Register *\/$/;"	m	struct:__anon45
CPPWR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CPPWR;                  \/*!< Offset: 0x00C (R\/W)  Coprocessor Power Control  Register *\/$/;"	m	struct:__anon19
CPUID	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t CPUID;                  \/*!< Offset: 0x000 (R\/ )  CPUID Base Register *\/$/;"	m	struct:__anon122
CPUID	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CPUID;                  \/*!< Offset: 0x000 (R\/ )  CPUID Base Register *\/$/;"	m	struct:__anon18
CPUID	CMSIS/core_cm4.h	/^  __IM  uint32_t CPUID;                  \/*!< Offset: 0x000 (R\/ )  CPUID Base Register *\/$/;"	m	struct:__anon40
CR	device/LPC54018.h	/^  __I  uint32_t CR[4];                             \/**< Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input., array offset: 0x2C, array step: 0x4 *\/$/;"	m	struct:__anon145
CRC_BASE_ADDRS	device/LPC54018.h	1905;"	d
CRC_BASE_PTRS	device/LPC54018.h	1907;"	d
CRC_CLOCKS	drivers/fsl_clock.h	126;"	d
CRC_DISABLE	radio/sx1276-LoRa.h	/^	CRC_DISABLE                  =   0x00,       \/\/Disables the packet CRC generation$/;"	e	enum:__anon480
CRC_EN	radio/sx1276-LoRa.h	/^}CRC_EN;$/;"	t	typeref:enum:__anon480
CRC_ENABLE	radio/sx1276-LoRa.h	/^	CRC_ENABLE                   =   0x01,       \/\/Enables the packet CRC generation$/;"	e	enum:__anon480
CRC_ENGINE	device/LPC54018.h	1903;"	d
CRC_ENGINE_BASE	device/LPC54018.h	1901;"	d
CRC_MODE_BIT_RVS_SUM	device/LPC54018.h	1866;"	d
CRC_MODE_BIT_RVS_SUM_MASK	device/LPC54018.h	1864;"	d
CRC_MODE_BIT_RVS_SUM_SHIFT	device/LPC54018.h	1865;"	d
CRC_MODE_BIT_RVS_WR	device/LPC54018.h	1860;"	d
CRC_MODE_BIT_RVS_WR_MASK	device/LPC54018.h	1858;"	d
CRC_MODE_BIT_RVS_WR_SHIFT	device/LPC54018.h	1859;"	d
CRC_MODE_CMPL_SUM	device/LPC54018.h	1869;"	d
CRC_MODE_CMPL_SUM_MASK	device/LPC54018.h	1867;"	d
CRC_MODE_CMPL_SUM_SHIFT	device/LPC54018.h	1868;"	d
CRC_MODE_CMPL_WR	device/LPC54018.h	1863;"	d
CRC_MODE_CMPL_WR_MASK	device/LPC54018.h	1861;"	d
CRC_MODE_CMPL_WR_SHIFT	device/LPC54018.h	1862;"	d
CRC_MODE_CRC_POLY	device/LPC54018.h	1857;"	d
CRC_MODE_CRC_POLY_MASK	device/LPC54018.h	1855;"	d
CRC_MODE_CRC_POLY_SHIFT	device/LPC54018.h	1856;"	d
CRC_RSTS	drivers/fsl_reset.h	108;"	d
CRC_SEED_CRC_SEED	device/LPC54018.h	1876;"	d
CRC_SEED_CRC_SEED_MASK	device/LPC54018.h	1874;"	d
CRC_SEED_CRC_SEED_SHIFT	device/LPC54018.h	1875;"	d
CRC_SUM_CRC_SUM	device/LPC54018.h	1883;"	d
CRC_SUM_CRC_SUM_MASK	device/LPC54018.h	1881;"	d
CRC_SUM_CRC_SUM_SHIFT	device/LPC54018.h	1882;"	d
CRC_Type	device/LPC54018.h	/^} CRC_Type;$/;"	t	typeref:struct:__anon143
CRC_WR_DATA_CRC_WR_DATA	device/LPC54018.h	1890;"	d
CRC_WR_DATA_CRC_WR_DATA_MASK	device/LPC54018.h	1888;"	d
CRC_WR_DATA_CRC_WR_DATA_SHIFT	device/LPC54018.h	1889;"	d
CRP_WORD	startup/startup_lpc54018.c	/^__CRP const unsigned int CRP_WORD = CRP_NO_CRP ;$/;"	v
CRSR_CFG	device/LPC54018.h	/^  __IO uint32_t CRSR_CFG;                          \/**< Cursor Configuration register, offset: 0xC04 *\/$/;"	m	struct:__anon165
CRSR_CLIP	device/LPC54018.h	/^  __IO uint32_t CRSR_CLIP;                         \/**< Cursor Clip Position register, offset: 0xC14 *\/$/;"	m	struct:__anon165
CRSR_CTRL	device/LPC54018.h	/^  __IO uint32_t CRSR_CTRL;                         \/**< Cursor Control register, offset: 0xC00 *\/$/;"	m	struct:__anon165
CRSR_IMG	device/LPC54018.h	/^  __IO uint32_t CRSR_IMG[256];                     \/**< Cursor Image registers, array offset: 0x800, array step: 0x4 *\/$/;"	m	struct:__anon165
CRSR_INTCLR	device/LPC54018.h	/^  __O  uint32_t CRSR_INTCLR;                       \/**< Cursor Interrupt Clear register, offset: 0xC24 *\/$/;"	m	struct:__anon165
CRSR_INTMSK	device/LPC54018.h	/^  __IO uint32_t CRSR_INTMSK;                       \/**< Cursor Interrupt Mask register, offset: 0xC20 *\/$/;"	m	struct:__anon165
CRSR_INTRAW	device/LPC54018.h	/^  __I  uint32_t CRSR_INTRAW;                       \/**< Cursor Raw Interrupt Status register, offset: 0xC28 *\/$/;"	m	struct:__anon165
CRSR_INTSTAT	device/LPC54018.h	/^  __I  uint32_t CRSR_INTSTAT;                      \/**< Cursor Masked Interrupt Status register, offset: 0xC2C *\/$/;"	m	struct:__anon165
CRSR_PAL0	device/LPC54018.h	/^  __IO uint32_t CRSR_PAL0;                         \/**< Cursor Palette register 0, offset: 0xC08 *\/$/;"	m	struct:__anon165
CRSR_PAL1	device/LPC54018.h	/^  __IO uint32_t CRSR_PAL1;                         \/**< Cursor Palette register 1, offset: 0xC0C *\/$/;"	m	struct:__anon165
CRSR_XY	device/LPC54018.h	/^  __IO uint32_t CRSR_XY;                           \/**< Cursor XY Position register, offset: 0xC10 *\/$/;"	m	struct:__anon165
CSPSR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t CSPSR;                  \/*!< Offset: 0x004 (R\/W)  Current Parallel Port Size Register *\/$/;"	m	struct:__anon125
CSPSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CSPSR;                  \/*!< Offset: 0x004 (R\/W)  Current Parallel Port Size Register *\/$/;"	m	struct:__anon24
CSPSR	CMSIS/core_cm4.h	/^  __IOM uint32_t CSPSR;                  \/*!< Offset: 0x004 (R\/W)  Current Parallel Port Size Register *\/$/;"	m	struct:__anon46
CSSELR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CSSELR;                 \/*!< Offset: 0x084 (R\/W)  Cache Size Selection Register *\/$/;"	m	struct:__anon18
CTCR	device/LPC54018.h	/^  __IO uint32_t CTCR;                              \/**< Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting., offset: 0x70 *\/$/;"	m	struct:__anon145
CTIMER0	device/LPC54018.h	2278;"	d
CTIMER0_BASE	device/LPC54018.h	2276;"	d
CTIMER0_DriverIRQHandler	drivers/fsl_ctimer.c	/^void CTIMER0_DriverIRQHandler(void)$/;"	f
CTIMER0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CTIMER0_IRQHandler(void)$/;"	f
CTIMER0_IRQn	device/LPC54018.h	/^  CTIMER0_IRQn                 = 10,               \/**< Standard counter\/timer CTIMER0 *\/$/;"	e	enum:IRQn
CTIMER1	device/LPC54018.h	2282;"	d
CTIMER1_BASE	device/LPC54018.h	2280;"	d
CTIMER1_DriverIRQHandler	drivers/fsl_ctimer.c	/^void CTIMER1_DriverIRQHandler(void)$/;"	f
CTIMER1_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CTIMER1_IRQHandler(void)$/;"	f
CTIMER1_IRQn	device/LPC54018.h	/^  CTIMER1_IRQn                 = 11,               \/**< Standard counter\/timer CTIMER1 *\/$/;"	e	enum:IRQn
CTIMER2	device/LPC54018.h	2286;"	d
CTIMER2_BASE	device/LPC54018.h	2284;"	d
CTIMER2_DriverIRQHandler	drivers/fsl_ctimer.c	/^void CTIMER2_DriverIRQHandler(void)$/;"	f
CTIMER2_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CTIMER2_IRQHandler(void)$/;"	f
CTIMER2_IRQn	device/LPC54018.h	/^  CTIMER2_IRQn                 = 36,               \/**< Standard counter\/timer CTIMER2 *\/$/;"	e	enum:IRQn
CTIMER3	device/LPC54018.h	2290;"	d
CTIMER3_BASE	device/LPC54018.h	2288;"	d
CTIMER3_DriverIRQHandler	drivers/fsl_ctimer.c	/^void CTIMER3_DriverIRQHandler(void)$/;"	f
CTIMER3_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CTIMER3_IRQHandler(void)$/;"	f
CTIMER3_IRQn	device/LPC54018.h	/^  CTIMER3_IRQn                 = 13,               \/**< Standard counter\/timer CTIMER3 *\/$/;"	e	enum:IRQn
CTIMER4	device/LPC54018.h	2294;"	d
CTIMER4_BASE	device/LPC54018.h	2292;"	d
CTIMER4_DriverIRQHandler	drivers/fsl_ctimer.c	/^void CTIMER4_DriverIRQHandler(void)$/;"	f
CTIMER4_IRQHandler	startup/startup_lpc54018.c	/^WEAK void CTIMER4_IRQHandler(void)$/;"	f
CTIMER4_IRQn	device/LPC54018.h	/^  CTIMER4_IRQn                 = 37,               \/**< Standard counter\/timer CTIMER4 *\/$/;"	e	enum:IRQn
CTIMER_BASE_ADDRS	device/LPC54018.h	2296;"	d
CTIMER_BASE_PTRS	device/LPC54018.h	2298;"	d
CTIMER_CCR_CAP0FE	device/LPC54018.h	2087;"	d
CTIMER_CCR_CAP0FE_MASK	device/LPC54018.h	2085;"	d
CTIMER_CCR_CAP0FE_SHIFT	device/LPC54018.h	2086;"	d
CTIMER_CCR_CAP0I	device/LPC54018.h	2090;"	d
CTIMER_CCR_CAP0I_MASK	device/LPC54018.h	2088;"	d
CTIMER_CCR_CAP0I_SHIFT	device/LPC54018.h	2089;"	d
CTIMER_CCR_CAP0RE	device/LPC54018.h	2084;"	d
CTIMER_CCR_CAP0RE_MASK	device/LPC54018.h	2082;"	d
CTIMER_CCR_CAP0RE_SHIFT	device/LPC54018.h	2083;"	d
CTIMER_CCR_CAP1FE	device/LPC54018.h	2096;"	d
CTIMER_CCR_CAP1FE_MASK	device/LPC54018.h	2094;"	d
CTIMER_CCR_CAP1FE_SHIFT	device/LPC54018.h	2095;"	d
CTIMER_CCR_CAP1I	device/LPC54018.h	2099;"	d
CTIMER_CCR_CAP1I_MASK	device/LPC54018.h	2097;"	d
CTIMER_CCR_CAP1I_SHIFT	device/LPC54018.h	2098;"	d
CTIMER_CCR_CAP1RE	device/LPC54018.h	2093;"	d
CTIMER_CCR_CAP1RE_MASK	device/LPC54018.h	2091;"	d
CTIMER_CCR_CAP1RE_SHIFT	device/LPC54018.h	2092;"	d
CTIMER_CCR_CAP2FE	device/LPC54018.h	2105;"	d
CTIMER_CCR_CAP2FE_MASK	device/LPC54018.h	2103;"	d
CTIMER_CCR_CAP2FE_SHIFT	device/LPC54018.h	2104;"	d
CTIMER_CCR_CAP2I	device/LPC54018.h	2108;"	d
CTIMER_CCR_CAP2I_MASK	device/LPC54018.h	2106;"	d
CTIMER_CCR_CAP2I_SHIFT	device/LPC54018.h	2107;"	d
CTIMER_CCR_CAP2RE	device/LPC54018.h	2102;"	d
CTIMER_CCR_CAP2RE_MASK	device/LPC54018.h	2100;"	d
CTIMER_CCR_CAP2RE_SHIFT	device/LPC54018.h	2101;"	d
CTIMER_CCR_CAP3FE	device/LPC54018.h	2114;"	d
CTIMER_CCR_CAP3FE_MASK	device/LPC54018.h	2112;"	d
CTIMER_CCR_CAP3FE_SHIFT	device/LPC54018.h	2113;"	d
CTIMER_CCR_CAP3I	device/LPC54018.h	2117;"	d
CTIMER_CCR_CAP3I_MASK	device/LPC54018.h	2115;"	d
CTIMER_CCR_CAP3I_SHIFT	device/LPC54018.h	2116;"	d
CTIMER_CCR_CAP3RE	device/LPC54018.h	2111;"	d
CTIMER_CCR_CAP3RE_MASK	device/LPC54018.h	2109;"	d
CTIMER_CCR_CAP3RE_SHIFT	device/LPC54018.h	2110;"	d
CTIMER_CLOCKS	drivers/fsl_clock.h	207;"	d
CTIMER_CR_CAP	device/LPC54018.h	2124;"	d
CTIMER_CR_CAP_MASK	device/LPC54018.h	2122;"	d
CTIMER_CR_CAP_SHIFT	device/LPC54018.h	2123;"	d
CTIMER_CR_COUNT	device/LPC54018.h	2128;"	d
CTIMER_CTCR_CINSEL	device/LPC54018.h	2207;"	d
CTIMER_CTCR_CINSEL_MASK	device/LPC54018.h	2195;"	d
CTIMER_CTCR_CINSEL_SHIFT	device/LPC54018.h	2196;"	d
CTIMER_CTCR_CTMODE	device/LPC54018.h	2194;"	d
CTIMER_CTCR_CTMODE_MASK	device/LPC54018.h	2184;"	d
CTIMER_CTCR_CTMODE_SHIFT	device/LPC54018.h	2185;"	d
CTIMER_CTCR_ENCC	device/LPC54018.h	2210;"	d
CTIMER_CTCR_ENCC_MASK	device/LPC54018.h	2208;"	d
CTIMER_CTCR_ENCC_SHIFT	device/LPC54018.h	2209;"	d
CTIMER_CTCR_SELCC	device/LPC54018.h	2223;"	d
CTIMER_CTCR_SELCC_MASK	device/LPC54018.h	2211;"	d
CTIMER_CTCR_SELCC_SHIFT	device/LPC54018.h	2212;"	d
CTIMER_ClearStatusFlags	drivers/fsl_ctimer.h	/^static inline void CTIMER_ClearStatusFlags(CTIMER_Type *base, uint32_t mask)$/;"	f
CTIMER_Deinit	drivers/fsl_ctimer.c	/^void CTIMER_Deinit(CTIMER_Type *base)$/;"	f
CTIMER_DisableInterrupts	drivers/fsl_ctimer.h	/^static inline void CTIMER_DisableInterrupts(CTIMER_Type *base, uint32_t mask)$/;"	f
CTIMER_EMR_EM0	device/LPC54018.h	2134;"	d
CTIMER_EMR_EM0_MASK	device/LPC54018.h	2132;"	d
CTIMER_EMR_EM0_SHIFT	device/LPC54018.h	2133;"	d
CTIMER_EMR_EM1	device/LPC54018.h	2137;"	d
CTIMER_EMR_EM1_MASK	device/LPC54018.h	2135;"	d
CTIMER_EMR_EM1_SHIFT	device/LPC54018.h	2136;"	d
CTIMER_EMR_EM2	device/LPC54018.h	2140;"	d
CTIMER_EMR_EM2_MASK	device/LPC54018.h	2138;"	d
CTIMER_EMR_EM2_SHIFT	device/LPC54018.h	2139;"	d
CTIMER_EMR_EM3	device/LPC54018.h	2143;"	d
CTIMER_EMR_EM3_MASK	device/LPC54018.h	2141;"	d
CTIMER_EMR_EM3_SHIFT	device/LPC54018.h	2142;"	d
CTIMER_EMR_EMC0	device/LPC54018.h	2152;"	d
CTIMER_EMR_EMC0_MASK	device/LPC54018.h	2144;"	d
CTIMER_EMR_EMC0_SHIFT	device/LPC54018.h	2145;"	d
CTIMER_EMR_EMC1	device/LPC54018.h	2161;"	d
CTIMER_EMR_EMC1_MASK	device/LPC54018.h	2153;"	d
CTIMER_EMR_EMC1_SHIFT	device/LPC54018.h	2154;"	d
CTIMER_EMR_EMC2	device/LPC54018.h	2170;"	d
CTIMER_EMR_EMC2_MASK	device/LPC54018.h	2162;"	d
CTIMER_EMR_EMC2_SHIFT	device/LPC54018.h	2163;"	d
CTIMER_EMR_EMC3	device/LPC54018.h	2179;"	d
CTIMER_EMR_EMC3_MASK	device/LPC54018.h	2171;"	d
CTIMER_EMR_EMC3_SHIFT	device/LPC54018.h	2172;"	d
CTIMER_EnableInterrupts	drivers/fsl_ctimer.h	/^static inline void CTIMER_EnableInterrupts(CTIMER_Type *base, uint32_t mask)$/;"	f
CTIMER_GenericIRQHandler	drivers/fsl_ctimer.c	/^void CTIMER_GenericIRQHandler(uint32_t index)$/;"	f
CTIMER_GetDefaultConfig	drivers/fsl_ctimer.c	/^void CTIMER_GetDefaultConfig(ctimer_config_t *config)$/;"	f
CTIMER_GetEnabledInterrupts	drivers/fsl_ctimer.h	/^static inline uint32_t CTIMER_GetEnabledInterrupts(CTIMER_Type *base)$/;"	f
CTIMER_GetInstance	drivers/fsl_ctimer.c	/^static uint32_t CTIMER_GetInstance(CTIMER_Type *base)$/;"	f	file:
CTIMER_GetStatusFlags	drivers/fsl_ctimer.h	/^static inline uint32_t CTIMER_GetStatusFlags(CTIMER_Type *base)$/;"	f
CTIMER_GetTimerCountValue	drivers/fsl_ctimer.h	/^static inline uint32_t CTIMER_GetTimerCountValue(CTIMER_Type *base)$/;"	f
CTIMER_IRQS	device/LPC54018.h	2300;"	d
CTIMER_IR_CR0INT	device/LPC54018.h	1966;"	d
CTIMER_IR_CR0INT_MASK	device/LPC54018.h	1964;"	d
CTIMER_IR_CR0INT_SHIFT	device/LPC54018.h	1965;"	d
CTIMER_IR_CR1INT	device/LPC54018.h	1969;"	d
CTIMER_IR_CR1INT_MASK	device/LPC54018.h	1967;"	d
CTIMER_IR_CR1INT_SHIFT	device/LPC54018.h	1968;"	d
CTIMER_IR_CR2INT	device/LPC54018.h	1972;"	d
CTIMER_IR_CR2INT_MASK	device/LPC54018.h	1970;"	d
CTIMER_IR_CR2INT_SHIFT	device/LPC54018.h	1971;"	d
CTIMER_IR_CR3INT	device/LPC54018.h	1975;"	d
CTIMER_IR_CR3INT_MASK	device/LPC54018.h	1973;"	d
CTIMER_IR_CR3INT_SHIFT	device/LPC54018.h	1974;"	d
CTIMER_IR_MR0INT	device/LPC54018.h	1954;"	d
CTIMER_IR_MR0INT_MASK	device/LPC54018.h	1952;"	d
CTIMER_IR_MR0INT_SHIFT	device/LPC54018.h	1953;"	d
CTIMER_IR_MR1INT	device/LPC54018.h	1957;"	d
CTIMER_IR_MR1INT_MASK	device/LPC54018.h	1955;"	d
CTIMER_IR_MR1INT_SHIFT	device/LPC54018.h	1956;"	d
CTIMER_IR_MR2INT	device/LPC54018.h	1960;"	d
CTIMER_IR_MR2INT_MASK	device/LPC54018.h	1958;"	d
CTIMER_IR_MR2INT_SHIFT	device/LPC54018.h	1959;"	d
CTIMER_IR_MR3INT	device/LPC54018.h	1963;"	d
CTIMER_IR_MR3INT_MASK	device/LPC54018.h	1961;"	d
CTIMER_IR_MR3INT_SHIFT	device/LPC54018.h	1962;"	d
CTIMER_Init	drivers/fsl_ctimer.c	/^void CTIMER_Init(CTIMER_Type *base, const ctimer_config_t *config)$/;"	f
CTIMER_MCR_MR0I	device/LPC54018.h	2022;"	d
CTIMER_MCR_MR0I_MASK	device/LPC54018.h	2020;"	d
CTIMER_MCR_MR0I_SHIFT	device/LPC54018.h	2021;"	d
CTIMER_MCR_MR0R	device/LPC54018.h	2025;"	d
CTIMER_MCR_MR0RL	device/LPC54018.h	2058;"	d
CTIMER_MCR_MR0RL_MASK	device/LPC54018.h	2056;"	d
CTIMER_MCR_MR0RL_SHIFT	device/LPC54018.h	2057;"	d
CTIMER_MCR_MR0R_MASK	device/LPC54018.h	2023;"	d
CTIMER_MCR_MR0R_SHIFT	device/LPC54018.h	2024;"	d
CTIMER_MCR_MR0S	device/LPC54018.h	2028;"	d
CTIMER_MCR_MR0S_MASK	device/LPC54018.h	2026;"	d
CTIMER_MCR_MR0S_SHIFT	device/LPC54018.h	2027;"	d
CTIMER_MCR_MR1I	device/LPC54018.h	2031;"	d
CTIMER_MCR_MR1I_MASK	device/LPC54018.h	2029;"	d
CTIMER_MCR_MR1I_SHIFT	device/LPC54018.h	2030;"	d
CTIMER_MCR_MR1R	device/LPC54018.h	2034;"	d
CTIMER_MCR_MR1RL	device/LPC54018.h	2061;"	d
CTIMER_MCR_MR1RL_MASK	device/LPC54018.h	2059;"	d
CTIMER_MCR_MR1RL_SHIFT	device/LPC54018.h	2060;"	d
CTIMER_MCR_MR1R_MASK	device/LPC54018.h	2032;"	d
CTIMER_MCR_MR1R_SHIFT	device/LPC54018.h	2033;"	d
CTIMER_MCR_MR1S	device/LPC54018.h	2037;"	d
CTIMER_MCR_MR1S_MASK	device/LPC54018.h	2035;"	d
CTIMER_MCR_MR1S_SHIFT	device/LPC54018.h	2036;"	d
CTIMER_MCR_MR2I	device/LPC54018.h	2040;"	d
CTIMER_MCR_MR2I_MASK	device/LPC54018.h	2038;"	d
CTIMER_MCR_MR2I_SHIFT	device/LPC54018.h	2039;"	d
CTIMER_MCR_MR2R	device/LPC54018.h	2043;"	d
CTIMER_MCR_MR2RL	device/LPC54018.h	2064;"	d
CTIMER_MCR_MR2RL_MASK	device/LPC54018.h	2062;"	d
CTIMER_MCR_MR2RL_SHIFT	device/LPC54018.h	2063;"	d
CTIMER_MCR_MR2R_MASK	device/LPC54018.h	2041;"	d
CTIMER_MCR_MR2R_SHIFT	device/LPC54018.h	2042;"	d
CTIMER_MCR_MR2S	device/LPC54018.h	2046;"	d
CTIMER_MCR_MR2S_MASK	device/LPC54018.h	2044;"	d
CTIMER_MCR_MR2S_SHIFT	device/LPC54018.h	2045;"	d
CTIMER_MCR_MR3I	device/LPC54018.h	2049;"	d
CTIMER_MCR_MR3I_MASK	device/LPC54018.h	2047;"	d
CTIMER_MCR_MR3I_SHIFT	device/LPC54018.h	2048;"	d
CTIMER_MCR_MR3R	device/LPC54018.h	2052;"	d
CTIMER_MCR_MR3RL	device/LPC54018.h	2067;"	d
CTIMER_MCR_MR3RL_MASK	device/LPC54018.h	2065;"	d
CTIMER_MCR_MR3RL_SHIFT	device/LPC54018.h	2066;"	d
CTIMER_MCR_MR3R_MASK	device/LPC54018.h	2050;"	d
CTIMER_MCR_MR3R_SHIFT	device/LPC54018.h	2051;"	d
CTIMER_MCR_MR3S	device/LPC54018.h	2055;"	d
CTIMER_MCR_MR3S_MASK	device/LPC54018.h	2053;"	d
CTIMER_MCR_MR3S_SHIFT	device/LPC54018.h	2054;"	d
CTIMER_MR_COUNT	device/LPC54018.h	2078;"	d
CTIMER_MR_MATCH	device/LPC54018.h	2074;"	d
CTIMER_MR_MATCH_MASK	device/LPC54018.h	2072;"	d
CTIMER_MR_MATCH_SHIFT	device/LPC54018.h	2073;"	d
CTIMER_MSR_COUNT	device/LPC54018.h	2266;"	d
CTIMER_MSR_SHADOWW	device/LPC54018.h	2262;"	d
CTIMER_MSR_SHADOWW_MASK	device/LPC54018.h	2260;"	d
CTIMER_MSR_SHADOWW_SHIFT	device/LPC54018.h	2261;"	d
CTIMER_PC_PCVAL	device/LPC54018.h	2015;"	d
CTIMER_PC_PCVAL_MASK	device/LPC54018.h	2013;"	d
CTIMER_PC_PCVAL_SHIFT	device/LPC54018.h	2014;"	d
CTIMER_PR_PRVAL	device/LPC54018.h	2008;"	d
CTIMER_PR_PRVAL_MASK	device/LPC54018.h	2006;"	d
CTIMER_PR_PRVAL_SHIFT	device/LPC54018.h	2007;"	d
CTIMER_PWMC_PWMEN0	device/LPC54018.h	2234;"	d
CTIMER_PWMC_PWMEN0_MASK	device/LPC54018.h	2228;"	d
CTIMER_PWMC_PWMEN0_SHIFT	device/LPC54018.h	2229;"	d
CTIMER_PWMC_PWMEN1	device/LPC54018.h	2241;"	d
CTIMER_PWMC_PWMEN1_MASK	device/LPC54018.h	2235;"	d
CTIMER_PWMC_PWMEN1_SHIFT	device/LPC54018.h	2236;"	d
CTIMER_PWMC_PWMEN2	device/LPC54018.h	2248;"	d
CTIMER_PWMC_PWMEN2_MASK	device/LPC54018.h	2242;"	d
CTIMER_PWMC_PWMEN2_SHIFT	device/LPC54018.h	2243;"	d
CTIMER_PWMC_PWMEN3	device/LPC54018.h	2255;"	d
CTIMER_PWMC_PWMEN3_MASK	device/LPC54018.h	2249;"	d
CTIMER_PWMC_PWMEN3_SHIFT	device/LPC54018.h	2250;"	d
CTIMER_RSTS	drivers/fsl_reset.h	112;"	d
CTIMER_RegisterCallBack	drivers/fsl_ctimer.c	/^void CTIMER_RegisterCallBack(CTIMER_Type *base, ctimer_callback_t *cb_func, ctimer_callback_type_t cb_type)$/;"	f
CTIMER_Reset	drivers/fsl_ctimer.h	/^static inline void CTIMER_Reset(CTIMER_Type *base)$/;"	f
CTIMER_SetupCapture	drivers/fsl_ctimer.c	/^void CTIMER_SetupCapture(CTIMER_Type *base,$/;"	f
CTIMER_SetupMatch	drivers/fsl_ctimer.c	/^void CTIMER_SetupMatch(CTIMER_Type *base, ctimer_match_t matchChannel, const ctimer_match_config_t *config)$/;"	f
CTIMER_SetupPwm	drivers/fsl_ctimer.c	/^status_t CTIMER_SetupPwm(CTIMER_Type *base,$/;"	f
CTIMER_SetupPwmPeriod	drivers/fsl_ctimer.c	/^status_t CTIMER_SetupPwmPeriod($/;"	f
CTIMER_StartTimer	drivers/fsl_ctimer.h	/^static inline void CTIMER_StartTimer(CTIMER_Type *base)$/;"	f
CTIMER_StopTimer	drivers/fsl_ctimer.h	/^static inline void CTIMER_StopTimer(CTIMER_Type *base)$/;"	f
CTIMER_TCR_CEN	device/LPC54018.h	1986;"	d
CTIMER_TCR_CEN_MASK	device/LPC54018.h	1980;"	d
CTIMER_TCR_CEN_SHIFT	device/LPC54018.h	1981;"	d
CTIMER_TCR_CRST	device/LPC54018.h	1994;"	d
CTIMER_TCR_CRST_MASK	device/LPC54018.h	1987;"	d
CTIMER_TCR_CRST_SHIFT	device/LPC54018.h	1988;"	d
CTIMER_TC_TCVAL	device/LPC54018.h	2001;"	d
CTIMER_TC_TCVAL_MASK	device/LPC54018.h	1999;"	d
CTIMER_TC_TCVAL_SHIFT	device/LPC54018.h	2000;"	d
CTIMER_Type	device/LPC54018.h	/^} CTIMER_Type;$/;"	t	typeref:struct:__anon145
CTIMER_UpdatePwmDutycycle	drivers/fsl_ctimer.c	/^void CTIMER_UpdatePwmDutycycle(CTIMER_Type *base, ctimer_match_t matchChannel, uint8_t dutyCyclePercent)$/;"	f
CTIMER_UpdatePwmPulsePeriod	drivers/fsl_ctimer.h	/^static inline void CTIMER_UpdatePwmPulsePeriod(CTIMER_Type *base, ctimer_match_t matchChannel, uint32_t pulsePeriod)$/;"	f
CTL	device/LPC54018.h	/^  __IO uint32_t CTL;                               \/**< USART Control register. USART control settings that are more likely to change during operation., offset: 0x4 *\/$/;"	m	struct:__anon186
CTLSTAT	device/LPC54018.h	/^    __I  uint32_t CTLSTAT;                           \/**< Control and status register for DMA channel ., array offset: 0x404, array step: 0x10 *\/$/;"	m	struct:__anon146::__anon148
CTR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t CTR;                    \/*!< Offset: 0x07C (R\/ )  Cache Type register *\/$/;"	m	struct:__anon18
CTRL	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x000 (R\/W)  Control Register *\/$/;"	m	struct:__anon124
CTRL	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x000 (R\/W)  SAU Control Register *\/$/;"	m	struct:__anon129
CTRL	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x000 (R\/W)  SysTick Control and Status Register *\/$/;"	m	struct:__anon123
CTRL	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x004 (R\/W)  MPU Control Register *\/$/;"	m	struct:__anon126
CTRL	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x000 (R\/W)  Control Register *\/$/;"	m	struct:__anon23
CTRL	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x000 (R\/W)  SAU Control Register *\/$/;"	m	struct:__anon28
CTRL	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x000 (R\/W)  SysTick Control and Status Register *\/$/;"	m	struct:__anon20
CTRL	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x004 (R\/W)  MPU Control Register *\/$/;"	m	struct:__anon25
CTRL	CMSIS/core_cm4.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x000 (R\/W)  Control Register *\/$/;"	m	struct:__anon45
CTRL	CMSIS/core_cm4.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x000 (R\/W)  SysTick Control and Status Register *\/$/;"	m	struct:__anon42
CTRL	CMSIS/core_cm4.h	/^  __IOM uint32_t CTRL;                   \/*!< Offset: 0x004 (R\/W)  MPU Control Register *\/$/;"	m	struct:__anon47
CTRL	device/LPC54018.h	/^    __IO uint32_t CTRL;                              \/**< MRT Control register. This register controls the MRT modes., array offset: 0x8, array step: 0x10 *\/$/;"	m	struct:__anon166::__anon167
CTRL	device/LPC54018.h	/^    __IO uint32_t CTRL;                              \/**< SCT event control register 0, array offset: 0x304, array step: 0x8 *\/$/;"	m	struct:__anon172::__anon175
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< ADC Control register. Contains the clock divide value, resolution selection, sampling time selection, and mode controls., offset: 0x0 *\/$/;"	m	struct:__anon140
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< Control register, offset: 0x0 *\/$/;"	m	struct:__anon177
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< Control register, offset: 0x0 *\/$/;"	m	struct:__anon178
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< Control register, offset: 0x8 *\/$/;"	m	struct:__anon170
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< Control register., offset: 0x0 *\/$/;"	m	struct:__anon191
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< DMA control., offset: 0x0 *\/$/;"	m	struct:__anon146
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< GPIO grouped interrupt control register, offset: 0x0 *\/$/;"	m	struct:__anon158
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< LCD Control register, offset: 0x18 *\/$/;"	m	struct:__anon165
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< RTC control register, offset: 0x0 *\/$/;"	m	struct:__anon171
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< SCT control register, offset: 0x4 *\/$/;"	m	struct:__anon172
CTRL	device/LPC54018.h	/^  __IO uint32_t CTRL;                              \/**< SPIFI control register, offset: 0x0 *\/$/;"	m	struct:__anon184
CTYPE	device/LPC54018.h	/^  __IO uint32_t CTYPE;                             \/**< Card Type register, offset: 0x18 *\/$/;"	m	struct:__anon177
CYCCNT	CMSIS/core_armv8mml.h	/^  __IOM uint32_t CYCCNT;                 \/*!< Offset: 0x004 (R\/W)  Cycle Count Register *\/$/;"	m	struct:__anon23
CYCCNT	CMSIS/core_cm4.h	/^  __IOM uint32_t CYCCNT;                 \/*!< Offset: 0x004 (R\/W)  Cycle Count Register *\/$/;"	m	struct:__anon45
C_ADD	codec2/_kiss_fft_guts.h	100;"	d
C_ADDTO	codec2/_kiss_fft_guts.h	112;"	d
C_DEPS	Debug/sources.mk	/^C_DEPS := $/;"	m
C_FIXDIV	codec2/_kiss_fft_guts.h	76;"	d
C_FIXDIV	codec2/_kiss_fft_guts.h	90;"	d
C_MUL	codec2/_kiss_fft_guts.h	69;"	d
C_MUL	codec2/_kiss_fft_guts.h	87;"	d
C_MULBYSCALAR	codec2/_kiss_fft_guts.h	80;"	d
C_MULBYSCALAR	codec2/_kiss_fft_guts.h	91;"	d
C_SRCS	Debug/sources.mk	/^C_SRCS := $/;"	m
C_SUB	codec2/_kiss_fft_guts.h	106;"	d
C_SUBFROM	codec2/_kiss_fft_guts.h	119;"	d
CacheDirty	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int CacheDirty;$/;"	m	struct:__anon370
CacheLineSize	emwin/emWin_header/SEGGER.h	/^  int  CacheLineSize;                                 \/\/ 0: No Cache. Most Systems such as ARM9 use a 32 bytes cache line size.$/;"	m	struct:__anon202
CacheLocked	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int CacheLocked;$/;"	m	struct:__anon370
CacheLocked	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int CacheLocked;$/;"	m	struct:DRIVER_CONTEXT
CacheLocked	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int CacheLocked;$/;"	m	struct:DRIVER_CONTEXT
CacheLocked	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int CacheLocked;$/;"	m	struct:DRIVER_CONTEXT
CacheLocked	emwin/emWin_header/GUI_GCache_Private.h	/^  int CacheLocked;$/;"	m	struct:__anon239
CacheRect	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  GUI_RECT CacheRect;$/;"	m	struct:DRIVER_CONTEXT
CacheStat	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int CacheStat;$/;"	m	struct:__anon370
CacheStat	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int CacheStat;$/;"	m	struct:DRIVER_CONTEXT
CacheStat	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int CacheStat;$/;"	m	struct:DRIVER_CONTEXT
CallbackParameters_t	amazon-freertos/freertos/timers.c	/^} CallbackParameters_t;$/;"	t	typeref:struct:tmrCallbackParameters	file:
CaptureItem	emwin/emWin_header/HEADER_Private.h	/^  int                 CaptureItem;$/;"	m	struct:__anon276
CapturePosX	emwin/emWin_header/HEADER_Private.h	/^  int                 CapturePosX;$/;"	m	struct:__anon276
Center	emwin/emWin_header/WM.h	/^  GUI_POINT      Center;    \/\/ Center point for zooming$/;"	m	struct:__anon289
Center0	emwin/emWin_header/WM.h	/^  GUI_POINT Center0;     \/\/ Primary center point when starting the gesture$/;"	m	struct:__anon288
ChallengeHash	lwip/src/netif/ppp/chap_ms.c	/^static void ChallengeHash(const u_char PeerChallenge[16], const u_char *rchallenge,$/;"	f	file:
ChallengeResponse	lwip/src/netif/ppp/chap_ms.c	/^static void ChallengeResponse(const u_char *challenge,$/;"	f	file:
Channel	radio/sx1276.h	/^    INT8U               Channel;$/;"	m	struct:__anon487
ChapMS	lwip/src/netif/ppp/chap_ms.c	/^static void ChapMS(ppp_pcb *pcb, const u_char *rchallenge, const char *secret, int secret_len,$/;"	f	file:
ChapMS2	lwip/src/netif/ppp/chap_ms.c	/^static void ChapMS2(ppp_pcb *pcb, const u_char *rchallenge, const u_char *PeerChallenge,$/;"	f	file:
ChapMS2_NT	lwip/src/netif/ppp/chap_ms.c	/^static void ChapMS2_NT(const u_char *rchallenge, const u_char PeerChallenge[16], const char *username,$/;"	f	file:
ChapMS_LANMan	lwip/src/netif/ppp/chap_ms.c	/^static void ChapMS_LANMan(u_char *rchallenge, char *secret, int secret_len,$/;"	f	file:
ChapMS_NT	lwip/src/netif/ppp/chap_ms.c	/^static void ChapMS_NT(const u_char *rchallenge, const char *secret, int secret_len,$/;"	f	file:
CheckBusy	emwin/emWin_header/GUIDRV_SLin.h	/^  int CheckBusy;$/;"	m	struct:__anon223
CheckBusy	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int CheckBusy;   \/\/ Used by T6963$/;"	m	struct:DRIVER_CONTEXT
ChromaMax	emwin/emWin_header/LCD.h	/^  LCD_COLOR ChromaMax;$/;"	m	struct:__anon418
ChromaMin	emwin/emWin_header/LCD.h	/^  LCD_COLOR ChromaMin;$/;"	m	struct:__anon418
ChromaMode	emwin/emWin_header/LCD.h	/^  int ChromaMode;$/;"	m	struct:__anon417
ClearCode	emwin/emWin_header/GUI_GIF_Private.h	/^  int   ClearCode;$/;"	m	struct:__anon323
ClientColor	emwin/emWin_header/FRAMEWIN_Private.h	/^  GUI_COLOR             ClientColor;$/;"	m	struct:__anon279
ClientSupportsHextile	emwin/emWin_header/GUI_VNC.h	/^  char ClientSupportsHextile;$/;"	m	struct:GUI_VNC_CONTEXT
ClipRect	emwin/emWin_header/GUI.h	/^  LCD_RECT       ClipRect;$/;"	m	struct:GUI_CONTEXT
ClrBits	radio/MyTypeDef.h	36;"	d
Cmd	emwin/emWin_header/CHOOSEFILE.h	/^  int               Cmd;                                 \/\/ Command for GetData() function$/;"	m	struct:CHOOSEFILE_INFO
Cmd	emwin/emWin_header/GUI_Type.h	/^  int    Cmd;$/;"	m	struct:__anon245
Cmd	emwin/emWin_header/WIDGET.h	/^  int        Cmd;         \/* WIDGET_ITEM_GET_XSIZE, WIDGET_ITEM_GET_YSIZE, WIDGET_ITEM_DRAW, *\/$/;"	m	struct:__anon209
Cmd	emwin/emWin_header/WM.h	/^  U8  Cmd;$/;"	m	struct:__anon287
Cnt	emwin/emWin_header/SEGGER.h	/^  int   Cnt;$/;"	m	struct:__anon201
CodeLength	codec2/mpdecode_core.h	/^    int CodeLength;$/;"	m	struct:LDPC
CodeSize	emwin/emWin_header/GUI_GIF_Private.h	/^  int   CodeSize;$/;"	m	struct:__anon323
Col	emwin/emWin_header/WIDGET.h	/^  int        Col;$/;"	m	struct:__anon209
Color	emwin/emWin_header/GRAPH_Private.h	/^  GUI_COLOR       Color;$/;"	m	struct:GRAPH_DATA_OBJ
Color	emwin/emWin_header/GUI.h	/^  GUI_COLOR Color, BkColor;                \/\/ Required only when changing devices and for speed opt (caching)$/;"	m	struct:GUI_CONTEXT
Color	emwin/emWin_header/LCD.h	/^  LCD_COLOR Color;$/;"	m	struct:__anon411
Color	emwin/emWin_header/WM.h	/^    GUI_COLOR Color;$/;"	m	union:WM_MESSAGE::__anon291
ColorArrow	emwin/emWin_header/CALENDAR.h	/^  GUI_COLOR ColorArrow;     \/\/ Arrow colors$/;"	m	struct:__anon241
ColorArrow	emwin/emWin_header/DROPDOWN.h	/^  GUI_COLOR ColorArrow;$/;"	m	struct:__anon357
ColorArrow	emwin/emWin_header/HEADER.h	/^  GUI_COLOR ColorArrow;$/;"	m	struct:__anon369
ColorArrow	emwin/emWin_header/SCROLLBAR.h	/^  GUI_COLOR ColorArrow;$/;"	m	struct:__anon215
ColorArrow	emwin/emWin_header/SPINBOX.h	/^  GUI_COLOR ColorArrow;       \/\/ Color of the button arrow.$/;"	m	struct:__anon381
ColorBk	emwin/emWin_header/SPINBOX.h	/^  GUI_COLOR ColorBk;          \/\/ Color of the background.                      \/\/ See WIDGET_ITEM_CREATE in SPINBOX_DrawSkinFlex()$/;"	m	struct:__anon381
ColorBk	emwin/emWin_header/TREEVIEW.h	/^  GUI_COLOR ColorBk;$/;"	m	struct:__anon372
ColorButtonFrame	emwin/emWin_header/SPINBOX.h	/^  GUI_COLOR ColorButtonFrame; \/\/ Color of the button frame.$/;"	m	struct:__anon381
ColorCheck	emwin/emWin_header/CHECKBOX.h	/^  GUI_COLOR ColorCheck;$/;"	m	struct:__anon208
ColorFocus	emwin/emWin_header/SLIDER.h	/^  GUI_COLOR ColorFocus;$/;"	m	struct:__anon304
ColorFrame	emwin/emWin_header/PROGBAR.h	/^  GUI_COLOR ColorFrame;$/;"	m	struct:__anon221
ColorGrasp	emwin/emWin_header/SCROLLBAR.h	/^  GUI_COLOR ColorGrasp;$/;"	m	struct:__anon215
ColorLines	emwin/emWin_header/TREEVIEW.h	/^  GUI_COLOR ColorLines;$/;"	m	struct:__anon372
ColorSep	emwin/emWin_header/DROPDOWN.h	/^  GUI_COLOR ColorSep;$/;"	m	struct:__anon357
ColorText	emwin/emWin_header/DROPDOWN.h	/^  GUI_COLOR ColorText;$/;"	m	struct:__anon357
ColorText	emwin/emWin_header/PROGBAR.h	/^  GUI_COLOR ColorText;$/;"	m	struct:__anon221
ColorText	emwin/emWin_header/SPINBOX.h	/^  GUI_COLOR ColorText;        \/\/ Color of the text.                            \/\/ See WIDGET_ITEM_CREATE in SPINBOX_DrawSkinFlex()$/;"	m	struct:__anon381
ColorText	emwin/emWin_header/TREEVIEW.h	/^  GUI_COLOR ColorText;$/;"	m	struct:__anon372
ColorTextBk	emwin/emWin_header/TREEVIEW.h	/^  GUI_COLOR ColorTextBk;$/;"	m	struct:__anon372
ColorTick	emwin/emWin_header/SLIDER.h	/^  GUI_COLOR ColorTick;$/;"	m	struct:__anon304
Columns	emwin/emWin_header/HEADER_Private.h	/^  GUI_ARRAY           Columns;$/;"	m	struct:__anon276
ComBit	radio/MyTypeDef.h	34;"	d
ComBits	radio/MyTypeDef.h	38;"	d
Connectors	emwin/emWin_header/TREEVIEW_Private.h	/^  U16                  Connectors;$/;"	m	struct:__anon225
ContentSizeX	emwin/emWin_header/LISTBOX_Private.h	/^  U16 ContentSizeX;$/;"	m	struct:__anon313
Context	emwin/emWin_header/GUI.h	/^  PTR_ADDR         Context;$/;"	m	struct:__anon399
Control	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*Control)        (uint32_t control, uint32_t arg);                                      \/\/\/< Pointer to \\ref ARM_I2C_Control : Control I2C Interface.$/;"	m	struct:_ARM_DRIVER_I2C
Control	CMSIS_driver/Driver_SPI.h	/^  int32_t              (*Control)         (uint32_t control, uint32_t arg);   \/\/\/< Pointer to \\ref ARM_SPI_Control : Control SPI Interface.$/;"	m	struct:_ARM_DRIVER_SPI
ConvertFloatRadixNumToString	utilities/fsl_str.c	/^static int32_t ConvertFloatRadixNumToString(char *numstr, void *nump, int32_t radix, uint32_t precision_width)$/;"	f	file:
ConvertRadixNumToString	utilities/fsl_str.c	/^static int32_t ConvertRadixNumToString(char *numstr, void *nump, int32_t neg, int32_t radix, bool use_caps)$/;"	f	file:
CoreDebug	CMSIS/core_armv8mbl.h	1181;"	d
CoreDebug	CMSIS/core_armv8mml.h	2043;"	d
CoreDebug	CMSIS/core_cm4.h	1567;"	d
CoreDebug_BASE	CMSIS/core_armv8mbl.h	1170;"	d
CoreDebug_BASE	CMSIS/core_armv8mml.h	2031;"	d
CoreDebug_BASE	CMSIS/core_cm4.h	1555;"	d
CoreDebug_BASE_NS	CMSIS/core_armv8mbl.h	1195;"	d
CoreDebug_BASE_NS	CMSIS/core_armv8mml.h	2060;"	d
CoreDebug_DAUTHCTRL_INTSPIDEN_Msk	CMSIS/core_armv8mbl.h	1115;"	d
CoreDebug_DAUTHCTRL_INTSPIDEN_Msk	CMSIS/core_armv8mml.h	1975;"	d
CoreDebug_DAUTHCTRL_INTSPIDEN_Pos	CMSIS/core_armv8mbl.h	1114;"	d
CoreDebug_DAUTHCTRL_INTSPIDEN_Pos	CMSIS/core_armv8mml.h	1974;"	d
CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk	CMSIS/core_armv8mbl.h	1109;"	d
CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk	CMSIS/core_armv8mml.h	1969;"	d
CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos	CMSIS/core_armv8mbl.h	1108;"	d
CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos	CMSIS/core_armv8mml.h	1968;"	d
CoreDebug_DAUTHCTRL_SPIDENSEL_Msk	CMSIS/core_armv8mbl.h	1118;"	d
CoreDebug_DAUTHCTRL_SPIDENSEL_Msk	CMSIS/core_armv8mml.h	1978;"	d
CoreDebug_DAUTHCTRL_SPIDENSEL_Pos	CMSIS/core_armv8mbl.h	1117;"	d
CoreDebug_DAUTHCTRL_SPIDENSEL_Pos	CMSIS/core_armv8mml.h	1977;"	d
CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk	CMSIS/core_armv8mbl.h	1112;"	d
CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk	CMSIS/core_armv8mml.h	1972;"	d
CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos	CMSIS/core_armv8mbl.h	1111;"	d
CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos	CMSIS/core_armv8mml.h	1971;"	d
CoreDebug_DCRSR_REGSEL_Msk	CMSIS/core_armv8mbl.h	1095;"	d
CoreDebug_DCRSR_REGSEL_Msk	CMSIS/core_armv8mml.h	1925;"	d
CoreDebug_DCRSR_REGSEL_Msk	CMSIS/core_cm4.h	1472;"	d
CoreDebug_DCRSR_REGSEL_Pos	CMSIS/core_armv8mbl.h	1094;"	d
CoreDebug_DCRSR_REGSEL_Pos	CMSIS/core_armv8mml.h	1924;"	d
CoreDebug_DCRSR_REGSEL_Pos	CMSIS/core_cm4.h	1471;"	d
CoreDebug_DCRSR_REGWnR_Msk	CMSIS/core_armv8mbl.h	1092;"	d
CoreDebug_DCRSR_REGWnR_Msk	CMSIS/core_armv8mml.h	1922;"	d
CoreDebug_DCRSR_REGWnR_Msk	CMSIS/core_cm4.h	1469;"	d
CoreDebug_DCRSR_REGWnR_Pos	CMSIS/core_armv8mbl.h	1091;"	d
CoreDebug_DCRSR_REGWnR_Pos	CMSIS/core_armv8mml.h	1921;"	d
CoreDebug_DCRSR_REGWnR_Pos	CMSIS/core_cm4.h	1468;"	d
CoreDebug_DEMCR_DWTENA_Msk	CMSIS/core_armv8mbl.h	1099;"	d
CoreDebug_DEMCR_DWTENA_Pos	CMSIS/core_armv8mbl.h	1098;"	d
CoreDebug_DEMCR_MON_EN_Msk	CMSIS/core_armv8mml.h	1941;"	d
CoreDebug_DEMCR_MON_EN_Msk	CMSIS/core_cm4.h	1488;"	d
CoreDebug_DEMCR_MON_EN_Pos	CMSIS/core_armv8mml.h	1940;"	d
CoreDebug_DEMCR_MON_EN_Pos	CMSIS/core_cm4.h	1487;"	d
CoreDebug_DEMCR_MON_PEND_Msk	CMSIS/core_armv8mml.h	1938;"	d
CoreDebug_DEMCR_MON_PEND_Msk	CMSIS/core_cm4.h	1485;"	d
CoreDebug_DEMCR_MON_PEND_Pos	CMSIS/core_armv8mml.h	1937;"	d
CoreDebug_DEMCR_MON_PEND_Pos	CMSIS/core_cm4.h	1484;"	d
CoreDebug_DEMCR_MON_REQ_Msk	CMSIS/core_armv8mml.h	1932;"	d
CoreDebug_DEMCR_MON_REQ_Msk	CMSIS/core_cm4.h	1479;"	d
CoreDebug_DEMCR_MON_REQ_Pos	CMSIS/core_armv8mml.h	1931;"	d
CoreDebug_DEMCR_MON_REQ_Pos	CMSIS/core_cm4.h	1478;"	d
CoreDebug_DEMCR_MON_STEP_Msk	CMSIS/core_armv8mml.h	1935;"	d
CoreDebug_DEMCR_MON_STEP_Msk	CMSIS/core_cm4.h	1482;"	d
CoreDebug_DEMCR_MON_STEP_Pos	CMSIS/core_armv8mml.h	1934;"	d
CoreDebug_DEMCR_MON_STEP_Pos	CMSIS/core_cm4.h	1481;"	d
CoreDebug_DEMCR_TRCENA_Msk	CMSIS/core_armv8mml.h	1929;"	d
CoreDebug_DEMCR_TRCENA_Msk	CMSIS/core_cm4.h	1476;"	d
CoreDebug_DEMCR_TRCENA_Pos	CMSIS/core_armv8mml.h	1928;"	d
CoreDebug_DEMCR_TRCENA_Pos	CMSIS/core_cm4.h	1475;"	d
CoreDebug_DEMCR_VC_BUSERR_Msk	CMSIS/core_armv8mml.h	1950;"	d
CoreDebug_DEMCR_VC_BUSERR_Msk	CMSIS/core_cm4.h	1497;"	d
CoreDebug_DEMCR_VC_BUSERR_Pos	CMSIS/core_armv8mml.h	1949;"	d
CoreDebug_DEMCR_VC_BUSERR_Pos	CMSIS/core_cm4.h	1496;"	d
CoreDebug_DEMCR_VC_CHKERR_Msk	CMSIS/core_armv8mml.h	1956;"	d
CoreDebug_DEMCR_VC_CHKERR_Msk	CMSIS/core_cm4.h	1503;"	d
CoreDebug_DEMCR_VC_CHKERR_Pos	CMSIS/core_armv8mml.h	1955;"	d
CoreDebug_DEMCR_VC_CHKERR_Pos	CMSIS/core_cm4.h	1502;"	d
CoreDebug_DEMCR_VC_CORERESET_Msk	CMSIS/core_armv8mbl.h	1105;"	d
CoreDebug_DEMCR_VC_CORERESET_Msk	CMSIS/core_armv8mml.h	1965;"	d
CoreDebug_DEMCR_VC_CORERESET_Msk	CMSIS/core_cm4.h	1512;"	d
CoreDebug_DEMCR_VC_CORERESET_Pos	CMSIS/core_armv8mbl.h	1104;"	d
CoreDebug_DEMCR_VC_CORERESET_Pos	CMSIS/core_armv8mml.h	1964;"	d
CoreDebug_DEMCR_VC_CORERESET_Pos	CMSIS/core_cm4.h	1511;"	d
CoreDebug_DEMCR_VC_HARDERR_Msk	CMSIS/core_armv8mbl.h	1102;"	d
CoreDebug_DEMCR_VC_HARDERR_Msk	CMSIS/core_armv8mml.h	1944;"	d
CoreDebug_DEMCR_VC_HARDERR_Msk	CMSIS/core_cm4.h	1491;"	d
CoreDebug_DEMCR_VC_HARDERR_Pos	CMSIS/core_armv8mbl.h	1101;"	d
CoreDebug_DEMCR_VC_HARDERR_Pos	CMSIS/core_armv8mml.h	1943;"	d
CoreDebug_DEMCR_VC_HARDERR_Pos	CMSIS/core_cm4.h	1490;"	d
CoreDebug_DEMCR_VC_INTERR_Msk	CMSIS/core_armv8mml.h	1947;"	d
CoreDebug_DEMCR_VC_INTERR_Msk	CMSIS/core_cm4.h	1494;"	d
CoreDebug_DEMCR_VC_INTERR_Pos	CMSIS/core_armv8mml.h	1946;"	d
CoreDebug_DEMCR_VC_INTERR_Pos	CMSIS/core_cm4.h	1493;"	d
CoreDebug_DEMCR_VC_MMERR_Msk	CMSIS/core_armv8mml.h	1962;"	d
CoreDebug_DEMCR_VC_MMERR_Msk	CMSIS/core_cm4.h	1509;"	d
CoreDebug_DEMCR_VC_MMERR_Pos	CMSIS/core_armv8mml.h	1961;"	d
CoreDebug_DEMCR_VC_MMERR_Pos	CMSIS/core_cm4.h	1508;"	d
CoreDebug_DEMCR_VC_NOCPERR_Msk	CMSIS/core_armv8mml.h	1959;"	d
CoreDebug_DEMCR_VC_NOCPERR_Msk	CMSIS/core_cm4.h	1506;"	d
CoreDebug_DEMCR_VC_NOCPERR_Pos	CMSIS/core_armv8mml.h	1958;"	d
CoreDebug_DEMCR_VC_NOCPERR_Pos	CMSIS/core_cm4.h	1505;"	d
CoreDebug_DEMCR_VC_STATERR_Msk	CMSIS/core_armv8mml.h	1953;"	d
CoreDebug_DEMCR_VC_STATERR_Msk	CMSIS/core_cm4.h	1500;"	d
CoreDebug_DEMCR_VC_STATERR_Pos	CMSIS/core_armv8mml.h	1952;"	d
CoreDebug_DEMCR_VC_STATERR_Pos	CMSIS/core_cm4.h	1499;"	d
CoreDebug_DHCSR_C_DEBUGEN_Msk	CMSIS/core_armv8mbl.h	1088;"	d
CoreDebug_DHCSR_C_DEBUGEN_Msk	CMSIS/core_armv8mml.h	1918;"	d
CoreDebug_DHCSR_C_DEBUGEN_Msk	CMSIS/core_cm4.h	1465;"	d
CoreDebug_DHCSR_C_DEBUGEN_Pos	CMSIS/core_armv8mbl.h	1087;"	d
CoreDebug_DHCSR_C_DEBUGEN_Pos	CMSIS/core_armv8mml.h	1917;"	d
CoreDebug_DHCSR_C_DEBUGEN_Pos	CMSIS/core_cm4.h	1464;"	d
CoreDebug_DHCSR_C_HALT_Msk	CMSIS/core_armv8mbl.h	1085;"	d
CoreDebug_DHCSR_C_HALT_Msk	CMSIS/core_armv8mml.h	1915;"	d
CoreDebug_DHCSR_C_HALT_Msk	CMSIS/core_cm4.h	1462;"	d
CoreDebug_DHCSR_C_HALT_Pos	CMSIS/core_armv8mbl.h	1084;"	d
CoreDebug_DHCSR_C_HALT_Pos	CMSIS/core_armv8mml.h	1914;"	d
CoreDebug_DHCSR_C_HALT_Pos	CMSIS/core_cm4.h	1461;"	d
CoreDebug_DHCSR_C_MASKINTS_Msk	CMSIS/core_armv8mbl.h	1079;"	d
CoreDebug_DHCSR_C_MASKINTS_Msk	CMSIS/core_armv8mml.h	1909;"	d
CoreDebug_DHCSR_C_MASKINTS_Msk	CMSIS/core_cm4.h	1456;"	d
CoreDebug_DHCSR_C_MASKINTS_Pos	CMSIS/core_armv8mbl.h	1078;"	d
CoreDebug_DHCSR_C_MASKINTS_Pos	CMSIS/core_armv8mml.h	1908;"	d
CoreDebug_DHCSR_C_MASKINTS_Pos	CMSIS/core_cm4.h	1455;"	d
CoreDebug_DHCSR_C_SNAPSTALL_Msk	CMSIS/core_armv8mml.h	1906;"	d
CoreDebug_DHCSR_C_SNAPSTALL_Msk	CMSIS/core_cm4.h	1453;"	d
CoreDebug_DHCSR_C_SNAPSTALL_Pos	CMSIS/core_armv8mml.h	1905;"	d
CoreDebug_DHCSR_C_SNAPSTALL_Pos	CMSIS/core_cm4.h	1452;"	d
CoreDebug_DHCSR_C_STEP_Msk	CMSIS/core_armv8mbl.h	1082;"	d
CoreDebug_DHCSR_C_STEP_Msk	CMSIS/core_armv8mml.h	1912;"	d
CoreDebug_DHCSR_C_STEP_Msk	CMSIS/core_cm4.h	1459;"	d
CoreDebug_DHCSR_C_STEP_Pos	CMSIS/core_armv8mbl.h	1081;"	d
CoreDebug_DHCSR_C_STEP_Pos	CMSIS/core_armv8mml.h	1911;"	d
CoreDebug_DHCSR_C_STEP_Pos	CMSIS/core_cm4.h	1458;"	d
CoreDebug_DHCSR_DBGKEY_Msk	CMSIS/core_armv8mbl.h	1055;"	d
CoreDebug_DHCSR_DBGKEY_Msk	CMSIS/core_armv8mml.h	1882;"	d
CoreDebug_DHCSR_DBGKEY_Msk	CMSIS/core_cm4.h	1432;"	d
CoreDebug_DHCSR_DBGKEY_Pos	CMSIS/core_armv8mbl.h	1054;"	d
CoreDebug_DHCSR_DBGKEY_Pos	CMSIS/core_armv8mml.h	1881;"	d
CoreDebug_DHCSR_DBGKEY_Pos	CMSIS/core_cm4.h	1431;"	d
CoreDebug_DHCSR_S_HALT_Msk	CMSIS/core_armv8mbl.h	1073;"	d
CoreDebug_DHCSR_S_HALT_Msk	CMSIS/core_armv8mml.h	1900;"	d
CoreDebug_DHCSR_S_HALT_Msk	CMSIS/core_cm4.h	1447;"	d
CoreDebug_DHCSR_S_HALT_Pos	CMSIS/core_armv8mbl.h	1072;"	d
CoreDebug_DHCSR_S_HALT_Pos	CMSIS/core_armv8mml.h	1899;"	d
CoreDebug_DHCSR_S_HALT_Pos	CMSIS/core_cm4.h	1446;"	d
CoreDebug_DHCSR_S_LOCKUP_Msk	CMSIS/core_armv8mbl.h	1067;"	d
CoreDebug_DHCSR_S_LOCKUP_Msk	CMSIS/core_armv8mml.h	1894;"	d
CoreDebug_DHCSR_S_LOCKUP_Msk	CMSIS/core_cm4.h	1441;"	d
CoreDebug_DHCSR_S_LOCKUP_Pos	CMSIS/core_armv8mbl.h	1066;"	d
CoreDebug_DHCSR_S_LOCKUP_Pos	CMSIS/core_armv8mml.h	1893;"	d
CoreDebug_DHCSR_S_LOCKUP_Pos	CMSIS/core_cm4.h	1440;"	d
CoreDebug_DHCSR_S_REGRDY_Msk	CMSIS/core_armv8mbl.h	1076;"	d
CoreDebug_DHCSR_S_REGRDY_Msk	CMSIS/core_armv8mml.h	1903;"	d
CoreDebug_DHCSR_S_REGRDY_Msk	CMSIS/core_cm4.h	1450;"	d
CoreDebug_DHCSR_S_REGRDY_Pos	CMSIS/core_armv8mbl.h	1075;"	d
CoreDebug_DHCSR_S_REGRDY_Pos	CMSIS/core_armv8mml.h	1902;"	d
CoreDebug_DHCSR_S_REGRDY_Pos	CMSIS/core_cm4.h	1449;"	d
CoreDebug_DHCSR_S_RESET_ST_Msk	CMSIS/core_armv8mbl.h	1061;"	d
CoreDebug_DHCSR_S_RESET_ST_Msk	CMSIS/core_armv8mml.h	1888;"	d
CoreDebug_DHCSR_S_RESET_ST_Msk	CMSIS/core_cm4.h	1435;"	d
CoreDebug_DHCSR_S_RESET_ST_Pos	CMSIS/core_armv8mbl.h	1060;"	d
CoreDebug_DHCSR_S_RESET_ST_Pos	CMSIS/core_armv8mml.h	1887;"	d
CoreDebug_DHCSR_S_RESET_ST_Pos	CMSIS/core_cm4.h	1434;"	d
CoreDebug_DHCSR_S_RESTART_ST_Msk	CMSIS/core_armv8mbl.h	1058;"	d
CoreDebug_DHCSR_S_RESTART_ST_Msk	CMSIS/core_armv8mml.h	1885;"	d
CoreDebug_DHCSR_S_RESTART_ST_Pos	CMSIS/core_armv8mbl.h	1057;"	d
CoreDebug_DHCSR_S_RESTART_ST_Pos	CMSIS/core_armv8mml.h	1884;"	d
CoreDebug_DHCSR_S_RETIRE_ST_Msk	CMSIS/core_armv8mbl.h	1064;"	d
CoreDebug_DHCSR_S_RETIRE_ST_Msk	CMSIS/core_armv8mml.h	1891;"	d
CoreDebug_DHCSR_S_RETIRE_ST_Msk	CMSIS/core_cm4.h	1438;"	d
CoreDebug_DHCSR_S_RETIRE_ST_Pos	CMSIS/core_armv8mbl.h	1063;"	d
CoreDebug_DHCSR_S_RETIRE_ST_Pos	CMSIS/core_armv8mml.h	1890;"	d
CoreDebug_DHCSR_S_RETIRE_ST_Pos	CMSIS/core_cm4.h	1437;"	d
CoreDebug_DHCSR_S_SLEEP_Msk	CMSIS/core_armv8mbl.h	1070;"	d
CoreDebug_DHCSR_S_SLEEP_Msk	CMSIS/core_armv8mml.h	1897;"	d
CoreDebug_DHCSR_S_SLEEP_Msk	CMSIS/core_cm4.h	1444;"	d
CoreDebug_DHCSR_S_SLEEP_Pos	CMSIS/core_armv8mbl.h	1069;"	d
CoreDebug_DHCSR_S_SLEEP_Pos	CMSIS/core_armv8mml.h	1896;"	d
CoreDebug_DHCSR_S_SLEEP_Pos	CMSIS/core_cm4.h	1443;"	d
CoreDebug_DSCSR_CDS_Msk	CMSIS/core_armv8mbl.h	1122;"	d
CoreDebug_DSCSR_CDS_Msk	CMSIS/core_armv8mml.h	1982;"	d
CoreDebug_DSCSR_CDS_Pos	CMSIS/core_armv8mbl.h	1121;"	d
CoreDebug_DSCSR_CDS_Pos	CMSIS/core_armv8mml.h	1981;"	d
CoreDebug_DSCSR_SBRSELEN_Msk	CMSIS/core_armv8mbl.h	1128;"	d
CoreDebug_DSCSR_SBRSELEN_Msk	CMSIS/core_armv8mml.h	1988;"	d
CoreDebug_DSCSR_SBRSELEN_Pos	CMSIS/core_armv8mbl.h	1127;"	d
CoreDebug_DSCSR_SBRSELEN_Pos	CMSIS/core_armv8mml.h	1987;"	d
CoreDebug_DSCSR_SBRSEL_Msk	CMSIS/core_armv8mbl.h	1125;"	d
CoreDebug_DSCSR_SBRSEL_Msk	CMSIS/core_armv8mml.h	1985;"	d
CoreDebug_DSCSR_SBRSEL_Pos	CMSIS/core_armv8mbl.h	1124;"	d
CoreDebug_DSCSR_SBRSEL_Pos	CMSIS/core_armv8mml.h	1984;"	d
CoreDebug_NS	CMSIS/core_armv8mbl.h	1203;"	d
CoreDebug_NS	CMSIS/core_armv8mml.h	2069;"	d
CoreDebug_Type	CMSIS/core_armv8mbl.h	/^} CoreDebug_Type;$/;"	t	typeref:struct:__anon130
CoreDebug_Type	CMSIS/core_armv8mml.h	/^} CoreDebug_Type;$/;"	t	typeref:struct:__anon30
CoreDebug_Type	CMSIS/core_cm4.h	/^} CoreDebug_Type;$/;"	t	typeref:struct:__anon49
CreateTasks	source/main.c	/^void CreateTasks(void)$/;"	f
CurBit	emwin/emWin_header/GUI_GIF_Private.h	/^  int   CurBit;$/;"	m	struct:__anon323
CurrentImage	emwin/emWin_header/IMAGE_Private.h	/^  int                 CurrentImage; \/\/ Image index used for animated images$/;"	m	struct:__anon315
CurrentState	emwin/emWin_header/CHECKBOX_Private.h	/^  U8                  CurrentState;$/;"	m	struct:__anon206
CurrentValue	emwin/emWin_header/EDIT_Private.h	/^  I32                  CurrentValue;    \/\/ Current value$/;"	m	struct:EDIT_Obj_struct
CursorPos	emwin/emWin_header/EDIT_Private.h	/^  int                  CursorPos;       \/\/ Cursor position. 0 means left most$/;"	m	struct:EDIT_Obj_struct
DAT	device/LPC54018.h	/^  __I  uint32_t DAT[12];                           \/**< ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0., array offset: 0x20, array step: 0x4 *\/$/;"	m	struct:__anon140
DATA	device/LPC54018.h	/^  __IO uint32_t DATA;                              \/**< SPIFI data register, offset: 0x14 *\/$/;"	m	struct:__anon184
DATABUFSTART	device/LPC54018.h	/^  __IO uint32_t DATABUFSTART;                      \/**< USB Data buffer start address, offset: 0xC *\/$/;"	m	struct:__anon187
DATABUFSTART	device/LPC54018.h	/^  __IO uint32_t DATABUFSTART;                      \/**< USB Data buffer start address, offset: 0xC *\/$/;"	m	struct:__anon189
DATA_BUFF_SIZE	vcom/virtual_com.h	15;"	d
DATA_BUFF_SIZE	vcom/virtual_com.h	19;"	d
DATA_BUFF_SIZE	vcom/virtual_com.h	23;"	d
DATA_BUFF_SIZE	vcom/virtual_com.h	28;"	d
DATA_MODE	radio/sx1276-Fsk.h	/^}DATA_MODE;$/;"	t	typeref:enum:__anon497
DATA_MODE_CONTINUOUS	radio/sx1276-Fsk.h	/^    DATA_MODE_CONTINUOUS        =   0x00,       \/\/continuous mode$/;"	e	enum:__anon497
DATA_MODE_PACKET	radio/sx1276-Fsk.h	/^    DATA_MODE_PACKET            =   0x01,       \/\/packet handling mode$/;"	e	enum:__anon497
DATA_PAYLOAD_BASE_ADDR	device/LPC54018.h	/^  __IO uint32_t DATA_PAYLOAD_BASE_ADDR;            \/**< Memory base address that indicates the start of the data payload buffers, offset: 0x1C *\/$/;"	m	struct:__anon190
DAUTHCTRL	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t DAUTHCTRL;              \/*!< Offset: 0x014 (R\/W)  Debug Authentication Control Register *\/$/;"	m	struct:__anon130
DAUTHCTRL	CMSIS/core_armv8mml.h	/^  __IOM uint32_t DAUTHCTRL;              \/*!< Offset: 0x014 (R\/W)  Debug Authentication Control Register *\/$/;"	m	struct:__anon30
DBADDR	device/LPC54018.h	/^  __IO uint32_t DBADDR;                            \/**< Descriptor List Base Address register, offset: 0x88 *\/$/;"	m	struct:__anon177
DBTP	device/LPC54018.h	/^  __IO uint32_t DBTP;                              \/**< Data Bit Timing Prescaler Register, offset: 0xC *\/$/;"	m	struct:__anon142
DCCIMVAC	CMSIS/core_armv8mml.h	/^  __OM  uint32_t DCCIMVAC;               \/*!< Offset: 0x270 ( \/W)  D-Cache Clean and Invalidate by MVA to PoC *\/$/;"	m	struct:__anon18
DCCISW	CMSIS/core_armv8mml.h	/^  __OM  uint32_t DCCISW;                 \/*!< Offset: 0x274 ( \/W)  D-Cache Clean and Invalidate by Set-way *\/$/;"	m	struct:__anon18
DCCMVAC	CMSIS/core_armv8mml.h	/^  __OM  uint32_t DCCMVAC;                \/*!< Offset: 0x268 ( \/W)  D-Cache Clean by MVA to PoC *\/$/;"	m	struct:__anon18
DCCMVAU	CMSIS/core_armv8mml.h	/^  __OM  uint32_t DCCMVAU;                \/*!< Offset: 0x264 ( \/W)  D-Cache Clean by MVA to PoU *\/$/;"	m	struct:__anon18
DCCSW	CMSIS/core_armv8mml.h	/^  __OM  uint32_t DCCSW;                  \/*!< Offset: 0x26C ( \/W)  D-Cache Clean by Set-way *\/$/;"	m	struct:__anon18
DCIMVAC	CMSIS/core_armv8mml.h	/^  __OM  uint32_t DCIMVAC;                \/*!< Offset: 0x25C ( \/W)  D-Cache Invalidate by MVA to PoC *\/$/;"	m	struct:__anon18
DCISW	CMSIS/core_armv8mml.h	/^  __OM  uint32_t DCISW;                  \/*!< Offset: 0x260 ( \/W)  D-Cache Invalidate by Set-way *\/$/;"	m	struct:__anon18
DCRDR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t DCRDR;                  \/*!< Offset: 0x008 (R\/W)  Debug Core Register Data Register *\/$/;"	m	struct:__anon130
DCRDR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t DCRDR;                  \/*!< Offset: 0x008 (R\/W)  Debug Core Register Data Register *\/$/;"	m	struct:__anon30
DCRDR	CMSIS/core_cm4.h	/^  __IOM uint32_t DCRDR;                  \/*!< Offset: 0x008 (R\/W)  Debug Core Register Data Register *\/$/;"	m	struct:__anon49
DCRSR	CMSIS/core_armv8mbl.h	/^  __OM  uint32_t DCRSR;                  \/*!< Offset: 0x004 ( \/W)  Debug Core Register Selector Register *\/$/;"	m	struct:__anon130
DCRSR	CMSIS/core_armv8mml.h	/^  __OM  uint32_t DCRSR;                  \/*!< Offset: 0x004 ( \/W)  Debug Core Register Selector Register *\/$/;"	m	struct:__anon30
DCRSR	CMSIS/core_cm4.h	/^  __OM  uint32_t DCRSR;                  \/*!< Offset: 0x004 ( \/W)  Debug Core Register Selector Register *\/$/;"	m	struct:__anon49
DC_CTRL	device/LPC54018.h	/^    __IO uint32_t DC_CTRL;                           \/**< DC Control register 0, array offset: 0x90, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
DEBNCE	device/LPC54018.h	/^  __IO uint32_t DEBNCE;                            \/**< Debounce Count register, offset: 0x64 *\/$/;"	m	struct:__anon177
DEBUGCONSOLE_DISABLE	utilities/fsl_debug_console.h	42;"	d
DEBUGCONSOLE_REDIRECT_TO_SDK	utilities/fsl_debug_console.h	41;"	d
DEBUGCONSOLE_REDIRECT_TO_TOOLCHAIN	utilities/fsl_debug_console.h	40;"	d
DEBUG_CONSOLE_BACKSPACE	utilities/fsl_debug_console.c	75;"	d	file:
DEBUG_CONSOLE_CREATE_BINARY_SEMAPHORE	utilities/fsl_debug_console.c	139;"	d	file:
DEBUG_CONSOLE_CREATE_BINARY_SEMAPHORE	utilities/fsl_debug_console.c	150;"	d	file:
DEBUG_CONSOLE_CREATE_MUTEX_SEMAPHORE	utilities/fsl_debug_console.c	106;"	d	file:
DEBUG_CONSOLE_CREATE_MUTEX_SEMAPHORE	utilities/fsl_debug_console.c	145;"	d	file:
DEBUG_CONSOLE_DEVICE_TYPE_FLEXCOMM	drivers/fsl_common.h	51;"	d
DEBUG_CONSOLE_DEVICE_TYPE_IUART	drivers/fsl_common.h	52;"	d
DEBUG_CONSOLE_DEVICE_TYPE_LPSCI	drivers/fsl_common.h	49;"	d
DEBUG_CONSOLE_DEVICE_TYPE_LPUART	drivers/fsl_common.h	48;"	d
DEBUG_CONSOLE_DEVICE_TYPE_MINI_USART	drivers/fsl_common.h	54;"	d
DEBUG_CONSOLE_DEVICE_TYPE_NONE	drivers/fsl_common.h	46;"	d
DEBUG_CONSOLE_DEVICE_TYPE_SWO	drivers/fsl_common.h	55;"	d
DEBUG_CONSOLE_DEVICE_TYPE_UART	drivers/fsl_common.h	47;"	d
DEBUG_CONSOLE_DEVICE_TYPE_USBCDC	drivers/fsl_common.h	50;"	d
DEBUG_CONSOLE_DEVICE_TYPE_VUSART	drivers/fsl_common.h	53;"	d
DEBUG_CONSOLE_ENABLE_ECHO_FUNCTION	utilities/fsl_debug_console_conf.h	124;"	d
DEBUG_CONSOLE_ENABLE_ECHO_FUNCTION	utilities/fsl_debug_console_conf.h	126;"	d
DEBUG_CONSOLE_FUNCTION_PREFIX	utilities/fsl_debug_console.c	69;"	d	file:
DEBUG_CONSOLE_FUNCTION_PREFIX	utilities/fsl_debug_console.c	71;"	d	file:
DEBUG_CONSOLE_GIVE_BINARY_SEMAPHORE_FROM_ISR	utilities/fsl_debug_console.c	141;"	d	file:
DEBUG_CONSOLE_GIVE_BINARY_SEMAPHORE_FROM_ISR	utilities/fsl_debug_console.c	159;"	d	file:
DEBUG_CONSOLE_GIVE_BINARY_SEMAPHORE_FROM_ISR	utilities/fsl_debug_console.c	162;"	d	file:
DEBUG_CONSOLE_GIVE_MUTEX_SEMAPHORE	utilities/fsl_debug_console.c	109;"	d	file:
DEBUG_CONSOLE_GIVE_MUTEX_SEMAPHORE	utilities/fsl_debug_console.c	147;"	d	file:
DEBUG_CONSOLE_PRINTF_MAX_LOG_LEN	utilities/fsl_debug_console_conf.h	78;"	d
DEBUG_CONSOLE_RECEIVE_BUFFER_LEN	utilities/fsl_debug_console_conf.h	50;"	d
DEBUG_CONSOLE_RX_ENABLE	utilities/fsl_debug_console_conf.h	69;"	d
DEBUG_CONSOLE_SCANF_MAX_LOG_LEN	utilities/fsl_debug_console_conf.h	86;"	d
DEBUG_CONSOLE_SYNCHRONIZATION_BM	utilities/fsl_debug_console_conf.h	98;"	d
DEBUG_CONSOLE_SYNCHRONIZATION_FREERTOS	utilities/fsl_debug_console_conf.h	100;"	d
DEBUG_CONSOLE_SYNCHRONIZATION_MODE	utilities/fsl_debug_console_conf.h	110;"	d
DEBUG_CONSOLE_SYNCHRONIZATION_MODE	utilities/fsl_debug_console_conf.h	112;"	d
DEBUG_CONSOLE_SYNCHRONIZATION_MODE	utilities/fsl_debug_console_conf.h	115;"	d
DEBUG_CONSOLE_TAKE_BINARY_SEMAPHORE_BLOCKING	utilities/fsl_debug_console.c	140;"	d	file:
DEBUG_CONSOLE_TAKE_BINARY_SEMAPHORE_BLOCKING	utilities/fsl_debug_console.c	152;"	d	file:
DEBUG_CONSOLE_TAKE_BINARY_SEMAPHORE_BLOCKING	utilities/fsl_debug_console.c	161;"	d	file:
DEBUG_CONSOLE_TAKE_MUTEX_SEMAPHORE_BLOCKING	utilities/fsl_debug_console.c	117;"	d	file:
DEBUG_CONSOLE_TAKE_MUTEX_SEMAPHORE_BLOCKING	utilities/fsl_debug_console.c	146;"	d	file:
DEBUG_CONSOLE_TAKE_MUTEX_SEMAPHORE_NONBLOCKING	utilities/fsl_debug_console.c	125;"	d	file:
DEBUG_CONSOLE_TAKE_MUTEX_SEMAPHORE_NONBLOCKING	utilities/fsl_debug_console.c	148;"	d	file:
DEBUG_CONSOLE_TRANSFER_BLOCKING	utilities/fsl_debug_console_conf.h	62;"	d
DEBUG_CONSOLE_TRANSMIT_BUFFER_LEN	utilities/fsl_debug_console_conf.h	39;"	d
DEBUG_CONSOLE_TX_RELIABLE_ENABLE	utilities/fsl_debug_console_conf.h	58;"	d
DEC	codec2/nlp.c	49;"	d	file:
DECLARE_CREATE_FROM_STREAM	emwin/emWin_header/GUI.h	1275;"	d
DECLARE_FONT	emwin/emWin_header/GUI_Type.h	300;"	d
DECLARE_LWIP_MEMPOOL_DESC	lwip/src/include/lwip/priv/memp_priv.h	134;"	d
DECLARE_LWIP_MEMPOOL_DESC	lwip/src/include/lwip/priv/memp_priv.h	136;"	d
DECLARE_PROTOTYPES	emwin/emWin_header/LCD_Private.h	77;"	d
DECODEL	lwip/src/netif/ppp/vj.c	96;"	d	file:
DECODES	lwip/src/netif/ppp/vj.c	107;"	d	file:
DECODEU	lwip/src/netif/ppp/vj.c	118;"	d	file:
DECPTR	lwip/src/include/netif/ppp/ppp_impl.h	530;"	d
DEFAULT_ACCEPTMBOX_SIZE	lwip/src/include/lwip/opt.h	1869;"	d
DEFAULT_ACCEPTMBOX_SIZE	source/lwipopts.h	302;"	d
DEFAULT_CONTEXT_MEMBERS	emwin/emWin_header/GUIDRV_Lin_Private.h	150;"	d
DEFAULT_MANAGEMENT_GETDEVDATA	emwin/emWin_header/GUIDRV_Lin_Private.h	265;"	d
DEFAULT_MANAGEMENT_GETDEVFUNC	emwin/emWin_header/GUIDRV_Lin_Private.h	205;"	d
DEFAULT_MANAGEMENT_GETDEVPROP	emwin/emWin_header/GUIDRV_Lin_Private.h	252;"	d
DEFAULT_MANAGEMENT_SETDEVFUNC	emwin/emWin_header/GUIDRV_Lin_Private.h	279;"	d
DEFAULT_RAW_RECVMBOX_SIZE	lwip/src/include/lwip/opt.h	1842;"	d
DEFAULT_RAW_RECVMBOX_SIZE	source/lwipopts.h	281;"	d
DEFAULT_SOCKET_EVENTCB	lwip/src/api/sockets.c	289;"	d	file:
DEFAULT_SOCKET_EVENTCB	lwip/src/api/sockets.c	292;"	d	file:
DEFAULT_SYSTEM_CLOCK	device/system_LPC54018.h	62;"	d
DEFAULT_TCP_RECVMBOX_SIZE	lwip/src/include/lwip/opt.h	1860;"	d
DEFAULT_TCP_RECVMBOX_SIZE	source/lwipopts.h	295;"	d
DEFAULT_THREAD_NAME	lwip/src/include/lwip/opt.h	1815;"	d
DEFAULT_THREAD_PRIO	lwip/src/include/lwip/opt.h	1833;"	d
DEFAULT_THREAD_PRIO	source/lwipopts.h	248;"	d
DEFAULT_THREAD_STACKSIZE	lwip/src/include/lwip/opt.h	1824;"	d
DEFAULT_THREAD_STACKSIZE	source/lwipopts.h	239;"	d
DEFAULT_UDP_RECVMBOX_SIZE	lwip/src/include/lwip/opt.h	1851;"	d
DEFAULT_UDP_RECVMBOX_SIZE	source/lwipopts.h	288;"	d
DEFEND_INTERVAL	lwip/src/include/lwip/prot/autoip.h	64;"	d
DEFINE_FUNCTIONS	emwin/emWin_header/GUIDRV_IST3088_Private.h	193;"	d
DEFINE_FUNCTIONS	emwin/emWin_header/GUIDRV_S1D13748_Private.h	197;"	d
DEFINE_FUNCTIONS	emwin/emWin_header/GUIDRV_S1D13781_Private.h	295;"	d
DEFINE_FUNCTIONS	emwin/emWin_header/GUIDRV_SLin_Private.h	227;"	d
DEFINE_FUNCTIONS	emwin/emWin_header/GUIDRV_SPage_Private.h	196;"	d
DEFINE_FUNCTIONS	emwin/emWin_header/GUIDRV_SSD1926_Private.h	217;"	d
DEFINE_FUNCTIONS	emwin/emWin_header/GUIDRV_TemplateI_Private.h	187;"	d
DEFINE_GETDEVFUNC	emwin/emWin_header/GUIDRV_S1D13781_Private.h	277;"	d
DEFINE_GETDEVPROP	emwin/emWin_header/GUIDRV_IST3088_Private.h	179;"	d
DEFINE_GETDEVPROP	emwin/emWin_header/GUIDRV_S1D13748_Private.h	183;"	d
DEFINE_GETDEVPROP	emwin/emWin_header/GUIDRV_S1D13781_Private.h	235;"	d
DEFINE_GETDEVPROP	emwin/emWin_header/GUIDRV_SLin_Private.h	213;"	d
DEFINE_GETDEVPROP	emwin/emWin_header/GUIDRV_SPage_Private.h	182;"	d
DEFINE_GETDEVPROP	emwin/emWin_header/GUIDRV_SSD1926_Private.h	203;"	d
DEFINE_GETDEVPROP	emwin/emWin_header/GUIDRV_TemplateI_Private.h	173;"	d
DEFINE_GETPIXELINDEX	emwin/emWin_header/GUIDRV_IST3088_Private.h	165;"	d
DEFINE_GETPIXELINDEX	emwin/emWin_header/GUIDRV_S1D13748_Private.h	169;"	d
DEFINE_GETPIXELINDEX	emwin/emWin_header/GUIDRV_S1D13781_Private.h	221;"	d
DEFINE_GETPIXELINDEX	emwin/emWin_header/GUIDRV_SLin_Private.h	199;"	d
DEFINE_GETPIXELINDEX	emwin/emWin_header/GUIDRV_SPage_Private.h	168;"	d
DEFINE_GETPIXELINDEX	emwin/emWin_header/GUIDRV_SSD1926_Private.h	189;"	d
DEFINE_GETPIXELINDEX	emwin/emWin_header/GUIDRV_TemplateI_Private.h	158;"	d
DEFINE_INITORIENTATION	emwin/emWin_header/GUIDRV_S1D13781_Private.h	258;"	d
DEFINE_SETPIXELINDEX	emwin/emWin_header/GUIDRV_IST3088_Private.h	153;"	d
DEFINE_SETPIXELINDEX	emwin/emWin_header/GUIDRV_S1D13748_Private.h	157;"	d
DEFINE_SETPIXELINDEX	emwin/emWin_header/GUIDRV_S1D13781_Private.h	209;"	d
DEFINE_SETPIXELINDEX	emwin/emWin_header/GUIDRV_SLin_Private.h	187;"	d
DEFINE_SETPIXELINDEX	emwin/emWin_header/GUIDRV_SPage_Private.h	156;"	d
DEFINE_SETPIXELINDEX	emwin/emWin_header/GUIDRV_SSD1926_Private.h	177;"	d
DEFINE_SETPIXELINDEX	emwin/emWin_header/GUIDRV_TemplateI_Private.h	145;"	d
DEFLATE_CHK_SEQUENCE	lwip/src/include/netif/ppp/ccp.h	106;"	d
DEFLATE_MAKE_OPT	lwip/src/include/netif/ppp/ccp.h	105;"	d
DEFLATE_MAX_SIZE	lwip/src/include/netif/ppp/ccp.h	101;"	d
DEFLATE_METHOD	lwip/src/include/netif/ppp/ccp.h	104;"	d
DEFLATE_METHOD_VAL	lwip/src/include/netif/ppp/ccp.h	102;"	d
DEFLATE_MIN_SIZE	lwip/src/include/netif/ppp/ccp.h	100;"	d
DEFLATE_MIN_WORKS	lwip/src/netif/ppp/ccp.c	54;"	d	file:
DEFLATE_SIZE	lwip/src/include/netif/ppp/ccp.h	103;"	d
DEFLATE_SUPPORT	lwip/src/include/netif/ppp/ppp.h	92;"	d
DEF_AFCBW	radio/sx1276-Fsk.h	123;"	d
DEF_AFCFEI	radio/sx1276-Fsk.h	130;"	d
DEF_BITRATEFRAC	radio/sx1276-Fsk.h	179;"	d
DEF_BITRATELSB	radio/sx1276-Fsk.h	105;"	d
DEF_BITRATEMSB	radio/sx1276-Fsk.h	104;"	d
DEF_BROADCASTADRS	radio/sx1276-Fsk.h	156;"	d
DEF_DIOMAPPING1	radio/sx1276-Fsk.h	171;"	d
DEF_DIOMAPPING2	radio/sx1276-Fsk.h	172;"	d
DEF_FDEVLSB	radio/sx1276-Fsk.h	107;"	d
DEF_FDEVMSB	radio/sx1276-Fsk.h	106;"	d
DEF_FIFO	radio/sx1276-Fsk.h	101;"	d
DEF_FIFOTHRESH	radio/sx1276-Fsk.h	157;"	d
DEF_FRFLSB	radio/sx1276-Fsk.h	110;"	d
DEF_FRFMID	radio/sx1276-Fsk.h	109;"	d
DEF_FRFMSB	radio/sx1276-Fsk.h	108;"	d
DEF_IMAGECAL	radio/sx1276-Fsk.h	165;"	d
DEF_LNA	radio/sx1276-Fsk.h	116;"	d
DEF_LOWBAT	radio/sx1276-Fsk.h	167;"	d
DEF_LR_AGCREF	radio/sx1276-LoRa.h	112;"	d
DEF_LR_AGCTHRESH1	radio/sx1276-LoRa.h	113;"	d
DEF_LR_AGCTHRESH2	radio/sx1276-LoRa.h	114;"	d
DEF_LR_AGCTHRESH3	radio/sx1276-LoRa.h	115;"	d
DEF_LR_BANDSETTING	radio/sx1276-LoRa.h	72;"	d
DEF_LR_DIOMAPPING1	radio/sx1276-LoRa.h	102;"	d
DEF_LR_DIOMAPPING2	radio/sx1276-LoRa.h	103;"	d
DEF_LR_FIFO	radio/sx1276-LoRa.h	69;"	d
DEF_LR_FIFOADDRPTR	radio/sx1276-LoRa.h	83;"	d
DEF_LR_FIFORXBASEADDR	radio/sx1276-LoRa.h	85;"	d
DEF_LR_FIFOTXBASEADDR	radio/sx1276-LoRa.h	84;"	d
DEF_LR_FRFLSB	radio/sx1276-LoRa.h	75;"	d
DEF_LR_FRFMID	radio/sx1276-LoRa.h	74;"	d
DEF_LR_FRFMSB	radio/sx1276-LoRa.h	73;"	d
DEF_LR_HOPPERIOD	radio/sx1276-LoRa.h	97;"	d
DEF_LR_IRQFLAGSMASK	radio/sx1276-LoRa.h	87;"	d
DEF_LR_LNA	radio/sx1276-LoRa.h	81;"	d
DEF_LR_MODEMCONFIG1	radio/sx1276-LoRa.h	89;"	d
DEF_LR_MODEMCONFIG2	radio/sx1276-LoRa.h	90;"	d
DEF_LR_MODEMCONFIG3	radio/sx1276-LoRa.h	99;"	d
DEF_LR_OCP	radio/sx1276-LoRa.h	79;"	d
DEF_LR_OPMODE	radio/sx1276-LoRa.h	71;"	d
DEF_LR_PACONFIG	radio/sx1276-LoRa.h	77;"	d
DEF_LR_PADAC	radio/sx1276-LoRa.h	109;"	d
DEF_LR_PARAMP	radio/sx1276-LoRa.h	78;"	d
DEF_LR_PAYLOADLENGTH	radio/sx1276-LoRa.h	95;"	d
DEF_LR_PAYLOADMAXLENGTH	radio/sx1276-LoRa.h	96;"	d
DEF_LR_PLLHOP	radio/sx1276-LoRa.h	107;"	d
DEF_LR_PREAMBLELSB	radio/sx1276-LoRa.h	93;"	d
DEF_LR_PREAMBLEMSB	radio/sx1276-LoRa.h	92;"	d
DEF_LR_SYMBTIMEOUTLSB	radio/sx1276-LoRa.h	91;"	d
DEF_LR_TCXO	radio/sx1276-LoRa.h	108;"	d
DEF_NODEADRS	radio/sx1276-Fsk.h	155;"	d
DEF_OCP	radio/sx1276-Fsk.h	114;"	d
DEF_OOKAVG	radio/sx1276-Fsk.h	126;"	d
DEF_OOKFIX	radio/sx1276-Fsk.h	125;"	d
DEF_OOKPEAK	radio/sx1276-Fsk.h	124;"	d
DEF_OPMODE	radio/sx1276-Fsk.h	103;"	d
DEF_OSC	radio/sx1276-Fsk.h	139;"	d
DEF_PACKETCONFIG1	radio/sx1276-Fsk.h	152;"	d
DEF_PACKETCONFIG2	radio/sx1276-Fsk.h	153;"	d
DEF_PACONFIG	radio/sx1276-Fsk.h	112;"	d
DEF_PADAC	radio/sx1276-Fsk.h	177;"	d
DEF_PARAMP	radio/sx1276-Fsk.h	113;"	d
DEF_PAYLOADLENGTH	radio/sx1276-Fsk.h	154;"	d
DEF_PREAMBLEDETECT	radio/sx1276-Fsk.h	133;"	d
DEF_PREAMBLELSB	radio/sx1276-Fsk.h	142;"	d
DEF_PREAMBLEMSB	radio/sx1276-Fsk.h	141;"	d
DEF_RES17	radio/sx1276-Fsk.h	127;"	d
DEF_RES18	radio/sx1276-Fsk.h	128;"	d
DEF_RES19	radio/sx1276-Fsk.h	129;"	d
DEF_RSSICOLLISION	radio/sx1276-Fsk.h	119;"	d
DEF_RSSICONFIG	radio/sx1276-Fsk.h	118;"	d
DEF_RSSITHRESH	radio/sx1276-Fsk.h	120;"	d
DEF_RXBW	radio/sx1276-Fsk.h	122;"	d
DEF_RXCONFIG	radio/sx1276-Fsk.h	117;"	d
DEF_RXDELAY	radio/sx1276-Fsk.h	137;"	d
DEF_RXTIMEOUT1	radio/sx1276-Fsk.h	134;"	d
DEF_RXTIMEOUT2	radio/sx1276-Fsk.h	135;"	d
DEF_RXTIMEOUT3	radio/sx1276-Fsk.h	136;"	d
DEF_SEQCONFIG1	radio/sx1276-Fsk.h	159;"	d
DEF_SEQCONFIG2	radio/sx1276-Fsk.h	160;"	d
DEF_SYNCCONFIG	radio/sx1276-Fsk.h	143;"	d
DEF_SYNCVALUE1	radio/sx1276-Fsk.h	144;"	d
DEF_SYNCVALUE2	radio/sx1276-Fsk.h	145;"	d
DEF_SYNCVALUE3	radio/sx1276-Fsk.h	146;"	d
DEF_SYNCVALUE4	radio/sx1276-Fsk.h	147;"	d
DEF_SYNCVALUE5	radio/sx1276-Fsk.h	148;"	d
DEF_SYNCVALUE6	radio/sx1276-Fsk.h	149;"	d
DEF_SYNCVALUE7	radio/sx1276-Fsk.h	150;"	d
DEF_SYNCVALUE8	radio/sx1276-Fsk.h	151;"	d
DEF_TIMER1COEF	radio/sx1276-Fsk.h	162;"	d
DEF_TIMER2COEF	radio/sx1276-Fsk.h	163;"	d
DEF_TIMERRESOL	radio/sx1276-Fsk.h	161;"	d
DELAYED_UP	lwip/src/netif/ppp/lcp.c	71;"	d	file:
DELTA_Q15	CMSIS/arm_math.h	361;"	d
DELTA_Q31	CMSIS/arm_math.h	360;"	d
DEMAND_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	277;"	d
DEMCR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t DEMCR;                  \/*!< Offset: 0x00C (R\/W)  Debug Exception and Monitor Control Register *\/$/;"	m	struct:__anon130
DEMCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t DEMCR;                  \/*!< Offset: 0x00C (R\/W)  Debug Exception and Monitor Control Register *\/$/;"	m	struct:__anon30
DEMCR	CMSIS/core_cm4.h	/^  __IOM uint32_t DEMCR;                  \/*!< Offset: 0x00C (R\/W)  Debug Exception and Monitor Control Register *\/$/;"	m	struct:__anon49
DEMOD_ALLOC_STACK	codec2/fsk.c	43;"	d	file:
DEMO_AUDIO_BIT_WIDTH	source/i2s_transfer.c	44;"	d	file:
DEMO_AUDIO_PROTOCOL	source/i2s_transfer.c	46;"	d	file:
DEMO_AUDIO_SAMPLE_RATE	source/i2s_transfer.c	45;"	d	file:
DEMO_DMA	source/i2s_transfer.c	36;"	d	file:
DEMO_DMIC_CHANNEL	source/i2s_transfer.c	41;"	d	file:
DEMO_DMIC_CHANNEL_ENABLE	source/i2s_transfer.c	42;"	d	file:
DEMO_DMIC_RX_CHANNEL	source/i2s_transfer.c	39;"	d	file:
DEMO_I2C	source/i2s_transfer.c	33;"	d	file:
DEMO_I2S_MASTER_CLOCK_FREQUENCY	source/i2s_transfer.c	34;"	d	file:
DEMO_I2S_TX	source/i2s_transfer.c	35;"	d	file:
DEMO_I2S_TX_CHANNEL	source/i2s_transfer.c	40;"	d	file:
DEPRECATED_DEFINITIONS_H	amazon-freertos/include/deprecated_definitions.h	29;"	d
DES_DECRYPT	lwip/src/include/netif/ppp/polarssl/des.h	43;"	d
DES_ENCRYPT	lwip/src/include/netif/ppp/polarssl/des.h	42;"	d
DES_FP	lwip/src/netif/ppp/polarssl/des.c	269;"	d	file:
DES_IP	lwip/src/netif/ppp/polarssl/des.c	255;"	d	file:
DES_ROUND	lwip/src/netif/ppp/polarssl/des.c	283;"	d	file:
DEVARCH	CMSIS/core_armv8mml.h	/^  __IM  uint32_t DEVARCH;                \/*!< Offset: 0xFBC (R\/ )  Device Architecture Register *\/$/;"	m	struct:__anon23
DEVARCH	CMSIS/core_armv8mml.h	/^  __IM  uint32_t DEVARCH;                \/*!< Offset: 0xFBC (R\/ )  ITM Device Architecture Register *\/$/;"	m	struct:__anon21
DEVCMDSTAT	device/LPC54018.h	/^  __IO uint32_t DEVCMDSTAT;                        \/**< USB Device Command\/Status register, offset: 0x0 *\/$/;"	m	struct:__anon187
DEVCMDSTAT	device/LPC54018.h	/^  __IO uint32_t DEVCMDSTAT;                        \/**< USB Device Command\/Status register, offset: 0x0 *\/$/;"	m	struct:__anon189
DEVICE_CLASS	emwin/emWin_header/GUI.h	/^} DEVICE_CLASS;$/;"	t	typeref:enum:__anon382
DEVICE_CLASS_ALPHA	emwin/emWin_header/GUI.h	/^  DEVICE_CLASS_ALPHA,$/;"	e	enum:__anon382
DEVICE_CLASS_AUTOALPHA	emwin/emWin_header/GUI.h	/^  DEVICE_CLASS_AUTOALPHA,$/;"	e	enum:__anon382
DEVICE_CLASS_DRIVER	emwin/emWin_header/GUI.h	/^  DEVICE_CLASS_DRIVER = 0,$/;"	e	enum:__anon382
DEVICE_CLASS_DRIVER_MODIFIER	emwin/emWin_header/GUI.h	/^  DEVICE_CLASS_DRIVER_MODIFIER,   \/\/ Zoom or delta-pixel modifier$/;"	e	enum:__anon382
DEVICE_CLASS_MEASDEV	emwin/emWin_header/GUI.h	/^  DEVICE_CLASS_MEASDEV$/;"	e	enum:__anon382
DEVICE_CLASS_MEMDEV	emwin/emWin_header/GUI.h	/^  DEVICE_CLASS_MEMDEV,$/;"	e	enum:__anon382
DEVICE_CLASS_SPRITE	emwin/emWin_header/GUI.h	/^  DEVICE_CLASS_SPRITE,$/;"	e	enum:__anon382
DEVICE_CLASS_VNC	emwin/emWin_header/GUI.h	/^  DEVICE_CLASS_VNC,$/;"	e	enum:__anon382
DEVICE_ID0	device/LPC54018.h	/^  __I  uint32_t DEVICE_ID0;                        \/**< Part ID register, offset: 0xFF8 *\/$/;"	m	struct:__anon185
DEVICE_ID1	device/LPC54018.h	/^  __I  uint32_t DEVICE_ID1;                        \/**< Boot ROM and die revision register, offset: 0xFFC *\/$/;"	m	struct:__anon185
DEVID	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t DEVID;                  \/*!< Offset: 0xFC8 (R\/ )  TPIU_DEVID *\/$/;"	m	struct:__anon125
DEVID	CMSIS/core_armv8mml.h	/^  __IM  uint32_t DEVID;                  \/*!< Offset: 0xFC8 (R\/ )  TPIU_DEVID *\/$/;"	m	struct:__anon24
DEVID	CMSIS/core_cm4.h	/^  __IM  uint32_t DEVID;                  \/*!< Offset: 0xFC8 (R\/ )  TPIU_DEVID *\/$/;"	m	struct:__anon46
DEVTYPE	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t DEVTYPE;                \/*!< Offset: 0xFCC (R\/ )  TPIU_DEVTYPE *\/$/;"	m	struct:__anon125
DEVTYPE	CMSIS/core_armv8mml.h	/^  __IM  uint32_t DEVTYPE;                \/*!< Offset: 0xFCC (R\/ )  TPIU_DEVTYPE *\/$/;"	m	struct:__anon24
DEVTYPE	CMSIS/core_cm4.h	/^  __IM  uint32_t DEVTYPE;                \/*!< Offset: 0xFCC (R\/ )  TPIU_DEVTYPE *\/$/;"	m	struct:__anon46
DFR	CMSIS/core_cm4.h	/^  __IM  uint32_t DFR;                    \/*!< Offset: 0x048 (R\/ )  Debug Feature Register *\/$/;"	m	struct:__anon40
DFSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t DFSR;                   \/*!< Offset: 0x030 (R\/W)  Debug Fault Status Register *\/$/;"	m	struct:__anon18
DFSR	CMSIS/core_cm4.h	/^  __IOM uint32_t DFSR;                   \/*!< Offset: 0x030 (R\/W)  Debug Fault Status Register *\/$/;"	m	struct:__anon40
DHCP6_ADVERTISE	lwip/src/include/lwip/prot/dhcp6.h	79;"	d
DHCP6_CLIENT_PORT	lwip/src/include/lwip/prot/dhcp6.h	46;"	d
DHCP6_CONFIRM	lwip/src/include/lwip/prot/dhcp6.h	81;"	d
DHCP6_DEBUG	lwip/src/include/lwip/opt.h	3485;"	d
DHCP6_DECLINE	lwip/src/include/lwip/prot/dhcp6.h	86;"	d
DHCP6_DUID_EN	lwip/src/include/lwip/prot/dhcp6.h	104;"	d
DHCP6_DUID_LL	lwip/src/include/lwip/prot/dhcp6.h	105;"	d
DHCP6_DUID_LLT	lwip/src/include/lwip/prot/dhcp6.h	103;"	d
DHCP6_DUID_UUID	lwip/src/include/lwip/prot/dhcp6.h	106;"	d
DHCP6_INFOREQUEST	lwip/src/include/lwip/prot/dhcp6.h	88;"	d
DHCP6_OPTION_AUTH	lwip/src/include/lwip/prot/dhcp6.h	118;"	d
DHCP6_OPTION_CLIENTID	lwip/src/include/lwip/prot/dhcp6.h	109;"	d
DHCP6_OPTION_DNS_SERVERS	lwip/src/include/lwip/prot/dhcp6.h	129;"	d
DHCP6_OPTION_DOMAIN_LIST	lwip/src/include/lwip/prot/dhcp6.h	130;"	d
DHCP6_OPTION_ELAPSED_TIME	lwip/src/include/lwip/prot/dhcp6.h	116;"	d
DHCP6_OPTION_IAADDR	lwip/src/include/lwip/prot/dhcp6.h	113;"	d
DHCP6_OPTION_IA_NA	lwip/src/include/lwip/prot/dhcp6.h	111;"	d
DHCP6_OPTION_IA_TA	lwip/src/include/lwip/prot/dhcp6.h	112;"	d
DHCP6_OPTION_IDX_CLI_ID	lwip/src/core/ipv6/dhcp6.c	/^  DHCP6_OPTION_IDX_CLI_ID = 0,$/;"	e	enum:dhcp6_option_idx	file:
DHCP6_OPTION_IDX_DNS_SERVER	lwip/src/core/ipv6/dhcp6.c	/^  DHCP6_OPTION_IDX_DNS_SERVER,$/;"	e	enum:dhcp6_option_idx	file:
DHCP6_OPTION_IDX_DOMAIN_LIST	lwip/src/core/ipv6/dhcp6.c	/^  DHCP6_OPTION_IDX_DOMAIN_LIST,$/;"	e	enum:dhcp6_option_idx	file:
DHCP6_OPTION_IDX_MAX	lwip/src/core/ipv6/dhcp6.c	/^  DHCP6_OPTION_IDX_MAX$/;"	e	enum:dhcp6_option_idx	file:
DHCP6_OPTION_IDX_NTP_SERVER	lwip/src/core/ipv6/dhcp6.c	/^  DHCP6_OPTION_IDX_NTP_SERVER,$/;"	e	enum:dhcp6_option_idx	file:
DHCP6_OPTION_IDX_SERVER_ID	lwip/src/core/ipv6/dhcp6.c	/^  DHCP6_OPTION_IDX_SERVER_ID,$/;"	e	enum:dhcp6_option_idx	file:
DHCP6_OPTION_INTERFACE_ID	lwip/src/include/lwip/prot/dhcp6.h	125;"	d
DHCP6_OPTION_ORO	lwip/src/include/lwip/prot/dhcp6.h	114;"	d
DHCP6_OPTION_PREFERENCE	lwip/src/include/lwip/prot/dhcp6.h	115;"	d
DHCP6_OPTION_RAPID_COMMIT	lwip/src/include/lwip/prot/dhcp6.h	121;"	d
DHCP6_OPTION_RECONF_ACCEPT	lwip/src/include/lwip/prot/dhcp6.h	127;"	d
DHCP6_OPTION_RECONF_MSG	lwip/src/include/lwip/prot/dhcp6.h	126;"	d
DHCP6_OPTION_RELAY_MSG	lwip/src/include/lwip/prot/dhcp6.h	117;"	d
DHCP6_OPTION_SERVERID	lwip/src/include/lwip/prot/dhcp6.h	110;"	d
DHCP6_OPTION_SNTP_SERVERS	lwip/src/include/lwip/prot/dhcp6.h	131;"	d
DHCP6_OPTION_STATUS_CODE	lwip/src/include/lwip/prot/dhcp6.h	120;"	d
DHCP6_OPTION_UNICAST	lwip/src/include/lwip/prot/dhcp6.h	119;"	d
DHCP6_OPTION_USER_CLASS	lwip/src/include/lwip/prot/dhcp6.h	122;"	d
DHCP6_OPTION_VENDOR_CLASS	lwip/src/include/lwip/prot/dhcp6.h	123;"	d
DHCP6_OPTION_VENDOR_OPTS	lwip/src/include/lwip/prot/dhcp6.h	124;"	d
DHCP6_REBIND	lwip/src/include/lwip/prot/dhcp6.h	83;"	d
DHCP6_RECONFIGURE	lwip/src/include/lwip/prot/dhcp6.h	87;"	d
DHCP6_RELAYFORW	lwip/src/include/lwip/prot/dhcp6.h	89;"	d
DHCP6_RELAYREPL	lwip/src/include/lwip/prot/dhcp6.h	90;"	d
DHCP6_RELEASE	lwip/src/include/lwip/prot/dhcp6.h	85;"	d
DHCP6_RENEW	lwip/src/include/lwip/prot/dhcp6.h	82;"	d
DHCP6_REPLY	lwip/src/include/lwip/prot/dhcp6.h	84;"	d
DHCP6_REQUEST	lwip/src/include/lwip/prot/dhcp6.h	80;"	d
DHCP6_SERVER_PORT	lwip/src/include/lwip/prot/dhcp6.h	47;"	d
DHCP6_SOLICIT	lwip/src/include/lwip/prot/dhcp6.h	78;"	d
DHCP6_STATE_OFF	lwip/src/include/lwip/prot/dhcp6.h	/^  DHCP6_STATE_OFF               = 0,$/;"	e	enum:__anon443
DHCP6_STATE_REQUESTING_CONFIG	lwip/src/include/lwip/prot/dhcp6.h	/^  DHCP6_STATE_REQUESTING_CONFIG = 2$/;"	e	enum:__anon443
DHCP6_STATE_STATELESS_IDLE	lwip/src/include/lwip/prot/dhcp6.h	/^  DHCP6_STATE_STATELESS_IDLE    = 1,$/;"	e	enum:__anon443
DHCP6_STATUS_NOADDRSAVAIL	lwip/src/include/lwip/prot/dhcp6.h	96;"	d
DHCP6_STATUS_NOBINDING	lwip/src/include/lwip/prot/dhcp6.h	97;"	d
DHCP6_STATUS_NOTONLINK	lwip/src/include/lwip/prot/dhcp6.h	98;"	d
DHCP6_STATUS_SUCCESS	lwip/src/include/lwip/prot/dhcp6.h	94;"	d
DHCP6_STATUS_UNSPECFAIL	lwip/src/include/lwip/prot/dhcp6.h	95;"	d
DHCP6_STATUS_USEMULTICAST	lwip/src/include/lwip/prot/dhcp6.h	99;"	d
DHCP6_TIMER_MSECS	lwip/src/include/lwip/dhcp6.h	55;"	d
DHCP6_TRANSACTION_ID_LEN	lwip/src/include/lwip/prot/dhcp6.h	51;"	d
DHCP_ACK	lwip/src/include/lwip/prot/dhcp.h	124;"	d
DHCP_AUTOIP_COOP_STATE_OFF	lwip/src/include/lwip/dhcp.h	/^  DHCP_AUTOIP_COOP_STATE_OFF  = 0,$/;"	e	enum:__anon475
DHCP_AUTOIP_COOP_STATE_ON	lwip/src/include/lwip/dhcp.h	/^  DHCP_AUTOIP_COOP_STATE_ON   = 1$/;"	e	enum:__anon475
DHCP_BOOTREPLY	lwip/src/include/lwip/prot/dhcp.h	117;"	d
DHCP_BOOTREQUEST	lwip/src/include/lwip/prot/dhcp.h	116;"	d
DHCP_BOOT_FILE_LEN	lwip/src/include/lwip/dhcp.h	59;"	d
DHCP_CHADDR_LEN	lwip/src/include/lwip/prot/dhcp.h	50;"	d
DHCP_COARSE_TIMER_MSECS	lwip/src/include/lwip/dhcp.h	55;"	d
DHCP_COARSE_TIMER_SECS	lwip/src/include/lwip/dhcp.h	53;"	d
DHCP_CREATE_RAND_XID	lwip/src/core/ipv4/dhcp.c	99;"	d	file:
DHCP_DEBUG	lwip/src/include/lwip/opt.h	3457;"	d
DHCP_DECLINE	lwip/src/include/lwip/prot/dhcp.h	123;"	d
DHCP_DISCOVER	lwip/src/include/lwip/prot/dhcp.h	120;"	d
DHCP_DOES_ARP_CHECK	lwip/src/include/lwip/opt.h	930;"	d
DHCP_FILE_LEN	lwip/src/include/lwip/prot/dhcp.h	54;"	d
DHCP_FILE_OFS	lwip/src/include/lwip/prot/dhcp.h	53;"	d
DHCP_FINE_TIMER_MSECS	lwip/src/include/lwip/dhcp.h	57;"	d
DHCP_INFORM	lwip/src/include/lwip/prot/dhcp.h	127;"	d
DHCP_MAGIC_COOKIE	lwip/src/include/lwip/prot/dhcp.h	129;"	d
DHCP_MAX_MSG_LEN	lwip/src/core/ipv4/dhcp.c	113;"	d	file:
DHCP_MAX_MSG_LEN_MIN_REQUIRED	lwip/src/core/ipv4/dhcp.c	114;"	d	file:
DHCP_MIN_OPTIONS_LEN	lwip/src/include/lwip/prot/dhcp.h	80;"	d
DHCP_MIN_REPLY_LEN	lwip/src/core/ipv4/dhcp.c	116;"	d	file:
DHCP_MSG_LEN	lwip/src/include/lwip/prot/dhcp.h	55;"	d
DHCP_NAK	lwip/src/include/lwip/prot/dhcp.h	125;"	d
DHCP_OFFER	lwip/src/include/lwip/prot/dhcp.h	121;"	d
DHCP_OPTIONS_LEN	lwip/src/include/lwip/prot/dhcp.h	83;"	d
DHCP_OPTIONS_LEN	lwip/src/include/lwip/prot/dhcp.h	88;"	d
DHCP_OPTIONS_OFS	lwip/src/include/lwip/prot/dhcp.h	56;"	d
DHCP_OPTION_BOOTFILE	lwip/src/include/lwip/prot/dhcp.h	165;"	d
DHCP_OPTION_BROADCAST	lwip/src/include/lwip/prot/dhcp.h	141;"	d
DHCP_OPTION_CLIENT_ID	lwip/src/include/lwip/prot/dhcp.h	163;"	d
DHCP_OPTION_DNS_SERVER	lwip/src/include/lwip/prot/dhcp.h	137;"	d
DHCP_OPTION_END	lwip/src/include/lwip/prot/dhcp.h	144;"	d
DHCP_OPTION_HOSTNAME	lwip/src/include/lwip/prot/dhcp.h	138;"	d
DHCP_OPTION_IDX_DNS_SERVER	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_DNS_SERVER,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_DNS_SERVER_LAST	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_DNS_SERVER_LAST = DHCP_OPTION_IDX_DNS_SERVER + LWIP_DHCP_PROVIDE_DNS_SERVERS - 1,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_LEASE_TIME	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_LEASE_TIME,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_MAX	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_MAX$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_MSG_TYPE	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_MSG_TYPE,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_NTP_SERVER	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_NTP_SERVER,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_NTP_SERVER_LAST	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_NTP_SERVER_LAST = DHCP_OPTION_IDX_NTP_SERVER + LWIP_DHCP_MAX_NTP_SERVERS - 1,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_OVERLOAD	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_OVERLOAD = 0,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_ROUTER	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_ROUTER,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_SERVER_ID	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_SERVER_ID,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_SUBNET_MASK	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_SUBNET_MASK,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_T1	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_T1,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IDX_T2	lwip/src/core/ipv4/dhcp.c	/^  DHCP_OPTION_IDX_T2,$/;"	e	enum:dhcp_option_idx	file:
DHCP_OPTION_IP_TTL	lwip/src/include/lwip/prot/dhcp.h	139;"	d
DHCP_OPTION_LEASE_TIME	lwip/src/include/lwip/prot/dhcp.h	148;"	d
DHCP_OPTION_MAX_MSG_SIZE	lwip/src/include/lwip/prot/dhcp.h	157;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	lwip/src/include/lwip/prot/dhcp.h	158;"	d
DHCP_OPTION_MESSAGE_TYPE	lwip/src/include/lwip/prot/dhcp.h	151;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	lwip/src/include/lwip/prot/dhcp.h	152;"	d
DHCP_OPTION_MTU	lwip/src/include/lwip/prot/dhcp.h	140;"	d
DHCP_OPTION_NTP	lwip/src/include/lwip/prot/dhcp.h	143;"	d
DHCP_OPTION_OVERLOAD	lwip/src/include/lwip/prot/dhcp.h	149;"	d
DHCP_OPTION_PAD	lwip/src/include/lwip/prot/dhcp.h	134;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	lwip/src/include/lwip/prot/dhcp.h	155;"	d
DHCP_OPTION_REQUESTED_IP	lwip/src/include/lwip/prot/dhcp.h	147;"	d
DHCP_OPTION_ROUTER	lwip/src/include/lwip/prot/dhcp.h	136;"	d
DHCP_OPTION_SERVER_ID	lwip/src/include/lwip/prot/dhcp.h	154;"	d
DHCP_OPTION_SUBNET_MASK	lwip/src/include/lwip/prot/dhcp.h	135;"	d
DHCP_OPTION_T1	lwip/src/include/lwip/prot/dhcp.h	160;"	d
DHCP_OPTION_T2	lwip/src/include/lwip/prot/dhcp.h	161;"	d
DHCP_OPTION_TCP_TTL	lwip/src/include/lwip/prot/dhcp.h	142;"	d
DHCP_OPTION_TFTP_SERVERNAME	lwip/src/include/lwip/prot/dhcp.h	164;"	d
DHCP_OPTION_US	lwip/src/include/lwip/prot/dhcp.h	162;"	d
DHCP_OVERLOAD_FILE	lwip/src/include/lwip/prot/dhcp.h	169;"	d
DHCP_OVERLOAD_NONE	lwip/src/include/lwip/prot/dhcp.h	168;"	d
DHCP_OVERLOAD_SNAME	lwip/src/include/lwip/prot/dhcp.h	170;"	d
DHCP_OVERLOAD_SNAME_FILE	lwip/src/include/lwip/prot/dhcp.h	171;"	d
DHCP_RELEASE	lwip/src/include/lwip/prot/dhcp.h	126;"	d
DHCP_REQUEST	lwip/src/include/lwip/prot/dhcp.h	122;"	d
DHCP_SNAME_LEN	lwip/src/include/lwip/prot/dhcp.h	52;"	d
DHCP_SNAME_OFS	lwip/src/include/lwip/prot/dhcp.h	51;"	d
DHCP_STATE_BACKING_OFF	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_BACKING_OFF     = 12$/;"	e	enum:__anon445
DHCP_STATE_BOUND	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_BOUND           = 10,$/;"	e	enum:__anon445
DHCP_STATE_CHECKING	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_CHECKING        = 8,$/;"	e	enum:__anon445
DHCP_STATE_INFORMING	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_INFORMING       = 7,$/;"	e	enum:__anon445
DHCP_STATE_INIT	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_INIT            = 2,$/;"	e	enum:__anon445
DHCP_STATE_OFF	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_OFF             = 0,$/;"	e	enum:__anon445
DHCP_STATE_PERMANENT	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_PERMANENT       = 9,  \/* not yet implemented *\/$/;"	e	enum:__anon445
DHCP_STATE_REBINDING	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_REBINDING       = 4,$/;"	e	enum:__anon445
DHCP_STATE_REBOOTING	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_REBOOTING       = 3,$/;"	e	enum:__anon445
DHCP_STATE_RELEASING	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_RELEASING       = 11, \/* not yet implemented *\/$/;"	e	enum:__anon445
DHCP_STATE_RENEWING	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_RENEWING        = 5,$/;"	e	enum:__anon445
DHCP_STATE_REQUESTING	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_REQUESTING      = 1,$/;"	e	enum:__anon445
DHCP_STATE_SELECTING	lwip/src/include/lwip/prot/dhcp.h	/^  DHCP_STATE_SELECTING       = 6,$/;"	e	enum:__anon445
DHCSR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t DHCSR;                  \/*!< Offset: 0x000 (R\/W)  Debug Halting Control and Status Register *\/$/;"	m	struct:__anon130
DHCSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t DHCSR;                  \/*!< Offset: 0x000 (R\/W)  Debug Halting Control and Status Register *\/$/;"	m	struct:__anon30
DHCSR	CMSIS/core_cm4.h	/^  __IOM uint32_t DHCSR;                  \/*!< Offset: 0x000 (R\/W)  Debug Halting Control and Status Register *\/$/;"	m	struct:__anon49
DIALOG_H	emwin/emWin_header/DIALOG.h	46;"	d
DIALOG_INTERN_H	emwin/emWin_header/DIALOG_Intern.h	46;"	d
DIGEST	device/LPC54018.h	/^  __I  uint32_t DIGEST[8];                         \/**< Digest register, array offset: 0x40, array step: 0x4 *\/$/;"	m	struct:__anon178
DIO0_IRQ	source/main.c	46;"	d	file:
DIR	device/LPC54018.h	/^  __IO uint32_t DIR[6];                            \/**< Direction registers, array offset: 0x2000, array step: 0x4 *\/$/;"	m	struct:__anon159
DIRCLR	device/LPC54018.h	/^  __O  uint32_t DIRCLR[6];                         \/**< Clear pin direction bits for port, array offset: 0x2400, array step: 0x4 *\/$/;"	m	struct:__anon159
DIRNOT	device/LPC54018.h	/^  __O  uint32_t DIRNOT[6];                         \/**< Toggle pin direction bits for port, array offset: 0x2480, array step: 0x4 *\/$/;"	m	struct:__anon159
DIRSET	device/LPC54018.h	/^  __O  uint32_t DIRSET[6];                         \/**< Set pin direction bits for port, array offset: 0x2380, array step: 0x4 *\/$/;"	m	struct:__anon159
DISCREQ	lwip/src/include/netif/ppp/lcp.h	90;"	d
DISPLAY_DRIVER	emwin/emwin_support.h	20;"	d
DIST0	emwin/emWin_header/LCD_Private.h	/^DECLARE_PROTOTYPES(DIST0);$/;"	v
DIST1	emwin/emWin_header/LCD_Private.h	/^DECLARE_PROTOTYPES(DIST1);$/;"	v
DIST2	emwin/emWin_header/LCD_Private.h	/^DECLARE_PROTOTYPES(DIST2);$/;"	v
DIST3	emwin/emWin_header/LCD_Private.h	/^DECLARE_PROTOTYPES(DIST3);$/;"	v
DIV	device/LPC54018.h	/^  __IO uint32_t DIV;                               \/**< Clock divider, used by all channel pairs., offset: 0xC1C *\/$/;"	m	struct:__anon161
DIV	device/LPC54018.h	/^  __IO uint32_t DIV;                               \/**< SPI clock Divider, offset: 0x424 *\/$/;"	m	struct:__anon183
DIVHFCLK	device/LPC54018.h	/^    __IO uint32_t DIVHFCLK;                          \/**< DMIC Clock Register 0, array offset: 0x4, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
DIVSCALAR	codec2/_kiss_fft_guts.h	73;"	d
DLL	device/LPC54018.h	/^    __IO uint32_t DLL;                               \/**< Divisor Latch LSB, offset: 0x0 *\/$/;"	m	union:__anon179::__anon180
DLM	device/LPC54018.h	/^    __IO uint32_t DLM;                               \/**< Divisor Latch MSB, offset: 0x4 *\/$/;"	m	union:__anon179::__anon181
DLY	device/LPC54018.h	/^  __IO uint32_t DLY;                               \/**< SPI Delay register, offset: 0x404 *\/$/;"	m	struct:__anon183
DMA0	device/LPC54018.h	2722;"	d
DMA0REQUEST	device/LPC54018.h	/^  __IO uint32_t DMA0REQUEST;                       \/**< SCT DMA request 0 register, offset: 0x5C *\/$/;"	m	struct:__anon172
DMA0_BASE	device/LPC54018.h	2720;"	d
DMA0_DriverIRQHandler	drivers/fsl_dma.c	/^void DMA0_DriverIRQHandler(void)$/;"	f
DMA0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void DMA0_IRQHandler(void)$/;"	f
DMA0_IRQn	device/LPC54018.h	/^  DMA0_IRQn                    = 1,                \/**< DMA controller *\/$/;"	e	enum:IRQn
DMA1REQUEST	device/LPC54018.h	/^  __IO uint32_t DMA1REQUEST;                       \/**< SCT DMA request 1 register, offset: 0x60 *\/$/;"	m	struct:__anon172
DMA1_DriverIRQHandler	drivers/fsl_dma.c	/^void DMA1_DriverIRQHandler(void)$/;"	f
DMAREQ_DMIC1	source/i2s_transfer.c	38;"	d	file:
DMA_ALLOCATE_HEAD_DESCRIPTORS	drivers/fsl_dma.h	47;"	d
DMA_ALLOCATE_LINK_DESCRIPTORS	drivers/fsl_dma.h	56;"	d
DMA_AbortTransfer	drivers/fsl_dma.c	/^void DMA_AbortTransfer(dma_handle_t *handle)$/;"	f
DMA_BASE_ADDRS	device/LPC54018.h	2724;"	d
DMA_BASE_PTRS	device/LPC54018.h	2726;"	d
DMA_CH	device/LPC54018.h	/^  } DMA_CH[2];$/;"	m	struct:__anon154	typeref:struct:__anon154::__anon156
DMA_CHANNEL_CFG_BURSTPOWER	device/LPC54018.h	2570;"	d
DMA_CHANNEL_CFG_BURSTPOWER_MASK	device/LPC54018.h	2568;"	d
DMA_CHANNEL_CFG_BURSTPOWER_SHIFT	device/LPC54018.h	2569;"	d
DMA_CHANNEL_CFG_CHPRIORITY	device/LPC54018.h	2593;"	d
DMA_CHANNEL_CFG_CHPRIORITY_MASK	device/LPC54018.h	2591;"	d
DMA_CHANNEL_CFG_CHPRIORITY_SHIFT	device/LPC54018.h	2592;"	d
DMA_CHANNEL_CFG_COUNT	device/LPC54018.h	2597;"	d
DMA_CHANNEL_CFG_DSTBURSTWRAP	device/LPC54018.h	2590;"	d
DMA_CHANNEL_CFG_DSTBURSTWRAP_MASK	device/LPC54018.h	2581;"	d
DMA_CHANNEL_CFG_DSTBURSTWRAP_SHIFT	device/LPC54018.h	2582;"	d
DMA_CHANNEL_CFG_HWTRIGEN	device/LPC54018.h	2539;"	d
DMA_CHANNEL_CFG_HWTRIGEN_MASK	device/LPC54018.h	2533;"	d
DMA_CHANNEL_CFG_HWTRIGEN_SHIFT	device/LPC54018.h	2534;"	d
DMA_CHANNEL_CFG_PERIPHREQEN	device/LPC54018.h	2532;"	d
DMA_CHANNEL_CFG_PERIPHREQEN_MASK	device/LPC54018.h	2524;"	d
DMA_CHANNEL_CFG_PERIPHREQEN_SHIFT	device/LPC54018.h	2525;"	d
DMA_CHANNEL_CFG_SRCBURSTWRAP	device/LPC54018.h	2580;"	d
DMA_CHANNEL_CFG_SRCBURSTWRAP_MASK	device/LPC54018.h	2571;"	d
DMA_CHANNEL_CFG_SRCBURSTWRAP_SHIFT	device/LPC54018.h	2572;"	d
DMA_CHANNEL_CFG_TRIGBURST	device/LPC54018.h	2567;"	d
DMA_CHANNEL_CFG_TRIGBURST_MASK	device/LPC54018.h	2558;"	d
DMA_CHANNEL_CFG_TRIGBURST_SHIFT	device/LPC54018.h	2559;"	d
DMA_CHANNEL_CFG_TRIGPOL	device/LPC54018.h	2546;"	d
DMA_CHANNEL_CFG_TRIGPOL_MASK	device/LPC54018.h	2540;"	d
DMA_CHANNEL_CFG_TRIGPOL_SHIFT	device/LPC54018.h	2541;"	d
DMA_CHANNEL_CFG_TRIGTYPE	device/LPC54018.h	2557;"	d
DMA_CHANNEL_CFG_TRIGTYPE_MASK	device/LPC54018.h	2547;"	d
DMA_CHANNEL_CFG_TRIGTYPE_SHIFT	device/LPC54018.h	2548;"	d
DMA_CHANNEL_CTLSTAT_COUNT	device/LPC54018.h	2620;"	d
DMA_CHANNEL_CTLSTAT_TRIG	device/LPC54018.h	2616;"	d
DMA_CHANNEL_CTLSTAT_TRIG_MASK	device/LPC54018.h	2609;"	d
DMA_CHANNEL_CTLSTAT_TRIG_SHIFT	device/LPC54018.h	2610;"	d
DMA_CHANNEL_CTLSTAT_VALIDPENDING	device/LPC54018.h	2608;"	d
DMA_CHANNEL_CTLSTAT_VALIDPENDING_MASK	device/LPC54018.h	2601;"	d
DMA_CHANNEL_CTLSTAT_VALIDPENDING_SHIFT	device/LPC54018.h	2602;"	d
DMA_CHANNEL_GROUP	drivers/fsl_dma.h	60;"	d
DMA_CHANNEL_INDEX	drivers/fsl_dma.h	62;"	d
DMA_CHANNEL_XFER	drivers/fsl_dma.h	89;"	d
DMA_CHANNEL_XFERCFG_CFGVALID	device/LPC54018.h	2631;"	d
DMA_CHANNEL_XFERCFG_CFGVALID_MASK	device/LPC54018.h	2624;"	d
DMA_CHANNEL_XFERCFG_CFGVALID_SHIFT	device/LPC54018.h	2625;"	d
DMA_CHANNEL_XFERCFG_CLRTRIG	device/LPC54018.h	2655;"	d
DMA_CHANNEL_XFERCFG_CLRTRIG_MASK	device/LPC54018.h	2649;"	d
DMA_CHANNEL_XFERCFG_CLRTRIG_SHIFT	device/LPC54018.h	2650;"	d
DMA_CHANNEL_XFERCFG_COUNT	device/LPC54018.h	2710;"	d
DMA_CHANNEL_XFERCFG_DSTINC	device/LPC54018.h	2703;"	d
DMA_CHANNEL_XFERCFG_DSTINC_MASK	device/LPC54018.h	2693;"	d
DMA_CHANNEL_XFERCFG_DSTINC_SHIFT	device/LPC54018.h	2694;"	d
DMA_CHANNEL_XFERCFG_RELOAD	device/LPC54018.h	2639;"	d
DMA_CHANNEL_XFERCFG_RELOAD_MASK	device/LPC54018.h	2632;"	d
DMA_CHANNEL_XFERCFG_RELOAD_SHIFT	device/LPC54018.h	2633;"	d
DMA_CHANNEL_XFERCFG_SETINTA	device/LPC54018.h	2664;"	d
DMA_CHANNEL_XFERCFG_SETINTA_MASK	device/LPC54018.h	2656;"	d
DMA_CHANNEL_XFERCFG_SETINTA_SHIFT	device/LPC54018.h	2657;"	d
DMA_CHANNEL_XFERCFG_SETINTB	device/LPC54018.h	2673;"	d
DMA_CHANNEL_XFERCFG_SETINTB_MASK	device/LPC54018.h	2665;"	d
DMA_CHANNEL_XFERCFG_SETINTB_SHIFT	device/LPC54018.h	2666;"	d
DMA_CHANNEL_XFERCFG_SRCINC	device/LPC54018.h	2692;"	d
DMA_CHANNEL_XFERCFG_SRCINC_MASK	device/LPC54018.h	2683;"	d
DMA_CHANNEL_XFERCFG_SRCINC_SHIFT	device/LPC54018.h	2684;"	d
DMA_CHANNEL_XFERCFG_SWTRIG	device/LPC54018.h	2648;"	d
DMA_CHANNEL_XFERCFG_SWTRIG_MASK	device/LPC54018.h	2640;"	d
DMA_CHANNEL_XFERCFG_SWTRIG_SHIFT	device/LPC54018.h	2641;"	d
DMA_CHANNEL_XFERCFG_WIDTH	device/LPC54018.h	2682;"	d
DMA_CHANNEL_XFERCFG_WIDTH_MASK	device/LPC54018.h	2674;"	d
DMA_CHANNEL_XFERCFG_WIDTH_SHIFT	device/LPC54018.h	2675;"	d
DMA_CHANNEL_XFERCFG_XFERCOUNT	device/LPC54018.h	2706;"	d
DMA_CHANNEL_XFERCFG_XFERCOUNT_MASK	device/LPC54018.h	2704;"	d
DMA_CHANNEL_XFERCFG_XFERCOUNT_SHIFT	device/LPC54018.h	2705;"	d
DMA_CHX_CTRL	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_CTRL;                      \/**< DMA Channelx Control, array offset: 0x1100, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_CUR_HST_RXBUF	device/LPC54018.h	/^    __I  uint32_t DMA_CHX_CUR_HST_RXBUF;             \/**< Channelx Current Application Receive Buffer Address, array offset: 0x115C, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_CUR_HST_RXDESC	device/LPC54018.h	/^    __I  uint32_t DMA_CHX_CUR_HST_RXDESC;            \/**< , array offset: 0x114C, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_CUR_HST_TXBUF	device/LPC54018.h	/^    __I  uint32_t DMA_CHX_CUR_HST_TXBUF;             \/**< , array offset: 0x1154, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_CUR_HST_TXDESC	device/LPC54018.h	/^    __I  uint32_t DMA_CHX_CUR_HST_TXDESC;            \/**< Channelx Current Host Transmit descriptor, array offset: 0x1144, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_INT_EN	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_INT_EN;                    \/**< Channelx Interrupt Enable, array offset: 0x1134, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_MISS_FRAME_CNT	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_MISS_FRAME_CNT;            \/**< Channelx missed frame count., array offset: 0x116C, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_RXDESC_LIST_ADDR	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_RXDESC_LIST_ADDR;          \/**< , array offset: 0x111C, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_RXDESC_RING_LENGTH	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_RXDESC_RING_LENGTH;        \/**< Channelx Rx descriptor Ring Length, array offset: 0x1130, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_RXDESC_TAIL_PTR	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_RXDESC_TAIL_PTR;           \/**< , array offset: 0x1128, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_RX_CTRL	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_RX_CTRL;                   \/**< DMA Channelx Receive Control, array offset: 0x1108, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_RX_INT_WDTIMER	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_RX_INT_WDTIMER;            \/**< Receive Interrupt Watchdog Timer, array offset: 0x1138, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_SLOT_FUNC_CTRL_STAT	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_SLOT_FUNC_CTRL_STAT;       \/**< Slot Function Control and Status, array offset: 0x113C, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_STAT	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_STAT;                      \/**< Channelx DMA status register, array offset: 0x1160, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_TXDESC_LIST_ADDR	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_TXDESC_LIST_ADDR;          \/**< , array offset: 0x1114, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_TXDESC_RING_LENGTH	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_TXDESC_RING_LENGTH;        \/**< , array offset: 0x112C, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_TXDESC_TAIL_PTR	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_TXDESC_TAIL_PTR;           \/**< , array offset: 0x1120, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CHX_TX_CTRL	device/LPC54018.h	/^    __IO uint32_t DMA_CHX_TX_CTRL;                   \/**< DMA Channelx Transmit Control, array offset: 0x1104, array step: 0x80 *\/$/;"	m	struct:__anon154::__anon156
DMA_CLOCKS	drivers/fsl_clock.h	121;"	d
DMA_COMMON_ABORT_ABORTCTRL	device/LPC54018.h	2516;"	d
DMA_COMMON_ABORT_ABORTCTRL_MASK	device/LPC54018.h	2514;"	d
DMA_COMMON_ABORT_ABORTCTRL_SHIFT	device/LPC54018.h	2515;"	d
DMA_COMMON_ABORT_COUNT	device/LPC54018.h	2520;"	d
DMA_COMMON_ACTIVE_ACT	device/LPC54018.h	2426;"	d
DMA_COMMON_ACTIVE_ACT_MASK	device/LPC54018.h	2424;"	d
DMA_COMMON_ACTIVE_ACT_SHIFT	device/LPC54018.h	2425;"	d
DMA_COMMON_ACTIVE_COUNT	device/LPC54018.h	2430;"	d
DMA_COMMON_BUSY_BSY	device/LPC54018.h	2436;"	d
DMA_COMMON_BUSY_BSY_MASK	device/LPC54018.h	2434;"	d
DMA_COMMON_BUSY_BSY_SHIFT	device/LPC54018.h	2435;"	d
DMA_COMMON_BUSY_COUNT	device/LPC54018.h	2440;"	d
DMA_COMMON_CONST_REG_GET	drivers/fsl_dma.h	66;"	d
DMA_COMMON_ENABLECLR_CLR	device/LPC54018.h	2416;"	d
DMA_COMMON_ENABLECLR_CLR_MASK	device/LPC54018.h	2414;"	d
DMA_COMMON_ENABLECLR_CLR_SHIFT	device/LPC54018.h	2415;"	d
DMA_COMMON_ENABLECLR_COUNT	device/LPC54018.h	2420;"	d
DMA_COMMON_ENABLESET_COUNT	device/LPC54018.h	2410;"	d
DMA_COMMON_ENABLESET_ENA	device/LPC54018.h	2406;"	d
DMA_COMMON_ENABLESET_ENA_MASK	device/LPC54018.h	2404;"	d
DMA_COMMON_ENABLESET_ENA_SHIFT	device/LPC54018.h	2405;"	d
DMA_COMMON_ERRINT_COUNT	device/LPC54018.h	2450;"	d
DMA_COMMON_ERRINT_ERR	device/LPC54018.h	2446;"	d
DMA_COMMON_ERRINT_ERR_MASK	device/LPC54018.h	2444;"	d
DMA_COMMON_ERRINT_ERR_SHIFT	device/LPC54018.h	2445;"	d
DMA_COMMON_INTA_COUNT	device/LPC54018.h	2480;"	d
DMA_COMMON_INTA_IA	device/LPC54018.h	2476;"	d
DMA_COMMON_INTA_IA_MASK	device/LPC54018.h	2474;"	d
DMA_COMMON_INTA_IA_SHIFT	device/LPC54018.h	2475;"	d
DMA_COMMON_INTB_COUNT	device/LPC54018.h	2490;"	d
DMA_COMMON_INTB_IB	device/LPC54018.h	2486;"	d
DMA_COMMON_INTB_IB_MASK	device/LPC54018.h	2484;"	d
DMA_COMMON_INTB_IB_SHIFT	device/LPC54018.h	2485;"	d
DMA_COMMON_INTENCLR_CLR	device/LPC54018.h	2466;"	d
DMA_COMMON_INTENCLR_CLR_MASK	device/LPC54018.h	2464;"	d
DMA_COMMON_INTENCLR_CLR_SHIFT	device/LPC54018.h	2465;"	d
DMA_COMMON_INTENCLR_COUNT	device/LPC54018.h	2470;"	d
DMA_COMMON_INTENSET_COUNT	device/LPC54018.h	2460;"	d
DMA_COMMON_INTENSET_INTEN	device/LPC54018.h	2456;"	d
DMA_COMMON_INTENSET_INTEN_MASK	device/LPC54018.h	2454;"	d
DMA_COMMON_INTENSET_INTEN_SHIFT	device/LPC54018.h	2455;"	d
DMA_COMMON_REG_GET	drivers/fsl_dma.h	64;"	d
DMA_COMMON_REG_SET	drivers/fsl_dma.h	68;"	d
DMA_COMMON_SETTRIG_COUNT	device/LPC54018.h	2510;"	d
DMA_COMMON_SETTRIG_TRIG	device/LPC54018.h	2506;"	d
DMA_COMMON_SETTRIG_TRIG_MASK	device/LPC54018.h	2504;"	d
DMA_COMMON_SETTRIG_TRIG_SHIFT	device/LPC54018.h	2505;"	d
DMA_COMMON_SETVALID_COUNT	device/LPC54018.h	2500;"	d
DMA_COMMON_SETVALID_SV	device/LPC54018.h	2496;"	d
DMA_COMMON_SETVALID_SV_MASK	device/LPC54018.h	2494;"	d
DMA_COMMON_SETVALID_SV_SHIFT	device/LPC54018.h	2495;"	d
DMA_CTRL_ENABLE	device/LPC54018.h	2374;"	d
DMA_CTRL_ENABLE_MASK	device/LPC54018.h	2367;"	d
DMA_CTRL_ENABLE_SHIFT	device/LPC54018.h	2368;"	d
DMA_ChannelIsActive	drivers/fsl_dma.h	/^static inline bool DMA_ChannelIsActive(DMA_Type *base, uint32_t channel)$/;"	f
DMA_ConfigureChannelTrigger	drivers/fsl_dma.c	/^void DMA_ConfigureChannelTrigger(DMA_Type *base, uint32_t channel, dma_channel_trigger_t *trigger)$/;"	f
DMA_CreateDescriptor	drivers/fsl_dma.c	/^void DMA_CreateDescriptor(dma_descriptor_t *desc, dma_xfercfg_t *xfercfg, void *srcAddr, void *dstAddr, void *nextDesc)$/;"	f
DMA_CreateHandle	drivers/fsl_dma.c	/^void DMA_CreateHandle(dma_handle_t *handle, DMA_Type *base, uint32_t channel)$/;"	f
DMA_DBG_STAT	device/LPC54018.h	/^  __I  uint32_t DMA_DBG_STAT;                      \/**< DMA Debug Status, offset: 0x100C *\/$/;"	m	struct:__anon154
DMA_DESCRIPTORS	drivers/fsl_i2s_dma.c	24;"	d	file:
DMA_DESCRIPTOR_END_ADDRESS	drivers/fsl_dma.h	77;"	d
DMA_Deinit	drivers/fsl_dma.c	/^void DMA_Deinit(DMA_Type *base)$/;"	f
DMA_DisableChannel	drivers/fsl_dma.h	/^static inline void DMA_DisableChannel(DMA_Type *base, uint32_t channel)$/;"	f
DMA_DisableChannelInterrupts	drivers/fsl_dma.h	/^static inline void DMA_DisableChannelInterrupts(DMA_Type *base, uint32_t channel)$/;"	f
DMA_DisableChannelPeriphRq	drivers/fsl_dma.h	/^static inline void DMA_DisableChannelPeriphRq(DMA_Type *base, uint32_t channel)$/;"	f
DMA_DoChannelSoftwareTrigger	drivers/fsl_dma.h	/^static inline void DMA_DoChannelSoftwareTrigger(DMA_Type *base, uint32_t channel)$/;"	f
DMA_EnableChannel	drivers/fsl_dma.h	/^static inline void DMA_EnableChannel(DMA_Type *base, uint32_t channel)$/;"	f
DMA_EnableChannelInterrupts	drivers/fsl_dma.h	/^static inline void DMA_EnableChannelInterrupts(DMA_Type *base, uint32_t channel)$/;"	f
DMA_EnableChannelPeriphRq	drivers/fsl_dma.h	/^static inline void DMA_EnableChannelPeriphRq(DMA_Type *base, uint32_t channel)$/;"	f
DMA_GetChannelPriority	drivers/fsl_dma.h	/^static inline dma_priority_t DMA_GetChannelPriority(DMA_Type *base, uint32_t channel)$/;"	f
DMA_GetInstance	drivers/fsl_dma.c	/^static uint32_t DMA_GetInstance(DMA_Type *base)$/;"	f	file:
DMA_GetRemainingBytes	drivers/fsl_dma.c	/^uint32_t DMA_GetRemainingBytes(DMA_Type *base, uint32_t channel)$/;"	f
DMA_GetVirtualStartChannel	drivers/fsl_dma.c	/^static uint32_t DMA_GetVirtualStartChannel(DMA_Type *base)$/;"	f	file:
DMA_INTR_STAT	device/LPC54018.h	/^  __IO uint32_t DMA_INTR_STAT;                     \/**< DMA Interrupt status, offset: 0x1008 *\/$/;"	m	struct:__anon154
DMA_INTSTAT_ACTIVEERRINT	device/LPC54018.h	2392;"	d
DMA_INTSTAT_ACTIVEERRINT_MASK	device/LPC54018.h	2386;"	d
DMA_INTSTAT_ACTIVEERRINT_SHIFT	device/LPC54018.h	2387;"	d
DMA_INTSTAT_ACTIVEINT	device/LPC54018.h	2385;"	d
DMA_INTSTAT_ACTIVEINT_MASK	device/LPC54018.h	2379;"	d
DMA_INTSTAT_ACTIVEINT_SHIFT	device/LPC54018.h	2380;"	d
DMA_IRQHandle	drivers/fsl_dma.c	/^void DMA_IRQHandle(DMA_Type *base)$/;"	f
DMA_IRQS	device/LPC54018.h	2728;"	d
DMA_ITRIG_INMUX	device/LPC54018.h	/^  __IO uint32_t DMA_ITRIG_INMUX[32];               \/**< Trigger select register for DMA channel, array offset: 0xE0, array step: 0x4 *\/$/;"	m	struct:__anon163
DMA_Init	drivers/fsl_dma.c	/^void DMA_Init(DMA_Type *base)$/;"	f
DMA_InstallDescriptorMemory	drivers/fsl_dma.c	/^void DMA_InstallDescriptorMemory(DMA_Type *base, void *addr)$/;"	f
DMA_LoadChannelTransferConfig	drivers/fsl_dma.h	/^static inline void DMA_LoadChannelTransferConfig(DMA_Type *base, uint32_t channel, uint32_t xfer)$/;"	f
DMA_MAX_TRANSFER_BYTES	drivers/fsl_i2s_dma.c	23;"	d	file:
DMA_MAX_TRANSFER_COUNT	drivers/fsl_dma.h	31;"	d
DMA_MODE	device/LPC54018.h	/^  __IO uint32_t DMA_MODE;                          \/**< DMA mode register, offset: 0x1000 *\/$/;"	m	struct:__anon154
DMA_OTRIG_INMUX	device/LPC54018.h	/^  __IO uint32_t DMA_OTRIG_INMUX[4];                \/**< DMA output trigger selection to become DMA trigger, array offset: 0x160, array step: 0x4 *\/$/;"	m	struct:__anon163
DMA_OTRIG_PMUX_ID	drivers/fsl_inputmux_connections.h	35;"	d
DMA_PrepareChannelTransfer	drivers/fsl_dma.c	/^void DMA_PrepareChannelTransfer(dma_channel_config_t *config,$/;"	f
DMA_PrepareTransfer	drivers/fsl_dma.c	/^void DMA_PrepareTransfer(dma_transfer_config_t *config,$/;"	f
DMA_RSTS_N	drivers/fsl_reset.h	117;"	d
DMA_SRAMBASE_OFFSET	device/LPC54018.h	2399;"	d
DMA_SRAMBASE_OFFSET_MASK	device/LPC54018.h	2397;"	d
DMA_SRAMBASE_OFFSET_SHIFT	device/LPC54018.h	2398;"	d
DMA_SYSBUS_MODE	device/LPC54018.h	/^  __IO uint32_t DMA_SYSBUS_MODE;                   \/**< DMA System Bus mode, offset: 0x1004 *\/$/;"	m	struct:__anon154
DMA_SetCallback	drivers/fsl_dma.c	/^void DMA_SetCallback(dma_handle_t *handle, dma_callback callback, void *userData)$/;"	f
DMA_SetChannelConfig	drivers/fsl_dma.c	/^void DMA_SetChannelConfig(DMA_Type *base, uint32_t channel, dma_channel_trigger_t *trigger, bool isPeriph)$/;"	f
DMA_SetChannelConfigValid	drivers/fsl_dma.h	/^static inline void DMA_SetChannelConfigValid(DMA_Type *base, uint32_t channel)$/;"	f
DMA_SetChannelPriority	drivers/fsl_dma.h	/^static inline void DMA_SetChannelPriority(DMA_Type *base, uint32_t channel, dma_priority_t priority)$/;"	f
DMA_SetupChannelDescriptor	drivers/fsl_dma.c	/^void DMA_SetupChannelDescriptor(dma_descriptor_t *desc,$/;"	f
DMA_SetupDescriptor	drivers/fsl_dma.c	/^void DMA_SetupDescriptor($/;"	f
DMA_SetupXferCFG	drivers/fsl_dma.c	/^static void DMA_SetupXferCFG(dma_xfercfg_t *xfercfg, uint32_t *xfercfg_addr)$/;"	f	file:
DMA_StartTransfer	drivers/fsl_dma.c	/^void DMA_StartTransfer(dma_handle_t *handle)$/;"	f
DMA_SubmitChannelDescriptor	drivers/fsl_dma.c	/^void DMA_SubmitChannelDescriptor(dma_handle_t *handle, dma_descriptor_t *descriptor)$/;"	f
DMA_SubmitChannelTransfer	drivers/fsl_dma.c	/^status_t DMA_SubmitChannelTransfer(dma_handle_t *handle, dma_channel_config_t *config)$/;"	f
DMA_SubmitChannelTransferParameter	drivers/fsl_dma.c	/^void DMA_SubmitChannelTransferParameter($/;"	f
DMA_SubmitTransfer	drivers/fsl_dma.c	/^status_t DMA_SubmitTransfer(dma_handle_t *handle, dma_transfer_config_t *config)$/;"	f
DMA_TRIG0_PMUX_ID	drivers/fsl_inputmux_connections.h	34;"	d
DMA_Type	device/LPC54018.h	/^} DMA_Type;$/;"	t	typeref:struct:__anon146
DMIC0	device/LPC54018.h	3059;"	d
DMIC0_BASE	device/LPC54018.h	3057;"	d
DMIC0_DriverIRQHandler	drivers/fsl_dmic.c	/^void DMIC0_DriverIRQHandler(void)$/;"	f
DMIC0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void DMIC0_IRQHandler(void)$/;"	f
DMIC0_IRQn	device/LPC54018.h	/^  DMIC0_IRQn                   = 25,               \/**< Digital microphone and DMIC subsystem *\/$/;"	e	enum:IRQn
DMICCLKDIV	device/LPC54018.h	/^  __IO uint32_t DMICCLKDIV;                        \/**< DMIC clock divider, offset: 0x3A8 *\/$/;"	m	struct:__anon185
DMICCLKSEL	device/LPC54018.h	/^  __IO uint32_t DMICCLKSEL;                        \/**< Digital microphone (DMIC) subsystem clock select, offset: 0x2EC *\/$/;"	m	struct:__anon185
DMIC_BASE_ADDRS	device/LPC54018.h	3061;"	d
DMIC_BASE_PTRS	device/LPC54018.h	3063;"	d
DMIC_CHANEN_EN_CH0	device/LPC54018.h	2953;"	d
DMIC_CHANEN_EN_CH0_MASK	device/LPC54018.h	2951;"	d
DMIC_CHANEN_EN_CH0_SHIFT	device/LPC54018.h	2952;"	d
DMIC_CHANEN_EN_CH1	device/LPC54018.h	2956;"	d
DMIC_CHANEN_EN_CH1_MASK	device/LPC54018.h	2954;"	d
DMIC_CHANEN_EN_CH1_SHIFT	device/LPC54018.h	2955;"	d
DMIC_CHANNEL_DC_CTRL_COUNT	device/LPC54018.h	2947;"	d
DMIC_CHANNEL_DC_CTRL_DCGAIN	device/LPC54018.h	2936;"	d
DMIC_CHANNEL_DC_CTRL_DCGAIN_MASK	device/LPC54018.h	2934;"	d
DMIC_CHANNEL_DC_CTRL_DCGAIN_SHIFT	device/LPC54018.h	2935;"	d
DMIC_CHANNEL_DC_CTRL_DCPOLE	device/LPC54018.h	2933;"	d
DMIC_CHANNEL_DC_CTRL_DCPOLE_MASK	device/LPC54018.h	2925;"	d
DMIC_CHANNEL_DC_CTRL_DCPOLE_SHIFT	device/LPC54018.h	2926;"	d
DMIC_CHANNEL_DC_CTRL_SATURATEAT16BIT	device/LPC54018.h	2943;"	d
DMIC_CHANNEL_DC_CTRL_SATURATEAT16BIT_MASK	device/LPC54018.h	2937;"	d
DMIC_CHANNEL_DC_CTRL_SATURATEAT16BIT_SHIFT	device/LPC54018.h	2938;"	d
DMIC_CHANNEL_DIVHFCLK_COUNT	device/LPC54018.h	2804;"	d
DMIC_CHANNEL_DIVHFCLK_PDMDIV	device/LPC54018.h	2800;"	d
DMIC_CHANNEL_DIVHFCLK_PDMDIV_MASK	device/LPC54018.h	2798;"	d
DMIC_CHANNEL_DIVHFCLK_PDMDIV_SHIFT	device/LPC54018.h	2799;"	d
DMIC_CHANNEL_FIFO_CTRL_COUNT	device/LPC54018.h	2874;"	d
DMIC_CHANNEL_FIFO_CTRL_DMAEN	device/LPC54018.h	2867;"	d
DMIC_CHANNEL_FIFO_CTRL_DMAEN_MASK	device/LPC54018.h	2861;"	d
DMIC_CHANNEL_FIFO_CTRL_DMAEN_SHIFT	device/LPC54018.h	2862;"	d
DMIC_CHANNEL_FIFO_CTRL_ENABLE	device/LPC54018.h	2846;"	d
DMIC_CHANNEL_FIFO_CTRL_ENABLE_MASK	device/LPC54018.h	2838;"	d
DMIC_CHANNEL_FIFO_CTRL_ENABLE_SHIFT	device/LPC54018.h	2839;"	d
DMIC_CHANNEL_FIFO_CTRL_INTEN	device/LPC54018.h	2860;"	d
DMIC_CHANNEL_FIFO_CTRL_INTEN_MASK	device/LPC54018.h	2854;"	d
DMIC_CHANNEL_FIFO_CTRL_INTEN_SHIFT	device/LPC54018.h	2855;"	d
DMIC_CHANNEL_FIFO_CTRL_RESETN	device/LPC54018.h	2853;"	d
DMIC_CHANNEL_FIFO_CTRL_RESETN_MASK	device/LPC54018.h	2847;"	d
DMIC_CHANNEL_FIFO_CTRL_RESETN_SHIFT	device/LPC54018.h	2848;"	d
DMIC_CHANNEL_FIFO_CTRL_TRIGLVL	device/LPC54018.h	2870;"	d
DMIC_CHANNEL_FIFO_CTRL_TRIGLVL_MASK	device/LPC54018.h	2868;"	d
DMIC_CHANNEL_FIFO_CTRL_TRIGLVL_SHIFT	device/LPC54018.h	2869;"	d
DMIC_CHANNEL_FIFO_DATA_COUNT	device/LPC54018.h	2900;"	d
DMIC_CHANNEL_FIFO_DATA_DATA	device/LPC54018.h	2896;"	d
DMIC_CHANNEL_FIFO_DATA_DATA_MASK	device/LPC54018.h	2894;"	d
DMIC_CHANNEL_FIFO_DATA_DATA_SHIFT	device/LPC54018.h	2895;"	d
DMIC_CHANNEL_FIFO_STATUS_COUNT	device/LPC54018.h	2890;"	d
DMIC_CHANNEL_FIFO_STATUS_INT	device/LPC54018.h	2880;"	d
DMIC_CHANNEL_FIFO_STATUS_INT_MASK	device/LPC54018.h	2878;"	d
DMIC_CHANNEL_FIFO_STATUS_INT_SHIFT	device/LPC54018.h	2879;"	d
DMIC_CHANNEL_FIFO_STATUS_OVERRUN	device/LPC54018.h	2883;"	d
DMIC_CHANNEL_FIFO_STATUS_OVERRUN_MASK	device/LPC54018.h	2881;"	d
DMIC_CHANNEL_FIFO_STATUS_OVERRUN_SHIFT	device/LPC54018.h	2882;"	d
DMIC_CHANNEL_FIFO_STATUS_UNDERRUN	device/LPC54018.h	2886;"	d
DMIC_CHANNEL_FIFO_STATUS_UNDERRUN_MASK	device/LPC54018.h	2884;"	d
DMIC_CHANNEL_FIFO_STATUS_UNDERRUN_SHIFT	device/LPC54018.h	2885;"	d
DMIC_CHANNEL_GAINSHIFT_COUNT	device/LPC54018.h	2834;"	d
DMIC_CHANNEL_GAINSHIFT_GAIN	device/LPC54018.h	2830;"	d
DMIC_CHANNEL_GAINSHIFT_GAIN_MASK	device/LPC54018.h	2828;"	d
DMIC_CHANNEL_GAINSHIFT_GAIN_SHIFT	device/LPC54018.h	2829;"	d
DMIC_CHANNEL_OSR_COUNT	device/LPC54018.h	2794;"	d
DMIC_CHANNEL_OSR_OSR	device/LPC54018.h	2790;"	d
DMIC_CHANNEL_OSR_OSR_MASK	device/LPC54018.h	2788;"	d
DMIC_CHANNEL_OSR_OSR_SHIFT	device/LPC54018.h	2789;"	d
DMIC_CHANNEL_PHY_CTRL_COUNT	device/LPC54018.h	2921;"	d
DMIC_CHANNEL_PHY_CTRL_PHY_FALL	device/LPC54018.h	2910;"	d
DMIC_CHANNEL_PHY_CTRL_PHY_FALL_MASK	device/LPC54018.h	2904;"	d
DMIC_CHANNEL_PHY_CTRL_PHY_FALL_SHIFT	device/LPC54018.h	2905;"	d
DMIC_CHANNEL_PHY_CTRL_PHY_HALF	device/LPC54018.h	2917;"	d
DMIC_CHANNEL_PHY_CTRL_PHY_HALF_MASK	device/LPC54018.h	2911;"	d
DMIC_CHANNEL_PHY_CTRL_PHY_HALF_SHIFT	device/LPC54018.h	2912;"	d
DMIC_CHANNEL_PREAC2FSCOEF_COMP	device/LPC54018.h	2810;"	d
DMIC_CHANNEL_PREAC2FSCOEF_COMP_MASK	device/LPC54018.h	2808;"	d
DMIC_CHANNEL_PREAC2FSCOEF_COMP_SHIFT	device/LPC54018.h	2809;"	d
DMIC_CHANNEL_PREAC2FSCOEF_COUNT	device/LPC54018.h	2814;"	d
DMIC_CHANNEL_PREAC4FSCOEF_COMP	device/LPC54018.h	2820;"	d
DMIC_CHANNEL_PREAC4FSCOEF_COMP_MASK	device/LPC54018.h	2818;"	d
DMIC_CHANNEL_PREAC4FSCOEF_COMP_SHIFT	device/LPC54018.h	2819;"	d
DMIC_CHANNEL_PREAC4FSCOEF_COUNT	device/LPC54018.h	2824;"	d
DMIC_CLOCKS	drivers/fsl_clock.h	202;"	d
DMIC_CfgChannelDc	drivers/fsl_dmic.c	/^void DMIC_CfgChannelDc(DMIC_Type *base,$/;"	f
DMIC_ConfigChannel	drivers/fsl_dmic.c	/^void DMIC_ConfigChannel(DMIC_Type *base,$/;"	f
DMIC_ConfigIO	drivers/fsl_dmic.c	/^void DMIC_ConfigIO(DMIC_Type *base, dmic_io_t config)$/;"	f
DMIC_CtrlClrIntrHwvad	drivers/fsl_dmic.h	/^static inline void DMIC_CtrlClrIntrHwvad(DMIC_Type *base, bool st10)$/;"	f
DMIC_DeInit	drivers/fsl_dmic.c	/^void DMIC_DeInit(DMIC_Type *base)$/;"	f
DMIC_DisableIntCallback	drivers/fsl_dmic.c	/^void DMIC_DisableIntCallback(DMIC_Type *base, dmic_callback_t cb)$/;"	f
DMIC_DoFifoReset	drivers/fsl_dmic.h	/^static inline void DMIC_DoFifoReset(DMIC_Type *base, dmic_channel_t channel)$/;"	f
DMIC_EnableChannelDma	drivers/fsl_dmic.h	/^static inline void DMIC_EnableChannelDma(DMIC_Type *base, dmic_channel_t channel, bool enable)$/;"	f
DMIC_EnableChannelFifo	drivers/fsl_dmic.h	/^static inline void DMIC_EnableChannelFifo(DMIC_Type *base, dmic_channel_t channel, bool enable)$/;"	f
DMIC_EnableChannelInterrupt	drivers/fsl_dmic.h	/^static inline void DMIC_EnableChannelInterrupt(DMIC_Type *base, dmic_channel_t channel, bool enable)$/;"	f
DMIC_EnableChannelSignExtend	drivers/fsl_dmic.h	/^static inline void DMIC_EnableChannelSignExtend(DMIC_Type *base, dmic_channel_t channel, bool enable)$/;"	f
DMIC_EnableChannnel	drivers/fsl_dmic.c	/^void DMIC_EnableChannnel(DMIC_Type *base, uint32_t channelmask)$/;"	f
DMIC_EnableIntCallback	drivers/fsl_dmic.c	/^void DMIC_EnableIntCallback(DMIC_Type *base, dmic_callback_t cb)$/;"	f
DMIC_FifoChannel	drivers/fsl_dmic.c	/^void DMIC_FifoChannel(DMIC_Type *base, uint32_t channel, uint32_t trig_level, uint32_t enable, uint32_t resetn)$/;"	f
DMIC_FifoClearStatus	drivers/fsl_dmic.h	/^static inline void DMIC_FifoClearStatus(DMIC_Type *base, uint32_t channel, uint32_t mask)$/;"	f
DMIC_FifoGetAddress	drivers/fsl_dmic.h	/^static inline uint32_t DMIC_FifoGetAddress(DMIC_Type *base, uint32_t channel)$/;"	f
DMIC_FifoGetData	drivers/fsl_dmic.h	/^static inline uint32_t DMIC_FifoGetData(DMIC_Type *base, uint32_t channel)$/;"	f
DMIC_FifoGetStatus	drivers/fsl_dmic.h	/^static inline uint32_t DMIC_FifoGetStatus(DMIC_Type *base, uint32_t channel)$/;"	f
DMIC_FilterResetHwvad	drivers/fsl_dmic.h	/^static inline void DMIC_FilterResetHwvad(DMIC_Type *base, bool rstt)$/;"	f
DMIC_GetInstance	drivers/fsl_dmic.c	/^uint32_t DMIC_GetInstance(DMIC_Type *base)$/;"	f
DMIC_GetNoiseEnvlpEst	drivers/fsl_dmic.h	/^static inline uint16_t DMIC_GetNoiseEnvlpEst(DMIC_Type *base)$/;"	f
DMIC_HWVADGAIN_INPUTGAIN	device/LPC54018.h	2987;"	d
DMIC_HWVADGAIN_INPUTGAIN_MASK	device/LPC54018.h	2985;"	d
DMIC_HWVADGAIN_INPUTGAIN_SHIFT	device/LPC54018.h	2986;"	d
DMIC_HWVADHPFS_HPFS	device/LPC54018.h	3000;"	d
DMIC_HWVADHPFS_HPFS_MASK	device/LPC54018.h	2992;"	d
DMIC_HWVADHPFS_HPFS_SHIFT	device/LPC54018.h	2993;"	d
DMIC_HWVADLOWZ_LOWZ	device/LPC54018.h	3039;"	d
DMIC_HWVADLOWZ_LOWZ_MASK	device/LPC54018.h	3037;"	d
DMIC_HWVADLOWZ_LOWZ_SHIFT	device/LPC54018.h	3038;"	d
DMIC_HWVADRSTT_RSTT	device/LPC54018.h	3018;"	d
DMIC_HWVADRSTT_RSTT_MASK	device/LPC54018.h	3016;"	d
DMIC_HWVADRSTT_RSTT_SHIFT	device/LPC54018.h	3017;"	d
DMIC_HWVADST10_ST10	device/LPC54018.h	3011;"	d
DMIC_HWVADST10_ST10_MASK	device/LPC54018.h	3005;"	d
DMIC_HWVADST10_ST10_SHIFT	device/LPC54018.h	3006;"	d
DMIC_HWVADTHGN_THGN	device/LPC54018.h	3025;"	d
DMIC_HWVADTHGN_THGN_MASK	device/LPC54018.h	3023;"	d
DMIC_HWVADTHGN_THGN_SHIFT	device/LPC54018.h	3024;"	d
DMIC_HWVADTHGS_THGS	device/LPC54018.h	3032;"	d
DMIC_HWVADTHGS_THGS_MASK	device/LPC54018.h	3030;"	d
DMIC_HWVADTHGS_THGS_SHIFT	device/LPC54018.h	3031;"	d
DMIC_HWVAD_IRQS	device/LPC54018.h	3066;"	d
DMIC_HwvadDisableIntCallback	drivers/fsl_dmic.c	/^void DMIC_HwvadDisableIntCallback(DMIC_Type *base, dmic_hwvad_callback_t vadcb)$/;"	f
DMIC_HwvadEnableIntCallback	drivers/fsl_dmic.c	/^void DMIC_HwvadEnableIntCallback(DMIC_Type *base, dmic_hwvad_callback_t vadcb)$/;"	f
DMIC_ID_ID	device/LPC54018.h	3046;"	d
DMIC_ID_ID_MASK	device/LPC54018.h	3044;"	d
DMIC_ID_ID_SHIFT	device/LPC54018.h	3045;"	d
DMIC_IOCFG_CLK_BYPASS0	device/LPC54018.h	2963;"	d
DMIC_IOCFG_CLK_BYPASS0_MASK	device/LPC54018.h	2961;"	d
DMIC_IOCFG_CLK_BYPASS0_SHIFT	device/LPC54018.h	2962;"	d
DMIC_IOCFG_CLK_BYPASS1	device/LPC54018.h	2966;"	d
DMIC_IOCFG_CLK_BYPASS1_MASK	device/LPC54018.h	2964;"	d
DMIC_IOCFG_CLK_BYPASS1_SHIFT	device/LPC54018.h	2965;"	d
DMIC_IOCFG_STEREO_DATA0	device/LPC54018.h	2969;"	d
DMIC_IOCFG_STEREO_DATA0_MASK	device/LPC54018.h	2967;"	d
DMIC_IOCFG_STEREO_DATA0_SHIFT	device/LPC54018.h	2968;"	d
DMIC_IRQS	device/LPC54018.h	3065;"	d
DMIC_Init	drivers/fsl_dmic.c	/^void DMIC_Init(DMIC_Type *base)$/;"	f
DMIC_InstallDMADescriptorMemory	drivers/fsl_dmic_dma.c	/^void DMIC_InstallDMADescriptorMemory(dmic_dma_handle_t *handle, void *linkAddr, size_t linkNum)$/;"	f
DMIC_RSTS	drivers/fsl_reset.h	121;"	d
DMIC_SetFilterCtrlHwvad	drivers/fsl_dmic.h	/^static inline void DMIC_SetFilterCtrlHwvad(DMIC_Type *base, uint32_t value)$/;"	f
DMIC_SetGainNoiseEstHwvad	drivers/fsl_dmic.h	/^static inline void DMIC_SetGainNoiseEstHwvad(DMIC_Type *base, uint32_t value)$/;"	f
DMIC_SetGainSignalEstHwvad	drivers/fsl_dmic.h	/^static inline void DMIC_SetGainSignalEstHwvad(DMIC_Type *base, uint32_t value)$/;"	f
DMIC_SetIOCFG	drivers/fsl_dmic.h	/^static inline void DMIC_SetIOCFG(DMIC_Type *base, uint32_t sel)$/;"	f
DMIC_SetInputGainHwvad	drivers/fsl_dmic.h	/^static inline void DMIC_SetInputGainHwvad(DMIC_Type *base, uint32_t value)$/;"	f
DMIC_SetOperationMode	drivers/fsl_dmic.c	/^void DMIC_SetOperationMode(DMIC_Type *base, operation_mode_t mode)$/;"	f
DMIC_TransferAbortReceiveDMA	drivers/fsl_dmic_dma.c	/^void DMIC_TransferAbortReceiveDMA(DMIC_Type *base, dmic_dma_handle_t *handle)$/;"	f
DMIC_TransferCreateHandleDMA	drivers/fsl_dmic_dma.c	/^status_t DMIC_TransferCreateHandleDMA(DMIC_Type *base,$/;"	f
DMIC_TransferGetReceiveCountDMA	drivers/fsl_dmic_dma.c	/^status_t DMIC_TransferGetReceiveCountDMA(DMIC_Type *base, dmic_dma_handle_t *handle, uint32_t *count)$/;"	f
DMIC_TransferReceiveDMA	drivers/fsl_dmic_dma.c	/^status_t DMIC_TransferReceiveDMA(DMIC_Type *base, dmic_dma_handle_t *handle, dmic_transfer_t *xfer, uint32_t channel)$/;"	f
DMIC_TransferReceiveDMACallback	drivers/fsl_dmic_dma.c	/^static void DMIC_TransferReceiveDMACallback(dma_handle_t *handle, void *param, bool transferDone, uint32_t intmode)$/;"	f	file:
DMIC_Type	device/LPC54018.h	/^} DMIC_Type;$/;"	t	typeref:struct:__anon149
DMIC_USE2FS_USE2FS	device/LPC54018.h	2980;"	d
DMIC_USE2FS_USE2FS_MASK	device/LPC54018.h	2974;"	d
DMIC_USE2FS_USE2FS_SHIFT	device/LPC54018.h	2975;"	d
DMIC_Use2fs	drivers/fsl_dmic.c	/^void DMIC_Use2fs(DMIC_Type *base, bool use2fs)$/;"	f
DNS_DEBUG	lwip/src/include/lwip/opt.h	3471;"	d
DNS_DOES_NAME_CHECK	lwip/src/include/lwip/opt.h	1123;"	d
DNS_FLAG1_AUTHORATIVE	lwip/src/include/lwip/prot/dns.h	88;"	d
DNS_FLAG1_OPCODE_INVERSE	lwip/src/include/lwip/prot/dns.h	86;"	d
DNS_FLAG1_OPCODE_STANDARD	lwip/src/include/lwip/prot/dns.h	87;"	d
DNS_FLAG1_OPCODE_STATUS	lwip/src/include/lwip/prot/dns.h	85;"	d
DNS_FLAG1_RD	lwip/src/include/lwip/prot/dns.h	90;"	d
DNS_FLAG1_RESPONSE	lwip/src/include/lwip/prot/dns.h	84;"	d
DNS_FLAG1_TRUNC	lwip/src/include/lwip/prot/dns.h	89;"	d
DNS_FLAG2_ERR_MASK	lwip/src/include/lwip/prot/dns.h	92;"	d
DNS_FLAG2_ERR_NAME	lwip/src/include/lwip/prot/dns.h	94;"	d
DNS_FLAG2_ERR_NONE	lwip/src/include/lwip/prot/dns.h	93;"	d
DNS_FLAG2_RA	lwip/src/include/lwip/prot/dns.h	91;"	d
DNS_HDR_GET_OPCODE	lwip/src/include/lwip/prot/dns.h	96;"	d
DNS_LOCAL_HOSTLIST	lwip/src/include/lwip/opt.h	1148;"	d
DNS_LOCAL_HOSTLIST_ELEM	lwip/src/include/lwip/dns.h	80;"	d
DNS_LOCAL_HOSTLIST_IS_DYNAMIC	lwip/src/include/lwip/opt.h	1154;"	d
DNS_LOCAL_HOSTLIST_MAX_NAMELEN	lwip/src/include/lwip/dns.h	83;"	d
DNS_LOCAL_HOSTLIST_STORAGE_POST	lwip/src/core/dns.c	/^  DNS_LOCAL_HOSTLIST_STORAGE_POST = DNS_LOCAL_HOSTLIST_INIT;$/;"	v	typeref:struct:local_hostlist_static
DNS_LOCAL_HOSTLIST_STORAGE_POST	lwip/src/core/dns.c	272;"	d	file:
DNS_LOCAL_HOSTLIST_STORAGE_PRE	lwip/src/core/dns.c	267;"	d	file:
DNS_MAX_NAME_LENGTH	lwip/src/include/lwip/opt.h	1105;"	d
DNS_MAX_REQUESTS	lwip/src/core/dns.c	135;"	d	file:
DNS_MAX_REQUESTS	lwip/src/core/dns.c	144;"	d	file:
DNS_MAX_RETRIES	lwip/src/include/lwip/opt.h	1118;"	d
DNS_MAX_SERVERS	lwip/src/include/lwip/opt.h	1113;"	d
DNS_MAX_SOURCE_PORTS	lwip/src/core/dns.c	150;"	d	file:
DNS_MAX_SOURCE_PORTS	lwip/src/core/dns.c	158;"	d	file:
DNS_MAX_SOURCE_PORTS	lwip/src/core/dns.c	160;"	d	file:
DNS_MAX_TTL	lwip/src/core/dns.c	117;"	d	file:
DNS_MQUERY_IPV4_GROUP_INIT	lwip/src/include/lwip/prot/dns.h	128;"	d
DNS_MQUERY_IPV6_GROUP_INIT	lwip/src/include/lwip/prot/dns.h	133;"	d
DNS_MQUERY_PORT	lwip/src/include/lwip/prot/dns.h	123;"	d
DNS_PORT_ALLOWED	lwip/src/core/dns.c	112;"	d	file:
DNS_RAND_TXID	lwip/src/core/dns.c	103;"	d	file:
DNS_RAND_TXID	lwip/src/core/dns.c	106;"	d	file:
DNS_RRCLASS_ANY	lwip/src/include/lwip/prot/dns.h	80;"	d
DNS_RRCLASS_CH	lwip/src/include/lwip/prot/dns.h	78;"	d
DNS_RRCLASS_CS	lwip/src/include/lwip/prot/dns.h	77;"	d
DNS_RRCLASS_FLUSH	lwip/src/include/lwip/prot/dns.h	81;"	d
DNS_RRCLASS_HS	lwip/src/include/lwip/prot/dns.h	79;"	d
DNS_RRCLASS_IN	lwip/src/include/lwip/prot/dns.h	76;"	d
DNS_RRTYPE_A	lwip/src/include/lwip/prot/dns.h	55;"	d
DNS_RRTYPE_AAAA	lwip/src/include/lwip/prot/dns.h	71;"	d
DNS_RRTYPE_ANY	lwip/src/include/lwip/prot/dns.h	73;"	d
DNS_RRTYPE_CNAME	lwip/src/include/lwip/prot/dns.h	59;"	d
DNS_RRTYPE_HINFO	lwip/src/include/lwip/prot/dns.h	67;"	d
DNS_RRTYPE_MB	lwip/src/include/lwip/prot/dns.h	61;"	d
DNS_RRTYPE_MD	lwip/src/include/lwip/prot/dns.h	57;"	d
DNS_RRTYPE_MF	lwip/src/include/lwip/prot/dns.h	58;"	d
DNS_RRTYPE_MG	lwip/src/include/lwip/prot/dns.h	62;"	d
DNS_RRTYPE_MINFO	lwip/src/include/lwip/prot/dns.h	68;"	d
DNS_RRTYPE_MR	lwip/src/include/lwip/prot/dns.h	63;"	d
DNS_RRTYPE_MX	lwip/src/include/lwip/prot/dns.h	69;"	d
DNS_RRTYPE_NS	lwip/src/include/lwip/prot/dns.h	56;"	d
DNS_RRTYPE_NULL	lwip/src/include/lwip/prot/dns.h	64;"	d
DNS_RRTYPE_PTR	lwip/src/include/lwip/prot/dns.h	66;"	d
DNS_RRTYPE_SOA	lwip/src/include/lwip/prot/dns.h	60;"	d
DNS_RRTYPE_SRV	lwip/src/include/lwip/prot/dns.h	72;"	d
DNS_RRTYPE_TXT	lwip/src/include/lwip/prot/dns.h	70;"	d
DNS_RRTYPE_WKS	lwip/src/include/lwip/prot/dns.h	65;"	d
DNS_SERVER_PORT	lwip/src/include/lwip/prot/dns.h	51;"	d
DNS_STATE_ASKING	lwip/src/core/dns.c	/^  DNS_STATE_ASKING           = 2,$/;"	e	enum:__anon477	file:
DNS_STATE_DONE	lwip/src/core/dns.c	/^  DNS_STATE_DONE             = 3$/;"	e	enum:__anon477	file:
DNS_STATE_NEW	lwip/src/core/dns.c	/^  DNS_STATE_NEW              = 1,$/;"	e	enum:__anon477	file:
DNS_STATE_UNUSED	lwip/src/core/dns.c	/^  DNS_STATE_UNUSED           = 0,$/;"	e	enum:__anon477	file:
DNS_TABLE_SIZE	lwip/src/include/lwip/opt.h	1100;"	d
DNS_TMR_INTERVAL	lwip/src/include/lwip/dns.h	54;"	d
DOMAIN_TO_NETCONN_TYPE	lwip/src/api/sockets.c	133;"	d	file:
DOMAIN_TO_NETCONN_TYPE	lwip/src/api/sockets.c	143;"	d	file:
DOMAIN_TO_NETCONN_TYPE	lwip/src/api/sockets.c	152;"	d	file:
DRAW_FROM_DATABLOCK	emwin/emWin_header/GUI_GIF_Private.h	/^typedef int  DRAW_FROM_DATABLOCK(GUI_GIF_CONTEXT * pContext, IMAGE_DESCRIPTOR * pDescriptor, int x0, int y0, int Transparency, int Disposal, int Num, int Denom);$/;"	t
DRIVERS_FREEDV_CODEC2_FFT_H_	codec2/codec2_fft.h	9;"	d
DRIVER_COMMON_H_	CMSIS_driver/Driver_Common.h	35;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_DCache_Private.h	/^} DRIVER_CONTEXT;$/;"	t	typeref:struct:__anon370
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_DCache_Private.h	63;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_FlexColor_Private.h	79;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_IST3088_Private.h	58;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_Lin_Private.h	/^} DRIVER_CONTEXT;$/;"	t	typeref:struct:__anon207
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_Lin_Private.h	145;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_S1D13781_Private.h	110;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SLin_Private.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SLin_Private.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SLin_Private.h	64;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SPage_Private.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SPage_Private.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SPage_Private.h	66;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_SSD1926_Private.h	64;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUIDRV_TemplateI_Private.h	62;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUI_GCache_Private.h	/^} DRIVER_CONTEXT;$/;"	t	typeref:struct:__anon239
DRIVER_CONTEXT	emwin/emWin_header/GUI_GCache_Private.h	56;"	d
DRIVER_CONTEXT	emwin/emWin_header/GUI_SetOrientation.h	/^struct DRIVER_CONTEXT {$/;"	s
DRIVER_CONTEXT	emwin/emWin_header/GUI_SetOrientation.h	/^typedef struct DRIVER_CONTEXT DRIVER_CONTEXT;$/;"	t	typeref:struct:DRIVER_CONTEXT
DRIVER_CONTEXT	emwin/emWin_header/GUI_SetOrientation.h	59;"	d
DRIVER_I2C_H_	CMSIS_driver/Driver_I2C.h	54;"	d
DRIVER_SPI_H_	CMSIS_driver/Driver_SPI.h	48;"	d
DROPDOWN_CF_AUTOSCROLLBAR	emwin/emWin_header/DROPDOWN.h	62;"	d
DROPDOWN_CF_UP	emwin/emWin_header/DROPDOWN.h	63;"	d
DROPDOWN_CI_ARROW	emwin/emWin_header/DROPDOWN.h	73;"	d
DROPDOWN_CI_BUTTON	emwin/emWin_header/DROPDOWN.h	74;"	d
DROPDOWN_CI_SEL	emwin/emWin_header/DROPDOWN.h	70;"	d
DROPDOWN_CI_SELFOCUS	emwin/emWin_header/DROPDOWN.h	71;"	d
DROPDOWN_CI_UNSEL	emwin/emWin_header/DROPDOWN.h	69;"	d
DROPDOWN_H	emwin/emWin_header/DROPDOWN.h	46;"	d
DROPDOWN_Handle	emwin/emWin_header/DROPDOWN.h	/^typedef WM_HMEM DROPDOWN_Handle;$/;"	t
DROPDOWN_ID	emwin/emWin_header/WIDGET.h	102;"	d
DROPDOWN_INIT_ID	emwin/emWin_header/DROPDOWN_Private.h	107;"	d
DROPDOWN_INIT_ID	emwin/emWin_header/DROPDOWN_Private.h	109;"	d
DROPDOWN_LOCK_H	emwin/emWin_header/DROPDOWN_Private.h	114;"	d
DROPDOWN_LOCK_H	emwin/emWin_header/DROPDOWN_Private.h	116;"	d
DROPDOWN_Obj	emwin/emWin_header/DROPDOWN_Private.h	/^} DROPDOWN_Obj;$/;"	t	typeref:struct:__anon360
DROPDOWN_PRIVATE_H	emwin/emWin_header/DROPDOWN_Private.h	46;"	d
DROPDOWN_PROPS	emwin/emWin_header/DROPDOWN_Private.h	/^} DROPDOWN_PROPS;$/;"	t	typeref:struct:__anon359
DROPDOWN_SF_AUTOSCROLLBAR	emwin/emWin_header/DROPDOWN_Private.h	60;"	d
DROPDOWN_SKINFLEX_PI_DISABLED	emwin/emWin_header/DROPDOWN.h	83;"	d
DROPDOWN_SKINFLEX_PI_ENABLED	emwin/emWin_header/DROPDOWN.h	82;"	d
DROPDOWN_SKINFLEX_PI_EXPANDED	emwin/emWin_header/DROPDOWN.h	80;"	d
DROPDOWN_SKINFLEX_PI_FOCUSED	emwin/emWin_header/DROPDOWN.h	81;"	d
DROPDOWN_SKINFLEX_PROPS	emwin/emWin_header/DROPDOWN.h	/^} DROPDOWN_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon357
DROPDOWN_SKIN_FLEX	emwin/emWin_header/DROPDOWN.h	182;"	d
DROPDOWN_SKIN_PRIVATE	emwin/emWin_header/DROPDOWN_Private.h	/^} DROPDOWN_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon358
DSCADDR	device/LPC54018.h	/^  __I  uint32_t DSCADDR;                           \/**< Current Host Descriptor Address register, offset: 0x94 *\/$/;"	m	struct:__anon177
DSCSR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t DSCSR;                  \/*!< Offset: 0x018 (R\/W)  Debug Security Control and Status Register *\/$/;"	m	struct:__anon130
DSCSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t DSCSR;                  \/*!< Offset: 0x018 (R\/W)  Debug Security Control and Status Register *\/$/;"	m	struct:__anon30
DTCMCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t DTCMCR;                 \/*!< Offset: 0x294 (R\/W)  Data Tightly-Coupled Memory Control Registers *\/$/;"	m	struct:__anon18
DWT	CMSIS/core_armv8mbl.h	1179;"	d
DWT	CMSIS/core_armv8mml.h	2041;"	d
DWT	CMSIS/core_cm4.h	1565;"	d
DWT_BASE	CMSIS/core_armv8mbl.h	1168;"	d
DWT_BASE	CMSIS/core_armv8mml.h	2029;"	d
DWT_BASE	CMSIS/core_cm4.h	1553;"	d
DWT_CPICNT_CPICNT_Msk	CMSIS/core_armv8mml.h	1337;"	d
DWT_CPICNT_CPICNT_Msk	CMSIS/core_cm4.h	998;"	d
DWT_CPICNT_CPICNT_Pos	CMSIS/core_armv8mml.h	1336;"	d
DWT_CPICNT_CPICNT_Pos	CMSIS/core_cm4.h	997;"	d
DWT_CTRL_CPIEVTENA_Msk	CMSIS/core_armv8mml.h	1312;"	d
DWT_CTRL_CPIEVTENA_Msk	CMSIS/core_cm4.h	973;"	d
DWT_CTRL_CPIEVTENA_Pos	CMSIS/core_armv8mml.h	1311;"	d
DWT_CTRL_CPIEVTENA_Pos	CMSIS/core_cm4.h	972;"	d
DWT_CTRL_CYCCNTENA_Msk	CMSIS/core_armv8mml.h	1333;"	d
DWT_CTRL_CYCCNTENA_Msk	CMSIS/core_cm4.h	994;"	d
DWT_CTRL_CYCCNTENA_Pos	CMSIS/core_armv8mml.h	1332;"	d
DWT_CTRL_CYCCNTENA_Pos	CMSIS/core_cm4.h	993;"	d
DWT_CTRL_CYCDISS_Msk	CMSIS/core_armv8mml.h	1294;"	d
DWT_CTRL_CYCDISS_Pos	CMSIS/core_armv8mml.h	1293;"	d
DWT_CTRL_CYCEVTENA_Msk	CMSIS/core_armv8mml.h	1297;"	d
DWT_CTRL_CYCEVTENA_Msk	CMSIS/core_cm4.h	958;"	d
DWT_CTRL_CYCEVTENA_Pos	CMSIS/core_armv8mml.h	1296;"	d
DWT_CTRL_CYCEVTENA_Pos	CMSIS/core_cm4.h	957;"	d
DWT_CTRL_CYCTAP_Msk	CMSIS/core_armv8mml.h	1324;"	d
DWT_CTRL_CYCTAP_Msk	CMSIS/core_cm4.h	985;"	d
DWT_CTRL_CYCTAP_Pos	CMSIS/core_armv8mml.h	1323;"	d
DWT_CTRL_CYCTAP_Pos	CMSIS/core_cm4.h	984;"	d
DWT_CTRL_EXCEVTENA_Msk	CMSIS/core_armv8mml.h	1309;"	d
DWT_CTRL_EXCEVTENA_Msk	CMSIS/core_cm4.h	970;"	d
DWT_CTRL_EXCEVTENA_Pos	CMSIS/core_armv8mml.h	1308;"	d
DWT_CTRL_EXCEVTENA_Pos	CMSIS/core_cm4.h	969;"	d
DWT_CTRL_EXCTRCENA_Msk	CMSIS/core_armv8mml.h	1315;"	d
DWT_CTRL_EXCTRCENA_Msk	CMSIS/core_cm4.h	976;"	d
DWT_CTRL_EXCTRCENA_Pos	CMSIS/core_armv8mml.h	1314;"	d
DWT_CTRL_EXCTRCENA_Pos	CMSIS/core_cm4.h	975;"	d
DWT_CTRL_FOLDEVTENA_Msk	CMSIS/core_armv8mml.h	1300;"	d
DWT_CTRL_FOLDEVTENA_Msk	CMSIS/core_cm4.h	961;"	d
DWT_CTRL_FOLDEVTENA_Pos	CMSIS/core_armv8mml.h	1299;"	d
DWT_CTRL_FOLDEVTENA_Pos	CMSIS/core_cm4.h	960;"	d
DWT_CTRL_LSUEVTENA_Msk	CMSIS/core_armv8mml.h	1303;"	d
DWT_CTRL_LSUEVTENA_Msk	CMSIS/core_cm4.h	964;"	d
DWT_CTRL_LSUEVTENA_Pos	CMSIS/core_armv8mml.h	1302;"	d
DWT_CTRL_LSUEVTENA_Pos	CMSIS/core_cm4.h	963;"	d
DWT_CTRL_NOCYCCNT_Msk	CMSIS/core_armv8mbl.h	688;"	d
DWT_CTRL_NOCYCCNT_Msk	CMSIS/core_armv8mml.h	1288;"	d
DWT_CTRL_NOCYCCNT_Msk	CMSIS/core_cm4.h	952;"	d
DWT_CTRL_NOCYCCNT_Pos	CMSIS/core_armv8mbl.h	687;"	d
DWT_CTRL_NOCYCCNT_Pos	CMSIS/core_armv8mml.h	1287;"	d
DWT_CTRL_NOCYCCNT_Pos	CMSIS/core_cm4.h	951;"	d
DWT_CTRL_NOEXTTRIG_Msk	CMSIS/core_armv8mbl.h	685;"	d
DWT_CTRL_NOEXTTRIG_Msk	CMSIS/core_armv8mml.h	1285;"	d
DWT_CTRL_NOEXTTRIG_Msk	CMSIS/core_cm4.h	949;"	d
DWT_CTRL_NOEXTTRIG_Pos	CMSIS/core_armv8mbl.h	684;"	d
DWT_CTRL_NOEXTTRIG_Pos	CMSIS/core_armv8mml.h	1284;"	d
DWT_CTRL_NOEXTTRIG_Pos	CMSIS/core_cm4.h	948;"	d
DWT_CTRL_NOPRFCNT_Msk	CMSIS/core_armv8mbl.h	691;"	d
DWT_CTRL_NOPRFCNT_Msk	CMSIS/core_armv8mml.h	1291;"	d
DWT_CTRL_NOPRFCNT_Msk	CMSIS/core_cm4.h	955;"	d
DWT_CTRL_NOPRFCNT_Pos	CMSIS/core_armv8mbl.h	690;"	d
DWT_CTRL_NOPRFCNT_Pos	CMSIS/core_armv8mml.h	1290;"	d
DWT_CTRL_NOPRFCNT_Pos	CMSIS/core_cm4.h	954;"	d
DWT_CTRL_NOTRCPKT_Msk	CMSIS/core_armv8mbl.h	682;"	d
DWT_CTRL_NOTRCPKT_Msk	CMSIS/core_armv8mml.h	1282;"	d
DWT_CTRL_NOTRCPKT_Msk	CMSIS/core_cm4.h	946;"	d
DWT_CTRL_NOTRCPKT_Pos	CMSIS/core_armv8mbl.h	681;"	d
DWT_CTRL_NOTRCPKT_Pos	CMSIS/core_armv8mml.h	1281;"	d
DWT_CTRL_NOTRCPKT_Pos	CMSIS/core_cm4.h	945;"	d
DWT_CTRL_NUMCOMP_Msk	CMSIS/core_armv8mbl.h	679;"	d
DWT_CTRL_NUMCOMP_Msk	CMSIS/core_armv8mml.h	1279;"	d
DWT_CTRL_NUMCOMP_Msk	CMSIS/core_cm4.h	943;"	d
DWT_CTRL_NUMCOMP_Pos	CMSIS/core_armv8mbl.h	678;"	d
DWT_CTRL_NUMCOMP_Pos	CMSIS/core_armv8mml.h	1278;"	d
DWT_CTRL_NUMCOMP_Pos	CMSIS/core_cm4.h	942;"	d
DWT_CTRL_PCSAMPLENA_Msk	CMSIS/core_armv8mml.h	1318;"	d
DWT_CTRL_PCSAMPLENA_Msk	CMSIS/core_cm4.h	979;"	d
DWT_CTRL_PCSAMPLENA_Pos	CMSIS/core_armv8mml.h	1317;"	d
DWT_CTRL_PCSAMPLENA_Pos	CMSIS/core_cm4.h	978;"	d
DWT_CTRL_POSTINIT_Msk	CMSIS/core_armv8mml.h	1327;"	d
DWT_CTRL_POSTINIT_Msk	CMSIS/core_cm4.h	988;"	d
DWT_CTRL_POSTINIT_Pos	CMSIS/core_armv8mml.h	1326;"	d
DWT_CTRL_POSTINIT_Pos	CMSIS/core_cm4.h	987;"	d
DWT_CTRL_POSTPRESET_Msk	CMSIS/core_armv8mml.h	1330;"	d
DWT_CTRL_POSTPRESET_Msk	CMSIS/core_cm4.h	991;"	d
DWT_CTRL_POSTPRESET_Pos	CMSIS/core_armv8mml.h	1329;"	d
DWT_CTRL_POSTPRESET_Pos	CMSIS/core_cm4.h	990;"	d
DWT_CTRL_SLEEPEVTENA_Msk	CMSIS/core_armv8mml.h	1306;"	d
DWT_CTRL_SLEEPEVTENA_Msk	CMSIS/core_cm4.h	967;"	d
DWT_CTRL_SLEEPEVTENA_Pos	CMSIS/core_armv8mml.h	1305;"	d
DWT_CTRL_SLEEPEVTENA_Pos	CMSIS/core_cm4.h	966;"	d
DWT_CTRL_SYNCTAP_Msk	CMSIS/core_armv8mml.h	1321;"	d
DWT_CTRL_SYNCTAP_Msk	CMSIS/core_cm4.h	982;"	d
DWT_CTRL_SYNCTAP_Pos	CMSIS/core_armv8mml.h	1320;"	d
DWT_CTRL_SYNCTAP_Pos	CMSIS/core_cm4.h	981;"	d
DWT_EXCCNT_EXCCNT_Msk	CMSIS/core_armv8mml.h	1341;"	d
DWT_EXCCNT_EXCCNT_Msk	CMSIS/core_cm4.h	1002;"	d
DWT_EXCCNT_EXCCNT_Pos	CMSIS/core_armv8mml.h	1340;"	d
DWT_EXCCNT_EXCCNT_Pos	CMSIS/core_cm4.h	1001;"	d
DWT_FOLDCNT_FOLDCNT_Msk	CMSIS/core_armv8mml.h	1353;"	d
DWT_FOLDCNT_FOLDCNT_Msk	CMSIS/core_cm4.h	1014;"	d
DWT_FOLDCNT_FOLDCNT_Pos	CMSIS/core_armv8mml.h	1352;"	d
DWT_FOLDCNT_FOLDCNT_Pos	CMSIS/core_cm4.h	1013;"	d
DWT_FUNCTION_ACTION_Msk	CMSIS/core_armv8mbl.h	704;"	d
DWT_FUNCTION_ACTION_Msk	CMSIS/core_armv8mml.h	1366;"	d
DWT_FUNCTION_ACTION_Pos	CMSIS/core_armv8mbl.h	703;"	d
DWT_FUNCTION_ACTION_Pos	CMSIS/core_armv8mml.h	1365;"	d
DWT_FUNCTION_CYCMATCH_Msk	CMSIS/core_cm4.h	1040;"	d
DWT_FUNCTION_CYCMATCH_Pos	CMSIS/core_cm4.h	1039;"	d
DWT_FUNCTION_DATAVADDR0_Msk	CMSIS/core_cm4.h	1028;"	d
DWT_FUNCTION_DATAVADDR0_Pos	CMSIS/core_cm4.h	1027;"	d
DWT_FUNCTION_DATAVADDR1_Msk	CMSIS/core_cm4.h	1025;"	d
DWT_FUNCTION_DATAVADDR1_Pos	CMSIS/core_cm4.h	1024;"	d
DWT_FUNCTION_DATAVMATCH_Msk	CMSIS/core_cm4.h	1037;"	d
DWT_FUNCTION_DATAVMATCH_Pos	CMSIS/core_cm4.h	1036;"	d
DWT_FUNCTION_DATAVSIZE_Msk	CMSIS/core_armv8mbl.h	701;"	d
DWT_FUNCTION_DATAVSIZE_Msk	CMSIS/core_armv8mml.h	1363;"	d
DWT_FUNCTION_DATAVSIZE_Msk	CMSIS/core_cm4.h	1031;"	d
DWT_FUNCTION_DATAVSIZE_Pos	CMSIS/core_armv8mbl.h	700;"	d
DWT_FUNCTION_DATAVSIZE_Pos	CMSIS/core_armv8mml.h	1362;"	d
DWT_FUNCTION_DATAVSIZE_Pos	CMSIS/core_cm4.h	1030;"	d
DWT_FUNCTION_EMITRANGE_Msk	CMSIS/core_cm4.h	1043;"	d
DWT_FUNCTION_EMITRANGE_Pos	CMSIS/core_cm4.h	1042;"	d
DWT_FUNCTION_FUNCTION_Msk	CMSIS/core_cm4.h	1046;"	d
DWT_FUNCTION_FUNCTION_Pos	CMSIS/core_cm4.h	1045;"	d
DWT_FUNCTION_ID_Msk	CMSIS/core_armv8mbl.h	695;"	d
DWT_FUNCTION_ID_Msk	CMSIS/core_armv8mml.h	1357;"	d
DWT_FUNCTION_ID_Pos	CMSIS/core_armv8mbl.h	694;"	d
DWT_FUNCTION_ID_Pos	CMSIS/core_armv8mml.h	1356;"	d
DWT_FUNCTION_LNK1ENA_Msk	CMSIS/core_cm4.h	1034;"	d
DWT_FUNCTION_LNK1ENA_Pos	CMSIS/core_cm4.h	1033;"	d
DWT_FUNCTION_MATCHED_Msk	CMSIS/core_armv8mbl.h	698;"	d
DWT_FUNCTION_MATCHED_Msk	CMSIS/core_armv8mml.h	1360;"	d
DWT_FUNCTION_MATCHED_Msk	CMSIS/core_cm4.h	1022;"	d
DWT_FUNCTION_MATCHED_Pos	CMSIS/core_armv8mbl.h	697;"	d
DWT_FUNCTION_MATCHED_Pos	CMSIS/core_armv8mml.h	1359;"	d
DWT_FUNCTION_MATCHED_Pos	CMSIS/core_cm4.h	1021;"	d
DWT_FUNCTION_MATCH_Msk	CMSIS/core_armv8mbl.h	707;"	d
DWT_FUNCTION_MATCH_Msk	CMSIS/core_armv8mml.h	1369;"	d
DWT_FUNCTION_MATCH_Pos	CMSIS/core_armv8mbl.h	706;"	d
DWT_FUNCTION_MATCH_Pos	CMSIS/core_armv8mml.h	1368;"	d
DWT_LSUCNT_LSUCNT_Msk	CMSIS/core_armv8mml.h	1349;"	d
DWT_LSUCNT_LSUCNT_Msk	CMSIS/core_cm4.h	1010;"	d
DWT_LSUCNT_LSUCNT_Pos	CMSIS/core_armv8mml.h	1348;"	d
DWT_LSUCNT_LSUCNT_Pos	CMSIS/core_cm4.h	1009;"	d
DWT_MASK_MASK_Msk	CMSIS/core_cm4.h	1018;"	d
DWT_MASK_MASK_Pos	CMSIS/core_cm4.h	1017;"	d
DWT_SLEEPCNT_SLEEPCNT_Msk	CMSIS/core_armv8mml.h	1345;"	d
DWT_SLEEPCNT_SLEEPCNT_Msk	CMSIS/core_cm4.h	1006;"	d
DWT_SLEEPCNT_SLEEPCNT_Pos	CMSIS/core_armv8mml.h	1344;"	d
DWT_SLEEPCNT_SLEEPCNT_Pos	CMSIS/core_cm4.h	1005;"	d
DWT_Type	CMSIS/core_armv8mbl.h	/^} DWT_Type;$/;"	t	typeref:struct:__anon124
DWT_Type	CMSIS/core_armv8mml.h	/^} DWT_Type;$/;"	t	typeref:struct:__anon23
DWT_Type	CMSIS/core_cm4.h	/^} DWT_Type;$/;"	t	typeref:struct:__anon45
DYNAMIC	device/LPC54018.h	/^  } DYNAMIC[4];$/;"	m	struct:__anon151	typeref:struct:__anon151::__anon152
DYNAMICAPR	device/LPC54018.h	/^  __IO uint32_t DYNAMICAPR;                        \/**< Last-data-out to active command time, offset: 0x3C *\/$/;"	m	struct:__anon151
DYNAMICCONFIG	device/LPC54018.h	/^    __IO uint32_t DYNAMICCONFIG;                     \/**< Configuration information for EMC_DYCSx, array offset: 0x100, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon152
DYNAMICCONTROL	device/LPC54018.h	/^  __IO uint32_t DYNAMICCONTROL;                    \/**< Controls dynamic memory operation, offset: 0x20 *\/$/;"	m	struct:__anon151
DYNAMICDAL	device/LPC54018.h	/^  __IO uint32_t DYNAMICDAL;                        \/**< Data-in to active command time, offset: 0x40 *\/$/;"	m	struct:__anon151
DYNAMICMRD	device/LPC54018.h	/^  __IO uint32_t DYNAMICMRD;                        \/**< Time for load mode register to active command, offset: 0x58 *\/$/;"	m	struct:__anon151
DYNAMICRAS	device/LPC54018.h	/^  __IO uint32_t DYNAMICRAS;                        \/**< Active to precharge command period, offset: 0x34 *\/$/;"	m	struct:__anon151
DYNAMICRASCAS	device/LPC54018.h	/^    __IO uint32_t DYNAMICRASCAS;                     \/**< RAS and CAS latencies for EMC_DYCSx, array offset: 0x104, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon152
DYNAMICRC	device/LPC54018.h	/^  __IO uint32_t DYNAMICRC;                         \/**< Selects the active to active command period, offset: 0x48 *\/$/;"	m	struct:__anon151
DYNAMICREADCONFIG	device/LPC54018.h	/^  __IO uint32_t DYNAMICREADCONFIG;                 \/**< Configures dynamic memory read strategy, offset: 0x28 *\/$/;"	m	struct:__anon151
DYNAMICREFRESH	device/LPC54018.h	/^  __IO uint32_t DYNAMICREFRESH;                    \/**< Configures dynamic memory refresh, offset: 0x24 *\/$/;"	m	struct:__anon151
DYNAMICRFC	device/LPC54018.h	/^  __IO uint32_t DYNAMICRFC;                        \/**< Selects the auto-refresh period, offset: 0x4C *\/$/;"	m	struct:__anon151
DYNAMICRP	device/LPC54018.h	/^  __IO uint32_t DYNAMICRP;                         \/**< Precharge command period, offset: 0x30 *\/$/;"	m	struct:__anon151
DYNAMICRRD	device/LPC54018.h	/^  __IO uint32_t DYNAMICRRD;                        \/**< Latency for active bank A to active bank B, offset: 0x54 *\/$/;"	m	struct:__anon151
DYNAMICSREX	device/LPC54018.h	/^  __IO uint32_t DYNAMICSREX;                       \/**< Self-refresh exit time, offset: 0x38 *\/$/;"	m	struct:__anon151
DYNAMICWR	device/LPC54018.h	/^  __IO uint32_t DYNAMICWR;                         \/**< Write recovery time, offset: 0x44 *\/$/;"	m	struct:__anon151
DYNAMICXSR	device/LPC54018.h	/^  __IO uint32_t DYNAMICXSR;                        \/**< Time for exit self-refresh to active command, offset: 0x50 *\/$/;"	m	struct:__anon151
D_CAL	usb/phy/usb_phy.h	/^    uint8_t D_CAL;     \/* Decode to trim the nominal 17.78mA current source *\/$/;"	m	struct:_usb_phy_config_struct
DaemonTaskMessage_t	amazon-freertos/freertos/timers.c	/^} DaemonTaskMessage_t;$/;"	t	typeref:struct:tmrTimerQueueMessage	file:
Data	emwin/emWin_header/WIDGET.h	/^  } Data;$/;"	m	struct:GUI_DRAW	typeref:union:GUI_DRAW::__anon214
Data	emwin/emWin_header/WM.h	/^  } Data;$/;"	m	struct:WM_MESSAGE	typeref:union:WM_MESSAGE::__anon291
Day	emwin/emWin_header/CALENDAR.h	/^  int Day;$/;"	m	struct:__anon240
DbgConsole_Deinit	utilities/fsl_debug_console.c	/^status_t DbgConsole_Deinit(void)$/;"	f
DbgConsole_EchoCharacter	utilities/fsl_debug_console.c	/^static status_t DbgConsole_EchoCharacter(uint8_t *ch, bool isGetChar, int *index)$/;"	f	file:
DbgConsole_Flush	utilities/fsl_debug_console.c	/^DEBUG_CONSOLE_FUNCTION_PREFIX status_t DbgConsole_Flush(void)$/;"	f
DbgConsole_Getchar	utilities/fsl_debug_console.c	/^int DbgConsole_Getchar(void)$/;"	f
DbgConsole_Init	utilities/fsl_debug_console.c	/^status_t DbgConsole_Init(uint8_t instance, uint32_t baudRate, serial_port_type_t device, uint32_t clkSrcFreq)$/;"	f
DbgConsole_PrintCallback	utilities/fsl_debug_console.c	/^static void DbgConsole_PrintCallback(char *buf, int32_t *indicator, char dbgVal, int len)$/;"	f	file:
DbgConsole_Printf	utilities/fsl_debug_console.c	/^int DbgConsole_Printf(const char *formatString, ...)$/;"	f
DbgConsole_Putchar	utilities/fsl_debug_console.c	/^int DbgConsole_Putchar(int ch)$/;"	f
DbgConsole_ReadCharacter	utilities/fsl_debug_console.c	/^int DbgConsole_ReadCharacter(uint8_t *ch)$/;"	f
DbgConsole_ReadLine	utilities/fsl_debug_console.c	/^int DbgConsole_ReadLine(uint8_t *buf, size_t size)$/;"	f
DbgConsole_ReadOneCharacter	utilities/fsl_debug_console.c	/^status_t DbgConsole_ReadOneCharacter(uint8_t *ch)$/;"	f
DbgConsole_Scanf	utilities/fsl_debug_console.c	/^int DbgConsole_Scanf(char *formatString, ...)$/;"	f
DbgConsole_SendData	utilities/fsl_debug_console.c	/^int DbgConsole_SendData(uint8_t *ch, size_t size)$/;"	f
DbgConsole_SendDataReliable	utilities/fsl_debug_console.c	/^int DbgConsole_SendDataReliable(uint8_t *ch, size_t size)$/;"	f
DbgConsole_SerialManagerRxCallback	utilities/fsl_debug_console.c	/^static void DbgConsole_SerialManagerRxCallback(void *callbackParam,$/;"	f	file:
DbgConsole_SerialManagerTxCallback	utilities/fsl_debug_console.c	/^static void DbgConsole_SerialManagerTxCallback(void *callbackParam,$/;"	f	file:
DbgConsole_TryGetchar	utilities/fsl_debug_console.c	/^status_t DbgConsole_TryGetchar(char *ch)$/;"	f
DebugId	emwin/emWin_header/WIDGET.h	/^    U32 DebugId;$/;"	m	struct:__anon212
DebugId	emwin/emWin_header/WM.h	/^  U32      DebugId;$/;"	m	struct:WM_WINDOW_INFO
DebugMon_Handler	startup/startup_lpc54018.c	/^WEAK_AV void DebugMon_Handler(void)$/;"	f
DebugMonitor_IRQn	device/LPC54018.h	/^  DebugMonitor_IRQn            = -4,               \/**< Cortex-M4 Debug Monitor Interrupt *\/$/;"	e	enum:IRQn
Deceleration	emwin/emWin_header/LISTWHEEL_Private.h	/^  unsigned         Deceleration;$/;"	m	struct:__anon352
DefaultAlign	emwin/emWin_header/LISTVIEW_Private.h	/^  int                          DefaultAlign;$/;"	m	struct:__anon331
Delay	emwin/emWin_header/GUI_Type.h	/^  int Delay;$/;"	m	struct:__anon249
DelayMs	radio/sx1276.c	84;"	d	file:
DestBytesPerPixel	emwin/emWin_header/GUI_JPEG_Private.h	/^  int DestBytesPerPixel;        \/\/ 4 (RGB) or 1 (Y)$/;"	m	struct:GUI_JPEG_DCONTEXT
DestBytesPerScanline	emwin/emWin_header/GUI_JPEG_Private.h	/^  int DestBytesPerScanline;     \/\/ Rounded up$/;"	m	struct:GUI_JPEG_DCONTEXT
Destination	emwin/emWin_header/LISTWHEEL_Private.h	/^  int                     Destination;      \/\/ Destination position in pixels$/;"	m	struct:__anon353
DeviceClassIndex	emwin/emWin_header/GUI.h	/^  int DeviceClassIndex;$/;"	m	struct:GUI_DEVICE_API
DirIndicatorColumn	emwin/emWin_header/HEADER_Private.h	/^  int                 DirIndicatorColumn;$/;"	m	struct:__anon276
DirIndicatorReverse	emwin/emWin_header/HEADER_Private.h	/^  int                 DirIndicatorReverse;$/;"	m	struct:__anon276
DirtyRect	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  GUI_RECT DirtyRect;$/;"	m	struct:DRIVER_CONTEXT
DisableDeepSleepIRQ	drivers/fsl_common.c	/^void DisableDeepSleepIRQ(IRQn_Type interrupt)$/;"	f
DisableGlobalIRQ	drivers/fsl_common.h	/^    static inline uint32_t DisableGlobalIRQ(void)$/;"	f
DisableIRQ	drivers/fsl_common.h	/^    static inline status_t DisableIRQ(IRQn_Type interrupt)$/;"	f
Disabled	emwin/emWin_header/LISTVIEW_Private.h	/^  char                         Disabled;$/;"	m	struct:__anon334
DispPosX	emwin/emWin_header/GUI.h	/^  I16P DispPosX, DispPosY;$/;"	m	struct:GUI_CONTEXT
DispPosY	emwin/emWin_header/GUI.h	/^  I16P DispPosX, DispPosY;$/;"	m	struct:GUI_CONTEXT
Done	emwin/emWin_header/WM.h	/^  int Done;$/;"	m	struct:__anon285
DragLimit	emwin/emWin_header/HEADER_Private.h	/^  U8                  DragLimit;$/;"	m	struct:__anon276
DrawFixed	emwin/emWin_header/GUI.h	/^  char DrawFixed;$/;"	m	struct:__anon394
DrawMode	emwin/emWin_header/GUI.h	/^  U8             DrawMode;$/;"	m	struct:GUI_CONTEXT
DrawPosX	emwin/emWin_header/GUI.h	/^  I16P DrawPosX, DrawPosY;$/;"	m	struct:GUI_CONTEXT
DrawPosY	emwin/emWin_header/GUI.h	/^  I16P DrawPosX, DrawPosY;$/;"	m	struct:GUI_CONTEXT
Driver_I2C0	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C0 = {I2Cx_GetVersion,$/;"	v
Driver_I2C1	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C1 = {I2Cx_GetVersion,$/;"	v
Driver_I2C2	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C2 = {I2Cx_GetVersion,$/;"	v
Driver_I2C3	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C3 = {I2Cx_GetVersion,$/;"	v
Driver_I2C4	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C4 = {I2Cx_GetVersion,$/;"	v
Driver_I2C5	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C5 = {I2Cx_GetVersion,$/;"	v
Driver_I2C6	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C6 = {I2Cx_GetVersion,$/;"	v
Driver_I2C7	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C7 = {I2Cx_GetVersion,$/;"	v
Driver_I2C8	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C8 = {I2Cx_GetVersion,$/;"	v
Driver_I2C9	drivers/fsl_i2c_cmsis.c	/^ARM_DRIVER_I2C Driver_I2C9 = {I2Cx_GetVersion,$/;"	v
Driver_SPI0	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI0 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI1	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI1 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI2	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI2 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI3	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI3 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI4	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI4 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI5	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI5 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI6	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI6 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI7	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI7 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI8	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI8 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Driver_SPI9	drivers/fsl_spi_cmsis.c	/^ARM_DRIVER_SPI Driver_SPI9 = {SPIx_GetVersion,    SPIx_GetCapabilities,$/;"	v
Dummy	emwin/emWin_header/GUIDRV_TemplateI.h	/^  int Dummy;$/;"	m	struct:__anon354
Dummy	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  int Dummy;$/;"	m	struct:__anon350
Dummy	emwin/emWin_header/GUI_Type.h	/^  U16 Dummy;$/;"	m	struct:__anon264
Dummy	emwin/emWin_header/GUI_Type.h	/^  U16 Dummy;$/;"	m	struct:__anon265
E2BIG	lwip/src/include/lwip/errno.h	54;"	d
EACCES	lwip/src/include/lwip/errno.h	60;"	d
EADDRINUSE	lwip/src/include/lwip/errno.h	147;"	d
EADDRNOTAVAIL	lwip/src/include/lwip/errno.h	148;"	d
EADV	lwip/src/include/lwip/errno.h	117;"	d
EAFNOSUPPORT	lwip/src/include/lwip/errno.h	146;"	d
EAGAIN	lwip/src/include/lwip/errno.h	58;"	d
EAI_FAIL	lwip/src/include/lwip/netdb.h	70;"	d
EAI_FAMILY	lwip/src/include/lwip/netdb.h	72;"	d
EAI_MEMORY	lwip/src/include/lwip/netdb.h	71;"	d
EAI_NONAME	lwip/src/include/lwip/netdb.h	68;"	d
EAI_SERVICE	lwip/src/include/lwip/netdb.h	69;"	d
EALREADY	lwip/src/include/lwip/errno.h	163;"	d
EAPSRP_ACK	lwip/src/include/netif/ppp/eap.h	74;"	d
EAPSRP_CHALLENGE	lwip/src/include/netif/ppp/eap.h	69;"	d
EAPSRP_CKEY	lwip/src/include/netif/ppp/eap.h	70;"	d
EAPSRP_CVALIDATOR	lwip/src/include/netif/ppp/eap.h	72;"	d
EAPSRP_LWRECHALLENGE	lwip/src/include/netif/ppp/eap.h	75;"	d
EAPSRP_SKEY	lwip/src/include/netif/ppp/eap.h	71;"	d
EAPSRP_SVALIDATOR	lwip/src/include/netif/ppp/eap.h	73;"	d
EAPT_ARCOT	lwip/src/include/netif/ppp/eap.h	62;"	d
EAPT_CISCOWIRELESS	lwip/src/include/netif/ppp/eap.h	63;"	d
EAPT_DEFENDER	lwip/src/include/netif/ppp/eap.h	60;"	d
EAPT_DSS	lwip/src/include/netif/ppp/eap.h	56;"	d
EAPT_IDENTITY	lwip/src/include/netif/ppp/eap.h	48;"	d
EAPT_KEA	lwip/src/include/netif/ppp/eap.h	57;"	d
EAPT_KEA_VALIDATE	lwip/src/include/netif/ppp/eap.h	58;"	d
EAPT_MD5CHAP	lwip/src/include/netif/ppp/eap.h	51;"	d
EAPT_NAK	lwip/src/include/netif/ppp/eap.h	50;"	d
EAPT_NOKIACARD	lwip/src/include/netif/ppp/eap.h	64;"	d
EAPT_NOTIFICATION	lwip/src/include/netif/ppp/eap.h	49;"	d
EAPT_OTP	lwip/src/include/netif/ppp/eap.h	52;"	d
EAPT_RSA	lwip/src/include/netif/ppp/eap.h	55;"	d
EAPT_SRP	lwip/src/include/netif/ppp/eap.h	65;"	d
EAPT_TLS	lwip/src/include/netif/ppp/eap.h	59;"	d
EAPT_TOKEN	lwip/src/include/netif/ppp/eap.h	53;"	d
EAPT_W2K	lwip/src/include/netif/ppp/eap.h	61;"	d
EAP_DEFALLOWREQ	lwip/src/include/netif/ppp/ppp_opts.h	450;"	d
EAP_DEFREQTIME	lwip/src/include/netif/ppp/ppp_opts.h	443;"	d
EAP_DEFTIMEOUT	lwip/src/include/netif/ppp/ppp_opts.h	458;"	d
EAP_DEFTRANSMITS	lwip/src/include/netif/ppp/ppp_opts.h	465;"	d
EAP_FAILURE	lwip/src/include/netif/ppp/eap.h	45;"	d
EAP_HEADERLEN	lwip/src/include/netif/ppp/eap.h	38;"	d
EAP_MAX_CHALLENGE_LENGTH	lwip/src/include/netif/ppp/eap.h	132;"	d
EAP_MAX_CHALLENGE_LENGTH	lwip/src/include/netif/ppp/eap.h	84;"	d
EAP_MIN_CHALLENGE_LENGTH	lwip/src/include/netif/ppp/eap.h	83;"	d
EAP_MIN_MAX_POWER_OF_TWO_CHALLENGE_LENGTH	lwip/src/include/netif/ppp/eap.h	85;"	d
EAP_PEER	lwip/src/include/netif/ppp/ppp_impl.h	339;"	d
EAP_REQUEST	lwip/src/include/netif/ppp/eap.h	42;"	d
EAP_RESPONSE	lwip/src/include/netif/ppp/eap.h	43;"	d
EAP_STATES	lwip/src/include/netif/ppp/eap.h	87;"	d
EAP_SUCCESS	lwip/src/include/netif/ppp/eap.h	44;"	d
EAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	231;"	d
EAP_WITHPEER	lwip/src/include/netif/ppp/ppp_impl.h	338;"	d
EBADE	lwip/src/include/lwip/errno.h	99;"	d
EBADF	lwip/src/include/lwip/errno.h	56;"	d
EBADFD	lwip/src/include/lwip/errno.h	126;"	d
EBADMSG	lwip/src/include/lwip/errno.h	123;"	d
EBADR	lwip/src/include/lwip/errno.h	100;"	d
EBADRQC	lwip/src/include/lwip/errno.h	103;"	d
EBADSLT	lwip/src/include/lwip/errno.h	104;"	d
EBFONT	lwip/src/include/lwip/errno.h	108;"	d
EBUSY	lwip/src/include/lwip/errno.h	63;"	d
ECHILD	lwip/src/include/lwip/errno.h	57;"	d
ECHOREP	lwip/src/include/netif/ppp/lcp.h	89;"	d
ECHOREQ	lwip/src/include/netif/ppp/lcp.h	88;"	d
ECHRNG	lwip/src/include/lwip/errno.h	91;"	d
ECOMM	lwip/src/include/lwip/errno.h	119;"	d
ECONNABORTED	lwip/src/include/lwip/errno.h	152;"	d
ECONNREFUSED	lwip/src/include/lwip/errno.h	160;"	d
ECONNRESET	lwip/src/include/lwip/errno.h	153;"	d
ECP_H	lwip/src/include/netif/ppp/ecp.h	38;"	d
ECP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	270;"	d
ECR	device/LPC54018.h	/^  __I  uint32_t ECR;                               \/**< Error Counter Register, offset: 0x40 *\/$/;"	m	struct:__anon142
ECRP	device/LPC54018.h	/^  __I  uint32_t ECRP;                              \/**< ECRP options., offset: 0x30 *\/$/;"	m	struct:__anon168
EDEADLK	lwip/src/include/lwip/errno.h	82;"	d
EDEADLOCK	lwip/src/include/lwip/errno.h	106;"	d
EDESTADDRREQ	lwip/src/include/lwip/errno.h	138;"	d
EDIT_CF_BOTTOM	emwin/emWin_header/EDIT.h	80;"	d
EDIT_CF_HCENTER	emwin/emWin_header/EDIT.h	77;"	d
EDIT_CF_LEFT	emwin/emWin_header/EDIT.h	75;"	d
EDIT_CF_RIGHT	emwin/emWin_header/EDIT.h	76;"	d
EDIT_CF_TOP	emwin/emWin_header/EDIT.h	79;"	d
EDIT_CF_VCENTER	emwin/emWin_header/EDIT.h	78;"	d
EDIT_CI_CURSOR	emwin/emWin_header/EDIT.h	87;"	d
EDIT_CI_DISABELD	emwin/emWin_header/EDIT.h	112;"	d
EDIT_CI_DISABLED	emwin/emWin_header/EDIT.h	85;"	d
EDIT_CI_ENABELD	emwin/emWin_header/EDIT.h	113;"	d
EDIT_CI_ENABLED	emwin/emWin_header/EDIT.h	86;"	d
EDIT_H	emwin/emWin_header/EDIT.h	46;"	d
EDIT_Handle	emwin/emWin_header/EDIT.h	/^typedef WM_HMEM EDIT_Handle;$/;"	t
EDIT_ID	emwin/emWin_header/WIDGET.h	103;"	d
EDIT_INIT_ID	emwin/emWin_header/EDIT_Private.h	110;"	d
EDIT_INIT_ID	emwin/emWin_header/EDIT_Private.h	112;"	d
EDIT_LOCK_H	emwin/emWin_header/EDIT_Private.h	117;"	d
EDIT_LOCK_H	emwin/emWin_header/EDIT_Private.h	119;"	d
EDIT_Obj	emwin/emWin_header/EDIT_Private.h	/^typedef struct EDIT_Obj_struct EDIT_Obj;$/;"	t	typeref:struct:EDIT_Obj_struct
EDIT_Obj_struct	emwin/emWin_header/EDIT_Private.h	/^struct EDIT_Obj_struct {$/;"	s
EDIT_PRIVATE_H	emwin/emWin_header/EDIT_Private.h	46;"	d
EDIT_PROPS	emwin/emWin_header/EDIT_Private.h	/^} EDIT_PROPS;$/;"	t	typeref:struct:__anon217
EDIT_REALLOC_SIZE	emwin/emWin_header/EDIT_Private.h	60;"	d
EDIT_SetFocusable	emwin/emWin_header/EDIT.h	203;"	d
EDIT_SetFocussable	emwin/emWin_header/EDIT.h	202;"	d
EDIT_XOFF	emwin/emWin_header/EDIT_Private.h	63;"	d
EDOM	lwip/src/include/lwip/errno.h	80;"	d
EDOTDOT	lwip/src/include/lwip/errno.h	122;"	d
EDQUOT	lwip/src/include/lwip/errno.h	171;"	d
EEPROM_CLOCKS	drivers/fsl_clock.h	86;"	d
EEXIST	lwip/src/include/lwip/errno.h	64;"	d
EFAULT	lwip/src/include/lwip/errno.h	61;"	d
EFBIG	lwip/src/include/lwip/errno.h	74;"	d
EFFECT_CONTEXT	emwin/emWin_header/WM_Intern.h	/^  } EFFECT_CONTEXT;$/;"	t	typeref:struct:__anon367
EHOSTDOWN	lwip/src/include/lwip/errno.h	161;"	d
EHOSTUNREACH	lwip/src/include/lwip/errno.h	162;"	d
EIDRM	lwip/src/include/lwip/errno.h	90;"	d
EILSEQ	lwip/src/include/lwip/errno.h	133;"	d
EINPROGRESS	lwip/src/include/lwip/errno.h	164;"	d
EINTR	lwip/src/include/lwip/errno.h	51;"	d
EINVAL	lwip/src/include/lwip/errno.h	69;"	d
EIO	lwip/src/include/lwip/errno.h	52;"	d
EISCONN	lwip/src/include/lwip/errno.h	155;"	d
EISDIR	lwip/src/include/lwip/errno.h	68;"	d
EISNAM	lwip/src/include/lwip/errno.h	169;"	d
EL2HLT	lwip/src/include/lwip/errno.h	98;"	d
EL2NSYNC	lwip/src/include/lwip/errno.h	92;"	d
EL3HLT	lwip/src/include/lwip/errno.h	93;"	d
EL3RST	lwip/src/include/lwip/errno.h	94;"	d
ELIBACC	lwip/src/include/lwip/errno.h	128;"	d
ELIBBAD	lwip/src/include/lwip/errno.h	129;"	d
ELIBEXEC	lwip/src/include/lwip/errno.h	132;"	d
ELIBMAX	lwip/src/include/lwip/errno.h	131;"	d
ELIBSCN	lwip/src/include/lwip/errno.h	130;"	d
ELNRNG	lwip/src/include/lwip/errno.h	95;"	d
ELOOP	lwip/src/include/lwip/errno.h	87;"	d
EMC	device/LPC54018.h	3419;"	d
EMCCAL	device/LPC54018.h	/^  __IO uint32_t EMCCAL;                            \/**< EMC delay chain calibration control, offset: 0x44C *\/$/;"	m	struct:__anon185
EMCCLKDIV	device/LPC54018.h	/^  __IO uint32_t EMCCLKDIV;                         \/**< EMC clock divider, offset: 0x3B8 *\/$/;"	m	struct:__anon185
EMCDYCTRL	device/LPC54018.h	/^  __IO uint32_t EMCDYCTRL;                         \/**< EMC clock delay control, offset: 0x448 *\/$/;"	m	struct:__anon185
EMCSYSCTRL	device/LPC54018.h	/^  __IO uint32_t EMCSYSCTRL;                        \/**< EMC system control, offset: 0x444 *\/$/;"	m	struct:__anon185
EMC_ADDRMAP	drivers/fsl_emc.h	33;"	d
EMC_ADDRMAP_MASK	drivers/fsl_emc.h	32;"	d
EMC_ADDRMAP_SHIFT	drivers/fsl_emc.h	31;"	d
EMC_BASE	device/LPC54018.h	3417;"	d
EMC_BASE_ADDRS	device/LPC54018.h	3421;"	d
EMC_BASE_PTRS	device/LPC54018.h	3423;"	d
EMC_CLOCKS	drivers/fsl_clock.h	227;"	d
EMC_CONFIG_CLKR	device/LPC54018.h	3166;"	d
EMC_CONFIG_CLKR_MASK	device/LPC54018.h	3164;"	d
EMC_CONFIG_CLKR_SHIFT	device/LPC54018.h	3165;"	d
EMC_CONFIG_EM	device/LPC54018.h	3163;"	d
EMC_CONFIG_EM_MASK	device/LPC54018.h	3161;"	d
EMC_CONFIG_EM_SHIFT	device/LPC54018.h	3162;"	d
EMC_CONTROL_E	device/LPC54018.h	3137;"	d
EMC_CONTROL_E_MASK	device/LPC54018.h	3135;"	d
EMC_CONTROL_E_SHIFT	device/LPC54018.h	3136;"	d
EMC_CONTROL_L	device/LPC54018.h	3143;"	d
EMC_CONTROL_L_MASK	device/LPC54018.h	3141;"	d
EMC_CONTROL_L_SHIFT	device/LPC54018.h	3142;"	d
EMC_CONTROL_M	device/LPC54018.h	3140;"	d
EMC_CONTROL_M_MASK	device/LPC54018.h	3138;"	d
EMC_CONTROL_M_SHIFT	device/LPC54018.h	3139;"	d
EMC_CS0_BASE	device/LPC54018.h	15686;"	d
EMC_CS1_BASE	device/LPC54018.h	15687;"	d
EMC_CS2_BASE	device/LPC54018.h	15688;"	d
EMC_CS3_BASE	device/LPC54018.h	15689;"	d
EMC_CS_ADDRESS	device/LPC54018.h	15694;"	d
EMC_CalculateTimerCycles	drivers/fsl_emc.c	/^static uint32_t EMC_CalculateTimerCycles(EMC_Type *base, uint32_t timer_Ns, uint32_t plus)$/;"	f	file:
EMC_DIV_ROUND_UP	drivers/fsl_emc.c	33;"	d	file:
EMC_DYCS0_BASE	device/LPC54018.h	15690;"	d
EMC_DYCS1_BASE	device/LPC54018.h	15691;"	d
EMC_DYCS2_BASE	device/LPC54018.h	15692;"	d
EMC_DYCS3_BASE	device/LPC54018.h	15693;"	d
EMC_DYCS_ADDRESS	device/LPC54018.h	15695;"	d
EMC_DYNAMICAPR_TAPR	device/LPC54018.h	3227;"	d
EMC_DYNAMICAPR_TAPR_MASK	device/LPC54018.h	3225;"	d
EMC_DYNAMICAPR_TAPR_SHIFT	device/LPC54018.h	3226;"	d
EMC_DYNAMICCONTROL_CE	device/LPC54018.h	3173;"	d
EMC_DYNAMICCONTROL_CE_MASK	device/LPC54018.h	3171;"	d
EMC_DYNAMICCONTROL_CE_SHIFT	device/LPC54018.h	3172;"	d
EMC_DYNAMICCONTROL_CS	device/LPC54018.h	3176;"	d
EMC_DYNAMICCONTROL_CS_MASK	device/LPC54018.h	3174;"	d
EMC_DYNAMICCONTROL_CS_SHIFT	device/LPC54018.h	3175;"	d
EMC_DYNAMICCONTROL_I	device/LPC54018.h	3185;"	d
EMC_DYNAMICCONTROL_I_MASK	device/LPC54018.h	3183;"	d
EMC_DYNAMICCONTROL_I_SHIFT	device/LPC54018.h	3184;"	d
EMC_DYNAMICCONTROL_MMC	device/LPC54018.h	3182;"	d
EMC_DYNAMICCONTROL_MMC_MASK	device/LPC54018.h	3180;"	d
EMC_DYNAMICCONTROL_MMC_SHIFT	device/LPC54018.h	3181;"	d
EMC_DYNAMICCONTROL_SR	device/LPC54018.h	3179;"	d
EMC_DYNAMICCONTROL_SR_MASK	device/LPC54018.h	3177;"	d
EMC_DYNAMICCONTROL_SR_SHIFT	device/LPC54018.h	3178;"	d
EMC_DYNAMICDAL_TDAL	device/LPC54018.h	3234;"	d
EMC_DYNAMICDAL_TDAL_MASK	device/LPC54018.h	3232;"	d
EMC_DYNAMICDAL_TDAL_SHIFT	device/LPC54018.h	3233;"	d
EMC_DYNAMICMRD_TMRD	device/LPC54018.h	3276;"	d
EMC_DYNAMICMRD_TMRD_MASK	device/LPC54018.h	3274;"	d
EMC_DYNAMICMRD_TMRD_SHIFT	device/LPC54018.h	3275;"	d
EMC_DYNAMICRAS_TRAS	device/LPC54018.h	3213;"	d
EMC_DYNAMICRAS_TRAS_MASK	device/LPC54018.h	3211;"	d
EMC_DYNAMICRAS_TRAS_SHIFT	device/LPC54018.h	3212;"	d
EMC_DYNAMICRC_TRC	device/LPC54018.h	3248;"	d
EMC_DYNAMICRC_TRC_MASK	device/LPC54018.h	3246;"	d
EMC_DYNAMICRC_TRC_SHIFT	device/LPC54018.h	3247;"	d
EMC_DYNAMICREADCONFIG_RD	device/LPC54018.h	3199;"	d
EMC_DYNAMICREADCONFIG_RD_MASK	device/LPC54018.h	3197;"	d
EMC_DYNAMICREADCONFIG_RD_SHIFT	device/LPC54018.h	3198;"	d
EMC_DYNAMICREFRESH_REFRESH	device/LPC54018.h	3192;"	d
EMC_DYNAMICREFRESH_REFRESH_MASK	device/LPC54018.h	3190;"	d
EMC_DYNAMICREFRESH_REFRESH_SHIFT	device/LPC54018.h	3191;"	d
EMC_DYNAMICRFC_TRFC	device/LPC54018.h	3255;"	d
EMC_DYNAMICRFC_TRFC_MASK	device/LPC54018.h	3253;"	d
EMC_DYNAMICRFC_TRFC_SHIFT	device/LPC54018.h	3254;"	d
EMC_DYNAMICRP_TRP	device/LPC54018.h	3206;"	d
EMC_DYNAMICRP_TRP_MASK	device/LPC54018.h	3204;"	d
EMC_DYNAMICRP_TRP_SHIFT	device/LPC54018.h	3205;"	d
EMC_DYNAMICRRD_TRRD	device/LPC54018.h	3269;"	d
EMC_DYNAMICRRD_TRRD_MASK	device/LPC54018.h	3267;"	d
EMC_DYNAMICRRD_TRRD_SHIFT	device/LPC54018.h	3268;"	d
EMC_DYNAMICSREX_TSREX	device/LPC54018.h	3220;"	d
EMC_DYNAMICSREX_TSREX_MASK	device/LPC54018.h	3218;"	d
EMC_DYNAMICSREX_TSREX_SHIFT	device/LPC54018.h	3219;"	d
EMC_DYNAMICWR_TWR	device/LPC54018.h	3241;"	d
EMC_DYNAMICWR_TWR_MASK	device/LPC54018.h	3239;"	d
EMC_DYNAMICWR_TWR_SHIFT	device/LPC54018.h	3240;"	d
EMC_DYNAMICXSR_TXSR	device/LPC54018.h	3262;"	d
EMC_DYNAMICXSR_TXSR_MASK	device/LPC54018.h	3260;"	d
EMC_DYNAMICXSR_TXSR_SHIFT	device/LPC54018.h	3261;"	d
EMC_DYNAMIC_DYNAMICCONFIG_AM0	device/LPC54018.h	3293;"	d
EMC_DYNAMIC_DYNAMICCONFIG_AM0_MASK	device/LPC54018.h	3291;"	d
EMC_DYNAMIC_DYNAMICCONFIG_AM0_SHIFT	device/LPC54018.h	3292;"	d
EMC_DYNAMIC_DYNAMICCONFIG_AM1	device/LPC54018.h	3296;"	d
EMC_DYNAMIC_DYNAMICCONFIG_AM1_MASK	device/LPC54018.h	3294;"	d
EMC_DYNAMIC_DYNAMICCONFIG_AM1_SHIFT	device/LPC54018.h	3295;"	d
EMC_DYNAMIC_DYNAMICCONFIG_B	device/LPC54018.h	3299;"	d
EMC_DYNAMIC_DYNAMICCONFIG_B_MASK	device/LPC54018.h	3297;"	d
EMC_DYNAMIC_DYNAMICCONFIG_B_SHIFT	device/LPC54018.h	3298;"	d
EMC_DYNAMIC_DYNAMICCONFIG_COUNT	device/LPC54018.h	3306;"	d
EMC_DYNAMIC_DYNAMICCONFIG_MD	device/LPC54018.h	3290;"	d
EMC_DYNAMIC_DYNAMICCONFIG_MD_MASK	device/LPC54018.h	3288;"	d
EMC_DYNAMIC_DYNAMICCONFIG_MD_SHIFT	device/LPC54018.h	3289;"	d
EMC_DYNAMIC_DYNAMICCONFIG_P	device/LPC54018.h	3302;"	d
EMC_DYNAMIC_DYNAMICCONFIG_P_MASK	device/LPC54018.h	3300;"	d
EMC_DYNAMIC_DYNAMICCONFIG_P_SHIFT	device/LPC54018.h	3301;"	d
EMC_DYNAMIC_DYNAMICRASCAS_CAS	device/LPC54018.h	3315;"	d
EMC_DYNAMIC_DYNAMICRASCAS_CAS_MASK	device/LPC54018.h	3313;"	d
EMC_DYNAMIC_DYNAMICRASCAS_CAS_SHIFT	device/LPC54018.h	3314;"	d
EMC_DYNAMIC_DYNAMICRASCAS_COUNT	device/LPC54018.h	3319;"	d
EMC_DYNAMIC_DYNAMICRASCAS_RAS	device/LPC54018.h	3312;"	d
EMC_DYNAMIC_DYNAMICRASCAS_RAS_MASK	device/LPC54018.h	3310;"	d
EMC_DYNAMIC_DYNAMICRASCAS_RAS_SHIFT	device/LPC54018.h	3311;"	d
EMC_DYNAMIC_MEMDEV_NUM	drivers/fsl_emc.h	30;"	d
EMC_DYNCTL_BUSADDRMAP_MASK	drivers/fsl_emc.c	28;"	d	file:
EMC_DYNCTL_BUSWIDTH_MASK	drivers/fsl_emc.c	27;"	d	file:
EMC_DYNCTL_COLUMNBASE_MASK	drivers/fsl_emc.c	24;"	d	file:
EMC_DYNCTL_COLUMNBASE_OFFSET	drivers/fsl_emc.c	23;"	d	file:
EMC_DYNCTL_COLUMNPLUS_MASK	drivers/fsl_emc.c	26;"	d	file:
EMC_DYNCTL_COLUMNPLUS_OFFSET	drivers/fsl_emc.c	25;"	d	file:
EMC_DYNCTL_DEVBANKS_BITS_MASK	drivers/fsl_emc.c	29;"	d	file:
EMC_Deinit	drivers/fsl_emc.c	/^void EMC_Deinit(EMC_Type *base)$/;"	f
EMC_DynamicMemInit	drivers/fsl_emc.c	/^void EMC_DynamicMemInit(EMC_Type *base,$/;"	f
EMC_Enable	drivers/fsl_emc.h	/^static inline void EMC_Enable(EMC_Type *base, bool enable)$/;"	f
EMC_EnableDynamicMemControl	drivers/fsl_emc.h	/^static inline void EMC_EnableDynamicMemControl(EMC_Type *base, bool enable)$/;"	f
EMC_EnterLowPowerMode	drivers/fsl_emc.h	/^static inline void EMC_EnterLowPowerMode(EMC_Type *base, bool enable)$/;"	f
EMC_EnterSelfRefreshCommand	drivers/fsl_emc.h	/^static inline void EMC_EnterSelfRefreshCommand(EMC_Type *base, bool enable)$/;"	f
EMC_GetInstance	drivers/fsl_emc.c	/^static uint32_t EMC_GetInstance(EMC_Type *base)$/;"	f	file:
EMC_HZ_ONEMHZ	drivers/fsl_emc.h	34;"	d
EMC_Init	drivers/fsl_emc.c	/^void EMC_Init(EMC_Type *base, emc_basic_config_t *config)$/;"	f
EMC_IsInSelfrefreshMode	drivers/fsl_emc.h	/^static inline bool EMC_IsInSelfrefreshMode(EMC_Type *base)$/;"	f
EMC_MILLISECS_ONESEC	drivers/fsl_emc.h	35;"	d
EMC_MirrorChipAddr	drivers/fsl_emc.h	/^static inline void EMC_MirrorChipAddr(EMC_Type *base, bool enable)$/;"	f
EMC_ModeOffset	drivers/fsl_emc.c	/^static uint32_t EMC_ModeOffset(uint32_t addrMap)$/;"	f	file:
EMC_REFRESH_CLOCK_PARAM	drivers/fsl_emc.c	21;"	d	file:
EMC_RSTS	drivers/fsl_reset.h	125;"	d
EMC_SDRAM_AUTO_REFRESH_DELAY_US	drivers/fsl_emc.h	48;"	d
EMC_SDRAM_BANKCS_BA0_MASK	drivers/fsl_emc.c	30;"	d	file:
EMC_SDRAM_BANKCS_BA1_MASK	drivers/fsl_emc.c	31;"	d	file:
EMC_SDRAM_BANKCS_BA_MASK	drivers/fsl_emc.c	32;"	d	file:
EMC_SDRAM_MODE_CL_MASK	drivers/fsl_emc.h	37;"	d
EMC_SDRAM_MODE_CL_SHIFT	drivers/fsl_emc.h	36;"	d
EMC_SDRAM_NOP_DELAY_US	drivers/fsl_emc.h	40;"	d
EMC_SDRAM_PRECHARGE_DELAY_US	drivers/fsl_emc.h	44;"	d
EMC_SDRAM_WAIT_CYCLES	drivers/fsl_emc.c	22;"	d	file:
EMC_STATICEXTENDEDWAIT_EXTENDEDWAIT	device/LPC54018.h	3283;"	d
EMC_STATICEXTENDEDWAIT_EXTENDEDWAIT_MASK	device/LPC54018.h	3281;"	d
EMC_STATICEXTENDEDWAIT_EXTENDEDWAIT_SHIFT	device/LPC54018.h	3282;"	d
EMC_STATIC_MEMDEV_NUM	drivers/fsl_emc.h	29;"	d
EMC_STATIC_STATICCONFIG_B	device/LPC54018.h	3340;"	d
EMC_STATIC_STATICCONFIG_B_MASK	device/LPC54018.h	3338;"	d
EMC_STATIC_STATICCONFIG_B_SHIFT	device/LPC54018.h	3339;"	d
EMC_STATIC_STATICCONFIG_COUNT	device/LPC54018.h	3347;"	d
EMC_STATIC_STATICCONFIG_EW	device/LPC54018.h	3337;"	d
EMC_STATIC_STATICCONFIG_EW_MASK	device/LPC54018.h	3335;"	d
EMC_STATIC_STATICCONFIG_EW_SHIFT	device/LPC54018.h	3336;"	d
EMC_STATIC_STATICCONFIG_MW	device/LPC54018.h	3325;"	d
EMC_STATIC_STATICCONFIG_MW_MASK	device/LPC54018.h	3323;"	d
EMC_STATIC_STATICCONFIG_MW_SHIFT	device/LPC54018.h	3324;"	d
EMC_STATIC_STATICCONFIG_P	device/LPC54018.h	3343;"	d
EMC_STATIC_STATICCONFIG_PB	device/LPC54018.h	3334;"	d
EMC_STATIC_STATICCONFIG_PB_MASK	device/LPC54018.h	3332;"	d
EMC_STATIC_STATICCONFIG_PB_SHIFT	device/LPC54018.h	3333;"	d
EMC_STATIC_STATICCONFIG_PC	device/LPC54018.h	3331;"	d
EMC_STATIC_STATICCONFIG_PC_MASK	device/LPC54018.h	3329;"	d
EMC_STATIC_STATICCONFIG_PC_SHIFT	device/LPC54018.h	3330;"	d
EMC_STATIC_STATICCONFIG_PM	device/LPC54018.h	3328;"	d
EMC_STATIC_STATICCONFIG_PM_MASK	device/LPC54018.h	3326;"	d
EMC_STATIC_STATICCONFIG_PM_SHIFT	device/LPC54018.h	3327;"	d
EMC_STATIC_STATICCONFIG_P_MASK	device/LPC54018.h	3341;"	d
EMC_STATIC_STATICCONFIG_P_SHIFT	device/LPC54018.h	3342;"	d
EMC_STATIC_STATICWAITOEN_COUNT	device/LPC54018.h	3367;"	d
EMC_STATIC_STATICWAITOEN_WAITOEN	device/LPC54018.h	3363;"	d
EMC_STATIC_STATICWAITOEN_WAITOEN_MASK	device/LPC54018.h	3361;"	d
EMC_STATIC_STATICWAITOEN_WAITOEN_SHIFT	device/LPC54018.h	3362;"	d
EMC_STATIC_STATICWAITPAGE_COUNT	device/LPC54018.h	3387;"	d
EMC_STATIC_STATICWAITPAGE_WAITPAGE	device/LPC54018.h	3383;"	d
EMC_STATIC_STATICWAITPAGE_WAITPAGE_MASK	device/LPC54018.h	3381;"	d
EMC_STATIC_STATICWAITPAGE_WAITPAGE_SHIFT	device/LPC54018.h	3382;"	d
EMC_STATIC_STATICWAITRD_COUNT	device/LPC54018.h	3377;"	d
EMC_STATIC_STATICWAITRD_WAITRD	device/LPC54018.h	3373;"	d
EMC_STATIC_STATICWAITRD_WAITRD_MASK	device/LPC54018.h	3371;"	d
EMC_STATIC_STATICWAITRD_WAITRD_SHIFT	device/LPC54018.h	3372;"	d
EMC_STATIC_STATICWAITTURN_COUNT	device/LPC54018.h	3407;"	d
EMC_STATIC_STATICWAITTURN_WAITTURN	device/LPC54018.h	3403;"	d
EMC_STATIC_STATICWAITTURN_WAITTURN_MASK	device/LPC54018.h	3401;"	d
EMC_STATIC_STATICWAITTURN_WAITTURN_SHIFT	device/LPC54018.h	3402;"	d
EMC_STATIC_STATICWAITWEN_COUNT	device/LPC54018.h	3357;"	d
EMC_STATIC_STATICWAITWEN_WAITWEN	device/LPC54018.h	3353;"	d
EMC_STATIC_STATICWAITWEN_WAITWEN_MASK	device/LPC54018.h	3351;"	d
EMC_STATIC_STATICWAITWEN_WAITWEN_SHIFT	device/LPC54018.h	3352;"	d
EMC_STATIC_STATICWAITWR_COUNT	device/LPC54018.h	3397;"	d
EMC_STATIC_STATICWAITWR_WAITWR	device/LPC54018.h	3393;"	d
EMC_STATIC_STATICWAITWR_WAITWR_MASK	device/LPC54018.h	3391;"	d
EMC_STATIC_STATICWAITWR_WAITWR_SHIFT	device/LPC54018.h	3392;"	d
EMC_STATUS_B	device/LPC54018.h	3150;"	d
EMC_STATUS_B_MASK	device/LPC54018.h	3148;"	d
EMC_STATUS_B_SHIFT	device/LPC54018.h	3149;"	d
EMC_STATUS_S	device/LPC54018.h	3153;"	d
EMC_STATUS_SA	device/LPC54018.h	3156;"	d
EMC_STATUS_SA_MASK	device/LPC54018.h	3154;"	d
EMC_STATUS_SA_SHIFT	device/LPC54018.h	3155;"	d
EMC_STATUS_S_MASK	device/LPC54018.h	3151;"	d
EMC_STATUS_S_SHIFT	device/LPC54018.h	3152;"	d
EMC_StaticMemInit	drivers/fsl_emc.c	/^void EMC_StaticMemInit(EMC_Type *base, uint32_t *extWait_Ns, emc_static_chip_config_t *config, uint32_t totalChips)$/;"	f
EMC_Type	device/LPC54018.h	/^} EMC_Type;$/;"	t	typeref:struct:__anon151
EMEDIUMTYPE	lwip/src/include/lwip/errno.h	174;"	d
EMFILE	lwip/src/include/lwip/errno.h	71;"	d
EMLINK	lwip/src/include/lwip/errno.h	78;"	d
EMR	device/LPC54018.h	/^  __IO uint32_t EMR;                               \/**< External Match Register. The EMR controls the match function and the external match pins., offset: 0x3C *\/$/;"	m	struct:__anon145
EMSGSIZE	lwip/src/include/lwip/errno.h	139;"	d
EMULTIHOP	lwip/src/include/lwip/errno.h	121;"	d
ENABLECLR	device/LPC54018.h	/^    __O  uint32_t ENABLECLR;                         \/**< Channel Enable Clear for all DMA channels., array offset: 0x28, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
ENABLESET	device/LPC54018.h	/^    __IO uint32_t ENABLESET;                         \/**< Channel Enable read and Set for all DMA channels., array offset: 0x20, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
ENABLE_LOOPBACK	lwip/src/include/lwip/netif.h	42;"	d
ENAMETOOLONG	lwip/src/include/lwip/errno.h	83;"	d
ENAVAIL	lwip/src/include/lwip/errno.h	168;"	d
ENCODE	lwip/src/netif/ppp/vj.c	75;"	d	file:
ENCODEZ	lwip/src/netif/ppp/vj.c	85;"	d	file:
ENDIANNESS	osa/usb_osa.h	27;"	d
ENET	device/LPC54018.h	4951;"	d
ENETDOWN	lwip/src/include/lwip/errno.h	149;"	d
ENETRESET	lwip/src/include/lwip/errno.h	151;"	d
ENETUNREACH	lwip/src/include/lwip/errno.h	150;"	d
ENET_8021QVLAN	drivers/fsl_enet.c	66;"	d	file:
ENET_ABNORM_INT_MASK	drivers/fsl_enet.h	87;"	d
ENET_ADDR_ALIGNMENT	drivers/fsl_enet.h	100;"	d
ENET_AVBTYPE	drivers/fsl_enet.c	95;"	d	file:
ENET_AcceptAllMulticast	drivers/fsl_enet.h	/^static inline void ENET_AcceptAllMulticast(ENET_Type *base)$/;"	f
ENET_BASE	device/LPC54018.h	4949;"	d
ENET_BASE_ADDRS	device/LPC54018.h	4953;"	d
ENET_BASE_PTRS	device/LPC54018.h	4955;"	d
ENET_BUFF_ALIGNMENT	drivers/fsl_enet.h	101;"	d
ENET_ClearDmaInterruptStatus	drivers/fsl_enet.h	/^static inline void ENET_ClearDmaInterruptStatus(ENET_Type *base, uint8_t channel, uint32_t mask)$/;"	f
ENET_ClearMacInterruptStatus	drivers/fsl_enet.c	/^void ENET_ClearMacInterruptStatus(ENET_Type *base, uint32_t mask)$/;"	f
ENET_CreateHandler	drivers/fsl_enet.c	/^void ENET_CreateHandler(ENET_Type *base,$/;"	f
ENET_DMA_CH_DMA_CHX_CTRL_COUNT	device/LPC54018.h	4673;"	d
ENET_DMA_CH_DMA_CHX_CTRL_DSL	device/LPC54018.h	4669;"	d
ENET_DMA_CH_DMA_CHX_CTRL_DSL_MASK	device/LPC54018.h	4667;"	d
ENET_DMA_CH_DMA_CHX_CTRL_DSL_SHIFT	device/LPC54018.h	4668;"	d
ENET_DMA_CH_DMA_CHX_CTRL_PBLx8	device/LPC54018.h	4666;"	d
ENET_DMA_CH_DMA_CHX_CTRL_PBLx8_MASK	device/LPC54018.h	4664;"	d
ENET_DMA_CH_DMA_CHX_CTRL_PBLx8_SHIFT	device/LPC54018.h	4665;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_RXBUF_COUNT	device/LPC54018.h	4880;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_RXBUF_HRB	device/LPC54018.h	4876;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_RXBUF_HRB_MASK	device/LPC54018.h	4874;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_RXBUF_HRB_SHIFT	device/LPC54018.h	4875;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_RXDESC_COUNT	device/LPC54018.h	4860;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_RXDESC_HRD	device/LPC54018.h	4856;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_RXDESC_HRD_MASK	device/LPC54018.h	4854;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_RXDESC_HRD_SHIFT	device/LPC54018.h	4855;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_TXBUF_COUNT	device/LPC54018.h	4870;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_TXBUF_HTB	device/LPC54018.h	4866;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_TXBUF_HTB_MASK	device/LPC54018.h	4864;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_TXBUF_HTB_SHIFT	device/LPC54018.h	4865;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_TXDESC_COUNT	device/LPC54018.h	4850;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_TXDESC_HTD	device/LPC54018.h	4846;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_TXDESC_HTD_MASK	device/LPC54018.h	4844;"	d
ENET_DMA_CH_DMA_CHX_CUR_HST_TXDESC_HTD_SHIFT	device/LPC54018.h	4845;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_AIE	device/LPC54018.h	4807;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_AIE_MASK	device/LPC54018.h	4805;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_AIE_SHIFT	device/LPC54018.h	4806;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_COUNT	device/LPC54018.h	4814;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_ERIE	device/LPC54018.h	4801;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_ERIE_MASK	device/LPC54018.h	4799;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_ERIE_SHIFT	device/LPC54018.h	4800;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_ETIE	device/LPC54018.h	4798;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_ETIE_MASK	device/LPC54018.h	4796;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_ETIE_SHIFT	device/LPC54018.h	4797;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_FBEE	device/LPC54018.h	4804;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_FBEE_MASK	device/LPC54018.h	4802;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_FBEE_SHIFT	device/LPC54018.h	4803;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_NIE	device/LPC54018.h	4810;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_NIE_MASK	device/LPC54018.h	4808;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_NIE_SHIFT	device/LPC54018.h	4809;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RBUE	device/LPC54018.h	4789;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RBUE_MASK	device/LPC54018.h	4787;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RBUE_SHIFT	device/LPC54018.h	4788;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RIE	device/LPC54018.h	4786;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RIE_MASK	device/LPC54018.h	4784;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RIE_SHIFT	device/LPC54018.h	4785;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RSE	device/LPC54018.h	4792;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RSE_MASK	device/LPC54018.h	4790;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RSE_SHIFT	device/LPC54018.h	4791;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RWTE	device/LPC54018.h	4795;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RWTE_MASK	device/LPC54018.h	4793;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_RWTE_SHIFT	device/LPC54018.h	4794;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TBUE	device/LPC54018.h	4783;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TBUE_MASK	device/LPC54018.h	4781;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TBUE_SHIFT	device/LPC54018.h	4782;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TIE	device/LPC54018.h	4777;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TIE_MASK	device/LPC54018.h	4775;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TIE_SHIFT	device/LPC54018.h	4776;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TSE	device/LPC54018.h	4780;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TSE_MASK	device/LPC54018.h	4778;"	d
ENET_DMA_CH_DMA_CHX_INT_EN_TSE_SHIFT	device/LPC54018.h	4779;"	d
ENET_DMA_CH_DMA_CHX_MISS_FRAME_CNT_COUNT	device/LPC54018.h	4939;"	d
ENET_DMA_CH_DMA_CHX_MISS_FRAME_CNT_MFC	device/LPC54018.h	4932;"	d
ENET_DMA_CH_DMA_CHX_MISS_FRAME_CNT_MFCO	device/LPC54018.h	4935;"	d
ENET_DMA_CH_DMA_CHX_MISS_FRAME_CNT_MFCO_MASK	device/LPC54018.h	4933;"	d
ENET_DMA_CH_DMA_CHX_MISS_FRAME_CNT_MFCO_SHIFT	device/LPC54018.h	4934;"	d
ENET_DMA_CH_DMA_CHX_MISS_FRAME_CNT_MFC_MASK	device/LPC54018.h	4930;"	d
ENET_DMA_CH_DMA_CHX_MISS_FRAME_CNT_MFC_SHIFT	device/LPC54018.h	4931;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_LIST_ADDR_COUNT	device/LPC54018.h	4731;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_LIST_ADDR_SRL	device/LPC54018.h	4727;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_LIST_ADDR_SRL_MASK	device/LPC54018.h	4725;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_LIST_ADDR_SRL_SHIFT	device/LPC54018.h	4726;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_RING_LENGTH_COUNT	device/LPC54018.h	4771;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_RING_LENGTH_RDRL	device/LPC54018.h	4767;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_RING_LENGTH_RDRL_MASK	device/LPC54018.h	4765;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_RING_LENGTH_RDRL_SHIFT	device/LPC54018.h	4766;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_TAIL_PTR_COUNT	device/LPC54018.h	4751;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_TAIL_PTR_RDTP	device/LPC54018.h	4747;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_TAIL_PTR_RDTP_MASK	device/LPC54018.h	4745;"	d
ENET_DMA_CH_DMA_CHX_RXDESC_TAIL_PTR_RDTP_SHIFT	device/LPC54018.h	4746;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_COUNT	device/LPC54018.h	4711;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RBSZ	device/LPC54018.h	4701;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RBSZ_MASK	device/LPC54018.h	4699;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RBSZ_SHIFT	device/LPC54018.h	4700;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RPF	device/LPC54018.h	4707;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RPF_MASK	device/LPC54018.h	4705;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RPF_SHIFT	device/LPC54018.h	4706;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RxPBL	device/LPC54018.h	4704;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RxPBL_MASK	device/LPC54018.h	4702;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_RxPBL_SHIFT	device/LPC54018.h	4703;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_SR	device/LPC54018.h	4698;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_SR_MASK	device/LPC54018.h	4696;"	d
ENET_DMA_CH_DMA_CHX_RX_CTRL_SR_SHIFT	device/LPC54018.h	4697;"	d
ENET_DMA_CH_DMA_CHX_RX_INT_WDTIMER_COUNT	device/LPC54018.h	4824;"	d
ENET_DMA_CH_DMA_CHX_RX_INT_WDTIMER_RIWT	device/LPC54018.h	4820;"	d
ENET_DMA_CH_DMA_CHX_RX_INT_WDTIMER_RIWT_MASK	device/LPC54018.h	4818;"	d
ENET_DMA_CH_DMA_CHX_RX_INT_WDTIMER_RIWT_SHIFT	device/LPC54018.h	4819;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_ASC	device/LPC54018.h	4833;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_ASC_MASK	device/LPC54018.h	4831;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_ASC_SHIFT	device/LPC54018.h	4832;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_COUNT	device/LPC54018.h	4840;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_ESC	device/LPC54018.h	4830;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_ESC_MASK	device/LPC54018.h	4828;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_ESC_SHIFT	device/LPC54018.h	4829;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_RSN	device/LPC54018.h	4836;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_RSN_MASK	device/LPC54018.h	4834;"	d
ENET_DMA_CH_DMA_CHX_SLOT_FUNC_CTRL_STAT_RSN_SHIFT	device/LPC54018.h	4835;"	d
ENET_DMA_CH_DMA_CHX_STAT_AIS	device/LPC54018.h	4916;"	d
ENET_DMA_CH_DMA_CHX_STAT_AIS_MASK	device/LPC54018.h	4914;"	d
ENET_DMA_CH_DMA_CHX_STAT_AIS_SHIFT	device/LPC54018.h	4915;"	d
ENET_DMA_CH_DMA_CHX_STAT_COUNT	device/LPC54018.h	4926;"	d
ENET_DMA_CH_DMA_CHX_STAT_EB	device/LPC54018.h	4922;"	d
ENET_DMA_CH_DMA_CHX_STAT_EB_MASK	device/LPC54018.h	4920;"	d
ENET_DMA_CH_DMA_CHX_STAT_EB_SHIFT	device/LPC54018.h	4921;"	d
ENET_DMA_CH_DMA_CHX_STAT_ERI	device/LPC54018.h	4910;"	d
ENET_DMA_CH_DMA_CHX_STAT_ERI_MASK	device/LPC54018.h	4908;"	d
ENET_DMA_CH_DMA_CHX_STAT_ERI_SHIFT	device/LPC54018.h	4909;"	d
ENET_DMA_CH_DMA_CHX_STAT_ETI	device/LPC54018.h	4907;"	d
ENET_DMA_CH_DMA_CHX_STAT_ETI_MASK	device/LPC54018.h	4905;"	d
ENET_DMA_CH_DMA_CHX_STAT_ETI_SHIFT	device/LPC54018.h	4906;"	d
ENET_DMA_CH_DMA_CHX_STAT_FBE	device/LPC54018.h	4913;"	d
ENET_DMA_CH_DMA_CHX_STAT_FBE_MASK	device/LPC54018.h	4911;"	d
ENET_DMA_CH_DMA_CHX_STAT_FBE_SHIFT	device/LPC54018.h	4912;"	d
ENET_DMA_CH_DMA_CHX_STAT_NIS	device/LPC54018.h	4919;"	d
ENET_DMA_CH_DMA_CHX_STAT_NIS_MASK	device/LPC54018.h	4917;"	d
ENET_DMA_CH_DMA_CHX_STAT_NIS_SHIFT	device/LPC54018.h	4918;"	d
ENET_DMA_CH_DMA_CHX_STAT_RBU	device/LPC54018.h	4898;"	d
ENET_DMA_CH_DMA_CHX_STAT_RBU_MASK	device/LPC54018.h	4896;"	d
ENET_DMA_CH_DMA_CHX_STAT_RBU_SHIFT	device/LPC54018.h	4897;"	d
ENET_DMA_CH_DMA_CHX_STAT_RI	device/LPC54018.h	4895;"	d
ENET_DMA_CH_DMA_CHX_STAT_RI_MASK	device/LPC54018.h	4893;"	d
ENET_DMA_CH_DMA_CHX_STAT_RI_SHIFT	device/LPC54018.h	4894;"	d
ENET_DMA_CH_DMA_CHX_STAT_RPS	device/LPC54018.h	4901;"	d
ENET_DMA_CH_DMA_CHX_STAT_RPS_MASK	device/LPC54018.h	4899;"	d
ENET_DMA_CH_DMA_CHX_STAT_RPS_SHIFT	device/LPC54018.h	4900;"	d
ENET_DMA_CH_DMA_CHX_STAT_RWT	device/LPC54018.h	4904;"	d
ENET_DMA_CH_DMA_CHX_STAT_RWT_MASK	device/LPC54018.h	4902;"	d
ENET_DMA_CH_DMA_CHX_STAT_RWT_SHIFT	device/LPC54018.h	4903;"	d
ENET_DMA_CH_DMA_CHX_STAT_TBU	device/LPC54018.h	4892;"	d
ENET_DMA_CH_DMA_CHX_STAT_TBU_MASK	device/LPC54018.h	4890;"	d
ENET_DMA_CH_DMA_CHX_STAT_TBU_SHIFT	device/LPC54018.h	4891;"	d
ENET_DMA_CH_DMA_CHX_STAT_TI	device/LPC54018.h	4886;"	d
ENET_DMA_CH_DMA_CHX_STAT_TI_MASK	device/LPC54018.h	4884;"	d
ENET_DMA_CH_DMA_CHX_STAT_TI_SHIFT	device/LPC54018.h	4885;"	d
ENET_DMA_CH_DMA_CHX_STAT_TPS	device/LPC54018.h	4889;"	d
ENET_DMA_CH_DMA_CHX_STAT_TPS_MASK	device/LPC54018.h	4887;"	d
ENET_DMA_CH_DMA_CHX_STAT_TPS_SHIFT	device/LPC54018.h	4888;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_LIST_ADDR_COUNT	device/LPC54018.h	4721;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_LIST_ADDR_STL	device/LPC54018.h	4717;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_LIST_ADDR_STL_MASK	device/LPC54018.h	4715;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_LIST_ADDR_STL_SHIFT	device/LPC54018.h	4716;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_RING_LENGTH_COUNT	device/LPC54018.h	4761;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_RING_LENGTH_TDRL	device/LPC54018.h	4757;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_RING_LENGTH_TDRL_MASK	device/LPC54018.h	4755;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_RING_LENGTH_TDRL_SHIFT	device/LPC54018.h	4756;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_TAIL_PTR_COUNT	device/LPC54018.h	4741;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_TAIL_PTR_TDTP	device/LPC54018.h	4737;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_TAIL_PTR_TDTP_MASK	device/LPC54018.h	4735;"	d
ENET_DMA_CH_DMA_CHX_TXDESC_TAIL_PTR_TDTP_SHIFT	device/LPC54018.h	4736;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_COUNT	device/LPC54018.h	4692;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_OSF	device/LPC54018.h	4685;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_OSF_MASK	device/LPC54018.h	4683;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_OSF_SHIFT	device/LPC54018.h	4684;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_ST	device/LPC54018.h	4679;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_ST_MASK	device/LPC54018.h	4677;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_ST_SHIFT	device/LPC54018.h	4678;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_TCW	device/LPC54018.h	4682;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_TCW_MASK	device/LPC54018.h	4680;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_TCW_SHIFT	device/LPC54018.h	4681;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_TxPBL	device/LPC54018.h	4688;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_TxPBL_MASK	device/LPC54018.h	4686;"	d
ENET_DMA_CH_DMA_CHX_TX_CTRL_TxPBL_SHIFT	device/LPC54018.h	4687;"	d
ENET_DMA_DBG_STAT_AHSTS	device/LPC54018.h	4647;"	d
ENET_DMA_DBG_STAT_AHSTS_MASK	device/LPC54018.h	4645;"	d
ENET_DMA_DBG_STAT_AHSTS_SHIFT	device/LPC54018.h	4646;"	d
ENET_DMA_DBG_STAT_RPS0	device/LPC54018.h	4650;"	d
ENET_DMA_DBG_STAT_RPS0_MASK	device/LPC54018.h	4648;"	d
ENET_DMA_DBG_STAT_RPS0_SHIFT	device/LPC54018.h	4649;"	d
ENET_DMA_DBG_STAT_RPS1	device/LPC54018.h	4656;"	d
ENET_DMA_DBG_STAT_RPS1_MASK	device/LPC54018.h	4654;"	d
ENET_DMA_DBG_STAT_RPS1_SHIFT	device/LPC54018.h	4655;"	d
ENET_DMA_DBG_STAT_TPS0	device/LPC54018.h	4653;"	d
ENET_DMA_DBG_STAT_TPS0_MASK	device/LPC54018.h	4651;"	d
ENET_DMA_DBG_STAT_TPS0_SHIFT	device/LPC54018.h	4652;"	d
ENET_DMA_DBG_STAT_TPS1	device/LPC54018.h	4659;"	d
ENET_DMA_DBG_STAT_TPS1_MASK	device/LPC54018.h	4657;"	d
ENET_DMA_DBG_STAT_TPS1_SHIFT	device/LPC54018.h	4658;"	d
ENET_DMA_INTR_STAT_DC0IS	device/LPC54018.h	4631;"	d
ENET_DMA_INTR_STAT_DC0IS_MASK	device/LPC54018.h	4629;"	d
ENET_DMA_INTR_STAT_DC0IS_SHIFT	device/LPC54018.h	4630;"	d
ENET_DMA_INTR_STAT_DC1IS	device/LPC54018.h	4634;"	d
ENET_DMA_INTR_STAT_DC1IS_MASK	device/LPC54018.h	4632;"	d
ENET_DMA_INTR_STAT_DC1IS_SHIFT	device/LPC54018.h	4633;"	d
ENET_DMA_INTR_STAT_MACIS	device/LPC54018.h	4640;"	d
ENET_DMA_INTR_STAT_MACIS_MASK	device/LPC54018.h	4638;"	d
ENET_DMA_INTR_STAT_MACIS_SHIFT	device/LPC54018.h	4639;"	d
ENET_DMA_INTR_STAT_MTLIS	device/LPC54018.h	4637;"	d
ENET_DMA_INTR_STAT_MTLIS_MASK	device/LPC54018.h	4635;"	d
ENET_DMA_INTR_STAT_MTLIS_SHIFT	device/LPC54018.h	4636;"	d
ENET_DMA_MODE_DA	device/LPC54018.h	4599;"	d
ENET_DMA_MODE_DA_MASK	device/LPC54018.h	4597;"	d
ENET_DMA_MODE_DA_SHIFT	device/LPC54018.h	4598;"	d
ENET_DMA_MODE_PR	device/LPC54018.h	4608;"	d
ENET_DMA_MODE_PR_MASK	device/LPC54018.h	4606;"	d
ENET_DMA_MODE_PR_SHIFT	device/LPC54018.h	4607;"	d
ENET_DMA_MODE_SWR	device/LPC54018.h	4596;"	d
ENET_DMA_MODE_SWR_MASK	device/LPC54018.h	4594;"	d
ENET_DMA_MODE_SWR_SHIFT	device/LPC54018.h	4595;"	d
ENET_DMA_MODE_TAA	device/LPC54018.h	4602;"	d
ENET_DMA_MODE_TAA_MASK	device/LPC54018.h	4600;"	d
ENET_DMA_MODE_TAA_SHIFT	device/LPC54018.h	4601;"	d
ENET_DMA_MODE_TXPR	device/LPC54018.h	4605;"	d
ENET_DMA_MODE_TXPR_MASK	device/LPC54018.h	4603;"	d
ENET_DMA_MODE_TXPR_SHIFT	device/LPC54018.h	4604;"	d
ENET_DMA_SYSBUS_MODE_AAL	device/LPC54018.h	4618;"	d
ENET_DMA_SYSBUS_MODE_AAL_MASK	device/LPC54018.h	4616;"	d
ENET_DMA_SYSBUS_MODE_AAL_SHIFT	device/LPC54018.h	4617;"	d
ENET_DMA_SYSBUS_MODE_FB	device/LPC54018.h	4615;"	d
ENET_DMA_SYSBUS_MODE_FB_MASK	device/LPC54018.h	4613;"	d
ENET_DMA_SYSBUS_MODE_FB_SHIFT	device/LPC54018.h	4614;"	d
ENET_DMA_SYSBUS_MODE_MB	device/LPC54018.h	4621;"	d
ENET_DMA_SYSBUS_MODE_MB_MASK	device/LPC54018.h	4619;"	d
ENET_DMA_SYSBUS_MODE_MB_SHIFT	device/LPC54018.h	4620;"	d
ENET_DMA_SYSBUS_MODE_RB	device/LPC54018.h	4624;"	d
ENET_DMA_SYSBUS_MODE_RB_MASK	device/LPC54018.h	4622;"	d
ENET_DMA_SYSBUS_MODE_RB_SHIFT	device/LPC54018.h	4623;"	d
ENET_Deinit	drivers/fsl_enet.c	/^void ENET_Deinit(ENET_Type *base)$/;"	f
ENET_DescriptorInit	drivers/fsl_enet.c	/^status_t ENET_DescriptorInit(ENET_Type *base, enet_config_t *config, enet_buffer_config_t *bufferConfig)$/;"	f
ENET_DisableInterrupts	drivers/fsl_enet.c	/^void ENET_DisableInterrupts(ENET_Type *base, uint32_t mask)$/;"	f
ENET_ETHERNETL2	drivers/fsl_enet.c	60;"	d	file:
ENET_EnableInterrupts	drivers/fsl_enet.c	/^void ENET_EnableInterrupts(ENET_Type *base, uint32_t mask)$/;"	f
ENET_EnterPowerDown	drivers/fsl_enet.c	/^void ENET_EnterPowerDown(ENET_Type *base, uint32_t *wakeFilter)$/;"	f
ENET_ExitPowerDown	drivers/fsl_enet.h	/^static inline void ENET_ExitPowerDown(ENET_Type *base)$/;"	f
ENET_FIFOSIZE_UNIT	drivers/fsl_enet.c	82;"	d	file:
ENET_FRAME_MAX_FRAMELEN	drivers/fsl_enet.h	99;"	d
ENET_FRAME_VLAN_TAGLEN	drivers/fsl_enet.c	92;"	d	file:
ENET_GetDefaultConfig	drivers/fsl_enet.c	/^void ENET_GetDefaultConfig(enet_config_t *config)$/;"	f
ENET_GetDmaInterruptStatus	drivers/fsl_enet.h	/^static inline uint32_t ENET_GetDmaInterruptStatus(ENET_Type *base, uint8_t channel)$/;"	f
ENET_GetInstance	drivers/fsl_enet.c	/^uint32_t ENET_GetInstance(ENET_Type *base)$/;"	f
ENET_GetMacAddr	drivers/fsl_enet.c	/^void ENET_GetMacAddr(ENET_Type *base, uint8_t *macAddr)$/;"	f
ENET_GetMacInterruptStatus	drivers/fsl_enet.h	/^static inline uint32_t ENET_GetMacInterruptStatus(ENET_Type *base)$/;"	f
ENET_GetRxDescriptor	drivers/fsl_enet.h	/^static inline uint32_t ENET_GetRxDescriptor(enet_rx_bd_struct_t *rxDesc)$/;"	f
ENET_GetRxFrameSize	drivers/fsl_enet.c	/^status_t ENET_GetRxFrameSize(ENET_Type *base, enet_handle_t *handle, uint32_t *length, uint8_t channel)$/;"	f
ENET_GetRxFrameTime	drivers/fsl_enet.c	/^status_t ENET_GetRxFrameTime(enet_handle_t *handle, enet_ptp_time_data_t *ptpTimeData)$/;"	f
ENET_GetTxFrameTime	drivers/fsl_enet.c	/^status_t ENET_GetTxFrameTime(enet_handle_t *handle, enet_ptp_time_data_t *ptpTimeData)$/;"	f
ENET_GetTxRingId	drivers/fsl_enet.c	/^static uint8_t ENET_GetTxRingId(uint8_t *data, enet_handle_t *handle)$/;"	f	file:
ENET_HALFDUPLEX_DEFAULTIPG	drivers/fsl_enet.c	84;"	d	file:
ENET_HEAD_AVBTYPE_OFFSET	drivers/fsl_enet.c	97;"	d	file:
ENET_HEAD_TYPE_OFFSET	drivers/fsl_enet.c	96;"	d	file:
ENET_HTONL	drivers/fsl_enet.c	101;"	d	file:
ENET_HTONS	drivers/fsl_enet.c	100;"	d	file:
ENET_IPV4	drivers/fsl_enet.c	62;"	d	file:
ENET_IPV4VERSION	drivers/fsl_enet.c	70;"	d	file:
ENET_IPV6	drivers/fsl_enet.c	64;"	d	file:
ENET_IPV6VERSION	drivers/fsl_enet.c	72;"	d	file:
ENET_IRQHandler	drivers/fsl_enet.c	/^void ENET_IRQHandler(ENET_Type *base, enet_handle_t *handle)$/;"	f
ENET_IRQS	device/LPC54018.h	4957;"	d
ENET_IncreaseIndex	drivers/fsl_enet.c	/^static uint32_t ENET_IncreaseIndex(uint32_t index, uint32_t max)$/;"	f	file:
ENET_Init	drivers/fsl_enet.c	/^void ENET_Init(ENET_Type *base, const enet_config_t *config, uint8_t *macAddr, uint32_t refclkSrc_Hz)$/;"	f
ENET_IsSMIBusy	drivers/fsl_enet.h	/^static inline bool ENET_IsSMIBusy(ENET_Type *base)$/;"	f
ENET_IsTxDescriptorDmaOwn	drivers/fsl_enet.h	/^static inline bool ENET_IsTxDescriptorDmaOwn(enet_tx_bd_struct_t *txDesc)$/;"	f
ENET_MACINT_ENUM_OFFSET	drivers/fsl_enet.h	105;"	d
ENET_MACLP_IRQS	device/LPC54018.h	4959;"	d
ENET_MAC_1US_TIC_COUNTR_TIC_1US_CNTR	device/LPC54018.h	3982;"	d
ENET_MAC_1US_TIC_COUNTR_TIC_1US_CNTR_MASK	device/LPC54018.h	3980;"	d
ENET_MAC_1US_TIC_COUNTR_TIC_1US_CNTR_SHIFT	device/LPC54018.h	3981;"	d
ENET_MAC_ADDR_HIGH_A47_32	device/LPC54018.h	4159;"	d
ENET_MAC_ADDR_HIGH_A47_32_MASK	device/LPC54018.h	4157;"	d
ENET_MAC_ADDR_HIGH_A47_32_SHIFT	device/LPC54018.h	4158;"	d
ENET_MAC_ADDR_HIGH_AE	device/LPC54018.h	4165;"	d
ENET_MAC_ADDR_HIGH_AE_MASK	device/LPC54018.h	4163;"	d
ENET_MAC_ADDR_HIGH_AE_SHIFT	device/LPC54018.h	4164;"	d
ENET_MAC_ADDR_HIGH_DCS	device/LPC54018.h	4162;"	d
ENET_MAC_ADDR_HIGH_DCS_MASK	device/LPC54018.h	4160;"	d
ENET_MAC_ADDR_HIGH_DCS_SHIFT	device/LPC54018.h	4161;"	d
ENET_MAC_ADDR_LOW_A31_0	device/LPC54018.h	4172;"	d
ENET_MAC_ADDR_LOW_A31_0_MASK	device/LPC54018.h	4170;"	d
ENET_MAC_ADDR_LOW_A31_0_SHIFT	device/LPC54018.h	4171;"	d
ENET_MAC_CONFIG_ACS	device/LPC54018.h	3620;"	d
ENET_MAC_CONFIG_ACS_MASK	device/LPC54018.h	3618;"	d
ENET_MAC_CONFIG_ACS_SHIFT	device/LPC54018.h	3619;"	d
ENET_MAC_CONFIG_BE	device/LPC54018.h	3614;"	d
ENET_MAC_CONFIG_BE_MASK	device/LPC54018.h	3612;"	d
ENET_MAC_CONFIG_BE_SHIFT	device/LPC54018.h	3613;"	d
ENET_MAC_CONFIG_BL	device/LPC54018.h	3581;"	d
ENET_MAC_CONFIG_BL_MASK	device/LPC54018.h	3579;"	d
ENET_MAC_CONFIG_BL_SHIFT	device/LPC54018.h	3580;"	d
ENET_MAC_CONFIG_CST	device/LPC54018.h	3623;"	d
ENET_MAC_CONFIG_CST_MASK	device/LPC54018.h	3621;"	d
ENET_MAC_CONFIG_CST_SHIFT	device/LPC54018.h	3622;"	d
ENET_MAC_CONFIG_DC	device/LPC54018.h	3578;"	d
ENET_MAC_CONFIG_DCRS	device/LPC54018.h	3587;"	d
ENET_MAC_CONFIG_DCRS_MASK	device/LPC54018.h	3585;"	d
ENET_MAC_CONFIG_DCRS_SHIFT	device/LPC54018.h	3586;"	d
ENET_MAC_CONFIG_DC_MASK	device/LPC54018.h	3576;"	d
ENET_MAC_CONFIG_DC_SHIFT	device/LPC54018.h	3577;"	d
ENET_MAC_CONFIG_DM	device/LPC54018.h	3599;"	d
ENET_MAC_CONFIG_DM_MASK	device/LPC54018.h	3597;"	d
ENET_MAC_CONFIG_DM_SHIFT	device/LPC54018.h	3598;"	d
ENET_MAC_CONFIG_DO	device/LPC54018.h	3590;"	d
ENET_MAC_CONFIG_DO_MASK	device/LPC54018.h	3588;"	d
ENET_MAC_CONFIG_DO_SHIFT	device/LPC54018.h	3589;"	d
ENET_MAC_CONFIG_DR	device/LPC54018.h	3584;"	d
ENET_MAC_CONFIG_DR_MASK	device/LPC54018.h	3582;"	d
ENET_MAC_CONFIG_DR_SHIFT	device/LPC54018.h	3583;"	d
ENET_MAC_CONFIG_ECRSFD	device/LPC54018.h	3593;"	d
ENET_MAC_CONFIG_ECRSFD_MASK	device/LPC54018.h	3591;"	d
ENET_MAC_CONFIG_ECRSFD_SHIFT	device/LPC54018.h	3592;"	d
ENET_MAC_CONFIG_FES	device/LPC54018.h	3602;"	d
ENET_MAC_CONFIG_FES_MASK	device/LPC54018.h	3600;"	d
ENET_MAC_CONFIG_FES_SHIFT	device/LPC54018.h	3601;"	d
ENET_MAC_CONFIG_GPSLCE	device/LPC54018.h	3629;"	d
ENET_MAC_CONFIG_GPSLCE_MASK	device/LPC54018.h	3627;"	d
ENET_MAC_CONFIG_GPSLCE_SHIFT	device/LPC54018.h	3628;"	d
ENET_MAC_CONFIG_IPC	device/LPC54018.h	3635;"	d
ENET_MAC_CONFIG_IPC_MASK	device/LPC54018.h	3633;"	d
ENET_MAC_CONFIG_IPC_SHIFT	device/LPC54018.h	3634;"	d
ENET_MAC_CONFIG_IPG	device/LPC54018.h	3632;"	d
ENET_MAC_CONFIG_IPG_MASK	device/LPC54018.h	3630;"	d
ENET_MAC_CONFIG_IPG_SHIFT	device/LPC54018.h	3631;"	d
ENET_MAC_CONFIG_JD	device/LPC54018.h	3611;"	d
ENET_MAC_CONFIG_JD_MASK	device/LPC54018.h	3609;"	d
ENET_MAC_CONFIG_JD_SHIFT	device/LPC54018.h	3610;"	d
ENET_MAC_CONFIG_JE	device/LPC54018.h	3608;"	d
ENET_MAC_CONFIG_JE_MASK	device/LPC54018.h	3606;"	d
ENET_MAC_CONFIG_JE_SHIFT	device/LPC54018.h	3607;"	d
ENET_MAC_CONFIG_LM	device/LPC54018.h	3596;"	d
ENET_MAC_CONFIG_LM_MASK	device/LPC54018.h	3594;"	d
ENET_MAC_CONFIG_LM_SHIFT	device/LPC54018.h	3595;"	d
ENET_MAC_CONFIG_PRELEN	device/LPC54018.h	3575;"	d
ENET_MAC_CONFIG_PRELEN_MASK	device/LPC54018.h	3573;"	d
ENET_MAC_CONFIG_PRELEN_SHIFT	device/LPC54018.h	3574;"	d
ENET_MAC_CONFIG_PS	device/LPC54018.h	3605;"	d
ENET_MAC_CONFIG_PS_MASK	device/LPC54018.h	3603;"	d
ENET_MAC_CONFIG_PS_SHIFT	device/LPC54018.h	3604;"	d
ENET_MAC_CONFIG_RE	device/LPC54018.h	3569;"	d
ENET_MAC_CONFIG_RE_MASK	device/LPC54018.h	3567;"	d
ENET_MAC_CONFIG_RE_SHIFT	device/LPC54018.h	3568;"	d
ENET_MAC_CONFIG_S2KP	device/LPC54018.h	3626;"	d
ENET_MAC_CONFIG_S2KP_MASK	device/LPC54018.h	3624;"	d
ENET_MAC_CONFIG_S2KP_SHIFT	device/LPC54018.h	3625;"	d
ENET_MAC_CONFIG_TE	device/LPC54018.h	3572;"	d
ENET_MAC_CONFIG_TE_MASK	device/LPC54018.h	3570;"	d
ENET_MAC_CONFIG_TE_SHIFT	device/LPC54018.h	3571;"	d
ENET_MAC_CONFIG_WD	device/LPC54018.h	3617;"	d
ENET_MAC_CONFIG_WD_MASK	device/LPC54018.h	3615;"	d
ENET_MAC_CONFIG_WD_SHIFT	device/LPC54018.h	3616;"	d
ENET_MAC_DBG_REPESTS	device/LPC54018.h	3999;"	d
ENET_MAC_DBG_REPESTS_MASK	device/LPC54018.h	3997;"	d
ENET_MAC_DBG_REPESTS_SHIFT	device/LPC54018.h	3998;"	d
ENET_MAC_DBG_RFCFCSTS	device/LPC54018.h	4002;"	d
ENET_MAC_DBG_RFCFCSTS_MASK	device/LPC54018.h	4000;"	d
ENET_MAC_DBG_RFCFCSTS_SHIFT	device/LPC54018.h	4001;"	d
ENET_MAC_DBG_TFCSTS	device/LPC54018.h	4008;"	d
ENET_MAC_DBG_TFCSTS_MASK	device/LPC54018.h	4006;"	d
ENET_MAC_DBG_TFCSTS_SHIFT	device/LPC54018.h	4007;"	d
ENET_MAC_DBG_TPESTS	device/LPC54018.h	4005;"	d
ENET_MAC_DBG_TPESTS_MASK	device/LPC54018.h	4003;"	d
ENET_MAC_DBG_TPESTS_SHIFT	device/LPC54018.h	4004;"	d
ENET_MAC_EXT_CONFIG_DCRCC	device/LPC54018.h	3645;"	d
ENET_MAC_EXT_CONFIG_DCRCC_MASK	device/LPC54018.h	3643;"	d
ENET_MAC_EXT_CONFIG_DCRCC_SHIFT	device/LPC54018.h	3644;"	d
ENET_MAC_EXT_CONFIG_GPSL	device/LPC54018.h	3642;"	d
ENET_MAC_EXT_CONFIG_GPSL_MASK	device/LPC54018.h	3640;"	d
ENET_MAC_EXT_CONFIG_GPSL_SHIFT	device/LPC54018.h	3641;"	d
ENET_MAC_EXT_CONFIG_SPEN	device/LPC54018.h	3648;"	d
ENET_MAC_EXT_CONFIG_SPEN_MASK	device/LPC54018.h	3646;"	d
ENET_MAC_EXT_CONFIG_SPEN_SHIFT	device/LPC54018.h	3647;"	d
ENET_MAC_EXT_CONFIG_USP	device/LPC54018.h	3651;"	d
ENET_MAC_EXT_CONFIG_USP_MASK	device/LPC54018.h	3649;"	d
ENET_MAC_EXT_CONFIG_USP_SHIFT	device/LPC54018.h	3650;"	d
ENET_MAC_FRAME_FILTER_DAIF	device/LPC54018.h	3661;"	d
ENET_MAC_FRAME_FILTER_DAIF_MASK	device/LPC54018.h	3659;"	d
ENET_MAC_FRAME_FILTER_DAIF_SHIFT	device/LPC54018.h	3660;"	d
ENET_MAC_FRAME_FILTER_DBF	device/LPC54018.h	3667;"	d
ENET_MAC_FRAME_FILTER_DBF_MASK	device/LPC54018.h	3665;"	d
ENET_MAC_FRAME_FILTER_DBF_SHIFT	device/LPC54018.h	3666;"	d
ENET_MAC_FRAME_FILTER_PCF	device/LPC54018.h	3670;"	d
ENET_MAC_FRAME_FILTER_PCF_MASK	device/LPC54018.h	3668;"	d
ENET_MAC_FRAME_FILTER_PCF_SHIFT	device/LPC54018.h	3669;"	d
ENET_MAC_FRAME_FILTER_PM	device/LPC54018.h	3664;"	d
ENET_MAC_FRAME_FILTER_PM_MASK	device/LPC54018.h	3662;"	d
ENET_MAC_FRAME_FILTER_PM_SHIFT	device/LPC54018.h	3663;"	d
ENET_MAC_FRAME_FILTER_PR	device/LPC54018.h	3658;"	d
ENET_MAC_FRAME_FILTER_PR_MASK	device/LPC54018.h	3656;"	d
ENET_MAC_FRAME_FILTER_PR_SHIFT	device/LPC54018.h	3657;"	d
ENET_MAC_FRAME_FILTER_RA	device/LPC54018.h	3679;"	d
ENET_MAC_FRAME_FILTER_RA_MASK	device/LPC54018.h	3677;"	d
ENET_MAC_FRAME_FILTER_RA_SHIFT	device/LPC54018.h	3678;"	d
ENET_MAC_FRAME_FILTER_SAF	device/LPC54018.h	3676;"	d
ENET_MAC_FRAME_FILTER_SAF_MASK	device/LPC54018.h	3674;"	d
ENET_MAC_FRAME_FILTER_SAF_SHIFT	device/LPC54018.h	3675;"	d
ENET_MAC_FRAME_FILTER_SAIF	device/LPC54018.h	3673;"	d
ENET_MAC_FRAME_FILTER_SAIF_MASK	device/LPC54018.h	3671;"	d
ENET_MAC_FRAME_FILTER_SAIF_SHIFT	device/LPC54018.h	3672;"	d
ENET_MAC_HW_FEAT_ACTPHYSEL	device/LPC54018.h	4111;"	d
ENET_MAC_HW_FEAT_ACTPHYSEL_MASK	device/LPC54018.h	4109;"	d
ENET_MAC_HW_FEAT_ACTPHYSEL_SHIFT	device/LPC54018.h	4110;"	d
ENET_MAC_HW_FEAT_ADDR64	device/LPC54018.h	4069;"	d
ENET_MAC_HW_FEAT_ADDR64_MASK	device/LPC54018.h	4067;"	d
ENET_MAC_HW_FEAT_ADDR64_SHIFT	device/LPC54018.h	4068;"	d
ENET_MAC_HW_FEAT_ADVTHWORD	device/LPC54018.h	4063;"	d
ENET_MAC_HW_FEAT_ADVTHWORD_MASK	device/LPC54018.h	4061;"	d
ENET_MAC_HW_FEAT_ADVTHWORD_SHIFT	device/LPC54018.h	4062;"	d
ENET_MAC_HW_FEAT_ARPOFFSEL	device/LPC54018.h	4048;"	d
ENET_MAC_HW_FEAT_ARPOFFSEL_MASK	device/LPC54018.h	4046;"	d
ENET_MAC_HW_FEAT_ARPOFFSEL_SHIFT	device/LPC54018.h	4047;"	d
ENET_MAC_HW_FEAT_AUXSNAPNUM	device/LPC54018.h	4114;"	d
ENET_MAC_HW_FEAT_AUXSNAPNUM_MASK	device/LPC54018.h	4112;"	d
ENET_MAC_HW_FEAT_AUXSNAPNUM_SHIFT	device/LPC54018.h	4113;"	d
ENET_MAC_HW_FEAT_AVSEL	device/LPC54018.h	4093;"	d
ENET_MAC_HW_FEAT_AVSEL_MASK	device/LPC54018.h	4091;"	d
ENET_MAC_HW_FEAT_AVSEL_SHIFT	device/LPC54018.h	4092;"	d
ENET_MAC_HW_FEAT_COUNT	device/LPC54018.h	4118;"	d
ENET_MAC_HW_FEAT_DBGMEMA	device/LPC54018.h	4090;"	d
ENET_MAC_HW_FEAT_DBGMEMA_MASK	device/LPC54018.h	4088;"	d
ENET_MAC_HW_FEAT_DBGMEMA_SHIFT	device/LPC54018.h	4089;"	d
ENET_MAC_HW_FEAT_DCBEN	device/LPC54018.h	4075;"	d
ENET_MAC_HW_FEAT_DCBEN_MASK	device/LPC54018.h	4073;"	d
ENET_MAC_HW_FEAT_DCBEN_SHIFT	device/LPC54018.h	4074;"	d
ENET_MAC_HW_FEAT_EEESEL	device/LPC54018.h	4066;"	d
ENET_MAC_HW_FEAT_EEESEL_MASK	device/LPC54018.h	4064;"	d
ENET_MAC_HW_FEAT_EEESEL_SHIFT	device/LPC54018.h	4065;"	d
ENET_MAC_HW_FEAT_HASHTBLSZ	device/LPC54018.h	4099;"	d
ENET_MAC_HW_FEAT_HASHTBLSZ_MASK	device/LPC54018.h	4097;"	d
ENET_MAC_HW_FEAT_HASHTBLSZ_SHIFT	device/LPC54018.h	4098;"	d
ENET_MAC_HW_FEAT_HDSEL	device/LPC54018.h	4024;"	d
ENET_MAC_HW_FEAT_HDSEL_MASK	device/LPC54018.h	4022;"	d
ENET_MAC_HW_FEAT_HDSEL_SHIFT	device/LPC54018.h	4023;"	d
ENET_MAC_HW_FEAT_L3_L4_FILTER	device/LPC54018.h	4108;"	d
ENET_MAC_HW_FEAT_L3_L4_FILTER_MASK	device/LPC54018.h	4106;"	d
ENET_MAC_HW_FEAT_L3_L4_FILTER_SHIFT	device/LPC54018.h	4107;"	d
ENET_MAC_HW_FEAT_LPMODEEN	device/LPC54018.h	4096;"	d
ENET_MAC_HW_FEAT_LPMODEEN_MASK	device/LPC54018.h	4094;"	d
ENET_MAC_HW_FEAT_LPMODEEN_SHIFT	device/LPC54018.h	4095;"	d
ENET_MAC_HW_FEAT_MGKSEL	device/LPC54018.h	4042;"	d
ENET_MAC_HW_FEAT_MGKSEL_MASK	device/LPC54018.h	4040;"	d
ENET_MAC_HW_FEAT_MGKSEL_SHIFT	device/LPC54018.h	4041;"	d
ENET_MAC_HW_FEAT_MIISEL	device/LPC54018.h	4015;"	d
ENET_MAC_HW_FEAT_MIISEL_MASK	device/LPC54018.h	4013;"	d
ENET_MAC_HW_FEAT_MIISEL_SHIFT	device/LPC54018.h	4014;"	d
ENET_MAC_HW_FEAT_MMCSEL	device/LPC54018.h	4045;"	d
ENET_MAC_HW_FEAT_MMCSEL_MASK	device/LPC54018.h	4043;"	d
ENET_MAC_HW_FEAT_MMCSEL_SHIFT	device/LPC54018.h	4044;"	d
ENET_MAC_HW_FEAT_OSTEN	device/LPC54018.h	4051;"	d
ENET_MAC_HW_FEAT_OSTEN_MASK	device/LPC54018.h	4049;"	d
ENET_MAC_HW_FEAT_OSTEN_SHIFT	device/LPC54018.h	4050;"	d
ENET_MAC_HW_FEAT_PPSOUTNUM	device/LPC54018.h	4102;"	d
ENET_MAC_HW_FEAT_PPSOUTNUM_MASK	device/LPC54018.h	4100;"	d
ENET_MAC_HW_FEAT_PPSOUTNUM_SHIFT	device/LPC54018.h	4101;"	d
ENET_MAC_HW_FEAT_PTOEN	device/LPC54018.h	4054;"	d
ENET_MAC_HW_FEAT_PTOEN_MASK	device/LPC54018.h	4052;"	d
ENET_MAC_HW_FEAT_PTOEN_SHIFT	device/LPC54018.h	4053;"	d
ENET_MAC_HW_FEAT_RWKSEL	device/LPC54018.h	4033;"	d
ENET_MAC_HW_FEAT_RWKSEL_MASK	device/LPC54018.h	4031;"	d
ENET_MAC_HW_FEAT_RWKSEL_SHIFT	device/LPC54018.h	4032;"	d
ENET_MAC_HW_FEAT_RXCHCNT	device/LPC54018.h	4057;"	d
ENET_MAC_HW_FEAT_RXCHCNT_MASK	device/LPC54018.h	4055;"	d
ENET_MAC_HW_FEAT_RXCHCNT_SHIFT	device/LPC54018.h	4056;"	d
ENET_MAC_HW_FEAT_RXCOESEL	device/LPC54018.h	4078;"	d
ENET_MAC_HW_FEAT_RXCOESEL_MASK	device/LPC54018.h	4076;"	d
ENET_MAC_HW_FEAT_RXCOESEL_SHIFT	device/LPC54018.h	4077;"	d
ENET_MAC_HW_FEAT_RXFIFOSIZE	device/LPC54018.h	4018;"	d
ENET_MAC_HW_FEAT_RXFIFOSIZE_MASK	device/LPC54018.h	4016;"	d
ENET_MAC_HW_FEAT_RXFIFOSIZE_SHIFT	device/LPC54018.h	4017;"	d
ENET_MAC_HW_FEAT_RXQCNT	device/LPC54018.h	4021;"	d
ENET_MAC_HW_FEAT_RXQCNT_MASK	device/LPC54018.h	4019;"	d
ENET_MAC_HW_FEAT_RXQCNT_SHIFT	device/LPC54018.h	4020;"	d
ENET_MAC_HW_FEAT_SMASEL	device/LPC54018.h	4030;"	d
ENET_MAC_HW_FEAT_SMASEL_MASK	device/LPC54018.h	4028;"	d
ENET_MAC_HW_FEAT_SMASEL_SHIFT	device/LPC54018.h	4029;"	d
ENET_MAC_HW_FEAT_SPEN	device/LPC54018.h	4081;"	d
ENET_MAC_HW_FEAT_SPEN_MASK	device/LPC54018.h	4079;"	d
ENET_MAC_HW_FEAT_SPEN_SHIFT	device/LPC54018.h	4080;"	d
ENET_MAC_HW_FEAT_TSOEN	device/LPC54018.h	4084;"	d
ENET_MAC_HW_FEAT_TSOEN_MASK	device/LPC54018.h	4082;"	d
ENET_MAC_HW_FEAT_TSOEN_SHIFT	device/LPC54018.h	4083;"	d
ENET_MAC_HW_FEAT_TSSEL	device/LPC54018.h	4060;"	d
ENET_MAC_HW_FEAT_TSSEL_MASK	device/LPC54018.h	4058;"	d
ENET_MAC_HW_FEAT_TSSEL_SHIFT	device/LPC54018.h	4059;"	d
ENET_MAC_HW_FEAT_TSSTSSEL	device/LPC54018.h	4105;"	d
ENET_MAC_HW_FEAT_TSSTSSEL_MASK	device/LPC54018.h	4103;"	d
ENET_MAC_HW_FEAT_TSSTSSEL_SHIFT	device/LPC54018.h	4104;"	d
ENET_MAC_HW_FEAT_TXCHCNT	device/LPC54018.h	4087;"	d
ENET_MAC_HW_FEAT_TXCHCNT_MASK	device/LPC54018.h	4085;"	d
ENET_MAC_HW_FEAT_TXCHCNT_SHIFT	device/LPC54018.h	4086;"	d
ENET_MAC_HW_FEAT_TXCOESEL	device/LPC54018.h	4072;"	d
ENET_MAC_HW_FEAT_TXCOESEL_MASK	device/LPC54018.h	4070;"	d
ENET_MAC_HW_FEAT_TXCOESEL_SHIFT	device/LPC54018.h	4071;"	d
ENET_MAC_HW_FEAT_TXFIFOSIZE	device/LPC54018.h	4036;"	d
ENET_MAC_HW_FEAT_TXFIFOSIZE_MASK	device/LPC54018.h	4034;"	d
ENET_MAC_HW_FEAT_TXFIFOSIZE_SHIFT	device/LPC54018.h	4035;"	d
ENET_MAC_HW_FEAT_TXQCNT	device/LPC54018.h	4039;"	d
ENET_MAC_HW_FEAT_TXQCNT_MASK	device/LPC54018.h	4037;"	d
ENET_MAC_HW_FEAT_TXQCNT_SHIFT	device/LPC54018.h	4038;"	d
ENET_MAC_HW_FEAT_VLHASH	device/LPC54018.h	4027;"	d
ENET_MAC_HW_FEAT_VLHASH_MASK	device/LPC54018.h	4025;"	d
ENET_MAC_HW_FEAT_VLHASH_SHIFT	device/LPC54018.h	4026;"	d
ENET_MAC_INTR_EN_LPIIE	device/LPC54018.h	3849;"	d
ENET_MAC_INTR_EN_LPIIE_MASK	device/LPC54018.h	3847;"	d
ENET_MAC_INTR_EN_LPIIE_SHIFT	device/LPC54018.h	3848;"	d
ENET_MAC_INTR_EN_PHYIE	device/LPC54018.h	3843;"	d
ENET_MAC_INTR_EN_PHYIE_MASK	device/LPC54018.h	3841;"	d
ENET_MAC_INTR_EN_PHYIE_SHIFT	device/LPC54018.h	3842;"	d
ENET_MAC_INTR_EN_PMTIE	device/LPC54018.h	3846;"	d
ENET_MAC_INTR_EN_PMTIE_MASK	device/LPC54018.h	3844;"	d
ENET_MAC_INTR_EN_PMTIE_SHIFT	device/LPC54018.h	3845;"	d
ENET_MAC_INTR_EN_RXSTSIS	device/LPC54018.h	3858;"	d
ENET_MAC_INTR_EN_RXSTSIS_MASK	device/LPC54018.h	3856;"	d
ENET_MAC_INTR_EN_RXSTSIS_SHIFT	device/LPC54018.h	3857;"	d
ENET_MAC_INTR_EN_TSIE	device/LPC54018.h	3852;"	d
ENET_MAC_INTR_EN_TSIE_MASK	device/LPC54018.h	3850;"	d
ENET_MAC_INTR_EN_TSIE_SHIFT	device/LPC54018.h	3851;"	d
ENET_MAC_INTR_EN_TXSTSIE	device/LPC54018.h	3855;"	d
ENET_MAC_INTR_EN_TXSTSIE_MASK	device/LPC54018.h	3853;"	d
ENET_MAC_INTR_EN_TXSTSIE_SHIFT	device/LPC54018.h	3854;"	d
ENET_MAC_INTR_STAT_LPIIS	device/LPC54018.h	3827;"	d
ENET_MAC_INTR_STAT_LPIIS_MASK	device/LPC54018.h	3825;"	d
ENET_MAC_INTR_STAT_LPIIS_SHIFT	device/LPC54018.h	3826;"	d
ENET_MAC_INTR_STAT_PHYIS	device/LPC54018.h	3821;"	d
ENET_MAC_INTR_STAT_PHYIS_MASK	device/LPC54018.h	3819;"	d
ENET_MAC_INTR_STAT_PHYIS_SHIFT	device/LPC54018.h	3820;"	d
ENET_MAC_INTR_STAT_PMTIS	device/LPC54018.h	3824;"	d
ENET_MAC_INTR_STAT_PMTIS_MASK	device/LPC54018.h	3822;"	d
ENET_MAC_INTR_STAT_PMTIS_SHIFT	device/LPC54018.h	3823;"	d
ENET_MAC_INTR_STAT_RXSTSIS	device/LPC54018.h	3836;"	d
ENET_MAC_INTR_STAT_RXSTSIS_MASK	device/LPC54018.h	3834;"	d
ENET_MAC_INTR_STAT_RXSTSIS_SHIFT	device/LPC54018.h	3835;"	d
ENET_MAC_INTR_STAT_TSIS	device/LPC54018.h	3830;"	d
ENET_MAC_INTR_STAT_TSIS_MASK	device/LPC54018.h	3828;"	d
ENET_MAC_INTR_STAT_TSIS_SHIFT	device/LPC54018.h	3829;"	d
ENET_MAC_INTR_STAT_TXSTSIS	device/LPC54018.h	3833;"	d
ENET_MAC_INTR_STAT_TXSTSIS_MASK	device/LPC54018.h	3831;"	d
ENET_MAC_INTR_STAT_TXSTSIS_SHIFT	device/LPC54018.h	3832;"	d
ENET_MAC_LPI_CTRL_STAT_LPIATE	device/LPC54018.h	3955;"	d
ENET_MAC_LPI_CTRL_STAT_LPIATE_MASK	device/LPC54018.h	3953;"	d
ENET_MAC_LPI_CTRL_STAT_LPIATE_SHIFT	device/LPC54018.h	3954;"	d
ENET_MAC_LPI_CTRL_STAT_LPIEN	device/LPC54018.h	3946;"	d
ENET_MAC_LPI_CTRL_STAT_LPIEN_MASK	device/LPC54018.h	3944;"	d
ENET_MAC_LPI_CTRL_STAT_LPIEN_SHIFT	device/LPC54018.h	3945;"	d
ENET_MAC_LPI_CTRL_STAT_LPITCSE	device/LPC54018.h	3958;"	d
ENET_MAC_LPI_CTRL_STAT_LPITCSE_MASK	device/LPC54018.h	3956;"	d
ENET_MAC_LPI_CTRL_STAT_LPITCSE_SHIFT	device/LPC54018.h	3957;"	d
ENET_MAC_LPI_CTRL_STAT_LPITXA	device/LPC54018.h	3952;"	d
ENET_MAC_LPI_CTRL_STAT_LPITXA_MASK	device/LPC54018.h	3950;"	d
ENET_MAC_LPI_CTRL_STAT_LPITXA_SHIFT	device/LPC54018.h	3951;"	d
ENET_MAC_LPI_CTRL_STAT_PLS	device/LPC54018.h	3949;"	d
ENET_MAC_LPI_CTRL_STAT_PLS_MASK	device/LPC54018.h	3947;"	d
ENET_MAC_LPI_CTRL_STAT_PLS_SHIFT	device/LPC54018.h	3948;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIEN	device/LPC54018.h	3934;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIEN_MASK	device/LPC54018.h	3932;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIEN_SHIFT	device/LPC54018.h	3933;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIEX	device/LPC54018.h	3937;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIEX_MASK	device/LPC54018.h	3935;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIEX_SHIFT	device/LPC54018.h	3936;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIST	device/LPC54018.h	3943;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIST_MASK	device/LPC54018.h	3941;"	d
ENET_MAC_LPI_CTRL_STAT_RLPIST_SHIFT	device/LPC54018.h	3942;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIEN	device/LPC54018.h	3928;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIEN_MASK	device/LPC54018.h	3926;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIEN_SHIFT	device/LPC54018.h	3927;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIEX	device/LPC54018.h	3931;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIEX_MASK	device/LPC54018.h	3929;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIEX_SHIFT	device/LPC54018.h	3930;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIST	device/LPC54018.h	3940;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIST_MASK	device/LPC54018.h	3938;"	d
ENET_MAC_LPI_CTRL_STAT_TLPIST_SHIFT	device/LPC54018.h	3939;"	d
ENET_MAC_LPI_ENTR_TIMR_LPIET	device/LPC54018.h	3975;"	d
ENET_MAC_LPI_ENTR_TIMR_LPIET_MASK	device/LPC54018.h	3973;"	d
ENET_MAC_LPI_ENTR_TIMR_LPIET_SHIFT	device/LPC54018.h	3974;"	d
ENET_MAC_LPI_TIMER_CTRL_LST	device/LPC54018.h	3968;"	d
ENET_MAC_LPI_TIMER_CTRL_LST_MASK	device/LPC54018.h	3966;"	d
ENET_MAC_LPI_TIMER_CTRL_LST_SHIFT	device/LPC54018.h	3967;"	d
ENET_MAC_LPI_TIMER_CTRL_TWT	device/LPC54018.h	3965;"	d
ENET_MAC_LPI_TIMER_CTRL_TWT_MASK	device/LPC54018.h	3963;"	d
ENET_MAC_LPI_TIMER_CTRL_TWT_SHIFT	device/LPC54018.h	3964;"	d
ENET_MAC_MDIO_ADDR_BTB	device/LPC54018.h	4142;"	d
ENET_MAC_MDIO_ADDR_BTB_MASK	device/LPC54018.h	4140;"	d
ENET_MAC_MDIO_ADDR_BTB_SHIFT	device/LPC54018.h	4141;"	d
ENET_MAC_MDIO_ADDR_CR	device/LPC54018.h	4130;"	d
ENET_MAC_MDIO_ADDR_CR_MASK	device/LPC54018.h	4128;"	d
ENET_MAC_MDIO_ADDR_CR_SHIFT	device/LPC54018.h	4129;"	d
ENET_MAC_MDIO_ADDR_MB	device/LPC54018.h	4124;"	d
ENET_MAC_MDIO_ADDR_MB_MASK	device/LPC54018.h	4122;"	d
ENET_MAC_MDIO_ADDR_MB_SHIFT	device/LPC54018.h	4123;"	d
ENET_MAC_MDIO_ADDR_MOC	device/LPC54018.h	4127;"	d
ENET_MAC_MDIO_ADDR_MOC_MASK	device/LPC54018.h	4125;"	d
ENET_MAC_MDIO_ADDR_MOC_SHIFT	device/LPC54018.h	4126;"	d
ENET_MAC_MDIO_ADDR_NTC	device/LPC54018.h	4133;"	d
ENET_MAC_MDIO_ADDR_NTC_MASK	device/LPC54018.h	4131;"	d
ENET_MAC_MDIO_ADDR_NTC_SHIFT	device/LPC54018.h	4132;"	d
ENET_MAC_MDIO_ADDR_PA	device/LPC54018.h	4139;"	d
ENET_MAC_MDIO_ADDR_PA_MASK	device/LPC54018.h	4137;"	d
ENET_MAC_MDIO_ADDR_PA_SHIFT	device/LPC54018.h	4138;"	d
ENET_MAC_MDIO_ADDR_PSE	device/LPC54018.h	4145;"	d
ENET_MAC_MDIO_ADDR_PSE_MASK	device/LPC54018.h	4143;"	d
ENET_MAC_MDIO_ADDR_PSE_SHIFT	device/LPC54018.h	4144;"	d
ENET_MAC_MDIO_ADDR_RDA	device/LPC54018.h	4136;"	d
ENET_MAC_MDIO_ADDR_RDA_MASK	device/LPC54018.h	4134;"	d
ENET_MAC_MDIO_ADDR_RDA_SHIFT	device/LPC54018.h	4135;"	d
ENET_MAC_MDIO_DATA_MD	device/LPC54018.h	4152;"	d
ENET_MAC_MDIO_DATA_MD_MASK	device/LPC54018.h	4150;"	d
ENET_MAC_MDIO_DATA_MD_SHIFT	device/LPC54018.h	4151;"	d
ENET_MAC_PMT_CRTL_STAT_GLBLUCAST	device/LPC54018.h	3905;"	d
ENET_MAC_PMT_CRTL_STAT_GLBLUCAST_MASK	device/LPC54018.h	3903;"	d
ENET_MAC_PMT_CRTL_STAT_GLBLUCAST_SHIFT	device/LPC54018.h	3904;"	d
ENET_MAC_PMT_CRTL_STAT_MGKPKTEN	device/LPC54018.h	3893;"	d
ENET_MAC_PMT_CRTL_STAT_MGKPKTEN_MASK	device/LPC54018.h	3891;"	d
ENET_MAC_PMT_CRTL_STAT_MGKPKTEN_SHIFT	device/LPC54018.h	3892;"	d
ENET_MAC_PMT_CRTL_STAT_MGKPRCVD	device/LPC54018.h	3899;"	d
ENET_MAC_PMT_CRTL_STAT_MGKPRCVD_MASK	device/LPC54018.h	3897;"	d
ENET_MAC_PMT_CRTL_STAT_MGKPRCVD_SHIFT	device/LPC54018.h	3898;"	d
ENET_MAC_PMT_CRTL_STAT_PWRDWN	device/LPC54018.h	3890;"	d
ENET_MAC_PMT_CRTL_STAT_PWRDWN_MASK	device/LPC54018.h	3888;"	d
ENET_MAC_PMT_CRTL_STAT_PWRDWN_SHIFT	device/LPC54018.h	3889;"	d
ENET_MAC_PMT_CRTL_STAT_RWKFILTRST	device/LPC54018.h	3914;"	d
ENET_MAC_PMT_CRTL_STAT_RWKFILTRST_MASK	device/LPC54018.h	3912;"	d
ENET_MAC_PMT_CRTL_STAT_RWKFILTRST_SHIFT	device/LPC54018.h	3913;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPFE	device/LPC54018.h	3908;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPFE_MASK	device/LPC54018.h	3906;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPFE_SHIFT	device/LPC54018.h	3907;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPKTEN	device/LPC54018.h	3896;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPKTEN_MASK	device/LPC54018.h	3894;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPKTEN_SHIFT	device/LPC54018.h	3895;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPRCVD	device/LPC54018.h	3902;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPRCVD_MASK	device/LPC54018.h	3900;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPRCVD_SHIFT	device/LPC54018.h	3901;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPTR	device/LPC54018.h	3911;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPTR_MASK	device/LPC54018.h	3909;"	d
ENET_MAC_PMT_CRTL_STAT_RWKPTR_SHIFT	device/LPC54018.h	3910;"	d
ENET_MAC_RWAKE_FRFLT_ADDR	device/LPC54018.h	3921;"	d
ENET_MAC_RWAKE_FRFLT_ADDR_MASK	device/LPC54018.h	3919;"	d
ENET_MAC_RWAKE_FRFLT_ADDR_SHIFT	device/LPC54018.h	3920;"	d
ENET_MAC_RXQ_CTRL_AVCPQ	device/LPC54018.h	3781;"	d
ENET_MAC_RXQ_CTRL_AVCPQ_MASK	device/LPC54018.h	3779;"	d
ENET_MAC_RXQ_CTRL_AVCPQ_SHIFT	device/LPC54018.h	3780;"	d
ENET_MAC_RXQ_CTRL_AVPTPQ	device/LPC54018.h	3793;"	d
ENET_MAC_RXQ_CTRL_AVPTPQ_MASK	device/LPC54018.h	3791;"	d
ENET_MAC_RXQ_CTRL_AVPTPQ_SHIFT	device/LPC54018.h	3792;"	d
ENET_MAC_RXQ_CTRL_COUNT	device/LPC54018.h	3815;"	d
ENET_MAC_RXQ_CTRL_MCBCQ	device/LPC54018.h	3802;"	d
ENET_MAC_RXQ_CTRL_MCBCQEN	device/LPC54018.h	3808;"	d
ENET_MAC_RXQ_CTRL_MCBCQEN_MASK	device/LPC54018.h	3806;"	d
ENET_MAC_RXQ_CTRL_MCBCQEN_SHIFT	device/LPC54018.h	3807;"	d
ENET_MAC_RXQ_CTRL_MCBCQ_MASK	device/LPC54018.h	3800;"	d
ENET_MAC_RXQ_CTRL_MCBCQ_SHIFT	device/LPC54018.h	3801;"	d
ENET_MAC_RXQ_CTRL_PSRQ0	device/LPC54018.h	3784;"	d
ENET_MAC_RXQ_CTRL_PSRQ0_MASK	device/LPC54018.h	3782;"	d
ENET_MAC_RXQ_CTRL_PSRQ0_SHIFT	device/LPC54018.h	3783;"	d
ENET_MAC_RXQ_CTRL_PSRQ1	device/LPC54018.h	3796;"	d
ENET_MAC_RXQ_CTRL_PSRQ1_MASK	device/LPC54018.h	3794;"	d
ENET_MAC_RXQ_CTRL_PSRQ1_SHIFT	device/LPC54018.h	3795;"	d
ENET_MAC_RXQ_CTRL_PSRQ2	device/LPC54018.h	3805;"	d
ENET_MAC_RXQ_CTRL_PSRQ2_MASK	device/LPC54018.h	3803;"	d
ENET_MAC_RXQ_CTRL_PSRQ2_SHIFT	device/LPC54018.h	3804;"	d
ENET_MAC_RXQ_CTRL_PSRQ3	device/LPC54018.h	3811;"	d
ENET_MAC_RXQ_CTRL_PSRQ3_MASK	device/LPC54018.h	3809;"	d
ENET_MAC_RXQ_CTRL_PSRQ3_SHIFT	device/LPC54018.h	3810;"	d
ENET_MAC_RXQ_CTRL_RXQ0EN	device/LPC54018.h	3787;"	d
ENET_MAC_RXQ_CTRL_RXQ0EN_MASK	device/LPC54018.h	3785;"	d
ENET_MAC_RXQ_CTRL_RXQ0EN_SHIFT	device/LPC54018.h	3786;"	d
ENET_MAC_RXQ_CTRL_RXQ1EN	device/LPC54018.h	3790;"	d
ENET_MAC_RXQ_CTRL_RXQ1EN_MASK	device/LPC54018.h	3788;"	d
ENET_MAC_RXQ_CTRL_RXQ1EN_SHIFT	device/LPC54018.h	3789;"	d
ENET_MAC_RXQ_CTRL_UPQ	device/LPC54018.h	3799;"	d
ENET_MAC_RXQ_CTRL_UPQ_MASK	device/LPC54018.h	3797;"	d
ENET_MAC_RXQ_CTRL_UPQ_SHIFT	device/LPC54018.h	3798;"	d
ENET_MAC_RXTX_STAT_EXCOL	device/LPC54018.h	3880;"	d
ENET_MAC_RXTX_STAT_EXCOL_MASK	device/LPC54018.h	3878;"	d
ENET_MAC_RXTX_STAT_EXCOL_SHIFT	device/LPC54018.h	3879;"	d
ENET_MAC_RXTX_STAT_EXDEF	device/LPC54018.h	3874;"	d
ENET_MAC_RXTX_STAT_EXDEF_MASK	device/LPC54018.h	3872;"	d
ENET_MAC_RXTX_STAT_EXDEF_SHIFT	device/LPC54018.h	3873;"	d
ENET_MAC_RXTX_STAT_LCARR	device/LPC54018.h	3871;"	d
ENET_MAC_RXTX_STAT_LCARR_MASK	device/LPC54018.h	3869;"	d
ENET_MAC_RXTX_STAT_LCARR_SHIFT	device/LPC54018.h	3870;"	d
ENET_MAC_RXTX_STAT_LCOL	device/LPC54018.h	3877;"	d
ENET_MAC_RXTX_STAT_LCOL_MASK	device/LPC54018.h	3875;"	d
ENET_MAC_RXTX_STAT_LCOL_SHIFT	device/LPC54018.h	3876;"	d
ENET_MAC_RXTX_STAT_NCARR	device/LPC54018.h	3868;"	d
ENET_MAC_RXTX_STAT_NCARR_MASK	device/LPC54018.h	3866;"	d
ENET_MAC_RXTX_STAT_NCARR_SHIFT	device/LPC54018.h	3867;"	d
ENET_MAC_RXTX_STAT_RWT	device/LPC54018.h	3883;"	d
ENET_MAC_RXTX_STAT_RWT_MASK	device/LPC54018.h	3881;"	d
ENET_MAC_RXTX_STAT_RWT_SHIFT	device/LPC54018.h	3882;"	d
ENET_MAC_RXTX_STAT_TJT	device/LPC54018.h	3865;"	d
ENET_MAC_RXTX_STAT_TJT_MASK	device/LPC54018.h	3863;"	d
ENET_MAC_RXTX_STAT_TJT_SHIFT	device/LPC54018.h	3864;"	d
ENET_MAC_RX_FLOW_CTRL_RFE	device/LPC54018.h	3761;"	d
ENET_MAC_RX_FLOW_CTRL_RFE_MASK	device/LPC54018.h	3759;"	d
ENET_MAC_RX_FLOW_CTRL_RFE_SHIFT	device/LPC54018.h	3760;"	d
ENET_MAC_RX_FLOW_CTRL_UP	device/LPC54018.h	3764;"	d
ENET_MAC_RX_FLOW_CTRL_UP_MASK	device/LPC54018.h	3762;"	d
ENET_MAC_RX_FLOW_CTRL_UP_SHIFT	device/LPC54018.h	3763;"	d
ENET_MAC_SUB_SCND_INCR_SSINC	device/LPC54018.h	4237;"	d
ENET_MAC_SUB_SCND_INCR_SSINC_MASK	device/LPC54018.h	4235;"	d
ENET_MAC_SUB_SCND_INCR_SSINC_SHIFT	device/LPC54018.h	4236;"	d
ENET_MAC_SYS_TIMESTMP_ADDEND_TSAR	device/LPC54018.h	4275;"	d
ENET_MAC_SYS_TIMESTMP_ADDEND_TSAR_MASK	device/LPC54018.h	4273;"	d
ENET_MAC_SYS_TIMESTMP_ADDEND_TSAR_SHIFT	device/LPC54018.h	4274;"	d
ENET_MAC_SYS_TIMESTMP_STAT_TSSOVF	device/LPC54018.h	4289;"	d
ENET_MAC_SYS_TIMESTMP_STAT_TSSOVF_MASK	device/LPC54018.h	4287;"	d
ENET_MAC_SYS_TIMESTMP_STAT_TSSOVF_SHIFT	device/LPC54018.h	4288;"	d
ENET_MAC_SYS_TIME_HWORD_SCND_TSHWR	device/LPC54018.h	4282;"	d
ENET_MAC_SYS_TIME_HWORD_SCND_TSHWR_MASK	device/LPC54018.h	4280;"	d
ENET_MAC_SYS_TIME_HWORD_SCND_TSHWR_SHIFT	device/LPC54018.h	4281;"	d
ENET_MAC_SYS_TIME_NSCND_TSSS	device/LPC54018.h	4251;"	d
ENET_MAC_SYS_TIME_NSCND_TSSS_MASK	device/LPC54018.h	4249;"	d
ENET_MAC_SYS_TIME_NSCND_TSSS_SHIFT	device/LPC54018.h	4250;"	d
ENET_MAC_SYS_TIME_NSCND_UPD_ADDSUB	device/LPC54018.h	4268;"	d
ENET_MAC_SYS_TIME_NSCND_UPD_ADDSUB_MASK	device/LPC54018.h	4266;"	d
ENET_MAC_SYS_TIME_NSCND_UPD_ADDSUB_SHIFT	device/LPC54018.h	4267;"	d
ENET_MAC_SYS_TIME_NSCND_UPD_TSSS	device/LPC54018.h	4265;"	d
ENET_MAC_SYS_TIME_NSCND_UPD_TSSS_MASK	device/LPC54018.h	4263;"	d
ENET_MAC_SYS_TIME_NSCND_UPD_TSSS_SHIFT	device/LPC54018.h	4264;"	d
ENET_MAC_SYS_TIME_SCND_TSS	device/LPC54018.h	4244;"	d
ENET_MAC_SYS_TIME_SCND_TSS_MASK	device/LPC54018.h	4242;"	d
ENET_MAC_SYS_TIME_SCND_TSS_SHIFT	device/LPC54018.h	4243;"	d
ENET_MAC_SYS_TIME_SCND_UPD_TSS	device/LPC54018.h	4258;"	d
ENET_MAC_SYS_TIME_SCND_UPD_TSS_MASK	device/LPC54018.h	4256;"	d
ENET_MAC_SYS_TIME_SCND_UPD_TSS_SHIFT	device/LPC54018.h	4257;"	d
ENET_MAC_TIMESTAMP_CTRL_AV8021ASMEN	device/LPC54018.h	4230;"	d
ENET_MAC_TIMESTAMP_CTRL_AV8021ASMEN_MASK	device/LPC54018.h	4228;"	d
ENET_MAC_TIMESTAMP_CTRL_AV8021ASMEN_SHIFT	device/LPC54018.h	4229;"	d
ENET_MAC_TIMESTAMP_CTRL_SNAPTYPSEL	device/LPC54018.h	4221;"	d
ENET_MAC_TIMESTAMP_CTRL_SNAPTYPSEL_MASK	device/LPC54018.h	4219;"	d
ENET_MAC_TIMESTAMP_CTRL_SNAPTYPSEL_SHIFT	device/LPC54018.h	4220;"	d
ENET_MAC_TIMESTAMP_CTRL_TADDREG	device/LPC54018.h	4194;"	d
ENET_MAC_TIMESTAMP_CTRL_TADDREG_MASK	device/LPC54018.h	4192;"	d
ENET_MAC_TIMESTAMP_CTRL_TADDREG_SHIFT	device/LPC54018.h	4193;"	d
ENET_MAC_TIMESTAMP_CTRL_TSCFUPDT	device/LPC54018.h	4182;"	d
ENET_MAC_TIMESTAMP_CTRL_TSCFUPDT_MASK	device/LPC54018.h	4180;"	d
ENET_MAC_TIMESTAMP_CTRL_TSCFUPDT_SHIFT	device/LPC54018.h	4181;"	d
ENET_MAC_TIMESTAMP_CTRL_TSCTRLSSR	device/LPC54018.h	4200;"	d
ENET_MAC_TIMESTAMP_CTRL_TSCTRLSSR_MASK	device/LPC54018.h	4198;"	d
ENET_MAC_TIMESTAMP_CTRL_TSCTRLSSR_SHIFT	device/LPC54018.h	4199;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENA	device/LPC54018.h	4179;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENALL	device/LPC54018.h	4197;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENALL_MASK	device/LPC54018.h	4195;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENALL_SHIFT	device/LPC54018.h	4196;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENA_MASK	device/LPC54018.h	4177;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENA_SHIFT	device/LPC54018.h	4178;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENMACADDR	device/LPC54018.h	4224;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENMACADDR_MASK	device/LPC54018.h	4222;"	d
ENET_MAC_TIMESTAMP_CTRL_TSENMACADDR_SHIFT	device/LPC54018.h	4223;"	d
ENET_MAC_TIMESTAMP_CTRL_TSEVTENA	device/LPC54018.h	4215;"	d
ENET_MAC_TIMESTAMP_CTRL_TSEVTENA_MASK	device/LPC54018.h	4213;"	d
ENET_MAC_TIMESTAMP_CTRL_TSEVTENA_SHIFT	device/LPC54018.h	4214;"	d
ENET_MAC_TIMESTAMP_CTRL_TSINIT	device/LPC54018.h	4185;"	d
ENET_MAC_TIMESTAMP_CTRL_TSINIT_MASK	device/LPC54018.h	4183;"	d
ENET_MAC_TIMESTAMP_CTRL_TSINIT_SHIFT	device/LPC54018.h	4184;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPENA	device/LPC54018.h	4206;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPENA_MASK	device/LPC54018.h	4204;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPENA_SHIFT	device/LPC54018.h	4205;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPV4ENA	device/LPC54018.h	4212;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPV4ENA_MASK	device/LPC54018.h	4210;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPV4ENA_SHIFT	device/LPC54018.h	4211;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPV6ENA	device/LPC54018.h	4209;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPV6ENA_MASK	device/LPC54018.h	4207;"	d
ENET_MAC_TIMESTAMP_CTRL_TSIPV6ENA_SHIFT	device/LPC54018.h	4208;"	d
ENET_MAC_TIMESTAMP_CTRL_TSMSTRENA	device/LPC54018.h	4218;"	d
ENET_MAC_TIMESTAMP_CTRL_TSMSTRENA_MASK	device/LPC54018.h	4216;"	d
ENET_MAC_TIMESTAMP_CTRL_TSMSTRENA_SHIFT	device/LPC54018.h	4217;"	d
ENET_MAC_TIMESTAMP_CTRL_TSTRIG	device/LPC54018.h	4191;"	d
ENET_MAC_TIMESTAMP_CTRL_TSTRIG_MASK	device/LPC54018.h	4189;"	d
ENET_MAC_TIMESTAMP_CTRL_TSTRIG_SHIFT	device/LPC54018.h	4190;"	d
ENET_MAC_TIMESTAMP_CTRL_TSUPDT	device/LPC54018.h	4188;"	d
ENET_MAC_TIMESTAMP_CTRL_TSUPDT_MASK	device/LPC54018.h	4186;"	d
ENET_MAC_TIMESTAMP_CTRL_TSUPDT_SHIFT	device/LPC54018.h	4187;"	d
ENET_MAC_TIMESTAMP_CTRL_TSVER2ENA	device/LPC54018.h	4203;"	d
ENET_MAC_TIMESTAMP_CTRL_TSVER2ENA_MASK	device/LPC54018.h	4201;"	d
ENET_MAC_TIMESTAMP_CTRL_TSVER2ENA_SHIFT	device/LPC54018.h	4202;"	d
ENET_MAC_TIMESTAMP_CTRL_TXTTSSTSM	device/LPC54018.h	4227;"	d
ENET_MAC_TIMESTAMP_CTRL_TXTTSSTSM_MASK	device/LPC54018.h	4225;"	d
ENET_MAC_TIMESTAMP_CTRL_TXTTSSTSM_SHIFT	device/LPC54018.h	4226;"	d
ENET_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC	device/LPC54018.h	4320;"	d
ENET_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC_MASK	device/LPC54018.h	4318;"	d
ENET_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_TSEC_SHIFT	device/LPC54018.h	4319;"	d
ENET_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC	device/LPC54018.h	4313;"	d
ENET_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC_MASK	device/LPC54018.h	4311;"	d
ENET_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_TSIC_SHIFT	device/LPC54018.h	4312;"	d
ENET_MAC_TXQ_PRIO_MAP_PSTQ0	device/LPC54018.h	3771;"	d
ENET_MAC_TXQ_PRIO_MAP_PSTQ0_MASK	device/LPC54018.h	3769;"	d
ENET_MAC_TXQ_PRIO_MAP_PSTQ0_SHIFT	device/LPC54018.h	3770;"	d
ENET_MAC_TXQ_PRIO_MAP_PSTQ1	device/LPC54018.h	3774;"	d
ENET_MAC_TXQ_PRIO_MAP_PSTQ1_MASK	device/LPC54018.h	3772;"	d
ENET_MAC_TXQ_PRIO_MAP_PSTQ1_SHIFT	device/LPC54018.h	3773;"	d
ENET_MAC_TX_FLOW_CTRL_Q_COUNT	device/LPC54018.h	3755;"	d
ENET_MAC_TX_FLOW_CTRL_Q_DZPQ	device/LPC54018.h	3748;"	d
ENET_MAC_TX_FLOW_CTRL_Q_DZPQ_MASK	device/LPC54018.h	3746;"	d
ENET_MAC_TX_FLOW_CTRL_Q_DZPQ_SHIFT	device/LPC54018.h	3747;"	d
ENET_MAC_TX_FLOW_CTRL_Q_FCB	device/LPC54018.h	3739;"	d
ENET_MAC_TX_FLOW_CTRL_Q_FCB_MASK	device/LPC54018.h	3737;"	d
ENET_MAC_TX_FLOW_CTRL_Q_FCB_SHIFT	device/LPC54018.h	3738;"	d
ENET_MAC_TX_FLOW_CTRL_Q_PLT	device/LPC54018.h	3745;"	d
ENET_MAC_TX_FLOW_CTRL_Q_PLT_MASK	device/LPC54018.h	3743;"	d
ENET_MAC_TX_FLOW_CTRL_Q_PLT_SHIFT	device/LPC54018.h	3744;"	d
ENET_MAC_TX_FLOW_CTRL_Q_PT	device/LPC54018.h	3751;"	d
ENET_MAC_TX_FLOW_CTRL_Q_PT_MASK	device/LPC54018.h	3749;"	d
ENET_MAC_TX_FLOW_CTRL_Q_PT_SHIFT	device/LPC54018.h	3750;"	d
ENET_MAC_TX_FLOW_CTRL_Q_TFE	device/LPC54018.h	3742;"	d
ENET_MAC_TX_FLOW_CTRL_Q_TFE_MASK	device/LPC54018.h	3740;"	d
ENET_MAC_TX_FLOW_CTRL_Q_TFE_SHIFT	device/LPC54018.h	3741;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSTSLO	device/LPC54018.h	4296;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSTSLO_MASK	device/LPC54018.h	4294;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSTSLO_SHIFT	device/LPC54018.h	4295;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSTSMIS	device/LPC54018.h	4299;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSTSMIS_MASK	device/LPC54018.h	4297;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_TXTSSTSMIS_SHIFT	device/LPC54018.h	4298;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSTSHI	device/LPC54018.h	4306;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSTSHI_MASK	device/LPC54018.h	4304;"	d
ENET_MAC_TX_TIMESTAMP_STATUS_SECONDS_TXTSSTSHI_SHIFT	device/LPC54018.h	4305;"	d
ENET_MAC_VERSION_SNPVER	device/LPC54018.h	3989;"	d
ENET_MAC_VERSION_SNPVER_MASK	device/LPC54018.h	3987;"	d
ENET_MAC_VERSION_SNPVER_SHIFT	device/LPC54018.h	3988;"	d
ENET_MAC_VERSION_USERVER	device/LPC54018.h	3992;"	d
ENET_MAC_VERSION_USERVER_MASK	device/LPC54018.h	3990;"	d
ENET_MAC_VERSION_USERVER_SHIFT	device/LPC54018.h	3991;"	d
ENET_MAC_VLAN_TAG_DOVLTC	device/LPC54018.h	3711;"	d
ENET_MAC_VLAN_TAG_DOVLTC_MASK	device/LPC54018.h	3709;"	d
ENET_MAC_VLAN_TAG_DOVLTC_SHIFT	device/LPC54018.h	3710;"	d
ENET_MAC_VLAN_TAG_EDVLP	device/LPC54018.h	3723;"	d
ENET_MAC_VLAN_TAG_EDVLP_MASK	device/LPC54018.h	3721;"	d
ENET_MAC_VLAN_TAG_EDVLP_SHIFT	device/LPC54018.h	3722;"	d
ENET_MAC_VLAN_TAG_EIVLRXS	device/LPC54018.h	3732;"	d
ENET_MAC_VLAN_TAG_EIVLRXS_MASK	device/LPC54018.h	3730;"	d
ENET_MAC_VLAN_TAG_EIVLRXS_SHIFT	device/LPC54018.h	3731;"	d
ENET_MAC_VLAN_TAG_EIVLS	device/LPC54018.h	3729;"	d
ENET_MAC_VLAN_TAG_EIVLS_MASK	device/LPC54018.h	3727;"	d
ENET_MAC_VLAN_TAG_EIVLS_SHIFT	device/LPC54018.h	3728;"	d
ENET_MAC_VLAN_TAG_ERIVLT	device/LPC54018.h	3726;"	d
ENET_MAC_VLAN_TAG_ERIVLT_MASK	device/LPC54018.h	3724;"	d
ENET_MAC_VLAN_TAG_ERIVLT_SHIFT	device/LPC54018.h	3725;"	d
ENET_MAC_VLAN_TAG_ERSVLM	device/LPC54018.h	3708;"	d
ENET_MAC_VLAN_TAG_ERSVLM_MASK	device/LPC54018.h	3706;"	d
ENET_MAC_VLAN_TAG_ERSVLM_SHIFT	device/LPC54018.h	3707;"	d
ENET_MAC_VLAN_TAG_ESVL	device/LPC54018.h	3705;"	d
ENET_MAC_VLAN_TAG_ESVL_MASK	device/LPC54018.h	3703;"	d
ENET_MAC_VLAN_TAG_ESVL_SHIFT	device/LPC54018.h	3704;"	d
ENET_MAC_VLAN_TAG_ETV	device/LPC54018.h	3699;"	d
ENET_MAC_VLAN_TAG_ETV_MASK	device/LPC54018.h	3697;"	d
ENET_MAC_VLAN_TAG_ETV_SHIFT	device/LPC54018.h	3698;"	d
ENET_MAC_VLAN_TAG_EVLRXS	device/LPC54018.h	3717;"	d
ENET_MAC_VLAN_TAG_EVLRXS_MASK	device/LPC54018.h	3715;"	d
ENET_MAC_VLAN_TAG_EVLRXS_SHIFT	device/LPC54018.h	3716;"	d
ENET_MAC_VLAN_TAG_EVLS	device/LPC54018.h	3714;"	d
ENET_MAC_VLAN_TAG_EVLS_MASK	device/LPC54018.h	3712;"	d
ENET_MAC_VLAN_TAG_EVLS_SHIFT	device/LPC54018.h	3713;"	d
ENET_MAC_VLAN_TAG_VL	device/LPC54018.h	3696;"	d
ENET_MAC_VLAN_TAG_VL_MASK	device/LPC54018.h	3694;"	d
ENET_MAC_VLAN_TAG_VL_SHIFT	device/LPC54018.h	3695;"	d
ENET_MAC_VLAN_TAG_VTHM	device/LPC54018.h	3720;"	d
ENET_MAC_VLAN_TAG_VTHM_MASK	device/LPC54018.h	3718;"	d
ENET_MAC_VLAN_TAG_VTHM_SHIFT	device/LPC54018.h	3719;"	d
ENET_MAC_VLAN_TAG_VTIM	device/LPC54018.h	3702;"	d
ENET_MAC_VLAN_TAG_VTIM_MASK	device/LPC54018.h	3700;"	d
ENET_MAC_VLAN_TAG_VTIM_SHIFT	device/LPC54018.h	3701;"	d
ENET_MAC_WD_TIMEROUT_PWE	device/LPC54018.h	3689;"	d
ENET_MAC_WD_TIMEROUT_PWE_MASK	device/LPC54018.h	3687;"	d
ENET_MAC_WD_TIMEROUT_PWE_SHIFT	device/LPC54018.h	3688;"	d
ENET_MAC_WD_TIMEROUT_WTO	device/LPC54018.h	3686;"	d
ENET_MAC_WD_TIMEROUT_WTO_MASK	device/LPC54018.h	3684;"	d
ENET_MAC_WD_TIMEROUT_WTO_SHIFT	device/LPC54018.h	3685;"	d
ENET_MICRSECS_ONESECOND	drivers/fsl_enet.c	77;"	d	file:
ENET_MIN_RINGLEN	drivers/fsl_enet.c	86;"	d	file:
ENET_MTL_INTR_STAT_Q0IS	device/LPC54018.h	4346;"	d
ENET_MTL_INTR_STAT_Q0IS_MASK	device/LPC54018.h	4344;"	d
ENET_MTL_INTR_STAT_Q0IS_SHIFT	device/LPC54018.h	4345;"	d
ENET_MTL_INTR_STAT_Q1IS	device/LPC54018.h	4349;"	d
ENET_MTL_INTR_STAT_Q1IS_MASK	device/LPC54018.h	4347;"	d
ENET_MTL_INTR_STAT_Q1IS_SHIFT	device/LPC54018.h	4348;"	d
ENET_MTL_OP_MODE_CNTCLR	device/LPC54018.h	4339;"	d
ENET_MTL_OP_MODE_CNTCLR_MASK	device/LPC54018.h	4337;"	d
ENET_MTL_OP_MODE_CNTCLR_SHIFT	device/LPC54018.h	4338;"	d
ENET_MTL_OP_MODE_CNTPRST	device/LPC54018.h	4336;"	d
ENET_MTL_OP_MODE_CNTPRST_MASK	device/LPC54018.h	4334;"	d
ENET_MTL_OP_MODE_CNTPRST_SHIFT	device/LPC54018.h	4335;"	d
ENET_MTL_OP_MODE_DTXSTS	device/LPC54018.h	4327;"	d
ENET_MTL_OP_MODE_DTXSTS_MASK	device/LPC54018.h	4325;"	d
ENET_MTL_OP_MODE_DTXSTS_SHIFT	device/LPC54018.h	4326;"	d
ENET_MTL_OP_MODE_RAA	device/LPC54018.h	4330;"	d
ENET_MTL_OP_MODE_RAA_MASK	device/LPC54018.h	4328;"	d
ENET_MTL_OP_MODE_RAA_SHIFT	device/LPC54018.h	4329;"	d
ENET_MTL_OP_MODE_SCHALG	device/LPC54018.h	4333;"	d
ENET_MTL_OP_MODE_SCHALG_MASK	device/LPC54018.h	4331;"	d
ENET_MTL_OP_MODE_SCHALG_SHIFT	device/LPC54018.h	4332;"	d
ENET_MTL_QUEUE_MTL_RXQX_CTRL_COUNT	device/LPC54018.h	4590;"	d
ENET_MTL_QUEUE_MTL_RXQX_CTRL_RXQ_FRM_ARBIT	device/LPC54018.h	4586;"	d
ENET_MTL_QUEUE_MTL_RXQX_CTRL_RXQ_FRM_ARBIT_MASK	device/LPC54018.h	4584;"	d
ENET_MTL_QUEUE_MTL_RXQX_CTRL_RXQ_FRM_ARBIT_SHIFT	device/LPC54018.h	4585;"	d
ENET_MTL_QUEUE_MTL_RXQX_CTRL_RXQ_WEGT	device/LPC54018.h	4583;"	d
ENET_MTL_QUEUE_MTL_RXQX_CTRL_RXQ_WEGT_MASK	device/LPC54018.h	4581;"	d
ENET_MTL_QUEUE_MTL_RXQX_CTRL_RXQ_WEGT_SHIFT	device/LPC54018.h	4582;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_COUNT	device/LPC54018.h	4577;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_PRXQ	device/LPC54018.h	4573;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_PRXQ_MASK	device/LPC54018.h	4571;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_PRXQ_SHIFT	device/LPC54018.h	4572;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RRCSTS	device/LPC54018.h	4567;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RRCSTS_MASK	device/LPC54018.h	4565;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RRCSTS_SHIFT	device/LPC54018.h	4566;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RWCSTS	device/LPC54018.h	4564;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RWCSTS_MASK	device/LPC54018.h	4562;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RWCSTS_SHIFT	device/LPC54018.h	4563;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RXQSTS	device/LPC54018.h	4570;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RXQSTS_MASK	device/LPC54018.h	4568;"	d
ENET_MTL_QUEUE_MTL_RXQX_DBG_RXQSTS_SHIFT	device/LPC54018.h	4569;"	d
ENET_MTL_QUEUE_MTL_RXQX_MISSPKT_OVRFLW_CNT_COUNT	device/LPC54018.h	4558;"	d
ENET_MTL_QUEUE_MTL_RXQX_MISSPKT_OVRFLW_CNT_OVFCNTOVF	device/LPC54018.h	4554;"	d
ENET_MTL_QUEUE_MTL_RXQX_MISSPKT_OVRFLW_CNT_OVFCNTOVF_MASK	device/LPC54018.h	4552;"	d
ENET_MTL_QUEUE_MTL_RXQX_MISSPKT_OVRFLW_CNT_OVFCNTOVF_SHIFT	device/LPC54018.h	4553;"	d
ENET_MTL_QUEUE_MTL_RXQX_MISSPKT_OVRFLW_CNT_OVFPKTCNT	device/LPC54018.h	4551;"	d
ENET_MTL_QUEUE_MTL_RXQX_MISSPKT_OVRFLW_CNT_OVFPKTCNT_MASK	device/LPC54018.h	4549;"	d
ENET_MTL_QUEUE_MTL_RXQX_MISSPKT_OVRFLW_CNT_OVFPKTCNT_SHIFT	device/LPC54018.h	4550;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_COUNT	device/LPC54018.h	4545;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_DIS_TCP_EF	device/LPC54018.h	4538;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_DIS_TCP_EF_MASK	device/LPC54018.h	4536;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_DIS_TCP_EF_SHIFT	device/LPC54018.h	4537;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_FEP	device/LPC54018.h	4532;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_FEP_MASK	device/LPC54018.h	4530;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_FEP_SHIFT	device/LPC54018.h	4531;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_FUP	device/LPC54018.h	4529;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_FUP_MASK	device/LPC54018.h	4527;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_FUP_SHIFT	device/LPC54018.h	4528;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RQS	device/LPC54018.h	4541;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RQS_MASK	device/LPC54018.h	4539;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RQS_SHIFT	device/LPC54018.h	4540;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RSF	device/LPC54018.h	4535;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RSF_MASK	device/LPC54018.h	4533;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RSF_SHIFT	device/LPC54018.h	4534;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RTC	device/LPC54018.h	4526;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RTC_MASK	device/LPC54018.h	4524;"	d
ENET_MTL_QUEUE_MTL_RXQX_OP_MODE_RTC_SHIFT	device/LPC54018.h	4525;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_COUNT	device/LPC54018.h	4429;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_PTXQ	device/LPC54018.h	4422;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_PTXQ_MASK	device/LPC54018.h	4420;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_PTXQ_SHIFT	device/LPC54018.h	4421;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_STSXSTSF	device/LPC54018.h	4425;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_STSXSTSF_MASK	device/LPC54018.h	4423;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_STSXSTSF_SHIFT	device/LPC54018.h	4424;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TRCSTS	device/LPC54018.h	4410;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TRCSTS_MASK	device/LPC54018.h	4408;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TRCSTS_SHIFT	device/LPC54018.h	4409;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TWCSTS	device/LPC54018.h	4413;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TWCSTS_MASK	device/LPC54018.h	4411;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TWCSTS_SHIFT	device/LPC54018.h	4412;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXQPAUSED	device/LPC54018.h	4407;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXQPAUSED_MASK	device/LPC54018.h	4405;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXQPAUSED_SHIFT	device/LPC54018.h	4406;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXQSTS	device/LPC54018.h	4416;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXQSTS_MASK	device/LPC54018.h	4414;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXQSTS_SHIFT	device/LPC54018.h	4415;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXSTSFSTS	device/LPC54018.h	4419;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXSTSFSTS_MASK	device/LPC54018.h	4417;"	d
ENET_MTL_QUEUE_MTL_TXQX_DBG_TXSTSFSTS_SHIFT	device/LPC54018.h	4418;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_AVALG	device/LPC54018.h	4435;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_AVALG_MASK	device/LPC54018.h	4433;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_AVALG_SHIFT	device/LPC54018.h	4434;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_CC	device/LPC54018.h	4438;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_CC_MASK	device/LPC54018.h	4436;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_CC_SHIFT	device/LPC54018.h	4437;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_COUNT	device/LPC54018.h	4445;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_SLC	device/LPC54018.h	4441;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_SLC_MASK	device/LPC54018.h	4439;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_CTRL_SLC_SHIFT	device/LPC54018.h	4440;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_STAT_ABS	device/LPC54018.h	4451;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_STAT_ABS_MASK	device/LPC54018.h	4449;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_STAT_ABS_SHIFT	device/LPC54018.h	4450;"	d
ENET_MTL_QUEUE_MTL_TXQX_ETS_STAT_COUNT	device/LPC54018.h	4455;"	d
ENET_MTL_QUEUE_MTL_TXQX_HI_CRDT_COUNT	device/LPC54018.h	4485;"	d
ENET_MTL_QUEUE_MTL_TXQX_HI_CRDT_HC	device/LPC54018.h	4481;"	d
ENET_MTL_QUEUE_MTL_TXQX_HI_CRDT_HC_MASK	device/LPC54018.h	4479;"	d
ENET_MTL_QUEUE_MTL_TXQX_HI_CRDT_HC_SHIFT	device/LPC54018.h	4480;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_ABPSIE	device/LPC54018.h	4510;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_ABPSIE_MASK	device/LPC54018.h	4508;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_ABPSIE_SHIFT	device/LPC54018.h	4509;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_ABPSIS	device/LPC54018.h	4504;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_ABPSIS_MASK	device/LPC54018.h	4502;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_ABPSIS_SHIFT	device/LPC54018.h	4503;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_COUNT	device/LPC54018.h	4520;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_RXOIE	device/LPC54018.h	4516;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_RXOIE_MASK	device/LPC54018.h	4514;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_RXOIE_SHIFT	device/LPC54018.h	4515;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_RXOVFIS	device/LPC54018.h	4513;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_RXOVFIS_MASK	device/LPC54018.h	4511;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_RXOVFIS_SHIFT	device/LPC54018.h	4512;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_TXUIE	device/LPC54018.h	4507;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_TXUIE_MASK	device/LPC54018.h	4505;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_TXUIE_SHIFT	device/LPC54018.h	4506;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_TXUNFIS	device/LPC54018.h	4501;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_TXUNFIS_MASK	device/LPC54018.h	4499;"	d
ENET_MTL_QUEUE_MTL_TXQX_INTCTRL_STAT_TXUNFIS_SHIFT	device/LPC54018.h	4500;"	d
ENET_MTL_QUEUE_MTL_TXQX_LO_CRDT_COUNT	device/LPC54018.h	4495;"	d
ENET_MTL_QUEUE_MTL_TXQX_LO_CRDT_LC	device/LPC54018.h	4491;"	d
ENET_MTL_QUEUE_MTL_TXQX_LO_CRDT_LC_MASK	device/LPC54018.h	4489;"	d
ENET_MTL_QUEUE_MTL_TXQX_LO_CRDT_LC_SHIFT	device/LPC54018.h	4490;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_COUNT	device/LPC54018.h	4388;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_FTQ	device/LPC54018.h	4372;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_FTQ_MASK	device/LPC54018.h	4370;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_FTQ_SHIFT	device/LPC54018.h	4371;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TQS	device/LPC54018.h	4384;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TQS_MASK	device/LPC54018.h	4382;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TQS_SHIFT	device/LPC54018.h	4383;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TSF	device/LPC54018.h	4375;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TSF_MASK	device/LPC54018.h	4373;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TSF_SHIFT	device/LPC54018.h	4374;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TTC	device/LPC54018.h	4381;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TTC_MASK	device/LPC54018.h	4379;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TTC_SHIFT	device/LPC54018.h	4380;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TXQEN	device/LPC54018.h	4378;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TXQEN_MASK	device/LPC54018.h	4376;"	d
ENET_MTL_QUEUE_MTL_TXQX_OP_MODE_TXQEN_SHIFT	device/LPC54018.h	4377;"	d
ENET_MTL_QUEUE_MTL_TXQX_QNTM_WGHT_COUNT	device/LPC54018.h	4465;"	d
ENET_MTL_QUEUE_MTL_TXQX_QNTM_WGHT_ISCQW	device/LPC54018.h	4461;"	d
ENET_MTL_QUEUE_MTL_TXQX_QNTM_WGHT_ISCQW_MASK	device/LPC54018.h	4459;"	d
ENET_MTL_QUEUE_MTL_TXQX_QNTM_WGHT_ISCQW_SHIFT	device/LPC54018.h	4460;"	d
ENET_MTL_QUEUE_MTL_TXQX_SNDSLP_CRDT_COUNT	device/LPC54018.h	4475;"	d
ENET_MTL_QUEUE_MTL_TXQX_SNDSLP_CRDT_SSC	device/LPC54018.h	4471;"	d
ENET_MTL_QUEUE_MTL_TXQX_SNDSLP_CRDT_SSC_MASK	device/LPC54018.h	4469;"	d
ENET_MTL_QUEUE_MTL_TXQX_SNDSLP_CRDT_SSC_SHIFT	device/LPC54018.h	4470;"	d
ENET_MTL_QUEUE_MTL_TXQX_UNDRFLW_COUNT	device/LPC54018.h	4401;"	d
ENET_MTL_QUEUE_MTL_TXQX_UNDRFLW_UFCNTOVF	device/LPC54018.h	4397;"	d
ENET_MTL_QUEUE_MTL_TXQX_UNDRFLW_UFCNTOVF_MASK	device/LPC54018.h	4395;"	d
ENET_MTL_QUEUE_MTL_TXQX_UNDRFLW_UFCNTOVF_SHIFT	device/LPC54018.h	4396;"	d
ENET_MTL_QUEUE_MTL_TXQX_UNDRFLW_UFFRMCNT	device/LPC54018.h	4394;"	d
ENET_MTL_QUEUE_MTL_TXQX_UNDRFLW_UFFRMCNT_MASK	device/LPC54018.h	4392;"	d
ENET_MTL_QUEUE_MTL_TXQX_UNDRFLW_UFFRMCNT_SHIFT	device/LPC54018.h	4393;"	d
ENET_MTL_RXFIFOSIZE	drivers/fsl_enet.h	103;"	d
ENET_MTL_RXQ_DMA_MAP_Q0DDMACH	device/LPC54018.h	4359;"	d
ENET_MTL_RXQ_DMA_MAP_Q0DDMACH_MASK	device/LPC54018.h	4357;"	d
ENET_MTL_RXQ_DMA_MAP_Q0DDMACH_SHIFT	device/LPC54018.h	4358;"	d
ENET_MTL_RXQ_DMA_MAP_Q0MDMACH	device/LPC54018.h	4356;"	d
ENET_MTL_RXQ_DMA_MAP_Q0MDMACH_MASK	device/LPC54018.h	4354;"	d
ENET_MTL_RXQ_DMA_MAP_Q0MDMACH_SHIFT	device/LPC54018.h	4355;"	d
ENET_MTL_RXQ_DMA_MAP_Q1DDMACH	device/LPC54018.h	4365;"	d
ENET_MTL_RXQ_DMA_MAP_Q1DDMACH_MASK	device/LPC54018.h	4363;"	d
ENET_MTL_RXQ_DMA_MAP_Q1DDMACH_SHIFT	device/LPC54018.h	4364;"	d
ENET_MTL_RXQ_DMA_MAP_Q1MDMACH	device/LPC54018.h	4362;"	d
ENET_MTL_RXQ_DMA_MAP_Q1MDMACH_MASK	device/LPC54018.h	4360;"	d
ENET_MTL_RXQ_DMA_MAP_Q1MDMACH_SHIFT	device/LPC54018.h	4361;"	d
ENET_MTL_TXFIFOSIZE	drivers/fsl_enet.h	104;"	d
ENET_NANOSECS_ONESECOND	drivers/fsl_enet.c	75;"	d	file:
ENET_NORM_INT_MASK	drivers/fsl_enet.h	91;"	d
ENET_NTOHL	drivers/fsl_enet.c	103;"	d	file:
ENET_NTOHS	drivers/fsl_enet.c	102;"	d	file:
ENET_PMT_IRQS	device/LPC54018.h	4958;"	d
ENET_PTP1588_ETHL2_CLOCKID_OFFSET	drivers/fsl_enet.c	56;"	d	file:
ENET_PTP1588_ETHL2_MSGTYPE_OFFSET	drivers/fsl_enet.c	52;"	d	file:
ENET_PTP1588_ETHL2_PACKETTYPE_OFFSET	drivers/fsl_enet.c	50;"	d	file:
ENET_PTP1588_ETHL2_SEQUENCEID_OFFSET	drivers/fsl_enet.c	58;"	d	file:
ENET_PTP1588_ETHL2_VERSION_OFFSET	drivers/fsl_enet.c	54;"	d	file:
ENET_PTP1588_IPV4_UDP_CLKID_OFFSET	drivers/fsl_enet.c	30;"	d	file:
ENET_PTP1588_IPV4_UDP_CTL_OFFSET	drivers/fsl_enet.c	34;"	d	file:
ENET_PTP1588_IPV4_UDP_MSGTYPE_OFFSET	drivers/fsl_enet.c	26;"	d	file:
ENET_PTP1588_IPV4_UDP_PORT_OFFSET	drivers/fsl_enet.c	24;"	d	file:
ENET_PTP1588_IPV4_UDP_PROTOCOL_OFFSET	drivers/fsl_enet.c	22;"	d	file:
ENET_PTP1588_IPV4_UDP_SEQUENCEID_OFFSET	drivers/fsl_enet.c	32;"	d	file:
ENET_PTP1588_IPV4_UDP_VERSION_OFFSET	drivers/fsl_enet.c	28;"	d	file:
ENET_PTP1588_IPV6_UDP_CLKID_OFFSET	drivers/fsl_enet.c	44;"	d	file:
ENET_PTP1588_IPV6_UDP_CTL_OFFSET	drivers/fsl_enet.c	48;"	d	file:
ENET_PTP1588_IPV6_UDP_MSGTYPE_OFFSET	drivers/fsl_enet.c	40;"	d	file:
ENET_PTP1588_IPV6_UDP_PORT_OFFSET	drivers/fsl_enet.c	38;"	d	file:
ENET_PTP1588_IPV6_UDP_PROTOCOL_OFFSET	drivers/fsl_enet.c	36;"	d	file:
ENET_PTP1588_IPV6_UDP_SEQUENCEID_OFFSET	drivers/fsl_enet.c	46;"	d	file:
ENET_PTP1588_IPV6_UDP_VERSION_OFFSET	drivers/fsl_enet.c	42;"	d	file:
ENET_PTP1588_IPVERSION_OFFSET	drivers/fsl_enet.c	20;"	d	file:
ENET_Ptp1588CorrectTimerInCoarse	drivers/fsl_enet.c	/^void ENET_Ptp1588CorrectTimerInCoarse(ENET_Type *base, enet_systime_op operation, uint32_t second, uint32_t nanosecond)$/;"	f
ENET_Ptp1588CorrectTimerInFine	drivers/fsl_enet.h	/^static inline void ENET_Ptp1588CorrectTimerInFine(ENET_Type *base, uint32_t addend)$/;"	f
ENET_Ptp1588GetAddend	drivers/fsl_enet.h	/^static inline uint32_t ENET_Ptp1588GetAddend(ENET_Type *base)$/;"	f
ENET_Ptp1588GetTimer	drivers/fsl_enet.c	/^void ENET_Ptp1588GetTimer(ENET_Type *base, uint64_t *second, uint32_t *nanosecond)$/;"	f
ENET_Ptp1588ParseFrame	drivers/fsl_enet.c	/^static bool ENET_Ptp1588ParseFrame(uint8_t *data, enet_ptp_time_data_t *ptpTsData, bool isFastEnabled)$/;"	f	file:
ENET_Ptp1588SearchTimeRing	drivers/fsl_enet.c	/^static status_t ENET_Ptp1588SearchTimeRing(enet_ptp_time_data_ring_t *ptpTsDataRing, enet_ptp_time_data_t *ptpTimedata)$/;"	f	file:
ENET_Ptp1588UpdateTimeRing	drivers/fsl_enet.c	/^static status_t ENET_Ptp1588UpdateTimeRing(enet_ptp_time_data_ring_t *ptpTsDataRing, enet_ptp_time_data_t *ptpTimeData)$/;"	f	file:
ENET_RING_NUM_MAX	drivers/fsl_enet.h	102;"	d
ENET_RXBUFFSTORE_NUM	drivers/fsl_enet.h	115;"	d
ENET_RXBUFF_IGNORELSB_BITS	drivers/fsl_enet.c	80;"	d	file:
ENET_RXDESCRIP_RD_BUFF1VALID_MASK	drivers/fsl_enet.h	31;"	d
ENET_RXDESCRIP_RD_BUFF2VALID_MASK	drivers/fsl_enet.h	32;"	d
ENET_RXDESCRIP_RD_IOC_MASK	drivers/fsl_enet.h	33;"	d
ENET_RXDESCRIP_RD_OWN_MASK	drivers/fsl_enet.h	34;"	d
ENET_RXDESCRIP_WR_CTXT_MASK	drivers/fsl_enet.h	54;"	d
ENET_RXDESCRIP_WR_DE_MASK	drivers/fsl_enet.h	46;"	d
ENET_RXDESCRIP_WR_ERRSUM_MASK	drivers/fsl_enet.h	44;"	d
ENET_RXDESCRIP_WR_ERR_MASK	drivers/fsl_enet.h	37;"	d
ENET_RXDESCRIP_WR_FD_MASK	drivers/fsl_enet.h	53;"	d
ENET_RXDESCRIP_WR_LD_MASK	drivers/fsl_enet.h	52;"	d
ENET_RXDESCRIP_WR_OE_MASK	drivers/fsl_enet.h	48;"	d
ENET_RXDESCRIP_WR_OWN_MASK	drivers/fsl_enet.h	55;"	d
ENET_RXDESCRIP_WR_PACKETLEN_MASK	drivers/fsl_enet.h	43;"	d
ENET_RXDESCRIP_WR_PTPMSGTYPE_MASK	drivers/fsl_enet.h	39;"	d
ENET_RXDESCRIP_WR_PTPTSA_MASK	drivers/fsl_enet.h	42;"	d
ENET_RXDESCRIP_WR_PTPTYPE_MASK	drivers/fsl_enet.h	40;"	d
ENET_RXDESCRIP_WR_PTPVERSION_MASK	drivers/fsl_enet.h	41;"	d
ENET_RXDESCRIP_WR_PYLOAD_MASK	drivers/fsl_enet.h	38;"	d
ENET_RXDESCRIP_WR_RE_MASK	drivers/fsl_enet.h	47;"	d
ENET_RXDESCRIP_WR_RS0V_MASK	drivers/fsl_enet.h	49;"	d
ENET_RXDESCRIP_WR_RS1V_MASK	drivers/fsl_enet.h	50;"	d
ENET_RXDESCRIP_WR_RS2V_MASK	drivers/fsl_enet.h	51;"	d
ENET_RXDESCRIP_WR_TYPE_MASK	drivers/fsl_enet.h	45;"	d
ENET_ReadFrame	drivers/fsl_enet.c	/^status_t ENET_ReadFrame(ENET_Type *base, enet_handle_t *handle, uint8_t *data, uint32_t length, uint8_t channel)$/;"	f
ENET_ReadSMIData	drivers/fsl_enet.h	/^static inline uint16_t ENET_ReadSMIData(ENET_Type *base)$/;"	f
ENET_ReclaimTxDescriptor	drivers/fsl_enet.c	/^void ENET_ReclaimTxDescriptor(ENET_Type *base, enet_handle_t *handle, uint8_t channel)$/;"	f
ENET_RejectAllMulticast	drivers/fsl_enet.h	/^static inline void ENET_RejectAllMulticast(ENET_Type *base)$/;"	f
ENET_RxDescriptorsInit	drivers/fsl_enet.c	/^static status_t ENET_RxDescriptorsInit($/;"	f	file:
ENET_SYSTIME_REQUIRED_CLK_MHZ	drivers/fsl_enet.c	90;"	d	file:
ENET_SendFrame	drivers/fsl_enet.c	/^status_t ENET_SendFrame(ENET_Type *base, enet_handle_t *handle, uint8_t *data, uint32_t length)$/;"	f
ENET_SetDMAControl	drivers/fsl_enet.c	/^static void ENET_SetDMAControl(ENET_Type *base, const enet_config_t *config)$/;"	f	file:
ENET_SetMII	drivers/fsl_enet.h	/^static inline void ENET_SetMII(ENET_Type *base, enet_mii_speed_t speed, enet_mii_duplex_t duplex)$/;"	f
ENET_SetMTL	drivers/fsl_enet.c	/^static void ENET_SetMTL(ENET_Type *base, const enet_config_t *config)$/;"	f	file:
ENET_SetMacAddr	drivers/fsl_enet.h	/^static inline void ENET_SetMacAddr(ENET_Type *base, uint8_t *macAddr)$/;"	f
ENET_SetMacControl	drivers/fsl_enet.c	/^static void ENET_SetMacControl(ENET_Type *base, const enet_config_t *config, uint8_t *macAddr)$/;"	f	file:
ENET_SetPtp1588	drivers/fsl_enet.c	/^static void ENET_SetPtp1588(ENET_Type *base, const enet_config_t *config, uint32_t refClk_Hz)$/;"	f	file:
ENET_SetSMI	drivers/fsl_enet.c	/^void ENET_SetSMI(ENET_Type *base)$/;"	f
ENET_SetSYSControl	drivers/fsl_enet.c	/^static void ENET_SetSYSControl(enet_mii_mode_t miiMode)$/;"	f	file:
ENET_SetupTxDescriptor	drivers/fsl_enet.c	/^void ENET_SetupTxDescriptor(enet_tx_bd_struct_t *txDesc,$/;"	f
ENET_StartRxTx	drivers/fsl_enet.c	/^void ENET_StartRxTx(ENET_Type *base, uint8_t txRingNum, uint8_t rxRingNum)$/;"	f
ENET_StartSMIRead	drivers/fsl_enet.c	/^void ENET_StartSMIRead(ENET_Type *base, uint32_t phyAddr, uint32_t phyReg)$/;"	f
ENET_StartSMIWrite	drivers/fsl_enet.c	/^void ENET_StartSMIWrite(ENET_Type *base, uint32_t phyAddr, uint32_t phyReg, uint32_t data)$/;"	f
ENET_StoreRxFrameTime	drivers/fsl_enet.c	/^static status_t ENET_StoreRxFrameTime(ENET_Type *base,$/;"	f	file:
ENET_TXDESCRIP_RD_BL1	drivers/fsl_enet.h	63;"	d
ENET_TXDESCRIP_RD_BL1_MASK	drivers/fsl_enet.h	61;"	d
ENET_TXDESCRIP_RD_BL2	drivers/fsl_enet.h	64;"	d
ENET_TXDESCRIP_RD_BL2_MASK	drivers/fsl_enet.h	62;"	d
ENET_TXDESCRIP_RD_CIC	drivers/fsl_enet.h	70;"	d
ENET_TXDESCRIP_RD_CPC	drivers/fsl_enet.h	74;"	d
ENET_TXDESCRIP_RD_CTXT_MASK	drivers/fsl_enet.h	78;"	d
ENET_TXDESCRIP_RD_FD_MASK	drivers/fsl_enet.h	77;"	d
ENET_TXDESCRIP_RD_FL	drivers/fsl_enet.h	69;"	d
ENET_TXDESCRIP_RD_FL_MASK	drivers/fsl_enet.h	68;"	d
ENET_TXDESCRIP_RD_IOC_MASK	drivers/fsl_enet.h	66;"	d
ENET_TXDESCRIP_RD_LDFD	drivers/fsl_enet.h	75;"	d
ENET_TXDESCRIP_RD_LD_MASK	drivers/fsl_enet.h	76;"	d
ENET_TXDESCRIP_RD_OWN_MASK	drivers/fsl_enet.h	79;"	d
ENET_TXDESCRIP_RD_SAIC	drivers/fsl_enet.h	73;"	d
ENET_TXDESCRIP_RD_SLOT	drivers/fsl_enet.h	72;"	d
ENET_TXDESCRIP_RD_TSE_MASK	drivers/fsl_enet.h	71;"	d
ENET_TXDESCRIP_RD_TTSE_MASK	drivers/fsl_enet.h	65;"	d
ENET_TXDESCRIP_WB_TTSS_MASK	drivers/fsl_enet.h	82;"	d
ENET_TxDescriptorsInit	drivers/fsl_enet.c	/^static status_t ENET_TxDescriptorsInit(ENET_Type *base,$/;"	f	file:
ENET_Type	device/LPC54018.h	/^} ENET_Type;$/;"	t	typeref:struct:__anon154
ENET_UDPVERSION	drivers/fsl_enet.c	68;"	d	file:
ENET_UpdateRxDescriptor	drivers/fsl_enet.c	/^void ENET_UpdateRxDescriptor($/;"	f
ENET_UpdateRxDescriptorTail	drivers/fsl_enet.h	/^static inline void ENET_UpdateRxDescriptorTail(ENET_Type *base, uint8_t channel, uint32_t rxDescTailAddrAlign)$/;"	f
ENET_UpdateTxDescriptorTail	drivers/fsl_enet.h	/^static inline void ENET_UpdateTxDescriptorTail(ENET_Type *base, uint8_t channel, uint32_t txDescTailAddrAlign)$/;"	f
ENET_WAKEUPFILTER_NUM	drivers/fsl_enet.c	88;"	d	file:
ENFILE	lwip/src/include/lwip/errno.h	70;"	d
ENOANO	lwip/src/include/lwip/errno.h	102;"	d
ENOBUFS	lwip/src/include/lwip/errno.h	154;"	d
ENOCSI	lwip/src/include/lwip/errno.h	97;"	d
ENODATA	lwip/src/include/lwip/errno.h	110;"	d
ENODEV	lwip/src/include/lwip/errno.h	66;"	d
ENOENT	lwip/src/include/lwip/errno.h	49;"	d
ENOEXEC	lwip/src/include/lwip/errno.h	55;"	d
ENOLCK	lwip/src/include/lwip/errno.h	84;"	d
ENOLINK	lwip/src/include/lwip/errno.h	116;"	d
ENOMEDIUM	lwip/src/include/lwip/errno.h	173;"	d
ENOMEM	lwip/src/include/lwip/errno.h	59;"	d
ENOMSG	lwip/src/include/lwip/errno.h	89;"	d
ENONET	lwip/src/include/lwip/errno.h	113;"	d
ENOPKG	lwip/src/include/lwip/errno.h	114;"	d
ENOPROTOOPT	lwip/src/include/lwip/errno.h	141;"	d
ENOSPC	lwip/src/include/lwip/errno.h	75;"	d
ENOSR	lwip/src/include/lwip/errno.h	112;"	d
ENOSTR	lwip/src/include/lwip/errno.h	109;"	d
ENOSYS	lwip/src/include/lwip/errno.h	85;"	d
ENOTBLK	lwip/src/include/lwip/errno.h	62;"	d
ENOTCONN	lwip/src/include/lwip/errno.h	156;"	d
ENOTDIR	lwip/src/include/lwip/errno.h	67;"	d
ENOTEMPTY	lwip/src/include/lwip/errno.h	86;"	d
ENOTNAM	lwip/src/include/lwip/errno.h	167;"	d
ENOTSOCK	lwip/src/include/lwip/errno.h	137;"	d
ENOTTY	lwip/src/include/lwip/errno.h	72;"	d
ENOTUNIQ	lwip/src/include/lwip/errno.h	125;"	d
ENXIO	lwip/src/include/lwip/errno.h	53;"	d
EOB_Run	emwin/emWin_header/GUI_JPEG_Private.h	/^  int EOB_Run;                  \/\/ 'End Of Band' run$/;"	m	struct:GUI_JPEG_DCONTEXT
EOH	usb/device/class/usb_device_video.h	/^            uint8_t EOH : 1U; \/*!< End of Header. This bit, when set, indicates the end of the BFH fields.*\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
EOI	usb/device/class/usb_device_video.h	/^            uint8_t EOI : 1U; \/*!< End of Frame. This bit indicates the end of a video frame and is set in the last$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
EOPNOTSUPP	lwip/src/include/lwip/errno.h	144;"	d
EOVERFLOW	lwip/src/include/lwip/errno.h	124;"	d
EPBUFCFG	device/LPC54018.h	/^  __IO uint32_t EPBUFCFG;                          \/**< USB Endpoint Buffer Configuration register, offset: 0x1C *\/$/;"	m	struct:__anon187
EPBUFCFG	device/LPC54018.h	/^  __IO uint32_t EPBUFCFG;                          \/**< USB Endpoint Buffer Configuration register, offset: 0x1C *\/$/;"	m	struct:__anon189
EPD_IP	lwip/src/include/netif/ppp/ppp_impl.h	240;"	d
EPD_LOCAL	lwip/src/include/netif/ppp/ppp_impl.h	239;"	d
EPD_MAC	lwip/src/include/netif/ppp/ppp_impl.h	241;"	d
EPD_MAGIC	lwip/src/include/netif/ppp/ppp_impl.h	242;"	d
EPD_NULL	lwip/src/include/netif/ppp/ppp_impl.h	238;"	d
EPD_PHONENUM	lwip/src/include/netif/ppp/ppp_impl.h	243;"	d
EPERM	lwip/src/include/lwip/errno.h	48;"	d
EPFNOSUPPORT	lwip/src/include/lwip/errno.h	145;"	d
EPINUSE	device/LPC54018.h	/^  __IO uint32_t EPINUSE;                           \/**< USB Endpoint Buffer in use, offset: 0x18 *\/$/;"	m	struct:__anon187
EPINUSE	device/LPC54018.h	/^  __IO uint32_t EPINUSE;                           \/**< USB Endpoint Buffer in use, offset: 0x18 *\/$/;"	m	struct:__anon189
EPIPE	lwip/src/include/lwip/errno.h	79;"	d
EPLISTSTART	device/LPC54018.h	/^  __IO uint32_t EPLISTSTART;                       \/**< USB EP Command\/Status List start address, offset: 0x8 *\/$/;"	m	struct:__anon187
EPLISTSTART	device/LPC54018.h	/^  __IO uint32_t EPLISTSTART;                       \/**< USB EP Command\/Status List start address, offset: 0x8 *\/$/;"	m	struct:__anon189
EPROTO	lwip/src/include/lwip/errno.h	120;"	d
EPROTONOSUPPORT	lwip/src/include/lwip/errno.h	142;"	d
EPROTOTYPE	lwip/src/include/lwip/errno.h	140;"	d
EPSKIP	device/LPC54018.h	/^  __IO uint32_t EPSKIP;                            \/**< USB Endpoint skip, offset: 0x14 *\/$/;"	m	struct:__anon187
EPSKIP	device/LPC54018.h	/^  __IO uint32_t EPSKIP;                            \/**< USB Endpoint skip, offset: 0x14 *\/$/;"	m	struct:__anon189
EPTOGGLE	device/LPC54018.h	/^  __I  uint32_t EPTOGGLE;                          \/**< USB Endpoint toggle register, offset: 0x34 *\/$/;"	m	struct:__anon189
EPTOGGLE	device/LPC54018.h	/^  __IO uint32_t EPTOGGLE;                          \/**< USB Endpoint toggle register, offset: 0x34 *\/$/;"	m	struct:__anon187
ERANGE	lwip/src/include/lwip/errno.h	81;"	d
EREMCHG	lwip/src/include/lwip/errno.h	127;"	d
EREMOTE	lwip/src/include/lwip/errno.h	115;"	d
EREMOTEIO	lwip/src/include/lwip/errno.h	170;"	d
ERESTART	lwip/src/include/lwip/errno.h	134;"	d
EROFS	lwip/src/include/lwip/errno.h	77;"	d
ERR	usb/device/class/usb_device_video.h	/^            uint8_t ERR : 1U; \/*!< Error Bit. This bit, when set, indicates an error in the device streaming.*\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
ERRINT	device/LPC54018.h	/^    __IO uint32_t ERRINT;                            \/**< Error Interrupt status for all DMA channels., array offset: 0x40, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
ERR_ABRT	lwip/src/include/lwip/err.h	/^  ERR_ABRT       = -13,$/;"	e	enum:__anon450
ERR_ALREADY	lwip/src/include/lwip/err.h	/^  ERR_ALREADY    = -9,$/;"	e	enum:__anon450
ERR_ARG	lwip/src/include/lwip/err.h	/^  ERR_ARG        = -16$/;"	e	enum:__anon450
ERR_BUF	lwip/src/include/lwip/err.h	/^  ERR_BUF        = -2,$/;"	e	enum:__anon450
ERR_CLSD	lwip/src/include/lwip/err.h	/^  ERR_CLSD       = -15,$/;"	e	enum:__anon450
ERR_CONN	lwip/src/include/lwip/err.h	/^  ERR_CONN       = -11,$/;"	e	enum:__anon450
ERR_IF	lwip/src/include/lwip/err.h	/^  ERR_IF         = -12,$/;"	e	enum:__anon450
ERR_INPROGRESS	lwip/src/include/lwip/err.h	/^  ERR_INPROGRESS = -5,$/;"	e	enum:__anon450
ERR_ISCONN	lwip/src/include/lwip/err.h	/^  ERR_ISCONN     = -10,$/;"	e	enum:__anon450
ERR_MEM	lwip/src/include/lwip/err.h	/^  ERR_MEM        = -1,$/;"	e	enum:__anon450
ERR_OK	lwip/src/include/lwip/err.h	/^  ERR_OK         = 0,$/;"	e	enum:__anon450
ERR_RST	lwip/src/include/lwip/err.h	/^  ERR_RST        = -14,$/;"	e	enum:__anon450
ERR_RTE	lwip/src/include/lwip/err.h	/^  ERR_RTE        = -4,$/;"	e	enum:__anon450
ERR_TIMEOUT	lwip/src/include/lwip/err.h	/^  ERR_TIMEOUT    = -3,$/;"	e	enum:__anon450
ERR_USE	lwip/src/include/lwip/err.h	/^  ERR_USE        = -8,$/;"	e	enum:__anon450
ERR_VAL	lwip/src/include/lwip/err.h	/^  ERR_VAL        = -6,$/;"	e	enum:__anon450
ERR_WOULDBLOCK	lwip/src/include/lwip/err.h	/^  ERR_WOULDBLOCK = -7,$/;"	e	enum:__anon450
ESCAPE_P	lwip/src/netif/ppp/pppos.c	94;"	d	file:
ESHUTDOWN	lwip/src/include/lwip/errno.h	157;"	d
ESOCKTNOSUPPORT	lwip/src/include/lwip/errno.h	143;"	d
ESPIPE	lwip/src/include/lwip/errno.h	76;"	d
ESRCH	lwip/src/include/lwip/errno.h	50;"	d
ESRMNT	lwip/src/include/lwip/errno.h	118;"	d
ESTABLISHED	lwip/src/include/lwip/tcpbase.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	lwip/src/include/lwip/errno.h	165;"	d
ESTRPIPE	lwip/src/include/lwip/errno.h	135;"	d
EST_EBNO	codec2/fsk.c	39;"	d	file:
ETHARP_DEBUG	lwip/src/include/lwip/opt.h	3260;"	d
ETHARP_FLAG_FIND_ONLY	lwip/src/core/ipv4/etharp.c	114;"	d	file:
ETHARP_FLAG_STATIC_ENTRY	lwip/src/core/ipv4/etharp.c	116;"	d	file:
ETHARP_FLAG_TRY_HARD	lwip/src/core/ipv4/etharp.c	113;"	d	file:
ETHARP_HWADDR_LEN	lwip/src/include/lwip/prot/etharp.h	48;"	d
ETHARP_SET_ADDRHINT	lwip/src/core/ipv4/etharp.c	120;"	d	file:
ETHARP_SET_ADDRHINT	lwip/src/core/ipv4/etharp.c	123;"	d	file:
ETHARP_STATE_EMPTY	lwip/src/core/ipv4/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	lwip/src/core/ipv4/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	lwip/src/core/ipv4/etharp.c	/^  ETHARP_STATE_STABLE,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE_REREQUESTING_1	lwip/src/core/ipv4/etharp.c	/^  ETHARP_STATE_STABLE_REREQUESTING_1,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE_REREQUESTING_2	lwip/src/core/ipv4/etharp.c	/^  ETHARP_STATE_STABLE_REREQUESTING_2$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STATIC	lwip/src/core/ipv4/etharp.c	/^  , ETHARP_STATE_STATIC$/;"	e	enum:etharp_state	file:
ETHARP_STATS	lwip/src/include/lwip/opt.h	2122;"	d
ETHARP_STATS	lwip/src/include/lwip/opt.h	2236;"	d
ETHARP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	374;"	d
ETHARP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	377;"	d
ETHARP_STATS_INC	lwip/src/include/lwip/stats.h	373;"	d
ETHARP_STATS_INC	lwip/src/include/lwip/stats.h	376;"	d
ETHARP_SUPPORT_STATIC_ENTRIES	lwip/src/include/lwip/opt.h	699;"	d
ETHARP_SUPPORT_VLAN	lwip/src/include/lwip/opt.h	677;"	d
ETHARP_TABLE_MATCH_NETIF	lwip/src/include/lwip/opt.h	707;"	d
ETHERNET_DriverIRQHandler	drivers/fsl_enet.c	/^void ETHERNET_DriverIRQHandler(void)$/;"	f
ETHERNET_IRQHandler	startup/startup_lpc54018.c	/^WEAK void ETHERNET_IRQHandler(void)$/;"	f
ETHERNET_IRQn	device/LPC54018.h	/^  ETHERNET_IRQn                = 49,               \/**< Ethernet *\/$/;"	e	enum:IRQn
ETHERNET_MACLP_IRQHandler	startup/startup_lpc54018.c	/^WEAK void ETHERNET_MACLP_IRQHandler(void)$/;"	f
ETHERNET_MACLP_IRQn	device/LPC54018.h	/^  ETHERNET_MACLP_IRQn          = 51,               \/**< Ethernet MAC interrupt *\/$/;"	e	enum:IRQn
ETHERNET_PMT_IRQHandler	startup/startup_lpc54018.c	/^WEAK void ETHERNET_PMT_IRQHandler(void)$/;"	f
ETHERNET_PMT_IRQn	device/LPC54018.h	/^  ETHERNET_PMT_IRQn            = 50,               \/**< Ethernet power management interrupt *\/$/;"	e	enum:IRQn
ETHPHYSEL	device/LPC54018.h	/^  __IO uint32_t ETHPHYSEL;                         \/**< Ethernet PHY Selection, offset: 0x450 *\/$/;"	m	struct:__anon185
ETHSBDCTRL	device/LPC54018.h	/^  __IO uint32_t ETHSBDCTRL;                        \/**< Ethernet SBD flow control, offset: 0x454 *\/$/;"	m	struct:__anon185
ETHTYPE_ARP	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_ARP       = 0x0806U, $/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_ETHERCAT	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_ETHERCAT  = 0x88A4U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_IP	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_IP        = 0x0800U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_IPV6	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_IPV6      = 0x86DDU,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_JUMBO	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_JUMBO     = 0x8870U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_LLDP	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_LLDP      = 0x88CCU,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_MRP	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_MRP       = 0x88E3U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_PPPOE	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_PPPOE     = 0x8864U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_PPPOEDISC	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_PPPOEDISC = 0x8863U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_PROFINET	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_PROFINET  = 0x8892U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_PTP	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_PTP       = 0x88F7U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_QINQ	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_QINQ      = 0x9100U$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_RARP	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_RARP      = 0x8035U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_SERCOS	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_SERCOS    = 0x88CDU,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_VLAN	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_VLAN      = 0x8100U,$/;"	e	enum:lwip_ieee_eth_type
ETHTYPE_WOL	lwip/src/include/lwip/prot/ieee.h	/^  ETHTYPE_WOL       = 0x0842U,$/;"	e	enum:lwip_ieee_eth_type
ETH_ADDR	lwip/src/include/lwip/prot/ethernet.h	69;"	d
ETH_CLOCKS	drivers/fsl_clock.h	232;"	d
ETH_HWADDR_LEN	lwip/src/include/lwip/prot/ethernet.h	49;"	d
ETH_HWADDR_LEN	lwip/src/include/lwip/prot/ethernet.h	51;"	d
ETH_PAD_SIZE	lwip/src/include/lwip/opt.h	692;"	d
ETH_RST	drivers/fsl_reset.h	129;"	d
ETIME	lwip/src/include/lwip/errno.h	111;"	d
ETIMEDOUT	lwip/src/include/lwip/errno.h	159;"	d
ETOOMANYREFS	lwip/src/include/lwip/errno.h	158;"	d
ETSCC	device/LPC54018.h	/^  __IO uint32_t ETSCC;                             \/**< External Timestamp Counter Configuration, offset: 0x400 *\/$/;"	m	struct:__anon142
ETSCV	device/LPC54018.h	/^  __IO uint32_t ETSCV;                             \/**< External Timestamp Counter Value, offset: 0x600 *\/$/;"	m	struct:__anon142
ETXTBSY	lwip/src/include/lwip/errno.h	73;"	d
EUCLEAN	lwip/src/include/lwip/errno.h	166;"	d
EUI64_H	lwip/src/include/netif/ppp/eui64.h	42;"	d
EUNATCH	lwip/src/include/lwip/errno.h	96;"	d
EUSERS	lwip/src/include/lwip/errno.h	136;"	d
EVEN	device/LPC54018.h	/^  __IO uint32_t EVEN;                              \/**< SCT event interrupt enable register, offset: 0xF0 *\/$/;"	m	struct:__anon172
EVENT	device/LPC54018.h	/^  } EVENT[16];$/;"	m	struct:__anon172	typeref:struct:__anon172::__anon175
EVENT_GROUPS_H	amazon-freertos/include/event_groups.h	29;"	d
EVFLAG	device/LPC54018.h	/^  __IO uint32_t EVFLAG;                            \/**< SCT event flag register, offset: 0xF4 *\/$/;"	m	struct:__anon172
EWOULDBLOCK	lwip/src/include/lwip/errno.h	88;"	d
EXAMPLE_MASTER_SPI_SPOL	source/main.c	130;"	d	file:
EXAMPLE_SPI_MASTER	source/main.c	127;"	d	file:
EXAMPLE_SPI_MASTER_IRQ	source/main.c	128;"	d	file:
EXAMPLE_SPI_SSEL	source/main.c	129;"	d	file:
EXCCNT	CMSIS/core_armv8mml.h	/^  __IOM uint32_t EXCCNT;                 \/*!< Offset: 0x00C (R\/W)  Exception Overhead Count Register *\/$/;"	m	struct:__anon23
EXCCNT	CMSIS/core_cm4.h	/^  __IOM uint32_t EXCCNT;                 \/*!< Offset: 0x00C (R\/W)  Exception Overhead Count Register *\/$/;"	m	struct:__anon45
EXDEV	lwip/src/include/lwip/errno.h	65;"	d
EXECUTABLES	Debug/sources.mk	/^EXECUTABLES := $/;"	m
EXFULL	lwip/src/include/lwip/errno.h	101;"	d
E_BITS	codec2/quantise.h	36;"	d
E_LEVELS	codec2/quantise.h	37;"	d
E_MAX_DB	codec2/quantise.h	39;"	d
E_MIN_DB	codec2/quantise.h	38;"	d
EbNodB	codec2/fsk.h	/^    float EbNodB;           \/* Estimated EbNo in dB *\/$/;"	m	struct:FSK
Edge	emwin/emWin_header/SPINBOX_Private.h	/^  U8                   Edge;                 \/\/ Buttons reside on the left or right edge of the widget.$/;"	m	struct:__anon321
EditMode	emwin/emWin_header/EDIT_Private.h	/^  U8                   EditMode;        \/\/ Insert or overwrite mode$/;"	m	struct:EDIT_Obj_struct
EffectSize	emwin/emWin_header/WIDGET.h	/^  int EffectSize;$/;"	m	struct:__anon211
EnableDeepSleepIRQ	drivers/fsl_common.c	/^void EnableDeepSleepIRQ(IRQn_Type interrupt)$/;"	f
EnableGlobalIRQ	drivers/fsl_common.h	/^    static inline void EnableGlobalIRQ(uint32_t primask)$/;"	f
EnableIRQ	drivers/fsl_common.h	/^    static inline status_t EnableIRQ(IRQn_Type interrupt)$/;"	f
EndCode	emwin/emWin_header/GUI_GIF_Private.h	/^  int   EndCode;$/;"	m	struct:__anon323
EventBits_t	amazon-freertos/include/event_groups.h	/^typedef TickType_t EventBits_t;$/;"	t
EventGroupDef_t	amazon-freertos/freertos/event_groups.c	/^typedef struct EventGroupDef_t$/;"	s	file:
EventGroupHandle_t	amazon-freertos/include/event_groups.h	/^typedef struct EventGroupDef_t * EventGroupHandle_t;$/;"	t	typeref:struct:EventGroupDef_t
EventGroup_t	amazon-freertos/freertos/event_groups.c	/^} EventGroup_t;$/;"	t	typeref:struct:EventGroupDef_t	file:
ExtClockIn	board/board.c	/^const uint32_t ExtClockIn = BOARD_EXTCLKINRATE;$/;"	v
F	lwip/src/netif/ppp/polarssl/md4.c	114;"	d	file:
F	lwip/src/netif/ppp/polarssl/md4.c	135;"	d	file:
F	lwip/src/netif/ppp/polarssl/md4.c	137;"	d	file:
F	lwip/src/netif/ppp/polarssl/md4.c	158;"	d	file:
F	lwip/src/netif/ppp/polarssl/md4.c	160;"	d	file:
F	lwip/src/netif/ppp/polarssl/md4.c	180;"	d	file:
F	lwip/src/netif/ppp/polarssl/md5.c	118;"	d	file:
F	lwip/src/netif/ppp/polarssl/md5.c	137;"	d	file:
F	lwip/src/netif/ppp/polarssl/md5.c	139;"	d	file:
F	lwip/src/netif/ppp/polarssl/md5.c	158;"	d	file:
F	lwip/src/netif/ppp/polarssl/md5.c	160;"	d	file:
F	lwip/src/netif/ppp/polarssl/md5.c	179;"	d	file:
F	lwip/src/netif/ppp/polarssl/md5.c	181;"	d	file:
F	lwip/src/netif/ppp/polarssl/md5.c	200;"	d	file:
F	lwip/src/netif/ppp/polarssl/sha1.c	127;"	d	file:
F	lwip/src/netif/ppp/polarssl/sha1.c	152;"	d	file:
F	lwip/src/netif/ppp/polarssl/sha1.c	154;"	d	file:
F	lwip/src/netif/ppp/polarssl/sha1.c	179;"	d	file:
F	lwip/src/netif/ppp/polarssl/sha1.c	181;"	d	file:
F	lwip/src/netif/ppp/polarssl/sha1.c	206;"	d	file:
F	lwip/src/netif/ppp/polarssl/sha1.c	208;"	d	file:
F	lwip/src/netif/ppp/polarssl/sha1.c	233;"	d	file:
F0_MAX	codec2/nlp.c	53;"	d	file:
FALL	device/LPC54018.h	/^  __IO uint32_t FALL;                              \/**< Pin interrupt falling edge register, offset: 0x20 *\/$/;"	m	struct:__anon169
FAST_MATH_Q15_SHIFT	CMSIS/arm_math.h	373;"	d
FAST_MATH_Q31_SHIFT	CMSIS/arm_math.h	372;"	d
FAST_MATH_TABLE_SIZE	CMSIS/arm_math.h	371;"	d
FCLKSEL	device/LPC54018.h	/^  __IO uint32_t FCLKSEL[10];                       \/**< Flexcomm clock source select, array offset: 0x2B0, array step: 0x4 *\/$/;"	m	struct:__anon185
FCLKSEL10	device/LPC54018.h	/^  __IO uint32_t FCLKSEL10;                         \/**< Flexcomm 10 clock source select, offset: 0x2D8 *\/$/;"	m	struct:__anon185
FCR	device/LPC54018.h	/^    __O  uint32_t FCR;                               \/**< FIFO Control Register, offset: 0x8 *\/$/;"	m	union:__anon179::__anon182
FDMDV_BITS_PER_FRAME	codec2/codec2_fdmdv.h	63;"	d
FDMDV_FCENTRE	codec2/codec2_fdmdv.h	68;"	d
FDMDV_MAX_SAMPLES_PER_FRAME	codec2/codec2_fdmdv.h	66;"	d
FDMDV_NC	codec2/codec2_fdmdv.h	61;"	d
FDMDV_NC_MAX	codec2/codec2_fdmdv.h	62;"	d
FDMDV_NOM_SAMPLES_PER_FRAME	codec2/codec2_fdmdv.h	64;"	d
FDMDV_OS	codec2/codec2_fdmdv.h	72;"	d
FDMDV_OS	codec2/nlp.c	60;"	d	file:
FDMDV_OS_TAPS_16K	codec2/codec2_fdmdv.h	73;"	d
FDMDV_OS_TAPS_16K	codec2/nlp.c	61;"	d	file:
FDMDV_OS_TAPS_8K	codec2/codec2_fdmdv.h	74;"	d
FDMDV_OS_TAPS_8K	codec2/nlp.c	62;"	d	file:
FDMDV_SCALE	codec2/codec2_fdmdv.h	67;"	d
FDSETSAFEGET	lwip/src/include/lwip/sockets.h	474;"	d
FDSETSAFESET	lwip/src/include/lwip/sockets.h	471;"	d
FD_CLR	lwip/src/include/lwip/sockets.h	477;"	d
FD_ISSET	lwip/src/include/lwip/sockets.h	478;"	d
FD_SET	lwip/src/include/lwip/sockets.h	476;"	d
FD_SETSIZE	lwip/src/include/lwip/sockets.h	467;"	d
FD_SETSIZE	lwip/src/include/lwip/sockets.h	469;"	d
FD_ZERO	lwip/src/include/lwip/sockets.h	479;"	d
FEED	device/LPC54018.h	/^  __O  uint32_t FEED;                              \/**< Watchdog feed sequence register. Writing 0xAA followed by 0x55 to this register reloads the Watchdog timer with the value contained in TC., offset: 0x8 *\/$/;"	m	struct:__anon192
FFCR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FFCR;                   \/*!< Offset: 0x304 (R\/W)  Formatter and Flush Control Register *\/$/;"	m	struct:__anon125
FFCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FFCR;                   \/*!< Offset: 0x304 (R\/W)  Formatter and Flush Control Register *\/$/;"	m	struct:__anon24
FFCR	CMSIS/core_cm4.h	/^  __IOM uint32_t FFCR;                   \/*!< Offset: 0x304 (R\/W)  Formatter and Flush Control Register *\/$/;"	m	struct:__anon46
FFSR	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t FFSR;                   \/*!< Offset: 0x300 (R\/ )  Formatter and Flush Status Register *\/$/;"	m	struct:__anon125
FFSR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t FFSR;                   \/*!< Offset: 0x300 (R\/ )  Formatter and Flush Status Register *\/$/;"	m	struct:__anon24
FFSR	CMSIS/core_cm4.h	/^  __IM  uint32_t FFSR;                   \/*!< Offset: 0x300 (R\/ )  Formatter and Flush Status Register *\/$/;"	m	struct:__anon46
FFTI_FACTOR	codec2/sine.c	668;"	d	file:
FFT_DEC	codec2/defines.h	49;"	d
FFT_ENC	codec2/defines.h	48;"	d
FID	usb/device/class/usb_device_video.h	/^            uint8_t FID : 1U; \/*!< Frame Identifier. This bit toggles at each frame start boundary and stays constant$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
FIFO	device/LPC54018.h	/^  __IO uint32_t FIFO[64];                          \/**< SDIF FIFO, array offset: 0x200, array step: 0x4 *\/$/;"	m	struct:__anon177
FIFO0	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t FIFO0;                  \/*!< Offset: 0xEEC (R\/ )  Integration ETM Data *\/$/;"	m	struct:__anon125
FIFO0	CMSIS/core_armv8mml.h	/^  __IM  uint32_t FIFO0;                  \/*!< Offset: 0xEEC (R\/ )  Integration ETM Data *\/$/;"	m	struct:__anon24
FIFO0	CMSIS/core_cm4.h	/^  __IM  uint32_t FIFO0;                  \/*!< Offset: 0xEEC (R\/ )  Integration ETM Data *\/$/;"	m	struct:__anon46
FIFO1	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t FIFO1;                  \/*!< Offset: 0xEFC (R\/ )  Integration ITM Data *\/$/;"	m	struct:__anon125
FIFO1	CMSIS/core_armv8mml.h	/^  __IM  uint32_t FIFO1;                  \/*!< Offset: 0xEFC (R\/ )  Integration ITM Data *\/$/;"	m	struct:__anon24
FIFO1	CMSIS/core_cm4.h	/^  __IM  uint32_t FIFO1;                  \/*!< Offset: 0xEFC (R\/ )  Integration ITM Data *\/$/;"	m	struct:__anon46
FIFOCFG	device/LPC54018.h	/^  __IO uint32_t FIFOCFG;                           \/**< FIFO configuration and enable register., offset: 0xE00 *\/$/;"	m	struct:__anon161
FIFOCFG	device/LPC54018.h	/^  __IO uint32_t FIFOCFG;                           \/**< FIFO configuration and enable register., offset: 0xE00 *\/$/;"	m	struct:__anon183
FIFOCFG	device/LPC54018.h	/^  __IO uint32_t FIFOCFG;                           \/**< FIFO configuration and enable register., offset: 0xE00 *\/$/;"	m	struct:__anon186
FIFOINTENCLR	device/LPC54018.h	/^  __IO uint32_t FIFOINTENCLR;                      \/**< FIFO interrupt enable clear (disable) and read register., offset: 0xE14 *\/$/;"	m	struct:__anon161
FIFOINTENCLR	device/LPC54018.h	/^  __IO uint32_t FIFOINTENCLR;                      \/**< FIFO interrupt enable clear (disable) and read register., offset: 0xE14 *\/$/;"	m	struct:__anon183
FIFOINTENCLR	device/LPC54018.h	/^  __IO uint32_t FIFOINTENCLR;                      \/**< FIFO interrupt enable clear (disable) and read register., offset: 0xE14 *\/$/;"	m	struct:__anon186
FIFOINTENSET	device/LPC54018.h	/^  __IO uint32_t FIFOINTENSET;                      \/**< FIFO interrupt enable set (enable) and read register., offset: 0xE10 *\/$/;"	m	struct:__anon161
FIFOINTENSET	device/LPC54018.h	/^  __IO uint32_t FIFOINTENSET;                      \/**< FIFO interrupt enable set (enable) and read register., offset: 0xE10 *\/$/;"	m	struct:__anon183
FIFOINTENSET	device/LPC54018.h	/^  __IO uint32_t FIFOINTENSET;                      \/**< FIFO interrupt enable set (enable) and read register., offset: 0xE10 *\/$/;"	m	struct:__anon186
FIFOINTSTAT	device/LPC54018.h	/^  __I  uint32_t FIFOINTSTAT;                       \/**< FIFO interrupt status register., offset: 0xE18 *\/$/;"	m	struct:__anon161
FIFOINTSTAT	device/LPC54018.h	/^  __I  uint32_t FIFOINTSTAT;                       \/**< FIFO interrupt status register., offset: 0xE18 *\/$/;"	m	struct:__anon183
FIFOINTSTAT	device/LPC54018.h	/^  __I  uint32_t FIFOINTSTAT;                       \/**< FIFO interrupt status register., offset: 0xE18 *\/$/;"	m	struct:__anon186
FIFORD	device/LPC54018.h	/^  __I  uint32_t FIFORD;                            \/**< FIFO read data., offset: 0xE30 *\/$/;"	m	struct:__anon161
FIFORD	device/LPC54018.h	/^  __I  uint32_t FIFORD;                            \/**< FIFO read data., offset: 0xE30 *\/$/;"	m	struct:__anon183
FIFORD	device/LPC54018.h	/^  __I  uint32_t FIFORD;                            \/**< FIFO read data., offset: 0xE30 *\/$/;"	m	struct:__anon186
FIFORD48H	device/LPC54018.h	/^  __I  uint32_t FIFORD48H;                         \/**< FIFO read data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA., offset: 0xE34 *\/$/;"	m	struct:__anon161
FIFORD48HNOPOP	device/LPC54018.h	/^  __I  uint32_t FIFORD48HNOPOP;                    \/**< FIFO data read for upper data bits with no FIFO pop. May only be used if the I2S is configured for 2x 24-bit data and not using DMA., offset: 0xE44 *\/$/;"	m	struct:__anon161
FIFORDNOPOP	device/LPC54018.h	/^  __I  uint32_t FIFORDNOPOP;                       \/**< FIFO data read with no FIFO pop., offset: 0xE40 *\/$/;"	m	struct:__anon161
FIFORDNOPOP	device/LPC54018.h	/^  __I  uint32_t FIFORDNOPOP;                       \/**< FIFO data read with no FIFO pop., offset: 0xE40 *\/$/;"	m	struct:__anon183
FIFORDNOPOP	device/LPC54018.h	/^  __I  uint32_t FIFORDNOPOP;                       \/**< FIFO data read with no FIFO pop., offset: 0xE40 *\/$/;"	m	struct:__anon186
FIFOSTAT	device/LPC54018.h	/^  __IO uint32_t FIFOSTAT;                          \/**< FIFO status register., offset: 0xE04 *\/$/;"	m	struct:__anon161
FIFOSTAT	device/LPC54018.h	/^  __IO uint32_t FIFOSTAT;                          \/**< FIFO status register., offset: 0xE04 *\/$/;"	m	struct:__anon183
FIFOSTAT	device/LPC54018.h	/^  __IO uint32_t FIFOSTAT;                          \/**< FIFO status register., offset: 0xE04 *\/$/;"	m	struct:__anon186
FIFOTH	device/LPC54018.h	/^  __IO uint32_t FIFOTH;                            \/**< FIFO Threshold Watermark register, offset: 0x4C *\/$/;"	m	struct:__anon177
FIFOTRIG	device/LPC54018.h	/^  __IO uint32_t FIFOTRIG;                          \/**< FIFO trigger settings for interrupt and DMA request., offset: 0xE08 *\/$/;"	m	struct:__anon161
FIFOTRIG	device/LPC54018.h	/^  __IO uint32_t FIFOTRIG;                          \/**< FIFO trigger settings for interrupt and DMA request., offset: 0xE08 *\/$/;"	m	struct:__anon183
FIFOTRIG	device/LPC54018.h	/^  __IO uint32_t FIFOTRIG;                          \/**< FIFO trigger settings for interrupt and DMA request., offset: 0xE08 *\/$/;"	m	struct:__anon186
FIFOWR	device/LPC54018.h	/^  __O  uint32_t FIFOWR;                            \/**< FIFO write data., offset: 0xE20 *\/$/;"	m	struct:__anon161
FIFOWR	device/LPC54018.h	/^  __O  uint32_t FIFOWR;                            \/**< FIFO write data., offset: 0xE20 *\/$/;"	m	struct:__anon183
FIFOWR	device/LPC54018.h	/^  __O  uint32_t FIFOWR;                            \/**< FIFO write data., offset: 0xE20 *\/$/;"	m	struct:__anon186
FIFOWR48H	device/LPC54018.h	/^  __O  uint32_t FIFOWR48H;                         \/**< FIFO write data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA., offset: 0xE24 *\/$/;"	m	struct:__anon161
FIFO_CTRL	device/LPC54018.h	/^    __IO uint32_t FIFO_CTRL;                         \/**< FIFO Control register 0, array offset: 0x80, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
FIFO_DATA	device/LPC54018.h	/^    __IO uint32_t FIFO_DATA;                         \/**< FIFO Data Register 0, array offset: 0x88, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
FIFO_DEPTH	source/i2s_transfer.c	47;"	d	file:
FIFO_STATUS	device/LPC54018.h	/^    __IO uint32_t FIFO_STATUS;                       \/**< FIFO Status register 0, array offset: 0x84, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
FIN_WAIT_1	lwip/src/include/lwip/tcpbase.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	lwip/src/include/lwip/tcpbase.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	lwip/src/include/lwip/sockets.h	421;"	d
FIONREAD	lwip/src/include/lwip/sockets.h	418;"	d
FLADJ_FRINDEX	device/LPC54018.h	/^  __IO uint32_t FLADJ_FRINDEX;                     \/**< Frame Length Adjustment, offset: 0xC *\/$/;"	m	struct:__anon190
FLAGS	device/LPC54018.h	/^  __IO uint32_t FLAGS;                             \/**< ADC Flags register. Contains the four interrupt\/DMA trigger flags and the individual component overrun and threshold-compare flags. (The overrun bits replicate information stored in the result registers)., offset: 0x68 *\/$/;"	m	struct:__anon140
FLASH_CLOCKS	drivers/fsl_clock.h	76;"	d
FLASH_RSTS	drivers/fsl_reset.h	155;"	d
FLEXCOLOR_CF_DEFAULT	emwin/emWin_header/GUIDRV_FlexColor_Private.h	68;"	d
FLEXCOLOR_CF_MANAGE_ORIENTATION	emwin/emWin_header/GUIDRV_FlexColor_Private.h	64;"	d
FLEXCOLOR_CF_RAM_ADDR_SET	emwin/emWin_header/GUIDRV_FlexColor_Private.h	65;"	d
FLEXCOLOR_CF_SET_CURSOR	emwin/emWin_header/GUIDRV_FlexColor_Private.h	66;"	d
FLEXCOLOR_MAX_NUM_DUMMY_READS	emwin/emWin_header/GUIDRV_FlexColor_Private.h	70;"	d
FLEXCOLOR_NUM_DUMMY_READS	emwin/emWin_header/GUIDRV_FlexColor_Private.h	71;"	d
FLEXCOMM0	device/LPC54018.h	5069;"	d
FLEXCOMM0_BASE	device/LPC54018.h	5067;"	d
FLEXCOMM0_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM0_DriverIRQHandler(void)$/;"	f
FLEXCOMM0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM0_IRQHandler(void)$/;"	f
FLEXCOMM0_IRQn	device/LPC54018.h	/^  FLEXCOMM0_IRQn               = 14,               \/**< Flexcomm Interface 0 (USART, SPI, I2C, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM1	device/LPC54018.h	5073;"	d
FLEXCOMM10	device/LPC54018.h	5109;"	d
FLEXCOMM10_BASE	device/LPC54018.h	5107;"	d
FLEXCOMM10_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM10_DriverIRQHandler(void)$/;"	f
FLEXCOMM10_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM10_IRQHandler(void)$/;"	f
FLEXCOMM10_IRQn	device/LPC54018.h	/^  FLEXCOMM10_IRQn              = 30,               \/**< Flexcomm Interface 10 (SPI, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM11_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM11_DriverIRQHandler(void)$/;"	f
FLEXCOMM12_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM12_DriverIRQHandler(void)$/;"	f
FLEXCOMM13_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM13_DriverIRQHandler(void)$/;"	f
FLEXCOMM14_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM14_DriverIRQHandler(void)$/;"	f
FLEXCOMM15_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM15_DriverIRQHandler(void)$/;"	f
FLEXCOMM16_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM16_DriverIRQHandler(void)$/;"	f
FLEXCOMM1_BASE	device/LPC54018.h	5071;"	d
FLEXCOMM1_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM1_DriverIRQHandler(void)$/;"	f
FLEXCOMM1_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM1_IRQHandler(void)$/;"	f
FLEXCOMM1_IRQn	device/LPC54018.h	/^  FLEXCOMM1_IRQn               = 15,               \/**< Flexcomm Interface 1 (USART, SPI, I2C, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM2	device/LPC54018.h	5077;"	d
FLEXCOMM2_BASE	device/LPC54018.h	5075;"	d
FLEXCOMM2_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM2_DriverIRQHandler(void)$/;"	f
FLEXCOMM2_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM2_IRQHandler(void)$/;"	f
FLEXCOMM2_IRQn	device/LPC54018.h	/^  FLEXCOMM2_IRQn               = 16,               \/**< Flexcomm Interface 2 (USART, SPI, I2C, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM3	device/LPC54018.h	5081;"	d
FLEXCOMM3_BASE	device/LPC54018.h	5079;"	d
FLEXCOMM3_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM3_DriverIRQHandler(void)$/;"	f
FLEXCOMM3_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM3_IRQHandler(void)$/;"	f
FLEXCOMM3_IRQn	device/LPC54018.h	/^  FLEXCOMM3_IRQn               = 17,               \/**< Flexcomm Interface 3 (USART, SPI, I2C, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM4	device/LPC54018.h	5085;"	d
FLEXCOMM4_BASE	device/LPC54018.h	5083;"	d
FLEXCOMM4_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM4_DriverIRQHandler(void)$/;"	f
FLEXCOMM4_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM4_IRQHandler(void)$/;"	f
FLEXCOMM4_IRQn	device/LPC54018.h	/^  FLEXCOMM4_IRQn               = 18,               \/**< Flexcomm Interface 4 (USART, SPI, I2C, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM5	device/LPC54018.h	5089;"	d
FLEXCOMM5_BASE	device/LPC54018.h	5087;"	d
FLEXCOMM5_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM5_DriverIRQHandler(void)$/;"	f
FLEXCOMM5_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM5_IRQHandler(void)$/;"	f
FLEXCOMM5_IRQn	device/LPC54018.h	/^  FLEXCOMM5_IRQn               = 19,               \/**< Flexcomm Interface 5 (USART, SPI, I2C,, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM6	device/LPC54018.h	5093;"	d
FLEXCOMM6_BASE	device/LPC54018.h	5091;"	d
FLEXCOMM6_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM6_DriverIRQHandler(void)$/;"	f
FLEXCOMM6_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM6_IRQHandler(void)$/;"	f
FLEXCOMM6_IRQn	device/LPC54018.h	/^  FLEXCOMM6_IRQn               = 20,               \/**< Flexcomm Interface 6 (USART, SPI, I2C, I2S,, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM7	device/LPC54018.h	5097;"	d
FLEXCOMM7_BASE	device/LPC54018.h	5095;"	d
FLEXCOMM7_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM7_DriverIRQHandler(void)$/;"	f
FLEXCOMM7_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM7_IRQHandler(void)$/;"	f
FLEXCOMM7_IRQn	device/LPC54018.h	/^  FLEXCOMM7_IRQn               = 21,               \/**< Flexcomm Interface 7 (USART, SPI, I2C, I2S,, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM8	device/LPC54018.h	5101;"	d
FLEXCOMM8_BASE	device/LPC54018.h	5099;"	d
FLEXCOMM8_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM8_DriverIRQHandler(void)$/;"	f
FLEXCOMM8_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM8_IRQHandler(void)$/;"	f
FLEXCOMM8_IRQn	device/LPC54018.h	/^  FLEXCOMM8_IRQn               = 40,               \/**< Flexcomm Interface 8 (USART, SPI, I2C, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM9	device/LPC54018.h	5105;"	d
FLEXCOMM9_BASE	device/LPC54018.h	5103;"	d
FLEXCOMM9_DriverIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM9_DriverIRQHandler(void)$/;"	f
FLEXCOMM9_IRQHandler	startup/startup_lpc54018.c	/^WEAK void FLEXCOMM9_IRQHandler(void)$/;"	f
FLEXCOMM9_IRQn	device/LPC54018.h	/^  FLEXCOMM9_IRQn               = 41,               \/**< Flexcomm Interface 9 (USART, SPI, I2C, FLEXCOMM) *\/$/;"	e	enum:IRQn
FLEXCOMM_BASE_ADDRS	device/LPC54018.h	5111;"	d
FLEXCOMM_BASE_PTRS	device/LPC54018.h	5113;"	d
FLEXCOMM_CLOCKS	drivers/fsl_clock.h	171;"	d
FLEXCOMM_GetInstance	drivers/fsl_flexcomm.c	/^uint32_t FLEXCOMM_GetInstance(void *base)$/;"	f
FLEXCOMM_IRQS	device/LPC54018.h	5115;"	d
FLEXCOMM_Init	drivers/fsl_flexcomm.c	/^status_t FLEXCOMM_Init(void *base, FLEXCOMM_PERIPH_T periph)$/;"	f
FLEXCOMM_PERIPH_I2C	drivers/fsl_flexcomm.h	/^    FLEXCOMM_PERIPH_I2C,    \/*!< I2C Peripheral *\/$/;"	e	enum:__anon195
FLEXCOMM_PERIPH_I2S_RX	drivers/fsl_flexcomm.h	/^    FLEXCOMM_PERIPH_I2S_RX, \/*!< I2S RX Peripheral *\/$/;"	e	enum:__anon195
FLEXCOMM_PERIPH_I2S_TX	drivers/fsl_flexcomm.h	/^    FLEXCOMM_PERIPH_I2S_TX, \/*!< I2S TX Peripheral *\/$/;"	e	enum:__anon195
FLEXCOMM_PERIPH_NONE	drivers/fsl_flexcomm.h	/^    FLEXCOMM_PERIPH_NONE,   \/*!< No peripheral *\/$/;"	e	enum:__anon195
FLEXCOMM_PERIPH_SPI	drivers/fsl_flexcomm.h	/^    FLEXCOMM_PERIPH_SPI,    \/*!< SPI Peripheral *\/$/;"	e	enum:__anon195
FLEXCOMM_PERIPH_T	drivers/fsl_flexcomm.h	/^} FLEXCOMM_PERIPH_T;$/;"	t	typeref:enum:__anon195
FLEXCOMM_PERIPH_USART	drivers/fsl_flexcomm.h	/^    FLEXCOMM_PERIPH_USART,  \/*!< USART peripheral *\/$/;"	e	enum:__anon195
FLEXCOMM_PID_ID	device/LPC54018.h	5056;"	d
FLEXCOMM_PID_ID_MASK	device/LPC54018.h	5054;"	d
FLEXCOMM_PID_ID_SHIFT	device/LPC54018.h	5055;"	d
FLEXCOMM_PID_Major_Rev	device/LPC54018.h	5053;"	d
FLEXCOMM_PID_Major_Rev_MASK	device/LPC54018.h	5051;"	d
FLEXCOMM_PID_Major_Rev_SHIFT	device/LPC54018.h	5052;"	d
FLEXCOMM_PID_Minor_Rev	device/LPC54018.h	5050;"	d
FLEXCOMM_PID_Minor_Rev_MASK	device/LPC54018.h	5048;"	d
FLEXCOMM_PID_Minor_Rev_SHIFT	device/LPC54018.h	5049;"	d
FLEXCOMM_PSELID_I2CPRESENT	device/LPC54018.h	5033;"	d
FLEXCOMM_PSELID_I2CPRESENT_MASK	device/LPC54018.h	5027;"	d
FLEXCOMM_PSELID_I2CPRESENT_SHIFT	device/LPC54018.h	5028;"	d
FLEXCOMM_PSELID_I2SPRESENT	device/LPC54018.h	5040;"	d
FLEXCOMM_PSELID_I2SPRESENT_MASK	device/LPC54018.h	5034;"	d
FLEXCOMM_PSELID_I2SPRESENT_SHIFT	device/LPC54018.h	5035;"	d
FLEXCOMM_PSELID_ID	device/LPC54018.h	5043;"	d
FLEXCOMM_PSELID_ID_MASK	device/LPC54018.h	5041;"	d
FLEXCOMM_PSELID_ID_SHIFT	device/LPC54018.h	5042;"	d
FLEXCOMM_PSELID_LOCK	device/LPC54018.h	5012;"	d
FLEXCOMM_PSELID_LOCK_MASK	device/LPC54018.h	5006;"	d
FLEXCOMM_PSELID_LOCK_SHIFT	device/LPC54018.h	5007;"	d
FLEXCOMM_PSELID_PERSEL	device/LPC54018.h	5005;"	d
FLEXCOMM_PSELID_PERSEL_MASK	device/LPC54018.h	4993;"	d
FLEXCOMM_PSELID_PERSEL_SHIFT	device/LPC54018.h	4994;"	d
FLEXCOMM_PSELID_SPIPRESENT	device/LPC54018.h	5026;"	d
FLEXCOMM_PSELID_SPIPRESENT_MASK	device/LPC54018.h	5020;"	d
FLEXCOMM_PSELID_SPIPRESENT_SHIFT	device/LPC54018.h	5021;"	d
FLEXCOMM_PSELID_USARTPRESENT	device/LPC54018.h	5019;"	d
FLEXCOMM_PSELID_USARTPRESENT_MASK	device/LPC54018.h	5013;"	d
FLEXCOMM_PSELID_USARTPRESENT_SHIFT	device/LPC54018.h	5014;"	d
FLEXCOMM_PeripheralIsPresent	drivers/fsl_flexcomm.c	/^static bool FLEXCOMM_PeripheralIsPresent(FLEXCOMM_Type *base, FLEXCOMM_PERIPH_T periph)$/;"	f	file:
FLEXCOMM_RSTS	drivers/fsl_reset.h	133;"	d
FLEXCOMM_SetIRQHandler	drivers/fsl_flexcomm.c	/^void FLEXCOMM_SetIRQHandler(void *base, flexcomm_irq_handler_t handler, void *handle)$/;"	f
FLEXCOMM_SetPeriph	drivers/fsl_flexcomm.c	/^static status_t FLEXCOMM_SetPeriph(FLEXCOMM_Type *base, FLEXCOMM_PERIPH_T periph, int lock)$/;"	f	file:
FLEXCOMM_Type	device/LPC54018.h	/^} FLEXCOMM_Type;$/;"	t	typeref:struct:__anon157
FLEXI2S_CLOCKS	drivers/fsl_clock.h	196;"	d
FMC_CLOCKS	drivers/fsl_clock.h	81;"	d
FOLDCNT	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FOLDCNT;                \/*!< Offset: 0x018 (R\/W)  Folded-instruction Count Register *\/$/;"	m	struct:__anon23
FOLDCNT	CMSIS/core_cm4.h	/^  __IOM uint32_t FOLDCNT;                \/*!< Offset: 0x018 (R\/W)  Folded-instruction Count Register *\/$/;"	m	struct:__anon45
FOLD_U32T	lwip/src/include/lwip/inet_chksum.h	52;"	d
FPCA	CMSIS/core_armv8mml.h	/^    uint32_t FPCA:1;                     \/*!< bit:      2  Floating-point context active *\/$/;"	m	struct:__anon15::__anon16
FPCA	CMSIS/core_cm4.h	/^    uint32_t FPCA:1;                     \/*!< bit:      2  FP extension active flag *\/$/;"	m	struct:__anon37::__anon38
FPCAR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FPCAR;                  \/*!< Offset: 0x008 (R\/W)  Floating-Point Context Address Register *\/$/;"	m	struct:__anon29
FPCAR	CMSIS/core_cm4.h	/^  __IOM uint32_t FPCAR;                  \/*!< Offset: 0x008 (R\/W)  Floating-Point Context Address Register *\/$/;"	m	struct:__anon48
FPCCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FPCCR;                  \/*!< Offset: 0x004 (R\/W)  Floating-Point Context Control Register *\/$/;"	m	struct:__anon29
FPCCR	CMSIS/core_cm4.h	/^  __IOM uint32_t FPCCR;                  \/*!< Offset: 0x004 (R\/W)  Floating-Point Context Control Register *\/$/;"	m	struct:__anon48
FPDSCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FPDSCR;                 \/*!< Offset: 0x00C (R\/W)  Floating-Point Default Status Control Register *\/$/;"	m	struct:__anon29
FPDSCR	CMSIS/core_cm4.h	/^  __IOM uint32_t FPDSCR;                 \/*!< Offset: 0x00C (R\/W)  Floating-Point Default Status Control Register *\/$/;"	m	struct:__anon48
FPU	CMSIS/core_armv8mml.h	2056;"	d
FPU	CMSIS/core_cm4.h	1575;"	d
FPU_BASE	CMSIS/core_armv8mml.h	2055;"	d
FPU_BASE	CMSIS/core_cm4.h	1574;"	d
FPU_BASE_NS	CMSIS/core_armv8mml.h	2076;"	d
FPU_FPCAR_ADDRESS_Msk	CMSIS/core_armv8mml.h	1803;"	d
FPU_FPCAR_ADDRESS_Msk	CMSIS/core_cm4.h	1356;"	d
FPU_FPCAR_ADDRESS_Pos	CMSIS/core_armv8mml.h	1802;"	d
FPU_FPCAR_ADDRESS_Pos	CMSIS/core_cm4.h	1355;"	d
FPU_FPCCR_ASPEN_Msk	CMSIS/core_armv8mml.h	1751;"	d
FPU_FPCCR_ASPEN_Msk	CMSIS/core_cm4.h	1328;"	d
FPU_FPCCR_ASPEN_Pos	CMSIS/core_armv8mml.h	1750;"	d
FPU_FPCCR_ASPEN_Pos	CMSIS/core_cm4.h	1327;"	d
FPU_FPCCR_BFRDY_Msk	CMSIS/core_armv8mml.h	1781;"	d
FPU_FPCCR_BFRDY_Msk	CMSIS/core_cm4.h	1337;"	d
FPU_FPCCR_BFRDY_Pos	CMSIS/core_armv8mml.h	1780;"	d
FPU_FPCCR_BFRDY_Pos	CMSIS/core_cm4.h	1336;"	d
FPU_FPCCR_CLRONRETS_Msk	CMSIS/core_armv8mml.h	1763;"	d
FPU_FPCCR_CLRONRETS_Pos	CMSIS/core_armv8mml.h	1762;"	d
FPU_FPCCR_CLRONRET_Msk	CMSIS/core_armv8mml.h	1760;"	d
FPU_FPCCR_CLRONRET_Pos	CMSIS/core_armv8mml.h	1759;"	d
FPU_FPCCR_HFRDY_Msk	CMSIS/core_armv8mml.h	1787;"	d
FPU_FPCCR_HFRDY_Msk	CMSIS/core_cm4.h	1343;"	d
FPU_FPCCR_HFRDY_Pos	CMSIS/core_armv8mml.h	1786;"	d
FPU_FPCCR_HFRDY_Pos	CMSIS/core_cm4.h	1342;"	d
FPU_FPCCR_LSPACT_Msk	CMSIS/core_armv8mml.h	1799;"	d
FPU_FPCCR_LSPACT_Msk	CMSIS/core_cm4.h	1352;"	d
FPU_FPCCR_LSPACT_Pos	CMSIS/core_armv8mml.h	1798;"	d
FPU_FPCCR_LSPACT_Pos	CMSIS/core_cm4.h	1351;"	d
FPU_FPCCR_LSPENS_Msk	CMSIS/core_armv8mml.h	1757;"	d
FPU_FPCCR_LSPENS_Pos	CMSIS/core_armv8mml.h	1756;"	d
FPU_FPCCR_LSPEN_Msk	CMSIS/core_armv8mml.h	1754;"	d
FPU_FPCCR_LSPEN_Msk	CMSIS/core_cm4.h	1331;"	d
FPU_FPCCR_LSPEN_Pos	CMSIS/core_armv8mml.h	1753;"	d
FPU_FPCCR_LSPEN_Pos	CMSIS/core_cm4.h	1330;"	d
FPU_FPCCR_MMRDY_Msk	CMSIS/core_armv8mml.h	1784;"	d
FPU_FPCCR_MMRDY_Msk	CMSIS/core_cm4.h	1340;"	d
FPU_FPCCR_MMRDY_Pos	CMSIS/core_armv8mml.h	1783;"	d
FPU_FPCCR_MMRDY_Pos	CMSIS/core_cm4.h	1339;"	d
FPU_FPCCR_MONRDY_Msk	CMSIS/core_armv8mml.h	1775;"	d
FPU_FPCCR_MONRDY_Msk	CMSIS/core_cm4.h	1334;"	d
FPU_FPCCR_MONRDY_Pos	CMSIS/core_armv8mml.h	1774;"	d
FPU_FPCCR_MONRDY_Pos	CMSIS/core_cm4.h	1333;"	d
FPU_FPCCR_SFRDY_Msk	CMSIS/core_armv8mml.h	1778;"	d
FPU_FPCCR_SFRDY_Pos	CMSIS/core_armv8mml.h	1777;"	d
FPU_FPCCR_SPLIMVIOL_Msk	CMSIS/core_armv8mml.h	1772;"	d
FPU_FPCCR_SPLIMVIOL_Pos	CMSIS/core_armv8mml.h	1771;"	d
FPU_FPCCR_S_Msk	CMSIS/core_armv8mml.h	1793;"	d
FPU_FPCCR_S_Pos	CMSIS/core_armv8mml.h	1792;"	d
FPU_FPCCR_THREAD_Msk	CMSIS/core_armv8mml.h	1790;"	d
FPU_FPCCR_THREAD_Msk	CMSIS/core_cm4.h	1346;"	d
FPU_FPCCR_THREAD_Pos	CMSIS/core_armv8mml.h	1789;"	d
FPU_FPCCR_THREAD_Pos	CMSIS/core_cm4.h	1345;"	d
FPU_FPCCR_TS_Msk	CMSIS/core_armv8mml.h	1766;"	d
FPU_FPCCR_TS_Pos	CMSIS/core_armv8mml.h	1765;"	d
FPU_FPCCR_UFRDY_Msk	CMSIS/core_armv8mml.h	1769;"	d
FPU_FPCCR_UFRDY_Pos	CMSIS/core_armv8mml.h	1768;"	d
FPU_FPCCR_USER_Msk	CMSIS/core_armv8mml.h	1796;"	d
FPU_FPCCR_USER_Msk	CMSIS/core_cm4.h	1349;"	d
FPU_FPCCR_USER_Pos	CMSIS/core_armv8mml.h	1795;"	d
FPU_FPCCR_USER_Pos	CMSIS/core_cm4.h	1348;"	d
FPU_FPDSCR_AHP_Msk	CMSIS/core_armv8mml.h	1807;"	d
FPU_FPDSCR_AHP_Msk	CMSIS/core_cm4.h	1360;"	d
FPU_FPDSCR_AHP_Pos	CMSIS/core_armv8mml.h	1806;"	d
FPU_FPDSCR_AHP_Pos	CMSIS/core_cm4.h	1359;"	d
FPU_FPDSCR_DN_Msk	CMSIS/core_armv8mml.h	1810;"	d
FPU_FPDSCR_DN_Msk	CMSIS/core_cm4.h	1363;"	d
FPU_FPDSCR_DN_Pos	CMSIS/core_armv8mml.h	1809;"	d
FPU_FPDSCR_DN_Pos	CMSIS/core_cm4.h	1362;"	d
FPU_FPDSCR_FZ_Msk	CMSIS/core_armv8mml.h	1813;"	d
FPU_FPDSCR_FZ_Msk	CMSIS/core_cm4.h	1366;"	d
FPU_FPDSCR_FZ_Pos	CMSIS/core_armv8mml.h	1812;"	d
FPU_FPDSCR_FZ_Pos	CMSIS/core_cm4.h	1365;"	d
FPU_FPDSCR_RMode_Msk	CMSIS/core_armv8mml.h	1816;"	d
FPU_FPDSCR_RMode_Msk	CMSIS/core_cm4.h	1369;"	d
FPU_FPDSCR_RMode_Pos	CMSIS/core_armv8mml.h	1815;"	d
FPU_FPDSCR_RMode_Pos	CMSIS/core_cm4.h	1368;"	d
FPU_MVFR0_A_SIMD_registers_Msk	CMSIS/core_armv8mml.h	1841;"	d
FPU_MVFR0_A_SIMD_registers_Msk	CMSIS/core_cm4.h	1394;"	d
FPU_MVFR0_A_SIMD_registers_Pos	CMSIS/core_armv8mml.h	1840;"	d
FPU_MVFR0_A_SIMD_registers_Pos	CMSIS/core_cm4.h	1393;"	d
FPU_MVFR0_Divide_Msk	CMSIS/core_armv8mml.h	1829;"	d
FPU_MVFR0_Divide_Msk	CMSIS/core_cm4.h	1382;"	d
FPU_MVFR0_Divide_Pos	CMSIS/core_armv8mml.h	1828;"	d
FPU_MVFR0_Divide_Pos	CMSIS/core_cm4.h	1381;"	d
FPU_MVFR0_Double_precision_Msk	CMSIS/core_armv8mml.h	1835;"	d
FPU_MVFR0_Double_precision_Msk	CMSIS/core_cm4.h	1388;"	d
FPU_MVFR0_Double_precision_Pos	CMSIS/core_armv8mml.h	1834;"	d
FPU_MVFR0_Double_precision_Pos	CMSIS/core_cm4.h	1387;"	d
FPU_MVFR0_FP_excep_trapping_Msk	CMSIS/core_armv8mml.h	1832;"	d
FPU_MVFR0_FP_excep_trapping_Msk	CMSIS/core_cm4.h	1385;"	d
FPU_MVFR0_FP_excep_trapping_Pos	CMSIS/core_armv8mml.h	1831;"	d
FPU_MVFR0_FP_excep_trapping_Pos	CMSIS/core_cm4.h	1384;"	d
FPU_MVFR0_FP_rounding_modes_Msk	CMSIS/core_armv8mml.h	1820;"	d
FPU_MVFR0_FP_rounding_modes_Msk	CMSIS/core_cm4.h	1373;"	d
FPU_MVFR0_FP_rounding_modes_Pos	CMSIS/core_armv8mml.h	1819;"	d
FPU_MVFR0_FP_rounding_modes_Pos	CMSIS/core_cm4.h	1372;"	d
FPU_MVFR0_Short_vectors_Msk	CMSIS/core_armv8mml.h	1823;"	d
FPU_MVFR0_Short_vectors_Msk	CMSIS/core_cm4.h	1376;"	d
FPU_MVFR0_Short_vectors_Pos	CMSIS/core_armv8mml.h	1822;"	d
FPU_MVFR0_Short_vectors_Pos	CMSIS/core_cm4.h	1375;"	d
FPU_MVFR0_Single_precision_Msk	CMSIS/core_armv8mml.h	1838;"	d
FPU_MVFR0_Single_precision_Msk	CMSIS/core_cm4.h	1391;"	d
FPU_MVFR0_Single_precision_Pos	CMSIS/core_armv8mml.h	1837;"	d
FPU_MVFR0_Single_precision_Pos	CMSIS/core_cm4.h	1390;"	d
FPU_MVFR0_Square_root_Msk	CMSIS/core_armv8mml.h	1826;"	d
FPU_MVFR0_Square_root_Msk	CMSIS/core_cm4.h	1379;"	d
FPU_MVFR0_Square_root_Pos	CMSIS/core_armv8mml.h	1825;"	d
FPU_MVFR0_Square_root_Pos	CMSIS/core_cm4.h	1378;"	d
FPU_MVFR1_D_NaN_mode_Msk	CMSIS/core_armv8mml.h	1851;"	d
FPU_MVFR1_D_NaN_mode_Msk	CMSIS/core_cm4.h	1404;"	d
FPU_MVFR1_D_NaN_mode_Pos	CMSIS/core_armv8mml.h	1850;"	d
FPU_MVFR1_D_NaN_mode_Pos	CMSIS/core_cm4.h	1403;"	d
FPU_MVFR1_FP_HPFP_Msk	CMSIS/core_armv8mml.h	1848;"	d
FPU_MVFR1_FP_HPFP_Msk	CMSIS/core_cm4.h	1401;"	d
FPU_MVFR1_FP_HPFP_Pos	CMSIS/core_armv8mml.h	1847;"	d
FPU_MVFR1_FP_HPFP_Pos	CMSIS/core_cm4.h	1400;"	d
FPU_MVFR1_FP_fused_MAC_Msk	CMSIS/core_armv8mml.h	1845;"	d
FPU_MVFR1_FP_fused_MAC_Msk	CMSIS/core_cm4.h	1398;"	d
FPU_MVFR1_FP_fused_MAC_Pos	CMSIS/core_armv8mml.h	1844;"	d
FPU_MVFR1_FP_fused_MAC_Pos	CMSIS/core_cm4.h	1397;"	d
FPU_MVFR1_FtZ_mode_Msk	CMSIS/core_armv8mml.h	1854;"	d
FPU_MVFR1_FtZ_mode_Msk	CMSIS/core_cm4.h	1407;"	d
FPU_MVFR1_FtZ_mode_Pos	CMSIS/core_armv8mml.h	1853;"	d
FPU_MVFR1_FtZ_mode_Pos	CMSIS/core_cm4.h	1406;"	d
FPU_NS	CMSIS/core_armv8mml.h	2077;"	d
FPU_Type	CMSIS/core_armv8mml.h	/^} FPU_Type;$/;"	t	typeref:struct:__anon29
FPU_Type	CMSIS/core_cm4.h	/^} FPU_Type;$/;"	t	typeref:struct:__anon48
FRACBITS	codec2/_kiss_fft_guts.h	46;"	d
FRACBITS	codec2/_kiss_fft_guts.h	50;"	d
FRAMECLNT_ID	emwin/emWin_header/WIDGET.h	105;"	d
FRAMEWIN_ALLOW_DRAG_ON_FRAME	emwin/emWin_header/FRAMEWIN.h	68;"	d
FRAMEWIN_BARCOLOR_ACTIVE_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	120;"	d
FRAMEWIN_BARCOLOR_INACTIVE_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	127;"	d
FRAMEWIN_BORDERSIZE_B	emwin/emWin_header/FRAMEWIN.h	116;"	d
FRAMEWIN_BORDERSIZE_L	emwin/emWin_header/FRAMEWIN.h	115;"	d
FRAMEWIN_BORDERSIZE_R	emwin/emWin_header/FRAMEWIN.h	117;"	d
FRAMEWIN_BORDERSIZE_T	emwin/emWin_header/FRAMEWIN.h	114;"	d
FRAMEWIN_BORDER_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	83;"	d
FRAMEWIN_BUTTON_LEFT	emwin/emWin_header/FRAMEWIN.h	101;"	d
FRAMEWIN_BUTTON_RIGHT	emwin/emWin_header/FRAMEWIN.h	100;"	d
FRAMEWIN_CF_ACTIVE	emwin/emWin_header/FRAMEWIN.h	82;"	d
FRAMEWIN_CF_DRAGGING	emwin/emWin_header/FRAMEWIN.h	87;"	d
FRAMEWIN_CF_MAXIMIZED	emwin/emWin_header/FRAMEWIN.h	86;"	d
FRAMEWIN_CF_MINIMIZED	emwin/emWin_header/FRAMEWIN.h	85;"	d
FRAMEWIN_CF_MOVEABLE	emwin/emWin_header/FRAMEWIN.h	83;"	d
FRAMEWIN_CF_TITLEVIS	emwin/emWin_header/FRAMEWIN.h	84;"	d
FRAMEWIN_CI_ACTIVE	emwin/emWin_header/FRAMEWIN.h	76;"	d
FRAMEWIN_CI_INACTIVE	emwin/emWin_header/FRAMEWIN.h	75;"	d
FRAMEWIN_CLIENTCOLOR_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	66;"	d
FRAMEWIN_CLIENTCOLOR_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	68;"	d
FRAMEWIN_CreateButton	emwin/emWin_header/FRAMEWIN.h	253;"	d
FRAMEWIN_CreateCloseButton	emwin/emWin_header/FRAMEWIN.h	254;"	d
FRAMEWIN_CreateMaxButton	emwin/emWin_header/FRAMEWIN.h	255;"	d
FRAMEWIN_CreateMinButton	emwin/emWin_header/FRAMEWIN.h	256;"	d
FRAMEWIN_DEFAULT_FONT	emwin/emWin_header/FRAMEWIN_Private.h	101;"	d
FRAMEWIN_DEFAULT_FONT	emwin/emWin_header/FRAMEWIN_Private.h	103;"	d
FRAMEWIN_DEFAULT_FONT	emwin/emWin_header/FRAMEWIN_Private.h	107;"	d
FRAMEWIN_DEFAULT_FONT	emwin/emWin_header/FRAMEWIN_Private.h	109;"	d
FRAMEWIN_DEFAULT_FONT	emwin/emWin_header/FRAMEWIN_Private.h	111;"	d
FRAMEWIN_DEFAULT_FONT	emwin/emWin_header/FRAMEWIN_Private.h	99;"	d
FRAMEWIN_FRAMECOLOR_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	134;"	d
FRAMEWIN_GetDefaultCaptionSize	emwin/emWin_header/FRAMEWIN.h	252;"	d
FRAMEWIN_H	emwin/emWin_header/FRAMEWIN.h	46;"	d
FRAMEWIN_Handle	emwin/emWin_header/FRAMEWIN.h	/^typedef WM_HMEM FRAMEWIN_Handle;$/;"	t
FRAMEWIN_IBORDER_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	90;"	d
FRAMEWIN_ID	emwin/emWin_header/WIDGET.h	104;"	d
FRAMEWIN_INIT_ID	emwin/emWin_header/FRAMEWIN_Private.h	219;"	d
FRAMEWIN_INIT_ID	emwin/emWin_header/FRAMEWIN_Private.h	221;"	d
FRAMEWIN_LOCK_H	emwin/emWin_header/FRAMEWIN_Private.h	226;"	d
FRAMEWIN_LOCK_H	emwin/emWin_header/FRAMEWIN_Private.h	228;"	d
FRAMEWIN_Obj	emwin/emWin_header/FRAMEWIN_Private.h	/^} FRAMEWIN_Obj;$/;"	t	typeref:struct:__anon280
FRAMEWIN_POSITIONS	emwin/emWin_header/FRAMEWIN_Private.h	/^} FRAMEWIN_POSITIONS;$/;"	t	typeref:struct:__anon281
FRAMEWIN_PRIVATE_H	emwin/emWin_header/FRAMEWIN_Private.h	46;"	d
FRAMEWIN_PROPS	emwin/emWin_header/FRAMEWIN_Private.h	/^} FRAMEWIN_PROPS;$/;"	t	typeref:struct:__anon279
FRAMEWIN_SF_ACTIVE	emwin/emWin_header/FRAMEWIN.h	89;"	d
FRAMEWIN_SF_DRAGGING	emwin/emWin_header/FRAMEWIN.h	94;"	d
FRAMEWIN_SF_MAXIMIZED	emwin/emWin_header/FRAMEWIN.h	93;"	d
FRAMEWIN_SF_MINIMIZED	emwin/emWin_header/FRAMEWIN.h	92;"	d
FRAMEWIN_SF_MOVEABLE	emwin/emWin_header/FRAMEWIN.h	90;"	d
FRAMEWIN_SF_TITLEVIS	emwin/emWin_header/FRAMEWIN.h	91;"	d
FRAMEWIN_SKINFLEX_PI_ACTIVE	emwin/emWin_header/FRAMEWIN.h	107;"	d
FRAMEWIN_SKINFLEX_PI_INACTIVE	emwin/emWin_header/FRAMEWIN.h	108;"	d
FRAMEWIN_SKINFLEX_PROPS	emwin/emWin_header/FRAMEWIN.h	/^} FRAMEWIN_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon277
FRAMEWIN_SKIN_FLEX	emwin/emWin_header/FRAMEWIN.h	203;"	d
FRAMEWIN_SKIN_PRIVATE	emwin/emWin_header/FRAMEWIN_Private.h	/^} FRAMEWIN_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon278
FRAMEWIN_SetDefaultCaptionSize	emwin/emWin_header/FRAMEWIN.h	251;"	d
FRAMEWIN_TEXTALIGN_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	163;"	d
FRAMEWIN_TEXTCOLOR_ACTIVE_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	153;"	d
FRAMEWIN_TEXTCOLOR_ACTIVE_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	155;"	d
FRAMEWIN_TEXTCOLOR_INACTIVE_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	142;"	d
FRAMEWIN_TEXTCOLOR_INACTIVE_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	144;"	d
FRAMEWIN_TITLEHEIGHT_DEFAULT	emwin/emWin_header/FRAMEWIN_Private.h	76;"	d
FREERTOS_CONFIG_H	source/FreeRTOSConfig.h	27;"	d
FREERTOS_DEBUG_CONFIG_MAJOR_VERSION	amazon-freertos/include/freertos_tasks_c_additions.h	19;"	d
FREERTOS_DEBUG_CONFIG_MINOR_VERSION	amazon-freertos/include/freertos_tasks_c_additions.h	20;"	d
FREERTOS_MESSAGE_BUFFER_H	amazon-freertos/include/message_buffer.h	63;"	d
FREERTOS_SYSTEM_CALL	amazon-freertos/include/mpu_wrappers.h	164;"	d
FREERTOS_SYSTEM_CALL	amazon-freertos/include/mpu_wrappers.h	171;"	d
FREERTOS_SYSTEM_CALL	amazon-freertos/include/mpu_wrappers.h	179;"	d
FREERTOS_TASKS_C_ADDITIONS_H	amazon-freertos/include/freertos_tasks_c_additions.h	11;"	d
FREQMEAS_PMUX_ID	drivers/fsl_inputmux_connections.h	36;"	d
FREQMEAS_REF	device/LPC54018.h	/^  __IO uint32_t FREQMEAS_REF;                      \/**< Selection for frequency measurement reference clock, offset: 0x180 *\/$/;"	m	struct:__anon163
FREQMEAS_TARGET	device/LPC54018.h	/^  __IO uint32_t FREQMEAS_TARGET;                   \/**< Selection for frequency measurement target clock, offset: 0x184 *\/$/;"	m	struct:__anon163
FREQMECTRL	device/LPC54018.h	/^  __IO uint32_t FREQMECTRL;                        \/**< Frequency measure register, offset: 0x418 *\/$/;"	m	struct:__anon185
FRGCLKSEL	device/LPC54018.h	/^  __IO uint32_t FRGCLKSEL;                         \/**< Fractional Rate Generator clock source select, offset: 0x2E8 *\/$/;"	m	struct:__anon185
FRGCTRL	device/LPC54018.h	/^  __IO uint32_t FRGCTRL;                           \/**< Fractional rate divider, offset: 0x3A0 *\/$/;"	m	struct:__anon185
FROCTRL	device/LPC54018.h	/^  __IO uint32_t FROCTRL;                           \/**< FRO oscillator control, offset: 0x500 *\/$/;"	m	struct:__anon185
FROHFDIV	device/LPC54018.h	/^  __IO uint32_t FROHFDIV;                          \/**< FROHF clock divider, offset: 0x388 *\/$/;"	m	struct:__anon185
FSCR	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t FSCR;                   \/*!< Offset: 0x308 (R\/ )  Formatter Synchronization Counter Register *\/$/;"	m	struct:__anon125
FSCR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t FSCR;                   \/*!< Offset: 0x308 (R\/ )  Formatter Synchronization Counter Register *\/$/;"	m	struct:__anon24
FSCR	CMSIS/core_cm4.h	/^  __IM  uint32_t FSCR;                   \/*!< Offset: 0x308 (R\/ )  Formatter Synchronization Counter Register *\/$/;"	m	struct:__anon46
FSK	codec2/fsk.h	/^struct FSK {$/;"	s
FSK_CHIP_MODE	radio/sx1276-Fsk.h	/^}FSK_CHIP_MODE;$/;"	t	typeref:enum:__anon491
FSK_CRC_EN	radio/sx1276-Fsk.h	/^}FSK_CRC_EN;$/;"	t	typeref:enum:__anon493
FSK_CRC_OFF	radio/sx1276-Fsk.h	/^    FSK_CRC_OFF                  =   0x00,       \/\/Disables Crc$/;"	e	enum:__anon493
FSK_CRC_ON	radio/sx1276-Fsk.h	/^    FSK_CRC_ON                   =   0x01,       \/\/Enables Crc$/;"	e	enum:__anon493
FSK_MODE_FSRX	radio/sx1276-Fsk.h	/^    FSK_MODE_FSRX                =   0x04,       \/\/frequency synthesis rx mode$/;"	e	enum:__anon491
FSK_MODE_FSTX	radio/sx1276-Fsk.h	/^    FSK_MODE_FSTX                =   0x02,       \/\/frequency synthesis tx mode$/;"	e	enum:__anon491
FSK_MODE_RX	radio/sx1276-Fsk.h	/^    FSK_MODE_RX                  =   0x05,       \/\/receive continuous mode$/;"	e	enum:__anon491
FSK_MODE_SLEEP	radio/sx1276-Fsk.h	/^    FSK_MODE_SLEEP               =   0x00,       \/\/sleep mode$/;"	e	enum:__anon491
FSK_MODE_STDBY	radio/sx1276-Fsk.h	/^    FSK_MODE_STDBY               =   0x01,       \/\/standby mode$/;"	e	enum:__anon491
FSK_MODE_TX	radio/sx1276-Fsk.h	/^    FSK_MODE_TX                  =   0x03,       \/\/transmit mode$/;"	e	enum:__anon491
FSK_REG	radio/sx1276-LoRa.h	/^	FSK_REG                      =   0x01,       \/\/Access FSK registers page (in mode LoRa) 0x0D: 0x3F$/;"	e	enum:__anon479
FSK_SCALE	codec2/fsk.h	41;"	d
FSL_CLOCK_DRIVER_VERSION	drivers/fsl_clock.h	27;"	d
FSL_CODEC_DRIVER_VERSION	codec/fsl_codec_common.h	19;"	d
FSL_COMMON_DRIVER_VERSION	drivers/fsl_common.h	42;"	d
FSL_COMPONENT_ID	drivers/freertos/fsl_i2c_freertos.c	13;"	d	file:
FSL_COMPONENT_ID	drivers/freertos/fsl_spi_freertos.c	13;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_clock.c	17;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_common.c	21;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_ctimer.c	13;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_dma.c	17;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_dmic.c	13;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_dmic_dma.c	17;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_emc.c	17;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_enet.c	16;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_flexcomm.c	18;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_gpio.c	13;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_i2c.c	20;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_i2c_cmsis.c	25;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_i2c_dma.c	18;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_i2s.c	19;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_i2s_dma.c	20;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_inputmux.c	17;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_inputmux_connections.h	18;"	d
FSL_COMPONENT_ID	drivers/fsl_iocon.h	27;"	d
FSL_COMPONENT_ID	drivers/fsl_pint.c	13;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_power.c	13;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_reset.c	18;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_rng.h	26;"	d
FSL_COMPONENT_ID	drivers/fsl_sctimer.c	17;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_sha.c	16;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_spi.c	18;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_spi_cmsis.c	25;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_spi_dma.c	17;"	d	file:
FSL_COMPONENT_ID	drivers/fsl_usart.c	15;"	d	file:
FSL_COMPONENT_ID	usb/device/source/usb_device_dci.c	46;"	d	file:
FSL_CTIMER_DRIVER_VERSION	drivers/fsl_ctimer.h	26;"	d
FSL_DMA_DRIVER_VERSION	drivers/fsl_dma.h	27;"	d
FSL_DMIC_DMA_DRIVER_VERSION	drivers/fsl_dmic_dma.h	31;"	d
FSL_DMIC_DRIVER_VERSION	drivers/fsl_dmic.h	31;"	d
FSL_DRIVER_TRANSFER_DOUBLE_WEAK_IRQ	drivers/fsl_common.h	177;"	d
FSL_EMC_DRIVER_VERSION	drivers/fsl_emc.h	25;"	d
FSL_ENET_DRIVER_VERSION	drivers/fsl_enet.h	25;"	d
FSL_FEATURE_ADC_HAS_CALIB_REG	device/LPC54018_features.h	131;"	d
FSL_FEATURE_ADC_HAS_CTRL_ASYNMODE	device/LPC54018_features.h	115;"	d
FSL_FEATURE_ADC_HAS_CTRL_BYPASSCAL	device/LPC54018_features.h	119;"	d
FSL_FEATURE_ADC_HAS_CTRL_CALMODE	device/LPC54018_features.h	125;"	d
FSL_FEATURE_ADC_HAS_CTRL_LPWRMODE	device/LPC54018_features.h	123;"	d
FSL_FEATURE_ADC_HAS_CTRL_RESOL	device/LPC54018_features.h	117;"	d
FSL_FEATURE_ADC_HAS_CTRL_TSAMP	device/LPC54018_features.h	121;"	d
FSL_FEATURE_ADC_HAS_NO_INSEL	device/LPC54018_features.h	113;"	d
FSL_FEATURE_ADC_HAS_STARTUP_REG	device/LPC54018_features.h	127;"	d
FSL_FEATURE_ADC_HAS_TRIM_REG	device/LPC54018_features.h	129;"	d
FSL_FEATURE_CAN_SUPPORT_CANFD	device/LPC54018_features.h	136;"	d
FSL_FEATURE_DMA_ALL_CHANNELS	drivers/fsl_dma.h	36;"	d
FSL_FEATURE_DMA_DESCRIPTOR_ALIGN_SIZE	device/LPC54018_features.h	143;"	d
FSL_FEATURE_DMA_LINK_DESCRIPTOR_ALIGN_SIZE	device/LPC54018_features.h	145;"	d
FSL_FEATURE_DMA_LINK_DESCRIPTOR_ALIGN_SIZE	drivers/fsl_dma.h	39;"	d
FSL_FEATURE_DMA_MAX_CHANNELS	drivers/fsl_dma.h	35;"	d
FSL_FEATURE_DMA_NUMBER_OF_CHANNELS	device/LPC54018_features.h	141;"	d
FSL_FEATURE_DMA_NUMBER_OF_CHANNELSn	drivers/fsl_dma.h	34;"	d
FSL_FEATURE_FLEXCOMM0_I2C_INDEX	device/LPC54018_features.h	154;"	d
FSL_FEATURE_FLEXCOMM0_SPI_INDEX	device/LPC54018_features.h	152;"	d
FSL_FEATURE_FLEXCOMM0_USART_INDEX	device/LPC54018_features.h	150;"	d
FSL_FEATURE_FLEXCOMM1_I2C_INDEX	device/LPC54018_features.h	160;"	d
FSL_FEATURE_FLEXCOMM1_SPI_INDEX	device/LPC54018_features.h	158;"	d
FSL_FEATURE_FLEXCOMM1_USART_INDEX	device/LPC54018_features.h	156;"	d
FSL_FEATURE_FLEXCOMM2_I2C_INDEX	device/LPC54018_features.h	166;"	d
FSL_FEATURE_FLEXCOMM2_SPI_INDEX	device/LPC54018_features.h	164;"	d
FSL_FEATURE_FLEXCOMM2_USART_INDEX	device/LPC54018_features.h	162;"	d
FSL_FEATURE_FLEXCOMM3_I2C_INDEX	device/LPC54018_features.h	172;"	d
FSL_FEATURE_FLEXCOMM3_SPI_INDEX	device/LPC54018_features.h	170;"	d
FSL_FEATURE_FLEXCOMM3_USART_INDEX	device/LPC54018_features.h	168;"	d
FSL_FEATURE_FLEXCOMM4_I2C_INDEX	device/LPC54018_features.h	178;"	d
FSL_FEATURE_FLEXCOMM4_SPI_INDEX	device/LPC54018_features.h	176;"	d
FSL_FEATURE_FLEXCOMM4_USART_INDEX	device/LPC54018_features.h	174;"	d
FSL_FEATURE_FLEXCOMM5_I2C_INDEX	device/LPC54018_features.h	184;"	d
FSL_FEATURE_FLEXCOMM5_SPI_INDEX	device/LPC54018_features.h	182;"	d
FSL_FEATURE_FLEXCOMM5_USART_INDEX	device/LPC54018_features.h	180;"	d
FSL_FEATURE_FLEXCOMM6_I2C_INDEX	device/LPC54018_features.h	190;"	d
FSL_FEATURE_FLEXCOMM6_I2S_INDEX	device/LPC54018_features.h	192;"	d
FSL_FEATURE_FLEXCOMM6_SPI_INDEX	device/LPC54018_features.h	188;"	d
FSL_FEATURE_FLEXCOMM6_USART_INDEX	device/LPC54018_features.h	186;"	d
FSL_FEATURE_FLEXCOMM7_I2C_INDEX	device/LPC54018_features.h	198;"	d
FSL_FEATURE_FLEXCOMM7_I2S_INDEX	device/LPC54018_features.h	200;"	d
FSL_FEATURE_FLEXCOMM7_SPI_INDEX	device/LPC54018_features.h	196;"	d
FSL_FEATURE_FLEXCOMM7_USART_INDEX	device/LPC54018_features.h	194;"	d
FSL_FEATURE_FLEXCOMM8_I2C_INDEX	device/LPC54018_features.h	206;"	d
FSL_FEATURE_FLEXCOMM8_SPI_INDEX	device/LPC54018_features.h	204;"	d
FSL_FEATURE_FLEXCOMM8_USART_INDEX	device/LPC54018_features.h	202;"	d
FSL_FEATURE_FLEXCOMM9_I2C_INDEX	device/LPC54018_features.h	212;"	d
FSL_FEATURE_FLEXCOMM9_SPI_INDEX	device/LPC54018_features.h	210;"	d
FSL_FEATURE_FLEXCOMM9_USART_INDEX	device/LPC54018_features.h	208;"	d
FSL_FEATURE_FLEXCOMM_I2S_HAS_DMIC_INTERCONNECTION	device/LPC54018_features.h	232;"	d
FSL_FEATURE_FLEXCOMM_INSTANCE_I2S_HAS_DMIC_INTERCONNECTIONn	device/LPC54018_features.h	214;"	d
FSL_FEATURE_I2S_SUPPORT_SECONDARY_CHANNEL	device/LPC54018_features.h	230;"	d
FSL_FEATURE_INTERRUPT_IRQ_MAX	device/LPC54018_features.h	249;"	d
FSL_FEATURE_INTERRUPT_IRQ_MIN	device/LPC54018_features.h	247;"	d
FSL_FEATURE_IOCON_FUNC_FIELD_WIDTH	device/LPC54018_features.h	237;"	d
FSL_FEATURE_MRT_NUMBER_OF_CHANNELS	device/LPC54018_features.h	242;"	d
FSL_FEATURE_PINT_NUMBER_OF_CONNECTED_OUTPUTS	device/LPC54018_features.h	254;"	d
FSL_FEATURE_RIT_HAS_NO_RESET	device/LPC54018_features.h	259;"	d
FSL_FEATURE_RTC_HAS_NO_RESET	device/LPC54018_features.h	264;"	d
FSL_FEATURE_SCT_NUMBER_OF_EVENTS	device/LPC54018_features.h	269;"	d
FSL_FEATURE_SCT_NUMBER_OF_MATCH_CAPTURE	device/LPC54018_features.h	273;"	d
FSL_FEATURE_SCT_NUMBER_OF_OUTPUTS	device/LPC54018_features.h	275;"	d
FSL_FEATURE_SCT_NUMBER_OF_STATES	device/LPC54018_features.h	271;"	d
FSL_FEATURE_SDIF_FIFO_DEPTH_64_32BITS	device/LPC54018_features.h	280;"	d
FSL_FEATURE_SDIF_INTERNAL_DMA_MAX_BUFFER_SIZE	device/LPC54018_features.h	282;"	d
FSL_FEATURE_SDIF_MAX_SOURCE_CLOCK	device/LPC54018_features.h	284;"	d
FSL_FEATURE_SOC_ADC_COUNT	device/LPC54018_features.h	38;"	d
FSL_FEATURE_SOC_ASYNC_SYSCON_COUNT	device/LPC54018_features.h	40;"	d
FSL_FEATURE_SOC_CRC_COUNT	device/LPC54018_features.h	44;"	d
FSL_FEATURE_SOC_CTIMER_COUNT	device/LPC54018_features.h	46;"	d
FSL_FEATURE_SOC_DMA_COUNT	device/LPC54018_features.h	48;"	d
FSL_FEATURE_SOC_DMIC_COUNT	device/LPC54018_features.h	50;"	d
FSL_FEATURE_SOC_EMC_COUNT	device/LPC54018_features.h	52;"	d
FSL_FEATURE_SOC_FLEXCOMM_COUNT	device/LPC54018_features.h	56;"	d
FSL_FEATURE_SOC_GINT_COUNT	device/LPC54018_features.h	58;"	d
FSL_FEATURE_SOC_GPIO_COUNT	device/LPC54018_features.h	60;"	d
FSL_FEATURE_SOC_I2C_COUNT	device/LPC54018_features.h	62;"	d
FSL_FEATURE_SOC_I2S_COUNT	device/LPC54018_features.h	64;"	d
FSL_FEATURE_SOC_INPUTMUX_COUNT	device/LPC54018_features.h	66;"	d
FSL_FEATURE_SOC_IOCON_COUNT	device/LPC54018_features.h	68;"	d
FSL_FEATURE_SOC_LCD_COUNT	device/LPC54018_features.h	70;"	d
FSL_FEATURE_SOC_LPC_CAN_COUNT	device/LPC54018_features.h	42;"	d
FSL_FEATURE_SOC_LPC_ENET_COUNT	device/LPC54018_features.h	54;"	d
FSL_FEATURE_SOC_LPC_RNG_COUNT	device/LPC54018_features.h	78;"	d
FSL_FEATURE_SOC_MRT_COUNT	device/LPC54018_features.h	72;"	d
FSL_FEATURE_SOC_PINT_COUNT	device/LPC54018_features.h	74;"	d
FSL_FEATURE_SOC_RIT_COUNT	device/LPC54018_features.h	76;"	d
FSL_FEATURE_SOC_RTC_COUNT	device/LPC54018_features.h	80;"	d
FSL_FEATURE_SOC_SCT_COUNT	device/LPC54018_features.h	82;"	d
FSL_FEATURE_SOC_SDIF_COUNT	device/LPC54018_features.h	84;"	d
FSL_FEATURE_SOC_SHA_COUNT	device/LPC54018_features.h	86;"	d
FSL_FEATURE_SOC_SMARTCARD_COUNT	device/LPC54018_features.h	88;"	d
FSL_FEATURE_SOC_SPIFI_COUNT	device/LPC54018_features.h	92;"	d
FSL_FEATURE_SOC_SPI_COUNT	device/LPC54018_features.h	90;"	d
FSL_FEATURE_SOC_SYSCON_COUNT	device/LPC54018_features.h	94;"	d
FSL_FEATURE_SOC_USART_COUNT	device/LPC54018_features.h	96;"	d
FSL_FEATURE_SOC_USBFSH_COUNT	device/LPC54018_features.h	100;"	d
FSL_FEATURE_SOC_USBHSD_COUNT	device/LPC54018_features.h	102;"	d
FSL_FEATURE_SOC_USBHSH_COUNT	device/LPC54018_features.h	104;"	d
FSL_FEATURE_SOC_USB_COUNT	device/LPC54018_features.h	98;"	d
FSL_FEATURE_SOC_UTICK_COUNT	device/LPC54018_features.h	106;"	d
FSL_FEATURE_SOC_WWDT_COUNT	device/LPC54018_features.h	108;"	d
FSL_FEATURE_SPIFI_END_ADDR	device/LPC54018_features.h	291;"	d
FSL_FEATURE_SPIFI_START_ADDR	device/LPC54018_features.h	289;"	d
FSL_FEATURE_SYSCON_IAP_ENTRY_LOCATION	device/LPC54018_features.h	296;"	d
FSL_FEATURE_SYSTICK_EXT_REF_CORE_DIV	device/LPC54018_features.h	303;"	d
FSL_FEATURE_SYSTICK_HAS_EXT_REF	device/LPC54018_features.h	301;"	d
FSL_FEATURE_USBFSH_USB_RAM	device/LPC54018_features.h	319;"	d
FSL_FEATURE_USBFSH_USB_RAM_BASE_ADDRESS	device/LPC54018_features.h	321;"	d
FSL_FEATURE_USBFSH_VERSION	device/LPC54018_features.h	323;"	d
FSL_FEATURE_USBHSD_EP_NUM	device/LPC54018_features.h	334;"	d
FSL_FEATURE_USBHSD_USB_RAM	device/LPC54018_features.h	328;"	d
FSL_FEATURE_USBHSD_USB_RAM_BASE_ADDRESS	device/LPC54018_features.h	330;"	d
FSL_FEATURE_USBHSD_VERSION	device/LPC54018_features.h	332;"	d
FSL_FEATURE_USBHSH_USB_RAM	device/LPC54018_features.h	339;"	d
FSL_FEATURE_USBHSH_USB_RAM_BASE_ADDRESS	device/LPC54018_features.h	341;"	d
FSL_FEATURE_USBHSH_VERSION	device/LPC54018_features.h	343;"	d
FSL_FEATURE_USB_EP_NUM	device/LPC54018_features.h	314;"	d
FSL_FEATURE_USB_USB_RAM	device/LPC54018_features.h	308;"	d
FSL_FEATURE_USB_USB_RAM_BASE_ADDRESS	device/LPC54018_features.h	310;"	d
FSL_FEATURE_USB_VERSION	device/LPC54018_features.h	312;"	d
FSL_FLEXCOMM_DRIVER_VERSION	drivers/fsl_flexcomm.h	21;"	d
FSL_FROHF_SETTING_API_ADDRESS_DETERMINE_BY_ROM_VERSION	device/LPC54018.h	15729;"	d
FSL_GPIO_DRIVER_VERSION	drivers/fsl_gpio.h	28;"	d
FSL_I2C_DMA_DRIVER_VERSION	drivers/fsl_i2c_dma.h	26;"	d
FSL_I2C_DRIVER_VERSION	drivers/fsl_i2c.h	31;"	d
FSL_I2C_FREERTOS_DRIVER_VERSION	drivers/freertos/fsl_i2c_freertos.h	29;"	d
FSL_I2S_DMA_DRIVER_VERSION	drivers/fsl_i2s_dma.h	30;"	d
FSL_I2S_DRIVER_VERSION	drivers/fsl_i2s.h	30;"	d
FSL_INPUTMUX_DRIVER_VERSION	drivers/fsl_inputmux.h	30;"	d
FSL_IOCON_DRIVER_VERSION	drivers/fsl_iocon.h	33;"	d
FSL_PHY_DRIVER_VERSION	board/fsl_phy.h	23;"	d
FSL_PINT_DRIVER_VERSION	drivers/fsl_pint.h	27;"	d
FSL_POWER_DRIVER_VERSION	drivers/fsl_power.h	26;"	d
FSL_RESET_DRIVER_VERSION	drivers/fsl_reset.h	31;"	d
FSL_RNG_DRIVER_VERSION	drivers/fsl_rng.h	39;"	d
FSL_ROM_VERSION_0A	device/LPC54018.h	15730;"	d
FSL_ROM_VERSION_0A_FRO_SETTING_ADDR	device/LPC54018.h	15732;"	d
FSL_ROM_VERSION_1B	device/LPC54018.h	15731;"	d
FSL_ROM_VERSION_1B_FRO_SETTING_ADDR	device/LPC54018.h	15733;"	d
FSL_SCTIMER_DRIVER_VERSION	drivers/fsl_sctimer.h	26;"	d
FSL_SDK_DISABLE_DRIVER_CLOCK_CONTROL	drivers/fsl_clock.h	41;"	d
FSL_SHA_DRIVER_VERSION	drivers/fsl_sha.h	26;"	d
FSL_SPI_DMA_DRIVER_VERSION	drivers/fsl_spi_dma.h	28;"	d
FSL_SPI_DRIVER_VERSION	drivers/fsl_spi.h	28;"	d
FSL_SPI_FREERTOS_DRIVER_VERSION	drivers/freertos/fsl_spi_freertos.h	31;"	d
FSL_USART_DRIVER_VERSION	drivers/fsl_usart.h	25;"	d
FSL_WM8904_DRIVER_VERSION	codec/fsl_wm8904.h	25;"	d
FSMDEBUG	lwip/src/include/netif/ppp/pppdebug.h	60;"	d
FSMDEBUG	lwip/src/include/netif/ppp/pppdebug.h	72;"	d
FSM_DEFMAXCONFREQS	lwip/src/include/netif/ppp/ppp_opts.h	383;"	d
FSM_DEFMAXNAKLOOPS	lwip/src/include/netif/ppp/ppp_opts.h	390;"	d
FSM_DEFMAXTERMREQS	lwip/src/include/netif/ppp/ppp_opts.h	376;"	d
FSM_DEFTIMEOUT	lwip/src/include/netif/ppp/ppp_opts.h	369;"	d
FSM_H	lwip/src/include/netif/ppp/fsm.h	49;"	d
FS_CDC_VCOM_BULK_IN_PACKET_SIZE	vcom/usb_device_descriptor.h	143;"	d
FS_CDC_VCOM_BULK_IN_PACKET_SIZE_2	vcom/usb_device_descriptor.h	148;"	d
FS_CDC_VCOM_BULK_OUT_PACKET_SIZE	vcom/usb_device_descriptor.h	145;"	d
FS_CDC_VCOM_BULK_OUT_PACKET_SIZE_2	vcom/usb_device_descriptor.h	150;"	d
FS_CDC_VCOM_INTERRUPT_IN_INTERVAL	vcom/usb_device_descriptor.h	135;"	d
FS_CDC_VCOM_INTERRUPT_IN_INTERVAL_2	vcom/usb_device_descriptor.h	140;"	d
FS_CDC_VCOM_INTERRUPT_IN_PACKET_SIZE	vcom/usb_device_descriptor.h	133;"	d
FS_CDC_VCOM_INTERRUPT_IN_PACKET_SIZE_2	vcom/usb_device_descriptor.h	138;"	d
FUNCTION0	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION0;              \/*!< Offset: 0x028 (R\/W)  Function Register 0 *\/$/;"	m	struct:__anon124
FUNCTION0	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION0;              \/*!< Offset: 0x028 (R\/W)  Function Register 0 *\/$/;"	m	struct:__anon23
FUNCTION0	CMSIS/core_cm4.h	/^  __IOM uint32_t FUNCTION0;              \/*!< Offset: 0x028 (R\/W)  Function Register 0 *\/$/;"	m	struct:__anon45
FUNCTION1	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION1;              \/*!< Offset: 0x038 (R\/W)  Function Register 1 *\/$/;"	m	struct:__anon124
FUNCTION1	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION1;              \/*!< Offset: 0x038 (R\/W)  Function Register 1 *\/$/;"	m	struct:__anon23
FUNCTION1	CMSIS/core_cm4.h	/^  __IOM uint32_t FUNCTION1;              \/*!< Offset: 0x038 (R\/W)  Function Register 1 *\/$/;"	m	struct:__anon45
FUNCTION10	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION10;             \/*!< Offset: 0x0C8 (R\/W)  Function Register 10 *\/$/;"	m	struct:__anon124
FUNCTION10	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION10;             \/*!< Offset: 0x0C8 (R\/W)  Function Register 10 *\/$/;"	m	struct:__anon23
FUNCTION11	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION11;             \/*!< Offset: 0x0D8 (R\/W)  Function Register 11 *\/$/;"	m	struct:__anon124
FUNCTION11	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION11;             \/*!< Offset: 0x0D8 (R\/W)  Function Register 11 *\/$/;"	m	struct:__anon23
FUNCTION12	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION12;             \/*!< Offset: 0x0E8 (R\/W)  Function Register 12 *\/$/;"	m	struct:__anon124
FUNCTION12	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION12;             \/*!< Offset: 0x0E8 (R\/W)  Function Register 12 *\/$/;"	m	struct:__anon23
FUNCTION13	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION13;             \/*!< Offset: 0x0F8 (R\/W)  Function Register 13 *\/$/;"	m	struct:__anon124
FUNCTION13	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION13;             \/*!< Offset: 0x0F8 (R\/W)  Function Register 13 *\/$/;"	m	struct:__anon23
FUNCTION14	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION14;             \/*!< Offset: 0x108 (R\/W)  Function Register 14 *\/$/;"	m	struct:__anon124
FUNCTION14	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION14;             \/*!< Offset: 0x108 (R\/W)  Function Register 14 *\/$/;"	m	struct:__anon23
FUNCTION15	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION15;             \/*!< Offset: 0x118 (R\/W)  Function Register 15 *\/$/;"	m	struct:__anon124
FUNCTION15	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION15;             \/*!< Offset: 0x118 (R\/W)  Function Register 15 *\/$/;"	m	struct:__anon23
FUNCTION2	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION2;              \/*!< Offset: 0x048 (R\/W)  Function Register 2 *\/$/;"	m	struct:__anon124
FUNCTION2	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION2;              \/*!< Offset: 0x048 (R\/W)  Function Register 2 *\/$/;"	m	struct:__anon23
FUNCTION2	CMSIS/core_cm4.h	/^  __IOM uint32_t FUNCTION2;              \/*!< Offset: 0x048 (R\/W)  Function Register 2 *\/$/;"	m	struct:__anon45
FUNCTION3	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION3;              \/*!< Offset: 0x058 (R\/W)  Function Register 3 *\/$/;"	m	struct:__anon124
FUNCTION3	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION3;              \/*!< Offset: 0x058 (R\/W)  Function Register 3 *\/$/;"	m	struct:__anon23
FUNCTION3	CMSIS/core_cm4.h	/^  __IOM uint32_t FUNCTION3;              \/*!< Offset: 0x058 (R\/W)  Function Register 3 *\/$/;"	m	struct:__anon45
FUNCTION4	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION4;              \/*!< Offset: 0x068 (R\/W)  Function Register 4 *\/$/;"	m	struct:__anon124
FUNCTION4	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION4;              \/*!< Offset: 0x068 (R\/W)  Function Register 4 *\/$/;"	m	struct:__anon23
FUNCTION5	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION5;              \/*!< Offset: 0x078 (R\/W)  Function Register 5 *\/$/;"	m	struct:__anon124
FUNCTION5	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION5;              \/*!< Offset: 0x078 (R\/W)  Function Register 5 *\/$/;"	m	struct:__anon23
FUNCTION6	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION6;              \/*!< Offset: 0x088 (R\/W)  Function Register 6 *\/$/;"	m	struct:__anon124
FUNCTION6	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION6;              \/*!< Offset: 0x088 (R\/W)  Function Register 6 *\/$/;"	m	struct:__anon23
FUNCTION7	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION7;              \/*!< Offset: 0x098 (R\/W)  Function Register 7 *\/$/;"	m	struct:__anon124
FUNCTION7	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION7;              \/*!< Offset: 0x098 (R\/W)  Function Register 7 *\/$/;"	m	struct:__anon23
FUNCTION8	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION8;              \/*!< Offset: 0x0A8 (R\/W)  Function Register 8 *\/$/;"	m	struct:__anon124
FUNCTION8	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION8;              \/*!< Offset: 0x0A8 (R\/W)  Function Register 8 *\/$/;"	m	struct:__anon23
FUNCTION9	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t FUNCTION9;              \/*!< Offset: 0x0B8 (R\/W)  Function Register 9 *\/$/;"	m	struct:__anon124
FUNCTION9	CMSIS/core_armv8mml.h	/^  __IOM uint32_t FUNCTION9;              \/*!< Offset: 0x0B8 (R\/W)  Function Register 9 *\/$/;"	m	struct:__anon23
F_GETFL	lwip/src/include/lwip/sockets.h	435;"	d
F_SETFL	lwip/src/include/lwip/sockets.h	438;"	d
FaceIndex	emwin/emWin_header/GUI_Type.h	/^  int FaceIndex;           \/* Some font files can contain more than one font face. In case of more than one face$/;"	m	struct:__anon268
Factor	emwin/emWin_header/GRAPH_Private.h	/^  float             Factor;$/;"	m	struct:GRAPH_SCALE_OBJ
Factor	emwin/emWin_header/WM.h	/^  I32            Factor;    \/\/ Current zoom factor$/;"	m	struct:__anon289
Factor0	emwin/emWin_header/WM.h	/^  I32       Factor0;     \/\/ Primary factor when starting zoom gesture (<< 16)$/;"	m	struct:__anon288
FactorMax	emwin/emWin_header/WM.h	/^  I32       FactorMax;   \/\/ Maximum factor to be used (<< 16)$/;"	m	struct:__anon288
FactorMin	emwin/emWin_header/WM.h	/^  I32       FactorMin;   \/\/ Minimum factor to be used (<< 16)$/;"	m	struct:__anon288
FileEntry	emwin/emWin_header/IP_FS.h	/^  IP_FS_READ_ONLY_FILE_ENTRY FileEntry;$/;"	m	struct:IP_FS_READ_ONLY_FILE_HOOK_STRUCT
FileSize	emwin/emWin_header/GUI_GIF_Private.h	/^  U32   FileSize;$/;"	m	struct:__anon325
FileSize	emwin/emWin_header/GUI_JPEG_Private.h	/^  I32   FileSize;$/;"	m	struct:__anon361
FileSize	emwin/emWin_header/IMAGE_Private.h	/^  U32                 FileSize;$/;"	m	struct:__anon315
FileSize	emwin/emWin_header/IP_FS.h	/^        unsigned int   FileSize;$/;"	m	struct:__anon300
FinalMove	emwin/emWin_header/WM.h	/^  U8  FinalMove;$/;"	m	struct:__anon287
FindGreatestCommonDivisor	drivers/fsl_clock.c	/^static uint32_t FindGreatestCommonDivisor(uint32_t m, uint32_t n)$/;"	f	file:
First	emwin/emWin_header/GUI_Type.h	/^  U16 First;                         \/* First character of font *\/$/;"	m	struct:__anon266
First	emwin/emWin_header/GUI_Type.h	/^  U16 First;        \/* Index of first character *\/$/;"	m	struct:__anon263
First	emwin/emWin_header/GUI_Type.h	/^  U16P First;                                  \/* First character               *\/$/;"	m	struct:GUI_FONT_PROP
First	emwin/emWin_header/GUI_Type.h	/^  U16P First;                                  \/* First character               *\/$/;"	m	struct:GUI_FONT_PROP_EXT
FirstCOM	emwin/emWin_header/GUIDRV_FlexColor.h	/^  int FirstCOM;$/;"	m	struct:__anon364
FirstCOM	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int FirstSEG, FirstCOM;$/;"	m	struct:DRIVER_CONTEXT
FirstCOM	emwin/emWin_header/GUIDRV_S1D15G00.h	/^  int FirstCOM;$/;"	m	struct:__anon228
FirstCOM	emwin/emWin_header/GUIDRV_SLin.h	/^  int FirstCOM;$/;"	m	struct:__anon223
FirstCOM	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int FirstCOM;$/;"	m	struct:DRIVER_CONTEXT
FirstCOM	emwin/emWin_header/GUIDRV_SPage.h	/^  int FirstCOM;$/;"	m	struct:__anon346
FirstCOM	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int FirstCOM;$/;"	m	struct:DRIVER_CONTEXT
FirstCOM	emwin/emWin_header/GUIDRV_SSD1926.h	/^  int FirstCOM;$/;"	m	struct:__anon302
FirstCOM	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int FirstCOM;$/;"	m	struct:DRIVER_CONTEXT
FirstCall	emwin/emWin_header/GUI.h	/^  char FirstCall;$/;"	m	struct:__anon393
FirstChar	emwin/emWin_header/GUI_Type.h	/^  U16P                       FirstChar;$/;"	m	struct:__anon257
FirstChar	emwin/emWin_header/GUI_Type.h	/^  U16P FirstChar;$/;"	m	struct:__anon254
FirstCode	emwin/emWin_header/GUI_GIF_Private.h	/^  int   FirstCode;$/;"	m	struct:__anon323
FirstSEG	emwin/emWin_header/GUIDRV_FlexColor.h	/^  int FirstSEG;$/;"	m	struct:__anon364
FirstSEG	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int FirstSEG, FirstCOM;$/;"	m	struct:DRIVER_CONTEXT
FirstSEG	emwin/emWin_header/GUIDRV_S1D15G00.h	/^  int FirstSEG;$/;"	m	struct:__anon228
FirstSEG	emwin/emWin_header/GUIDRV_SLin.h	/^  int FirstSEG;$/;"	m	struct:__anon223
FirstSEG	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int FirstSEG;$/;"	m	struct:DRIVER_CONTEXT
FirstSEG	emwin/emWin_header/GUIDRV_SPage.h	/^  int FirstSEG;$/;"	m	struct:__anon346
FirstSEG	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int FirstSEG;$/;"	m	struct:DRIVER_CONTEXT
FirstSEG	emwin/emWin_header/GUIDRV_SSD1926.h	/^  int FirstSEG;$/;"	m	struct:__anon302
FirstSEG	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int FirstSEG;$/;"	m	struct:DRIVER_CONTEXT
FirstVisible	emwin/emWin_header/SWIPELIST_Private.h	/^  int                     FirstVisible;$/;"	m	struct:__anon238
Fixed	emwin/emWin_header/HEADER_Private.h	/^  unsigned            Fixed;$/;"	m	struct:__anon276
Fixed	emwin/emWin_header/LISTVIEW_Private.h	/^  unsigned                     Fixed;$/;"	m	struct:LISTVIEW_Obj
FixedScrollPos	emwin/emWin_header/LISTBOX_Private.h	/^  U16 FixedScrollPos;$/;"	m	struct:__anon313
Flags	emwin/emWin_header/CHOOSEFILE.h	/^  U32               Flags;                               \/\/ File flags$/;"	m	struct:CHOOSEFILE_INFO
Flags	emwin/emWin_header/DIALOG_Intern.h	/^  U16                      Flags;            \/\/ Widget specific create flags (opt.)$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
Flags	emwin/emWin_header/DROPDOWN_Private.h	/^  U8      Flags;$/;"	m	struct:__anon360
Flags	emwin/emWin_header/EDIT_Private.h	/^  U8                   Flags;$/;"	m	struct:EDIT_Obj_struct
Flags	emwin/emWin_header/FRAMEWIN_Private.h	/^  U16                     Flags;$/;"	m	struct:__anon280
Flags	emwin/emWin_header/GRAPH_Private.h	/^  U16               Flags;$/;"	m	struct:GRAPH_SCALE_OBJ
Flags	emwin/emWin_header/GRAPH_Private.h	/^  U16             Flags;$/;"	m	struct:GRAPH_OBJ
Flags	emwin/emWin_header/GUI.h	/^  U16 Flags;$/;"	m	struct:GUI_DEVICE
Flags	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U16 Flags;$/;"	m	struct:DRIVER_CONTEXT
Flags	emwin/emWin_header/GUI_GIF_Private.h	/^  int Flags;$/;"	m	struct:__anon324
Flags	emwin/emWin_header/GUI_SPRITE_Private.h	/^  U16                Flags;$/;"	m	struct:__anon294
Flags	emwin/emWin_header/GUI_Type.h	/^  U16 Flags;$/;"	m	struct:__anon258
Flags	emwin/emWin_header/GUI_Type.h	/^  U16 Flags;$/;"	m	struct:__anon269
Flags	emwin/emWin_header/ICONVIEW_Private.h	/^  U16                     Flags;$/;"	m	struct:__anon219
Flags	emwin/emWin_header/IMAGE_Private.h	/^  U32 Flags;$/;"	m	struct:__anon314
Flags	emwin/emWin_header/LISTBOX_Private.h	/^  U8 Flags;$/;"	m	struct:__anon313
Flags	emwin/emWin_header/LISTVIEW_Private.h	/^  U8                           Flags;$/;"	m	struct:LISTVIEW_Obj
Flags	emwin/emWin_header/LISTVIEW_Private.h	/^  U8                           Flags;$/;"	m	struct:__anon332
Flags	emwin/emWin_header/MENU.h	/^  U16           Flags;$/;"	m	struct:__anon232
Flags	emwin/emWin_header/MENU_Private.h	/^  U16                 Flags;$/;"	m	struct:__anon319
Flags	emwin/emWin_header/MENU_Private.h	/^  U16         Flags;$/;"	m	struct:__anon317
Flags	emwin/emWin_header/PROGBAR_Private.h	/^  U8 Flags;$/;"	m	struct:__anon424
Flags	emwin/emWin_header/SLIDER_Private.h	/^  U8                  Flags;$/;"	m	struct:__anon377
Flags	emwin/emWin_header/SWIPELIST_Private.h	/^  U8               Flags;$/;"	m	struct:__anon237
Flags	emwin/emWin_header/SWIPELIST_Private.h	/^  U8             Flags;$/;"	m	struct:__anon236
Flags	emwin/emWin_header/TREEVIEW_Private.h	/^  U16                     Flags;$/;"	m	struct:__anon227
Flags	emwin/emWin_header/TREEVIEW_Private.h	/^  U16                  Flags;$/;"	m	struct:__anon225
Flags	emwin/emWin_header/WM.h	/^  U32 Flags;$/;"	m	struct:__anon287
Flags	emwin/emWin_header/WM.h	/^  int            Flags;     \/\/ Information regarding gesture type$/;"	m	struct:__anon289
FocusColor	emwin/emWin_header/BUTTON_Private.h	/^  GUI_COLOR FocusColor;$/;"	m	struct:__anon401
FocusColor	emwin/emWin_header/CHECKBOX_Private.h	/^  GUI_COLOR             FocusColor;$/;"	m	struct:__anon205
FocusColor	emwin/emWin_header/RADIO_Private.h	/^  GUI_COLOR FocusColor;$/;"	m	struct:__anon342
FocusColor	emwin/emWin_header/SLIDER_Private.h	/^  GUI_COLOR           FocusColor;$/;"	m	struct:__anon377
FocusColor	emwin/emWin_header/TREEVIEW_Private.h	/^  GUI_COLOR FocusColor;$/;"	m	struct:__anon226
Format	emwin/emWin_header/GUI_Type.h	/^  U16 Format;$/;"	m	struct:__anon244
FrameColor	emwin/emWin_header/BUTTON_Private.h	/^  GUI_COLOR FrameColor;$/;"	m	struct:__anon401
FrameColor	emwin/emWin_header/MULTIPAGE.h	/^  GUI_COLOR FrameColor;$/;"	m	struct:__anon198
FrameColorH	emwin/emWin_header/MENU.h	/^  GUI_COLOR FrameColorH;$/;"	m	struct:__anon230
FrameColorSelH	emwin/emWin_header/MENU.h	/^  GUI_COLOR FrameColorSelH;$/;"	m	struct:__anon230
FrameColorSelV	emwin/emWin_header/MENU.h	/^  GUI_COLOR FrameColorSelV;$/;"	m	struct:__anon230
FrameColorV	emwin/emWin_header/MENU.h	/^  GUI_COLOR FrameColorV;$/;"	m	struct:__anon230
FrameFlags	emwin/emWin_header/MULTIPAGE.h	/^  U8                FrameFlags;    \/\/ Flags to let the drawing function know which parts of the frame to display.$/;"	m	struct:__anon200
FrameX	emwin/emWin_header/ICONVIEW_Private.h	/^  int              FrameX, FrameY;$/;"	m	struct:__anon218
FrameY	emwin/emWin_header/ICONVIEW_Private.h	/^  int              FrameX, FrameY;$/;"	m	struct:__anon218
FreeBytes	emwin/emWin_header/GUI.h	/^  U32 FreeBytes;$/;"	m	struct:__anon392
FreeRTOSDebugConfig	amazon-freertos/include/freertos_tasks_c_additions.h	/^const uint8_t FreeRTOSDebugConfig[] __attribute__((section(".rodata"))) =$/;"	v
FreeRTOS_errno	amazon-freertos/freertos/tasks.c	/^	int FreeRTOS_errno = 0;$/;"	v
Freq_Table	radio/sx1276.c	/^static const INT8U Freq_Table[][3] = { { 0x66, 0x80, 0x00 },          \/\/410,  0$/;"	v	file:
Fs	codec2/codec2_internal.h	/^    int           Fs;$/;"	m	struct:CODEC2
Fs	codec2/defines.h	/^    int   Fs;            \/* sample rate of this instance             *\/$/;"	m	struct:__anon134
Fs	codec2/fsk.h	/^    int Fs;                 \/* sample freq *\/$/;"	m	struct:FSK
Fs	codec2/nlp.c	/^    int           Fs;                \/* sample rate in Hz            *\/$/;"	m	struct:__anon138	file:
Fsk_DataRate_Table	radio/sx1276-Fsk.c	/^static const INT8U Fsk_DataRate_Table[4][2] =$/;"	v	file:
Fsk_RegsTable1	radio/sx1276-Fsk.c	/^INT8U Fsk_RegsTable1[] =    \/\/0x02 - 0x10$/;"	v
Fsk_RegsTable2	radio/sx1276-Fsk.c	/^INT8U Fsk_RegsTable2[] =    \/\/0x12 - 0x1A$/;"	v
Fsk_RegsTable3	radio/sx1276-Fsk.c	/^INT8U Fsk_RegsTable3[] =    \/\/0x1F - 0x3B$/;"	v
GAINSHIFT	device/LPC54018.h	/^    __IO uint32_t GAINSHIFT;                         \/**< Decimator Gain Shift register, array offset: 0x10, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
GE	CMSIS/core_armv8mml.h	/^    uint32_t GE:4;                       \/*!< bit: 16..19  Greater than or Equal flags *\/$/;"	m	struct:__anon13::__anon14
GE	CMSIS/core_armv8mml.h	/^    uint32_t GE:4;                       \/*!< bit: 16..19  Greater than or Equal flags *\/$/;"	m	struct:__anon9::__anon10
GE	CMSIS/core_cm4.h	/^    uint32_t GE:4;                       \/*!< bit: 16..19  Greater than or Equal flags *\/$/;"	m	struct:__anon31::__anon32
GE	CMSIS/core_cm4.h	/^    uint32_t GE:4;                       \/*!< bit: 16..19  Greater than or Equal flags *\/$/;"	m	struct:__anon35::__anon36
GENERATE_HANN_TABLE_RUNTIME	codec2/fsk.c	58;"	d	file:
GETCHAR	lwip/src/include/netif/ppp/ppp_impl.h	502;"	d
GETCHAR	utilities/fsl_debug_console.h	73;"	d
GETCHAR	utilities/fsl_debug_console.h	78;"	d
GETCHAR	utilities/fsl_debug_console.h	84;"	d
GETLONG	lwip/src/include/netif/ppp/ppp_impl.h	516;"	d
GETSHORT	lwip/src/include/netif/ppp/ppp_impl.h	508;"	d
GET_ID_ITEM	drivers/fsl_clock.h	452;"	d
GET_ID_ITEM_MUX	drivers/fsl_clock.h	454;"	d
GET_ID_ITEM_SEL	drivers/fsl_clock.h	455;"	d
GET_ID_NEXT_ITEM	drivers/fsl_clock.h	453;"	d
GET_ID_SELECTOR	drivers/fsl_clock.h	456;"	d
GET_PLAY_CHANNEL_CAPABILITY	codec/fsl_codec_common.c	15;"	d	file:
GET_PLAY_SOURCE_CAPABILITY	codec/fsl_codec_common.c	16;"	d	file:
GET_RECORD_CHANNEL_CAPABILITY	codec/fsl_codec_common.c	18;"	d	file:
GET_RECORD_SOURCE_CAPABILITY	codec/fsl_codec_common.c	17;"	d	file:
GET_ULONG_BE	lwip/src/netif/ppp/polarssl/des.c	51;"	d	file:
GET_ULONG_BE	lwip/src/netif/ppp/polarssl/sha1.c	52;"	d	file:
GET_ULONG_LE	lwip/src/netif/ppp/polarssl/md4.c	53;"	d	file:
GET_ULONG_LE	lwip/src/netif/ppp/polarssl/md5.c	52;"	d	file:
GFC	device/LPC54018.h	/^  __IO uint32_t GFC;                               \/**< Global Filter Configuration, offset: 0x80 *\/$/;"	m	struct:__anon142
GINT0	device/LPC54018.h	5204;"	d
GINT0_BASE	device/LPC54018.h	5202;"	d
GINT0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void GINT0_IRQHandler(void)$/;"	f
GINT0_IRQn	device/LPC54018.h	/^  GINT0_IRQn                   = 2,                \/**< GPIO group 0 *\/$/;"	e	enum:IRQn
GINT1	device/LPC54018.h	5208;"	d
GINT1_BASE	device/LPC54018.h	5206;"	d
GINT1_IRQHandler	startup/startup_lpc54018.c	/^WEAK void GINT1_IRQHandler(void)$/;"	f
GINT1_IRQn	device/LPC54018.h	/^  GINT1_IRQn                   = 3,                \/**< GPIO group 1 *\/$/;"	e	enum:IRQn
GINT_BASE_ADDRS	device/LPC54018.h	5210;"	d
GINT_BASE_PTRS	device/LPC54018.h	5212;"	d
GINT_CLOCKS	drivers/fsl_clock.h	116;"	d
GINT_CTRL_COMB	device/LPC54018.h	5164;"	d
GINT_CTRL_COMB_MASK	device/LPC54018.h	5158;"	d
GINT_CTRL_COMB_SHIFT	device/LPC54018.h	5159;"	d
GINT_CTRL_INT	device/LPC54018.h	5157;"	d
GINT_CTRL_INT_MASK	device/LPC54018.h	5151;"	d
GINT_CTRL_INT_SHIFT	device/LPC54018.h	5152;"	d
GINT_CTRL_TRIG	device/LPC54018.h	5171;"	d
GINT_CTRL_TRIG_MASK	device/LPC54018.h	5165;"	d
GINT_CTRL_TRIG_SHIFT	device/LPC54018.h	5166;"	d
GINT_IRQS	device/LPC54018.h	5214;"	d
GINT_PORT_ENA_COUNT	device/LPC54018.h	5192;"	d
GINT_PORT_ENA_ENA	device/LPC54018.h	5188;"	d
GINT_PORT_ENA_ENA_MASK	device/LPC54018.h	5186;"	d
GINT_PORT_ENA_ENA_SHIFT	device/LPC54018.h	5187;"	d
GINT_PORT_POL_COUNT	device/LPC54018.h	5182;"	d
GINT_PORT_POL_POL	device/LPC54018.h	5178;"	d
GINT_PORT_POL_POL_MASK	device/LPC54018.h	5176;"	d
GINT_PORT_POL_POL_SHIFT	device/LPC54018.h	5177;"	d
GINT_RSTS	drivers/fsl_reset.h	138;"	d
GINT_Type	device/LPC54018.h	/^} GINT_Type;$/;"	t	typeref:struct:__anon158
GLOBAL_H	emwin/emWin_header/Global.h	51;"	d
GOLAY_POLYNOMIAL	codec2/golay23.c	54;"	d	file:
GPIO	device/LPC54018.h	5402;"	d
GPIO_BASE	device/LPC54018.h	5400;"	d
GPIO_BASE_ADDRS	device/LPC54018.h	5404;"	d
GPIO_BASE_PTRS	device/LPC54018.h	5406;"	d
GPIO_B_COUNT	device/LPC54018.h	5274;"	d
GPIO_B_COUNT2	device/LPC54018.h	5277;"	d
GPIO_B_PBYTE	device/LPC54018.h	5270;"	d
GPIO_B_PBYTE_MASK	device/LPC54018.h	5268;"	d
GPIO_B_PBYTE_SHIFT	device/LPC54018.h	5269;"	d
GPIO_CLOCKS	drivers/fsl_clock.h	106;"	d
GPIO_CLR_CLRP	device/LPC54018.h	5346;"	d
GPIO_CLR_CLRP_MASK	device/LPC54018.h	5344;"	d
GPIO_CLR_CLRP_SHIFT	device/LPC54018.h	5345;"	d
GPIO_CLR_COUNT	device/LPC54018.h	5350;"	d
GPIO_DIRCLR_COUNT	device/LPC54018.h	5380;"	d
GPIO_DIRCLR_DIRCLRP	device/LPC54018.h	5376;"	d
GPIO_DIRCLR_DIRCLRP_MASK	device/LPC54018.h	5374;"	d
GPIO_DIRCLR_DIRCLRP_SHIFT	device/LPC54018.h	5375;"	d
GPIO_DIRNOT_COUNT	device/LPC54018.h	5390;"	d
GPIO_DIRNOT_DIRNOTP	device/LPC54018.h	5386;"	d
GPIO_DIRNOT_DIRNOTP_MASK	device/LPC54018.h	5384;"	d
GPIO_DIRNOT_DIRNOTP_SHIFT	device/LPC54018.h	5385;"	d
GPIO_DIRSET_COUNT	device/LPC54018.h	5370;"	d
GPIO_DIRSET_DIRSETP	device/LPC54018.h	5366;"	d
GPIO_DIRSET_DIRSETP_MASK	device/LPC54018.h	5364;"	d
GPIO_DIRSET_DIRSETP_SHIFT	device/LPC54018.h	5365;"	d
GPIO_DIR_COUNT	device/LPC54018.h	5300;"	d
GPIO_DIR_DIRP	device/LPC54018.h	5296;"	d
GPIO_DIR_DIRP_MASK	device/LPC54018.h	5294;"	d
GPIO_DIR_DIRP_SHIFT	device/LPC54018.h	5295;"	d
GPIO_MASK_COUNT	device/LPC54018.h	5310;"	d
GPIO_MASK_MASKP	device/LPC54018.h	5306;"	d
GPIO_MASK_MASKP_MASK	device/LPC54018.h	5304;"	d
GPIO_MASK_MASKP_SHIFT	device/LPC54018.h	5305;"	d
GPIO_MPIN_COUNT	device/LPC54018.h	5330;"	d
GPIO_MPIN_MPORTP	device/LPC54018.h	5326;"	d
GPIO_MPIN_MPORTP_MASK	device/LPC54018.h	5324;"	d
GPIO_MPIN_MPORTP_SHIFT	device/LPC54018.h	5325;"	d
GPIO_NOT_COUNT	device/LPC54018.h	5360;"	d
GPIO_NOT_NOTP	device/LPC54018.h	5356;"	d
GPIO_NOT_NOTP_MASK	device/LPC54018.h	5354;"	d
GPIO_NOT_NOTP_SHIFT	device/LPC54018.h	5355;"	d
GPIO_PIN_COUNT	device/LPC54018.h	5320;"	d
GPIO_PIN_INT_EDGE	drivers/fsl_gpio.h	53;"	d
GPIO_PIN_INT_LEVEL	drivers/fsl_gpio.h	52;"	d
GPIO_PIN_PORT	device/LPC54018.h	5316;"	d
GPIO_PIN_PORT_MASK	device/LPC54018.h	5314;"	d
GPIO_PIN_PORT_SHIFT	device/LPC54018.h	5315;"	d
GPIO_PinClearInterruptFlag	drivers/fsl_gpio.c	/^void GPIO_PinClearInterruptFlag(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index)$/;"	f
GPIO_PinDisableInterrupt	drivers/fsl_gpio.c	/^void GPIO_PinDisableInterrupt(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index)$/;"	f
GPIO_PinEnableInterrupt	drivers/fsl_gpio.c	/^void GPIO_PinEnableInterrupt(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index)$/;"	f
GPIO_PinInit	drivers/fsl_gpio.c	/^void GPIO_PinInit(GPIO_Type *base, uint32_t port, uint32_t pin, const gpio_pin_config_t *config)$/;"	f
GPIO_PinRead	drivers/fsl_gpio.h	/^static inline uint32_t GPIO_PinRead(GPIO_Type *base, uint32_t port, uint32_t pin)$/;"	f
GPIO_PinWrite	drivers/fsl_gpio.h	/^static inline void GPIO_PinWrite(GPIO_Type *base, uint32_t port, uint32_t pin, uint8_t output)$/;"	f
GPIO_PortClear	drivers/fsl_gpio.h	/^static inline void GPIO_PortClear(GPIO_Type *base, uint32_t port, uint32_t mask)$/;"	f
GPIO_PortClearInterruptFlags	drivers/fsl_gpio.c	/^void GPIO_PortClearInterruptFlags(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask)$/;"	f
GPIO_PortDisableInterrupts	drivers/fsl_gpio.c	/^void GPIO_PortDisableInterrupts(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask)$/;"	f
GPIO_PortEnableInterrupts	drivers/fsl_gpio.c	/^void GPIO_PortEnableInterrupts(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask)$/;"	f
GPIO_PortGetInterruptStatus	drivers/fsl_gpio.c	/^uint32_t GPIO_PortGetInterruptStatus(GPIO_Type *base, uint32_t port, uint32_t index)$/;"	f
GPIO_PortInit	drivers/fsl_gpio.c	/^void GPIO_PortInit(GPIO_Type *base, uint32_t port)$/;"	f
GPIO_PortMaskedRead	drivers/fsl_gpio.h	/^static inline uint32_t GPIO_PortMaskedRead(GPIO_Type *base, uint32_t port)$/;"	f
GPIO_PortMaskedSet	drivers/fsl_gpio.h	/^static inline void GPIO_PortMaskedSet(GPIO_Type *base, uint32_t port, uint32_t mask)$/;"	f
GPIO_PortMaskedWrite	drivers/fsl_gpio.h	/^static inline void GPIO_PortMaskedWrite(GPIO_Type *base, uint32_t port, uint32_t output)$/;"	f
GPIO_PortRead	drivers/fsl_gpio.h	/^static inline uint32_t GPIO_PortRead(GPIO_Type *base, uint32_t port)$/;"	f
GPIO_PortSet	drivers/fsl_gpio.h	/^static inline void GPIO_PortSet(GPIO_Type *base, uint32_t port, uint32_t mask)$/;"	f
GPIO_PortToggle	drivers/fsl_gpio.h	/^static inline void GPIO_PortToggle(GPIO_Type *base, uint32_t port, uint32_t mask)$/;"	f
GPIO_RSTS_N	drivers/fsl_reset.h	142;"	d
GPIO_SET_COUNT	device/LPC54018.h	5340;"	d
GPIO_SET_SETP	device/LPC54018.h	5336;"	d
GPIO_SET_SETP_MASK	device/LPC54018.h	5334;"	d
GPIO_SET_SETP_SHIFT	device/LPC54018.h	5335;"	d
GPIO_SetPinInterruptConfig	drivers/fsl_gpio.c	/^void GPIO_SetPinInterruptConfig(GPIO_Type *base, uint32_t port, uint32_t pin, gpio_interrupt_config_t *config)$/;"	f
GPIO_Type	device/LPC54018.h	/^} GPIO_Type;$/;"	t	typeref:struct:__anon159
GPIO_W_COUNT	device/LPC54018.h	5287;"	d
GPIO_W_COUNT2	device/LPC54018.h	5290;"	d
GPIO_W_PWORD	device/LPC54018.h	5283;"	d
GPIO_W_PWORD_MASK	device/LPC54018.h	5281;"	d
GPIO_W_PWORD_SHIFT	device/LPC54018.h	5282;"	d
GPREG	device/LPC54018.h	/^  __IO uint32_t GPREG[8];                          \/**< General Purpose register, array offset: 0x40, array step: 0x4 *\/$/;"	m	struct:__anon171
GRAPH_ALIGN_LEFT	emwin/emWin_header/GRAPH.h	80;"	d
GRAPH_ALIGN_RIGHT	emwin/emWin_header/GRAPH.h	79;"	d
GRAPH_CF_AVOID_SCROLLBAR_H	emwin/emWin_header/GRAPH.h	86;"	d
GRAPH_CF_AVOID_SCROLLBAR_V	emwin/emWin_header/GRAPH.h	87;"	d
GRAPH_CF_GRID_FIXED_X	emwin/emWin_header/GRAPH.h	85;"	d
GRAPH_CI_BK	emwin/emWin_header/GRAPH.h	64;"	d
GRAPH_CI_BORDER	emwin/emWin_header/GRAPH.h	65;"	d
GRAPH_CI_FRAME	emwin/emWin_header/GRAPH.h	66;"	d
GRAPH_CI_GRID	emwin/emWin_header/GRAPH.h	67;"	d
GRAPH_DATA_Handle	emwin/emWin_header/GRAPH.h	/^typedef WM_HMEM GRAPH_DATA_Handle;$/;"	t
GRAPH_DATA_OBJ	emwin/emWin_header/GRAPH_Private.h	/^struct GRAPH_DATA_OBJ {$/;"	s
GRAPH_DATA_OBJ	emwin/emWin_header/GRAPH_Private.h	/^typedef struct GRAPH_DATA_OBJ   GRAPH_DATA_OBJ;$/;"	t	typeref:struct:GRAPH_DATA_OBJ
GRAPH_DRAW_AFTER_BORDER	emwin/emWin_header/GRAPH.h	76;"	d
GRAPH_DRAW_FIRST	emwin/emWin_header/GRAPH.h	75;"	d
GRAPH_DRAW_LAST	emwin/emWin_header/GRAPH.h	77;"	d
GRAPH_H	emwin/emWin_header/GRAPH.h	46;"	d
GRAPH_Handle	emwin/emWin_header/GRAPH.h	/^typedef WM_HMEM GRAPH_Handle;$/;"	t
GRAPH_ID	emwin/emWin_header/WIDGET.h	106;"	d
GRAPH_INIT_ID	emwin/emWin_header/GRAPH_Private.h	131;"	d
GRAPH_INIT_ID	emwin/emWin_header/GRAPH_Private.h	133;"	d
GRAPH_LOCK_H	emwin/emWin_header/GRAPH_Private.h	138;"	d
GRAPH_LOCK_H	emwin/emWin_header/GRAPH_Private.h	140;"	d
GRAPH_OBJ	emwin/emWin_header/GRAPH_Private.h	/^struct GRAPH_OBJ {$/;"	s
GRAPH_OBJ	emwin/emWin_header/GRAPH_Private.h	/^typedef struct GRAPH_OBJ        GRAPH_OBJ;$/;"	t	typeref:struct:GRAPH_OBJ
GRAPH_PAINT_OBJ	emwin/emWin_header/GRAPH_Private.h	/^struct GRAPH_PAINT_OBJ {$/;"	s
GRAPH_PAINT_OBJ	emwin/emWin_header/GRAPH_Private.h	/^typedef struct GRAPH_PAINT_OBJ  GRAPH_PAINT_OBJ;$/;"	t	typeref:struct:GRAPH_PAINT_OBJ
GRAPH_PRIVATE_H	emwin/emWin_header/GRAPH_Private.h	46;"	d
GRAPH_PROPS	emwin/emWin_header/GRAPH_Private.h	/^} GRAPH_PROPS;$/;"	t	typeref:struct:__anon309
GRAPH_SCALE_CF_HORIZONTAL	emwin/emWin_header/GRAPH.h	69;"	d
GRAPH_SCALE_CF_VERTICAL	emwin/emWin_header/GRAPH.h	70;"	d
GRAPH_SCALE_Handle	emwin/emWin_header/GRAPH.h	/^typedef WM_HMEM GRAPH_SCALE_Handle;$/;"	t
GRAPH_SCALE_OBJ	emwin/emWin_header/GRAPH_Private.h	/^struct GRAPH_SCALE_OBJ {$/;"	s
GRAPH_SCALE_OBJ	emwin/emWin_header/GRAPH_Private.h	/^typedef struct GRAPH_SCALE_OBJ  GRAPH_SCALE_OBJ;$/;"	t	typeref:struct:GRAPH_SCALE_OBJ
GRAPH_SCALE_PROPS	emwin/emWin_header/GRAPH_Private.h	/^} GRAPH_SCALE_PROPS;$/;"	t	typeref:struct:__anon308
GRAPH_SCALE_SF_HORIZONTAL	emwin/emWin_header/GRAPH.h	72;"	d
GRAPH_SCALE_SF_VERTICAL	emwin/emWin_header/GRAPH.h	73;"	d
GRAPH_SF_AVOID_SCROLLBAR_H	emwin/emWin_header/GRAPH.h	92;"	d
GRAPH_SF_AVOID_SCROLLBAR_V	emwin/emWin_header/GRAPH.h	93;"	d
GRAYSCALE	emwin/emWin_header/GUI_JPEG_Private.h	72;"	d
GUICC_0	emwin/emWin_header/LCD.h	213;"	d
GUICC_1	emwin/emWin_header/LCD.h	214;"	d
GUICC_111	emwin/emWin_header/LCD.h	228;"	d
GUICC_16	emwin/emWin_header/LCD.h	226;"	d
GUICC_1616I	emwin/emWin_header/LCD.h	227;"	d
GUICC_1_16	emwin/emWin_header/LCD.h	219;"	d
GUICC_1_2	emwin/emWin_header/LCD.h	215;"	d
GUICC_1_24	emwin/emWin_header/LCD.h	220;"	d
GUICC_1_4	emwin/emWin_header/LCD.h	216;"	d
GUICC_1_5	emwin/emWin_header/LCD.h	217;"	d
GUICC_1_8	emwin/emWin_header/LCD.h	218;"	d
GUICC_2	emwin/emWin_header/LCD.h	221;"	d
GUICC_222	emwin/emWin_header/LCD.h	229;"	d
GUICC_233	emwin/emWin_header/LCD.h	230;"	d
GUICC_323	emwin/emWin_header/LCD.h	231;"	d
GUICC_332	emwin/emWin_header/LCD.h	232;"	d
GUICC_4	emwin/emWin_header/LCD.h	222;"	d
GUICC_444_12	emwin/emWin_header/LCD.h	234;"	d
GUICC_444_12_1	emwin/emWin_header/LCD.h	235;"	d
GUICC_444_16	emwin/emWin_header/LCD.h	236;"	d
GUICC_5	emwin/emWin_header/LCD.h	223;"	d
GUICC_555	emwin/emWin_header/LCD.h	237;"	d
GUICC_556	emwin/emWin_header/LCD.h	239;"	d
GUICC_565	emwin/emWin_header/LCD.h	238;"	d
GUICC_6	emwin/emWin_header/LCD.h	224;"	d
GUICC_655	emwin/emWin_header/LCD.h	240;"	d
GUICC_666	emwin/emWin_header/LCD.h	241;"	d
GUICC_666_9	emwin/emWin_header/LCD.h	242;"	d
GUICC_8	emwin/emWin_header/LCD.h	225;"	d
GUICC_822216	emwin/emWin_header/LCD.h	243;"	d
GUICC_84444	emwin/emWin_header/LCD.h	244;"	d
GUICC_8666	emwin/emWin_header/LCD.h	245;"	d
GUICC_8666_1	emwin/emWin_header/LCD.h	246;"	d
GUICC_88666I	emwin/emWin_header/LCD.h	247;"	d
GUICC_888	emwin/emWin_header/LCD.h	248;"	d
GUICC_8888	emwin/emWin_header/LCD.h	249;"	d
GUICC_M111	emwin/emWin_header/LCD.h	250;"	d
GUICC_M1555I	emwin/emWin_header/LCD.h	251;"	d
GUICC_M222	emwin/emWin_header/LCD.h	252;"	d
GUICC_M233	emwin/emWin_header/LCD.h	253;"	d
GUICC_M323	emwin/emWin_header/LCD.h	254;"	d
GUICC_M332	emwin/emWin_header/LCD.h	255;"	d
GUICC_M4444I	emwin/emWin_header/LCD.h	233;"	d
GUICC_M444_12	emwin/emWin_header/LCD.h	256;"	d
GUICC_M444_12_1	emwin/emWin_header/LCD.h	257;"	d
GUICC_M444_16	emwin/emWin_header/LCD.h	258;"	d
GUICC_M555	emwin/emWin_header/LCD.h	259;"	d
GUICC_M556	emwin/emWin_header/LCD.h	261;"	d
GUICC_M565	emwin/emWin_header/LCD.h	260;"	d
GUICC_M655	emwin/emWin_header/LCD.h	262;"	d
GUICC_M666	emwin/emWin_header/LCD.h	263;"	d
GUICC_M666_9	emwin/emWin_header/LCD.h	264;"	d
GUICC_M8565	emwin/emWin_header/LCD.h	265;"	d
GUICC_M888	emwin/emWin_header/LCD.h	266;"	d
GUICC_M8888	emwin/emWin_header/LCD.h	267;"	d
GUICC_M8888I	emwin/emWin_header/LCD.h	268;"	d
GUICONF_H	emwin/emWin_Config/GUIConf.h	46;"	d
GUIDRV_BITPLAINS	emwin/emWin_header/GUIDRV_BitPlains.h	80;"	d
GUIDRV_BITPLAINS	emwin/emWin_header/GUIDRV_BitPlains.h	84;"	d
GUIDRV_BITPLAINS_H	emwin/emWin_header/GUIDRV_BitPlains.h	46;"	d
GUIDRV_DCACHE	emwin/emWin_header/GUIDRV_DCache.h	66;"	d
GUIDRV_DCACHE	emwin/emWin_header/GUIDRV_DCache.h	70;"	d
GUIDRV_DCACHE_H	emwin/emWin_header/GUIDRV_DCache.h	46;"	d
GUIDRV_DCACHE_PRIVATE_H	emwin/emWin_header/GUIDRV_DCache_Private.h	46;"	d
GUIDRV_DCache_AddDriver	emwin/emWin_header/GUIDRV_DCache.h	80;"	d
GUIDRV_DCache_SetMode1bpp	emwin/emWin_header/GUIDRV_DCache.h	81;"	d
GUIDRV_DIST	emwin/emWin_header/GUIDRV_Dist.h	66;"	d
GUIDRV_DIST	emwin/emWin_header/GUIDRV_Dist.h	70;"	d
GUIDRV_DIST_H	emwin/emWin_header/GUIDRV_Dist.h	46;"	d
GUIDRV_Dist_AddDriver	emwin/emWin_header/GUIDRV_Dist.h	80;"	d
GUIDRV_FLEXCOLOR	emwin/emWin_header/GUIDRV_FlexColor.h	141;"	d
GUIDRV_FLEXCOLOR	emwin/emWin_header/GUIDRV_FlexColor.h	145;"	d
GUIDRV_FLEXCOLOR_F66702	emwin/emWin_header/GUIDRV_FlexColor.h	82;"	d
GUIDRV_FLEXCOLOR_F66708	emwin/emWin_header/GUIDRV_FlexColor.h	83;"	d
GUIDRV_FLEXCOLOR_F66709	emwin/emWin_header/GUIDRV_FlexColor.h	84;"	d
GUIDRV_FLEXCOLOR_F66712	emwin/emWin_header/GUIDRV_FlexColor.h	85;"	d
GUIDRV_FLEXCOLOR_F66714	emwin/emWin_header/GUIDRV_FlexColor.h	86;"	d
GUIDRV_FLEXCOLOR_F66715	emwin/emWin_header/GUIDRV_FlexColor.h	87;"	d
GUIDRV_FLEXCOLOR_F66718	emwin/emWin_header/GUIDRV_FlexColor.h	88;"	d
GUIDRV_FLEXCOLOR_F66719	emwin/emWin_header/GUIDRV_FlexColor.h	89;"	d
GUIDRV_FLEXCOLOR_F66720	emwin/emWin_header/GUIDRV_FlexColor.h	90;"	d
GUIDRV_FLEXCOLOR_F66721	emwin/emWin_header/GUIDRV_FlexColor.h	91;"	d
GUIDRV_FLEXCOLOR_F66722	emwin/emWin_header/GUIDRV_FlexColor.h	92;"	d
GUIDRV_FLEXCOLOR_F66723	emwin/emWin_header/GUIDRV_FlexColor.h	93;"	d
GUIDRV_FLEXCOLOR_F66724	emwin/emWin_header/GUIDRV_FlexColor.h	94;"	d
GUIDRV_FLEXCOLOR_F66772	emwin/emWin_header/GUIDRV_FlexColor.h	95;"	d
GUIDRV_FLEXCOLOR_H	emwin/emWin_header/GUIDRV_FlexColor.h	46;"	d
GUIDRV_FLEXCOLOR_IF_TYPE_I	emwin/emWin_header/GUIDRV_FlexColor.h	100;"	d
GUIDRV_FLEXCOLOR_IF_TYPE_II	emwin/emWin_header/GUIDRV_FlexColor.h	101;"	d
GUIDRV_FLEXCOLOR_M16C0B16	emwin/emWin_header/GUIDRV_FlexColor.h	63;"	d
GUIDRV_FLEXCOLOR_M16C0B8	emwin/emWin_header/GUIDRV_FlexColor.h	61;"	d
GUIDRV_FLEXCOLOR_M16C1B16	emwin/emWin_header/GUIDRV_FlexColor.h	64;"	d
GUIDRV_FLEXCOLOR_M16C1B8	emwin/emWin_header/GUIDRV_FlexColor.h	62;"	d
GUIDRV_FLEXCOLOR_M18C0B18	emwin/emWin_header/GUIDRV_FlexColor.h	71;"	d
GUIDRV_FLEXCOLOR_M18C0B9	emwin/emWin_header/GUIDRV_FlexColor.h	69;"	d
GUIDRV_FLEXCOLOR_M18C1B18	emwin/emWin_header/GUIDRV_FlexColor.h	72;"	d
GUIDRV_FLEXCOLOR_M18C1B9	emwin/emWin_header/GUIDRV_FlexColor.h	70;"	d
GUIDRV_FLEXCOLOR_M24C0B8	emwin/emWin_header/GUIDRV_FlexColor.h	77;"	d
GUIDRV_FLEXCOLOR_PRIVATE_H	emwin/emWin_header/GUIDRV_FlexColor_Private.h	48;"	d
GUIDRV_FLEXCOLOR_READ_FUNC_I	emwin/emWin_header/GUIDRV_FlexColor.h	106;"	d
GUIDRV_FLEXCOLOR_READ_FUNC_II	emwin/emWin_header/GUIDRV_FlexColor.h	107;"	d
GUIDRV_FLEXCOLOR_READ_FUNC_III	emwin/emWin_header/GUIDRV_FlexColor.h	108;"	d
GUIDRV_FlexColor_Config	emwin/emWin_header/GUIDRV_FlexColor.h	264;"	d
GUIDRV_FlexColor_SetFunc	emwin/emWin_header/GUIDRV_FlexColor.h	263;"	d
GUIDRV_FlexColor_SetFunc66708	emwin/emWin_header/GUIDRV_FlexColor.h	230;"	d
GUIDRV_FlexColor_SetFunc66709	emwin/emWin_header/GUIDRV_FlexColor.h	231;"	d
GUIDRV_FlexColor_SetFunc66712	emwin/emWin_header/GUIDRV_FlexColor.h	232;"	d
GUIDRV_FlexColor_SetFunc66714	emwin/emWin_header/GUIDRV_FlexColor.h	233;"	d
GUIDRV_FlexColor_SetFunc66715	emwin/emWin_header/GUIDRV_FlexColor.h	234;"	d
GUIDRV_FlexColor_SetFunc66718	emwin/emWin_header/GUIDRV_FlexColor.h	235;"	d
GUIDRV_FlexColor_SetFunc66719	emwin/emWin_header/GUIDRV_FlexColor.h	236;"	d
GUIDRV_FlexColor_SetFunc66720	emwin/emWin_header/GUIDRV_FlexColor.h	237;"	d
GUIDRV_FlexColor_SetFunc66721	emwin/emWin_header/GUIDRV_FlexColor.h	238;"	d
GUIDRV_FlexColor_SetFunc66722	emwin/emWin_header/GUIDRV_FlexColor.h	239;"	d
GUIDRV_FlexColor_SetFunc66723	emwin/emWin_header/GUIDRV_FlexColor.h	240;"	d
GUIDRV_FlexColor_SetFunc66724	emwin/emWin_header/GUIDRV_FlexColor.h	241;"	d
GUIDRV_FlexColor_SetFunc66772	emwin/emWin_header/GUIDRV_FlexColor.h	242;"	d
GUIDRV_FlexColor_SetInterface66712_B18	emwin/emWin_header/GUIDRV_FlexColor.h	275;"	d
GUIDRV_FlexColor_SetInterface66712_B9	emwin/emWin_header/GUIDRV_FlexColor.h	274;"	d
GUIDRV_FlexColor_SetInterface66715_B18	emwin/emWin_header/GUIDRV_FlexColor.h	211;"	d
GUIDRV_FlexColor_SetInterface66715_B18	emwin/emWin_header/GUIDRV_FlexColor.h	278;"	d
GUIDRV_FlexColor_SetInterface66715_B9	emwin/emWin_header/GUIDRV_FlexColor.h	210;"	d
GUIDRV_FlexColor_SetInterface66715_B9	emwin/emWin_header/GUIDRV_FlexColor.h	277;"	d
GUIDRV_FlexColor_SetInterface66720_B18	emwin/emWin_header/GUIDRV_FlexColor.h	276;"	d
GUIDRV_FlexColor_SetMode16bppC0B16	emwin/emWin_header/GUIDRV_FlexColor.h	249;"	d
GUIDRV_FlexColor_SetMode16bppC0B8	emwin/emWin_header/GUIDRV_FlexColor.h	247;"	d
GUIDRV_FlexColor_SetMode16bppC1B16	emwin/emWin_header/GUIDRV_FlexColor.h	250;"	d
GUIDRV_FlexColor_SetMode16bppC1B8	emwin/emWin_header/GUIDRV_FlexColor.h	248;"	d
GUIDRV_FlexColor_SetMode18bppC0B18	emwin/emWin_header/GUIDRV_FlexColor.h	257;"	d
GUIDRV_FlexColor_SetMode18bppC0B9	emwin/emWin_header/GUIDRV_FlexColor.h	255;"	d
GUIDRV_FlexColor_SetMode18bppC1B18	emwin/emWin_header/GUIDRV_FlexColor.h	258;"	d
GUIDRV_FlexColor_SetMode18bppC1B9	emwin/emWin_header/GUIDRV_FlexColor.h	256;"	d
GUIDRV_FlexColor_SetOrientation	emwin/emWin_header/GUIDRV_FlexColor.h	269;"	d
GUIDRV_FlexColor_SetReadFunc66709_B16	emwin/emWin_header/GUIDRV_FlexColor.h	283;"	d
GUIDRV_FlexColor_SetReadFunc66712_B16	emwin/emWin_header/GUIDRV_FlexColor.h	285;"	d
GUIDRV_FlexColor_SetReadFunc66712_B9	emwin/emWin_header/GUIDRV_FlexColor.h	284;"	d
GUIDRV_FlexColor_SetReadFunc66715_B16	emwin/emWin_header/GUIDRV_FlexColor.h	220;"	d
GUIDRV_FlexColor_SetReadFunc66715_B16	emwin/emWin_header/GUIDRV_FlexColor.h	287;"	d
GUIDRV_FlexColor_SetReadFunc66715_B9	emwin/emWin_header/GUIDRV_FlexColor.h	219;"	d
GUIDRV_FlexColor_SetReadFunc66715_B9	emwin/emWin_header/GUIDRV_FlexColor.h	286;"	d
GUIDRV_FlexColor_SetReadFunc66720_B16	emwin/emWin_header/GUIDRV_FlexColor.h	288;"	d
GUIDRV_FlexColor_SetReadFunc66772_B16	emwin/emWin_header/GUIDRV_FlexColor.h	290;"	d
GUIDRV_FlexColor_SetReadFunc66772_B8	emwin/emWin_header/GUIDRV_FlexColor.h	289;"	d
GUIDRV_IST3088_4	emwin/emWin_header/GUIDRV_IST3088.h	73;"	d
GUIDRV_IST3088_4	emwin/emWin_header/GUIDRV_IST3088.h	84;"	d
GUIDRV_IST3088_H	emwin/emWin_header/GUIDRV_IST3088.h	46;"	d
GUIDRV_IST3088_OSXY_4	emwin/emWin_header/GUIDRV_IST3088.h	80;"	d
GUIDRV_IST3088_OSXY_4	emwin/emWin_header/GUIDRV_IST3088.h	91;"	d
GUIDRV_IST3088_OSX_4	emwin/emWin_header/GUIDRV_IST3088.h	79;"	d
GUIDRV_IST3088_OSX_4	emwin/emWin_header/GUIDRV_IST3088.h	90;"	d
GUIDRV_IST3088_OSY_4	emwin/emWin_header/GUIDRV_IST3088.h	78;"	d
GUIDRV_IST3088_OSY_4	emwin/emWin_header/GUIDRV_IST3088.h	89;"	d
GUIDRV_IST3088_OS_4	emwin/emWin_header/GUIDRV_IST3088.h	77;"	d
GUIDRV_IST3088_OS_4	emwin/emWin_header/GUIDRV_IST3088.h	88;"	d
GUIDRV_IST3088_OXY_4	emwin/emWin_header/GUIDRV_IST3088.h	76;"	d
GUIDRV_IST3088_OXY_4	emwin/emWin_header/GUIDRV_IST3088.h	87;"	d
GUIDRV_IST3088_OX_4	emwin/emWin_header/GUIDRV_IST3088.h	75;"	d
GUIDRV_IST3088_OX_4	emwin/emWin_header/GUIDRV_IST3088.h	86;"	d
GUIDRV_IST3088_OY_4	emwin/emWin_header/GUIDRV_IST3088.h	74;"	d
GUIDRV_IST3088_OY_4	emwin/emWin_header/GUIDRV_IST3088.h	85;"	d
GUIDRV_IST3088_PRIVATE_H	emwin/emWin_header/GUIDRV_IST3088_Private.h	49;"	d
GUIDRV_LIN_1	emwin/emWin_header/GUIDRV_Lin.h	129;"	d
GUIDRV_LIN_1	emwin/emWin_header/GUIDRV_Lin.h	194;"	d
GUIDRV_LIN_16	emwin/emWin_header/GUIDRV_Lin.h	165;"	d
GUIDRV_LIN_16	emwin/emWin_header/GUIDRV_Lin.h	230;"	d
GUIDRV_LIN_2	emwin/emWin_header/GUIDRV_Lin.h	138;"	d
GUIDRV_LIN_2	emwin/emWin_header/GUIDRV_Lin.h	203;"	d
GUIDRV_LIN_24	emwin/emWin_header/GUIDRV_Lin.h	174;"	d
GUIDRV_LIN_24	emwin/emWin_header/GUIDRV_Lin.h	239;"	d
GUIDRV_LIN_32	emwin/emWin_header/GUIDRV_Lin.h	183;"	d
GUIDRV_LIN_32	emwin/emWin_header/GUIDRV_Lin.h	248;"	d
GUIDRV_LIN_4	emwin/emWin_header/GUIDRV_Lin.h	147;"	d
GUIDRV_LIN_4	emwin/emWin_header/GUIDRV_Lin.h	212;"	d
GUIDRV_LIN_8	emwin/emWin_header/GUIDRV_Lin.h	156;"	d
GUIDRV_LIN_8	emwin/emWin_header/GUIDRV_Lin.h	221;"	d
GUIDRV_LIN_H	emwin/emWin_header/GUIDRV_Lin.h	46;"	d
GUIDRV_LIN_OSXY_1	emwin/emWin_header/GUIDRV_Lin.h	136;"	d
GUIDRV_LIN_OSXY_1	emwin/emWin_header/GUIDRV_Lin.h	201;"	d
GUIDRV_LIN_OSXY_16	emwin/emWin_header/GUIDRV_Lin.h	172;"	d
GUIDRV_LIN_OSXY_16	emwin/emWin_header/GUIDRV_Lin.h	237;"	d
GUIDRV_LIN_OSXY_2	emwin/emWin_header/GUIDRV_Lin.h	145;"	d
GUIDRV_LIN_OSXY_2	emwin/emWin_header/GUIDRV_Lin.h	210;"	d
GUIDRV_LIN_OSXY_24	emwin/emWin_header/GUIDRV_Lin.h	181;"	d
GUIDRV_LIN_OSXY_24	emwin/emWin_header/GUIDRV_Lin.h	246;"	d
GUIDRV_LIN_OSXY_32	emwin/emWin_header/GUIDRV_Lin.h	190;"	d
GUIDRV_LIN_OSXY_32	emwin/emWin_header/GUIDRV_Lin.h	255;"	d
GUIDRV_LIN_OSXY_4	emwin/emWin_header/GUIDRV_Lin.h	154;"	d
GUIDRV_LIN_OSXY_4	emwin/emWin_header/GUIDRV_Lin.h	219;"	d
GUIDRV_LIN_OSXY_8	emwin/emWin_header/GUIDRV_Lin.h	163;"	d
GUIDRV_LIN_OSXY_8	emwin/emWin_header/GUIDRV_Lin.h	228;"	d
GUIDRV_LIN_OSX_1	emwin/emWin_header/GUIDRV_Lin.h	135;"	d
GUIDRV_LIN_OSX_1	emwin/emWin_header/GUIDRV_Lin.h	200;"	d
GUIDRV_LIN_OSX_16	emwin/emWin_header/GUIDRV_Lin.h	171;"	d
GUIDRV_LIN_OSX_16	emwin/emWin_header/GUIDRV_Lin.h	236;"	d
GUIDRV_LIN_OSX_2	emwin/emWin_header/GUIDRV_Lin.h	144;"	d
GUIDRV_LIN_OSX_2	emwin/emWin_header/GUIDRV_Lin.h	209;"	d
GUIDRV_LIN_OSX_24	emwin/emWin_header/GUIDRV_Lin.h	180;"	d
GUIDRV_LIN_OSX_24	emwin/emWin_header/GUIDRV_Lin.h	245;"	d
GUIDRV_LIN_OSX_32	emwin/emWin_header/GUIDRV_Lin.h	189;"	d
GUIDRV_LIN_OSX_32	emwin/emWin_header/GUIDRV_Lin.h	254;"	d
GUIDRV_LIN_OSX_4	emwin/emWin_header/GUIDRV_Lin.h	153;"	d
GUIDRV_LIN_OSX_4	emwin/emWin_header/GUIDRV_Lin.h	218;"	d
GUIDRV_LIN_OSX_8	emwin/emWin_header/GUIDRV_Lin.h	162;"	d
GUIDRV_LIN_OSX_8	emwin/emWin_header/GUIDRV_Lin.h	227;"	d
GUIDRV_LIN_OSY_1	emwin/emWin_header/GUIDRV_Lin.h	134;"	d
GUIDRV_LIN_OSY_1	emwin/emWin_header/GUIDRV_Lin.h	199;"	d
GUIDRV_LIN_OSY_16	emwin/emWin_header/GUIDRV_Lin.h	170;"	d
GUIDRV_LIN_OSY_16	emwin/emWin_header/GUIDRV_Lin.h	235;"	d
GUIDRV_LIN_OSY_2	emwin/emWin_header/GUIDRV_Lin.h	143;"	d
GUIDRV_LIN_OSY_2	emwin/emWin_header/GUIDRV_Lin.h	208;"	d
GUIDRV_LIN_OSY_24	emwin/emWin_header/GUIDRV_Lin.h	179;"	d
GUIDRV_LIN_OSY_24	emwin/emWin_header/GUIDRV_Lin.h	244;"	d
GUIDRV_LIN_OSY_32	emwin/emWin_header/GUIDRV_Lin.h	188;"	d
GUIDRV_LIN_OSY_32	emwin/emWin_header/GUIDRV_Lin.h	253;"	d
GUIDRV_LIN_OSY_4	emwin/emWin_header/GUIDRV_Lin.h	152;"	d
GUIDRV_LIN_OSY_4	emwin/emWin_header/GUIDRV_Lin.h	217;"	d
GUIDRV_LIN_OSY_8	emwin/emWin_header/GUIDRV_Lin.h	161;"	d
GUIDRV_LIN_OSY_8	emwin/emWin_header/GUIDRV_Lin.h	226;"	d
GUIDRV_LIN_OS_1	emwin/emWin_header/GUIDRV_Lin.h	133;"	d
GUIDRV_LIN_OS_1	emwin/emWin_header/GUIDRV_Lin.h	198;"	d
GUIDRV_LIN_OS_16	emwin/emWin_header/GUIDRV_Lin.h	169;"	d
GUIDRV_LIN_OS_16	emwin/emWin_header/GUIDRV_Lin.h	234;"	d
GUIDRV_LIN_OS_2	emwin/emWin_header/GUIDRV_Lin.h	142;"	d
GUIDRV_LIN_OS_2	emwin/emWin_header/GUIDRV_Lin.h	207;"	d
GUIDRV_LIN_OS_24	emwin/emWin_header/GUIDRV_Lin.h	178;"	d
GUIDRV_LIN_OS_24	emwin/emWin_header/GUIDRV_Lin.h	243;"	d
GUIDRV_LIN_OS_32	emwin/emWin_header/GUIDRV_Lin.h	187;"	d
GUIDRV_LIN_OS_32	emwin/emWin_header/GUIDRV_Lin.h	252;"	d
GUIDRV_LIN_OS_4	emwin/emWin_header/GUIDRV_Lin.h	151;"	d
GUIDRV_LIN_OS_4	emwin/emWin_header/GUIDRV_Lin.h	216;"	d
GUIDRV_LIN_OS_8	emwin/emWin_header/GUIDRV_Lin.h	160;"	d
GUIDRV_LIN_OS_8	emwin/emWin_header/GUIDRV_Lin.h	225;"	d
GUIDRV_LIN_OXY_1	emwin/emWin_header/GUIDRV_Lin.h	132;"	d
GUIDRV_LIN_OXY_1	emwin/emWin_header/GUIDRV_Lin.h	197;"	d
GUIDRV_LIN_OXY_16	emwin/emWin_header/GUIDRV_Lin.h	168;"	d
GUIDRV_LIN_OXY_16	emwin/emWin_header/GUIDRV_Lin.h	233;"	d
GUIDRV_LIN_OXY_2	emwin/emWin_header/GUIDRV_Lin.h	141;"	d
GUIDRV_LIN_OXY_2	emwin/emWin_header/GUIDRV_Lin.h	206;"	d
GUIDRV_LIN_OXY_24	emwin/emWin_header/GUIDRV_Lin.h	177;"	d
GUIDRV_LIN_OXY_24	emwin/emWin_header/GUIDRV_Lin.h	242;"	d
GUIDRV_LIN_OXY_32	emwin/emWin_header/GUIDRV_Lin.h	186;"	d
GUIDRV_LIN_OXY_32	emwin/emWin_header/GUIDRV_Lin.h	251;"	d
GUIDRV_LIN_OXY_4	emwin/emWin_header/GUIDRV_Lin.h	150;"	d
GUIDRV_LIN_OXY_4	emwin/emWin_header/GUIDRV_Lin.h	215;"	d
GUIDRV_LIN_OXY_8	emwin/emWin_header/GUIDRV_Lin.h	159;"	d
GUIDRV_LIN_OXY_8	emwin/emWin_header/GUIDRV_Lin.h	224;"	d
GUIDRV_LIN_OX_1	emwin/emWin_header/GUIDRV_Lin.h	131;"	d
GUIDRV_LIN_OX_1	emwin/emWin_header/GUIDRV_Lin.h	196;"	d
GUIDRV_LIN_OX_16	emwin/emWin_header/GUIDRV_Lin.h	167;"	d
GUIDRV_LIN_OX_16	emwin/emWin_header/GUIDRV_Lin.h	232;"	d
GUIDRV_LIN_OX_2	emwin/emWin_header/GUIDRV_Lin.h	140;"	d
GUIDRV_LIN_OX_2	emwin/emWin_header/GUIDRV_Lin.h	205;"	d
GUIDRV_LIN_OX_24	emwin/emWin_header/GUIDRV_Lin.h	176;"	d
GUIDRV_LIN_OX_24	emwin/emWin_header/GUIDRV_Lin.h	241;"	d
GUIDRV_LIN_OX_32	emwin/emWin_header/GUIDRV_Lin.h	185;"	d
GUIDRV_LIN_OX_32	emwin/emWin_header/GUIDRV_Lin.h	250;"	d
GUIDRV_LIN_OX_4	emwin/emWin_header/GUIDRV_Lin.h	149;"	d
GUIDRV_LIN_OX_4	emwin/emWin_header/GUIDRV_Lin.h	214;"	d
GUIDRV_LIN_OX_8	emwin/emWin_header/GUIDRV_Lin.h	158;"	d
GUIDRV_LIN_OX_8	emwin/emWin_header/GUIDRV_Lin.h	223;"	d
GUIDRV_LIN_OY_1	emwin/emWin_header/GUIDRV_Lin.h	130;"	d
GUIDRV_LIN_OY_1	emwin/emWin_header/GUIDRV_Lin.h	195;"	d
GUIDRV_LIN_OY_16	emwin/emWin_header/GUIDRV_Lin.h	166;"	d
GUIDRV_LIN_OY_16	emwin/emWin_header/GUIDRV_Lin.h	231;"	d
GUIDRV_LIN_OY_2	emwin/emWin_header/GUIDRV_Lin.h	139;"	d
GUIDRV_LIN_OY_2	emwin/emWin_header/GUIDRV_Lin.h	204;"	d
GUIDRV_LIN_OY_24	emwin/emWin_header/GUIDRV_Lin.h	175;"	d
GUIDRV_LIN_OY_24	emwin/emWin_header/GUIDRV_Lin.h	240;"	d
GUIDRV_LIN_OY_32	emwin/emWin_header/GUIDRV_Lin.h	184;"	d
GUIDRV_LIN_OY_32	emwin/emWin_header/GUIDRV_Lin.h	249;"	d
GUIDRV_LIN_OY_4	emwin/emWin_header/GUIDRV_Lin.h	148;"	d
GUIDRV_LIN_OY_4	emwin/emWin_header/GUIDRV_Lin.h	213;"	d
GUIDRV_LIN_OY_8	emwin/emWin_header/GUIDRV_Lin.h	157;"	d
GUIDRV_LIN_OY_8	emwin/emWin_header/GUIDRV_Lin.h	222;"	d
GUIDRV_LIN_PRIVATE_H	emwin/emWin_header/GUIDRV_Lin_Private.h	46;"	d
GUIDRV_NOOPT_1_8_H	emwin/emWin_header/GUIDRV_NoOpt_1_8.h	48;"	d
GUIDRV_S1D13748_16	emwin/emWin_header/GUIDRV_S1D13748.h	101;"	d
GUIDRV_S1D13748_16	emwin/emWin_header/GUIDRV_S1D13748.h	90;"	d
GUIDRV_S1D13748_H	emwin/emWin_header/GUIDRV_S1D13748.h	46;"	d
GUIDRV_S1D13748_OSXY_16	emwin/emWin_header/GUIDRV_S1D13748.h	108;"	d
GUIDRV_S1D13748_OSXY_16	emwin/emWin_header/GUIDRV_S1D13748.h	97;"	d
GUIDRV_S1D13748_OSX_16	emwin/emWin_header/GUIDRV_S1D13748.h	107;"	d
GUIDRV_S1D13748_OSX_16	emwin/emWin_header/GUIDRV_S1D13748.h	96;"	d
GUIDRV_S1D13748_OSY_16	emwin/emWin_header/GUIDRV_S1D13748.h	106;"	d
GUIDRV_S1D13748_OSY_16	emwin/emWin_header/GUIDRV_S1D13748.h	95;"	d
GUIDRV_S1D13748_OS_16	emwin/emWin_header/GUIDRV_S1D13748.h	105;"	d
GUIDRV_S1D13748_OS_16	emwin/emWin_header/GUIDRV_S1D13748.h	94;"	d
GUIDRV_S1D13748_OXY_16	emwin/emWin_header/GUIDRV_S1D13748.h	104;"	d
GUIDRV_S1D13748_OXY_16	emwin/emWin_header/GUIDRV_S1D13748.h	93;"	d
GUIDRV_S1D13748_OX_16	emwin/emWin_header/GUIDRV_S1D13748.h	103;"	d
GUIDRV_S1D13748_OX_16	emwin/emWin_header/GUIDRV_S1D13748.h	92;"	d
GUIDRV_S1D13748_OY_16	emwin/emWin_header/GUIDRV_S1D13748.h	102;"	d
GUIDRV_S1D13748_OY_16	emwin/emWin_header/GUIDRV_S1D13748.h	91;"	d
GUIDRV_S1D13748_PRIVATE_H	emwin/emWin_header/GUIDRV_S1D13748_Private.h	51;"	d
GUIDRV_S1D13748_USE_MAIN	emwin/emWin_header/GUIDRV_S1D13748.h	52;"	d
GUIDRV_S1D13748_USE_PIP1	emwin/emWin_header/GUIDRV_S1D13748.h	53;"	d
GUIDRV_S1D13748_USE_PIP2	emwin/emWin_header/GUIDRV_S1D13748.h	54;"	d
GUIDRV_S1D13781_16C0	emwin/emWin_header/GUIDRV_S1D13781.h	105;"	d
GUIDRV_S1D13781_16C0	emwin/emWin_header/GUIDRV_S1D13781.h	93;"	d
GUIDRV_S1D13781_8C0	emwin/emWin_header/GUIDRV_S1D13781.h	100;"	d
GUIDRV_S1D13781_8C0	emwin/emWin_header/GUIDRV_S1D13781.h	88;"	d
GUIDRV_S1D13781_Config	emwin/emWin_header/GUIDRV_S1D13781.h	117;"	d
GUIDRV_S1D13781_H	emwin/emWin_header/GUIDRV_S1D13781.h	46;"	d
GUIDRV_S1D13781_OSX_16C0	emwin/emWin_header/GUIDRV_S1D13781.h	108;"	d
GUIDRV_S1D13781_OSX_16C0	emwin/emWin_header/GUIDRV_S1D13781.h	96;"	d
GUIDRV_S1D13781_OSX_8C0	emwin/emWin_header/GUIDRV_S1D13781.h	103;"	d
GUIDRV_S1D13781_OSX_8C0	emwin/emWin_header/GUIDRV_S1D13781.h	91;"	d
GUIDRV_S1D13781_OSY_16C0	emwin/emWin_header/GUIDRV_S1D13781.h	107;"	d
GUIDRV_S1D13781_OSY_16C0	emwin/emWin_header/GUIDRV_S1D13781.h	95;"	d
GUIDRV_S1D13781_OSY_8C0	emwin/emWin_header/GUIDRV_S1D13781.h	102;"	d
GUIDRV_S1D13781_OSY_8C0	emwin/emWin_header/GUIDRV_S1D13781.h	90;"	d
GUIDRV_S1D13781_OXY_16C0	emwin/emWin_header/GUIDRV_S1D13781.h	106;"	d
GUIDRV_S1D13781_OXY_16C0	emwin/emWin_header/GUIDRV_S1D13781.h	94;"	d
GUIDRV_S1D13781_OXY_8C0	emwin/emWin_header/GUIDRV_S1D13781.h	101;"	d
GUIDRV_S1D13781_OXY_8C0	emwin/emWin_header/GUIDRV_S1D13781.h	89;"	d
GUIDRV_S1D13781_PRIVATE_H	emwin/emWin_header/GUIDRV_S1D13781_Private.h	48;"	d
GUIDRV_S1D13781_SetBusSPI	emwin/emWin_header/GUIDRV_S1D13781.h	118;"	d
GUIDRV_S1D13781_SetOrientation	emwin/emWin_header/GUIDRV_S1D13781.h	119;"	d
GUIDRV_S1D13781_USE_MAIN	emwin/emWin_header/GUIDRV_S1D13781.h	48;"	d
GUIDRV_S1D13781_USE_PIP1	emwin/emWin_header/GUIDRV_S1D13781.h	49;"	d
GUIDRV_S1D13781_USE_PIP2	emwin/emWin_header/GUIDRV_S1D13781.h	50;"	d
GUIDRV_S1D15G00	emwin/emWin_header/GUIDRV_S1D15G00.h	82;"	d
GUIDRV_S1D15G00	emwin/emWin_header/GUIDRV_S1D15G00.h	86;"	d
GUIDRV_S1D15G00_H	emwin/emWin_header/GUIDRV_S1D15G00.h	46;"	d
GUIDRV_SLIN_1	emwin/emWin_header/GUIDRV_SLin.h	111;"	d
GUIDRV_SLIN_1	emwin/emWin_header/GUIDRV_SLin.h	140;"	d
GUIDRV_SLIN_2	emwin/emWin_header/GUIDRV_SLin.h	120;"	d
GUIDRV_SLIN_2	emwin/emWin_header/GUIDRV_SLin.h	149;"	d
GUIDRV_SLIN_4	emwin/emWin_header/GUIDRV_SLin.h	129;"	d
GUIDRV_SLIN_4	emwin/emWin_header/GUIDRV_SLin.h	158;"	d
GUIDRV_SLIN_H	emwin/emWin_header/GUIDRV_SLin.h	46;"	d
GUIDRV_SLIN_OSXY_1	emwin/emWin_header/GUIDRV_SLin.h	118;"	d
GUIDRV_SLIN_OSXY_1	emwin/emWin_header/GUIDRV_SLin.h	147;"	d
GUIDRV_SLIN_OSXY_2	emwin/emWin_header/GUIDRV_SLin.h	127;"	d
GUIDRV_SLIN_OSXY_2	emwin/emWin_header/GUIDRV_SLin.h	156;"	d
GUIDRV_SLIN_OSXY_4	emwin/emWin_header/GUIDRV_SLin.h	136;"	d
GUIDRV_SLIN_OSXY_4	emwin/emWin_header/GUIDRV_SLin.h	165;"	d
GUIDRV_SLIN_OSX_1	emwin/emWin_header/GUIDRV_SLin.h	117;"	d
GUIDRV_SLIN_OSX_1	emwin/emWin_header/GUIDRV_SLin.h	146;"	d
GUIDRV_SLIN_OSX_2	emwin/emWin_header/GUIDRV_SLin.h	126;"	d
GUIDRV_SLIN_OSX_2	emwin/emWin_header/GUIDRV_SLin.h	155;"	d
GUIDRV_SLIN_OSX_4	emwin/emWin_header/GUIDRV_SLin.h	135;"	d
GUIDRV_SLIN_OSX_4	emwin/emWin_header/GUIDRV_SLin.h	164;"	d
GUIDRV_SLIN_OSY_1	emwin/emWin_header/GUIDRV_SLin.h	116;"	d
GUIDRV_SLIN_OSY_1	emwin/emWin_header/GUIDRV_SLin.h	145;"	d
GUIDRV_SLIN_OSY_2	emwin/emWin_header/GUIDRV_SLin.h	125;"	d
GUIDRV_SLIN_OSY_2	emwin/emWin_header/GUIDRV_SLin.h	154;"	d
GUIDRV_SLIN_OSY_4	emwin/emWin_header/GUIDRV_SLin.h	134;"	d
GUIDRV_SLIN_OSY_4	emwin/emWin_header/GUIDRV_SLin.h	163;"	d
GUIDRV_SLIN_OS_1	emwin/emWin_header/GUIDRV_SLin.h	115;"	d
GUIDRV_SLIN_OS_1	emwin/emWin_header/GUIDRV_SLin.h	144;"	d
GUIDRV_SLIN_OS_2	emwin/emWin_header/GUIDRV_SLin.h	124;"	d
GUIDRV_SLIN_OS_2	emwin/emWin_header/GUIDRV_SLin.h	153;"	d
GUIDRV_SLIN_OS_4	emwin/emWin_header/GUIDRV_SLin.h	133;"	d
GUIDRV_SLIN_OS_4	emwin/emWin_header/GUIDRV_SLin.h	162;"	d
GUIDRV_SLIN_OXY_1	emwin/emWin_header/GUIDRV_SLin.h	114;"	d
GUIDRV_SLIN_OXY_1	emwin/emWin_header/GUIDRV_SLin.h	143;"	d
GUIDRV_SLIN_OXY_2	emwin/emWin_header/GUIDRV_SLin.h	123;"	d
GUIDRV_SLIN_OXY_2	emwin/emWin_header/GUIDRV_SLin.h	152;"	d
GUIDRV_SLIN_OXY_4	emwin/emWin_header/GUIDRV_SLin.h	132;"	d
GUIDRV_SLIN_OXY_4	emwin/emWin_header/GUIDRV_SLin.h	161;"	d
GUIDRV_SLIN_OX_1	emwin/emWin_header/GUIDRV_SLin.h	113;"	d
GUIDRV_SLIN_OX_1	emwin/emWin_header/GUIDRV_SLin.h	142;"	d
GUIDRV_SLIN_OX_2	emwin/emWin_header/GUIDRV_SLin.h	122;"	d
GUIDRV_SLIN_OX_2	emwin/emWin_header/GUIDRV_SLin.h	151;"	d
GUIDRV_SLIN_OX_4	emwin/emWin_header/GUIDRV_SLin.h	131;"	d
GUIDRV_SLIN_OX_4	emwin/emWin_header/GUIDRV_SLin.h	160;"	d
GUIDRV_SLIN_OY_1	emwin/emWin_header/GUIDRV_SLin.h	112;"	d
GUIDRV_SLIN_OY_1	emwin/emWin_header/GUIDRV_SLin.h	141;"	d
GUIDRV_SLIN_OY_2	emwin/emWin_header/GUIDRV_SLin.h	121;"	d
GUIDRV_SLIN_OY_2	emwin/emWin_header/GUIDRV_SLin.h	150;"	d
GUIDRV_SLIN_OY_4	emwin/emWin_header/GUIDRV_SLin.h	130;"	d
GUIDRV_SLIN_OY_4	emwin/emWin_header/GUIDRV_SLin.h	159;"	d
GUIDRV_SLIN_PRIVATE_H	emwin/emWin_header/GUIDRV_SLin_Private.h	49;"	d
GUIDRV_SLin_Config	emwin/emWin_header/GUIDRV_SLin.h	175;"	d
GUIDRV_SLin_SetBus8	emwin/emWin_header/GUIDRV_SLin.h	176;"	d
GUIDRV_SLin_SetS1D13700	emwin/emWin_header/GUIDRV_SLin.h	177;"	d
GUIDRV_SLin_SetSSD1848	emwin/emWin_header/GUIDRV_SLin.h	178;"	d
GUIDRV_SLin_SetT6963	emwin/emWin_header/GUIDRV_SLin.h	179;"	d
GUIDRV_SLin_SetUC1617	emwin/emWin_header/GUIDRV_SLin.h	180;"	d
GUIDRV_SPAGE_1C0	emwin/emWin_header/GUIDRV_SPage.h	130;"	d
GUIDRV_SPAGE_1C0	emwin/emWin_header/GUIDRV_SPage.h	186;"	d
GUIDRV_SPAGE_1C1	emwin/emWin_header/GUIDRV_SPage.h	139;"	d
GUIDRV_SPAGE_1C1	emwin/emWin_header/GUIDRV_SPage.h	195;"	d
GUIDRV_SPAGE_2C0	emwin/emWin_header/GUIDRV_SPage.h	148;"	d
GUIDRV_SPAGE_2C0	emwin/emWin_header/GUIDRV_SPage.h	204;"	d
GUIDRV_SPAGE_2C1	emwin/emWin_header/GUIDRV_SPage.h	157;"	d
GUIDRV_SPAGE_2C1	emwin/emWin_header/GUIDRV_SPage.h	213;"	d
GUIDRV_SPAGE_4C0	emwin/emWin_header/GUIDRV_SPage.h	166;"	d
GUIDRV_SPAGE_4C0	emwin/emWin_header/GUIDRV_SPage.h	222;"	d
GUIDRV_SPAGE_4C1	emwin/emWin_header/GUIDRV_SPage.h	175;"	d
GUIDRV_SPAGE_4C1	emwin/emWin_header/GUIDRV_SPage.h	231;"	d
GUIDRV_SPAGE_H	emwin/emWin_header/GUIDRV_SPage.h	46;"	d
GUIDRV_SPAGE_OSXY_1C0	emwin/emWin_header/GUIDRV_SPage.h	137;"	d
GUIDRV_SPAGE_OSXY_1C0	emwin/emWin_header/GUIDRV_SPage.h	193;"	d
GUIDRV_SPAGE_OSXY_1C1	emwin/emWin_header/GUIDRV_SPage.h	146;"	d
GUIDRV_SPAGE_OSXY_1C1	emwin/emWin_header/GUIDRV_SPage.h	202;"	d
GUIDRV_SPAGE_OSXY_2C0	emwin/emWin_header/GUIDRV_SPage.h	155;"	d
GUIDRV_SPAGE_OSXY_2C0	emwin/emWin_header/GUIDRV_SPage.h	211;"	d
GUIDRV_SPAGE_OSXY_2C1	emwin/emWin_header/GUIDRV_SPage.h	164;"	d
GUIDRV_SPAGE_OSXY_2C1	emwin/emWin_header/GUIDRV_SPage.h	220;"	d
GUIDRV_SPAGE_OSXY_4C0	emwin/emWin_header/GUIDRV_SPage.h	173;"	d
GUIDRV_SPAGE_OSXY_4C0	emwin/emWin_header/GUIDRV_SPage.h	229;"	d
GUIDRV_SPAGE_OSXY_4C1	emwin/emWin_header/GUIDRV_SPage.h	182;"	d
GUIDRV_SPAGE_OSXY_4C1	emwin/emWin_header/GUIDRV_SPage.h	238;"	d
GUIDRV_SPAGE_OSX_1C0	emwin/emWin_header/GUIDRV_SPage.h	136;"	d
GUIDRV_SPAGE_OSX_1C0	emwin/emWin_header/GUIDRV_SPage.h	192;"	d
GUIDRV_SPAGE_OSX_1C1	emwin/emWin_header/GUIDRV_SPage.h	145;"	d
GUIDRV_SPAGE_OSX_1C1	emwin/emWin_header/GUIDRV_SPage.h	201;"	d
GUIDRV_SPAGE_OSX_2C0	emwin/emWin_header/GUIDRV_SPage.h	154;"	d
GUIDRV_SPAGE_OSX_2C0	emwin/emWin_header/GUIDRV_SPage.h	210;"	d
GUIDRV_SPAGE_OSX_2C1	emwin/emWin_header/GUIDRV_SPage.h	163;"	d
GUIDRV_SPAGE_OSX_2C1	emwin/emWin_header/GUIDRV_SPage.h	219;"	d
GUIDRV_SPAGE_OSX_4C0	emwin/emWin_header/GUIDRV_SPage.h	172;"	d
GUIDRV_SPAGE_OSX_4C0	emwin/emWin_header/GUIDRV_SPage.h	228;"	d
GUIDRV_SPAGE_OSX_4C1	emwin/emWin_header/GUIDRV_SPage.h	181;"	d
GUIDRV_SPAGE_OSX_4C1	emwin/emWin_header/GUIDRV_SPage.h	237;"	d
GUIDRV_SPAGE_OSY_1C0	emwin/emWin_header/GUIDRV_SPage.h	135;"	d
GUIDRV_SPAGE_OSY_1C0	emwin/emWin_header/GUIDRV_SPage.h	191;"	d
GUIDRV_SPAGE_OSY_1C1	emwin/emWin_header/GUIDRV_SPage.h	144;"	d
GUIDRV_SPAGE_OSY_1C1	emwin/emWin_header/GUIDRV_SPage.h	200;"	d
GUIDRV_SPAGE_OSY_2C0	emwin/emWin_header/GUIDRV_SPage.h	153;"	d
GUIDRV_SPAGE_OSY_2C0	emwin/emWin_header/GUIDRV_SPage.h	209;"	d
GUIDRV_SPAGE_OSY_2C1	emwin/emWin_header/GUIDRV_SPage.h	162;"	d
GUIDRV_SPAGE_OSY_2C1	emwin/emWin_header/GUIDRV_SPage.h	218;"	d
GUIDRV_SPAGE_OSY_4C0	emwin/emWin_header/GUIDRV_SPage.h	171;"	d
GUIDRV_SPAGE_OSY_4C0	emwin/emWin_header/GUIDRV_SPage.h	227;"	d
GUIDRV_SPAGE_OSY_4C1	emwin/emWin_header/GUIDRV_SPage.h	180;"	d
GUIDRV_SPAGE_OSY_4C1	emwin/emWin_header/GUIDRV_SPage.h	236;"	d
GUIDRV_SPAGE_OS_1C0	emwin/emWin_header/GUIDRV_SPage.h	134;"	d
GUIDRV_SPAGE_OS_1C0	emwin/emWin_header/GUIDRV_SPage.h	190;"	d
GUIDRV_SPAGE_OS_1C1	emwin/emWin_header/GUIDRV_SPage.h	143;"	d
GUIDRV_SPAGE_OS_1C1	emwin/emWin_header/GUIDRV_SPage.h	199;"	d
GUIDRV_SPAGE_OS_2C0	emwin/emWin_header/GUIDRV_SPage.h	152;"	d
GUIDRV_SPAGE_OS_2C0	emwin/emWin_header/GUIDRV_SPage.h	208;"	d
GUIDRV_SPAGE_OS_2C1	emwin/emWin_header/GUIDRV_SPage.h	161;"	d
GUIDRV_SPAGE_OS_2C1	emwin/emWin_header/GUIDRV_SPage.h	217;"	d
GUIDRV_SPAGE_OS_4C0	emwin/emWin_header/GUIDRV_SPage.h	170;"	d
GUIDRV_SPAGE_OS_4C0	emwin/emWin_header/GUIDRV_SPage.h	226;"	d
GUIDRV_SPAGE_OS_4C1	emwin/emWin_header/GUIDRV_SPage.h	179;"	d
GUIDRV_SPAGE_OS_4C1	emwin/emWin_header/GUIDRV_SPage.h	235;"	d
GUIDRV_SPAGE_OXY_1C0	emwin/emWin_header/GUIDRV_SPage.h	133;"	d
GUIDRV_SPAGE_OXY_1C0	emwin/emWin_header/GUIDRV_SPage.h	189;"	d
GUIDRV_SPAGE_OXY_1C1	emwin/emWin_header/GUIDRV_SPage.h	142;"	d
GUIDRV_SPAGE_OXY_1C1	emwin/emWin_header/GUIDRV_SPage.h	198;"	d
GUIDRV_SPAGE_OXY_2C0	emwin/emWin_header/GUIDRV_SPage.h	151;"	d
GUIDRV_SPAGE_OXY_2C0	emwin/emWin_header/GUIDRV_SPage.h	207;"	d
GUIDRV_SPAGE_OXY_2C1	emwin/emWin_header/GUIDRV_SPage.h	160;"	d
GUIDRV_SPAGE_OXY_2C1	emwin/emWin_header/GUIDRV_SPage.h	216;"	d
GUIDRV_SPAGE_OXY_4C0	emwin/emWin_header/GUIDRV_SPage.h	169;"	d
GUIDRV_SPAGE_OXY_4C0	emwin/emWin_header/GUIDRV_SPage.h	225;"	d
GUIDRV_SPAGE_OXY_4C1	emwin/emWin_header/GUIDRV_SPage.h	178;"	d
GUIDRV_SPAGE_OXY_4C1	emwin/emWin_header/GUIDRV_SPage.h	234;"	d
GUIDRV_SPAGE_OX_1C0	emwin/emWin_header/GUIDRV_SPage.h	132;"	d
GUIDRV_SPAGE_OX_1C0	emwin/emWin_header/GUIDRV_SPage.h	188;"	d
GUIDRV_SPAGE_OX_1C1	emwin/emWin_header/GUIDRV_SPage.h	141;"	d
GUIDRV_SPAGE_OX_1C1	emwin/emWin_header/GUIDRV_SPage.h	197;"	d
GUIDRV_SPAGE_OX_2C0	emwin/emWin_header/GUIDRV_SPage.h	150;"	d
GUIDRV_SPAGE_OX_2C0	emwin/emWin_header/GUIDRV_SPage.h	206;"	d
GUIDRV_SPAGE_OX_2C1	emwin/emWin_header/GUIDRV_SPage.h	159;"	d
GUIDRV_SPAGE_OX_2C1	emwin/emWin_header/GUIDRV_SPage.h	215;"	d
GUIDRV_SPAGE_OX_4C0	emwin/emWin_header/GUIDRV_SPage.h	168;"	d
GUIDRV_SPAGE_OX_4C0	emwin/emWin_header/GUIDRV_SPage.h	224;"	d
GUIDRV_SPAGE_OX_4C1	emwin/emWin_header/GUIDRV_SPage.h	177;"	d
GUIDRV_SPAGE_OX_4C1	emwin/emWin_header/GUIDRV_SPage.h	233;"	d
GUIDRV_SPAGE_OY_1C0	emwin/emWin_header/GUIDRV_SPage.h	131;"	d
GUIDRV_SPAGE_OY_1C0	emwin/emWin_header/GUIDRV_SPage.h	187;"	d
GUIDRV_SPAGE_OY_1C1	emwin/emWin_header/GUIDRV_SPage.h	140;"	d
GUIDRV_SPAGE_OY_1C1	emwin/emWin_header/GUIDRV_SPage.h	196;"	d
GUIDRV_SPAGE_OY_2C0	emwin/emWin_header/GUIDRV_SPage.h	149;"	d
GUIDRV_SPAGE_OY_2C0	emwin/emWin_header/GUIDRV_SPage.h	205;"	d
GUIDRV_SPAGE_OY_2C1	emwin/emWin_header/GUIDRV_SPage.h	158;"	d
GUIDRV_SPAGE_OY_2C1	emwin/emWin_header/GUIDRV_SPage.h	214;"	d
GUIDRV_SPAGE_OY_4C0	emwin/emWin_header/GUIDRV_SPage.h	167;"	d
GUIDRV_SPAGE_OY_4C0	emwin/emWin_header/GUIDRV_SPage.h	223;"	d
GUIDRV_SPAGE_OY_4C1	emwin/emWin_header/GUIDRV_SPage.h	176;"	d
GUIDRV_SPAGE_OY_4C1	emwin/emWin_header/GUIDRV_SPage.h	232;"	d
GUIDRV_SPAGE_PRIVATE_H	emwin/emWin_header/GUIDRV_SPage_Private.h	49;"	d
GUIDRV_SPage_Config	emwin/emWin_header/GUIDRV_SPage.h	248;"	d
GUIDRV_SPage_Set1502	emwin/emWin_header/GUIDRV_SPage.h	250;"	d
GUIDRV_SPage_Set1510	emwin/emWin_header/GUIDRV_SPage.h	251;"	d
GUIDRV_SPage_Set1512	emwin/emWin_header/GUIDRV_SPage.h	252;"	d
GUIDRV_SPage_SetBus8	emwin/emWin_header/GUIDRV_SPage.h	249;"	d
GUIDRV_SPage_SetS1D15	emwin/emWin_header/GUIDRV_SPage.h	260;"	d
GUIDRV_SPage_SetST75256	emwin/emWin_header/GUIDRV_SPage.h	253;"	d
GUIDRV_SPage_SetST7591	emwin/emWin_header/GUIDRV_SPage.h	254;"	d
GUIDRV_SPage_SetUC1611	emwin/emWin_header/GUIDRV_SPage.h	255;"	d
GUIDRV_SPage_SetUC1628	emwin/emWin_header/GUIDRV_SPage.h	256;"	d
GUIDRV_SPage_SetUC1638	emwin/emWin_header/GUIDRV_SPage.h	257;"	d
GUIDRV_SSD1926_8	emwin/emWin_header/GUIDRV_SSD1926.h	86;"	d
GUIDRV_SSD1926_8	emwin/emWin_header/GUIDRV_SSD1926.h	97;"	d
GUIDRV_SSD1926_H	emwin/emWin_header/GUIDRV_SSD1926.h	46;"	d
GUIDRV_SSD1926_OSXY_8	emwin/emWin_header/GUIDRV_SSD1926.h	104;"	d
GUIDRV_SSD1926_OSXY_8	emwin/emWin_header/GUIDRV_SSD1926.h	93;"	d
GUIDRV_SSD1926_OSX_8	emwin/emWin_header/GUIDRV_SSD1926.h	103;"	d
GUIDRV_SSD1926_OSX_8	emwin/emWin_header/GUIDRV_SSD1926.h	92;"	d
GUIDRV_SSD1926_OSY_8	emwin/emWin_header/GUIDRV_SSD1926.h	102;"	d
GUIDRV_SSD1926_OSY_8	emwin/emWin_header/GUIDRV_SSD1926.h	91;"	d
GUIDRV_SSD1926_OS_8	emwin/emWin_header/GUIDRV_SSD1926.h	101;"	d
GUIDRV_SSD1926_OS_8	emwin/emWin_header/GUIDRV_SSD1926.h	90;"	d
GUIDRV_SSD1926_OXY_8	emwin/emWin_header/GUIDRV_SSD1926.h	100;"	d
GUIDRV_SSD1926_OXY_8	emwin/emWin_header/GUIDRV_SSD1926.h	89;"	d
GUIDRV_SSD1926_OX_8	emwin/emWin_header/GUIDRV_SSD1926.h	88;"	d
GUIDRV_SSD1926_OX_8	emwin/emWin_header/GUIDRV_SSD1926.h	99;"	d
GUIDRV_SSD1926_OY_8	emwin/emWin_header/GUIDRV_SSD1926.h	87;"	d
GUIDRV_SSD1926_OY_8	emwin/emWin_header/GUIDRV_SSD1926.h	98;"	d
GUIDRV_SSD1926_PRIVATE_H	emwin/emWin_header/GUIDRV_SSD1926_Private.h	49;"	d
GUIDRV_TEMPLATE	emwin/emWin_header/GUI.h	167;"	d
GUIDRV_TEMPLATE	emwin/emWin_header/GUI.h	169;"	d
GUIDRV_TEMPLATE	emwin/emWin_header/GUIDRV_Template.h	64;"	d
GUIDRV_TEMPLATE	emwin/emWin_header/GUIDRV_Template.h	68;"	d
GUIDRV_TEMPLATE_H	emwin/emWin_header/GUIDRV_Template.h	46;"	d
GUIDRV_TEMPLATE_I_16	emwin/emWin_header/GUIDRV_TemplateI.h	84;"	d
GUIDRV_TEMPLATE_I_16	emwin/emWin_header/GUIDRV_TemplateI.h	95;"	d
GUIDRV_TEMPLATE_I_H	emwin/emWin_header/GUIDRV_TemplateI.h	46;"	d
GUIDRV_TEMPLATE_I_OSXY_16	emwin/emWin_header/GUIDRV_TemplateI.h	102;"	d
GUIDRV_TEMPLATE_I_OSXY_16	emwin/emWin_header/GUIDRV_TemplateI.h	91;"	d
GUIDRV_TEMPLATE_I_OSX_16	emwin/emWin_header/GUIDRV_TemplateI.h	101;"	d
GUIDRV_TEMPLATE_I_OSX_16	emwin/emWin_header/GUIDRV_TemplateI.h	90;"	d
GUIDRV_TEMPLATE_I_OSY_16	emwin/emWin_header/GUIDRV_TemplateI.h	100;"	d
GUIDRV_TEMPLATE_I_OSY_16	emwin/emWin_header/GUIDRV_TemplateI.h	89;"	d
GUIDRV_TEMPLATE_I_OS_16	emwin/emWin_header/GUIDRV_TemplateI.h	88;"	d
GUIDRV_TEMPLATE_I_OS_16	emwin/emWin_header/GUIDRV_TemplateI.h	99;"	d
GUIDRV_TEMPLATE_I_OXY_16	emwin/emWin_header/GUIDRV_TemplateI.h	87;"	d
GUIDRV_TEMPLATE_I_OXY_16	emwin/emWin_header/GUIDRV_TemplateI.h	98;"	d
GUIDRV_TEMPLATE_I_OX_16	emwin/emWin_header/GUIDRV_TemplateI.h	86;"	d
GUIDRV_TEMPLATE_I_OX_16	emwin/emWin_header/GUIDRV_TemplateI.h	97;"	d
GUIDRV_TEMPLATE_I_OY_16	emwin/emWin_header/GUIDRV_TemplateI.h	85;"	d
GUIDRV_TEMPLATE_I_OY_16	emwin/emWin_header/GUIDRV_TemplateI.h	96;"	d
GUIDRV_TEMPLATE_I_PRIVATE_H	emwin/emWin_header/GUIDRV_TemplateI_Private.h	49;"	d
GUIDRV_WIN32	emwin/emWin_header/GUI.h	164;"	d
GUITASK_COPY_CONTEXT	emwin/emWin_header/GUI.h	87;"	d
GUITASK_COPY_CONTEXT	emwin/emWin_header/GUI.h	99;"	d
GUITASK_INIT	emwin/emWin_header/GUI.h	86;"	d
GUITASK_INIT	emwin/emWin_header/GUI.h	98;"	d
GUITDRV_ADS7846_CONFIG	emwin/emWin_header/GUITDRV_ADS7846.h	/^} GUITDRV_ADS7846_CONFIG;$/;"	t	typeref:struct:__anon306
GUITDRV_ADS7846_H	emwin/emWin_header/GUITDRV_ADS7846.h	96;"	d
GUITDRV_ADS7846_LAST_VAL	emwin/emWin_header/GUITDRV_ADS7846.h	/^} GUITDRV_ADS7846_LAST_VAL;$/;"	t	typeref:struct:__anon307
GUITYPE_H_INCLUDED	emwin/emWin_header/GUI_Type.h	50;"	d
GUI_180DEG	emwin/emWin_header/GUI_Private.h	105;"	d
GUI_360DEG	emwin/emWin_header/GUI_Private.h	106;"	d
GUI_45DEG	emwin/emWin_header/GUI_Private.h	103;"	d
GUI_90DEG	emwin/emWin_header/GUI_Private.h	104;"	d
GUI_AA_NOTRANS	emwin/emWin_header/GUI.h	1391;"	d
GUI_AA_PreserveTrans	emwin/emWin_header/GUI.h	1415;"	d
GUI_AA_TRANS	emwin/emWin_header/GUI.h	1390;"	d
GUI_AA__ClipX0	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           int GUI_AA__ClipX0;  \/\/ x0-clipping value for AA module$/;"	v
GUI_ALIGN_BOTTOM	emwin/emWin_header/GUI.h	2203;"	d
GUI_ALIGN_HCENTER	emwin/emWin_header/GUI.h	2199;"	d
GUI_ALIGN_HORIZONTAL	emwin/emWin_header/GUI.h	2204;"	d
GUI_ALIGN_LEFT	emwin/emWin_header/GUI.h	2198;"	d
GUI_ALIGN_RIGHT	emwin/emWin_header/GUI.h	2200;"	d
GUI_ALIGN_TOP	emwin/emWin_header/GUI.h	2201;"	d
GUI_ALIGN_VCENTER	emwin/emWin_header/GUI.h	2202;"	d
GUI_ALIGN_VERTICAL	emwin/emWin_header/GUI.h	2205;"	d
GUI_ALLOC_DATATYPE	emwin/emWin_header/GUI_ConfDefaults.h	173;"	d
GUI_ALLOC_DATATYPE_U	emwin/emWin_header/GUI_ConfDefaults.h	174;"	d
GUI_ALLOC_INFO	emwin/emWin_header/GUI.h	/^} GUI_ALLOC_INFO;$/;"	t	typeref:struct:__anon392
GUI_ALPHABLENDING_DONE	emwin/emWin_header/GUI_Private.h	269;"	d
GUI_ALPHA_STATE	emwin/emWin_header/GUI.h	/^} GUI_ALPHA_STATE;$/;"	t	typeref:struct:__anon395
GUI_ANIMATION_CALLBACK_FUNC	emwin/emWin_header/GUI.h	/^typedef int      GUI_ANIMATION_CALLBACK_FUNC(int TimeRem, void * pVoid);$/;"	t
GUI_ANIMATION_FUNC	emwin/emWin_header/GUI.h	/^typedef void GUI_ANIMATION_FUNC(GUI_ANIM_INFO * pInfo, void * pVoid);$/;"	t
GUI_ANIM_END	emwin/emWin_header/GUI.h	1182;"	d
GUI_ANIM_GETPOS_FUNC	emwin/emWin_header/GUI.h	/^typedef I32 (* GUI_ANIM_GETPOS_FUNC)(GUI_TIMER_TIME ts, GUI_TIMER_TIME te, GUI_TIMER_TIME tNow);$/;"	t
GUI_ANIM_HANDLE	emwin/emWin_header/GUI.h	/^typedef GUI_HMEM GUI_ANIM_HANDLE;$/;"	t
GUI_ANIM_INFO	emwin/emWin_header/GUI.h	/^} GUI_ANIM_INFO;$/;"	t	typeref:struct:__anon397
GUI_ANIM_RANGE	emwin/emWin_header/GUI.h	1185;"	d
GUI_ANIM_RUNNING	emwin/emWin_header/GUI.h	1181;"	d
GUI_ANIM_START	emwin/emWin_header/GUI.h	1180;"	d
GUI_ARRAY	emwin/emWin_header/GUI_ARRAY.h	/^typedef WM_HMEM GUI_ARRAY;$/;"	t
GUI_ARRAY_H	emwin/emWin_header/GUI_ARRAY.h	46;"	d
GUI_ARRAY_OBJ	emwin/emWin_header/GUI_ARRAY_Private.h	/^} GUI_ARRAY_OBJ;$/;"	t	typeref:struct:__anon365
GUI_ARRAY_PRIVATE_H	emwin/emWin_header/GUI_ARRAY_Private.h	47;"	d
GUI_ASSERT_LOCK	emwin/emWin_header/GUI_Private.h	115;"	d
GUI_ASSERT_LOCK	emwin/emWin_header/GUI_Private.h	120;"	d
GUI_ASSERT_NO_LOCK	emwin/emWin_header/GUI_Private.h	116;"	d
GUI_ASSERT_NO_LOCK	emwin/emWin_header/GUI_Private.h	121;"	d
GUI_AUTODEV	emwin/emWin_header/GUI.h	/^} GUI_AUTODEV;$/;"	t	typeref:struct:__anon393
GUI_AUTODEV_INFO	emwin/emWin_header/GUI.h	/^} GUI_AUTODEV_INFO;$/;"	t	typeref:struct:__anon394
GUI_BIDI_BASEDIR_AUTO	emwin/emWin_header/GUI.h	895;"	d
GUI_BIDI_BASEDIR_LTR	emwin/emWin_header/GUI.h	893;"	d
GUI_BIDI_BASEDIR_RTL	emwin/emWin_header/GUI.h	894;"	d
GUI_BIDI_LOG2VIS_CALC	emwin/emWin_header/GUI.h	897;"	d
GUI_BIDI_LOG2VIS_GETCACHE	emwin/emWin_header/GUI.h	898;"	d
GUI_BIDI_MAX_CHARS_PER_LINE	emwin/emWin_header/GUI_ConfDefaults.h	119;"	d
GUI_BIDI_MAX_CHARS_PER_LINE	emwin/emWin_header/GUI_ConfDefaults.h	121;"	d
GUI_BIDI_SUPPORT_RANGE_0	emwin/emWin_header/GUI__BiDi2_Types_800.h	51;"	d
GUI_BIDI_SUPPORT_RANGE_1	emwin/emWin_header/GUI__BiDi2_Types_800.h	54;"	d
GUI_BIDI_SUPPORT_RANGE_2	emwin/emWin_header/GUI__BiDi2_Types_800.h	57;"	d
GUI_BIDI_SUPPORT_RANGE_3	emwin/emWin_header/GUI__BiDi2_Types_800.h	60;"	d
GUI_BIDI_SUPPORT_RANGE_4	emwin/emWin_header/GUI__BiDi2_Types_800.h	63;"	d
GUI_BIDI_SUPPORT_RANGE_A	emwin/emWin_header/GUI__BiDi2_Types_800.h	66;"	d
GUI_BIDI_SUPPORT_RANGE_D	emwin/emWin_header/GUI__BiDi2_Types_800.h	69;"	d
GUI_BIDI_SUPPORT_RANGE_F	emwin/emWin_header/GUI__BiDi2_Types_800.h	72;"	d
GUI_BITMAP	emwin/emWin_header/GUI_Type.h	/^} GUI_BITMAP;$/;"	t	typeref:struct:__anon243
GUI_BITMAPSTREAM_CALLBACK	emwin/emWin_header/GUI_Type.h	/^typedef void * (* GUI_BITMAPSTREAM_CALLBACK)(GUI_BITMAPSTREAM_PARAM * pParam);$/;"	t
GUI_BITMAPSTREAM_GET_BUFFER	emwin/emWin_header/GUI.h	1271;"	d
GUI_BITMAPSTREAM_INFO	emwin/emWin_header/GUI_Type.h	/^} GUI_BITMAPSTREAM_INFO;$/;"	t	typeref:struct:__anon246
GUI_BITMAPSTREAM_MODIFY_PALETTE	emwin/emWin_header/GUI.h	1273;"	d
GUI_BITMAPSTREAM_PARAM	emwin/emWin_header/GUI_Type.h	/^} GUI_BITMAPSTREAM_PARAM;$/;"	t	typeref:struct:__anon245
GUI_BITMAPSTREAM_RELEASE_BUFFER	emwin/emWin_header/GUI.h	1272;"	d
GUI_BITMAP_METHODS	emwin/emWin_header/GUI_Type.h	/^} GUI_BITMAP_METHODS;$/;"	t	typeref:struct:__anon242
GUI_BITMAP_STREAM	emwin/emWin_header/GUI_Type.h	/^} GUI_BITMAP_STREAM;$/;"	t	typeref:struct:__anon244
GUI_BLACK	emwin/emWin_header/GUI.h	1951;"	d
GUI_BLUE	emwin/emWin_header/GUI.h	1929;"	d
GUI_BLUE_98	emwin/emWin_header/GUI.h	1967;"	d
GUI_BMP_CONTEXT	emwin/emWin_header/GUI_BMP_Private.h	/^} GUI_BMP_CONTEXT;$/;"	t	typeref:struct:__anon329
GUI_BMP_PARAM	emwin/emWin_header/GUI_BMP_Private.h	/^} GUI_BMP_PARAM;$/;"	t	typeref:struct:__anon328
GUI_BMP_PRIVATE_H	emwin/emWin_header/GUI_BMP_Private.h	46;"	d
GUI_BROWN	emwin/emWin_header/GUI.h	1952;"	d
GUI_CALLBACK_VOID_P	emwin/emWin_header/GUI.h	/^typedef void     GUI_CALLBACK_VOID_P        (void * p);$/;"	t
GUI_CALLBACK_VOID_U8_P	emwin/emWin_header/GUI_Type.h	/^typedef void GUI_CALLBACK_VOID_U8_P(U8 Data, void * p);$/;"	t
GUI_CHARINFO	emwin/emWin_header/GUI_Type.h	/^} GUI_CHARINFO;$/;"	t	typeref:struct:__anon255
GUI_CHARINFO_EXT	emwin/emWin_header/GUI_Type.h	/^} GUI_CHARINFO_EXT;$/;"	t	typeref:struct:__anon256
GUI_COLOR	emwin/emWin_header/GUI_Type.h	/^typedef LCD_COLOR       GUI_COLOR;$/;"	t
GUI_COLOR_CONV_1	emwin/emWin_header/LCD.h	280;"	d
GUI_COLOR_CONV_2	emwin/emWin_header/LCD.h	281;"	d
GUI_COLOR_CONV_4	emwin/emWin_header/LCD.h	282;"	d
GUI_COLOR_CONV_565	emwin/emWin_header/LCD.h	286;"	d
GUI_COLOR_CONV_8666	emwin/emWin_header/LCD.h	283;"	d
GUI_COLOR_CONV_888	emwin/emWin_header/LCD.h	284;"	d
GUI_COLOR_CONV_8888	emwin/emWin_header/LCD.h	285;"	d
GUI_COLOR_CONV_M565	emwin/emWin_header/LCD.h	287;"	d
GUI_COMPRESS_RLE4	emwin/emWin_header/GUI.h	1611;"	d
GUI_COMPRESS_RLE8	emwin/emWin_header/GUI.h	1612;"	d
GUI_CONFDEFAULTS_H	emwin/emWin_header/GUI_ConfDefaults.h	50;"	d
GUI_CONST_STORAGE	emwin/emWin_header/GUI_ConfDefaults.h	110;"	d
GUI_CONTEXT	emwin/emWin_header/GUI.h	/^struct GUI_CONTEXT {$/;"	s
GUI_CONTEXT	emwin/emWin_header/GUI.h	/^typedef struct GUI_CONTEXT GUI_CONTEXT;$/;"	t	typeref:struct:GUI_CONTEXT
GUI_COORD_X	emwin/emWin_header/GUI.h	2000;"	d
GUI_COORD_Y	emwin/emWin_header/GUI.h	2001;"	d
GUI_COUNTOF	emwin/emWin_header/GUI.h	72;"	d
GUI_CURSOR	emwin/emWin_header/GUI.h	/^} GUI_CURSOR;$/;"	t	typeref:struct:__anon389
GUI_CURSOR_ANIM	emwin/emWin_header/GUI.h	/^} GUI_CURSOR_ANIM;$/;"	t	typeref:struct:__anon390
GUI_CURSOR_Clear	emwin/emWin_header/GUI.h	714;"	d
GUI_CURSOR_HIDE	emwin/emWin_header/GUI.h	678;"	d
GUI_CURSOR_LAYER	emwin/emWin_header/GUI_ConfDefaults.h	150;"	d
GUI_CURSOR_SHOW	emwin/emWin_header/GUI.h	677;"	d
GUI_CURSOR_Show	emwin/emWin_header/GUI.h	713;"	d
GUI_CYAN	emwin/emWin_header/GUI.h	1932;"	d
GUI_ConstString	emwin/emWin_header/GUI_Type.h	/^typedef const char *  GUI_ConstString;$/;"	t
GUI_DARKBLUE	emwin/emWin_header/GUI.h	1941;"	d
GUI_DARKCYAN	emwin/emWin_header/GUI.h	1944;"	d
GUI_DARKGRAY	emwin/emWin_header/GUI.h	1950;"	d
GUI_DARKGREEN	emwin/emWin_header/GUI.h	1942;"	d
GUI_DARKMAGENTA	emwin/emWin_header/GUI.h	1945;"	d
GUI_DARKRED	emwin/emWin_header/GUI.h	1943;"	d
GUI_DARKYELLOW	emwin/emWin_header/GUI.h	1946;"	d
GUI_DBUTTON	emwin/emWin_header/GUI.h	1880;"	d
GUI_DEBUG_ASSERT	emwin/emWin_header/GUI_Debug.h	191;"	d
GUI_DEBUG_ASSERT	emwin/emWin_header/GUI_Debug.h	193;"	d
GUI_DEBUG_ERROROUT	emwin/emWin_header/GUI_Debug.h	107;"	d
GUI_DEBUG_ERROROUT	emwin/emWin_header/GUI_Debug.h	96;"	d
GUI_DEBUG_ERROROUT1	emwin/emWin_header/GUI_Debug.h	108;"	d
GUI_DEBUG_ERROROUT1	emwin/emWin_header/GUI_Debug.h	97;"	d
GUI_DEBUG_ERROROUT1_IF	emwin/emWin_header/GUI_Debug.h	102;"	d
GUI_DEBUG_ERROROUT1_IF	emwin/emWin_header/GUI_Debug.h	113;"	d
GUI_DEBUG_ERROROUT2	emwin/emWin_header/GUI_Debug.h	109;"	d
GUI_DEBUG_ERROROUT2	emwin/emWin_header/GUI_Debug.h	98;"	d
GUI_DEBUG_ERROROUT2_IF	emwin/emWin_header/GUI_Debug.h	103;"	d
GUI_DEBUG_ERROROUT2_IF	emwin/emWin_header/GUI_Debug.h	114;"	d
GUI_DEBUG_ERROROUT3	emwin/emWin_header/GUI_Debug.h	110;"	d
GUI_DEBUG_ERROROUT3	emwin/emWin_header/GUI_Debug.h	99;"	d
GUI_DEBUG_ERROROUT3_IF	emwin/emWin_header/GUI_Debug.h	104;"	d
GUI_DEBUG_ERROROUT3_IF	emwin/emWin_header/GUI_Debug.h	115;"	d
GUI_DEBUG_ERROROUT4	emwin/emWin_header/GUI_Debug.h	100;"	d
GUI_DEBUG_ERROROUT4	emwin/emWin_header/GUI_Debug.h	111;"	d
GUI_DEBUG_ERROROUT4_IF	emwin/emWin_header/GUI_Debug.h	105;"	d
GUI_DEBUG_ERROROUT4_IF	emwin/emWin_header/GUI_Debug.h	116;"	d
GUI_DEBUG_ERROROUT_IF	emwin/emWin_header/GUI_Debug.h	101;"	d
GUI_DEBUG_ERROROUT_IF	emwin/emWin_header/GUI_Debug.h	112;"	d
GUI_DEBUG_GETCMDLINE	emwin/emWin_header/GUI_Debug.h	81;"	d
GUI_DEBUG_GETCMDLINE	emwin/emWin_header/GUI_Debug.h	83;"	d
GUI_DEBUG_H	emwin/emWin_header/GUI_Debug.h	49;"	d
GUI_DEBUG_LEVEL	emwin/emWin_header/GUI_Debug.h	64;"	d
GUI_DEBUG_LEVEL	emwin/emWin_header/GUI_Debug.h	66;"	d
GUI_DEBUG_LEVEL_CHECK_ALL	emwin/emWin_header/GUI_Debug.h	57;"	d
GUI_DEBUG_LEVEL_CHECK_PARA	emwin/emWin_header/GUI_Debug.h	56;"	d
GUI_DEBUG_LEVEL_LOG_ALL	emwin/emWin_header/GUI_Debug.h	60;"	d
GUI_DEBUG_LEVEL_LOG_ERRORS	emwin/emWin_header/GUI_Debug.h	58;"	d
GUI_DEBUG_LEVEL_LOG_WARNINGS	emwin/emWin_header/GUI_Debug.h	59;"	d
GUI_DEBUG_LEVEL_NOCHECK	emwin/emWin_header/GUI_Debug.h	55;"	d
GUI_DEBUG_LOG	emwin/emWin_header/GUI_Debug.h	161;"	d
GUI_DEBUG_LOG	emwin/emWin_header/GUI_Debug.h	172;"	d
GUI_DEBUG_LOG1	emwin/emWin_header/GUI_Debug.h	162;"	d
GUI_DEBUG_LOG1	emwin/emWin_header/GUI_Debug.h	173;"	d
GUI_DEBUG_LOG1_IF	emwin/emWin_header/GUI_Debug.h	167;"	d
GUI_DEBUG_LOG1_IF	emwin/emWin_header/GUI_Debug.h	178;"	d
GUI_DEBUG_LOG2	emwin/emWin_header/GUI_Debug.h	163;"	d
GUI_DEBUG_LOG2	emwin/emWin_header/GUI_Debug.h	174;"	d
GUI_DEBUG_LOG2_IF	emwin/emWin_header/GUI_Debug.h	168;"	d
GUI_DEBUG_LOG2_IF	emwin/emWin_header/GUI_Debug.h	179;"	d
GUI_DEBUG_LOG3	emwin/emWin_header/GUI_Debug.h	164;"	d
GUI_DEBUG_LOG3	emwin/emWin_header/GUI_Debug.h	175;"	d
GUI_DEBUG_LOG3_IF	emwin/emWin_header/GUI_Debug.h	169;"	d
GUI_DEBUG_LOG3_IF	emwin/emWin_header/GUI_Debug.h	180;"	d
GUI_DEBUG_LOG4	emwin/emWin_header/GUI_Debug.h	165;"	d
GUI_DEBUG_LOG4	emwin/emWin_header/GUI_Debug.h	176;"	d
GUI_DEBUG_LOG4_IF	emwin/emWin_header/GUI_Debug.h	170;"	d
GUI_DEBUG_LOG4_IF	emwin/emWin_header/GUI_Debug.h	181;"	d
GUI_DEBUG_LOG_IF	emwin/emWin_header/GUI_Debug.h	166;"	d
GUI_DEBUG_LOG_IF	emwin/emWin_header/GUI_Debug.h	177;"	d
GUI_DEBUG_WARN	emwin/emWin_header/GUI_Debug.h	129;"	d
GUI_DEBUG_WARN	emwin/emWin_header/GUI_Debug.h	140;"	d
GUI_DEBUG_WARN1	emwin/emWin_header/GUI_Debug.h	130;"	d
GUI_DEBUG_WARN1	emwin/emWin_header/GUI_Debug.h	141;"	d
GUI_DEBUG_WARN1_IF	emwin/emWin_header/GUI_Debug.h	135;"	d
GUI_DEBUG_WARN1_IF	emwin/emWin_header/GUI_Debug.h	146;"	d
GUI_DEBUG_WARN2	emwin/emWin_header/GUI_Debug.h	131;"	d
GUI_DEBUG_WARN2	emwin/emWin_header/GUI_Debug.h	142;"	d
GUI_DEBUG_WARN2_IF	emwin/emWin_header/GUI_Debug.h	136;"	d
GUI_DEBUG_WARN2_IF	emwin/emWin_header/GUI_Debug.h	147;"	d
GUI_DEBUG_WARN3	emwin/emWin_header/GUI_Debug.h	132;"	d
GUI_DEBUG_WARN3	emwin/emWin_header/GUI_Debug.h	143;"	d
GUI_DEBUG_WARN3_IF	emwin/emWin_header/GUI_Debug.h	137;"	d
GUI_DEBUG_WARN3_IF	emwin/emWin_header/GUI_Debug.h	148;"	d
GUI_DEBUG_WARN4	emwin/emWin_header/GUI_Debug.h	133;"	d
GUI_DEBUG_WARN4	emwin/emWin_header/GUI_Debug.h	144;"	d
GUI_DEBUG_WARN4_IF	emwin/emWin_header/GUI_Debug.h	138;"	d
GUI_DEBUG_WARN4_IF	emwin/emWin_header/GUI_Debug.h	149;"	d
GUI_DEBUG_WARN_IF	emwin/emWin_header/GUI_Debug.h	134;"	d
GUI_DEBUG_WARN_IF	emwin/emWin_header/GUI_Debug.h	145;"	d
GUI_DEFAULT_BKCOLOR	emwin/emWin_header/GUI_Private.h	90;"	d
GUI_DEFAULT_COLOR	emwin/emWin_header/GUI_Private.h	94;"	d
GUI_DEFAULT_CURSOR	emwin/emWin_header/GUI_Private.h	86;"	d
GUI_DEFAULT_FONT	emwin/emWin_Config/GUIConf.h	70;"	d
GUI_DEFAULT_FONT	emwin/emWin_header/GUI_Private.h	82;"	d
GUI_DES_DECRYPT	emwin/emWin_header/GUI_VNC.h	70;"	d
GUI_DES_ENCRYPT	emwin/emWin_header/GUI_VNC.h	69;"	d
GUI_DEVICE	emwin/emWin_header/GUI.h	/^struct GUI_DEVICE {$/;"	s
GUI_DEVICE	emwin/emWin_header/LCD.h	/^typedef struct GUI_DEVICE     GUI_DEVICE;$/;"	t	typeref:struct:GUI_DEVICE
GUI_DEVICE_API	emwin/emWin_header/GUI.h	/^struct GUI_DEVICE_API {$/;"	s
GUI_DEVICE_API	emwin/emWin_header/LCD.h	/^typedef struct GUI_DEVICE_API GUI_DEVICE_API;$/;"	t	typeref:struct:GUI_DEVICE_API
GUI_DEVICE_STAYONTOP	emwin/emWin_header/GUI.h	149;"	d
GUI_DIRTYDEVICE_INFO	emwin/emWin_header/GUI.h	/^} GUI_DIRTYDEVICE_INFO;$/;"	t	typeref:struct:__anon385
GUI_DISPCHAR	emwin/emWin_header/GUI_Type.h	/^typedef void GUI_DISPCHAR    (U16 c);$/;"	t
GUI_DM_NORMAL	emwin/emWin_header/GUI.h	2169;"	d
GUI_DM_REV	emwin/emWin_header/GUI.h	2172;"	d
GUI_DM_TRANS	emwin/emWin_header/GUI.h	2171;"	d
GUI_DM_XOR	emwin/emWin_header/GUI.h	2170;"	d
GUI_DRAW	emwin/emWin_header/WIDGET.h	/^struct GUI_DRAW {$/;"	s
GUI_DRAW	emwin/emWin_header/WIDGET.h	/^typedef struct GUI_DRAW GUI_DRAW;$/;"	t	typeref:struct:GUI_DRAW
GUI_DRAWBITMAP_FUNC	emwin/emWin_header/GUI.h	/^typedef void GUI_DRAWBITMAP_FUNC (int LayerIndex, int x, int y, const void * p, int xSize, int ySize, int BytesPerLine);$/;"	t
GUI_DRAWLINE_INFO	emwin/emWin_header/GUI_BMP_Private.h	/^} GUI_DRAWLINE_INFO;$/;"	t	typeref:struct:__anon330
GUI_DRAWMEMDEV_16BPP_FUNC	emwin/emWin_header/GUI.h	/^typedef void     GUI_DRAWMEMDEV_16BPP_FUNC  (void * pDst, const void * pSrc, int xSize, int ySize, int BytesPerLineDst, int BytesPerLineSrc);$/;"	t
GUI_DRAWMEMDEV_FUNC	emwin/emWin_header/GUI.h	984;"	d
GUI_DRAWMODE	emwin/emWin_header/GUI_Type.h	/^typedef LCD_DRAWMODE    GUI_DRAWMODE;$/;"	t
GUI_DRAWMODE_NORMAL	emwin/emWin_header/GUI.h	2165;"	d
GUI_DRAWMODE_REV	emwin/emWin_header/GUI.h	2168;"	d
GUI_DRAWMODE_TRANS	emwin/emWin_header/GUI.h	2167;"	d
GUI_DRAWMODE_XOR	emwin/emWin_header/GUI.h	2166;"	d
GUI_DRAW_BMP24	emwin/emWin_header/GUI.h	1631;"	d
GUI_DRAW_BMP444_12	emwin/emWin_header/GUI.h	1621;"	d
GUI_DRAW_BMP444_12_1	emwin/emWin_header/GUI.h	1623;"	d
GUI_DRAW_BMP444_16	emwin/emWin_header/GUI.h	1625;"	d
GUI_DRAW_BMP555	emwin/emWin_header/GUI.h	1627;"	d
GUI_DRAW_BMP565	emwin/emWin_header/GUI.h	1629;"	d
GUI_DRAW_BMP888	emwin/emWin_header/GUI.h	1632;"	d
GUI_DRAW_BMP8888	emwin/emWin_header/GUI.h	1634;"	d
GUI_DRAW_BMPA555	emwin/emWin_header/GUI.h	1636;"	d
GUI_DRAW_BMPA565	emwin/emWin_header/GUI.h	1638;"	d
GUI_DRAW_BMPAM555	emwin/emWin_header/GUI.h	1637;"	d
GUI_DRAW_BMPAM565	emwin/emWin_header/GUI.h	1639;"	d
GUI_DRAW_BMPM444_12	emwin/emWin_header/GUI.h	1622;"	d
GUI_DRAW_BMPM444_12_1	emwin/emWin_header/GUI.h	1624;"	d
GUI_DRAW_BMPM444_16	emwin/emWin_header/GUI.h	1626;"	d
GUI_DRAW_BMPM555	emwin/emWin_header/GUI.h	1628;"	d
GUI_DRAW_BMPM565	emwin/emWin_header/GUI.h	1630;"	d
GUI_DRAW_BMPM888	emwin/emWin_header/GUI.h	1633;"	d
GUI_DRAW_BMPM8888I	emwin/emWin_header/GUI.h	1635;"	d
GUI_DRAW_CONSTS	emwin/emWin_header/WIDGET.h	/^} GUI_DRAW_CONSTS;$/;"	t	typeref:struct:__anon213
GUI_DRAW_HANDLE	emwin/emWin_header/WIDGET.h	/^typedef WM_HMEM GUI_DRAW_HANDLE;$/;"	t
GUI_DRAW_RLE16	emwin/emWin_header/GUI.h	1616;"	d
GUI_DRAW_RLE32	emwin/emWin_header/GUI.h	1618;"	d
GUI_DRAW_RLE4	emwin/emWin_header/GUI.h	1614;"	d
GUI_DRAW_RLE8	emwin/emWin_header/GUI.h	1615;"	d
GUI_DRAW_RLEALPHA	emwin/emWin_header/GUI.h	1619;"	d
GUI_DRAW_RLEM16	emwin/emWin_header/GUI.h	1617;"	d
GUI_DRAW_SELF_CB	emwin/emWin_header/WIDGET.h	/^typedef void   GUI_DRAW_SELF_CB (WM_HWIN hWin);$/;"	t
GUI_DecChar	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN GUI_SADDR char             GUI_DecChar;$/;"	v
GUI_DispString_UC	emwin/emWin_header/GUI.h	2493;"	d
GUI_EDIT_CURSORBLINK	emwin/emWin_header/EDIT.h	101;"	d
GUI_EDIT_CUSTCOLORMODE	emwin/emWin_header/EDIT.h	100;"	d
GUI_EDIT_MODE_INSERT	emwin/emWin_header/EDIT.h	106;"	d
GUI_EDIT_MODE_OVERWRITE	emwin/emWin_header/EDIT.h	107;"	d
GUI_EDIT_NORMAL	emwin/emWin_header/EDIT.h	92;"	d
GUI_EDIT_SHOWCURSOR	emwin/emWin_header/EDIT.h	99;"	d
GUI_EDIT_SIGNED	emwin/emWin_header/EDIT.h	93;"	d
GUI_EDIT_SUPPRESS_LEADING_ZEROES	emwin/emWin_header/EDIT.h	94;"	d
GUI_EXTERN	emwin/emWin_header/GUI_Private.h	692;"	d
GUI_EXTERN	emwin/emWin_header/GUI_Private.h	694;"	d
GUI_EXTERN	emwin/emWin_header/GUI_Private.h	730;"	d
GUI_EXTERN	emwin/emWin_header/WM_Intern.h	147;"	d
GUI_EXTERN	emwin/emWin_header/WM_Intern.h	149;"	d
GUI_EXTERN	emwin/emWin_header/WM_Intern.h	168;"	d
GUI_FONT	emwin/emWin_header/GUI_Type.h	/^struct GUI_FONT {$/;"	s
GUI_FONT	emwin/emWin_header/GUI_Type.h	/^typedef struct GUI_FONT GUI_FONT;$/;"	t	typeref:struct:GUI_FONT
GUI_FONTINFO	emwin/emWin_header/GUI_Type.h	/^} GUI_FONTINFO;$/;"	t	typeref:struct:__anon258
GUI_FONTINFO_FLAG_AA	emwin/emWin_header/GUI_Type.h	250;"	d
GUI_FONTINFO_FLAG_AA2	emwin/emWin_header/GUI_Type.h	251;"	d
GUI_FONTINFO_FLAG_AA4	emwin/emWin_header/GUI_Type.h	252;"	d
GUI_FONTINFO_FLAG_MONO	emwin/emWin_header/GUI_Type.h	249;"	d
GUI_FONTINFO_FLAG_PROP	emwin/emWin_header/GUI_Type.h	248;"	d
GUI_FONTINFO_FLAG_PROPFRM	emwin/emWin_header/GUI_Type.h	253;"	d
GUI_FONTINTERN_H	emwin/emWin_header/GUI_FontIntern.h	51;"	d
GUI_FONTTYPE_MONO	emwin/emWin_header/GUI_Type.h	322;"	d
GUI_FONTTYPE_PROP	emwin/emWin_header/GUI_Type.h	331;"	d
GUI_FONTTYPE_PROPAA	emwin/emWin_header/GUI_Type.h	367;"	d
GUI_FONTTYPE_PROP_AA2	emwin/emWin_header/GUI_Type.h	376;"	d
GUI_FONTTYPE_PROP_AA2_EXT	emwin/emWin_header/GUI_Type.h	385;"	d
GUI_FONTTYPE_PROP_AA2_SJIS	emwin/emWin_header/GUI_Type.h	394;"	d
GUI_FONTTYPE_PROP_AA4	emwin/emWin_header/GUI_Type.h	403;"	d
GUI_FONTTYPE_PROP_AA4_EXT	emwin/emWin_header/GUI_Type.h	412;"	d
GUI_FONTTYPE_PROP_AA4_SJIS	emwin/emWin_header/GUI_Type.h	421;"	d
GUI_FONTTYPE_PROP_EXT	emwin/emWin_header/GUI_Type.h	340;"	d
GUI_FONTTYPE_PROP_FRM	emwin/emWin_header/GUI_Type.h	349;"	d
GUI_FONTTYPE_PROP_SJIS	emwin/emWin_header/GUI_Type.h	358;"	d
GUI_FONT_10S_1	emwin/emWin_header/GUI.h	2075;"	d
GUI_FONT_10S_ASCII	emwin/emWin_header/GUI.h	2074;"	d
GUI_FONT_10_1	emwin/emWin_header/GUI.h	2077;"	d
GUI_FONT_10_ASCII	emwin/emWin_header/GUI.h	2076;"	d
GUI_FONT_13B_1	emwin/emWin_header/GUI.h	2081;"	d
GUI_FONT_13B_ASCII	emwin/emWin_header/GUI.h	2080;"	d
GUI_FONT_13HB_1	emwin/emWin_header/GUI.h	2085;"	d
GUI_FONT_13HB_ASCII	emwin/emWin_header/GUI.h	2084;"	d
GUI_FONT_13H_1	emwin/emWin_header/GUI.h	2083;"	d
GUI_FONT_13H_ASCII	emwin/emWin_header/GUI.h	2082;"	d
GUI_FONT_13_1	emwin/emWin_header/GUI.h	2079;"	d
GUI_FONT_13_ASCII	emwin/emWin_header/GUI.h	2078;"	d
GUI_FONT_16B_1	emwin/emWin_header/GUI.h	2091;"	d
GUI_FONT_16B_ASCII	emwin/emWin_header/GUI.h	2090;"	d
GUI_FONT_16_1	emwin/emWin_header/GUI.h	2087;"	d
GUI_FONT_16_1HK	emwin/emWin_header/GUI.h	2089;"	d
GUI_FONT_16_ASCII	emwin/emWin_header/GUI.h	2086;"	d
GUI_FONT_16_HK	emwin/emWin_header/GUI.h	2088;"	d
GUI_FONT_20B_1	emwin/emWin_header/GUI.h	2095;"	d
GUI_FONT_20B_ASCII	emwin/emWin_header/GUI.h	2094;"	d
GUI_FONT_20F_ASCII	emwin/emWin_header/GUI.h	2108;"	d
GUI_FONT_20_1	emwin/emWin_header/GUI.h	2093;"	d
GUI_FONT_20_ASCII	emwin/emWin_header/GUI.h	2092;"	d
GUI_FONT_24B_1	emwin/emWin_header/GUI.h	2099;"	d
GUI_FONT_24B_ASCII	emwin/emWin_header/GUI.h	2098;"	d
GUI_FONT_24_1	emwin/emWin_header/GUI.h	2097;"	d
GUI_FONT_24_ASCII	emwin/emWin_header/GUI.h	2096;"	d
GUI_FONT_32B_1	emwin/emWin_header/GUI.h	2103;"	d
GUI_FONT_32B_ASCII	emwin/emWin_header/GUI.h	2102;"	d
GUI_FONT_32_1	emwin/emWin_header/GUI.h	2101;"	d
GUI_FONT_32_ASCII	emwin/emWin_header/GUI.h	2100;"	d
GUI_FONT_4X6	emwin/emWin_header/GUI.h	2113;"	d
GUI_FONT_6X8	emwin/emWin_header/GUI.h	2114;"	d
GUI_FONT_6X8_1	emwin/emWin_header/GUI.h	2116;"	d
GUI_FONT_6X8_ASCII	emwin/emWin_header/GUI.h	2115;"	d
GUI_FONT_6X9	emwin/emWin_header/GUI.h	2117;"	d
GUI_FONT_8X10_ASCII	emwin/emWin_header/GUI.h	2122;"	d
GUI_FONT_8X12_ASCII	emwin/emWin_header/GUI.h	2123;"	d
GUI_FONT_8X13_1	emwin/emWin_header/GUI.h	2125;"	d
GUI_FONT_8X13_ASCII	emwin/emWin_header/GUI.h	2124;"	d
GUI_FONT_8X15B_1	emwin/emWin_header/GUI.h	2127;"	d
GUI_FONT_8X15B_ASCII	emwin/emWin_header/GUI.h	2126;"	d
GUI_FONT_8X16	emwin/emWin_header/GUI.h	2128;"	d
GUI_FONT_8X16X1X2	emwin/emWin_header/GUI.h	2131;"	d
GUI_FONT_8X16X2X2	emwin/emWin_header/GUI.h	2132;"	d
GUI_FONT_8X16X3X3	emwin/emWin_header/GUI.h	2133;"	d
GUI_FONT_8X16_1	emwin/emWin_header/GUI.h	2135;"	d
GUI_FONT_8X16_ASCII	emwin/emWin_header/GUI.h	2134;"	d
GUI_FONT_8X17	emwin/emWin_header/GUI.h	2129;"	d
GUI_FONT_8X18	emwin/emWin_header/GUI.h	2130;"	d
GUI_FONT_8X8	emwin/emWin_header/GUI.h	2118;"	d
GUI_FONT_8X8_1	emwin/emWin_header/GUI.h	2120;"	d
GUI_FONT_8X8_ASCII	emwin/emWin_header/GUI.h	2119;"	d
GUI_FONT_8X9	emwin/emWin_header/GUI.h	2121;"	d
GUI_FONT_8_1	emwin/emWin_header/GUI.h	2073;"	d
GUI_FONT_8_ASCII	emwin/emWin_header/GUI.h	2072;"	d
GUI_FONT_COMIC18B_1	emwin/emWin_header/GUI.h	2153;"	d
GUI_FONT_COMIC18B_ASCII	emwin/emWin_header/GUI.h	2152;"	d
GUI_FONT_COMIC24B_1	emwin/emWin_header/GUI.h	2155;"	d
GUI_FONT_COMIC24B_ASCII	emwin/emWin_header/GUI.h	2154;"	d
GUI_FONT_D24X32	emwin/emWin_header/GUI.h	2140;"	d
GUI_FONT_D32	emwin/emWin_header/GUI.h	2141;"	d
GUI_FONT_D36X48	emwin/emWin_header/GUI.h	2142;"	d
GUI_FONT_D48	emwin/emWin_header/GUI.h	2143;"	d
GUI_FONT_D48X64	emwin/emWin_header/GUI.h	2144;"	d
GUI_FONT_D60X80	emwin/emWin_header/GUI.h	2146;"	d
GUI_FONT_D64	emwin/emWin_header/GUI.h	2145;"	d
GUI_FONT_D80	emwin/emWin_header/GUI.h	2147;"	d
GUI_FONT_MONO	emwin/emWin_header/GUI_Type.h	/^} GUI_FONT_MONO;$/;"	t	typeref:struct:__anon257
GUI_FONT_PROP	emwin/emWin_header/GUI_Type.h	/^typedef struct GUI_FONT_PROP {$/;"	s
GUI_FONT_PROP	emwin/emWin_header/GUI_Type.h	/^} GUI_FONT_PROP;$/;"	t	typeref:struct:GUI_FONT_PROP
GUI_FONT_PROP_EXT	emwin/emWin_header/GUI_Type.h	/^typedef struct GUI_FONT_PROP_EXT {$/;"	s
GUI_FONT_PROP_EXT	emwin/emWin_header/GUI_Type.h	/^} GUI_FONT_PROP_EXT;$/;"	t	typeref:struct:GUI_FONT_PROP_EXT
GUI_FONT_TRANSINFO	emwin/emWin_header/GUI_Type.h	/^} GUI_FONT_TRANSINFO;$/;"	t	typeref:struct:__anon254
GUI_FONT_TRANSLIST	emwin/emWin_header/GUI_Type.h	/^} GUI_FONT_TRANSLIST;$/;"	t	typeref:struct:__anon253
GUI_GCACHE_PRIVATE_H	emwin/emWin_header/GUI_GCache_Private.h	46;"	d
GUI_GETCHARDISTX	emwin/emWin_header/GUI_Type.h	/^typedef int  GUI_GETCHARDISTX(U16P c, int * pSizeX);$/;"	t
GUI_GETCHARINFO	emwin/emWin_header/GUI_Type.h	/^typedef int  GUI_GETCHARINFO (U16P c, GUI_CHARINFO_EXT * pInfo);$/;"	t
GUI_GETFONTINFO	emwin/emWin_header/GUI_Type.h	/^typedef void GUI_GETFONTINFO (const GUI_FONT * pFont, GUI_FONTINFO * pfi);$/;"	t
GUI_GET_DATA_FUNC	emwin/emWin_header/GUI.h	/^typedef int GUI_GET_DATA_FUNC(void * p, const U8 ** ppData, unsigned NumBytes, U32 Off);$/;"	t
GUI_GIF_CONTEXT	emwin/emWin_header/GUI_GIF_Private.h	/^} GUI_GIF_CONTEXT;$/;"	t	typeref:struct:__anon323
GUI_GIF_IMAGE_INFO	emwin/emWin_header/GUI_Type.h	/^} GUI_GIF_IMAGE_INFO;$/;"	t	typeref:struct:__anon249
GUI_GIF_INFO	emwin/emWin_header/GUI_Type.h	/^} GUI_GIF_INFO;$/;"	t	typeref:struct:__anon250
GUI_GIF_PARAM	emwin/emWin_header/GUI_GIF_Private.h	/^} GUI_GIF_PARAM;$/;"	t	typeref:struct:__anon325
GUI_GIF_PRIVATE_H	emwin/emWin_header/GUI_GIF_Private.h	46;"	d
GUI_GRAY	emwin/emWin_header/GUI.h	1949;"	d
GUI_GRAY_3F	emwin/emWin_header/GUI.h	1956;"	d
GUI_GRAY_50	emwin/emWin_header/GUI.h	1957;"	d
GUI_GRAY_55	emwin/emWin_header/GUI.h	1958;"	d
GUI_GRAY_60	emwin/emWin_header/GUI.h	1959;"	d
GUI_GRAY_7C	emwin/emWin_header/GUI.h	1960;"	d
GUI_GRAY_9A	emwin/emWin_header/GUI.h	1961;"	d
GUI_GRAY_AA	emwin/emWin_header/GUI.h	1962;"	d
GUI_GRAY_C0	emwin/emWin_header/GUI.h	1963;"	d
GUI_GRAY_C8	emwin/emWin_header/GUI.h	1964;"	d
GUI_GRAY_D0	emwin/emWin_header/GUI.h	1965;"	d
GUI_GRAY_E7	emwin/emWin_header/GUI.h	1966;"	d
GUI_GREEN	emwin/emWin_header/GUI.h	1930;"	d
GUI_H	emwin/emWin_header/GUI.h	46;"	d
GUI_HMEM	emwin/emWin_header/GUI_Type.h	579;"	d
GUI_HMEM_NULL	emwin/emWin_header/GUI_Type.h	581;"	d
GUI_HOOK	emwin/emWin_header/GUI_HOOK.h	/^typedef struct GUI_HOOK {$/;"	s
GUI_HOOK	emwin/emWin_header/GUI_HOOK.h	/^} GUI_HOOK;$/;"	t	typeref:struct:GUI_HOOK
GUI_HOOK_FUNC	emwin/emWin_header/GUI_HOOK.h	/^typedef int GUI_HOOK_FUNC(WM_MESSAGE* pMsg);$/;"	t
GUI_HOOK_H	emwin/emWin_header/GUI_HOOK.h	46;"	d
GUI_HSPRITE	emwin/emWin_header/GUI_Type.h	/^typedef     GUI_HMEM      GUI_HSPRITE;$/;"	t
GUI_HWIN	emwin/emWin_header/GUI_Type.h	/^typedef     GUI_HMEM      GUI_HWIN;$/;"	t
GUI_ID_BUTTON0	emwin/emWin_header/GUI.h	1776;"	d
GUI_ID_BUTTON1	emwin/emWin_header/GUI.h	1777;"	d
GUI_ID_BUTTON2	emwin/emWin_header/GUI.h	1778;"	d
GUI_ID_BUTTON3	emwin/emWin_header/GUI.h	1779;"	d
GUI_ID_BUTTON4	emwin/emWin_header/GUI.h	1780;"	d
GUI_ID_BUTTON5	emwin/emWin_header/GUI.h	1781;"	d
GUI_ID_BUTTON6	emwin/emWin_header/GUI.h	1782;"	d
GUI_ID_BUTTON7	emwin/emWin_header/GUI.h	1783;"	d
GUI_ID_BUTTON8	emwin/emWin_header/GUI.h	1784;"	d
GUI_ID_BUTTON9	emwin/emWin_header/GUI.h	1785;"	d
GUI_ID_CALENDAR0	emwin/emWin_header/GUI.h	1854;"	d
GUI_ID_CANCEL	emwin/emWin_header/GUI.h	1696;"	d
GUI_ID_CHECK0	emwin/emWin_header/GUI.h	1729;"	d
GUI_ID_CHECK1	emwin/emWin_header/GUI.h	1730;"	d
GUI_ID_CHECK2	emwin/emWin_header/GUI.h	1731;"	d
GUI_ID_CHECK3	emwin/emWin_header/GUI.h	1732;"	d
GUI_ID_CHECK4	emwin/emWin_header/GUI.h	1733;"	d
GUI_ID_CHECK5	emwin/emWin_header/GUI.h	1734;"	d
GUI_ID_CHECK6	emwin/emWin_header/GUI.h	1735;"	d
GUI_ID_CHECK7	emwin/emWin_header/GUI.h	1736;"	d
GUI_ID_CHECK8	emwin/emWin_header/GUI.h	1737;"	d
GUI_ID_CHECK9	emwin/emWin_header/GUI.h	1738;"	d
GUI_ID_CLOSE	emwin/emWin_header/GUI.h	1699;"	d
GUI_ID_DROPDOWN0	emwin/emWin_header/GUI.h	1787;"	d
GUI_ID_DROPDOWN1	emwin/emWin_header/GUI.h	1788;"	d
GUI_ID_DROPDOWN2	emwin/emWin_header/GUI.h	1789;"	d
GUI_ID_DROPDOWN3	emwin/emWin_header/GUI.h	1790;"	d
GUI_ID_EDIT0	emwin/emWin_header/GUI.h	1707;"	d
GUI_ID_EDIT1	emwin/emWin_header/GUI.h	1708;"	d
GUI_ID_EDIT2	emwin/emWin_header/GUI.h	1709;"	d
GUI_ID_EDIT3	emwin/emWin_header/GUI.h	1710;"	d
GUI_ID_EDIT4	emwin/emWin_header/GUI.h	1711;"	d
GUI_ID_EDIT5	emwin/emWin_header/GUI.h	1712;"	d
GUI_ID_EDIT6	emwin/emWin_header/GUI.h	1713;"	d
GUI_ID_EDIT7	emwin/emWin_header/GUI.h	1714;"	d
GUI_ID_EDIT8	emwin/emWin_header/GUI.h	1715;"	d
GUI_ID_EDIT9	emwin/emWin_header/GUI.h	1716;"	d
GUI_ID_GRAPH0	emwin/emWin_header/GUI.h	1807;"	d
GUI_ID_GRAPH1	emwin/emWin_header/GUI.h	1808;"	d
GUI_ID_GRAPH2	emwin/emWin_header/GUI.h	1809;"	d
GUI_ID_GRAPH3	emwin/emWin_header/GUI.h	1810;"	d
GUI_ID_HELP	emwin/emWin_header/GUI.h	1700;"	d
GUI_ID_HSCROLL	emwin/emWin_header/GUI.h	1705;"	d
GUI_ID_ICONVIEW0	emwin/emWin_header/GUI.h	1822;"	d
GUI_ID_ICONVIEW1	emwin/emWin_header/GUI.h	1823;"	d
GUI_ID_ICONVIEW2	emwin/emWin_header/GUI.h	1824;"	d
GUI_ID_ICONVIEW3	emwin/emWin_header/GUI.h	1825;"	d
GUI_ID_IMAGE0	emwin/emWin_header/GUI.h	1832;"	d
GUI_ID_IMAGE1	emwin/emWin_header/GUI.h	1833;"	d
GUI_ID_IMAGE2	emwin/emWin_header/GUI.h	1834;"	d
GUI_ID_IMAGE3	emwin/emWin_header/GUI.h	1835;"	d
GUI_ID_IMAGE4	emwin/emWin_header/GUI.h	1836;"	d
GUI_ID_IMAGE5	emwin/emWin_header/GUI.h	1837;"	d
GUI_ID_IMAGE6	emwin/emWin_header/GUI.h	1838;"	d
GUI_ID_IMAGE7	emwin/emWin_header/GUI.h	1839;"	d
GUI_ID_IMAGE8	emwin/emWin_header/GUI.h	1840;"	d
GUI_ID_IMAGE9	emwin/emWin_header/GUI.h	1841;"	d
GUI_ID_KNOB0	emwin/emWin_header/GUI.h	1856;"	d
GUI_ID_KNOB1	emwin/emWin_header/GUI.h	1857;"	d
GUI_ID_KNOB2	emwin/emWin_header/GUI.h	1858;"	d
GUI_ID_KNOB3	emwin/emWin_header/GUI.h	1859;"	d
GUI_ID_KNOB4	emwin/emWin_header/GUI.h	1860;"	d
GUI_ID_KNOB5	emwin/emWin_header/GUI.h	1861;"	d
GUI_ID_KNOB6	emwin/emWin_header/GUI.h	1862;"	d
GUI_ID_KNOB7	emwin/emWin_header/GUI.h	1863;"	d
GUI_ID_KNOB8	emwin/emWin_header/GUI.h	1864;"	d
GUI_ID_KNOB9	emwin/emWin_header/GUI.h	1865;"	d
GUI_ID_LISTBOX0	emwin/emWin_header/GUI.h	1718;"	d
GUI_ID_LISTBOX1	emwin/emWin_header/GUI.h	1719;"	d
GUI_ID_LISTBOX2	emwin/emWin_header/GUI.h	1720;"	d
GUI_ID_LISTBOX3	emwin/emWin_header/GUI.h	1721;"	d
GUI_ID_LISTBOX4	emwin/emWin_header/GUI.h	1722;"	d
GUI_ID_LISTBOX5	emwin/emWin_header/GUI.h	1723;"	d
GUI_ID_LISTBOX6	emwin/emWin_header/GUI.h	1724;"	d
GUI_ID_LISTBOX7	emwin/emWin_header/GUI.h	1725;"	d
GUI_ID_LISTBOX8	emwin/emWin_header/GUI.h	1726;"	d
GUI_ID_LISTBOX9	emwin/emWin_header/GUI.h	1727;"	d
GUI_ID_LISTVIEW0	emwin/emWin_header/GUI.h	1797;"	d
GUI_ID_LISTVIEW1	emwin/emWin_header/GUI.h	1798;"	d
GUI_ID_LISTVIEW2	emwin/emWin_header/GUI.h	1799;"	d
GUI_ID_LISTVIEW3	emwin/emWin_header/GUI.h	1800;"	d
GUI_ID_LISTWHEEL0	emwin/emWin_header/GUI.h	1827;"	d
GUI_ID_LISTWHEEL1	emwin/emWin_header/GUI.h	1828;"	d
GUI_ID_LISTWHEEL2	emwin/emWin_header/GUI.h	1829;"	d
GUI_ID_LISTWHEEL3	emwin/emWin_header/GUI.h	1830;"	d
GUI_ID_MAXIMIZE	emwin/emWin_header/GUI.h	1701;"	d
GUI_ID_MINIMIZE	emwin/emWin_header/GUI.h	1702;"	d
GUI_ID_MULTIEDIT0	emwin/emWin_header/GUI.h	1792;"	d
GUI_ID_MULTIEDIT1	emwin/emWin_header/GUI.h	1793;"	d
GUI_ID_MULTIEDIT2	emwin/emWin_header/GUI.h	1794;"	d
GUI_ID_MULTIEDIT3	emwin/emWin_header/GUI.h	1795;"	d
GUI_ID_MULTIPAGE0	emwin/emWin_header/GUI.h	1812;"	d
GUI_ID_MULTIPAGE1	emwin/emWin_header/GUI.h	1813;"	d
GUI_ID_MULTIPAGE2	emwin/emWin_header/GUI.h	1814;"	d
GUI_ID_MULTIPAGE3	emwin/emWin_header/GUI.h	1815;"	d
GUI_ID_NO	emwin/emWin_header/GUI.h	1698;"	d
GUI_ID_OK	emwin/emWin_header/GUI.h	1695;"	d
GUI_ID_PROGBAR0	emwin/emWin_header/GUI.h	1802;"	d
GUI_ID_PROGBAR1	emwin/emWin_header/GUI.h	1803;"	d
GUI_ID_PROGBAR2	emwin/emWin_header/GUI.h	1804;"	d
GUI_ID_PROGBAR3	emwin/emWin_header/GUI.h	1805;"	d
GUI_ID_RADIO0	emwin/emWin_header/GUI.h	1756;"	d
GUI_ID_RADIO1	emwin/emWin_header/GUI.h	1757;"	d
GUI_ID_RADIO2	emwin/emWin_header/GUI.h	1758;"	d
GUI_ID_RADIO3	emwin/emWin_header/GUI.h	1759;"	d
GUI_ID_RADIO4	emwin/emWin_header/GUI.h	1760;"	d
GUI_ID_RADIO5	emwin/emWin_header/GUI.h	1761;"	d
GUI_ID_RADIO6	emwin/emWin_header/GUI.h	1762;"	d
GUI_ID_RADIO7	emwin/emWin_header/GUI.h	1763;"	d
GUI_ID_SCROLLBAR0	emwin/emWin_header/GUI.h	1751;"	d
GUI_ID_SCROLLBAR1	emwin/emWin_header/GUI.h	1752;"	d
GUI_ID_SCROLLBAR2	emwin/emWin_header/GUI.h	1753;"	d
GUI_ID_SCROLLBAR3	emwin/emWin_header/GUI.h	1754;"	d
GUI_ID_SLIDER0	emwin/emWin_header/GUI.h	1740;"	d
GUI_ID_SLIDER1	emwin/emWin_header/GUI.h	1741;"	d
GUI_ID_SLIDER2	emwin/emWin_header/GUI.h	1742;"	d
GUI_ID_SLIDER3	emwin/emWin_header/GUI.h	1743;"	d
GUI_ID_SLIDER4	emwin/emWin_header/GUI.h	1744;"	d
GUI_ID_SLIDER5	emwin/emWin_header/GUI.h	1745;"	d
GUI_ID_SLIDER6	emwin/emWin_header/GUI.h	1746;"	d
GUI_ID_SLIDER7	emwin/emWin_header/GUI.h	1747;"	d
GUI_ID_SLIDER8	emwin/emWin_header/GUI.h	1748;"	d
GUI_ID_SLIDER9	emwin/emWin_header/GUI.h	1749;"	d
GUI_ID_SPINBOX0	emwin/emWin_header/GUI.h	1843;"	d
GUI_ID_SPINBOX1	emwin/emWin_header/GUI.h	1844;"	d
GUI_ID_SPINBOX2	emwin/emWin_header/GUI.h	1845;"	d
GUI_ID_SPINBOX3	emwin/emWin_header/GUI.h	1846;"	d
GUI_ID_SPINBOX4	emwin/emWin_header/GUI.h	1847;"	d
GUI_ID_SPINBOX5	emwin/emWin_header/GUI.h	1848;"	d
GUI_ID_SPINBOX6	emwin/emWin_header/GUI.h	1849;"	d
GUI_ID_SPINBOX7	emwin/emWin_header/GUI.h	1850;"	d
GUI_ID_SPINBOX8	emwin/emWin_header/GUI.h	1851;"	d
GUI_ID_SPINBOX9	emwin/emWin_header/GUI.h	1852;"	d
GUI_ID_SWIPELIST0	emwin/emWin_header/GUI.h	1867;"	d
GUI_ID_SWIPELIST1	emwin/emWin_header/GUI.h	1868;"	d
GUI_ID_SWIPELIST2	emwin/emWin_header/GUI.h	1869;"	d
GUI_ID_TEXT0	emwin/emWin_header/GUI.h	1765;"	d
GUI_ID_TEXT1	emwin/emWin_header/GUI.h	1766;"	d
GUI_ID_TEXT2	emwin/emWin_header/GUI.h	1767;"	d
GUI_ID_TEXT3	emwin/emWin_header/GUI.h	1768;"	d
GUI_ID_TEXT4	emwin/emWin_header/GUI.h	1769;"	d
GUI_ID_TEXT5	emwin/emWin_header/GUI.h	1770;"	d
GUI_ID_TEXT6	emwin/emWin_header/GUI.h	1771;"	d
GUI_ID_TEXT7	emwin/emWin_header/GUI.h	1772;"	d
GUI_ID_TEXT8	emwin/emWin_header/GUI.h	1773;"	d
GUI_ID_TEXT9	emwin/emWin_header/GUI.h	1774;"	d
GUI_ID_TREEVIEW0	emwin/emWin_header/GUI.h	1817;"	d
GUI_ID_TREEVIEW1	emwin/emWin_header/GUI.h	1818;"	d
GUI_ID_TREEVIEW2	emwin/emWin_header/GUI.h	1819;"	d
GUI_ID_TREEVIEW3	emwin/emWin_header/GUI.h	1820;"	d
GUI_ID_USER	emwin/emWin_header/GUI.h	1871;"	d
GUI_ID_VSCROLL	emwin/emWin_header/GUI.h	1704;"	d
GUI_ID_YES	emwin/emWin_header/GUI.h	1697;"	d
GUI_INVALID_COLOR	emwin/emWin_header/GUI.h	1913;"	d
GUI_ISINFONT	emwin/emWin_header/GUI_Type.h	/^typedef char GUI_ISINFONT    (const GUI_FONT * pFont, U16 c);$/;"	t
GUI_JPEG_DCONTEXT	emwin/emWin_header/GUI_JPEG_Private.h	/^struct GUI_JPEG_DCONTEXT {$/;"	s
GUI_JPEG_DCONTEXT	emwin/emWin_header/GUI_JPEG_Private.h	/^typedef struct GUI_JPEG_DCONTEXT GUI_JPEG_DCONTEXT;$/;"	t	typeref:struct:GUI_JPEG_DCONTEXT
GUI_JPEG_INFO	emwin/emWin_header/GUI.h	/^} GUI_JPEG_INFO;$/;"	t	typeref:struct:__anon387
GUI_JPEG_PARAM	emwin/emWin_header/GUI_JPEG_Private.h	/^} GUI_JPEG_PARAM;$/;"	t	typeref:struct:__anon361
GUI_JPEG_PRIVATE_H	emwin/emWin_header/GUI_JPEG_Private.h	58;"	d
GUI_KEY_BACKSPACE	emwin/emWin_header/GUI.h	1664;"	d
GUI_KEY_BACKTAB	emwin/emWin_header/GUI.h	1666;"	d
GUI_KEY_CONTROL	emwin/emWin_header/GUI.h	1675;"	d
GUI_KEY_DELETE	emwin/emWin_header/GUI.h	1678;"	d
GUI_KEY_DOWN	emwin/emWin_header/GUI.h	1671;"	d
GUI_KEY_END	emwin/emWin_header/GUI.h	1673;"	d
GUI_KEY_ENTER	emwin/emWin_header/GUI.h	1667;"	d
GUI_KEY_ESCAPE	emwin/emWin_header/GUI.h	1676;"	d
GUI_KEY_F1	emwin/emWin_header/GUI.h	1683;"	d
GUI_KEY_F2	emwin/emWin_header/GUI.h	1684;"	d
GUI_KEY_HOME	emwin/emWin_header/GUI.h	1672;"	d
GUI_KEY_INSERT	emwin/emWin_header/GUI.h	1677;"	d
GUI_KEY_LEFT	emwin/emWin_header/GUI.h	1668;"	d
GUI_KEY_PGDOWN	emwin/emWin_header/GUI.h	1681;"	d
GUI_KEY_PGUP	emwin/emWin_header/GUI.h	1680;"	d
GUI_KEY_RIGHT	emwin/emWin_header/GUI.h	1670;"	d
GUI_KEY_SHIFT	emwin/emWin_header/GUI.h	1674;"	d
GUI_KEY_SPACE	emwin/emWin_header/GUI.h	1679;"	d
GUI_KEY_STATE	emwin/emWin_header/GUI_Type.h	/^} GUI_KEY_STATE;$/;"	t	typeref:struct:__anon248
GUI_KEY_TAB	emwin/emWin_header/GUI.h	1665;"	d
GUI_KEY_UP	emwin/emWin_header/GUI.h	1669;"	d
GUI_LBUTTON	emwin/emWin_header/GUI.h	1877;"	d
GUI_LIGHTBLUE	emwin/emWin_header/GUI.h	1935;"	d
GUI_LIGHTCYAN	emwin/emWin_header/GUI.h	1938;"	d
GUI_LIGHTGRAY	emwin/emWin_header/GUI.h	1948;"	d
GUI_LIGHTGREEN	emwin/emWin_header/GUI.h	1936;"	d
GUI_LIGHTMAGENTA	emwin/emWin_header/GUI.h	1939;"	d
GUI_LIGHTRED	emwin/emWin_header/GUI.h	1937;"	d
GUI_LIGHTYELLOW	emwin/emWin_header/GUI.h	1940;"	d
GUI_LOCK	emwin/emWin_header/GUI.h	84;"	d
GUI_LOCK	emwin/emWin_header/GUI.h	96;"	d
GUI_LOCK_H	emwin/emWin_header/GUI_Debug.h	70;"	d
GUI_LOGPALETTE	emwin/emWin_header/GUI_Type.h	/^typedef LCD_LOGPALETTE  GUI_LOGPALETTE;$/;"	t
GUI_LS_DASH	emwin/emWin_header/GUI.h	1896;"	d
GUI_LS_DASHDOT	emwin/emWin_header/GUI.h	1898;"	d
GUI_LS_DASHDOTDOT	emwin/emWin_header/GUI.h	1899;"	d
GUI_LS_DOT	emwin/emWin_header/GUI.h	1897;"	d
GUI_LS_SOLID	emwin/emWin_header/GUI.h	1895;"	d
GUI_MAGENTA	emwin/emWin_header/GUI.h	1933;"	d
GUI_MAKE_ALPHA	emwin/emWin_header/GUI.h	1092;"	d
GUI_MAKE_COLOR	emwin/emWin_header/GUI.h	1916;"	d
GUI_MAKE_COLOR	emwin/emWin_header/GUI.h	1919;"	d
GUI_MAKE_TRANS	emwin/emWin_header/GUI.h	1917;"	d
GUI_MAKE_TRANS	emwin/emWin_header/GUI.h	1920;"	d
GUI_MAX	emwin/emWin_header/GUI.h	74;"	d
GUI_MAX_XBF_BYTES	emwin/emWin_header/GUI_ConfDefaults.h	177;"	d
GUI_MBUTTON	emwin/emWin_header/GUI.h	1879;"	d
GUI_MB_OK	emwin/emWin_header/GUI.h	1354;"	d
GUI_MB_WARNING	emwin/emWin_header/GUI.h	1355;"	d
GUI_MEASDEV_Handle	emwin/emWin_header/GUI.h	/^typedef GUI_HMEM GUI_MEASDEV_Handle;$/;"	t
GUI_MEMCPY	emwin/emWin_header/GUI_ConfDefaults.h	185;"	d
GUI_MEMDEV	emwin/emWin_header/GUI_Private.h	/^} GUI_MEMDEV;$/;"	t	typeref:struct:__anon295
GUI_MEMDEV_APILIST_1	emwin/emWin_header/LCD.h	330;"	d
GUI_MEMDEV_APILIST_16	emwin/emWin_header/LCD.h	332;"	d
GUI_MEMDEV_APILIST_32	emwin/emWin_header/LCD.h	333;"	d
GUI_MEMDEV_APILIST_8	emwin/emWin_header/LCD.h	331;"	d
GUI_MEMDEV_CLIP_AT_PARENT	emwin/emWin_header/GUI_ConfDefaults.h	195;"	d
GUI_MEMDEV_EDGE_BOTTOM	emwin/emWin_header/WM.h	531;"	d
GUI_MEMDEV_EDGE_LEFT	emwin/emWin_header/WM.h	528;"	d
GUI_MEMDEV_EDGE_RIGHT	emwin/emWin_header/WM.h	529;"	d
GUI_MEMDEV_EDGE_TOP	emwin/emWin_header/WM.h	530;"	d
GUI_MEMDEV_FadeDevices	emwin/emWin_header/GUI.h	2500;"	d
GUI_MEMDEV_HASTRANS	emwin/emWin_header/GUI.h	976;"	d
GUI_MEMDEV_Handle	emwin/emWin_header/GUI.h	/^typedef GUI_HMEM GUI_MEMDEV_Handle;$/;"	t
GUI_MEMDEV_LOCK_H	emwin/emWin_header/GUI_Private.h	198;"	d
GUI_MEMDEV_NOTRANS	emwin/emWin_header/GUI.h	977;"	d
GUI_MEMDEV_SUPPORT_CUSTOMDRAW	emwin/emWin_header/GUI_ConfDefaults.h	190;"	d
GUI_MEMORY_ADDR	emwin/emwin_support.c	19;"	d	file:
GUI_MEMSET	emwin/emWin_header/GUI_ConfDefaults.h	181;"	d
GUI_MESSAGEBOX_CF_MODAL	emwin/emWin_header/GUI.h	1352;"	d
GUI_MESSAGEBOX_CF_MOVEABLE	emwin/emWin_header/GUI.h	1351;"	d
GUI_MIN	emwin/emWin_header/GUI.h	73;"	d
GUI_MIRROR_X	emwin/emWin_header/GUI.h	2208;"	d
GUI_MIRROR_Y	emwin/emWin_header/GUI.h	2209;"	d
GUI_MOVIE_FUNC	emwin/emWin_header/GUI.h	/^typedef void GUI_MOVIE_FUNC(GUI_MOVIE_HANDLE hMovie, int Notification, U32 CurrentFrame);$/;"	t
GUI_MOVIE_HANDLE	emwin/emWin_header/GUI.h	/^typedef GUI_HMEM GUI_MOVIE_HANDLE;$/;"	t
GUI_MOVIE_INFO	emwin/emWin_header/GUI.h	/^} GUI_MOVIE_INFO;$/;"	t	typeref:struct:__anon388
GUI_MOVIE_NOTIFICATION_DELETE	emwin/emWin_header/GUI.h	632;"	d
GUI_MOVIE_NOTIFICATION_POSTDRAW	emwin/emWin_header/GUI.h	629;"	d
GUI_MOVIE_NOTIFICATION_PREDRAW	emwin/emWin_header/GUI.h	628;"	d
GUI_MOVIE_NOTIFICATION_START	emwin/emWin_header/GUI.h	630;"	d
GUI_MOVIE_NOTIFICATION_STOP	emwin/emWin_header/GUI.h	631;"	d
GUI_MTOUCH_EVENT	emwin/emWin_header/GUI_Type.h	/^} GUI_MTOUCH_EVENT;$/;"	t	typeref:struct:__anon270
GUI_MTOUCH_FLAG_DOWN	emwin/emWin_header/GUI.h	1976;"	d
GUI_MTOUCH_FLAG_MOVE	emwin/emWin_header/GUI.h	1977;"	d
GUI_MTOUCH_FLAG_UP	emwin/emWin_header/GUI.h	1978;"	d
GUI_MTOUCH_INPUT	emwin/emWin_header/GUI_Type.h	/^} GUI_MTOUCH_INPUT;$/;"	t	typeref:struct:__anon269
GUI_MTOUCH_MAX_NUM_POINTS	emwin/emWin_header/GUI_Type.h	590;"	d
GUI_MTOUCH_STATE	emwin/emWin_header/GUI_Type.h	/^} GUI_MTOUCH_STATE;$/;"	t	typeref:struct:__anon271
GUI_MULTIBUF_API	emwin/emWin_header/GUI_Type.h	/^} GUI_MULTIBUF_API;$/;"	t	typeref:struct:__anon251
GUI_MULTIBUF_API_EX	emwin/emWin_header/GUI_Type.h	/^} GUI_MULTIBUF_API_EX;$/;"	t	typeref:struct:__anon252
GUI_NUMBYTES	emwin/emwin_support.h	26;"	d
GUI_NUM_LAYERS	emwin/emWin_Config/GUIConf.h	52;"	d
GUI_NUM_LAYERS	emwin/emWin_header/GUI_ConfDefaults.h	142;"	d
GUI_ORANGE	emwin/emWin_header/GUI.h	1953;"	d
GUI_ORIENTATION_API	emwin/emWin_header/GUI.h	/^} GUI_ORIENTATION_API;$/;"	t	typeref:struct:__anon398
GUI_ORIENTATION_C0	emwin/emWin_header/GUI.h	1238;"	d
GUI_ORIENTATION_C16	emwin/emWin_header/GUI.h	1240;"	d
GUI_ORIENTATION_C32	emwin/emWin_header/GUI.h	1241;"	d
GUI_ORIENTATION_C8	emwin/emWin_header/GUI.h	1239;"	d
GUI_OS	emwin/emWin_Config/GUIConf.h	58;"	d
GUI_OS	emwin/emWin_header/GUI_ConfDefaults.h	138;"	d
GUI_OrgX	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN I16 GUI_OrgX, GUI_OrgY;$/;"	v
GUI_OrgY	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN I16 GUI_OrgX, GUI_OrgY;$/;"	v
GUI_PID_STATE	emwin/emWin_header/GUI_Type.h	/^} GUI_PID_STATE;$/;"	t	typeref:struct:__anon247
GUI_PID_SetInitFunc	emwin/emWin_header/GUI.h	382;"	d
GUI_POINT	emwin/emWin_header/LCD.h	/^typedef struct { I16P x,y; } GUI_POINT;$/;"	t	typeref:struct:__anon403
GUI_PORT_API	emwin/emWin_header/GUI_Type.h	/^} GUI_PORT_API;$/;"	t	typeref:struct:__anon272
GUI_POS_AUTO	emwin/emWin_header/GUI_Private.h	227;"	d
GUI_PRIVATE_H	emwin/emWin_header/GUI_Private.h	46;"	d
GUI_PS_FLAT	emwin/emWin_header/GUI.h	1906;"	d
GUI_PS_ROUND	emwin/emWin_header/GUI.h	1905;"	d
GUI_PS_SQUARE	emwin/emWin_header/GUI.h	1907;"	d
GUI_QR_ECLEVEL_H	emwin/emWin_header/GUI.h	1158;"	d
GUI_QR_ECLEVEL_L	emwin/emWin_header/GUI.h	1155;"	d
GUI_QR_ECLEVEL_M	emwin/emWin_header/GUI.h	1156;"	d
GUI_QR_ECLEVEL_Q	emwin/emWin_header/GUI.h	1157;"	d
GUI_QR_INFO	emwin/emWin_header/GUI.h	/^} GUI_QR_INFO;$/;"	t	typeref:struct:__anon396
GUI_RBUTTON	emwin/emWin_header/GUI.h	1878;"	d
GUI_RECT	emwin/emWin_header/GUI_Type.h	/^typedef LCD_RECT        GUI_RECT;$/;"	t
GUI_RED	emwin/emWin_header/GUI.h	1931;"	d
GUI_REGISTER_EXIT	emwin/emWin_header/GUI_Type.h	155;"	d
GUI_REGISTER_HOOK	emwin/emWin_header/GUI_Type.h	/^struct GUI_REGISTER_HOOK {$/;"	s
GUI_REGISTER_HOOK	emwin/emWin_header/GUI_Type.h	/^typedef struct GUI_REGISTER_HOOK GUI_REGISTER_HOOK;$/;"	t	typeref:struct:GUI_REGISTER_HOOK
GUI_REGISTER_INIT	emwin/emWin_header/GUI_Type.h	154;"	d
GUI_ROTATE_0	emwin/emWin_header/LCD.h	723;"	d
GUI_ROTATE_180	emwin/emWin_header/LCD.h	722;"	d
GUI_ROTATE_CCW	emwin/emWin_header/LCD.h	720;"	d
GUI_ROTATE_CW	emwin/emWin_header/LCD.h	721;"	d
GUI_ROTATION	emwin/emWin_header/LCD.h	719;"	d
GUI_ROTATION_0	emwin/emWin_header/GUI.h	2212;"	d
GUI_ROTATION_180	emwin/emWin_header/GUI.h	2214;"	d
GUI_ROTATION_CCW	emwin/emWin_header/GUI.h	2215;"	d
GUI_ROTATION_CW	emwin/emWin_header/GUI.h	2213;"	d
GUI_SADDR	emwin/emWin_header/GUI_Private.h	78;"	d
GUI_SETORIENTATION_H	emwin/emWin_header/GUI_SetOrientation.h	46;"	d
GUI_SIF_CHARINFO	emwin/emWin_header/GUI_Type.h	/^} GUI_SIF_CHARINFO;$/;"	t	typeref:struct:__anon264
GUI_SIF_CHARINFO_EXT	emwin/emWin_header/GUI_Type.h	/^} GUI_SIF_CHARINFO_EXT;$/;"	t	typeref:struct:__anon265
GUI_SIF_CHAR_AREA	emwin/emWin_header/GUI_Type.h	/^} GUI_SIF_CHAR_AREA;$/;"	t	typeref:struct:__anon263
GUI_SIF_TYPE	emwin/emWin_header/GUI_Type.h	507;"	d
GUI_SIF_TYPE_PROP	emwin/emWin_header/GUI_Type.h	508;"	d
GUI_SIF_TYPE_PROP_AA2	emwin/emWin_header/GUI_Type.h	511;"	d
GUI_SIF_TYPE_PROP_AA2_EXT	emwin/emWin_header/GUI_Type.h	513;"	d
GUI_SIF_TYPE_PROP_AA4	emwin/emWin_header/GUI_Type.h	512;"	d
GUI_SIF_TYPE_PROP_AA4_EXT	emwin/emWin_header/GUI_Type.h	514;"	d
GUI_SIF_TYPE_PROP_EXT	emwin/emWin_header/GUI_Type.h	509;"	d
GUI_SIF_TYPE_PROP_FRM	emwin/emWin_header/GUI_Type.h	510;"	d
GUI_SIGNAL_EVENT_FUNC	emwin/emWin_header/GUI_Type.h	/^typedef void (* GUI_SIGNAL_EVENT_FUNC)    (void);$/;"	t
GUI_SI_FONT	emwin/emWin_header/GUI_Type.h	/^} GUI_SI_FONT;$/;"	t	typeref:struct:__anon262
GUI_SOFTLAYER_CONFIG	emwin/emWin_header/GUI.h	/^} GUI_SOFTLAYER_CONFIG;$/;"	t	typeref:struct:__anon386
GUI_SPRITE_CF_SHOW	emwin/emWin_header/GUI.h	722;"	d
GUI_SPRITE_CF_STAYONTOP	emwin/emWin_header/GUI.h	721;"	d
GUI_SPRITE_HIDE	emwin/emWin_header/GUI.h	725;"	d
GUI_SPRITE_OBJ	emwin/emWin_header/GUI_SPRITE_Private.h	/^} GUI_SPRITE_OBJ;$/;"	t	typeref:struct:__anon294
GUI_SPRITE_PRIVATE_H	emwin/emWin_header/GUI_SPRITE_Private.h	46;"	d
GUI_SPRITE_SHOW	emwin/emWin_header/GUI.h	724;"	d
GUI_STREAM_FORMAT_24	emwin/emWin_header/GUI_Private.h	463;"	d
GUI_STREAM_FORMAT_444_12	emwin/emWin_header/GUI_Private.h	465;"	d
GUI_STREAM_FORMAT_444_12_1	emwin/emWin_header/GUI_Private.h	467;"	d
GUI_STREAM_FORMAT_444_16	emwin/emWin_header/GUI_Private.h	469;"	d
GUI_STREAM_FORMAT_555	emwin/emWin_header/GUI_Private.h	457;"	d
GUI_STREAM_FORMAT_565	emwin/emWin_header/GUI_Private.h	455;"	d
GUI_STREAM_FORMAT_8888	emwin/emWin_header/GUI_Private.h	461;"	d
GUI_STREAM_FORMAT_A555	emwin/emWin_header/GUI_Private.h	471;"	d
GUI_STREAM_FORMAT_A565	emwin/emWin_header/GUI_Private.h	473;"	d
GUI_STREAM_FORMAT_AM555	emwin/emWin_header/GUI_Private.h	472;"	d
GUI_STREAM_FORMAT_AM565	emwin/emWin_header/GUI_Private.h	474;"	d
GUI_STREAM_FORMAT_INDEXED	emwin/emWin_header/GUI_Private.h	452;"	d
GUI_STREAM_FORMAT_M444_12	emwin/emWin_header/GUI_Private.h	466;"	d
GUI_STREAM_FORMAT_M444_12_1	emwin/emWin_header/GUI_Private.h	468;"	d
GUI_STREAM_FORMAT_M444_16	emwin/emWin_header/GUI_Private.h	470;"	d
GUI_STREAM_FORMAT_M555	emwin/emWin_header/GUI_Private.h	458;"	d
GUI_STREAM_FORMAT_M565	emwin/emWin_header/GUI_Private.h	456;"	d
GUI_STREAM_FORMAT_M8888I	emwin/emWin_header/GUI_Private.h	475;"	d
GUI_STREAM_FORMAT_RLE16	emwin/emWin_header/GUI_Private.h	459;"	d
GUI_STREAM_FORMAT_RLE32	emwin/emWin_header/GUI_Private.h	462;"	d
GUI_STREAM_FORMAT_RLE4	emwin/emWin_header/GUI_Private.h	453;"	d
GUI_STREAM_FORMAT_RLE8	emwin/emWin_header/GUI_Private.h	454;"	d
GUI_STREAM_FORMAT_RLEALPHA	emwin/emWin_header/GUI_Private.h	464;"	d
GUI_STREAM_FORMAT_RLEM16	emwin/emWin_header/GUI_Private.h	460;"	d
GUI_SUPPORT_CURSOR	emwin/emWin_header/GUI_ConfDefaults.h	146;"	d
GUI_SUPPORT_DEVICES	emwin/emWin_Config/GUIConf.h	79;"	d
GUI_SUPPORT_MEMDEV	emwin/emWin_Config/GUIConf.h	78;"	d
GUI_SUPPORT_MEMDEV	emwin/emWin_header/GUI_ConfDefaults.h	134;"	d
GUI_SUPPORT_MOUSE	emwin/emWin_Config/GUIConf.h	76;"	d
GUI_SUPPORT_MOUSE	emwin/emWin_header/GUI_ConfDefaults.h	130;"	d
GUI_SUPPORT_ROTATION	emwin/emWin_header/GUI_ConfDefaults.h	154;"	d
GUI_SUPPORT_TOUCH	emwin/emWin_Config/GUIConf.h	64;"	d
GUI_SUPPORT_TOUCH	emwin/emWin_header/GUI_ConfDefaults.h	126;"	d
GUI_SWAP_XY	emwin/emWin_header/GUI.h	2210;"	d
GUI_SaveContext	emwin/emWin_header/GUI.h	279;"	d
GUI_SaveContext	emwin/emWin_header/GUI.h	281;"	d
GUI_SelLayer	emwin/emWin_header/GUI.h	2499;"	d
GUI_TA_BASELINE	emwin/emWin_header/GUI.h	2194;"	d
GUI_TA_BOTTOM	emwin/emWin_header/GUI.h	2193;"	d
GUI_TA_CENTER	emwin/emWin_header/GUI.h	2187;"	d
GUI_TA_HCENTER	emwin/emWin_header/GUI.h	2188;"	d
GUI_TA_HORIZONTAL	emwin/emWin_header/GUI.h	2185;"	d
GUI_TA_LEFT	emwin/emWin_header/GUI.h	2184;"	d
GUI_TA_RIGHT	emwin/emWin_header/GUI.h	2186;"	d
GUI_TA_TOP	emwin/emWin_header/GUI.h	2191;"	d
GUI_TA_VCENTER	emwin/emWin_header/GUI.h	2195;"	d
GUI_TA_VERTICAL	emwin/emWin_header/GUI.h	2192;"	d
GUI_TEXTMODE_NORMAL	emwin/emWin_header/GUI.h	2174;"	d
GUI_TEXTMODE_REV	emwin/emWin_header/GUI.h	2177;"	d
GUI_TEXTMODE_TRANS	emwin/emWin_header/GUI.h	2176;"	d
GUI_TEXTMODE_XOR	emwin/emWin_header/GUI.h	2175;"	d
GUI_TIMER_CALLBACK	emwin/emWin_header/GUI.h	/^typedef void GUI_TIMER_CALLBACK(\/*const*\/ GUI_TIMER_MESSAGE* pTM);$/;"	t
GUI_TIMER_CF_CURSOR	emwin/emWin_header/GUI.h	1362;"	d
GUI_TIMER_CF_WINDOW	emwin/emWin_header/GUI.h	1361;"	d
GUI_TIMER_HANDLE	emwin/emWin_header/GUI.h	/^typedef GUI_HMEM GUI_TIMER_HANDLE;$/;"	t
GUI_TIMER_MESSAGE	emwin/emWin_header/GUI.h	/^} GUI_TIMER_MESSAGE;$/;"	t	typeref:struct:__anon399
GUI_TIMER_TIME	emwin/emWin_header/GUI_ConfDefaults.h	168;"	d
GUI_TIME_PER_FRAME	emwin/emWin_header/GUI_Private.h	225;"	d
GUI_TM_NORMAL	emwin/emWin_header/GUI.h	2178;"	d
GUI_TM_REV	emwin/emWin_header/GUI.h	2181;"	d
GUI_TM_TRANS	emwin/emWin_header/GUI.h	2180;"	d
GUI_TM_XOR	emwin/emWin_header/GUI.h	2179;"	d
GUI_TRANSMODE_CHROMA	emwin/emWin_header/LCD_SIM.h	59;"	d
GUI_TRANSMODE_PIXELALPHA	emwin/emWin_header/LCD_SIM.h	58;"	d
GUI_TRANSMODE_ZERO	emwin/emWin_header/LCD_SIM.h	60;"	d
GUI_TRANSPARENT	emwin/emWin_header/GUI.h	1954;"	d
GUI_TRANS_BYTE	emwin/emWin_header/GUI.h	1924;"	d
GUI_TRANS_BYTE	emwin/emWin_header/GUI.h	1926;"	d
GUI_TS_NORMAL	emwin/emWin_header/GUI.h	1886;"	d
GUI_TS_OVERLINE	emwin/emWin_header/GUI.h	1889;"	d
GUI_TS_STRIKETHRU	emwin/emWin_header/GUI.h	1888;"	d
GUI_TS_UNDERLINE	emwin/emWin_header/GUI.h	1887;"	d
GUI_TTF_CS	emwin/emWin_header/GUI_Type.h	/^} GUI_TTF_CS;$/;"	t	typeref:struct:__anon268
GUI_TTF_DATA	emwin/emWin_header/GUI_Type.h	/^} GUI_TTF_DATA;$/;"	t	typeref:struct:__anon267
GUI_UC_ENC_APILIST	emwin/emWin_header/GUI_Type.h	/^} GUI_UC_ENC_APILIST;$/;"	t	typeref:struct:__anon259
GUI_UC__GetCharCode	emwin/emWin_header/GUI_Private.h	306;"	d
GUI_UC__GetCharSize	emwin/emWin_header/GUI_Private.h	305;"	d
GUI_UNI_PTR	emwin/emWin_header/GUI_ConfDefaults.h	102;"	d
GUI_UNLOCK	emwin/emWin_header/GUI.h	85;"	d
GUI_UNLOCK	emwin/emWin_header/GUI.h	97;"	d
GUI_UNLOCK_H	emwin/emWin_header/GUI_Debug.h	71;"	d
GUI_USAGE	emwin/emWin_header/GUI_Private.h	/^typedef struct GUI_Usage GUI_USAGE;$/;"	t	typeref:struct:GUI_Usage
GUI_USAGE_AddHLine	emwin/emWin_header/GUI_Private.h	162;"	d
GUI_USAGE_AddPixel	emwin/emWin_header/GUI_Private.h	161;"	d
GUI_USAGE_Clear	emwin/emWin_header/GUI_Private.h	163;"	d
GUI_USAGE_Delete	emwin/emWin_header/GUI_Private.h	164;"	d
GUI_USAGE_GetNextDirty	emwin/emWin_header/GUI_Private.h	165;"	d
GUI_USAGE_Handle	emwin/emWin_header/GUI_Private.h	/^typedef GUI_HMEM GUI_USAGE_Handle;$/;"	t
GUI_USAGE_LOCK_H	emwin/emWin_header/GUI_Private.h	154;"	d
GUI_USAGE_h	emwin/emWin_header/GUI_Private.h	146;"	d
GUI_USE_ARGB	emwin/emWin_header/GUI_ConfDefaults.h	94;"	d
GUI_USE_BIDI2	emwin/emWin_header/GUI_ConfDefaults.h	59;"	d
GUI_USE_MEMDEV_1BPP_FOR_SCREEN	emwin/emWin_header/GUI_ConfDefaults.h	114;"	d
GUI_USE_MIXCOLORS	emwin/emWin_header/GUI_ConfDefaults.h	55;"	d
GUI_USE_PARA	emwin/emWin_header/GUI_ConfDefaults.h	160;"	d
GUI_USE_PARA	emwin/emWin_header/GUI_ConfDefaults.h	162;"	d
GUI_Usage	emwin/emWin_header/GUI_Private.h	/^struct GUI_Usage {$/;"	s
GUI_VERSION	emwin/emWin_header/GUI_Version.h	48;"	d
GUI_VERSION_H	emwin/emWin_header/GUI_Version.h	46;"	d
GUI_VNC_AUTHENTICATION	emwin/emWin_header/GUI_VNC.h	/^} GUI_VNC_AUTHENTICATION;$/;"	t	typeref:struct:__anon345
GUI_VNC_CONTEXT	emwin/emWin_header/GUI_VNC.h	/^typedef struct GUI_VNC_CONTEXT {$/;"	s
GUI_VNC_CONTEXT	emwin/emWin_header/GUI_VNC.h	/^} GUI_VNC_CONTEXT;$/;"	t	typeref:struct:GUI_VNC_CONTEXT
GUI_VNC_ERROR_MISC	emwin/emWin_header/GUI_VNC.h	66;"	d
GUI_VNC_ERROR_WRONGFORMAT	emwin/emWin_header/GUI_VNC.h	67;"	d
GUI_VNC_H	emwin/emWin_header/GUI_VNC.h	50;"	d
GUI_VNC_NO_ERROR	emwin/emWin_header/GUI_VNC.h	65;"	d
GUI_VNC_SUPPORT_FILETRANSFER	emwin/emWin_header/GUI_VNC.h	75;"	d
GUI_WAIT_EVENT_FUNC	emwin/emWin_header/GUI_Type.h	/^typedef void (* GUI_WAIT_EVENT_FUNC)      (void);$/;"	t
GUI_WAIT_EVENT_TIMED_FUNC	emwin/emWin_header/GUI_Type.h	/^typedef void (* GUI_WAIT_EVENT_TIMED_FUNC)(int Period);$/;"	t
GUI_WHITE	emwin/emWin_header/GUI.h	1947;"	d
GUI_WIDGET_CREATE_FUNC	emwin/emWin_header/DIALOG_Intern.h	/^typedef WM_HWIN GUI_WIDGET_CREATE_FUNC        (const GUI_WIDGET_CREATE_INFO * pCreate, WM_HWIN hWin, int x0, int y0, WM_CALLBACK * cb);$/;"	t
GUI_WIDGET_CREATE_INFO	emwin/emWin_header/DIALOG_Intern.h	/^typedef struct  GUI_WIDGET_CREATE_INFO_struct GUI_WIDGET_CREATE_INFO;$/;"	t	typeref:struct:GUI_WIDGET_CREATE_INFO_struct
GUI_WIDGET_CREATE_INFO_struct	emwin/emWin_header/DIALOG_Intern.h	/^struct GUI_WIDGET_CREATE_INFO_struct {$/;"	s
GUI_WINSUPPORT	emwin/emWin_Config/GUIConf.h	77;"	d
GUI_WRAPMODE	emwin/emWin_header/GUI.h	/^typedef enum { GUI_WRAPMODE_NONE, GUI_WRAPMODE_WORD, GUI_WRAPMODE_CHAR } GUI_WRAPMODE;$/;"	t	typeref:enum:__anon391
GUI_WRAPMODE_CHAR	emwin/emWin_header/GUI.h	/^typedef enum { GUI_WRAPMODE_NONE, GUI_WRAPMODE_WORD, GUI_WRAPMODE_CHAR } GUI_WRAPMODE;$/;"	e	enum:__anon391
GUI_WRAPMODE_NONE	emwin/emWin_header/GUI.h	/^typedef enum { GUI_WRAPMODE_NONE, GUI_WRAPMODE_WORD, GUI_WRAPMODE_CHAR } GUI_WRAPMODE;$/;"	e	enum:__anon391
GUI_WRAPMODE_WORD	emwin/emWin_header/GUI.h	/^typedef enum { GUI_WRAPMODE_NONE, GUI_WRAPMODE_WORD, GUI_WRAPMODE_CHAR } GUI_WRAPMODE;$/;"	e	enum:__anon391
GUI_XBF_DATA	emwin/emWin_header/GUI_Type.h	/^} GUI_XBF_DATA;$/;"	t	typeref:struct:__anon266
GUI_XBF_GET_DATA_FUNC	emwin/emWin_header/GUI_Type.h	/^typedef int GUI_XBF_GET_DATA_FUNC(U32 Off, U16 NumBytes, void * pVoid, void * pBuffer);$/;"	t
GUI_XBF_TYPE	emwin/emWin_header/GUI_Type.h	538;"	d
GUI_XBF_TYPE_PROP	emwin/emWin_header/GUI_Type.h	539;"	d
GUI_XBF_TYPE_PROP_AA2_EXT	emwin/emWin_header/GUI_Type.h	542;"	d
GUI_XBF_TYPE_PROP_AA4_EXT	emwin/emWin_header/GUI_Type.h	543;"	d
GUI_XBF_TYPE_PROP_EXT	emwin/emWin_header/GUI_Type.h	540;"	d
GUI_XBF_TYPE_PROP_FRM	emwin/emWin_header/GUI_Type.h	541;"	d
GUI_XMAX	emwin/emWin_header/GUI.h	2224;"	d
GUI_XMIN	emwin/emWin_header/GUI.h	2223;"	d
GUI_X_Config	emwin/emwin_support.c	/^void GUI_X_Config(void)$/;"	f
GUI_X_Delay	emwin/emwin_support.c	/^void GUI_X_Delay(int Period)$/;"	f
GUI_X_ExecIdle	emwin/emwin_support.c	/^void GUI_X_ExecIdle(void)$/;"	f
GUI_X_GetTaskId	emwin/emwin_support.c	/^U32 GUI_X_GetTaskId(void)$/;"	f
GUI_X_GetTime	emwin/emwin_support.c	/^GUI_TIMER_TIME GUI_X_GetTime(void)$/;"	f
GUI_X_Init	emwin/emwin_support.c	/^void GUI_X_Init(void)$/;"	f
GUI_X_InitOS	emwin/emwin_support.c	/^void GUI_X_InitOS(void)$/;"	f
GUI_X_Lock	emwin/emwin_support.c	/^void GUI_X_Lock(void)$/;"	f
GUI_X_Unlock	emwin/emwin_support.c	/^void GUI_X_Unlock(void)$/;"	f
GUI_YELLOW	emwin/emWin_header/GUI.h	1934;"	d
GUI_YMAX	emwin/emWin_header/GUI.h	2226;"	d
GUI_YMIN	emwin/emWin_header/GUI.h	2225;"	d
GUI_ZEROFILL	emwin/emWin_header/GUI.h	75;"	d
GUI_ZEROINIT	emwin/emWin_header/GUI_Private.h	246;"	d
GUI__BIDI_GetBaseDir	emwin/emWin_header/GUI_Private.h	367;"	d
GUI__BIDI_GetBaseDir	emwin/emWin_header/GUI_Private.h	384;"	d
GUI__BIDI_GetCharDir	emwin/emWin_header/GUI_Private.h	361;"	d
GUI__BIDI_GetCharWrap	emwin/emWin_header/GUI_Private.h	365;"	d
GUI__BIDI_GetCursorCharacter	emwin/emWin_header/GUI_Private.h	363;"	d
GUI__BIDI_GetCursorPosChar	emwin/emWin_header/GUI_Private.h	359;"	d
GUI__BIDI_GetCursorPosX	emwin/emWin_header/GUI_Private.h	358;"	d
GUI__BIDI_GetLogChar	emwin/emWin_header/GUI_Private.h	360;"	d
GUI__BIDI_GetWordWrap	emwin/emWin_header/GUI_Private.h	364;"	d
GUI__BIDI_IsNSM	emwin/emWin_header/GUI_Private.h	362;"	d
GUI__BIDI_Log2Vis	emwin/emWin_header/GUI_Private.h	357;"	d
GUI__BIDI_SetBaseDir	emwin/emWin_header/GUI_Private.h	366;"	d
GUI__BIDI_SetBaseDir	emwin/emWin_header/GUI_Private.h	383;"	d
GUI__BufferSize	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           int GUI__BufferSize; \/\/ Required buffer size in pixels for alpha blending and\/or antialiasing$/;"	v
GUI__IsInitialized	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           U8  GUI__IsInitialized;$/;"	v
GUI__LayerMask	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           U32 GUI__LayerMask;$/;"	v
GUI__MEMCPY	emwin/emWin_header/GUIDRV_Lin_Private.h	91;"	d
GUI__MEMCPY	emwin/emWin_header/GUIDRV_Lin_Private.h	92;"	d
GUI__MEMCPY	emwin/emWin_header/GUI_Private.h	531;"	d
GUI__MEMSET	emwin/emWin_header/GUIDRV_Lin_Private.h	93;"	d
GUI__MEMSET	emwin/emWin_header/GUIDRV_Lin_Private.h	94;"	d
GUI__MEMSET	emwin/emWin_header/GUI_Private.h	530;"	d
GUI__NumLayersInUse	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           U8  GUI__NumLayersInUse;$/;"	v
GUI__PreserveTrans	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           U8  GUI__PreserveTrans;$/;"	v
GUI__aNumBuffers	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           I8  GUI__aNumBuffers[GUI_NUM_LAYERS]; \/\/ Number of buffers used per layer$/;"	v
GUI_pLCD_APIList	emwin/emWin_header/GUI_Private.h	/^  GUI_EXTERN const tLCD_APIList * GUI_pLCD_APIList; \/* Used for rotating text *\/$/;"	v
GUI_pUC_API	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN const GUI_UC_ENC_APILIST * GUI_pUC_API; \/* Unicode encoding API *\/$/;"	v
GUI_pfDispCharLine	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN   void (* GUI_pfDispCharLine)(int x0);$/;"	v
GUI_pfDispCharStyle	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN   void (* GUI_pfDispCharStyle)(U16 Char);$/;"	v
GUI_pfExecAnimations	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN   void (* GUI_pfExecAnimations)(void);$/;"	v
GUI_pfHookMTOUCH	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN void (* GUI_pfHookMTOUCH)(const GUI_MTOUCH_STATE * pState);$/;"	v
GUI_pfSoftlayerGetPixel	emwin/emWin_header/GUI_Private.h	/^  GUI_EXTERN void (* GUI_pfSoftlayerGetPixel)(int x, int y, void * p);$/;"	v
GUI_pfTimerExec	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           GUI_tfTimer    * GUI_pfTimerExec;$/;"	v
GUI_pfUpdateSoftLayer	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN   int  (* GUI_pfUpdateSoftLayer)(void);$/;"	v
GUI_tFree	emwin/emWin_header/GUI_Type.h	/^typedef void   (* GUI_tFree)  (void *);$/;"	t
GUI_tMalloc	emwin/emWin_header/GUI_Type.h	/^typedef void * (* GUI_tMalloc)(unsigned int);$/;"	t
GUI_tRecv	emwin/emWin_header/GUI_Type.h	/^typedef int    (* GUI_tRecv)  (      U8 * pData, int len, void * p);$/;"	t
GUI_tSend	emwin/emWin_header/GUI_Type.h	/^typedef int    (* GUI_tSend)  (const U8 * pData, int len, void * p);$/;"	t
GUI_tfTimer	emwin/emWin_header/GUI_Private.h	/^typedef int  GUI_tfTimer(void);$/;"	t
GenerateAuthenticatorResponse	lwip/src/netif/ppp/chap_ms.c	/^static void GenerateAuthenticatorResponse(const u_char PasswordHashHash[MD4_SIGNATURE_SIZE],$/;"	f	file:
GenerateAuthenticatorResponsePlain	lwip/src/netif/ppp/chap_ms.c	/^static void GenerateAuthenticatorResponsePlain($/;"	f	file:
GetBit	radio/MyTypeDef.h	33;"	d
GetBits	radio/MyTypeDef.h	37;"	d
GetCapabilities	CMSIS_driver/Driver_I2C.h	/^  ARM_I2C_CAPABILITIES (*GetCapabilities)(void);                                                                \/\/\/< Pointer to \\ref ARM_I2C_GetCapabilities : Get driver capabilities.$/;"	m	struct:_ARM_DRIVER_I2C
GetCapabilities	CMSIS_driver/Driver_SPI.h	/^  ARM_SPI_CAPABILITIES (*GetCapabilities) (void);                             \/\/\/< Pointer to \\ref ARM_SPI_GetCapabilities : Get driver capabilities.$/;"	m	struct:_ARM_DRIVER_SPI
GetDataCount	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*GetDataCount)   (void);                                                                \/\/\/< Pointer to \\ref ARM_I2C_GetDataCount : Get transferred data count.$/;"	m	struct:_ARM_DRIVER_I2C
GetDataCount	CMSIS_driver/Driver_SPI.h	/^  uint32_t             (*GetDataCount)    (void);                             \/\/\/< Pointer to \\ref ARM_SPI_GetDataCount : Get transferred data count.$/;"	m	struct:_ARM_DRIVER_SPI
GetDone	emwin/emWin_header/GUI_GIF_Private.h	/^  int   GetDone;$/;"	m	struct:__anon323
GetFreq	drivers/fsl_i2c_cmsis.c	/^    uint32_t (*GetFreq)(void); \/*!< Function to get the clock frequency. *\/$/;"	m	struct:_cmsis_i2c_resource	file:
GetFreq	drivers/fsl_spi_cmsis.c	/^    uint32_t (*GetFreq)(void);$/;"	m	struct:_cmsis_spi_resource	file:
GetMax	radio/MyTypeDef.h	43;"	d
GetMin	radio/MyTypeDef.h	44;"	d
GetStatus	CMSIS_driver/Driver_I2C.h	/^  ARM_I2C_STATUS       (*GetStatus)      (void);                                                                \/\/\/< Pointer to \\ref ARM_I2C_GetStatus : Get I2C status.$/;"	m	struct:_ARM_DRIVER_I2C
GetStatus	CMSIS_driver/Driver_SPI.h	/^  ARM_SPI_STATUS       (*GetStatus)       (void);                             \/\/\/< Pointer to \\ref ARM_SPI_GetStatus : Get SPI status.$/;"	m	struct:_ARM_DRIVER_SPI
GetVersion	CMSIS_driver/Driver_I2C.h	/^  ARM_DRIVER_VERSION   (*GetVersion)     (void);                                                                \/\/\/< Pointer to \\ref ARM_I2C_GetVersion : Get driver version.$/;"	m	struct:_ARM_DRIVER_I2C
GetVersion	CMSIS_driver/Driver_SPI.h	/^  ARM_DRIVER_VERSION   (*GetVersion)      (void);                             \/\/\/< Pointer to \\ref ARM_SPI_GetVersion : Get driver version.$/;"	m	struct:_ARM_DRIVER_SPI
GraphArray	emwin/emWin_header/GRAPH_Private.h	/^  GUI_ARRAY       GraphArray;$/;"	m	struct:GRAPH_OBJ
GridColor	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_COLOR                    GridColor;$/;"	m	struct:__anon331
GridOffX	emwin/emWin_header/GRAPH_Private.h	/^  unsigned  GridOffX;$/;"	m	struct:__anon309
GridOffY	emwin/emWin_header/GRAPH_Private.h	/^  unsigned  GridOffY;$/;"	m	struct:__anon309
GridSpacingX	emwin/emWin_header/GRAPH_Private.h	/^  unsigned  GridSpacingX;$/;"	m	struct:__anon309
GridSpacingY	emwin/emWin_header/GRAPH_Private.h	/^  unsigned  GridSpacingY;$/;"	m	struct:__anon309
GroupId	emwin/emWin_header/RADIO_Private.h	/^  U8  GroupId;$/;"	m	struct:__anon343
HALF_OF	codec2/_kiss_fft_guts.h	130;"	d
HALF_OF	codec2/_kiss_fft_guts.h	134;"	d
HALF_OF	codec2/_kiss_fft_guts.h	138;"	d
HALT	device/LPC54018.h	/^  __IO uint32_t HALT;                              \/**< SCT halt event select register, offset: 0xC *\/$/;"	m	struct:__anon172
HAL_CODEC_Deinit	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_Deinit(codec_handle_t *handle)$/;"	f
HAL_CODEC_Init	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_Init(codec_handle_t *handle, void *config)$/;"	f
HAL_CODEC_ModuleControl	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_ModuleControl(codec_handle_t *handle, codec_module_ctrl_cmd_t cmd, uint32_t data)$/;"	f
HAL_CODEC_SetFormat	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_SetFormat(codec_handle_t *handle, uint32_t mclk, uint32_t sampleRate, uint32_t bitWidth)$/;"	f
HAL_CODEC_SetMute	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_SetMute(codec_handle_t *handle, uint32_t playChannel, bool isMute)$/;"	f
HAL_CODEC_SetPlay	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_SetPlay(codec_handle_t *handle, uint32_t playSource)$/;"	f
HAL_CODEC_SetPower	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_SetPower(codec_handle_t *handle, codec_module_t module, bool powerOn)$/;"	f
HAL_CODEC_SetRecord	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_SetRecord(codec_handle_t *handle, uint32_t recordSource)$/;"	f
HAL_CODEC_SetRecordChannel	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_SetRecordChannel(codec_handle_t *handle, uint32_t leftRecordChannel, uint32_t rightRecordChannel)$/;"	f
HAL_CODEC_SetVolume	codec/fsl_codec_adapter.c	/^status_t HAL_CODEC_SetVolume(codec_handle_t *handle, uint32_t playChannel, uint32_t volume)$/;"	f
HAL_CTimerConfigTimeout	component/timer/ctimer_adapter.c	/^static hal_timer_status_t HAL_CTimerConfigTimeout(hal_timer_handle_t halTimerHandle, uint32_t timeout)$/;"	f	file:
HAL_I2C_MASTER_HANDLE_SIZE	component/i2c/i2c.h	20;"	d
HAL_I2C_SLAVE_HANDLE_SIZE	component/i2c/i2c.h	21;"	d
HAL_I2cGetStatus	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cGetStatus(status_t status)$/;"	f
HAL_I2cMasterCallback	component/i2c/flexcomm_i2c_adapter.c	/^static void HAL_I2cMasterCallback(I2C_Type *base, i2c_master_handle_t *handle, status_t status, void *callbackParam)$/;"	f	file:
HAL_I2cMasterDeinit	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterDeinit(hal_i2c_master_handle_t handle)$/;"	f
HAL_I2cMasterInit	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterInit(hal_i2c_master_handle_t handle, const hal_i2c_master_config_t *config)$/;"	f
HAL_I2cMasterReadBlocking	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterReadBlocking(hal_i2c_master_handle_t handle,$/;"	f
HAL_I2cMasterTransferAbort	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterTransferAbort(hal_i2c_master_handle_t handle)$/;"	f
HAL_I2cMasterTransferBlocking	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterTransferBlocking(hal_i2c_master_handle_t handle, hal_i2c_master_transfer_t *xfer)$/;"	f
HAL_I2cMasterTransferGetCount	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterTransferGetCount(hal_i2c_master_handle_t handle, size_t *count)$/;"	f
HAL_I2cMasterTransferInstallCallback	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterTransferInstallCallback(hal_i2c_master_handle_t handle,$/;"	f
HAL_I2cMasterTransferNonBlocking	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterTransferNonBlocking(hal_i2c_master_handle_t handle, hal_i2c_master_transfer_t *xfer)$/;"	f
HAL_I2cMasterWriteBlocking	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cMasterWriteBlocking(hal_i2c_master_handle_t handle,$/;"	f
HAL_I2cSlaveCallback	component/i2c/flexcomm_i2c_adapter.c	/^static void HAL_I2cSlaveCallback(I2C_Type *base, volatile i2c_slave_transfer_t *xfer, void *callbackParam)$/;"	f	file:
HAL_I2cSlaveDeinit	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cSlaveDeinit(hal_i2c_slave_handle_t handle)$/;"	f
HAL_I2cSlaveInit	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cSlaveInit(hal_i2c_slave_handle_t handle, const hal_i2c_slave_config_t *config)$/;"	f
HAL_I2cSlaveReadBlocking	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cSlaveReadBlocking(hal_i2c_slave_handle_t handle, uint8_t *rxBuff, size_t rxSize)$/;"	f
HAL_I2cSlaveTransferAbort	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cSlaveTransferAbort(hal_i2c_slave_handle_t handle)$/;"	f
HAL_I2cSlaveTransferGetCount	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cSlaveTransferGetCount(hal_i2c_slave_handle_t handle, size_t *count)$/;"	f
HAL_I2cSlaveTransferInstallCallback	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cSlaveTransferInstallCallback(hal_i2c_slave_handle_t handle,$/;"	f
HAL_I2cSlaveTransferNonBlocking	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cSlaveTransferNonBlocking(hal_i2c_slave_handle_t handle, uint32_t eventMask)$/;"	f
HAL_I2cSlaveWriteBlocking	component/i2c/flexcomm_i2c_adapter.c	/^hal_i2c_status_t HAL_I2cSlaveWriteBlocking(hal_i2c_slave_handle_t handle, const uint8_t *txBuff, size_t txSize)$/;"	f
HAL_TIMER_HANDLE_SIZE	component/timer/timer.h	77;"	d
HAL_TIMER_ISR_PRIORITY	component/timer/timer.h	83;"	d
HAL_TIMER_ISR_PRIORITY	component/timer/timer.h	86;"	d
HAL_TIMER_ISR_PRIORITY	component/timer/timer.h	92;"	d
HAL_TimerDeinit	component/timer/ctimer_adapter.c	/^void HAL_TimerDeinit(hal_timer_handle_t halTimerHandle)$/;"	f
HAL_TimerDisable	component/timer/ctimer_adapter.c	/^void HAL_TimerDisable(hal_timer_handle_t halTimerHandle)$/;"	f
HAL_TimerEnable	component/timer/ctimer_adapter.c	/^void HAL_TimerEnable(hal_timer_handle_t halTimerHandle)$/;"	f
HAL_TimerEnterLowpower	component/timer/ctimer_adapter.c	/^void HAL_TimerEnterLowpower(hal_timer_handle_t halTimerHandle)$/;"	f
HAL_TimerExitLowpower	component/timer/ctimer_adapter.c	/^void HAL_TimerExitLowpower(hal_timer_handle_t halTimerHandle)$/;"	f
HAL_TimerGetCurrentTimerCount	component/timer/ctimer_adapter.c	/^uint32_t HAL_TimerGetCurrentTimerCount(hal_timer_handle_t halTimerHandle)$/;"	f
HAL_TimerGetMaxTimeout	component/timer/ctimer_adapter.c	/^uint32_t HAL_TimerGetMaxTimeout(hal_timer_handle_t halTimerHandle)$/;"	f
HAL_TimerInit	component/timer/ctimer_adapter.c	/^hal_timer_status_t HAL_TimerInit(hal_timer_handle_t halTimerHandle, hal_timer_config_t *halTimerConfig)$/;"	f
HAL_TimerInstallCallback	component/timer/ctimer_adapter.c	/^void HAL_TimerInstallCallback(hal_timer_handle_t halTimerHandle, hal_timer_callback_t callback, void *callbackParam)$/;"	f
HAL_TimerInterruptHandle	component/timer/ctimer_adapter.c	/^static void HAL_TimerInterruptHandle(uint8_t instance)$/;"	f	file:
HAL_TimerUpdateTimeout	component/timer/ctimer_adapter.c	/^hal_timer_status_t HAL_TimerUpdateTimeout(hal_timer_handle_t halTimerHandle, uint32_t timeout)$/;"	f
HAL_UART_HANDLE_SIZE	component/uart/uart.h	51;"	d
HAL_UART_HANDLE_SIZE	component/uart/uart.h	53;"	d
HAL_UART_ISR_PRIORITY	component/uart/uart.h	37;"	d
HAL_UART_ISR_PRIORITY	component/uart/uart.h	40;"	d
HAL_UART_ISR_PRIORITY	component/uart/uart.h	46;"	d
HAL_UART_TRANSFER_MODE	component/uart/uart.h	57;"	d
HAL_UartAbortReceive	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartAbortReceive(hal_uart_handle_t handle)$/;"	f
HAL_UartAbortSend	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartAbortSend(hal_uart_handle_t handle)$/;"	f
HAL_UartCallback	component/uart/usart_adapter.c	/^static void HAL_UartCallback(USART_Type *base, usart_handle_t *handle, status_t status, void *callbackParam)$/;"	f	file:
HAL_UartDeinit	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartDeinit(hal_uart_handle_t handle)$/;"	f
HAL_UartGetReceiveCount	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartGetReceiveCount(hal_uart_handle_t handle, uint32_t *reCount)$/;"	f
HAL_UartGetSendCount	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartGetSendCount(hal_uart_handle_t handle, uint32_t *seCount)$/;"	f
HAL_UartGetStatus	component/uart/usart_adapter.c	/^static hal_uart_status_t HAL_UartGetStatus(status_t status)$/;"	f	file:
HAL_UartInit	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartInit(hal_uart_handle_t handle, hal_uart_config_t *config)$/;"	f
HAL_UartInstallCallback	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartInstallCallback(hal_uart_handle_t handle,$/;"	f
HAL_UartInterruptHandle	component/uart/usart_adapter.c	/^static void HAL_UartInterruptHandle(USART_Type *base, void *handle)$/;"	f	file:
HAL_UartIsrFunction	component/uart/usart_adapter.c	/^void HAL_UartIsrFunction(hal_uart_handle_t handle)$/;"	f
HAL_UartReceiveBlocking	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartReceiveBlocking(hal_uart_handle_t handle, uint8_t *data, size_t length)$/;"	f
HAL_UartReceiveNonBlocking	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartReceiveNonBlocking(hal_uart_handle_t handle, uint8_t *data, size_t length)$/;"	f
HAL_UartSendBlocking	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartSendBlocking(hal_uart_handle_t handle, const uint8_t *data, size_t length)$/;"	f
HAL_UartSendNonBlocking	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartSendNonBlocking(hal_uart_handle_t handle, uint8_t *data, size_t length)$/;"	f
HAL_UartTransferAbortReceive	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartTransferAbortReceive(hal_uart_handle_t handle)$/;"	f
HAL_UartTransferAbortSend	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartTransferAbortSend(hal_uart_handle_t handle)$/;"	f
HAL_UartTransferGetReceiveCount	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartTransferGetReceiveCount(hal_uart_handle_t handle, uint32_t *count)$/;"	f
HAL_UartTransferGetSendCount	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartTransferGetSendCount(hal_uart_handle_t handle, uint32_t *count)$/;"	f
HAL_UartTransferInstallCallback	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartTransferInstallCallback(hal_uart_handle_t handle,$/;"	f
HAL_UartTransferReceiveNonBlocking	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartTransferReceiveNonBlocking(hal_uart_handle_t handle, hal_uart_transfer_t *transfer)$/;"	f
HAL_UartTransferSendNonBlocking	component/uart/usart_adapter.c	/^hal_uart_status_t HAL_UartTransferSendNonBlocking(hal_uart_handle_t handle, hal_uart_transfer_t *transfer)$/;"	f
HAL_WM8904_MAP_MODULE	codec/fsl_codec_adapter.c	39;"	d	file:
HAL_WM8904_MAP_PROTOCOL	codec/fsl_codec_adapter.c	28;"	d	file:
HAL_WM8904_MAP_SAMPLERATE	codec/fsl_codec_adapter.c	50;"	d	file:
HAL_WM8904_MODULE_CAPABILITY	codec/fsl_codec_adapter.c	15;"	d	file:
HAL_WM8904_PLAY_CAPABILITY	codec/fsl_codec_adapter.c	18;"	d	file:
HAL_WM8904_RECORD_CAPABILITY	codec/fsl_codec_adapter.c	21;"	d	file:
HANDLER	lwip/src/core/timeouts.c	65;"	d	file:
HANDLER	lwip/src/core/timeouts.c	67;"	d	file:
HBWIN	emwin/emWin_header/WM.h	753;"	d
HBWIN_NULL	emwin/emWin_header/WM.h	754;"	d
HCBULKCURRENTED	device/LPC54018.h	/^  __IO uint32_t HCBULKCURRENTED;                   \/**< Contains the physical address of the current endpoint descriptor of the bulk list, offset: 0x2C *\/$/;"	m	struct:__anon188
HCBULKHEADED	device/LPC54018.h	/^  __IO uint32_t HCBULKHEADED;                      \/**< Contains the physical address of the first endpoint descriptor of the bulk list, offset: 0x28 *\/$/;"	m	struct:__anon188
HCCOMMANDSTATUS	device/LPC54018.h	/^  __IO uint32_t HCCOMMANDSTATUS;                   \/**< This register is used to receive the commands from the Host Controller Driver (HCD), offset: 0x8 *\/$/;"	m	struct:__anon188
HCCONTROL	device/LPC54018.h	/^  __IO uint32_t HCCONTROL;                         \/**< Defines the operating modes of the HC, offset: 0x4 *\/$/;"	m	struct:__anon188
HCCONTROLCURRENTED	device/LPC54018.h	/^  __IO uint32_t HCCONTROLCURRENTED;                \/**< Contains the physical address of the current endpoint descriptor of the control list, offset: 0x24 *\/$/;"	m	struct:__anon188
HCCONTROLHEADED	device/LPC54018.h	/^  __IO uint32_t HCCONTROLHEADED;                   \/**< Contains the physical address of the first endpoint descriptor of the control list, offset: 0x20 *\/$/;"	m	struct:__anon188
HCCPARAMS	device/LPC54018.h	/^  __I  uint32_t HCCPARAMS;                         \/**< Host Controller Capability Parameters, offset: 0x8 *\/$/;"	m	struct:__anon190
HCDONEHEAD	device/LPC54018.h	/^  __I  uint32_t HCDONEHEAD;                        \/**< Contains the physical address of the last transfer descriptor added to the 'Done' queue, offset: 0x30 *\/$/;"	m	struct:__anon188
HCFMINTERVAL	device/LPC54018.h	/^  __IO uint32_t HCFMINTERVAL;                      \/**< Defines the bit time interval in a frame and the full speed maximum packet size which would not cause an overrun, offset: 0x34 *\/$/;"	m	struct:__anon188
HCFMNUMBER	device/LPC54018.h	/^  __I  uint32_t HCFMNUMBER;                        \/**< Contains a 16-bit counter and provides the timing reference among events happening in the HC and the HCD, offset: 0x3C *\/$/;"	m	struct:__anon188
HCFMREMAINING	device/LPC54018.h	/^  __I  uint32_t HCFMREMAINING;                     \/**< A 14-bit counter showing the bit time remaining in the current frame, offset: 0x38 *\/$/;"	m	struct:__anon188
HCHCCA	device/LPC54018.h	/^  __IO uint32_t HCHCCA;                            \/**< Contains the physical address of the host controller communication area, offset: 0x18 *\/$/;"	m	struct:__anon188
HCINTERRUPTDISABLE	device/LPC54018.h	/^  __IO uint32_t HCINTERRUPTDISABLE;                \/**< The bits in this register are used to disable corresponding bits in the HCInterruptStatus register and in turn disable that event leading to hardware interrupt, offset: 0x14 *\/$/;"	m	struct:__anon188
HCINTERRUPTENABLE	device/LPC54018.h	/^  __IO uint32_t HCINTERRUPTENABLE;                 \/**< Controls the bits in the HcInterruptStatus register and indicates which events will generate a hardware interrupt, offset: 0x10 *\/$/;"	m	struct:__anon188
HCINTERRUPTSTATUS	device/LPC54018.h	/^  __IO uint32_t HCINTERRUPTSTATUS;                 \/**< Indicates the status on various events that cause hardware interrupts by setting the appropriate bits, offset: 0xC *\/$/;"	m	struct:__anon188
HCLSTHRESHOLD	device/LPC54018.h	/^  __IO uint32_t HCLSTHRESHOLD;                     \/**< Contains 11-bit value which is used by the HC to determine whether to commit to transfer a maximum of 8-byte LS packet before EOF, offset: 0x44 *\/$/;"	m	struct:__anon188
HCPERIODCURRENTED	device/LPC54018.h	/^  __I  uint32_t HCPERIODCURRENTED;                 \/**< Contains the physical address of the current isochronous or interrupt endpoint descriptor, offset: 0x1C *\/$/;"	m	struct:__anon188
HCPERIODICSTART	device/LPC54018.h	/^  __IO uint32_t HCPERIODICSTART;                   \/**< Contains a programmable 14-bit value which determines the earliest time HC should start processing a periodic list, offset: 0x40 *\/$/;"	m	struct:__anon188
HCREVISION	device/LPC54018.h	/^  __I  uint32_t HCREVISION;                        \/**< BCD representation of the version of the HCI specification that is implemented by the Host Controller (HC), offset: 0x0 *\/$/;"	m	struct:__anon188
HCRHDESCRIPTORA	device/LPC54018.h	/^  __IO uint32_t HCRHDESCRIPTORA;                   \/**< First of the two registers which describes the characteristics of the root hub, offset: 0x48 *\/$/;"	m	struct:__anon188
HCRHDESCRIPTORB	device/LPC54018.h	/^  __IO uint32_t HCRHDESCRIPTORB;                   \/**< Second of the two registers which describes the characteristics of the Root Hub, offset: 0x4C *\/$/;"	m	struct:__anon188
HCRHPORTSTATUS	device/LPC54018.h	/^  __IO uint32_t HCRHPORTSTATUS;                    \/**< Controls and reports the port events on a per-port basis, offset: 0x54 *\/$/;"	m	struct:__anon188
HCRHSTATUS	device/LPC54018.h	/^  __IO uint32_t HCRHSTATUS;                        \/**< This register is divided into two parts, offset: 0x50 *\/$/;"	m	struct:__anon188
HCSPARAMS	device/LPC54018.h	/^  __I  uint32_t HCSPARAMS;                         \/**< Host Controller Structural Parameters, offset: 0x4 *\/$/;"	m	struct:__anon190
HEADERLEN	lwip/src/include/netif/ppp/fsm.h	60;"	d
HEADER_BORDER_H_DEFAULT	emwin/emWin_header/HEADER.h	182;"	d
HEADER_BORDER_V_DEFAULT	emwin/emWin_header/HEADER.h	185;"	d
HEADER_COLUMN	emwin/emWin_header/HEADER_Private.h	/^} HEADER_COLUMN;$/;"	t	typeref:struct:__anon273
HEADER_GetDefaultSpacingH	emwin/emWin_header/HEADER.h	189;"	d
HEADER_GetDefaultSpacingV	emwin/emWin_header/HEADER.h	190;"	d
HEADER_H	emwin/emWin_header/HEADER.h	46;"	d
HEADER_Handle	emwin/emWin_header/HEADER.h	/^typedef WM_HMEM HEADER_Handle;$/;"	t
HEADER_ID	emwin/emWin_header/WIDGET.h	107;"	d
HEADER_INIT_ID	emwin/emWin_header/HEADER_Private.h	120;"	d
HEADER_INIT_ID	emwin/emWin_header/HEADER_Private.h	122;"	d
HEADER_LOCK_H	emwin/emWin_header/HEADER_Private.h	127;"	d
HEADER_LOCK_H	emwin/emWin_header/HEADER_Private.h	129;"	d
HEADER_Obj	emwin/emWin_header/HEADER_Private.h	/^} HEADER_Obj;$/;"	t	typeref:struct:__anon276
HEADER_PRIVATE_H	emwin/emWin_header/HEADER_Private.h	46;"	d
HEADER_PROPS	emwin/emWin_header/HEADER_Private.h	/^} HEADER_PROPS;$/;"	t	typeref:struct:__anon275
HEADER_SKINFLEX_PROPS	emwin/emWin_header/HEADER.h	/^} HEADER_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon369
HEADER_SKIN_FLEX	emwin/emWin_header/HEADER.h	172;"	d
HEADER_SKIN_PRIVATE	emwin/emWin_header/HEADER_Private.h	/^} HEADER_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon274
HEADER_SetDefaultSpacingH	emwin/emWin_header/HEADER.h	187;"	d
HEADER_SetDefaultSpacingV	emwin/emWin_header/HEADER.h	188;"	d
HFSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t HFSR;                   \/*!< Offset: 0x02C (R\/W)  HardFault Status Register *\/$/;"	m	struct:__anon18
HFSR	CMSIS/core_cm4.h	/^  __IOM uint32_t HFSR;                   \/*!< Offset: 0x02C (R\/W)  HardFault Status Register *\/$/;"	m	struct:__anon40
HORUS_MAX	codec2/fsk.c	261;"	d	file:
HORUS_MIN	codec2/fsk.c	260;"	d	file:
HORUS_MIN_SPACING	codec2/fsk.c	262;"	d	file:
HOSTENT_STORAGE	lwip/src/api/netdb.c	72;"	d	file:
HOSTENT_STORAGE	lwip/src/api/netdb.c	74;"	d	file:
HOST_NOT_FOUND	lwip/src/include/lwip/netdb.h	74;"	d
HPF_BETA	codec2/sine.c	42;"	d	file:
HPMS	device/LPC54018.h	/^  __I  uint32_t HPMS;                              \/**< High Priority Message Status, offset: 0x94 *\/$/;"	m	struct:__anon142
HS_CDC_VCOM_BULK_IN_PACKET_SIZE	vcom/usb_device_descriptor.h	142;"	d
HS_CDC_VCOM_BULK_IN_PACKET_SIZE_2	vcom/usb_device_descriptor.h	147;"	d
HS_CDC_VCOM_BULK_OUT_PACKET_SIZE	vcom/usb_device_descriptor.h	144;"	d
HS_CDC_VCOM_BULK_OUT_PACKET_SIZE_2	vcom/usb_device_descriptor.h	149;"	d
HS_CDC_VCOM_INTERRUPT_IN_INTERVAL	vcom/usb_device_descriptor.h	134;"	d
HS_CDC_VCOM_INTERRUPT_IN_INTERVAL_2	vcom/usb_device_descriptor.h	139;"	d
HS_CDC_VCOM_INTERRUPT_IN_PACKET_SIZE	vcom/usb_device_descriptor.h	132;"	d
HS_CDC_VCOM_INTERRUPT_IN_PACKET_SIZE_2	vcom/usb_device_descriptor.h	137;"	d
HTTPFILES	lwip/src/Filelists.mk	/^HTTPFILES=$(LWIPDIR)\/apps\/http\/altcp_proxyconnect.c \\$/;"	m
HUFF_TABLE	emwin/emWin_header/GUI_JPEG_Private.h	/^} HUFF_TABLE;$/;"	t	typeref:struct:__anon362
HUGE_VAL	utilities/fsl_str.c	21;"	d	file:
HWVAD0_DriverIRQHandler	drivers/fsl_dmic.c	/^void HWVAD0_DriverIRQHandler(void)$/;"	f
HWVAD0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void HWVAD0_IRQHandler(void)$/;"	f
HWVAD0_IRQn	device/LPC54018.h	/^  HWVAD0_IRQn                  = 26,               \/**< Hardware Voice Activity Detector *\/$/;"	e	enum:IRQn
HWVADGAIN	device/LPC54018.h	/^  __IO uint32_t HWVADGAIN;                         \/**< HWVAD input gain register, offset: 0xF80 *\/$/;"	m	struct:__anon149
HWVADHPFS	device/LPC54018.h	/^  __IO uint32_t HWVADHPFS;                         \/**< HWVAD filter control register, offset: 0xF84 *\/$/;"	m	struct:__anon149
HWVADLOWZ	device/LPC54018.h	/^  __I  uint32_t HWVADLOWZ;                         \/**< HWVAD noise envelope estimator register, offset: 0xF98 *\/$/;"	m	struct:__anon149
HWVADRSTT	device/LPC54018.h	/^  __IO uint32_t HWVADRSTT;                         \/**< HWVAD filter reset register, offset: 0xF8C *\/$/;"	m	struct:__anon149
HWVADST10	device/LPC54018.h	/^  __IO uint32_t HWVADST10;                         \/**< HWVAD control register, offset: 0xF88 *\/$/;"	m	struct:__anon149
HWVADTHGN	device/LPC54018.h	/^  __IO uint32_t HWVADTHGN;                         \/**< HWVAD noise estimator gain register, offset: 0xF90 *\/$/;"	m	struct:__anon149
HWVADTHGS	device/LPC54018.h	/^  __IO uint32_t HWVADTHGS;                         \/**< HWVAD signal estimator gain register, offset: 0xF94 *\/$/;"	m	struct:__anon149
HWWAKE	device/LPC54018.h	/^  __IO uint32_t HWWAKE;                            \/**< Configures special cases of hardware wake-up, offset: 0x780 *\/$/;"	m	struct:__anon185
HW_API	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  GUI_PORT_API HW_API;$/;"	m	struct:DRIVER_CONTEXT
HW_API	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  GUI_PORT_API    HW_API;         \/\/ Hardware routines$/;"	m	struct:DRIVER_CONTEXT
HW_API	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  GUI_PORT_API    HW_API;         \/\/ Hardware routines$/;"	m	struct:DRIVER_CONTEXT
HW_API	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  GUI_PORT_API    HW_API;         \/\/ Hardware routines$/;"	m	struct:DRIVER_CONTEXT
HW_API	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  GUI_PORT_API    HW_API;         \/\/ Hardware routines$/;"	m	struct:DRIVER_CONTEXT
HW_API	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  GUI_PORT_API HW_API;$/;"	m	struct:DRIVER_CONTEXT
HW_API	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  GUI_PORT_API    HW_API;         \/\/ Hardware routines$/;"	m	struct:DRIVER_CONTEXT
HW_API	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  GUI_PORT_API    HW_API;         \/\/ Hardware routines$/;"	m	struct:DRIVER_CONTEXT
H_cols	codec2/mpdecode_core.h	/^    double *H_cols;$/;"	m	struct:LDPC
H_rows	codec2/mpdecode_core.h	/^    double *H_rows;$/;"	m	struct:LDPC
Handles	emwin/emWin_header/DROPDOWN_Private.h	/^  GUI_ARRAY Handles;$/;"	m	struct:__anon360
HardFault_Handler	source/semihost_hardfault.c	/^void HardFault_Handler(void){$/;"	f
HardFault_Handler	startup/startup_lpc54018.c	/^WEAK_AV void HardFault_Handler(void)$/;"	f
HardFault_IRQn	device/LPC54018.h	/^  HardFault_IRQn               = -13,              \/**< Cortex-M4 SV Hard Fault Interrupt *\/$/;"	e	enum:IRQn
HasLines	emwin/emWin_header/TREEVIEW.h	/^  int HasLines;$/;"	m	struct:__anon371
HasRowSelect	emwin/emWin_header/TREEVIEW.h	/^  int HasRowSelect;$/;"	m	struct:__anon371
HasTrans	emwin/emWin_header/GUI_Type.h	/^  U16 HasTrans;$/;"	m	struct:__anon244
HasTrans	emwin/emWin_header/GUI_Type.h	/^  int HasTrans;$/;"	m	struct:__anon246
HasTrans	emwin/emWin_header/LCD.h	/^  char             HasTrans;$/;"	m	struct:__anon405
HeapRegion	amazon-freertos/include/portable.h	/^typedef struct HeapRegion$/;"	s
HeapRegion_t	amazon-freertos/include/portable.h	/^} HeapRegion_t;$/;"	t	typeref:struct:HeapRegion
Height	emwin/emWin_header/MENU_Private.h	/^  int                 Height;$/;"	m	struct:__anon319
I128	emwin/emWin_header/Global.h	72;"	d
I16	emwin/emWin_header/Global.h	56;"	d
I16P	emwin/emWin_header/LCD.h	66;"	d
I2C0	device/LPC54018.h	6100;"	d
I2C0_BASE	device/LPC54018.h	6098;"	d
I2C0_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C0_DmaDriverState = {$/;"	v
I2C0_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C0_DmaHandle;$/;"	v
I2C0_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C0_DmaResource = {RTE_I2C0_Master_DMA_BASE, RTE_I2C0_Master_DMA_CH};$/;"	v
I2C0_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C0_DmaTxRxHandle;$/;"	v
I2C0_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C0_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C0_InterruptDriverState = {$/;"	v
I2C0_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_InterruptGetDataCount(void)$/;"	f
I2C0_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C0_InterruptGetStatus(void)$/;"	f
I2C0_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C0_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C0_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C0_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C0_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C0_InterruptUninitialize(void)$/;"	f	file:
I2C0_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C0_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Master_DmaGetDataCount(void)$/;"	f
I2C0_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C0_Master_DmaGetStatus(void)$/;"	f
I2C0_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C0_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C0_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C0_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C0_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C0_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Master_DmaUninitialize(void)$/;"	f
I2C0_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C0_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C0_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C0_Resource = {I2C0, I2C0_GetFreq};$/;"	v
I2C0_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C0_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C0_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C0_handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C0_handle;$/;"	v
I2C1	device/LPC54018.h	6104;"	d
I2C1_BASE	device/LPC54018.h	6102;"	d
I2C1_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C1_DmaDriverState = {$/;"	v
I2C1_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C1_DmaHandle;$/;"	v
I2C1_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C1_DmaResource = {RTE_I2C1_Master_DMA_BASE, RTE_I2C1_Master_DMA_CH};$/;"	v
I2C1_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C1_DmaTxRxHandle;$/;"	v
I2C1_Handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C1_Handle;$/;"	v
I2C1_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C1_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C1_InterruptDriverState = {$/;"	v
I2C1_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_InterruptGetDataCount(void)$/;"	f
I2C1_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C1_InterruptGetStatus(void)$/;"	f
I2C1_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C1_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C1_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C1_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C1_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C1_InterruptUninitialize(void)$/;"	f	file:
I2C1_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C1_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Master_DmaGetDataCount(void)$/;"	f
I2C1_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C1_Master_DmaGetStatus(void)$/;"	f
I2C1_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C1_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C1_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C1_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C1_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C1_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Master_DmaUninitialize(void)$/;"	f
I2C1_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C1_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C1_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C1_Resource = {I2C1, I2C1_GetFreq};$/;"	v
I2C1_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C1_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C1_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C2	device/LPC54018.h	6108;"	d
I2C2_BASE	device/LPC54018.h	6106;"	d
I2C2_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C2_DmaDriverState = {$/;"	v
I2C2_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C2_DmaHandle;$/;"	v
I2C2_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C2_DmaResource = {RTE_I2C2_Master_DMA_BASE, RTE_I2C2_Master_DMA_CH};$/;"	v
I2C2_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C2_DmaTxRxHandle;$/;"	v
I2C2_Handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C2_Handle;$/;"	v
I2C2_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C2_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C2_InterruptDriverState = {$/;"	v
I2C2_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_InterruptGetDataCount(void)$/;"	f
I2C2_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C2_InterruptGetStatus(void)$/;"	f
I2C2_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C2_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C2_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C2_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C2_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C2_InterruptUninitialize(void)$/;"	f	file:
I2C2_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C2_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Master_DmaGetDataCount(void)$/;"	f
I2C2_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C2_Master_DmaGetStatus(void)$/;"	f
I2C2_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C2_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C2_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C2_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C2_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C2_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Master_DmaUninitialize(void)$/;"	f
I2C2_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C2_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C2_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C2_Resource = {I2C2, I2C2_GetFreq};$/;"	v
I2C2_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C2_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C2_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C3	device/LPC54018.h	6112;"	d
I2C3_BASE	device/LPC54018.h	6110;"	d
I2C3_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C3_DmaDriverState = {$/;"	v
I2C3_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C3_DmaHandle;$/;"	v
I2C3_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C3_DmaResource = {RTE_I2C3_Master_DMA_BASE, RTE_I2C3_Master_DMA_CH};$/;"	v
I2C3_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C3_DmaTxRxHandle;$/;"	v
I2C3_Handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C3_Handle;$/;"	v
I2C3_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C3_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C3_InterruptDriverState = {$/;"	v
I2C3_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_InterruptGetDataCount(void)$/;"	f
I2C3_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C3_InterruptGetStatus(void)$/;"	f
I2C3_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C3_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C3_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C3_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C3_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C3_InterruptUninitialize(void)$/;"	f	file:
I2C3_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C3_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Master_DmaGetDataCount(void)$/;"	f
I2C3_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C3_Master_DmaGetStatus(void)$/;"	f
I2C3_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C3_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C3_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C3_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C3_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C3_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Master_DmaUninitialize(void)$/;"	f
I2C3_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C3_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C3_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C3_Resource = {I2C3, I2C3_GetFreq};$/;"	v
I2C3_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C3_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C3_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C4	device/LPC54018.h	6116;"	d
I2C4_BASE	device/LPC54018.h	6114;"	d
I2C4_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C4_DmaDriverState = {$/;"	v
I2C4_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C4_DmaHandle;$/;"	v
I2C4_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C4_DmaResource = {RTE_I2C4_Master_DMA_BASE, RTE_I2C4_Master_DMA_CH};$/;"	v
I2C4_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C4_DmaTxRxHandle;$/;"	v
I2C4_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C4_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C4_InterruptDriverState = {$/;"	v
I2C4_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_InterruptGetDataCount(void)$/;"	f
I2C4_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C4_InterruptGetStatus(void)$/;"	f
I2C4_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C4_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C4_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C4_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C4_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C4_InterruptUninitialize(void)$/;"	f	file:
I2C4_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C4_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Master_DmaGetDataCount(void)$/;"	f
I2C4_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C4_Master_DmaGetStatus(void)$/;"	f
I2C4_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C4_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C4_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C4_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C4_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C4_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Master_DmaUninitialize(void)$/;"	f
I2C4_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C4_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C4_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C4_Resource = {I2C4, I2C4_GetFreq};$/;"	v
I2C4_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C4_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C4_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C4_handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C4_handle;$/;"	v
I2C5	device/LPC54018.h	6120;"	d
I2C5_BASE	device/LPC54018.h	6118;"	d
I2C5_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C5_DmaDriverState = {$/;"	v
I2C5_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C5_DmaHandle;$/;"	v
I2C5_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C5_DmaResource = {RTE_I2C5_Master_DMA_BASE, RTE_I2C5_Master_DMA_CH};$/;"	v
I2C5_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C5_DmaTxRxHandle;$/;"	v
I2C5_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C5_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C5_InterruptDriverState = {$/;"	v
I2C5_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_InterruptGetDataCount(void)$/;"	f
I2C5_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C5_InterruptGetStatus(void)$/;"	f
I2C5_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C5_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C5_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C5_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C5_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C5_InterruptUninitialize(void)$/;"	f	file:
I2C5_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C5_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Master_DmaGetDataCount(void)$/;"	f
I2C5_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C5_Master_DmaGetStatus(void)$/;"	f
I2C5_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C5_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C5_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C5_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C5_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C5_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Master_DmaUninitialize(void)$/;"	f
I2C5_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C5_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C5_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C5_Resource = {I2C5, I2C5_GetFreq};$/;"	v
I2C5_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C5_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C5_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C5_handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C5_handle;$/;"	v
I2C6	device/LPC54018.h	6124;"	d
I2C6_BASE	device/LPC54018.h	6122;"	d
I2C6_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C6_DmaDriverState = {$/;"	v
I2C6_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C6_DmaHandle;$/;"	v
I2C6_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C6_DmaResource = {RTE_I2C6_Master_DMA_BASE, RTE_I2C6_Master_DMA_CH};$/;"	v
I2C6_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C6_DmaTxRxHandle;$/;"	v
I2C6_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C6_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C6_InterruptDriverState = {$/;"	v
I2C6_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_InterruptGetDataCount(void)$/;"	f
I2C6_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C6_InterruptGetStatus(void)$/;"	f
I2C6_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C6_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C6_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C6_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C6_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C6_InterruptUninitialize(void)$/;"	f	file:
I2C6_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C6_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Master_DmaGetDataCount(void)$/;"	f
I2C6_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C6_Master_DmaGetStatus(void)$/;"	f
I2C6_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C6_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C6_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C6_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C6_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C6_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Master_DmaUninitialize(void)$/;"	f
I2C6_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C6_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C6_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C6_Resource = {I2C6, I2C6_GetFreq};$/;"	v
I2C6_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C6_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C6_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C6_handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C6_handle;$/;"	v
I2C7	device/LPC54018.h	6128;"	d
I2C7_BASE	device/LPC54018.h	6126;"	d
I2C7_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C7_DmaDriverState = {$/;"	v
I2C7_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C7_DmaHandle;$/;"	v
I2C7_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C7_DmaResource = {RTE_I2C7_Master_DMA_BASE, RTE_I2C7_Master_DMA_CH};$/;"	v
I2C7_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C7_DmaTxRxHandle;$/;"	v
I2C7_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C7_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C7_InterruptDriverState = {$/;"	v
I2C7_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_InterruptGetDataCount(void)$/;"	f
I2C7_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C7_InterruptGetStatus(void)$/;"	f
I2C7_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C7_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C7_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C7_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C7_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C7_InterruptUninitialize(void)$/;"	f	file:
I2C7_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C7_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Master_DmaGetDataCount(void)$/;"	f
I2C7_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C7_Master_DmaGetStatus(void)$/;"	f
I2C7_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C7_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C7_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C7_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C7_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C7_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Master_DmaUninitialize(void)$/;"	f
I2C7_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C7_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C7_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C7_Resource = {I2C7, I2C7_GetFreq};$/;"	v
I2C7_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C7_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C7_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C7_handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C7_handle;$/;"	v
I2C8	device/LPC54018.h	6132;"	d
I2C8_BASE	device/LPC54018.h	6130;"	d
I2C8_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C8_DmaDriverState = {$/;"	v
I2C8_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C8_DmaHandle;$/;"	v
I2C8_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C8_DmaResource = {RTE_I2C8_Master_DMA_BASE, RTE_I2C8_Master_DMA_CH};$/;"	v
I2C8_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C8_DmaTxRxHandle;$/;"	v
I2C8_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C8_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C8_InterruptDriverState = {$/;"	v
I2C8_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_InterruptGetDataCount(void)$/;"	f
I2C8_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C8_InterruptGetStatus(void)$/;"	f
I2C8_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C8_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C8_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C8_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C8_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C8_InterruptUninitialize(void)$/;"	f	file:
I2C8_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C8_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Master_DmaGetDataCount(void)$/;"	f
I2C8_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C8_Master_DmaGetStatus(void)$/;"	f
I2C8_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C8_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C8_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C8_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C8_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C8_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Master_DmaUninitialize(void)$/;"	f
I2C8_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C8_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C8_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C8_Resource = {I2C8, I2C8_GetFreq};$/;"	v
I2C8_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C8_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C8_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C8_handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C8_handle;$/;"	v
I2C9	device/LPC54018.h	6136;"	d
I2C9_BASE	device/LPC54018.h	6134;"	d
I2C9_DmaDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_driver_state_t I2C9_DmaDriverState = {$/;"	v
I2C9_DmaHandle	drivers/fsl_i2c_cmsis.c	/^i2c_master_dma_handle_t I2C9_DmaHandle;$/;"	v
I2C9_DmaResource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_dma_resource_t I2C9_DmaResource = {RTE_I2C9_Master_DMA_BASE, RTE_I2C9_Master_DMA_CH};$/;"	v
I2C9_DmaTxRxHandle	drivers/fsl_i2c_cmsis.c	/^dma_handle_t I2C9_DmaTxRxHandle;$/;"	v
I2C9_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_InterruptControl(uint32_t control, uint32_t arg)$/;"	f
I2C9_InterruptDriverState	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_interrupt_driver_state_t I2C9_InterruptDriverState = {$/;"	v
I2C9_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_InterruptGetDataCount(void)$/;"	f
I2C9_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C9_InterruptGetStatus(void)$/;"	f
I2C9_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C9_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C9_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C9_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
I2C9_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C9_InterruptUninitialize(void)$/;"	f	file:
I2C9_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Master_DmaControl(uint32_t control, uint32_t arg)$/;"	f
I2C9_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Master_DmaGetDataCount(void)$/;"	f
I2C9_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C9_Master_DmaGetStatus(void)$/;"	f
I2C9_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C9_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event)$/;"	f	file:
I2C9_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Master_DmaPowerControl(ARM_POWER_STATE state)$/;"	f
I2C9_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Master_DmaReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C9_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Master_DmaTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C9_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Master_DmaUninitialize(void)$/;"	f
I2C9_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Master_InterruptReceive(uint32_t addr, uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C9_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Master_InterruptTransmit(uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending)$/;"	f
I2C9_Resource	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_resource_t I2C9_Resource = {I2C9, I2C9_GetFreq};$/;"	v
I2C9_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Slave_InterruptReceive(uint8_t *data, uint32_t num)$/;"	f
I2C9_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C9_Slave_InterruptTransmit(const uint8_t *data, uint32_t num)$/;"	f
I2C9_handle	drivers/fsl_i2c_cmsis.c	/^cmsis_i2c_handle_t I2C9_handle;$/;"	v
I2C_BASE_ADDRS	device/LPC54018.h	6138;"	d
I2C_BASE_PTRS	device/LPC54018.h	6140;"	d
I2C_CFG_HSCAPABLE	device/LPC54018.h	5513;"	d
I2C_CFG_HSCAPABLE_MASK	device/LPC54018.h	5500;"	d
I2C_CFG_HSCAPABLE_SHIFT	device/LPC54018.h	5501;"	d
I2C_CFG_MASK	drivers/fsl_i2c.h	19;"	d
I2C_CFG_MONCLKSTR	device/LPC54018.h	5499;"	d
I2C_CFG_MONCLKSTR_MASK	device/LPC54018.h	5490;"	d
I2C_CFG_MONCLKSTR_SHIFT	device/LPC54018.h	5491;"	d
I2C_CFG_MONEN	device/LPC54018.h	5481;"	d
I2C_CFG_MONEN_MASK	device/LPC54018.h	5474;"	d
I2C_CFG_MONEN_SHIFT	device/LPC54018.h	5475;"	d
I2C_CFG_MSTEN	device/LPC54018.h	5465;"	d
I2C_CFG_MSTEN_MASK	device/LPC54018.h	5458;"	d
I2C_CFG_MSTEN_SHIFT	device/LPC54018.h	5459;"	d
I2C_CFG_SLVEN	device/LPC54018.h	5473;"	d
I2C_CFG_SLVEN_MASK	device/LPC54018.h	5466;"	d
I2C_CFG_SLVEN_SHIFT	device/LPC54018.h	5467;"	d
I2C_CFG_TIMEOUTEN	device/LPC54018.h	5489;"	d
I2C_CFG_TIMEOUTEN_MASK	device/LPC54018.h	5482;"	d
I2C_CFG_TIMEOUTEN_SHIFT	device/LPC54018.h	5483;"	d
I2C_CLKDIV_DIVVAL	device/LPC54018.h	5822;"	d
I2C_CLKDIV_DIVVAL_MASK	device/LPC54018.h	5820;"	d
I2C_CLKDIV_DIVVAL_SHIFT	device/LPC54018.h	5821;"	d
I2C_DisableInterrupts	drivers/fsl_i2c.h	/^static inline void I2C_DisableInterrupts(I2C_Type *base, uint32_t interruptMask)$/;"	f
I2C_EnableInterrupts	drivers/fsl_i2c.h	/^static inline void I2C_EnableInterrupts(I2C_Type *base, uint32_t interruptMask)$/;"	f
I2C_FLAG_INIT	drivers/fsl_i2c_cmsis.h	74;"	d
I2C_FLAG_POWER	drivers/fsl_i2c_cmsis.h	75;"	d
I2C_FLAG_UNINIT	drivers/fsl_i2c_cmsis.h	73;"	d
I2C_GetEnabledInterrupts	drivers/fsl_i2c.h	/^static inline uint32_t I2C_GetEnabledInterrupts(I2C_Type *base)$/;"	f
I2C_GetInstance	drivers/fsl_i2c.c	/^uint32_t I2C_GetInstance(I2C_Type *base)$/;"	f
I2C_GetStatusFlags	drivers/fsl_i2c.h	/^static inline uint32_t I2C_GetStatusFlags(I2C_Type *base)$/;"	f
I2C_ID_APERTURE	device/LPC54018.h	6078;"	d
I2C_ID_APERTURE_MASK	device/LPC54018.h	6076;"	d
I2C_ID_APERTURE_SHIFT	device/LPC54018.h	6077;"	d
I2C_ID_ID	device/LPC54018.h	6087;"	d
I2C_ID_ID_MASK	device/LPC54018.h	6085;"	d
I2C_ID_ID_SHIFT	device/LPC54018.h	6086;"	d
I2C_ID_MAJOR_REV	device/LPC54018.h	6084;"	d
I2C_ID_MAJOR_REV_MASK	device/LPC54018.h	6082;"	d
I2C_ID_MAJOR_REV_SHIFT	device/LPC54018.h	6083;"	d
I2C_ID_MINOR_REV	device/LPC54018.h	6081;"	d
I2C_ID_MINOR_REV_MASK	device/LPC54018.h	6079;"	d
I2C_ID_MINOR_REV_SHIFT	device/LPC54018.h	6080;"	d
I2C_INTENCLR_EVENTTIMEOUTCLR	device/LPC54018.h	5802;"	d
I2C_INTENCLR_EVENTTIMEOUTCLR_MASK	device/LPC54018.h	5800;"	d
I2C_INTENCLR_EVENTTIMEOUTCLR_SHIFT	device/LPC54018.h	5801;"	d
I2C_INTENCLR_MONIDLECLR	device/LPC54018.h	5799;"	d
I2C_INTENCLR_MONIDLECLR_MASK	device/LPC54018.h	5797;"	d
I2C_INTENCLR_MONIDLECLR_SHIFT	device/LPC54018.h	5798;"	d
I2C_INTENCLR_MONOVCLR	device/LPC54018.h	5796;"	d
I2C_INTENCLR_MONOVCLR_MASK	device/LPC54018.h	5794;"	d
I2C_INTENCLR_MONOVCLR_SHIFT	device/LPC54018.h	5795;"	d
I2C_INTENCLR_MONRDYCLR	device/LPC54018.h	5793;"	d
I2C_INTENCLR_MONRDYCLR_MASK	device/LPC54018.h	5791;"	d
I2C_INTENCLR_MONRDYCLR_SHIFT	device/LPC54018.h	5792;"	d
I2C_INTENCLR_MSTARBLOSSCLR	device/LPC54018.h	5778;"	d
I2C_INTENCLR_MSTARBLOSSCLR_MASK	device/LPC54018.h	5776;"	d
I2C_INTENCLR_MSTARBLOSSCLR_SHIFT	device/LPC54018.h	5777;"	d
I2C_INTENCLR_MSTPENDINGCLR	device/LPC54018.h	5775;"	d
I2C_INTENCLR_MSTPENDINGCLR_MASK	device/LPC54018.h	5773;"	d
I2C_INTENCLR_MSTPENDINGCLR_SHIFT	device/LPC54018.h	5774;"	d
I2C_INTENCLR_MSTSTSTPERRCLR	device/LPC54018.h	5781;"	d
I2C_INTENCLR_MSTSTSTPERRCLR_MASK	device/LPC54018.h	5779;"	d
I2C_INTENCLR_MSTSTSTPERRCLR_SHIFT	device/LPC54018.h	5780;"	d
I2C_INTENCLR_SCLTIMEOUTCLR	device/LPC54018.h	5805;"	d
I2C_INTENCLR_SCLTIMEOUTCLR_MASK	device/LPC54018.h	5803;"	d
I2C_INTENCLR_SCLTIMEOUTCLR_SHIFT	device/LPC54018.h	5804;"	d
I2C_INTENCLR_SLVDESELCLR	device/LPC54018.h	5790;"	d
I2C_INTENCLR_SLVDESELCLR_MASK	device/LPC54018.h	5788;"	d
I2C_INTENCLR_SLVDESELCLR_SHIFT	device/LPC54018.h	5789;"	d
I2C_INTENCLR_SLVNOTSTRCLR	device/LPC54018.h	5787;"	d
I2C_INTENCLR_SLVNOTSTRCLR_MASK	device/LPC54018.h	5785;"	d
I2C_INTENCLR_SLVNOTSTRCLR_SHIFT	device/LPC54018.h	5786;"	d
I2C_INTENCLR_SLVPENDINGCLR	device/LPC54018.h	5784;"	d
I2C_INTENCLR_SLVPENDINGCLR_MASK	device/LPC54018.h	5782;"	d
I2C_INTENCLR_SLVPENDINGCLR_SHIFT	device/LPC54018.h	5783;"	d
I2C_INTENSET_EVENTTIMEOUTEN	device/LPC54018.h	5761;"	d
I2C_INTENSET_EVENTTIMEOUTEN_MASK	device/LPC54018.h	5755;"	d
I2C_INTENSET_EVENTTIMEOUTEN_SHIFT	device/LPC54018.h	5756;"	d
I2C_INTENSET_MONIDLEEN	device/LPC54018.h	5754;"	d
I2C_INTENSET_MONIDLEEN_MASK	device/LPC54018.h	5748;"	d
I2C_INTENSET_MONIDLEEN_SHIFT	device/LPC54018.h	5749;"	d
I2C_INTENSET_MONOVEN	device/LPC54018.h	5747;"	d
I2C_INTENSET_MONOVEN_MASK	device/LPC54018.h	5741;"	d
I2C_INTENSET_MONOVEN_SHIFT	device/LPC54018.h	5742;"	d
I2C_INTENSET_MONRDYEN	device/LPC54018.h	5740;"	d
I2C_INTENSET_MONRDYEN_MASK	device/LPC54018.h	5734;"	d
I2C_INTENSET_MONRDYEN_SHIFT	device/LPC54018.h	5735;"	d
I2C_INTENSET_MSTARBLOSSEN	device/LPC54018.h	5705;"	d
I2C_INTENSET_MSTARBLOSSEN_MASK	device/LPC54018.h	5699;"	d
I2C_INTENSET_MSTARBLOSSEN_SHIFT	device/LPC54018.h	5700;"	d
I2C_INTENSET_MSTPENDINGEN	device/LPC54018.h	5698;"	d
I2C_INTENSET_MSTPENDINGEN_MASK	device/LPC54018.h	5692;"	d
I2C_INTENSET_MSTPENDINGEN_SHIFT	device/LPC54018.h	5693;"	d
I2C_INTENSET_MSTSTSTPERREN	device/LPC54018.h	5712;"	d
I2C_INTENSET_MSTSTSTPERREN_MASK	device/LPC54018.h	5706;"	d
I2C_INTENSET_MSTSTSTPERREN_SHIFT	device/LPC54018.h	5707;"	d
I2C_INTENSET_SCLTIMEOUTEN	device/LPC54018.h	5768;"	d
I2C_INTENSET_SCLTIMEOUTEN_MASK	device/LPC54018.h	5762;"	d
I2C_INTENSET_SCLTIMEOUTEN_SHIFT	device/LPC54018.h	5763;"	d
I2C_INTENSET_SLVDESELEN	device/LPC54018.h	5733;"	d
I2C_INTENSET_SLVDESELEN_MASK	device/LPC54018.h	5727;"	d
I2C_INTENSET_SLVDESELEN_SHIFT	device/LPC54018.h	5728;"	d
I2C_INTENSET_SLVNOTSTREN	device/LPC54018.h	5726;"	d
I2C_INTENSET_SLVNOTSTREN_MASK	device/LPC54018.h	5720;"	d
I2C_INTENSET_SLVNOTSTREN_SHIFT	device/LPC54018.h	5721;"	d
I2C_INTENSET_SLVPENDINGEN	device/LPC54018.h	5719;"	d
I2C_INTENSET_SLVPENDINGEN_MASK	device/LPC54018.h	5713;"	d
I2C_INTENSET_SLVPENDINGEN_SHIFT	device/LPC54018.h	5714;"	d
I2C_INTSTAT_EVENTTIMEOUT	device/LPC54018.h	5856;"	d
I2C_INTSTAT_EVENTTIMEOUT_MASK	device/LPC54018.h	5854;"	d
I2C_INTSTAT_EVENTTIMEOUT_SHIFT	device/LPC54018.h	5855;"	d
I2C_INTSTAT_MONIDLE	device/LPC54018.h	5853;"	d
I2C_INTSTAT_MONIDLE_MASK	device/LPC54018.h	5851;"	d
I2C_INTSTAT_MONIDLE_SHIFT	device/LPC54018.h	5852;"	d
I2C_INTSTAT_MONOV	device/LPC54018.h	5850;"	d
I2C_INTSTAT_MONOV_MASK	device/LPC54018.h	5848;"	d
I2C_INTSTAT_MONOV_SHIFT	device/LPC54018.h	5849;"	d
I2C_INTSTAT_MONRDY	device/LPC54018.h	5847;"	d
I2C_INTSTAT_MONRDY_MASK	device/LPC54018.h	5845;"	d
I2C_INTSTAT_MONRDY_SHIFT	device/LPC54018.h	5846;"	d
I2C_INTSTAT_MSTARBLOSS	device/LPC54018.h	5832;"	d
I2C_INTSTAT_MSTARBLOSS_MASK	device/LPC54018.h	5830;"	d
I2C_INTSTAT_MSTARBLOSS_SHIFT	device/LPC54018.h	5831;"	d
I2C_INTSTAT_MSTPENDING	device/LPC54018.h	5829;"	d
I2C_INTSTAT_MSTPENDING_MASK	device/LPC54018.h	5827;"	d
I2C_INTSTAT_MSTPENDING_SHIFT	device/LPC54018.h	5828;"	d
I2C_INTSTAT_MSTSTSTPERR	device/LPC54018.h	5835;"	d
I2C_INTSTAT_MSTSTSTPERR_MASK	device/LPC54018.h	5833;"	d
I2C_INTSTAT_MSTSTSTPERR_SHIFT	device/LPC54018.h	5834;"	d
I2C_INTSTAT_SCLTIMEOUT	device/LPC54018.h	5859;"	d
I2C_INTSTAT_SCLTIMEOUT_MASK	device/LPC54018.h	5857;"	d
I2C_INTSTAT_SCLTIMEOUT_SHIFT	device/LPC54018.h	5858;"	d
I2C_INTSTAT_SLVDESEL	device/LPC54018.h	5844;"	d
I2C_INTSTAT_SLVDESEL_MASK	device/LPC54018.h	5842;"	d
I2C_INTSTAT_SLVDESEL_SHIFT	device/LPC54018.h	5843;"	d
I2C_INTSTAT_SLVNOTSTR	device/LPC54018.h	5841;"	d
I2C_INTSTAT_SLVNOTSTR_MASK	device/LPC54018.h	5839;"	d
I2C_INTSTAT_SLVNOTSTR_SHIFT	device/LPC54018.h	5840;"	d
I2C_INTSTAT_SLVPENDING	device/LPC54018.h	5838;"	d
I2C_INTSTAT_SLVPENDING_MASK	device/LPC54018.h	5836;"	d
I2C_INTSTAT_SLVPENDING_SHIFT	device/LPC54018.h	5837;"	d
I2C_IRQS	device/LPC54018.h	6142;"	d
I2C_InitTransferStateMachine	drivers/fsl_i2c.c	/^static status_t I2C_InitTransferStateMachine(I2C_Type *base, i2c_master_handle_t *handle, i2c_master_transfer_t *xfer)$/;"	f	file:
I2C_InitTransferStateMachineDMA	drivers/fsl_i2c_dma.c	/^static status_t I2C_InitTransferStateMachineDMA(I2C_Type *base,$/;"	f	file:
I2C_InterruptControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_InterruptControl(uint32_t control, uint32_t arg, cmsis_i2c_interrupt_driver_state_t *i2c)$/;"	f
I2C_InterruptGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_InterruptGetDataCount(cmsis_i2c_interrupt_driver_state_t *i2c)$/;"	f
I2C_InterruptGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C_InterruptGetStatus(cmsis_i2c_interrupt_driver_state_t *i2c)$/;"	f
I2C_InterruptInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C_InterruptInitialize(ARM_I2C_SignalEvent_t cb_event, cmsis_i2c_interrupt_driver_state_t *i2c)$/;"	f	file:
I2C_InterruptPowerControl	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C_InterruptPowerControl(ARM_POWER_STATE state, cmsis_i2c_interrupt_driver_state_t *i2c)$/;"	f	file:
I2C_InterruptUninitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C_InterruptUninitialize(cmsis_i2c_interrupt_driver_state_t *i2c)$/;"	f	file:
I2C_MAX_DMA_TRANSFER_COUNT	drivers/fsl_i2c_dma.h	30;"	d
I2C_MONRXDAT_MONNACK	device/LPC54018.h	6071;"	d
I2C_MONRXDAT_MONNACK_MASK	device/LPC54018.h	6065;"	d
I2C_MONRXDAT_MONNACK_SHIFT	device/LPC54018.h	6066;"	d
I2C_MONRXDAT_MONRESTART	device/LPC54018.h	6064;"	d
I2C_MONRXDAT_MONRESTART_MASK	device/LPC54018.h	6058;"	d
I2C_MONRXDAT_MONRESTART_SHIFT	device/LPC54018.h	6059;"	d
I2C_MONRXDAT_MONRXDAT	device/LPC54018.h	6050;"	d
I2C_MONRXDAT_MONRXDAT_MASK	device/LPC54018.h	6048;"	d
I2C_MONRXDAT_MONRXDAT_SHIFT	device/LPC54018.h	6049;"	d
I2C_MONRXDAT_MONSTART	device/LPC54018.h	6057;"	d
I2C_MONRXDAT_MONSTART_MASK	device/LPC54018.h	6051;"	d
I2C_MONRXDAT_MONSTART_SHIFT	device/LPC54018.h	6052;"	d
I2C_MSTCTL_MSTCONTINUE	device/LPC54018.h	5871;"	d
I2C_MSTCTL_MSTCONTINUE_MASK	device/LPC54018.h	5864;"	d
I2C_MSTCTL_MSTCONTINUE_SHIFT	device/LPC54018.h	5865;"	d
I2C_MSTCTL_MSTDMA	device/LPC54018.h	5900;"	d
I2C_MSTCTL_MSTDMA_MASK	device/LPC54018.h	5887;"	d
I2C_MSTCTL_MSTDMA_SHIFT	device/LPC54018.h	5888;"	d
I2C_MSTCTL_MSTSTART	device/LPC54018.h	5878;"	d
I2C_MSTCTL_MSTSTART_MASK	device/LPC54018.h	5872;"	d
I2C_MSTCTL_MSTSTART_SHIFT	device/LPC54018.h	5873;"	d
I2C_MSTCTL_MSTSTOP	device/LPC54018.h	5886;"	d
I2C_MSTCTL_MSTSTOP_MASK	device/LPC54018.h	5879;"	d
I2C_MSTCTL_MSTSTOP_SHIFT	device/LPC54018.h	5880;"	d
I2C_MSTDAT_DATA	device/LPC54018.h	5943;"	d
I2C_MSTDAT_DATA_MASK	device/LPC54018.h	5941;"	d
I2C_MSTDAT_DATA_SHIFT	device/LPC54018.h	5942;"	d
I2C_MSTTIME_MSTSCLHIGH	device/LPC54018.h	5936;"	d
I2C_MSTTIME_MSTSCLHIGH_MASK	device/LPC54018.h	5921;"	d
I2C_MSTTIME_MSTSCLHIGH_SHIFT	device/LPC54018.h	5922;"	d
I2C_MSTTIME_MSTSCLLOW	device/LPC54018.h	5920;"	d
I2C_MSTTIME_MSTSCLLOW_MASK	device/LPC54018.h	5905;"	d
I2C_MSTTIME_MSTSCLLOW_SHIFT	device/LPC54018.h	5906;"	d
I2C_MasterClearStatusFlags	drivers/fsl_i2c.h	/^static inline void I2C_MasterClearStatusFlags(I2C_Type *base, uint32_t statusMask)$/;"	f
I2C_MasterDeinit	drivers/fsl_i2c.c	/^void I2C_MasterDeinit(I2C_Type *base)$/;"	f
I2C_MasterEnable	drivers/fsl_i2c.h	/^static inline void I2C_MasterEnable(I2C_Type *base, bool enable)$/;"	f
I2C_MasterGetBusIdleState	drivers/fsl_i2c.h	/^static inline bool I2C_MasterGetBusIdleState(I2C_Type *base)$/;"	f
I2C_MasterGetDefaultConfig	drivers/fsl_i2c.c	/^void I2C_MasterGetDefaultConfig(i2c_master_config_t *masterConfig)$/;"	f
I2C_MasterInit	drivers/fsl_i2c.c	/^void I2C_MasterInit(I2C_Type *base, const i2c_master_config_t *masterConfig, uint32_t srcClock_Hz)$/;"	f
I2C_MasterReadBlocking	drivers/fsl_i2c.c	/^status_t I2C_MasterReadBlocking(I2C_Type *base, void *rxBuff, size_t rxSize, uint32_t flags)$/;"	f
I2C_MasterRepeatedStart	drivers/fsl_i2c.h	/^static inline status_t I2C_MasterRepeatedStart(I2C_Type *base, uint8_t address, i2c_direction_t direction)$/;"	f
I2C_MasterReset	drivers/fsl_i2c.h	/^static inline void I2C_MasterReset(I2C_Type *base)$/;"	f
I2C_MasterSetBaudRate	drivers/fsl_i2c.c	/^void I2C_MasterSetBaudRate(I2C_Type *base, uint32_t baudRate_Bps, uint32_t srcClock_Hz)$/;"	f
I2C_MasterStart	drivers/fsl_i2c.c	/^status_t I2C_MasterStart(I2C_Type *base, uint8_t address, i2c_direction_t direction)$/;"	f
I2C_MasterStop	drivers/fsl_i2c.c	/^status_t I2C_MasterStop(I2C_Type *base)$/;"	f
I2C_MasterTransferAbort	drivers/fsl_i2c.c	/^status_t I2C_MasterTransferAbort(I2C_Type *base, i2c_master_handle_t *handle)$/;"	f
I2C_MasterTransferAbortDMA	drivers/fsl_i2c_dma.c	/^void I2C_MasterTransferAbortDMA(I2C_Type *base, i2c_master_dma_handle_t *handle)$/;"	f
I2C_MasterTransferBlocking	drivers/fsl_i2c.c	/^status_t I2C_MasterTransferBlocking(I2C_Type *base, i2c_master_transfer_t *xfer)$/;"	f
I2C_MasterTransferCallbackDMA	drivers/fsl_i2c_dma.c	/^static void I2C_MasterTransferCallbackDMA(dma_handle_t *handle, void *userData)$/;"	f	file:
I2C_MasterTransferCreateHandle	drivers/fsl_i2c.c	/^void I2C_MasterTransferCreateHandle(I2C_Type *base,$/;"	f
I2C_MasterTransferCreateHandleDMA	drivers/fsl_i2c_dma.c	/^void I2C_MasterTransferCreateHandleDMA(I2C_Type *base,$/;"	f
I2C_MasterTransferDMA	drivers/fsl_i2c_dma.c	/^status_t I2C_MasterTransferDMA(I2C_Type *base, i2c_master_dma_handle_t *handle, i2c_master_transfer_t *xfer)$/;"	f
I2C_MasterTransferDMAHandleIRQ	drivers/fsl_i2c_dma.c	/^void I2C_MasterTransferDMAHandleIRQ(I2C_Type *base, i2c_master_dma_handle_t *handle)$/;"	f
I2C_MasterTransferGetCount	drivers/fsl_i2c.c	/^status_t I2C_MasterTransferGetCount(I2C_Type *base, i2c_master_handle_t *handle, size_t *count)$/;"	f
I2C_MasterTransferGetCountDMA	drivers/fsl_i2c_dma.c	/^status_t I2C_MasterTransferGetCountDMA(I2C_Type *base, i2c_master_dma_handle_t *handle, size_t *count)$/;"	f
I2C_MasterTransferHandleIRQ	drivers/fsl_i2c.c	/^void I2C_MasterTransferHandleIRQ(I2C_Type *base, i2c_master_handle_t *handle)$/;"	f
I2C_MasterTransferNonBlocking	drivers/fsl_i2c.c	/^status_t I2C_MasterTransferNonBlocking(I2C_Type *base, i2c_master_handle_t *handle, i2c_master_transfer_t *xfer)$/;"	f
I2C_MasterWriteBlocking	drivers/fsl_i2c.c	/^status_t I2C_MasterWriteBlocking(I2C_Type *base, const void *txBuff, size_t txSize, uint32_t flags)$/;"	f
I2C_Master_DmaControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Master_DmaControl(uint32_t control, uint32_t arg, cmsis_i2c_dma_driver_state_t *i2c)$/;"	f
I2C_Master_DmaGetDataCount	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Master_DmaGetDataCount(cmsis_i2c_dma_driver_state_t *i2c)$/;"	f
I2C_Master_DmaGetStatus	drivers/fsl_i2c_cmsis.c	/^ARM_I2C_STATUS I2C_Master_DmaGetStatus(cmsis_i2c_dma_driver_state_t *i2c)$/;"	f
I2C_Master_DmaInitialize	drivers/fsl_i2c_cmsis.c	/^static int32_t I2C_Master_DmaInitialize(ARM_I2C_SignalEvent_t cb_event, cmsis_i2c_dma_driver_state_t *i2c)$/;"	f	file:
I2C_Master_DmaPowerControl	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Master_DmaPowerControl(ARM_POWER_STATE state, cmsis_i2c_dma_driver_state_t *i2c)$/;"	f
I2C_Master_DmaReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Master_DmaReceive($/;"	f
I2C_Master_DmaTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Master_DmaTransmit($/;"	f
I2C_Master_DmaUninitialize	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Master_DmaUninitialize(cmsis_i2c_dma_driver_state_t *i2c)$/;"	f
I2C_Master_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Master_InterruptReceive($/;"	f
I2C_Master_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Master_InterruptTransmit($/;"	f
I2C_PendingStatusWait	drivers/fsl_i2c.c	/^static uint32_t I2C_PendingStatusWait(I2C_Type *base)$/;"	f	file:
I2C_RETRY_TIMES	drivers/fsl_i2c.h	36;"	d
I2C_RTOS_Callback	drivers/freertos/fsl_i2c_freertos.c	/^static void I2C_RTOS_Callback(I2C_Type *base, i2c_master_handle_t *drv_handle, status_t status, void *userData)$/;"	f	file:
I2C_RTOS_Deinit	drivers/freertos/fsl_i2c_freertos.c	/^status_t I2C_RTOS_Deinit(i2c_rtos_handle_t *handle)$/;"	f
I2C_RTOS_Init	drivers/freertos/fsl_i2c_freertos.c	/^status_t I2C_RTOS_Init(i2c_rtos_handle_t *handle,$/;"	f
I2C_RTOS_Transfer	drivers/freertos/fsl_i2c_freertos.c	/^status_t I2C_RTOS_Transfer(i2c_rtos_handle_t *handle, i2c_master_transfer_t *transfer)$/;"	f
I2C_RunDMATransfer	drivers/fsl_i2c_dma.c	/^static void I2C_RunDMATransfer(I2C_Type *base, i2c_master_dma_handle_t *handle)$/;"	f	file:
I2C_RunTransferStateMachine	drivers/fsl_i2c.c	/^static status_t I2C_RunTransferStateMachine(I2C_Type *base, i2c_master_handle_t *handle, bool *isDone)$/;"	f	file:
I2C_RunTransferStateMachineDMA	drivers/fsl_i2c_dma.c	/^static status_t I2C_RunTransferStateMachineDMA(I2C_Type *base, i2c_master_dma_handle_t *handle, bool *isDone)$/;"	f	file:
I2C_SLVADR_AUTONACK	device/LPC54018.h	6026;"	d
I2C_SLVADR_AUTONACK_MASK	device/LPC54018.h	6018;"	d
I2C_SLVADR_AUTONACK_SHIFT	device/LPC54018.h	6019;"	d
I2C_SLVADR_COUNT	device/LPC54018.h	6030;"	d
I2C_SLVADR_SADISABLE	device/LPC54018.h	6014;"	d
I2C_SLVADR_SADISABLE_MASK	device/LPC54018.h	6008;"	d
I2C_SLVADR_SADISABLE_SHIFT	device/LPC54018.h	6009;"	d
I2C_SLVADR_SLVADR	device/LPC54018.h	6017;"	d
I2C_SLVADR_SLVADR_MASK	device/LPC54018.h	6015;"	d
I2C_SLVADR_SLVADR_SHIFT	device/LPC54018.h	6016;"	d
I2C_SLVCTL_AUTOACK	device/LPC54018.h	5986;"	d
I2C_SLVCTL_AUTOACK_MASK	device/LPC54018.h	5972;"	d
I2C_SLVCTL_AUTOACK_SHIFT	device/LPC54018.h	5973;"	d
I2C_SLVCTL_AUTOMATCHREAD	device/LPC54018.h	5996;"	d
I2C_SLVCTL_AUTOMATCHREAD_MASK	device/LPC54018.h	5987;"	d
I2C_SLVCTL_AUTOMATCHREAD_SHIFT	device/LPC54018.h	5988;"	d
I2C_SLVCTL_SLVCONTINUE	device/LPC54018.h	5957;"	d
I2C_SLVCTL_SLVCONTINUE_MASK	device/LPC54018.h	5948;"	d
I2C_SLVCTL_SLVCONTINUE_SHIFT	device/LPC54018.h	5949;"	d
I2C_SLVCTL_SLVDMA	device/LPC54018.h	5971;"	d
I2C_SLVCTL_SLVDMA_MASK	device/LPC54018.h	5965;"	d
I2C_SLVCTL_SLVDMA_SHIFT	device/LPC54018.h	5966;"	d
I2C_SLVCTL_SLVNACK	device/LPC54018.h	5964;"	d
I2C_SLVCTL_SLVNACK_MASK	device/LPC54018.h	5958;"	d
I2C_SLVCTL_SLVNACK_SHIFT	device/LPC54018.h	5959;"	d
I2C_SLVDAT_DATA	device/LPC54018.h	6003;"	d
I2C_SLVDAT_DATA_MASK	device/LPC54018.h	6001;"	d
I2C_SLVDAT_DATA_SHIFT	device/LPC54018.h	6002;"	d
I2C_SLVQUAL0_QUALMODE0	device/LPC54018.h	6040;"	d
I2C_SLVQUAL0_QUALMODE0_MASK	device/LPC54018.h	6034;"	d
I2C_SLVQUAL0_QUALMODE0_SHIFT	device/LPC54018.h	6035;"	d
I2C_SLVQUAL0_SLVQUAL0	device/LPC54018.h	6043;"	d
I2C_SLVQUAL0_SLVQUAL0_MASK	device/LPC54018.h	6041;"	d
I2C_SLVQUAL0_SLVQUAL0_SHIFT	device/LPC54018.h	6042;"	d
I2C_STAT_EVENTTIMEOUT	device/LPC54018.h	5679;"	d
I2C_STAT_EVENTTIMEOUT_MASK	device/LPC54018.h	5670;"	d
I2C_STAT_EVENTTIMEOUT_SHIFT	device/LPC54018.h	5671;"	d
I2C_STAT_MONACTIVE	device/LPC54018.h	5659;"	d
I2C_STAT_MONACTIVE_MASK	device/LPC54018.h	5651;"	d
I2C_STAT_MONACTIVE_SHIFT	device/LPC54018.h	5652;"	d
I2C_STAT_MONIDLE	device/LPC54018.h	5669;"	d
I2C_STAT_MONIDLE_MASK	device/LPC54018.h	5660;"	d
I2C_STAT_MONIDLE_SHIFT	device/LPC54018.h	5661;"	d
I2C_STAT_MONOV	device/LPC54018.h	5650;"	d
I2C_STAT_MONOV_MASK	device/LPC54018.h	5643;"	d
I2C_STAT_MONOV_SHIFT	device/LPC54018.h	5644;"	d
I2C_STAT_MONRDY	device/LPC54018.h	5642;"	d
I2C_STAT_MONRDY_MASK	device/LPC54018.h	5636;"	d
I2C_STAT_MONRDY_SHIFT	device/LPC54018.h	5637;"	d
I2C_STAT_MSTARBLOSS	device/LPC54018.h	5553;"	d
I2C_STAT_MSTARBLOSS_MASK	device/LPC54018.h	5544;"	d
I2C_STAT_MSTARBLOSS_SHIFT	device/LPC54018.h	5545;"	d
I2C_STAT_MSTCODE_IDLE	drivers/fsl_i2c.h	40;"	d
I2C_STAT_MSTCODE_NACKADR	drivers/fsl_i2c.h	43;"	d
I2C_STAT_MSTCODE_NACKDAT	drivers/fsl_i2c.h	44;"	d
I2C_STAT_MSTCODE_RXREADY	drivers/fsl_i2c.h	41;"	d
I2C_STAT_MSTCODE_TXREADY	drivers/fsl_i2c.h	42;"	d
I2C_STAT_MSTPENDING	device/LPC54018.h	5530;"	d
I2C_STAT_MSTPENDING_MASK	device/LPC54018.h	5518;"	d
I2C_STAT_MSTPENDING_SHIFT	device/LPC54018.h	5519;"	d
I2C_STAT_MSTSTATE	device/LPC54018.h	5543;"	d
I2C_STAT_MSTSTATE_MASK	device/LPC54018.h	5531;"	d
I2C_STAT_MSTSTATE_SHIFT	device/LPC54018.h	5532;"	d
I2C_STAT_MSTSTSTPERR	device/LPC54018.h	5564;"	d
I2C_STAT_MSTSTSTPERR_MASK	device/LPC54018.h	5554;"	d
I2C_STAT_MSTSTSTPERR_SHIFT	device/LPC54018.h	5555;"	d
I2C_STAT_SCLTIMEOUT	device/LPC54018.h	5687;"	d
I2C_STAT_SCLTIMEOUT_MASK	device/LPC54018.h	5680;"	d
I2C_STAT_SCLTIMEOUT_SHIFT	device/LPC54018.h	5681;"	d
I2C_STAT_SLVDESEL	device/LPC54018.h	5635;"	d
I2C_STAT_SLVDESEL_MASK	device/LPC54018.h	5626;"	d
I2C_STAT_SLVDESEL_SHIFT	device/LPC54018.h	5627;"	d
I2C_STAT_SLVIDX	device/LPC54018.h	5613;"	d
I2C_STAT_SLVIDX_MASK	device/LPC54018.h	5602;"	d
I2C_STAT_SLVIDX_SHIFT	device/LPC54018.h	5603;"	d
I2C_STAT_SLVNOTSTR	device/LPC54018.h	5601;"	d
I2C_STAT_SLVNOTSTR_MASK	device/LPC54018.h	5592;"	d
I2C_STAT_SLVNOTSTR_SHIFT	device/LPC54018.h	5593;"	d
I2C_STAT_SLVPENDING	device/LPC54018.h	5580;"	d
I2C_STAT_SLVPENDING_MASK	device/LPC54018.h	5565;"	d
I2C_STAT_SLVPENDING_SHIFT	device/LPC54018.h	5566;"	d
I2C_STAT_SLVSEL	device/LPC54018.h	5625;"	d
I2C_STAT_SLVSEL_MASK	device/LPC54018.h	5614;"	d
I2C_STAT_SLVSEL_SHIFT	device/LPC54018.h	5615;"	d
I2C_STAT_SLVSTATE	device/LPC54018.h	5591;"	d
I2C_STAT_SLVSTATE_MASK	device/LPC54018.h	5581;"	d
I2C_STAT_SLVSTATE_SHIFT	device/LPC54018.h	5582;"	d
I2C_STAT_SLVST_ADDR	drivers/fsl_i2c.h	47;"	d
I2C_STAT_SLVST_RX	drivers/fsl_i2c.h	48;"	d
I2C_STAT_SLVST_TX	drivers/fsl_i2c.h	49;"	d
I2C_SlaveAddressIRQ	drivers/fsl_i2c.c	/^static bool I2C_SlaveAddressIRQ(I2C_Type *base, i2c_slave_handle_t *handle)$/;"	f	file:
I2C_SlaveClearStatusFlags	drivers/fsl_i2c.h	/^static inline void I2C_SlaveClearStatusFlags(I2C_Type *base, uint32_t statusMask)$/;"	f
I2C_SlaveDeinit	drivers/fsl_i2c.c	/^void I2C_SlaveDeinit(I2C_Type *base)$/;"	f
I2C_SlaveDivVal	drivers/fsl_i2c.c	/^static status_t I2C_SlaveDivVal(uint32_t srcClock_Hz, i2c_slave_bus_speed_t busSpeed, uint32_t *divVal)$/;"	f	file:
I2C_SlaveEnable	drivers/fsl_i2c.h	/^static inline void I2C_SlaveEnable(I2C_Type *base, bool enable)$/;"	f
I2C_SlaveGetDefaultConfig	drivers/fsl_i2c.c	/^void I2C_SlaveGetDefaultConfig(i2c_slave_config_t *slaveConfig)$/;"	f
I2C_SlaveGetReceivedAddress	drivers/fsl_i2c.h	/^static inline uint32_t I2C_SlaveGetReceivedAddress(I2C_Type *base, volatile i2c_slave_transfer_t *transfer)$/;"	f
I2C_SlaveInit	drivers/fsl_i2c.c	/^status_t I2C_SlaveInit(I2C_Type *base, const i2c_slave_config_t *slaveConfig, uint32_t srcClock_Hz)$/;"	f
I2C_SlaveInternalStateMachineReset	drivers/fsl_i2c.c	/^static void I2C_SlaveInternalStateMachineReset(I2C_Type *base)$/;"	f	file:
I2C_SlaveInvokeEvent	drivers/fsl_i2c.c	/^static void I2C_SlaveInvokeEvent(I2C_Type *base, i2c_slave_handle_t *handle, i2c_slave_transfer_event_t event)$/;"	f	file:
I2C_SlavePollPending	drivers/fsl_i2c.c	/^static uint32_t I2C_SlavePollPending(I2C_Type *base)$/;"	f	file:
I2C_SlaveReadBlocking	drivers/fsl_i2c.c	/^status_t I2C_SlaveReadBlocking(I2C_Type *base, uint8_t *rxBuff, size_t rxSize)$/;"	f
I2C_SlaveSetAddress	drivers/fsl_i2c.c	/^void I2C_SlaveSetAddress(I2C_Type *base,$/;"	f
I2C_SlaveSetReceiveBuffer	drivers/fsl_i2c.c	/^status_t I2C_SlaveSetReceiveBuffer($/;"	f
I2C_SlaveSetSendBuffer	drivers/fsl_i2c.c	/^status_t I2C_SlaveSetSendBuffer($/;"	f
I2C_SlaveTransferAbort	drivers/fsl_i2c.c	/^void I2C_SlaveTransferAbort(I2C_Type *base, i2c_slave_handle_t *handle)$/;"	f
I2C_SlaveTransferCreateHandle	drivers/fsl_i2c.c	/^void I2C_SlaveTransferCreateHandle(I2C_Type *base,$/;"	f
I2C_SlaveTransferGetCount	drivers/fsl_i2c.c	/^status_t I2C_SlaveTransferGetCount(I2C_Type *base, i2c_slave_handle_t *handle, size_t *count)$/;"	f
I2C_SlaveTransferHandleIRQ	drivers/fsl_i2c.c	/^void I2C_SlaveTransferHandleIRQ(I2C_Type *base, i2c_slave_handle_t *handle)$/;"	f
I2C_SlaveTransferNonBlocking	drivers/fsl_i2c.c	/^status_t I2C_SlaveTransferNonBlocking(I2C_Type *base, i2c_slave_handle_t *handle, uint32_t eventMask)$/;"	f
I2C_SlaveTransferNonBlockingInternal	drivers/fsl_i2c.c	/^static status_t I2C_SlaveTransferNonBlockingInternal(I2C_Type *base,$/;"	f	file:
I2C_SlaveWriteBlocking	drivers/fsl_i2c.c	/^status_t I2C_SlaveWriteBlocking(I2C_Type *base, const uint8_t *txBuff, size_t txSize)$/;"	f
I2C_Slave_InterruptReceive	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Slave_InterruptReceive(uint8_t *data, uint32_t num, cmsis_i2c_interrupt_driver_state_t *i2c)$/;"	f
I2C_Slave_InterruptTransmit	drivers/fsl_i2c_cmsis.c	/^int32_t I2C_Slave_InterruptTransmit(const uint8_t *data, uint32_t num, cmsis_i2c_interrupt_driver_state_t *i2c)$/;"	f
I2C_TIMEOUT_TO	device/LPC54018.h	5815;"	d
I2C_TIMEOUT_TOMIN	device/LPC54018.h	5812;"	d
I2C_TIMEOUT_TOMIN_MASK	device/LPC54018.h	5810;"	d
I2C_TIMEOUT_TOMIN_SHIFT	device/LPC54018.h	5811;"	d
I2C_TIMEOUT_TO_MASK	device/LPC54018.h	5813;"	d
I2C_TIMEOUT_TO_SHIFT	device/LPC54018.h	5814;"	d
I2C_Type	device/LPC54018.h	/^} I2C_Type;$/;"	t	typeref:struct:__anon160
I2Cx_GetCapabilities	drivers/fsl_i2c_cmsis.c	/^static ARM_I2C_CAPABILITIES I2Cx_GetCapabilities(void)$/;"	f	file:
I2Cx_GetVersion	drivers/fsl_i2c_cmsis.c	/^static ARM_DRIVER_VERSION I2Cx_GetVersion(void)$/;"	f	file:
I2S0	device/LPC54018.h	6705;"	d
I2S0_BASE	device/LPC54018.h	6703;"	d
I2S1	device/LPC54018.h	6709;"	d
I2S1_BASE	device/LPC54018.h	6707;"	d
I2S_AddTransferDMA	drivers/fsl_i2s_dma.c	/^static void I2S_AddTransferDMA(I2S_Type *base, i2s_dma_handle_t *handle)$/;"	f	file:
I2S_BASE_ADDRS	device/LPC54018.h	6711;"	d
I2S_BASE_PTRS	device/LPC54018.h	6713;"	d
I2S_CFG1_DATALEN	device/LPC54018.h	6328;"	d
I2S_CFG1_DATALEN_MASK	device/LPC54018.h	6326;"	d
I2S_CFG1_DATALEN_SHIFT	device/LPC54018.h	6327;"	d
I2S_CFG1_DATAPAUSE	device/LPC54018.h	6225;"	d
I2S_CFG1_DATAPAUSE_MASK	device/LPC54018.h	6212;"	d
I2S_CFG1_DATAPAUSE_SHIFT	device/LPC54018.h	6213;"	d
I2S_CFG1_LEFTJUST	device/LPC54018.h	6286;"	d
I2S_CFG1_LEFTJUST_MASK	device/LPC54018.h	6276;"	d
I2S_CFG1_LEFTJUST_SHIFT	device/LPC54018.h	6277;"	d
I2S_CFG1_MAINENABLE	device/LPC54018.h	6211;"	d
I2S_CFG1_MAINENABLE_MASK	device/LPC54018.h	6204;"	d
I2S_CFG1_MAINENABLE_SHIFT	device/LPC54018.h	6205;"	d
I2S_CFG1_MODE	device/LPC54018.h	6261;"	d
I2S_CFG1_MODE_MASK	device/LPC54018.h	6248;"	d
I2S_CFG1_MODE_SHIFT	device/LPC54018.h	6249;"	d
I2S_CFG1_MSTSLVCFG	device/LPC54018.h	6247;"	d
I2S_CFG1_MSTSLVCFG_MASK	device/LPC54018.h	6238;"	d
I2S_CFG1_MSTSLVCFG_SHIFT	device/LPC54018.h	6239;"	d
I2S_CFG1_ONECHANNEL	device/LPC54018.h	6300;"	d
I2S_CFG1_ONECHANNEL_MASK	device/LPC54018.h	6287;"	d
I2S_CFG1_ONECHANNEL_SHIFT	device/LPC54018.h	6288;"	d
I2S_CFG1_PAIRCOUNT	device/LPC54018.h	6237;"	d
I2S_CFG1_PAIRCOUNT_MASK	device/LPC54018.h	6226;"	d
I2S_CFG1_PAIRCOUNT_SHIFT	device/LPC54018.h	6227;"	d
I2S_CFG1_PDMDATA	device/LPC54018.h	6311;"	d
I2S_CFG1_PDMDATA_MASK	device/LPC54018.h	6301;"	d
I2S_CFG1_PDMDATA_SHIFT	device/LPC54018.h	6302;"	d
I2S_CFG1_RIGHTLOW	device/LPC54018.h	6275;"	d
I2S_CFG1_RIGHTLOW_MASK	device/LPC54018.h	6262;"	d
I2S_CFG1_RIGHTLOW_SHIFT	device/LPC54018.h	6263;"	d
I2S_CFG1_SCK_POL	device/LPC54018.h	6318;"	d
I2S_CFG1_SCK_POL_MASK	device/LPC54018.h	6312;"	d
I2S_CFG1_SCK_POL_SHIFT	device/LPC54018.h	6313;"	d
I2S_CFG1_WS_POL	device/LPC54018.h	6325;"	d
I2S_CFG1_WS_POL_MASK	device/LPC54018.h	6319;"	d
I2S_CFG1_WS_POL_SHIFT	device/LPC54018.h	6320;"	d
I2S_CFG2_FRAMELEN	device/LPC54018.h	6335;"	d
I2S_CFG2_FRAMELEN_MASK	device/LPC54018.h	6333;"	d
I2S_CFG2_FRAMELEN_SHIFT	device/LPC54018.h	6334;"	d
I2S_CFG2_POSITION	device/LPC54018.h	6338;"	d
I2S_CFG2_POSITION_MASK	device/LPC54018.h	6336;"	d
I2S_CFG2_POSITION_SHIFT	device/LPC54018.h	6337;"	d
I2S_CLOCK_DIVIDER	source/i2s_transfer.c	51;"	d	file:
I2S_Config	drivers/fsl_i2s.c	/^static void I2S_Config(I2S_Type *base, const i2s_config_t *config)$/;"	f	file:
I2S_DIV_DIV	device/LPC54018.h	6382;"	d
I2S_DIV_DIV_MASK	device/LPC54018.h	6380;"	d
I2S_DIV_DIV_SHIFT	device/LPC54018.h	6381;"	d
I2S_DMACallback	drivers/fsl_i2s_dma.c	/^void I2S_DMACallback(dma_handle_t *handle, void *userData, bool transferDone, uint32_t tcds)$/;"	f
I2S_Deinit	drivers/fsl_i2s.c	/^void I2S_Deinit(I2S_Type *base)$/;"	f
I2S_Disable	drivers/fsl_i2s.h	/^static inline void I2S_Disable(I2S_Type *base)$/;"	f
I2S_DisableDMAInterrupts	drivers/fsl_i2s_dma.c	/^static inline void I2S_DisableDMAInterrupts(i2s_dma_handle_t *handle)$/;"	f	file:
I2S_DisableInterrupts	drivers/fsl_i2s.h	/^static inline void I2S_DisableInterrupts(I2S_Type *base, uint32_t interruptMask)$/;"	f
I2S_DisableSecondaryChannel	drivers/fsl_i2s.h	/^static inline void I2S_DisableSecondaryChannel(I2S_Type *base, uint32_t channel)$/;"	f
I2S_Enable	drivers/fsl_i2s.h	/^static inline void I2S_Enable(I2S_Type *base)$/;"	f
I2S_EnableDMAInterrupts	drivers/fsl_i2s_dma.c	/^static inline void I2S_EnableDMAInterrupts(i2s_dma_handle_t *handle)$/;"	f	file:
I2S_EnableInterrupts	drivers/fsl_i2s.h	/^static inline void I2S_EnableInterrupts(I2S_Type *base, uint32_t interruptMask)$/;"	f
I2S_EnableSecondaryChannel	drivers/fsl_i2s.c	/^void I2S_EnableSecondaryChannel(I2S_Type *base, uint32_t channel, bool oneChannel, uint32_t position)$/;"	f
I2S_EnqueueUserBuffer	drivers/fsl_i2s_dma.c	/^static status_t I2S_EnqueueUserBuffer(I2S_Type *base, i2s_dma_handle_t *handle, i2s_transfer_t transfer)$/;"	f	file:
I2S_FIFOCFG_DMARX	device/LPC54018.h	6476;"	d
I2S_FIFOCFG_DMARX_MASK	device/LPC54018.h	6470;"	d
I2S_FIFOCFG_DMARX_SHIFT	device/LPC54018.h	6471;"	d
I2S_FIFOCFG_DMATX	device/LPC54018.h	6469;"	d
I2S_FIFOCFG_DMATX_MASK	device/LPC54018.h	6463;"	d
I2S_FIFOCFG_DMATX_SHIFT	device/LPC54018.h	6464;"	d
I2S_FIFOCFG_EMPTYRX	device/LPC54018.h	6506;"	d
I2S_FIFOCFG_EMPTYRX_MASK	device/LPC54018.h	6504;"	d
I2S_FIFOCFG_EMPTYRX_SHIFT	device/LPC54018.h	6505;"	d
I2S_FIFOCFG_EMPTYTX	device/LPC54018.h	6503;"	d
I2S_FIFOCFG_EMPTYTX_MASK	device/LPC54018.h	6501;"	d
I2S_FIFOCFG_EMPTYTX_SHIFT	device/LPC54018.h	6502;"	d
I2S_FIFOCFG_ENABLERX	device/LPC54018.h	6442;"	d
I2S_FIFOCFG_ENABLERX_MASK	device/LPC54018.h	6436;"	d
I2S_FIFOCFG_ENABLERX_SHIFT	device/LPC54018.h	6437;"	d
I2S_FIFOCFG_ENABLETX	device/LPC54018.h	6435;"	d
I2S_FIFOCFG_ENABLETX_MASK	device/LPC54018.h	6429;"	d
I2S_FIFOCFG_ENABLETX_SHIFT	device/LPC54018.h	6430;"	d
I2S_FIFOCFG_PACK48	device/LPC54018.h	6459;"	d
I2S_FIFOCFG_PACK48	drivers/fsl_i2s.c	28;"	d	file:
I2S_FIFOCFG_PACK48_MASK	device/LPC54018.h	6453;"	d
I2S_FIFOCFG_PACK48_MASK	drivers/fsl_i2s.c	26;"	d	file:
I2S_FIFOCFG_PACK48_SHIFT	device/LPC54018.h	6454;"	d
I2S_FIFOCFG_PACK48_SHIFT	drivers/fsl_i2s.c	27;"	d	file:
I2S_FIFOCFG_SIZE	device/LPC54018.h	6462;"	d
I2S_FIFOCFG_SIZE_MASK	device/LPC54018.h	6460;"	d
I2S_FIFOCFG_SIZE_SHIFT	device/LPC54018.h	6461;"	d
I2S_FIFOCFG_TXI2SE0	device/LPC54018.h	6452;"	d
I2S_FIFOCFG_TXI2SE0	drivers/fsl_i2s.c	25;"	d	file:
I2S_FIFOCFG_TXI2SE0_MASK	device/LPC54018.h	6443;"	d
I2S_FIFOCFG_TXI2SE0_MASK	drivers/fsl_i2s.c	23;"	d	file:
I2S_FIFOCFG_TXI2SE0_SHIFT	device/LPC54018.h	6444;"	d
I2S_FIFOCFG_TXI2SE0_SHIFT	drivers/fsl_i2s.c	24;"	d	file:
I2S_FIFOCFG_WAKERX	device/LPC54018.h	6500;"	d
I2S_FIFOCFG_WAKERX_MASK	device/LPC54018.h	6489;"	d
I2S_FIFOCFG_WAKERX_SHIFT	device/LPC54018.h	6490;"	d
I2S_FIFOCFG_WAKETX	device/LPC54018.h	6488;"	d
I2S_FIFOCFG_WAKETX_MASK	device/LPC54018.h	6477;"	d
I2S_FIFOCFG_WAKETX_SHIFT	device/LPC54018.h	6478;"	d
I2S_FIFOINTENCLR_RXERR	device/LPC54018.h	6609;"	d
I2S_FIFOINTENCLR_RXERR_MASK	device/LPC54018.h	6607;"	d
I2S_FIFOINTENCLR_RXERR_SHIFT	device/LPC54018.h	6608;"	d
I2S_FIFOINTENCLR_RXLVL	device/LPC54018.h	6615;"	d
I2S_FIFOINTENCLR_RXLVL_MASK	device/LPC54018.h	6613;"	d
I2S_FIFOINTENCLR_RXLVL_SHIFT	device/LPC54018.h	6614;"	d
I2S_FIFOINTENCLR_TXERR	device/LPC54018.h	6606;"	d
I2S_FIFOINTENCLR_TXERR_MASK	device/LPC54018.h	6604;"	d
I2S_FIFOINTENCLR_TXERR_SHIFT	device/LPC54018.h	6605;"	d
I2S_FIFOINTENCLR_TXLVL	device/LPC54018.h	6612;"	d
I2S_FIFOINTENCLR_TXLVL_MASK	device/LPC54018.h	6610;"	d
I2S_FIFOINTENCLR_TXLVL_SHIFT	device/LPC54018.h	6611;"	d
I2S_FIFOINTENSET_RXERR	device/LPC54018.h	6581;"	d
I2S_FIFOINTENSET_RXERR_MASK	device/LPC54018.h	6575;"	d
I2S_FIFOINTENSET_RXERR_SHIFT	device/LPC54018.h	6576;"	d
I2S_FIFOINTENSET_RXLVL	device/LPC54018.h	6599;"	d
I2S_FIFOINTENSET_RXLVL_MASK	device/LPC54018.h	6591;"	d
I2S_FIFOINTENSET_RXLVL_SHIFT	device/LPC54018.h	6592;"	d
I2S_FIFOINTENSET_TXERR	device/LPC54018.h	6574;"	d
I2S_FIFOINTENSET_TXERR_MASK	device/LPC54018.h	6568;"	d
I2S_FIFOINTENSET_TXERR_SHIFT	device/LPC54018.h	6569;"	d
I2S_FIFOINTENSET_TXLVL	device/LPC54018.h	6590;"	d
I2S_FIFOINTENSET_TXLVL_MASK	device/LPC54018.h	6582;"	d
I2S_FIFOINTENSET_TXLVL_SHIFT	device/LPC54018.h	6583;"	d
I2S_FIFOINTSTAT_PERINT	device/LPC54018.h	6634;"	d
I2S_FIFOINTSTAT_PERINT_MASK	device/LPC54018.h	6632;"	d
I2S_FIFOINTSTAT_PERINT_SHIFT	device/LPC54018.h	6633;"	d
I2S_FIFOINTSTAT_RXERR	device/LPC54018.h	6625;"	d
I2S_FIFOINTSTAT_RXERR_MASK	device/LPC54018.h	6623;"	d
I2S_FIFOINTSTAT_RXERR_SHIFT	device/LPC54018.h	6624;"	d
I2S_FIFOINTSTAT_RXLVL	device/LPC54018.h	6631;"	d
I2S_FIFOINTSTAT_RXLVL_MASK	device/LPC54018.h	6629;"	d
I2S_FIFOINTSTAT_RXLVL_SHIFT	device/LPC54018.h	6630;"	d
I2S_FIFOINTSTAT_TXERR	device/LPC54018.h	6622;"	d
I2S_FIFOINTSTAT_TXERR_MASK	device/LPC54018.h	6620;"	d
I2S_FIFOINTSTAT_TXERR_SHIFT	device/LPC54018.h	6621;"	d
I2S_FIFOINTSTAT_TXLVL	device/LPC54018.h	6628;"	d
I2S_FIFOINTSTAT_TXLVL_MASK	device/LPC54018.h	6626;"	d
I2S_FIFOINTSTAT_TXLVL_SHIFT	device/LPC54018.h	6627;"	d
I2S_FIFORD48HNOPOP_RXDATA	device/LPC54018.h	6676;"	d
I2S_FIFORD48HNOPOP_RXDATA_MASK	device/LPC54018.h	6674;"	d
I2S_FIFORD48HNOPOP_RXDATA_SHIFT	device/LPC54018.h	6675;"	d
I2S_FIFORD48H_RXDATA	device/LPC54018.h	6662;"	d
I2S_FIFORD48H_RXDATA_MASK	device/LPC54018.h	6660;"	d
I2S_FIFORD48H_RXDATA_SHIFT	device/LPC54018.h	6661;"	d
I2S_FIFORDNOPOP_RXDATA	device/LPC54018.h	6669;"	d
I2S_FIFORDNOPOP_RXDATA_MASK	device/LPC54018.h	6667;"	d
I2S_FIFORDNOPOP_RXDATA_SHIFT	device/LPC54018.h	6668;"	d
I2S_FIFORD_RXDATA	device/LPC54018.h	6655;"	d
I2S_FIFORD_RXDATA_MASK	device/LPC54018.h	6653;"	d
I2S_FIFORD_RXDATA_SHIFT	device/LPC54018.h	6654;"	d
I2S_FIFOSTAT_PERINT	device/LPC54018.h	6519;"	d
I2S_FIFOSTAT_PERINT_MASK	device/LPC54018.h	6517;"	d
I2S_FIFOSTAT_PERINT_SHIFT	device/LPC54018.h	6518;"	d
I2S_FIFOSTAT_RXERR	device/LPC54018.h	6516;"	d
I2S_FIFOSTAT_RXERR_MASK	device/LPC54018.h	6514;"	d
I2S_FIFOSTAT_RXERR_SHIFT	device/LPC54018.h	6515;"	d
I2S_FIFOSTAT_RXFULL	device/LPC54018.h	6531;"	d
I2S_FIFOSTAT_RXFULL_MASK	device/LPC54018.h	6529;"	d
I2S_FIFOSTAT_RXFULL_SHIFT	device/LPC54018.h	6530;"	d
I2S_FIFOSTAT_RXLVL	device/LPC54018.h	6537;"	d
I2S_FIFOSTAT_RXLVL_MASK	device/LPC54018.h	6535;"	d
I2S_FIFOSTAT_RXLVL_SHIFT	device/LPC54018.h	6536;"	d
I2S_FIFOSTAT_RXNOTEMPTY	device/LPC54018.h	6528;"	d
I2S_FIFOSTAT_RXNOTEMPTY_MASK	device/LPC54018.h	6526;"	d
I2S_FIFOSTAT_RXNOTEMPTY_SHIFT	device/LPC54018.h	6527;"	d
I2S_FIFOSTAT_TXEMPTY	device/LPC54018.h	6522;"	d
I2S_FIFOSTAT_TXEMPTY_MASK	device/LPC54018.h	6520;"	d
I2S_FIFOSTAT_TXEMPTY_SHIFT	device/LPC54018.h	6521;"	d
I2S_FIFOSTAT_TXERR	device/LPC54018.h	6513;"	d
I2S_FIFOSTAT_TXERR_MASK	device/LPC54018.h	6511;"	d
I2S_FIFOSTAT_TXERR_SHIFT	device/LPC54018.h	6512;"	d
I2S_FIFOSTAT_TXLVL	device/LPC54018.h	6534;"	d
I2S_FIFOSTAT_TXLVL_MASK	device/LPC54018.h	6532;"	d
I2S_FIFOSTAT_TXLVL_SHIFT	device/LPC54018.h	6533;"	d
I2S_FIFOSTAT_TXNOTFULL	device/LPC54018.h	6525;"	d
I2S_FIFOSTAT_TXNOTFULL_MASK	device/LPC54018.h	6523;"	d
I2S_FIFOSTAT_TXNOTFULL_SHIFT	device/LPC54018.h	6524;"	d
I2S_FIFOTRIG_RXLVL	device/LPC54018.h	6563;"	d
I2S_FIFOTRIG_RXLVLENA	device/LPC54018.h	6557;"	d
I2S_FIFOTRIG_RXLVLENA_MASK	device/LPC54018.h	6550;"	d
I2S_FIFOTRIG_RXLVLENA_SHIFT	device/LPC54018.h	6551;"	d
I2S_FIFOTRIG_RXLVL_MASK	device/LPC54018.h	6561;"	d
I2S_FIFOTRIG_RXLVL_SHIFT	device/LPC54018.h	6562;"	d
I2S_FIFOTRIG_TXLVL	device/LPC54018.h	6560;"	d
I2S_FIFOTRIG_TXLVLENA	device/LPC54018.h	6549;"	d
I2S_FIFOTRIG_TXLVLENA_MASK	device/LPC54018.h	6542;"	d
I2S_FIFOTRIG_TXLVLENA_SHIFT	device/LPC54018.h	6543;"	d
I2S_FIFOTRIG_TXLVL_MASK	device/LPC54018.h	6558;"	d
I2S_FIFOTRIG_TXLVL_SHIFT	device/LPC54018.h	6559;"	d
I2S_FIFOWR48H_TXDATA	device/LPC54018.h	6648;"	d
I2S_FIFOWR48H_TXDATA_MASK	device/LPC54018.h	6646;"	d
I2S_FIFOWR48H_TXDATA_SHIFT	device/LPC54018.h	6647;"	d
I2S_FIFOWR_TXDATA	device/LPC54018.h	6641;"	d
I2S_FIFOWR_TXDATA_MASK	device/LPC54018.h	6639;"	d
I2S_FIFOWR_TXDATA_SHIFT	device/LPC54018.h	6640;"	d
I2S_GetEnabledInterrupts	drivers/fsl_i2s.h	/^static inline uint32_t I2S_GetEnabledInterrupts(I2S_Type *base)$/;"	f
I2S_GetInstance	drivers/fsl_i2s.c	/^uint32_t I2S_GetInstance(I2S_Type *base)$/;"	f
I2S_GetInstance	drivers/fsl_i2s_dma.c	/^static uint32_t I2S_GetInstance(I2S_Type *base)$/;"	f	file:
I2S_GetTransferBytes	drivers/fsl_i2s_dma.c	/^static uint16_t I2S_GetTransferBytes(volatile i2s_transfer_t *transfer)$/;"	f	file:
I2S_ID_Aperture	device/LPC54018.h	6683;"	d
I2S_ID_Aperture_MASK	device/LPC54018.h	6681;"	d
I2S_ID_Aperture_SHIFT	device/LPC54018.h	6682;"	d
I2S_ID_ID	device/LPC54018.h	6692;"	d
I2S_ID_ID_MASK	device/LPC54018.h	6690;"	d
I2S_ID_ID_SHIFT	device/LPC54018.h	6691;"	d
I2S_ID_Major_Rev	device/LPC54018.h	6689;"	d
I2S_ID_Major_Rev_MASK	device/LPC54018.h	6687;"	d
I2S_ID_Major_Rev_SHIFT	device/LPC54018.h	6688;"	d
I2S_ID_Minor_Rev	device/LPC54018.h	6686;"	d
I2S_ID_Minor_Rev_MASK	device/LPC54018.h	6684;"	d
I2S_ID_Minor_Rev_SHIFT	device/LPC54018.h	6685;"	d
I2S_IRQS	device/LPC54018.h	6715;"	d
I2S_NUM_BUFFERS	drivers/fsl_i2s.h	36;"	d
I2S_RxEnable	drivers/fsl_i2s.c	/^static void I2S_RxEnable(I2S_Type *base, bool enable)$/;"	f	file:
I2S_RxEnableDMA	drivers/fsl_i2s_dma.c	/^static void I2S_RxEnableDMA(I2S_Type *base, bool enable)$/;"	f	file:
I2S_RxGetDefaultConfig	drivers/fsl_i2s.c	/^void I2S_RxGetDefaultConfig(i2s_config_t *config)$/;"	f
I2S_RxHandleIRQ	drivers/fsl_i2s.c	/^void I2S_RxHandleIRQ(I2S_Type *base, i2s_handle_t *handle)$/;"	f
I2S_RxInit	drivers/fsl_i2s.c	/^void I2S_RxInit(I2S_Type *base, const i2s_config_t *config)$/;"	f
I2S_RxTransferAbort	drivers/fsl_i2s.c	/^void I2S_RxTransferAbort(I2S_Type *base, i2s_handle_t *handle)$/;"	f
I2S_RxTransferCreateHandle	drivers/fsl_i2s.c	/^void I2S_RxTransferCreateHandle(I2S_Type *base, i2s_handle_t *handle, i2s_transfer_callback_t callback, void *userData)$/;"	f
I2S_RxTransferCreateHandleDMA	drivers/fsl_i2s_dma.c	/^void I2S_RxTransferCreateHandleDMA(I2S_Type *base,$/;"	f
I2S_RxTransferNonBlocking	drivers/fsl_i2s.c	/^status_t I2S_RxTransferNonBlocking(I2S_Type *base, i2s_handle_t *handle, i2s_transfer_t transfer)$/;"	f
I2S_RxTransferReceiveDMA	drivers/fsl_i2s_dma.c	/^status_t I2S_RxTransferReceiveDMA(I2S_Type *base, i2s_dma_handle_t *handle, i2s_transfer_t transfer)$/;"	f
I2S_SECCHANNEL_PCFG1_COUNT	device/LPC54018.h	6396;"	d
I2S_SECCHANNEL_PCFG1_ONECHANNEL	device/LPC54018.h	6392;"	d
I2S_SECCHANNEL_PCFG1_ONECHANNEL_MASK	device/LPC54018.h	6390;"	d
I2S_SECCHANNEL_PCFG1_ONECHANNEL_SHIFT	device/LPC54018.h	6391;"	d
I2S_SECCHANNEL_PCFG1_PAIRENABLE	device/LPC54018.h	6389;"	d
I2S_SECCHANNEL_PCFG1_PAIRENABLE_MASK	device/LPC54018.h	6387;"	d
I2S_SECCHANNEL_PCFG1_PAIRENABLE_SHIFT	device/LPC54018.h	6388;"	d
I2S_SECCHANNEL_PCFG2_COUNT	device/LPC54018.h	6406;"	d
I2S_SECCHANNEL_PCFG2_POSITION	device/LPC54018.h	6402;"	d
I2S_SECCHANNEL_PCFG2_POSITION_MASK	device/LPC54018.h	6400;"	d
I2S_SECCHANNEL_PCFG2_POSITION_SHIFT	device/LPC54018.h	6401;"	d
I2S_SECCHANNEL_PSTAT_BUSY	device/LPC54018.h	6412;"	d
I2S_SECCHANNEL_PSTAT_BUSY_MASK	device/LPC54018.h	6410;"	d
I2S_SECCHANNEL_PSTAT_BUSY_SHIFT	device/LPC54018.h	6411;"	d
I2S_SECCHANNEL_PSTAT_COUNT	device/LPC54018.h	6425;"	d
I2S_SECCHANNEL_PSTAT_DATAPAUSED	device/LPC54018.h	6421;"	d
I2S_SECCHANNEL_PSTAT_DATAPAUSED_MASK	device/LPC54018.h	6419;"	d
I2S_SECCHANNEL_PSTAT_DATAPAUSED_SHIFT	device/LPC54018.h	6420;"	d
I2S_SECCHANNEL_PSTAT_LR	device/LPC54018.h	6418;"	d
I2S_SECCHANNEL_PSTAT_LR_MASK	device/LPC54018.h	6416;"	d
I2S_SECCHANNEL_PSTAT_LR_SHIFT	device/LPC54018.h	6417;"	d
I2S_SECCHANNEL_PSTAT_SLVFRMERR	device/LPC54018.h	6415;"	d
I2S_SECCHANNEL_PSTAT_SLVFRMERR_MASK	device/LPC54018.h	6413;"	d
I2S_SECCHANNEL_PSTAT_SLVFRMERR_SHIFT	device/LPC54018.h	6414;"	d
I2S_STAT_BUSY	device/LPC54018.h	6349;"	d
I2S_STAT_BUSY_MASK	device/LPC54018.h	6343;"	d
I2S_STAT_BUSY_SHIFT	device/LPC54018.h	6344;"	d
I2S_STAT_DATAPAUSED	device/LPC54018.h	6375;"	d
I2S_STAT_DATAPAUSED_MASK	device/LPC54018.h	6368;"	d
I2S_STAT_DATAPAUSED_SHIFT	device/LPC54018.h	6369;"	d
I2S_STAT_LR	device/LPC54018.h	6367;"	d
I2S_STAT_LR_MASK	device/LPC54018.h	6359;"	d
I2S_STAT_LR_SHIFT	device/LPC54018.h	6360;"	d
I2S_STAT_SLVFRMERR	device/LPC54018.h	6358;"	d
I2S_STAT_SLVFRMERR_MASK	device/LPC54018.h	6350;"	d
I2S_STAT_SLVFRMERR_SHIFT	device/LPC54018.h	6351;"	d
I2S_StartTransferDMA	drivers/fsl_i2s_dma.c	/^static status_t I2S_StartTransferDMA(I2S_Type *base, i2s_dma_handle_t *handle)$/;"	f	file:
I2S_TransferAbortDMA	drivers/fsl_i2s_dma.c	/^void I2S_TransferAbortDMA(I2S_Type *base, i2s_dma_handle_t *handle)$/;"	f
I2S_TransferGetCount	drivers/fsl_i2s.c	/^status_t I2S_TransferGetCount(I2S_Type *base, i2s_handle_t *handle, size_t *count)$/;"	f
I2S_TransferGetErrorCount	drivers/fsl_i2s.c	/^status_t I2S_TransferGetErrorCount(I2S_Type *base, i2s_handle_t *handle, size_t *count)$/;"	f
I2S_TxEnable	drivers/fsl_i2s.c	/^static void I2S_TxEnable(I2S_Type *base, bool enable)$/;"	f	file:
I2S_TxEnableDMA	drivers/fsl_i2s_dma.c	/^static void I2S_TxEnableDMA(I2S_Type *base, bool enable)$/;"	f	file:
I2S_TxGetDefaultConfig	drivers/fsl_i2s.c	/^void I2S_TxGetDefaultConfig(i2s_config_t *config)$/;"	f
I2S_TxHandleIRQ	drivers/fsl_i2s.c	/^void I2S_TxHandleIRQ(I2S_Type *base, i2s_handle_t *handle)$/;"	f
I2S_TxInit	drivers/fsl_i2s.c	/^void I2S_TxInit(I2S_Type *base, const i2s_config_t *config)$/;"	f
I2S_TxTransferAbort	drivers/fsl_i2s.c	/^void I2S_TxTransferAbort(I2S_Type *base, i2s_handle_t *handle)$/;"	f
I2S_TxTransferCreateHandle	drivers/fsl_i2s.c	/^void I2S_TxTransferCreateHandle(I2S_Type *base, i2s_handle_t *handle, i2s_transfer_callback_t callback, void *userData)$/;"	f
I2S_TxTransferCreateHandleDMA	drivers/fsl_i2s_dma.c	/^void I2S_TxTransferCreateHandleDMA(I2S_Type *base,$/;"	f
I2S_TxTransferNonBlocking	drivers/fsl_i2s.c	/^status_t I2S_TxTransferNonBlocking(I2S_Type *base, i2s_handle_t *handle, i2s_transfer_t transfer)$/;"	f
I2S_TxTransferSendDMA	drivers/fsl_i2s_dma.c	/^status_t I2S_TxTransferSendDMA(I2S_Type *base, i2s_dma_handle_t *handle, i2s_transfer_t transfer)$/;"	f
I2S_Type	device/LPC54018.h	/^} I2S_Type;$/;"	t	typeref:struct:__anon161
I2S_ValidateBuffer	drivers/fsl_i2s.c	/^static status_t I2S_ValidateBuffer(i2s_handle_t *handle, i2s_transfer_t *transfer)$/;"	f	file:
I32	emwin/emWin_header/Global.h	59;"	d
I32	emwin/emWin_header/Global.h	62;"	d
I64	emwin/emWin_header/Global.h	71;"	d
I64	emwin/emWin_header/Global.h	83;"	d
I8	emwin/emWin_header/Global.h	54;"	d
IABR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t IABR[16U];              \/*!< Offset: 0x200 (R\/W)  Interrupt Active bit Register *\/$/;"	m	struct:__anon121
IABR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t IABR[16U];              \/*!< Offset: 0x200 (R\/W)  Interrupt Active bit Register *\/$/;"	m	struct:__anon17
IABR	CMSIS/core_cm4.h	/^  __IOM uint32_t IABR[8U];               \/*!< Offset: 0x200 (R\/W)  Interrupt Active bit Register *\/$/;"	m	struct:__anon39
IAR_ONLY_LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7069;"	d
IAR_ONLY_LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7077;"	d
IAR_ONLY_LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7084;"	d
IAR_ONLY_LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7101;"	d
IAR_ONLY_LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7104;"	d
IAR_ONLY_LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7113;"	d
IAR_ONLY_LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7119;"	d
IAR_ONLY_LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7125;"	d
IAR_ONLY_LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7072;"	d
IAR_ONLY_LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7078;"	d
IAR_ONLY_LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7085;"	d
IAR_ONLY_LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7108;"	d
IAR_ONLY_LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7114;"	d
IAR_ONLY_LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7120;"	d
IAR_ONLY_LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7126;"	d
IBorderSize	emwin/emWin_header/FRAMEWIN_Private.h	/^  I16                   IBorderSize;$/;"	m	struct:__anon279
ICER	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t ICER[16U];              \/*!< Offset: 0x080 (R\/W)  Interrupt Clear Enable Register *\/$/;"	m	struct:__anon121
ICER	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ICER[16U];              \/*!< Offset: 0x080 (R\/W)  Interrupt Clear Enable Register *\/$/;"	m	struct:__anon17
ICER	CMSIS/core_cm4.h	/^  __IOM uint32_t ICER[8U];               \/*!< Offset: 0x080 (R\/W)  Interrupt Clear Enable Register *\/$/;"	m	struct:__anon39
ICIALLU	CMSIS/core_armv8mml.h	/^  __OM  uint32_t ICIALLU;                \/*!< Offset: 0x250 ( \/W)  I-Cache Invalidate All to PoU *\/$/;"	m	struct:__anon18
ICIMVAU	CMSIS/core_armv8mml.h	/^  __OM  uint32_t ICIMVAU;                \/*!< Offset: 0x258 ( \/W)  I-Cache Invalidate by MVA to PoU *\/$/;"	m	struct:__anon18
ICI_IT_1	CMSIS/core_cm4.h	/^    uint32_t ICI_IT_1:6;                 \/*!< bit: 10..15  ICI\/IT part 1 *\/$/;"	m	struct:__anon35::__anon36
ICI_IT_2	CMSIS/core_cm4.h	/^    uint32_t ICI_IT_2:2;                 \/*!< bit: 25..26  ICI\/IT part 2 *\/$/;"	m	struct:__anon35::__anon36
ICMP6_DUR_ADDRESS	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_DUR_ADDRESS = 3,$/;"	e	enum:icmp6_dur_code
ICMP6_DUR_NO_ROUTE	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_DUR_NO_ROUTE = 0,$/;"	e	enum:icmp6_dur_code
ICMP6_DUR_POLICY	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_DUR_POLICY = 5,$/;"	e	enum:icmp6_dur_code
ICMP6_DUR_PORT	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_DUR_PORT = 4,$/;"	e	enum:icmp6_dur_code
ICMP6_DUR_PROHIBITED	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_DUR_PROHIBITED = 1,$/;"	e	enum:icmp6_dur_code
ICMP6_DUR_REJECT_ROUTE	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_DUR_REJECT_ROUTE = 6$/;"	e	enum:icmp6_dur_code
ICMP6_DUR_SCOPE	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_DUR_SCOPE = 2,$/;"	e	enum:icmp6_dur_code
ICMP6_PP_FIELD	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_PP_FIELD = 0,$/;"	e	enum:icmp6_pp_code
ICMP6_PP_HEADER	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_PP_HEADER = 1,$/;"	e	enum:icmp6_pp_code
ICMP6_PP_OPTION	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_PP_OPTION = 2$/;"	e	enum:icmp6_pp_code
ICMP6_STATS	lwip/src/include/lwip/opt.h	2202;"	d
ICMP6_STATS	lwip/src/include/lwip/opt.h	2248;"	d
ICMP6_STATS_DISPLAY	lwip/src/include/lwip/stats.h	434;"	d
ICMP6_STATS_DISPLAY	lwip/src/include/lwip/stats.h	437;"	d
ICMP6_STATS_INC	lwip/src/include/lwip/stats.h	433;"	d
ICMP6_STATS_INC	lwip/src/include/lwip/stats.h	436;"	d
ICMP6_TE_FRAG	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TE_FRAG = 1$/;"	e	enum:icmp6_te_code
ICMP6_TE_HL	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TE_HL = 0,$/;"	e	enum:icmp6_te_code
ICMP6_TYPE_DUR	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_DUR = 1,$/;"	e	enum:icmp6_type
ICMP6_TYPE_EREP	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_EREP = 129,$/;"	e	enum:icmp6_type
ICMP6_TYPE_EREQ	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_EREQ = 128,$/;"	e	enum:icmp6_type
ICMP6_TYPE_MLD	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_MLD = 132,$/;"	e	enum:icmp6_type
ICMP6_TYPE_MLQ	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_MLQ = 130,$/;"	e	enum:icmp6_type
ICMP6_TYPE_MLR	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_MLR = 131,$/;"	e	enum:icmp6_type
ICMP6_TYPE_MRA	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_MRA = 151,$/;"	e	enum:icmp6_type
ICMP6_TYPE_MRS	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_MRS = 152,$/;"	e	enum:icmp6_type
ICMP6_TYPE_MRT	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_MRT = 153,$/;"	e	enum:icmp6_type
ICMP6_TYPE_NA	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_NA = 136,$/;"	e	enum:icmp6_type
ICMP6_TYPE_NS	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_NS = 135,$/;"	e	enum:icmp6_type
ICMP6_TYPE_PE1	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_PE1 = 100,$/;"	e	enum:icmp6_type
ICMP6_TYPE_PE2	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_PE2 = 101,$/;"	e	enum:icmp6_type
ICMP6_TYPE_PE3	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_PE3 = 200,$/;"	e	enum:icmp6_type
ICMP6_TYPE_PE4	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_PE4 = 201,$/;"	e	enum:icmp6_type
ICMP6_TYPE_PP	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_PP = 4,$/;"	e	enum:icmp6_type
ICMP6_TYPE_PTB	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_PTB = 2,$/;"	e	enum:icmp6_type
ICMP6_TYPE_RA	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_RA = 134,$/;"	e	enum:icmp6_type
ICMP6_TYPE_RD	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_RD = 137,$/;"	e	enum:icmp6_type
ICMP6_TYPE_RS	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_RS = 133,$/;"	e	enum:icmp6_type
ICMP6_TYPE_RSV_ERR	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_RSV_ERR = 127,$/;"	e	enum:icmp6_type
ICMP6_TYPE_RSV_INF	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_RSV_INF = 255$/;"	e	enum:icmp6_type
ICMP6_TYPE_TE	lwip/src/include/lwip/prot/icmp6.h	/^  ICMP6_TYPE_TE = 3,$/;"	e	enum:icmp6_type
ICMPH_CODE	lwip/src/include/lwip/prot/icmp.h	83;"	d
ICMPH_CODE_SET	lwip/src/include/lwip/prot/icmp.h	85;"	d
ICMPH_TYPE	lwip/src/include/lwip/prot/icmp.h	82;"	d
ICMPH_TYPE_SET	lwip/src/include/lwip/prot/icmp.h	84;"	d
ICMP_AM	lwip/src/include/lwip/prot/icmp.h	57;"	d
ICMP_AMR	lwip/src/include/lwip/prot/icmp.h	58;"	d
ICMP_DEBUG	lwip/src/include/lwip/opt.h	3302;"	d
ICMP_DEST_UNREACH_DATASIZE	lwip/src/core/ipv4/icmp.c	66;"	d	file:
ICMP_DUR	lwip/src/include/lwip/prot/icmp.h	47;"	d
ICMP_DUR_FRAG	lwip/src/include/lwip/icmp.h	/^  ICMP_DUR_FRAG  = 4,$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	lwip/src/include/lwip/icmp.h	/^  ICMP_DUR_HOST  = 1,$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	lwip/src/include/lwip/icmp.h	/^  ICMP_DUR_NET   = 0,$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	lwip/src/include/lwip/icmp.h	/^  ICMP_DUR_PORT  = 3,$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	lwip/src/include/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	lwip/src/include/lwip/icmp.h	/^  ICMP_DUR_SR    = 5$/;"	e	enum:icmp_dur_type
ICMP_ECHO	lwip/src/include/lwip/prot/icmp.h	50;"	d
ICMP_ER	lwip/src/include/lwip/prot/icmp.h	46;"	d
ICMP_IR	lwip/src/include/lwip/prot/icmp.h	56;"	d
ICMP_IRQ	lwip/src/include/lwip/prot/icmp.h	55;"	d
ICMP_PP	lwip/src/include/lwip/prot/icmp.h	52;"	d
ICMP_RD	lwip/src/include/lwip/prot/icmp.h	49;"	d
ICMP_SQ	lwip/src/include/lwip/prot/icmp.h	48;"	d
ICMP_STATS	lwip/src/include/lwip/opt.h	2144;"	d
ICMP_STATS	lwip/src/include/lwip/opt.h	2239;"	d
ICMP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	342;"	d
ICMP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	345;"	d
ICMP_STATS_INC	lwip/src/include/lwip/stats.h	341;"	d
ICMP_STATS_INC	lwip/src/include/lwip/stats.h	344;"	d
ICMP_TE	lwip/src/include/lwip/prot/icmp.h	51;"	d
ICMP_TE_FRAG	lwip/src/include/lwip/icmp.h	/^  ICMP_TE_FRAG = 1$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	lwip/src/include/lwip/icmp.h	/^  ICMP_TE_TTL  = 0,$/;"	e	enum:icmp_te_type
ICMP_TS	lwip/src/include/lwip/prot/icmp.h	53;"	d
ICMP_TSR	lwip/src/include/lwip/prot/icmp.h	54;"	d
ICMP_TTL	lwip/src/include/lwip/opt.h	857;"	d
ICONVIEW_CF_AUTOSCROLLBAR_V	emwin/emWin_header/ICONVIEW.h	67;"	d
ICONVIEW_CI_BK	emwin/emWin_header/ICONVIEW.h	73;"	d
ICONVIEW_CI_DISABLED	emwin/emWin_header/ICONVIEW.h	76;"	d
ICONVIEW_CI_SEL	emwin/emWin_header/ICONVIEW.h	75;"	d
ICONVIEW_CI_UNSEL	emwin/emWin_header/ICONVIEW.h	74;"	d
ICONVIEW_EnableStreamAuto	emwin/emWin_header/ICONVIEW.h	154;"	d
ICONVIEW_H	emwin/emWin_header/ICONVIEW.h	46;"	d
ICONVIEW_Handle	emwin/emWin_header/ICONVIEW.h	/^typedef WM_HMEM ICONVIEW_Handle;$/;"	t
ICONVIEW_IA_BOTTOM	emwin/emWin_header/ICONVIEW.h	89;"	d
ICONVIEW_IA_HCENTER	emwin/emWin_header/ICONVIEW.h	81;"	d
ICONVIEW_IA_LEFT	emwin/emWin_header/ICONVIEW.h	82;"	d
ICONVIEW_IA_RIGHT	emwin/emWin_header/ICONVIEW.h	83;"	d
ICONVIEW_IA_TOP	emwin/emWin_header/ICONVIEW.h	90;"	d
ICONVIEW_IA_VCENTER	emwin/emWin_header/ICONVIEW.h	88;"	d
ICONVIEW_ID	emwin/emWin_header/WIDGET.h	122;"	d
ICONVIEW_INIT_ID	emwin/emWin_header/ICONVIEW_Private.h	111;"	d
ICONVIEW_INIT_ID	emwin/emWin_header/ICONVIEW_Private.h	113;"	d
ICONVIEW_ITEM	emwin/emWin_header/ICONVIEW_Private.h	/^} ICONVIEW_ITEM;$/;"	t	typeref:struct:__anon220
ICONVIEW_LOCK_H	emwin/emWin_header/ICONVIEW_Private.h	118;"	d
ICONVIEW_LOCK_H	emwin/emWin_header/ICONVIEW_Private.h	120;"	d
ICONVIEW_OBJ	emwin/emWin_header/ICONVIEW_Private.h	/^} ICONVIEW_OBJ;$/;"	t	typeref:struct:__anon219
ICONVIEW_PRIVATE_H	emwin/emWin_header/ICONVIEW_Private.h	46;"	d
ICONVIEW_PROPS	emwin/emWin_header/ICONVIEW_Private.h	/^} ICONVIEW_PROPS;$/;"	t	typeref:struct:__anon218
ICONVIEW_SF_AUTOSCROLLBAR_V	emwin/emWin_header/ICONVIEW.h	68;"	d
ICPR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t ICPR[16U];              \/*!< Offset: 0x180 (R\/W)  Interrupt Clear Pending Register *\/$/;"	m	struct:__anon121
ICPR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ICPR[16U];              \/*!< Offset: 0x180 (R\/W)  Interrupt Clear Pending Register *\/$/;"	m	struct:__anon17
ICPR	CMSIS/core_cm4.h	/^  __IOM uint32_t ICPR[8U];               \/*!< Offset: 0x180 (R\/W)  Interrupt Clear Pending Register *\/$/;"	m	struct:__anon39
ICSR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t ICSR;                   \/*!< Offset: 0x004 (R\/W)  Interrupt Control and State Register *\/$/;"	m	struct:__anon122
ICSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ICSR;                   \/*!< Offset: 0x004 (R\/W)  Interrupt Control and State Register *\/$/;"	m	struct:__anon18
ICSR	CMSIS/core_cm4.h	/^  __IOM uint32_t ICSR;                   \/*!< Offset: 0x004 (R\/W)  Interrupt Control and State Register *\/$/;"	m	struct:__anon40
ICTR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t ICTR;                   \/*!< Offset: 0x004 (R\/ )  Interrupt Controller Type Register *\/$/;"	m	struct:__anon19
ICTR	CMSIS/core_cm4.h	/^  __IM  uint32_t ICTR;                   \/*!< Offset: 0x004 (R\/ )  Interrupt Controller Type Register *\/$/;"	m	struct:__anon41
ID	device/LPC54018.h	/^  __I  uint32_t ID;                                \/**< I2S Module identification, offset: 0x1DFC *\/$/;"	m	struct:__anon161
ID	device/LPC54018.h	/^  __I  uint32_t ID;                                \/**< Module Identification register, offset: 0xFFC *\/$/;"	m	struct:__anon149
ID	device/LPC54018.h	/^  __I  uint32_t ID;                                \/**< Peripheral identification register., offset: 0xFFC *\/$/;"	m	struct:__anon160
ID	device/LPC54018.h	/^  __I  uint32_t ID;                                \/**< Peripheral identification register., offset: 0xFFC *\/$/;"	m	struct:__anon183
ID	device/LPC54018.h	/^  __I  uint32_t ID;                                \/**< Peripheral identification register., offset: 0xFFC *\/$/;"	m	struct:__anon186
ID	emwin/emWin_header/GUI_Type.h	/^  U16 ID;$/;"	m	struct:__anon244
ID	emwin/emWin_header/GUI_Type.h	/^  U32 ID;           \/* Font file ID *\/$/;"	m	struct:__anon262
IDATA	device/LPC54018.h	/^  __IO uint32_t IDATA;                             \/**< SPIFI intermediate data register, offset: 0xC *\/$/;"	m	struct:__anon184
IDENTIF	lwip/src/include/netif/ppp/lcp.h	91;"	d
IDINTEN	device/LPC54018.h	/^  __IO uint32_t IDINTEN;                           \/**< Internal DMAC Interrupt Enable register, offset: 0x90 *\/$/;"	m	struct:__anon177
IDLE_CH	device/LPC54018.h	/^  __I  uint32_t IDLE_CH;                           \/**< Idle channel register. This register returns the number of the first idle channel., offset: 0xF4 *\/$/;"	m	struct:__anon166
IDSTS	device/LPC54018.h	/^  __IO uint32_t IDSTS;                             \/**< Internal DMAC Status register, offset: 0x8C *\/$/;"	m	struct:__anon177
ID_ADR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t ID_ADR;                 \/*!< Offset: 0x04C (R\/ )  Auxiliary Feature Register *\/$/;"	m	struct:__anon18
ID_DFR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t ID_DFR;                 \/*!< Offset: 0x048 (R\/ )  Debug Feature Register *\/$/;"	m	struct:__anon18
ID_ISAR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t ID_ISAR[6U];            \/*!< Offset: 0x060 (R\/ )  Instruction Set Attributes Register *\/$/;"	m	struct:__anon18
ID_MMFR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t ID_MMFR[4U];            \/*!< Offset: 0x050 (R\/ )  Memory Model Feature Register *\/$/;"	m	struct:__anon18
ID_PFR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t ID_PFR[2U];             \/*!< Offset: 0x040 (R\/ )  Processor Feature Register *\/$/;"	m	struct:__anon18
IE	device/LPC54018.h	/^  __IO uint32_t IE;                                \/**< Interrupt Enable, offset: 0x54 *\/$/;"	m	struct:__anon142
IEEE_802154_ADDR_MODE_EXT	lwip/src/include/netif/ieee802154.h	79;"	d
IEEE_802154_ADDR_MODE_NO_ADDR	lwip/src/include/netif/ieee802154.h	76;"	d
IEEE_802154_ADDR_MODE_RESERVED	lwip/src/include/netif/ieee802154.h	77;"	d
IEEE_802154_ADDR_MODE_SHORT	lwip/src/include/netif/ieee802154.h	78;"	d
IEEE_802154_FC_ACK_REQ	lwip/src/include/netif/ieee802154.h	93;"	d
IEEE_802154_FC_DST_ADDR_MODE_EXT	lwip/src/include/netif/ieee802154.h	101;"	d
IEEE_802154_FC_DST_ADDR_MODE_MASK	lwip/src/include/netif/ieee802154.h	98;"	d
IEEE_802154_FC_DST_ADDR_MODE_NO_ADDR	lwip/src/include/netif/ieee802154.h	99;"	d
IEEE_802154_FC_DST_ADDR_MODE_SHORT	lwip/src/include/netif/ieee802154.h	100;"	d
IEEE_802154_FC_FRAME_PEND	lwip/src/include/netif/ieee802154.h	92;"	d
IEEE_802154_FC_FRAME_VERSION_GET	lwip/src/include/netif/ieee802154.h	103;"	d
IEEE_802154_FC_FRAME_VERSION_MASK	lwip/src/include/netif/ieee802154.h	102;"	d
IEEE_802154_FC_FT_ACK	lwip/src/include/netif/ieee802154.h	85;"	d
IEEE_802154_FC_FT_BEACON	lwip/src/include/netif/ieee802154.h	83;"	d
IEEE_802154_FC_FT_DATA	lwip/src/include/netif/ieee802154.h	84;"	d
IEEE_802154_FC_FT_EXT	lwip/src/include/netif/ieee802154.h	90;"	d
IEEE_802154_FC_FT_FRAG	lwip/src/include/netif/ieee802154.h	89;"	d
IEEE_802154_FC_FT_MAC_CMD	lwip/src/include/netif/ieee802154.h	86;"	d
IEEE_802154_FC_FT_MASK	lwip/src/include/netif/ieee802154.h	82;"	d
IEEE_802154_FC_FT_MULTIPURPOSE	lwip/src/include/netif/ieee802154.h	88;"	d
IEEE_802154_FC_FT_RESERVED	lwip/src/include/netif/ieee802154.h	87;"	d
IEEE_802154_FC_IE_PRESENT	lwip/src/include/netif/ieee802154.h	97;"	d
IEEE_802154_FC_PANID_COMPR	lwip/src/include/netif/ieee802154.h	94;"	d
IEEE_802154_FC_RESERVED	lwip/src/include/netif/ieee802154.h	95;"	d
IEEE_802154_FC_SEC_EN	lwip/src/include/netif/ieee802154.h	91;"	d
IEEE_802154_FC_SEQNO_SUPPR	lwip/src/include/netif/ieee802154.h	96;"	d
IEEE_802154_FC_SRC_ADDR_MODE_EXT	lwip/src/include/netif/ieee802154.h	106;"	d
IEEE_802154_FC_SRC_ADDR_MODE_MASK	lwip/src/include/netif/ieee802154.h	104;"	d
IEEE_802154_FC_SRC_ADDR_MODE_SHORT	lwip/src/include/netif/ieee802154.h	105;"	d
IENF	device/LPC54018.h	/^  __IO uint32_t IENF;                              \/**< Pin interrupt active level or falling edge interrupt enable register, offset: 0x10 *\/$/;"	m	struct:__anon169
IENR	device/LPC54018.h	/^  __IO uint32_t IENR;                              \/**< Pin interrupt level or rising edge interrupt enable register, offset: 0x4 *\/$/;"	m	struct:__anon169
IER	device/LPC54018.h	/^    __IO uint32_t IER;                               \/**< Interrupt Enable Register, offset: 0x4 *\/$/;"	m	union:__anon179::__anon181
IFF_PASSIVE	lwip/src/netif/ppp/pppoe.c	113;"	d	file:
IFNAME0	lwip/src/netif/bridgeif.c	94;"	d	file:
IFNAME1	lwip/src/netif/bridgeif.c	95;"	d	file:
IFNAMSIZ	lwip/src/include/lwip/sockets.h	182;"	d
IF_NAMESIZE	lwip/src/include/lwip/if_api.h	52;"	d
IF__NETIF_CHECKSUM_ENABLED	lwip/src/include/lwip/netif.h	395;"	d
IF__NETIF_CHECKSUM_ENABLED	lwip/src/include/lwip/netif.h	398;"	d
IGMP_ADD_MAC_FILTER	lwip/src/include/lwip/igmp.h	61;"	d
IGMP_DEBUG	lwip/src/include/lwip/opt.h	3309;"	d
IGMP_DEL_MAC_FILTER	lwip/src/include/lwip/igmp.h	60;"	d
IGMP_GROUP_DELAYING_MEMBER	lwip/src/include/lwip/prot/igmp.h	65;"	d
IGMP_GROUP_IDLE_MEMBER	lwip/src/include/lwip/prot/igmp.h	66;"	d
IGMP_GROUP_NON_MEMBER	lwip/src/include/lwip/prot/igmp.h	64;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	lwip/src/include/lwip/igmp.h	57;"	d
IGMP_LEAVE_GROUP	lwip/src/include/lwip/prot/igmp.h	61;"	d
IGMP_MEMB_QUERY	lwip/src/include/lwip/prot/igmp.h	58;"	d
IGMP_MINLEN	lwip/src/include/lwip/prot/igmp.h	51;"	d
IGMP_STATS	lwip/src/include/lwip/opt.h	2151;"	d
IGMP_STATS	lwip/src/include/lwip/opt.h	2240;"	d
IGMP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	350;"	d
IGMP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	353;"	d
IGMP_STATS_INC	lwip/src/include/lwip/stats.h	349;"	d
IGMP_STATS_INC	lwip/src/include/lwip/stats.h	352;"	d
IGMP_TMR_INTERVAL	lwip/src/include/lwip/igmp.h	55;"	d
IGMP_TTL	lwip/src/include/lwip/prot/igmp.h	50;"	d
IGMP_V1_DELAYING_MEMBER_TMR	lwip/src/include/lwip/igmp.h	56;"	d
IGMP_V1_MEMB_REPORT	lwip/src/include/lwip/prot/igmp.h	59;"	d
IGMP_V2_MEMB_REPORT	lwip/src/include/lwip/prot/igmp.h	60;"	d
IIR	device/LPC54018.h	/^    __I  uint32_t IIR;                               \/**< Interrupt ID Register, offset: 0x8 *\/$/;"	m	union:__anon179::__anon182
ILE	device/LPC54018.h	/^  __IO uint32_t ILE;                               \/**< Interrupt Line Enable, offset: 0x5C *\/$/;"	m	struct:__anon142
ILS	device/LPC54018.h	/^  __IO uint32_t ILS;                               \/**< Interrupt Line Select, offset: 0x58 *\/$/;"	m	struct:__anon142
IMAGE_CF_ALPHA	emwin/emWin_header/IMAGE.h	66;"	d
IMAGE_CF_ATTACHED	emwin/emWin_header/IMAGE.h	67;"	d
IMAGE_CF_AUTOSIZE	emwin/emWin_header/IMAGE.h	68;"	d
IMAGE_CF_MEMDEV	emwin/emWin_header/IMAGE.h	64;"	d
IMAGE_CF_TILE	emwin/emWin_header/IMAGE.h	65;"	d
IMAGE_DESCRIPTOR	emwin/emWin_header/GUI_GIF_Private.h	/^} IMAGE_DESCRIPTOR;$/;"	t	typeref:struct:__anon324
IMAGE_H	emwin/emWin_header/IMAGE.h	46;"	d
IMAGE_Handle	emwin/emWin_header/IMAGE.h	/^typedef WM_HMEM IMAGE_Handle;$/;"	t
IMAGE_ID	emwin/emWin_header/WIDGET.h	123;"	d
IMAGE_INIT_ID	emwin/emWin_header/IMAGE_Private.h	113;"	d
IMAGE_INIT_ID	emwin/emWin_header/IMAGE_Private.h	115;"	d
IMAGE_LOCK_H	emwin/emWin_header/IMAGE_Private.h	120;"	d
IMAGE_LOCK_H	emwin/emWin_header/IMAGE_Private.h	122;"	d
IMAGE_OBJ	emwin/emWin_header/IMAGE_Private.h	/^} IMAGE_OBJ;$/;"	t	typeref:struct:__anon315
IMAGE_PRIVATE_H	emwin/emWin_header/IMAGE_Private.h	46;"	d
IMAGE_PROPS	emwin/emWin_header/IMAGE_Private.h	/^} IMAGE_PROPS;$/;"	t	typeref:struct:__anon314
IMAGE_SUPPORT_TRANSPARENCY	emwin/emWin_header/IMAGE_Private.h	60;"	d
IMCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t IMCR;                   \/*!< Offset: 0xF00 (R\/W)  ITM Integration Mode Control Register *\/$/;"	m	struct:__anon21
IMCR	CMSIS/core_cm4.h	/^  __IOM uint32_t IMCR;                   \/*!< Offset: 0xF00 (R\/W)  ITM Integration Mode Control Register *\/$/;"	m	struct:__anon43
IMG_BAUDRATE	startup/startup_lpc54018.c	231;"	d	file:
IMPLICITHEADER_EN	radio/sx1276-LoRa.h	/^}IMPLICITHEADER_EN;$/;"	t	typeref:enum:__anon481
IMPLICITHEADER_OFF	radio/sx1276-LoRa.h	/^	IMPLICITHEADER_OFF           =   0x00,       \/\/Disables the Implicit Header mode in LoRa$/;"	e	enum:__anon481
IMPLICITHEADER_ON	radio/sx1276-LoRa.h	/^	IMPLICITHEADER_ON            =   0x01,       \/\/Enables the Implicit Header mode in LoRa$/;"	e	enum:__anon481
IN6ADDR_ANY_INIT	lwip/src/include/lwip/inet.h	81;"	d
IN6ADDR_LOOPBACK_INIT	lwip/src/include/lwip/inet.h	84;"	d
IN6_LLADDR_FROM_EUI64	lwip/src/netif/ppp/ppp.c	1229;"	d	file:
INADDR_ANY	lwip/src/include/lwip/inet.h	75;"	d
INADDR_BROADCAST	lwip/src/include/lwip/inet.h	77;"	d
INADDR_LOOPBACK	lwip/src/include/lwip/inet.h	73;"	d
INADDR_NONE	lwip/src/include/lwip/inet.h	71;"	d
INCLUDE_LOGGING_H_	source/logging.h	9;"	d
INCLUDE_eTaskGetState	amazon-freertos/include/FreeRTOS.h	164;"	d
INCLUDE_eTaskGetState	source/FreeRTOSConfig.h	114;"	d
INCLUDE_uxTaskGetStackHighWaterMark	amazon-freertos/include/FreeRTOS.h	156;"	d
INCLUDE_uxTaskGetStackHighWaterMark	source/FreeRTOSConfig.h	112;"	d
INCLUDE_uxTaskGetStackHighWaterMark2	amazon-freertos/include/FreeRTOS.h	160;"	d
INCLUDE_uxTaskPriorityGet	amazon-freertos/include/FreeRTOS.h	116;"	d
INCLUDE_uxTaskPriorityGet	source/FreeRTOSConfig.h	104;"	d
INCLUDE_vTaskDelay	amazon-freertos/include/FreeRTOS.h	132;"	d
INCLUDE_vTaskDelay	source/FreeRTOSConfig.h	109;"	d
INCLUDE_vTaskDelayUntil	amazon-freertos/include/FreeRTOS.h	128;"	d
INCLUDE_vTaskDelayUntil	source/FreeRTOSConfig.h	108;"	d
INCLUDE_vTaskDelete	amazon-freertos/include/FreeRTOS.h	120;"	d
INCLUDE_vTaskDelete	source/FreeRTOSConfig.h	105;"	d
INCLUDE_vTaskPrioritySet	amazon-freertos/include/FreeRTOS.h	112;"	d
INCLUDE_vTaskPrioritySet	source/FreeRTOSConfig.h	103;"	d
INCLUDE_vTaskSuspend	amazon-freertos/include/FreeRTOS.h	124;"	d
INCLUDE_vTaskSuspend	source/FreeRTOSConfig.h	106;"	d
INCLUDE_xEventGroupSetBitFromISR	source/FreeRTOSConfig.h	115;"	d
INCLUDE_xQueueGetMutexHolder	amazon-freertos/include/FreeRTOS.h	144;"	d
INCLUDE_xResumeFromISR	source/FreeRTOSConfig.h	107;"	d
INCLUDE_xSemaphoreGetMutexHolder	amazon-freertos/include/FreeRTOS.h	148;"	d
INCLUDE_xTaskAbortDelay	amazon-freertos/include/FreeRTOS.h	140;"	d
INCLUDE_xTaskAbortDelay	source/FreeRTOSConfig.h	117;"	d
INCLUDE_xTaskGetCurrentTaskHandle	amazon-freertos/include/FreeRTOS.h	180;"	d
INCLUDE_xTaskGetCurrentTaskHandle	source/FreeRTOSConfig.h	111;"	d
INCLUDE_xTaskGetHandle	amazon-freertos/include/FreeRTOS.h	152;"	d
INCLUDE_xTaskGetHandle	source/FreeRTOSConfig.h	118;"	d
INCLUDE_xTaskGetIdleTaskHandle	amazon-freertos/include/FreeRTOS.h	136;"	d
INCLUDE_xTaskGetIdleTaskHandle	source/FreeRTOSConfig.h	113;"	d
INCLUDE_xTaskGetSchedulerState	amazon-freertos/include/FreeRTOS.h	176;"	d
INCLUDE_xTaskGetSchedulerState	source/FreeRTOSConfig.h	110;"	d
INCLUDE_xTaskResumeFromISR	amazon-freertos/include/FreeRTOS.h	168;"	d
INCLUDE_xTaskResumeFromISR	source/FreeRTOSConfig.h	119;"	d
INCLUDE_xTimerPendFunctionCall	amazon-freertos/include/FreeRTOS.h	172;"	d
INCLUDE_xTimerPendFunctionCall	source/FreeRTOSConfig.h	116;"	d
INCPTR	lwip/src/include/netif/ppp/ppp_impl.h	529;"	d
INCR	lwip/src/netif/ppp/vj.c	42;"	d	file:
INCR	lwip/src/netif/ppp/vj.c	44;"	d	file:
INC_FREERTOS_H	amazon-freertos/include/FreeRTOS.h	29;"	d
INC_TASK_H	amazon-freertos/include/task.h	30;"	d
INDATA	device/LPC54018.h	/^  __O  uint32_t INDATA;                            \/**< Input Data register, offset: 0x20 *\/$/;"	m	struct:__anon178
INDEX_MASK	CMSIS/arm_math.h	362;"	d
INET6_ADDRSTRLEN	lwip/src/include/lwip/inet.h	129;"	d
INET_ADDRSTRLEN	lwip/src/include/lwip/inet.h	125;"	d
INET_DEBUG	lwip/src/include/lwip/opt.h	3316;"	d
INFO	device/LPC54018.h	/^  __I  uint32_t INFO;                              \/**< USB Info register, offset: 0x4 *\/$/;"	m	struct:__anon189
INFO	device/LPC54018.h	/^  __IO uint32_t INFO;                              \/**< USB Info register, offset: 0x4 *\/$/;"	m	struct:__anon187
INITIAL_MSS	lwip/src/core/tcp.c	139;"	d	file:
INITIAL_MSS	lwip/src/core/tcp.c	141;"	d	file:
INLINE	emwin/emWin_header/SEGGER.h	69;"	d
INLINE	emwin/emWin_header/SEGGER.h	75;"	d
INLINE	emwin/emWin_header/SEGGER.h	80;"	d
INLINE	emwin/emWin_header/SEGGER.h	85;"	d
INPUT	device/LPC54018.h	/^  __I  uint32_t INPUT;                             \/**< SCT input register, offset: 0x48 *\/$/;"	m	struct:__anon172
INPUTMUX	device/LPC54018.h	6816;"	d
INPUTMUX_AttachSignal	drivers/fsl_inputmux.c	/^void INPUTMUX_AttachSignal(INPUTMUX_Type *base, uint32_t index, inputmux_connection_t connection)$/;"	f
INPUTMUX_BASE	device/LPC54018.h	6814;"	d
INPUTMUX_BASE_ADDRS	device/LPC54018.h	6818;"	d
INPUTMUX_BASE_PTRS	device/LPC54018.h	6820;"	d
INPUTMUX_CLOCKS	drivers/fsl_clock.h	96;"	d
INPUTMUX_DMA_ITRIG_INMUX_COUNT	device/LPC54018.h	6780;"	d
INPUTMUX_DMA_ITRIG_INMUX_INP	device/LPC54018.h	6776;"	d
INPUTMUX_DMA_ITRIG_INMUX_INP_MASK	device/LPC54018.h	6774;"	d
INPUTMUX_DMA_ITRIG_INMUX_INP_SHIFT	device/LPC54018.h	6775;"	d
INPUTMUX_DMA_OTRIG_INMUX_COUNT	device/LPC54018.h	6790;"	d
INPUTMUX_DMA_OTRIG_INMUX_INP	device/LPC54018.h	6786;"	d
INPUTMUX_DMA_OTRIG_INMUX_INP_MASK	device/LPC54018.h	6784;"	d
INPUTMUX_DMA_OTRIG_INMUX_INP_SHIFT	device/LPC54018.h	6785;"	d
INPUTMUX_Deinit	drivers/fsl_inputmux.c	/^void INPUTMUX_Deinit(INPUTMUX_Type *base)$/;"	f
INPUTMUX_EnableSignal	drivers/fsl_inputmux.c	/^void INPUTMUX_EnableSignal(INPUTMUX_Type *base, inputmux_signal_t signal, bool enable)$/;"	f
INPUTMUX_FREQMEAS_REF_CLKIN	device/LPC54018.h	6796;"	d
INPUTMUX_FREQMEAS_REF_CLKIN_MASK	device/LPC54018.h	6794;"	d
INPUTMUX_FREQMEAS_REF_CLKIN_SHIFT	device/LPC54018.h	6795;"	d
INPUTMUX_FREQMEAS_TARGET_CLKIN	device/LPC54018.h	6803;"	d
INPUTMUX_FREQMEAS_TARGET_CLKIN_MASK	device/LPC54018.h	6801;"	d
INPUTMUX_FREQMEAS_TARGET_CLKIN_SHIFT	device/LPC54018.h	6802;"	d
INPUTMUX_Init	drivers/fsl_inputmux.c	/^void INPUTMUX_Init(INPUTMUX_Type *base)$/;"	f
INPUTMUX_PINTSEL_COUNT	device/LPC54018.h	6770;"	d
INPUTMUX_PINTSEL_INTPIN	device/LPC54018.h	6766;"	d
INPUTMUX_PINTSEL_INTPIN_MASK	device/LPC54018.h	6764;"	d
INPUTMUX_PINTSEL_INTPIN_SHIFT	device/LPC54018.h	6765;"	d
INPUTMUX_RSTS	drivers/fsl_reset.h	147;"	d
INPUTMUX_SCT0_INMUX_COUNT	device/LPC54018.h	6760;"	d
INPUTMUX_SCT0_INMUX_INP_N	device/LPC54018.h	6756;"	d
INPUTMUX_SCT0_INMUX_INP_N_MASK	device/LPC54018.h	6754;"	d
INPUTMUX_SCT0_INMUX_INP_N_SHIFT	device/LPC54018.h	6755;"	d
INPUTMUX_Type	device/LPC54018.h	/^} INPUTMUX_Type;$/;"	t	typeref:struct:__anon163
INPUT_SPACING	CMSIS/arm_math.h	383;"	d
INSEL	device/LPC54018.h	/^  __IO uint32_t INSEL;                             \/**< Input Select. Allows selection of the temperature sensor as an alternate input to ADC channel 0., offset: 0x4 *\/$/;"	m	struct:__anon140
INT16S	radio/MyTypeDef.h	/^typedef signed   int   INT16S;$/;"	t
INT16U	radio/MyTypeDef.h	/^typedef unsigned int   INT16U;$/;"	t
INT32S	radio/MyTypeDef.h	/^typedef signed   long  INT32S;$/;"	t
INT32U	radio/MyTypeDef.h	/^typedef unsigned long  INT32U;$/;"	t
INT8S	radio/MyTypeDef.h	/^typedef signed   char  INT8S;$/;"	t
INT8U	radio/MyTypeDef.h	/^typedef unsigned char  INT8U;$/;"	t
INTA	device/LPC54018.h	/^    __IO uint32_t INTA;                              \/**< Interrupt A status for all DMA channels., array offset: 0x58, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
INTB	device/LPC54018.h	/^    __IO uint32_t INTB;                              \/**< Interrupt B status for all DMA channels., array offset: 0x60, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
INTCLR	device/LPC54018.h	/^  __O  uint32_t INTCLR;                            \/**< Interrupt Clear register, offset: 0x28 *\/$/;"	m	struct:__anon165
INTEN	device/LPC54018.h	/^  __IO uint32_t INTEN;                             \/**< ADC Interrupt Enable register. This register contains enable bits that enable the sequence-A, sequence-B, threshold compare and data overrun interrupts to be generated., offset: 0x64 *\/$/;"	m	struct:__anon140
INTEN	device/LPC54018.h	/^  __IO uint32_t INTEN;                             \/**< USB interrupt enable register, offset: 0x24 *\/$/;"	m	struct:__anon187
INTEN	device/LPC54018.h	/^  __IO uint32_t INTEN;                             \/**< USB interrupt enable register, offset: 0x24 *\/$/;"	m	struct:__anon189
INTENCLR	device/LPC54018.h	/^    __O  uint32_t INTENCLR;                          \/**< Interrupt Enable Clear for all DMA channels., array offset: 0x50, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
INTENCLR	device/LPC54018.h	/^  __O  uint32_t INTENCLR;                          \/**< Interrupt Clear register, offset: 0xC *\/$/;"	m	struct:__anon178
INTENCLR	device/LPC54018.h	/^  __O  uint32_t INTENCLR;                          \/**< Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared., offset: 0x10 *\/$/;"	m	struct:__anon186
INTENCLR	device/LPC54018.h	/^  __O  uint32_t INTENCLR;                          \/**< Interrupt Enable Clear register., offset: 0x80C *\/$/;"	m	struct:__anon160
INTENCLR	device/LPC54018.h	/^  __O  uint32_t INTENCLR;                          \/**< SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared., offset: 0x410 *\/$/;"	m	struct:__anon183
INTENSET	device/LPC54018.h	/^    __IO uint32_t INTENSET;                          \/**< Interrupt Enable read and Set for all DMA channels., array offset: 0x48, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
INTENSET	device/LPC54018.h	/^  __IO uint32_t INTENSET;                          \/**< Interrupt Enable Set and read register., offset: 0x808 *\/$/;"	m	struct:__anon160
INTENSET	device/LPC54018.h	/^  __IO uint32_t INTENSET;                          \/**< Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set., offset: 0xC *\/$/;"	m	struct:__anon186
INTENSET	device/LPC54018.h	/^  __IO uint32_t INTENSET;                          \/**< Interrupt Enable register, offset: 0x8 *\/$/;"	m	struct:__anon178
INTENSET	device/LPC54018.h	/^  __IO uint32_t INTENSET;                          \/**< SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set., offset: 0x40C *\/$/;"	m	struct:__anon183
INTMASK	device/LPC54018.h	/^  __IO uint32_t INTMASK;                           \/**< Interrupt Mask register, offset: 0x24 *\/$/;"	m	struct:__anon177
INTMSK	device/LPC54018.h	/^  __IO uint32_t INTMSK;                            \/**< Interrupt Mask register, offset: 0x1C *\/$/;"	m	struct:__anon165
INTRAW	device/LPC54018.h	/^  __I  uint32_t INTRAW;                            \/**< Raw Interrupt Status register, offset: 0x20 *\/$/;"	m	struct:__anon165
INTSETSTAT	device/LPC54018.h	/^  __IO uint32_t INTSETSTAT;                        \/**< USB set interrupt status register, offset: 0x28 *\/$/;"	m	struct:__anon187
INTSETSTAT	device/LPC54018.h	/^  __IO uint32_t INTSETSTAT;                        \/**< USB set interrupt status register, offset: 0x28 *\/$/;"	m	struct:__anon189
INTSTAT	device/LPC54018.h	/^  __I  uint32_t INTSTAT;                           \/**< Interrupt Status register for Master, Slave, and Monitor functions., offset: 0x818 *\/$/;"	m	struct:__anon160
INTSTAT	device/LPC54018.h	/^  __I  uint32_t INTSTAT;                           \/**< Interrupt status register. Reflects interrupts that are currently enabled., offset: 0x24 *\/$/;"	m	struct:__anon186
INTSTAT	device/LPC54018.h	/^  __I  uint32_t INTSTAT;                           \/**< Interrupt status., offset: 0x4 *\/$/;"	m	struct:__anon146
INTSTAT	device/LPC54018.h	/^  __I  uint32_t INTSTAT;                           \/**< Masked Interrupt Status register, offset: 0x24 *\/$/;"	m	struct:__anon165
INTSTAT	device/LPC54018.h	/^  __I  uint32_t INTSTAT;                           \/**< SPI Interrupt Status, offset: 0x428 *\/$/;"	m	struct:__anon183
INTSTAT	device/LPC54018.h	/^  __IO uint32_t INTSTAT;                           \/**< USB interrupt status register, offset: 0x20 *\/$/;"	m	struct:__anon187
INTSTAT	device/LPC54018.h	/^  __IO uint32_t INTSTAT;                           \/**< USB interrupt status register, offset: 0x20 *\/$/;"	m	struct:__anon189
INTVAL	device/LPC54018.h	/^    __IO uint32_t INTVAL;                            \/**< MRT Time interval value register. This value is loaded into the TIMER register., array offset: 0x0, array step: 0x10 *\/$/;"	m	struct:__anon166::__anon167
INT_PTD_BASE_ADDR	device/LPC54018.h	/^  __IO uint32_t INT_PTD_BASE_ADDR;                 \/**< Memory base address where INT PTD0 is stored, offset: 0x18 *\/$/;"	m	struct:__anon190
INT_PTD_DONE_MAP	device/LPC54018.h	/^  __IO uint32_t INT_PTD_DONE_MAP;                  \/**< Done map for each INT PTD, offset: 0x40 *\/$/;"	m	struct:__anon190
INT_PTD_SKIP_MAP	device/LPC54018.h	/^  __IO uint32_t INT_PTD_SKIP_MAP;                  \/**< Skip map for each INT PTD, offset: 0x44 *\/$/;"	m	struct:__anon190
IN_BADCLASS	lwip/src/include/lwip/inet.h	119;"	d
IN_CLASSA	lwip/src/include/lwip/inet.h	92;"	d
IN_CLASSA_HOST	lwip/src/include/lwip/inet.h	95;"	d
IN_CLASSA_MAX	lwip/src/include/lwip/inet.h	96;"	d
IN_CLASSA_NET	lwip/src/include/lwip/inet.h	93;"	d
IN_CLASSA_NSHIFT	lwip/src/include/lwip/inet.h	94;"	d
IN_CLASSB	lwip/src/include/lwip/inet.h	98;"	d
IN_CLASSB_HOST	lwip/src/include/lwip/inet.h	101;"	d
IN_CLASSB_MAX	lwip/src/include/lwip/inet.h	102;"	d
IN_CLASSB_NET	lwip/src/include/lwip/inet.h	99;"	d
IN_CLASSB_NSHIFT	lwip/src/include/lwip/inet.h	100;"	d
IN_CLASSC	lwip/src/include/lwip/inet.h	104;"	d
IN_CLASSC_HOST	lwip/src/include/lwip/inet.h	107;"	d
IN_CLASSC_MAX	lwip/src/include/lwip/inet.h	108;"	d
IN_CLASSC_NET	lwip/src/include/lwip/inet.h	105;"	d
IN_CLASSC_NSHIFT	lwip/src/include/lwip/inet.h	106;"	d
IN_CLASSD	lwip/src/include/lwip/inet.h	110;"	d
IN_CLASSD_HOST	lwip/src/include/lwip/inet.h	113;"	d
IN_CLASSD_MAX	lwip/src/include/lwip/inet.h	114;"	d
IN_CLASSD_NET	lwip/src/include/lwip/inet.h	111;"	d
IN_CLASSD_NSHIFT	lwip/src/include/lwip/inet.h	112;"	d
IN_EXPERIMENTAL	lwip/src/include/lwip/inet.h	118;"	d
IN_LOOPBACKNET	lwip/src/include/lwip/inet.h	121;"	d
IN_MULTICAST	lwip/src/include/lwip/inet.h	116;"	d
IN_NONBLOCKING_CONNECT	lwip/src/api/api_msg.c	66;"	d	file:
IOCFG	device/LPC54018.h	/^  __IO uint32_t IOCFG;                             \/**< I\/O Configuration register, offset: 0xF0C *\/$/;"	m	struct:__anon149
IOCON	device/LPC54018.h	6952;"	d
IOCON_ANALOG_EN	drivers/fsl_iocon.h	185;"	d
IOCON_ANALOG_EN	drivers/fsl_iocon.h	95;"	d
IOCON_AWS_EN	drivers/fsl_iocon.h	120;"	d
IOCON_BASE	device/LPC54018.h	6950;"	d
IOCON_BASE_ADDRS	device/LPC54018.h	6954;"	d
IOCON_BASE_PTRS	device/LPC54018.h	6956;"	d
IOCON_CLKDIV	drivers/fsl_iocon.h	148;"	d
IOCON_CLKDIV	drivers/fsl_iocon.h	224;"	d
IOCON_CLOCKS	drivers/fsl_clock.h	101;"	d
IOCON_DIGITAL_EN	drivers/fsl_iocon.h	186;"	d
IOCON_DIGITAL_EN	drivers/fsl_iocon.h	96;"	d
IOCON_ECS_OFF	drivers/fsl_iocon.h	129;"	d
IOCON_ECS_ON	drivers/fsl_iocon.h	130;"	d
IOCON_FUNC0	drivers/fsl_iocon.h	154;"	d
IOCON_FUNC0	drivers/fsl_iocon.h	52;"	d
IOCON_FUNC1	drivers/fsl_iocon.h	155;"	d
IOCON_FUNC1	drivers/fsl_iocon.h	53;"	d
IOCON_FUNC10	drivers/fsl_iocon.h	62;"	d
IOCON_FUNC11	drivers/fsl_iocon.h	63;"	d
IOCON_FUNC12	drivers/fsl_iocon.h	64;"	d
IOCON_FUNC13	drivers/fsl_iocon.h	65;"	d
IOCON_FUNC14	drivers/fsl_iocon.h	66;"	d
IOCON_FUNC15	drivers/fsl_iocon.h	67;"	d
IOCON_FUNC2	drivers/fsl_iocon.h	156;"	d
IOCON_FUNC2	drivers/fsl_iocon.h	54;"	d
IOCON_FUNC3	drivers/fsl_iocon.h	157;"	d
IOCON_FUNC3	drivers/fsl_iocon.h	55;"	d
IOCON_FUNC4	drivers/fsl_iocon.h	158;"	d
IOCON_FUNC4	drivers/fsl_iocon.h	56;"	d
IOCON_FUNC5	drivers/fsl_iocon.h	159;"	d
IOCON_FUNC5	drivers/fsl_iocon.h	57;"	d
IOCON_FUNC6	drivers/fsl_iocon.h	160;"	d
IOCON_FUNC6	drivers/fsl_iocon.h	58;"	d
IOCON_FUNC7	drivers/fsl_iocon.h	161;"	d
IOCON_FUNC7	drivers/fsl_iocon.h	59;"	d
IOCON_FUNC8	drivers/fsl_iocon.h	60;"	d
IOCON_FUNC9	drivers/fsl_iocon.h	61;"	d
IOCON_GPIO_MODE	drivers/fsl_iocon.h	171;"	d
IOCON_GPIO_MODE	drivers/fsl_iocon.h	176;"	d
IOCON_GPIO_MODE	drivers/fsl_iocon.h	76;"	d
IOCON_GPIO_MODE	drivers/fsl_iocon.h	81;"	d
IOCON_I2CFILTER_OFF	drivers/fsl_iocon.h	115;"	d
IOCON_I2CFILTER_OFF	drivers/fsl_iocon.h	205;"	d
IOCON_I2CFILTER_ON	drivers/fsl_iocon.h	116;"	d
IOCON_I2CFILTER_ON	drivers/fsl_iocon.h	206;"	d
IOCON_I2C_HIGHDRIVER	drivers/fsl_iocon.h	107;"	d
IOCON_I2C_HIGHDRIVER	drivers/fsl_iocon.h	197;"	d
IOCON_I2C_LOWDRIVER	drivers/fsl_iocon.h	106;"	d
IOCON_I2C_LOWDRIVER	drivers/fsl_iocon.h	196;"	d
IOCON_I2C_SLEW	drivers/fsl_iocon.h	172;"	d
IOCON_I2C_SLEW	drivers/fsl_iocon.h	177;"	d
IOCON_I2C_SLEW	drivers/fsl_iocon.h	77;"	d
IOCON_I2C_SLEW	drivers/fsl_iocon.h	82;"	d
IOCON_INPFILT_OFF	drivers/fsl_iocon.h	101;"	d
IOCON_INPFILT_OFF	drivers/fsl_iocon.h	191;"	d
IOCON_INPFILT_ON	drivers/fsl_iocon.h	102;"	d
IOCON_INPFILT_ON	drivers/fsl_iocon.h	192;"	d
IOCON_INV_EN	drivers/fsl_iocon.h	181;"	d
IOCON_INV_EN	drivers/fsl_iocon.h	91;"	d
IOCON_MODE_INACT	drivers/fsl_iocon.h	164;"	d
IOCON_MODE_INACT	drivers/fsl_iocon.h	69;"	d
IOCON_MODE_PULLDOWN	drivers/fsl_iocon.h	165;"	d
IOCON_MODE_PULLDOWN	drivers/fsl_iocon.h	70;"	d
IOCON_MODE_PULLUP	drivers/fsl_iocon.h	166;"	d
IOCON_MODE_PULLUP	drivers/fsl_iocon.h	71;"	d
IOCON_MODE_REPEATER	drivers/fsl_iocon.h	167;"	d
IOCON_MODE_REPEATER	drivers/fsl_iocon.h	72;"	d
IOCON_OPENDRAIN_EN	drivers/fsl_iocon.h	111;"	d
IOCON_OPENDRAIN_EN	drivers/fsl_iocon.h	201;"	d
IOCON_PIO_COUNT	device/LPC54018.h	6937;"	d
IOCON_PIO_COUNT2	device/LPC54018.h	6940;"	d
IOCON_PIO_DIGIMODE	device/LPC54018.h	6897;"	d
IOCON_PIO_DIGIMODE_MASK	device/LPC54018.h	6891;"	d
IOCON_PIO_DIGIMODE_SHIFT	device/LPC54018.h	6892;"	d
IOCON_PIO_DIGITAL_EN	board/pin_mux.c	37;"	d	file:
IOCON_PIO_DIGITAL_EN	board/pin_mux.c	98;"	d	file:
IOCON_PIO_FILTEROFF	device/LPC54018.h	6904;"	d
IOCON_PIO_FILTEROFF_MASK	device/LPC54018.h	6898;"	d
IOCON_PIO_FILTEROFF_SHIFT	device/LPC54018.h	6899;"	d
IOCON_PIO_FUNC	device/LPC54018.h	6867;"	d
IOCON_PIO_FUNC0	board/pin_mux.c	99;"	d	file:
IOCON_PIO_FUNC1	board/pin_mux.c	100;"	d	file:
IOCON_PIO_FUNC1	board/pin_mux.c	38;"	d	file:
IOCON_PIO_FUNC2	board/pin_mux.c	101;"	d	file:
IOCON_PIO_FUNC3	board/pin_mux.c	102;"	d	file:
IOCON_PIO_FUNC5	board/pin_mux.c	39;"	d	file:
IOCON_PIO_FUNC7	board/pin_mux.c	40;"	d	file:
IOCON_PIO_FUNC_MASK	device/LPC54018.h	6852;"	d
IOCON_PIO_FUNC_SHIFT	device/LPC54018.h	6853;"	d
IOCON_PIO_I2CDRIVE	device/LPC54018.h	6912;"	d
IOCON_PIO_I2CDRIVE_HIGH	board/pin_mux.c	103;"	d	file:
IOCON_PIO_I2CDRIVE_MASK	device/LPC54018.h	6905;"	d
IOCON_PIO_I2CDRIVE_SHIFT	device/LPC54018.h	6906;"	d
IOCON_PIO_I2CFILTEROFF	device/LPC54018.h	6926;"	d
IOCON_PIO_I2CFILTEROFF_MASK	device/LPC54018.h	6920;"	d
IOCON_PIO_I2CFILTEROFF_SHIFT	device/LPC54018.h	6921;"	d
IOCON_PIO_I2CFILTER_DI	board/pin_mux.c	104;"	d	file:
IOCON_PIO_I2CSLEW	device/LPC54018.h	6883;"	d
IOCON_PIO_I2CSLEW_I2C	board/pin_mux.c	105;"	d	file:
IOCON_PIO_I2CSLEW_MASK	device/LPC54018.h	6877;"	d
IOCON_PIO_I2CSLEW_SHIFT	device/LPC54018.h	6878;"	d
IOCON_PIO_INPFILT_OFF	board/pin_mux.c	106;"	d	file:
IOCON_PIO_INPFILT_OFF	board/pin_mux.c	41;"	d	file:
IOCON_PIO_INVERT	device/LPC54018.h	6890;"	d
IOCON_PIO_INVERT_MASK	device/LPC54018.h	6884;"	d
IOCON_PIO_INVERT_SHIFT	device/LPC54018.h	6885;"	d
IOCON_PIO_INV_DI	board/pin_mux.c	107;"	d	file:
IOCON_PIO_INV_DI	board/pin_mux.c	42;"	d	file:
IOCON_PIO_MODE	device/LPC54018.h	6876;"	d
IOCON_PIO_MODE_INACT	board/pin_mux.c	108;"	d	file:
IOCON_PIO_MODE_INACT	board/pin_mux.c	43;"	d	file:
IOCON_PIO_MODE_MASK	device/LPC54018.h	6868;"	d
IOCON_PIO_MODE_PULLUP	board/pin_mux.c	109;"	d	file:
IOCON_PIO_MODE_PULLUP	board/pin_mux.c	44;"	d	file:
IOCON_PIO_MODE_SHIFT	device/LPC54018.h	6869;"	d
IOCON_PIO_OD	device/LPC54018.h	6933;"	d
IOCON_PIO_OD_MASK	device/LPC54018.h	6927;"	d
IOCON_PIO_OD_SHIFT	device/LPC54018.h	6928;"	d
IOCON_PIO_OPENDRAIN_DI	board/pin_mux.c	110;"	d	file:
IOCON_PIO_OPENDRAIN_DI	board/pin_mux.c	45;"	d	file:
IOCON_PIO_SLEW	device/LPC54018.h	6919;"	d
IOCON_PIO_SLEW_FAST	board/pin_mux.c	111;"	d	file:
IOCON_PIO_SLEW_MASK	device/LPC54018.h	6913;"	d
IOCON_PIO_SLEW_SHIFT	device/LPC54018.h	6914;"	d
IOCON_PIO_SLEW_STANDARD	board/pin_mux.c	112;"	d	file:
IOCON_PIO_SLEW_STANDARD	board/pin_mux.c	46;"	d	file:
IOCON_PinMuxSet	drivers/fsl_iocon.h	/^__STATIC_INLINE void IOCON_PinMuxSet(IOCON_Type *base, uint8_t ionumber, uint32_t modefunc)$/;"	f
IOCON_PinMuxSet	drivers/fsl_iocon.h	/^__STATIC_INLINE void IOCON_PinMuxSet(IOCON_Type *base, uint8_t port, uint8_t pin, uint32_t modefunc)$/;"	f
IOCON_RSTS	drivers/fsl_reset.h	151;"	d
IOCON_SLEW_FAST	drivers/fsl_iocon.h	87;"	d
IOCON_SLEW_STANDARD	drivers/fsl_iocon.h	86;"	d
IOCON_SSEL_1V8	drivers/fsl_iocon.h	125;"	d
IOCON_SSEL_3V3	drivers/fsl_iocon.h	124;"	d
IOCON_S_MODE	drivers/fsl_iocon.h	144;"	d
IOCON_S_MODE	drivers/fsl_iocon.h	220;"	d
IOCON_S_MODE_0CLK	drivers/fsl_iocon.h	134;"	d
IOCON_S_MODE_0CLK	drivers/fsl_iocon.h	210;"	d
IOCON_S_MODE_1CLK	drivers/fsl_iocon.h	135;"	d
IOCON_S_MODE_1CLK	drivers/fsl_iocon.h	211;"	d
IOCON_S_MODE_2CLK	drivers/fsl_iocon.h	138;"	d
IOCON_S_MODE_2CLK	drivers/fsl_iocon.h	214;"	d
IOCON_S_MODE_3CLK	drivers/fsl_iocon.h	141;"	d
IOCON_S_MODE_3CLK	drivers/fsl_iocon.h	217;"	d
IOCON_SetPinMuxing	drivers/fsl_iocon.h	/^__STATIC_INLINE void IOCON_SetPinMuxing(IOCON_Type *base, const iocon_group_t *pinArray, uint32_t arrayLength)$/;"	f
IOCON_Type	device/LPC54018.h	/^} IOCON_Type;$/;"	t	typeref:struct:__anon164
IOCPARM_MASK	lwip/src/include/lwip/sockets.h	403;"	d
IOC_IN	lwip/src/include/lwip/sockets.h	406;"	d
IOC_INOUT	lwip/src/include/lwip/sockets.h	407;"	d
IOC_OUT	lwip/src/include/lwip/sockets.h	405;"	d
IOC_VOID	lwip/src/include/lwip/sockets.h	404;"	d
IOV_MAX	lwip/src/include/lwip/sockets.h	115;"	d
IP	CMSIS/core_cm4.h	/^  __IOM uint8_t  IP[240U];               \/*!< Offset: 0x300 (R\/W)  Interrupt Priority Register (8Bit wide) *\/$/;"	m	struct:__anon39
IP46_ADDR_ANY	lwip/src/include/lwip/ip_addr.h	258;"	d
IP46_ADDR_ANY	lwip/src/include/lwip/ip_addr.h	314;"	d
IP46_ADDR_ANY	lwip/src/include/lwip/ip_addr.h	362;"	d
IP4ADDR_PORT_TO_SOCKADDR	lwip/src/api/sockets.c	89;"	d	file:
IP4ADDR_STRLEN_MAX	lwip/src/include/lwip/ip4_addr.h	199;"	d
IP4MAPPED_HEADER	lwip/src/core/ipv6/ip6_addr.c	233;"	d	file:
IP4_ADDR	lwip/src/include/lwip/ip4_addr.h	104;"	d
IP4_ADDR_ANY	lwip/src/include/lwip/ip_addr.h	388;"	d
IP4_ADDR_ANY4	lwip/src/include/lwip/ip_addr.h	394;"	d
IP4_ADDR_BROADCAST	lwip/src/include/lwip/ip_addr.h	399;"	d
IP6ADDR_PORT_TO_SOCKADDR	lwip/src/api/sockets.c	101;"	d	file:
IP6ADDR_STRLEN_MAX	lwip/src/include/lwip/ip6_addr.h	337;"	d
IP6H_FL	lwip/src/include/lwip/prot/ip6.h	99;"	d
IP6H_HOPLIM	lwip/src/include/lwip/prot/ip6.h	103;"	d
IP6H_HOPLIM_SET	lwip/src/include/lwip/prot/ip6.h	107;"	d
IP6H_NEXTH	lwip/src/include/lwip/prot/ip6.h	101;"	d
IP6H_NEXTH_P	lwip/src/include/lwip/prot/ip6.h	102;"	d
IP6H_NEXTH_SET	lwip/src/include/lwip/prot/ip6.h	106;"	d
IP6H_PLEN	lwip/src/include/lwip/prot/ip6.h	100;"	d
IP6H_PLEN_SET	lwip/src/include/lwip/prot/ip6.h	105;"	d
IP6H_TC	lwip/src/include/lwip/prot/ip6.h	98;"	d
IP6H_V	lwip/src/include/lwip/prot/ip6.h	97;"	d
IP6H_VTCFL_SET	lwip/src/include/lwip/prot/ip6.h	104;"	d
IP6_ADDR	lwip/src/include/lwip/ip6_addr.h	75;"	d
IP6_ADDR_ANY	lwip/src/include/lwip/ip_addr.h	412;"	d
IP6_ADDR_ANY6	lwip/src/include/lwip/ip_addr.h	418;"	d
IP6_ADDR_BLOCK1	lwip/src/include/lwip/ip6_addr.h	83;"	d
IP6_ADDR_BLOCK2	lwip/src/include/lwip/ip6_addr.h	85;"	d
IP6_ADDR_BLOCK3	lwip/src/include/lwip/ip6_addr.h	87;"	d
IP6_ADDR_BLOCK4	lwip/src/include/lwip/ip6_addr.h	89;"	d
IP6_ADDR_BLOCK5	lwip/src/include/lwip/ip6_addr.h	91;"	d
IP6_ADDR_BLOCK6	lwip/src/include/lwip/ip6_addr.h	93;"	d
IP6_ADDR_BLOCK7	lwip/src/include/lwip/ip6_addr.h	95;"	d
IP6_ADDR_BLOCK8	lwip/src/include/lwip/ip6_addr.h	97;"	d
IP6_ADDR_DEPRECATED	lwip/src/include/lwip/ip6_addr.h	294;"	d
IP6_ADDR_DUPLICATED	lwip/src/include/lwip/ip6_addr.h	295;"	d
IP6_ADDR_INVALID	lwip/src/include/lwip/ip6_addr.h	283;"	d
IP6_ADDR_LIFE_INFINITE	lwip/src/include/lwip/ip6_addr.h	308;"	d
IP6_ADDR_LIFE_STATIC	lwip/src/include/lwip/ip6_addr.h	307;"	d
IP6_ADDR_PART	lwip/src/include/lwip/ip6_addr.h	70;"	d
IP6_ADDR_PREFERRED	lwip/src/include/lwip/ip6_addr.h	293;"	d
IP6_ADDR_TENTATIVE	lwip/src/include/lwip/ip6_addr.h	284;"	d
IP6_ADDR_TENTATIVE_1	lwip/src/include/lwip/ip6_addr.h	285;"	d
IP6_ADDR_TENTATIVE_2	lwip/src/include/lwip/ip6_addr.h	286;"	d
IP6_ADDR_TENTATIVE_3	lwip/src/include/lwip/ip6_addr.h	287;"	d
IP6_ADDR_TENTATIVE_4	lwip/src/include/lwip/ip6_addr.h	288;"	d
IP6_ADDR_TENTATIVE_5	lwip/src/include/lwip/ip6_addr.h	289;"	d
IP6_ADDR_TENTATIVE_6	lwip/src/include/lwip/ip6_addr.h	290;"	d
IP6_ADDR_TENTATIVE_7	lwip/src/include/lwip/ip6_addr.h	291;"	d
IP6_ADDR_TENTATIVE_COUNT_MASK	lwip/src/include/lwip/ip6_addr.h	297;"	d
IP6_ADDR_VALID	lwip/src/include/lwip/ip6_addr.h	292;"	d
IP6_ADDR_ZONECHECK	lwip/src/include/lwip/ip6_zone.h	281;"	d
IP6_ADDR_ZONECHECK	lwip/src/include/lwip/ip6_zone.h	293;"	d
IP6_ADDR_ZONECHECK_NETIF	lwip/src/include/lwip/ip6_zone.h	285;"	d
IP6_ADDR_ZONECHECK_NETIF	lwip/src/include/lwip/ip6_zone.h	294;"	d
IP6_DEBUG	lwip/src/include/lwip/opt.h	3478;"	d
IP6_DEST_HLEN	lwip/src/include/lwip/prot/ip6.h	158;"	d
IP6_DEST_NEXTH	lwip/src/include/lwip/prot/ip6.h	174;"	d
IP6_FRAG_HLEN	lwip/src/include/lwip/prot/ip6.h	203;"	d
IP6_FRAG_ID	lwip/src/include/lwip/prot/ip6.h	227;"	d
IP6_FRAG_MBIT	lwip/src/include/lwip/prot/ip6.h	226;"	d
IP6_FRAG_MORE_FLAG	lwip/src/include/lwip/prot/ip6.h	205;"	d
IP6_FRAG_NEXTH	lwip/src/include/lwip/prot/ip6.h	225;"	d
IP6_FRAG_OFFSET_MASK	lwip/src/include/lwip/prot/ip6.h	204;"	d
IP6_FRAG_STATS	lwip/src/include/lwip/opt.h	2209;"	d
IP6_FRAG_STATS	lwip/src/include/lwip/opt.h	2249;"	d
IP6_FRAG_STATS_DISPLAY	lwip/src/include/lwip/stats.h	442;"	d
IP6_FRAG_STATS_DISPLAY	lwip/src/include/lwip/stats.h	445;"	d
IP6_FRAG_STATS_INC	lwip/src/include/lwip/stats.h	441;"	d
IP6_FRAG_STATS_INC	lwip/src/include/lwip/stats.h	444;"	d
IP6_HBH_HLEN	lwip/src/include/lwip/prot/ip6.h	139;"	d
IP6_HBH_NEXTH	lwip/src/include/lwip/prot/ip6.h	155;"	d
IP6_HDRLEN	lwip/src/netif/ppp/ipv6cp.c	1499;"	d	file:
IP6_HLEN	lwip/src/include/lwip/prot/ip6.h	62;"	d
IP6_HOME_ADDRESS_OPTION	lwip/src/include/lwip/prot/ip6.h	114;"	d
IP6_JUMBO_OPTION	lwip/src/include/lwip/prot/ip6.h	113;"	d
IP6_MULTICAST	lwip/src/include/lwip/ip6_zone.h	/^  IP6_MULTICAST = 2$/;"	e	enum:lwip_ipv6_scope_type
IP6_MULTICAST_SCOPE_ADMIN_LOCAL	lwip/src/include/lwip/ip6_addr.h	223;"	d
IP6_MULTICAST_SCOPE_GLOBAL	lwip/src/include/lwip/ip6_addr.h	226;"	d
IP6_MULTICAST_SCOPE_INTERFACE_LOCAL	lwip/src/include/lwip/ip6_addr.h	220;"	d
IP6_MULTICAST_SCOPE_LINK_LOCAL	lwip/src/include/lwip/ip6_addr.h	221;"	d
IP6_MULTICAST_SCOPE_ORGANIZATION_LOCAL	lwip/src/include/lwip/ip6_addr.h	225;"	d
IP6_MULTICAST_SCOPE_RESERVED	lwip/src/include/lwip/ip6_addr.h	218;"	d
IP6_MULTICAST_SCOPE_RESERVED0	lwip/src/include/lwip/ip6_addr.h	219;"	d
IP6_MULTICAST_SCOPE_RESERVED3	lwip/src/include/lwip/ip6_addr.h	222;"	d
IP6_MULTICAST_SCOPE_RESERVEDF	lwip/src/include/lwip/ip6_addr.h	227;"	d
IP6_MULTICAST_SCOPE_SITE_LOCAL	lwip/src/include/lwip/ip6_addr.h	224;"	d
IP6_NEXTH_DESTOPTS	lwip/src/include/lwip/prot/ip6.h	72;"	d
IP6_NEXTH_ENCAPS	lwip/src/include/lwip/prot/ip6.h	67;"	d
IP6_NEXTH_FRAGMENT	lwip/src/include/lwip/prot/ip6.h	69;"	d
IP6_NEXTH_HOPBYHOP	lwip/src/include/lwip/prot/ip6.h	64;"	d
IP6_NEXTH_ICMP6	lwip/src/include/lwip/prot/ip6.h	70;"	d
IP6_NEXTH_NONE	lwip/src/include/lwip/prot/ip6.h	71;"	d
IP6_NEXTH_ROUTING	lwip/src/include/lwip/prot/ip6.h	68;"	d
IP6_NEXTH_TCP	lwip/src/include/lwip/prot/ip6.h	65;"	d
IP6_NEXTH_UDP	lwip/src/include/lwip/prot/ip6.h	66;"	d
IP6_NEXTH_UDPLITE	lwip/src/include/lwip/prot/ip6.h	73;"	d
IP6_NHDR_FRAG	lwip/src/netif/ppp/ipv6cp.c	1500;"	d	file:
IP6_NO_ZONE	lwip/src/include/lwip/ip6_zone.h	101;"	d
IP6_OPT_DLEN	lwip/src/include/lwip/prot/ip6.h	136;"	d
IP6_OPT_HLEN	lwip/src/include/lwip/prot/ip6.h	132;"	d
IP6_OPT_TYPE	lwip/src/include/lwip/prot/ip6.h	135;"	d
IP6_OPT_TYPE_ACTION	lwip/src/include/lwip/prot/ip6.h	133;"	d
IP6_OPT_TYPE_CHANGE	lwip/src/include/lwip/prot/ip6.h	134;"	d
IP6_PAD1_OPTION	lwip/src/include/lwip/prot/ip6.h	110;"	d
IP6_PADN_OPTION	lwip/src/include/lwip/prot/ip6.h	111;"	d
IP6_REASS_TMR_INTERVAL	lwip/src/include/lwip/ip6_frag.h	58;"	d
IP6_ROUTER_ALERT_DLEN	lwip/src/include/lwip/prot/ip6.h	115;"	d
IP6_ROUTER_ALERT_OPTION	lwip/src/include/lwip/prot/ip6.h	112;"	d
IP6_ROUTER_ALERT_VALUE_MLD	lwip/src/include/lwip/prot/ip6.h	116;"	d
IP6_ROUT_NEXTH	lwip/src/include/lwip/prot/ip6.h	198;"	d
IP6_ROUT_RPL	lwip/src/include/lwip/prot/ip6.h	178;"	d
IP6_ROUT_SEG_LEFT	lwip/src/include/lwip/prot/ip6.h	200;"	d
IP6_ROUT_TYPE	lwip/src/include/lwip/prot/ip6.h	199;"	d
IP6_ROUT_TYPE2	lwip/src/include/lwip/prot/ip6.h	177;"	d
IP6_STATS	lwip/src/include/lwip/opt.h	2195;"	d
IP6_STATS	lwip/src/include/lwip/opt.h	2247;"	d
IP6_STATS_DISPLAY	lwip/src/include/lwip/stats.h	426;"	d
IP6_STATS_DISPLAY	lwip/src/include/lwip/stats.h	429;"	d
IP6_STATS_INC	lwip/src/include/lwip/stats.h	425;"	d
IP6_STATS_INC	lwip/src/include/lwip/stats.h	428;"	d
IP6_UNICAST	lwip/src/include/lwip/ip6_zone.h	/^  IP6_UNICAST   = 1,$/;"	e	enum:lwip_ipv6_scope_type
IP6_UNKNOWN	lwip/src/include/lwip/ip6_zone.h	/^  IP6_UNKNOWN   = 0,$/;"	e	enum:lwip_ipv6_scope_type
IPADDR4_INIT	lwip/src/include/lwip/ip_addr.h	271;"	d
IPADDR4_INIT	lwip/src/include/lwip/ip_addr.h	81;"	d
IPADDR4_INIT_BYTES	lwip/src/include/lwip/ip_addr.h	272;"	d
IPADDR4_INIT_BYTES	lwip/src/include/lwip/ip_addr.h	83;"	d
IPADDR6_INIT	lwip/src/include/lwip/ip_addr.h	319;"	d
IPADDR6_INIT	lwip/src/include/lwip/ip_addr.h	86;"	d
IPADDR6_INIT_HOST	lwip/src/include/lwip/ip_addr.h	320;"	d
IPADDR6_INIT_HOST	lwip/src/include/lwip/ip_addr.h	88;"	d
IPADDR6_ZONE_INIT	lwip/src/include/lwip/ip6_zone.h	106;"	d
IPADDR6_ZONE_INIT	lwip/src/include/lwip/ip6_zone.h	261;"	d
IPADDR_ANY	lwip/src/include/lwip/ip4_addr.h	67;"	d
IPADDR_ANY_TYPE_INIT	lwip/src/include/lwip/ip_addr.h	93;"	d
IPADDR_BROADCAST	lwip/src/include/lwip/ip4_addr.h	69;"	d
IPADDR_LOOPBACK	lwip/src/include/lwip/ip4_addr.h	65;"	d
IPADDR_NONE	lwip/src/include/lwip/ip4_addr.h	63;"	d
IPADDR_PORT_TO_SOCKADDR	lwip/src/api/sockets.c	126;"	d	file:
IPADDR_PORT_TO_SOCKADDR	lwip/src/api/sockets.c	139;"	d	file:
IPADDR_PORT_TO_SOCKADDR	lwip/src/api/sockets.c	148;"	d	file:
IPADDR_STRLEN_MAX	lwip/src/include/lwip/ip_addr.h	244;"	d
IPADDR_STRLEN_MAX	lwip/src/include/lwip/ip_addr.h	312;"	d
IPADDR_STRLEN_MAX	lwip/src/include/lwip/ip_addr.h	360;"	d
IPADDR_TYPE_ANY	lwip/src/include/lwip/ip_addr.h	/^  IPADDR_TYPE_ANY = 46U$/;"	e	enum:lwip_ip_addr_type
IPADDR_TYPE_V4	lwip/src/include/lwip/ip_addr.h	/^  IPADDR_TYPE_V4 =   0U,$/;"	e	enum:lwip_ip_addr_type
IPADDR_TYPE_V6	lwip/src/include/lwip/ip_addr.h	/^  IPADDR_TYPE_V6 =   6U,$/;"	e	enum:lwip_ip_addr_type
IPADDR_WORDALIGNED_COPY_FROM_IP4_ADDR_T	lwip/src/include/lwip/prot/etharp.h	78;"	d
IPADDR_WORDALIGNED_COPY_TO_IP4_ADDR_T	lwip/src/include/lwip/prot/etharp.h	71;"	d
IPCPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	62;"	d
IPCPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	74;"	d
IPCP_H	lwip/src/include/netif/ppp/ipcp.h	49;"	d
IPCP_VJMODE_OLD	lwip/src/include/netif/ppp/ipcp.h	76;"	d
IPCP_VJMODE_RFC1172	lwip/src/include/netif/ppp/ipcp.h	77;"	d
IPCP_VJMODE_RFC1332	lwip/src/include/netif/ppp/ipcp.h	78;"	d
IPCP_VJ_COMP	lwip/src/include/netif/ppp/ipcp.h	81;"	d
IPCP_VJ_COMP_OLD	lwip/src/include/netif/ppp/ipcp.h	82;"	d
IPFRAG_STATS	lwip/src/include/lwip/opt.h	2137;"	d
IPFRAG_STATS	lwip/src/include/lwip/opt.h	2238;"	d
IPFRAG_STATS_DISPLAY	lwip/src/include/lwip/stats.h	366;"	d
IPFRAG_STATS_DISPLAY	lwip/src/include/lwip/stats.h	369;"	d
IPFRAG_STATS_INC	lwip/src/include/lwip/stats.h	365;"	d
IPFRAG_STATS_INC	lwip/src/include/lwip/stats.h	368;"	d
IPH_CHKSUM	lwip/src/include/lwip/prot/ip4.h	114;"	d
IPH_CHKSUM_SET	lwip/src/include/lwip/prot/ip4.h	124;"	d
IPH_HL	lwip/src/include/lwip/prot/ip4.h	105;"	d
IPH_HL_BYTES	lwip/src/include/lwip/prot/ip4.h	106;"	d
IPH_ID	lwip/src/include/lwip/prot/ip4.h	109;"	d
IPH_ID_SET	lwip/src/include/lwip/prot/ip4.h	120;"	d
IPH_LEN	lwip/src/include/lwip/prot/ip4.h	108;"	d
IPH_LEN_SET	lwip/src/include/lwip/prot/ip4.h	119;"	d
IPH_OFFSET	lwip/src/include/lwip/prot/ip4.h	110;"	d
IPH_OFFSET_BYTES	lwip/src/include/lwip/prot/ip4.h	111;"	d
IPH_OFFSET_SET	lwip/src/include/lwip/prot/ip4.h	121;"	d
IPH_PROTO	lwip/src/include/lwip/prot/ip4.h	113;"	d
IPH_PROTO_SET	lwip/src/include/lwip/prot/ip4.h	123;"	d
IPH_TOS	lwip/src/include/lwip/prot/ip4.h	107;"	d
IPH_TOS_SET	lwip/src/include/lwip/prot/ip4.h	118;"	d
IPH_TTL	lwip/src/include/lwip/prot/ip4.h	112;"	d
IPH_TTL_SET	lwip/src/include/lwip/prot/ip4.h	122;"	d
IPH_V	lwip/src/include/lwip/prot/ip4.h	104;"	d
IPH_VHL_SET	lwip/src/include/lwip/prot/ip4.h	117;"	d
IPPROTO_ICMP	lwip/src/include/lwip/sockets.h	249;"	d
IPPROTO_ICMPV6	lwip/src/include/lwip/sockets.h	254;"	d
IPPROTO_IP	lwip/src/include/lwip/sockets.h	248;"	d
IPPROTO_IPV6	lwip/src/include/lwip/sockets.h	253;"	d
IPPROTO_RAW	lwip/src/include/lwip/sockets.h	257;"	d
IPPROTO_TCP	lwip/src/include/lwip/sockets.h	250;"	d
IPPROTO_TCP	lwip/src/netif/ppp/ipcp.c	2375;"	d	file:
IPPROTO_UDP	lwip/src/include/lwip/sockets.h	251;"	d
IPPROTO_UDPLITE	lwip/src/include/lwip/sockets.h	256;"	d
IPR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t IPR[124U];              \/*!< Offset: 0x300 (R\/W)  Interrupt Priority Register *\/$/;"	m	struct:__anon121
IPR	CMSIS/core_armv8mml.h	/^  __IOM uint8_t  IPR[496U];              \/*!< Offset: 0x300 (R\/W)  Interrupt Priority Register (8Bit wide) *\/$/;"	m	struct:__anon17
IPSR_ISR_Msk	CMSIS/core_armv8mbl.h	275;"	d
IPSR_ISR_Msk	CMSIS/core_armv8mml.h	365;"	d
IPSR_ISR_Msk	CMSIS/core_cm4.h	310;"	d
IPSR_ISR_Pos	CMSIS/core_armv8mbl.h	274;"	d
IPSR_ISR_Pos	CMSIS/core_armv8mml.h	364;"	d
IPSR_ISR_Pos	CMSIS/core_cm4.h	309;"	d
IPSR_Type	CMSIS/core_armv8mbl.h	/^} IPSR_Type;$/;"	t	typeref:union:__anon115
IPSR_Type	CMSIS/core_armv8mml.h	/^} IPSR_Type;$/;"	t	typeref:union:__anon11
IPSR_Type	CMSIS/core_cm4.h	/^} IPSR_Type;$/;"	t	typeref:union:__anon33
IPTOS_LOWCOST	lwip/src/include/lwip/sockets.h	368;"	d
IPTOS_LOWDELAY	lwip/src/include/lwip/sockets.h	365;"	d
IPTOS_MINCOST	lwip/src/include/lwip/sockets.h	369;"	d
IPTOS_PREC	lwip/src/include/lwip/sockets.h	381;"	d
IPTOS_PREC_CRITIC_ECP	lwip/src/include/lwip/sockets.h	384;"	d
IPTOS_PREC_FLASH	lwip/src/include/lwip/sockets.h	386;"	d
IPTOS_PREC_FLASHOVERRIDE	lwip/src/include/lwip/sockets.h	385;"	d
IPTOS_PREC_IMMEDIATE	lwip/src/include/lwip/sockets.h	387;"	d
IPTOS_PREC_INTERNETCONTROL	lwip/src/include/lwip/sockets.h	383;"	d
IPTOS_PREC_MASK	lwip/src/include/lwip/sockets.h	380;"	d
IPTOS_PREC_NETCONTROL	lwip/src/include/lwip/sockets.h	382;"	d
IPTOS_PREC_PRIORITY	lwip/src/include/lwip/sockets.h	388;"	d
IPTOS_PREC_ROUTINE	lwip/src/include/lwip/sockets.h	389;"	d
IPTOS_RELIABILITY	lwip/src/include/lwip/sockets.h	367;"	d
IPTOS_THROUGHPUT	lwip/src/include/lwip/sockets.h	366;"	d
IPTOS_TOS	lwip/src/include/lwip/sockets.h	364;"	d
IPTOS_TOS_MASK	lwip/src/include/lwip/sockets.h	363;"	d
IPV6CPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	63;"	d
IPV6CPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	75;"	d
IPV6CP_H	lwip/src/include/netif/ppp/ipv6cp.h	145;"	d
IPV6_ADD_MEMBERSHIP	lwip/src/include/lwip/sockets.h	337;"	d
IPV6_CHECKSUM	lwip/src/include/lwip/sockets.h	290;"	d
IPV6_CUSTOM_SCOPES	lwip/src/include/lwip/ip6_zone.h	155;"	d
IPV6_CUSTOM_SCOPES	lwip/src/include/lwip/ip6_zone.h	269;"	d
IPV6_DROP_MEMBERSHIP	lwip/src/include/lwip/sockets.h	339;"	d
IPV6_FRAG_COPYHEADER	lwip/src/include/lwip/ip6_frag.h	71;"	d
IPV6_FRAG_DEST	lwip/src/include/lwip/ip6_frag.h	81;"	d
IPV6_FRAG_DEST	lwip/src/include/lwip/ip6_frag.h	84;"	d
IPV6_FRAG_REQROOM	lwip/src/core/ipv6/ip6_frag.c	76;"	d	file:
IPV6_FRAG_SRC	lwip/src/include/lwip/ip6_frag.h	80;"	d
IPV6_FRAG_SRC	lwip/src/include/lwip/ip6_frag.h	83;"	d
IPV6_JOIN_GROUP	lwip/src/include/lwip/sockets.h	336;"	d
IPV6_LEAVE_GROUP	lwip/src/include/lwip/sockets.h	338;"	d
IPV6_REASS_MAXAGE	lwip/src/include/lwip/opt.h	2382;"	d
IPV6_V6ONLY	lwip/src/include/lwip/sockets.h	291;"	d
IP_ACCEPT_LINK_LAYER_ADDRESSED_PORT	lwip/src/core/ipv4/ip4.c	92;"	d	file:
IP_ACCEPT_LINK_LAYER_ADDRESSED_PORT	lwip/src/core/ipv4/ip4.c	96;"	d	file:
IP_ACCEPT_LINK_LAYER_ADDRESSED_PORT	lwip/src/core/ipv4/ip4.c	99;"	d	file:
IP_ACCEPT_LINK_LAYER_ADDRESSING	lwip/src/core/ipv4/ip4.c	103;"	d	file:
IP_ACCEPT_LINK_LAYER_ADDRESSING	lwip/src/core/ipv4/ip4.c	83;"	d	file:
IP_ADDR4	lwip/src/include/lwip/ip_addr.h	123;"	d
IP_ADDR4	lwip/src/include/lwip/ip_addr.h	283;"	d
IP_ADDR6	lwip/src/include/lwip/ip_addr.h	126;"	d
IP_ADDR6	lwip/src/include/lwip/ip_addr.h	331;"	d
IP_ADDR6_HOST	lwip/src/include/lwip/ip_addr.h	129;"	d
IP_ADDR6_HOST	lwip/src/include/lwip/ip_addr.h	332;"	d
IP_ADDRESSES_AND_ID_MATCH	lwip/src/core/ipv4/ip4_frag.c	108;"	d	file:
IP_ADDR_ANY	lwip/src/include/lwip/ip_addr.h	382;"	d
IP_ADDR_ANY	lwip/src/include/lwip/ip_addr.h	422;"	d
IP_ADDR_BROADCAST	lwip/src/include/lwip/ip_addr.h	397;"	d
IP_ADDR_PCB_VERSION_MATCH	lwip/src/include/lwip/ip_addr.h	111;"	d
IP_ADDR_PCB_VERSION_MATCH	lwip/src/include/lwip/ip_addr.h	262;"	d
IP_ADDR_PCB_VERSION_MATCH_EXACT	lwip/src/include/lwip/ip_addr.h	110;"	d
IP_ADDR_PCB_VERSION_MATCH_EXACT	lwip/src/include/lwip/ip_addr.h	263;"	d
IP_ADDR_RAW_SIZE	lwip/src/include/lwip/ip_addr.h	108;"	d
IP_ADDR_RAW_SIZE	lwip/src/include/lwip/ip_addr.h	281;"	d
IP_ADDR_RAW_SIZE	lwip/src/include/lwip/ip_addr.h	329;"	d
IP_ADD_MEMBERSHIP	lwip/src/include/lwip/sockets.h	316;"	d
IP_ANY_TYPE	lwip/src/include/lwip/ip_addr.h	429;"	d
IP_ANY_TYPE	lwip/src/include/lwip/ip_addr.h	431;"	d
IP_BADCLASS	lwip/src/include/lwip/ip4_addr.h	99;"	d
IP_CLASSA	lwip/src/include/lwip/ip4_addr.h	75;"	d
IP_CLASSA_HOST	lwip/src/include/lwip/ip4_addr.h	78;"	d
IP_CLASSA_MAX	lwip/src/include/lwip/ip4_addr.h	79;"	d
IP_CLASSA_NET	lwip/src/include/lwip/ip4_addr.h	76;"	d
IP_CLASSA_NSHIFT	lwip/src/include/lwip/ip4_addr.h	77;"	d
IP_CLASSB	lwip/src/include/lwip/ip4_addr.h	81;"	d
IP_CLASSB_HOST	lwip/src/include/lwip/ip4_addr.h	84;"	d
IP_CLASSB_MAX	lwip/src/include/lwip/ip4_addr.h	85;"	d
IP_CLASSB_NET	lwip/src/include/lwip/ip4_addr.h	82;"	d
IP_CLASSB_NSHIFT	lwip/src/include/lwip/ip4_addr.h	83;"	d
IP_CLASSC	lwip/src/include/lwip/ip4_addr.h	87;"	d
IP_CLASSC_HOST	lwip/src/include/lwip/ip4_addr.h	90;"	d
IP_CLASSC_NET	lwip/src/include/lwip/ip4_addr.h	88;"	d
IP_CLASSC_NSHIFT	lwip/src/include/lwip/ip4_addr.h	89;"	d
IP_CLASSD	lwip/src/include/lwip/ip4_addr.h	92;"	d
IP_CLASSD_HOST	lwip/src/include/lwip/ip4_addr.h	95;"	d
IP_CLASSD_NET	lwip/src/include/lwip/ip4_addr.h	93;"	d
IP_CLASSD_NSHIFT	lwip/src/include/lwip/ip4_addr.h	94;"	d
IP_DEBUG	lwip/src/include/lwip/opt.h	3323;"	d
IP_DEFAULT_TTL	lwip/src/include/lwip/opt.h	801;"	d
IP_DF	lwip/src/include/lwip/prot/ip4.h	85;"	d
IP_DROP_MEMBERSHIP	lwip/src/include/lwip/sockets.h	317;"	d
IP_EXPERIMENTAL	lwip/src/include/lwip/ip4_addr.h	98;"	d
IP_FORWARD	lwip/src/include/lwip/opt.h	736;"	d
IP_FORWARD	lwip/src/include/lwip/opt.h	759;"	d
IP_FORWARD	lwip/src/include/lwip/opt.h	760;"	d
IP_FORWARD_ALLOW_TX_ON_RX_NETIF	lwip/src/include/lwip/opt.h	829;"	d
IP_FRAG	lwip/src/include/lwip/opt.h	754;"	d
IP_FRAG	lwip/src/include/lwip/opt.h	763;"	d
IP_FRAG	lwip/src/include/lwip/opt.h	764;"	d
IP_FS_API	emwin/emWin_header/IP_FS.h	/^} IP_FS_API;$/;"	t	typeref:struct:__anon299
IP_FS_FS	emwin/emWin_header/IP_FS.h	115;"	d
IP_FS_FS_AllowHiddenAccess	emwin/emWin_header/IP_FS.h	116;"	d
IP_FS_FS_DenyHiddenAccess	emwin/emWin_header/IP_FS.h	117;"	d
IP_FS_H	emwin/emWin_header/IP_FS.h	46;"	d
IP_FS_READ_ONLY_FILE_ENTRY	emwin/emWin_header/IP_FS.h	/^} IP_FS_READ_ONLY_FILE_ENTRY;$/;"	t	typeref:struct:__anon300
IP_FS_READ_ONLY_FILE_HOOK	emwin/emWin_header/IP_FS.h	/^typedef struct IP_FS_READ_ONLY_FILE_HOOK_STRUCT IP_FS_READ_ONLY_FILE_HOOK;$/;"	t	typeref:struct:IP_FS_READ_ONLY_FILE_HOOK_STRUCT
IP_FS_READ_ONLY_FILE_HOOK_STRUCT	emwin/emWin_header/IP_FS.h	/^struct IP_FS_READ_ONLY_FILE_HOOK_STRUCT {$/;"	s
IP_GET_TYPE	lwip/src/include/lwip/ip_addr.h	106;"	d
IP_GET_TYPE	lwip/src/include/lwip/ip_addr.h	280;"	d
IP_GET_TYPE	lwip/src/include/lwip/ip_addr.h	328;"	d
IP_HDRLEN	lwip/src/netif/ppp/ipcp.c	2372;"	d	file:
IP_HDR_GET_VERSION	lwip/src/include/lwip/prot/ip.h	53;"	d
IP_HLEN	lwip/src/include/lwip/prot/ip4.h	64;"	d
IP_HLEN_MAX	lwip/src/include/lwip/prot/ip4.h	66;"	d
IP_IS_ANY_TYPE_VAL	lwip/src/include/lwip/ip_addr.h	277;"	d
IP_IS_ANY_TYPE_VAL	lwip/src/include/lwip/ip_addr.h	325;"	d
IP_IS_ANY_TYPE_VAL	lwip/src/include/lwip/ip_addr.h	91;"	d
IP_IS_V4	lwip/src/include/lwip/ip_addr.h	100;"	d
IP_IS_V4	lwip/src/include/lwip/ip_addr.h	275;"	d
IP_IS_V4	lwip/src/include/lwip/ip_addr.h	323;"	d
IP_IS_V4_VAL	lwip/src/include/lwip/ip_addr.h	273;"	d
IP_IS_V4_VAL	lwip/src/include/lwip/ip_addr.h	321;"	d
IP_IS_V4_VAL	lwip/src/include/lwip/ip_addr.h	96;"	d
IP_IS_V6	lwip/src/include/lwip/ip_addr.h	102;"	d
IP_IS_V6	lwip/src/include/lwip/ip_addr.h	276;"	d
IP_IS_V6	lwip/src/include/lwip/ip_addr.h	324;"	d
IP_IS_V6_VAL	lwip/src/include/lwip/ip_addr.h	274;"	d
IP_IS_V6_VAL	lwip/src/include/lwip/ip_addr.h	322;"	d
IP_IS_V6_VAL	lwip/src/include/lwip/ip_addr.h	98;"	d
IP_LOOPBACKNET	lwip/src/include/lwip/ip4_addr.h	101;"	d
IP_MF	lwip/src/include/lwip/prot/ip4.h	86;"	d
IP_MULTICAST	lwip/src/include/lwip/ip4_addr.h	96;"	d
IP_MULTICAST_IF	lwip/src/include/lwip/sockets.h	308;"	d
IP_MULTICAST_LOOP	lwip/src/include/lwip/sockets.h	309;"	d
IP_MULTICAST_TTL	lwip/src/include/lwip/sockets.h	307;"	d
IP_OFFMASK	lwip/src/include/lwip/prot/ip4.h	87;"	d
IP_OFFMASK	lwip/src/netif/ppp/ipcp.c	2373;"	d	file:
IP_OPTIONS_ALLOWED	lwip/src/include/lwip/opt.h	773;"	d
IP_OPTIONS_SEND	lwip/src/include/lwip/ip4.h	62;"	d
IP_PCB	lwip/src/include/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	lwip/src/include/lwip/ip.h	76;"	d
IP_PCB	lwip/src/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	lwip/src/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	lwip/src/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	lwip/src/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_NETIFHINT	lwip/src/include/lwip/ip.h	67;"	d
IP_PCB_NETIFHINT	lwip/src/include/lwip/ip.h	69;"	d
IP_PKTINFO	lwip/src/include/lwip/sockets.h	273;"	d
IP_PROTO_ICMP	lwip/src/include/lwip/prot/ip.h	46;"	d
IP_PROTO_IGMP	lwip/src/include/lwip/prot/ip.h	47;"	d
IP_PROTO_TCP	lwip/src/include/lwip/prot/ip.h	50;"	d
IP_PROTO_UDP	lwip/src/include/lwip/prot/ip.h	48;"	d
IP_PROTO_UDPLITE	lwip/src/include/lwip/prot/ip.h	49;"	d
IP_REASSEMBLY	lwip/src/include/lwip/opt.h	745;"	d
IP_REASSEMBLY	lwip/src/include/lwip/opt.h	761;"	d
IP_REASSEMBLY	lwip/src/include/lwip/opt.h	762;"	d
IP_REASS_CHECK_OVERLAP	lwip/src/core/ipv4/ip4_frag.c	69;"	d	file:
IP_REASS_CHECK_OVERLAP	lwip/src/core/ipv6/ip6_frag.c	62;"	d	file:
IP_REASS_DEBUG	lwip/src/include/lwip/opt.h	3330;"	d
IP_REASS_FLAG_LASTFRAG	lwip/src/core/ipv4/ip4_frag.c	80;"	d	file:
IP_REASS_FLAG_LASTFRAG	lwip/src/core/ipv6/ip6_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	lwip/src/core/ipv4/ip4_frag.c	77;"	d	file:
IP_REASS_FREE_OLDEST	lwip/src/core/ipv6/ip6_frag.c	70;"	d	file:
IP_REASS_MAXAGE	lwip/src/include/lwip/opt.h	782;"	d
IP_REASS_MAX_PBUFS	lwip/src/include/lwip/opt.h	794;"	d
IP_REASS_VALIDATE_PBUF_DROPPED	lwip/src/core/ipv4/ip4_frag.c	84;"	d	file:
IP_REASS_VALIDATE_PBUF_QUEUED	lwip/src/core/ipv4/ip4_frag.c	83;"	d	file:
IP_REASS_VALIDATE_TELEGRAM_FINISHED	lwip/src/core/ipv4/ip4_frag.c	82;"	d	file:
IP_RF	lwip/src/include/lwip/prot/ip4.h	84;"	d
IP_SET_TYPE	lwip/src/include/lwip/ip_addr.h	105;"	d
IP_SET_TYPE	lwip/src/include/lwip/ip_addr.h	279;"	d
IP_SET_TYPE	lwip/src/include/lwip/ip_addr.h	327;"	d
IP_SET_TYPE_VAL	lwip/src/include/lwip/ip_addr.h	104;"	d
IP_SET_TYPE_VAL	lwip/src/include/lwip/ip_addr.h	278;"	d
IP_SET_TYPE_VAL	lwip/src/include/lwip/ip_addr.h	326;"	d
IP_SOF_BROADCAST	lwip/src/include/lwip/opt.h	810;"	d
IP_SOF_BROADCAST_RECV	lwip/src/include/lwip/opt.h	818;"	d
IP_STATS	lwip/src/include/lwip/opt.h	2129;"	d
IP_STATS	lwip/src/include/lwip/opt.h	2237;"	d
IP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	358;"	d
IP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	361;"	d
IP_STATS_INC	lwip/src/include/lwip/stats.h	357;"	d
IP_STATS_INC	lwip/src/include/lwip/stats.h	360;"	d
IP_TMR_INTERVAL	lwip/src/include/lwip/ip4_frag.h	56;"	d
IP_TOS	lwip/src/include/lwip/sockets.h	271;"	d
IP_TTL	lwip/src/include/lwip/sockets.h	272;"	d
IR	device/LPC54018.h	/^  __IO uint32_t IR;                                \/**< Interrupt Register, offset: 0x50 *\/$/;"	m	struct:__anon142
IR	device/LPC54018.h	/^  __IO uint32_t IR;                                \/**< Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending., offset: 0x0 *\/$/;"	m	struct:__anon145
IRQ_FLAG	device/LPC54018.h	/^  __IO uint32_t IRQ_FLAG;                          \/**< Global interrupt flag register, offset: 0xF8 *\/$/;"	m	struct:__anon166
IRQn	device/LPC54018.h	/^typedef enum IRQn {$/;"	g
IRQn_Type	device/LPC54018.h	/^} IRQn_Type;$/;"	t	typeref:enum:IRQn
IRR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t IRR;                    \/*!< Offset: 0xEFC (R\/ )  ITM Integration Read Register *\/$/;"	m	struct:__anon21
IRR	CMSIS/core_cm4.h	/^  __IM  uint32_t IRR;                    \/*!< Offset: 0xEFC (R\/ )  ITM Integration Read Register *\/$/;"	m	struct:__anon43
ISAR	CMSIS/core_cm4.h	/^  __IM  uint32_t ISAR[5U];               \/*!< Offset: 0x060 (R\/ )  Instruction Set Attributes Register *\/$/;"	m	struct:__anon40
ISEL	device/LPC54018.h	/^  __IO uint32_t ISEL;                              \/**< Pin Interrupt Mode register, offset: 0x0 *\/$/;"	m	struct:__anon169
ISER	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t ISER[16U];              \/*!< Offset: 0x000 (R\/W)  Interrupt Set Enable Register *\/$/;"	m	struct:__anon121
ISER	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ISER[16U];              \/*!< Offset: 0x000 (R\/W)  Interrupt Set Enable Register *\/$/;"	m	struct:__anon17
ISER	CMSIS/core_cm4.h	/^  __IOM uint32_t ISER[8U];               \/*!< Offset: 0x000 (R\/W)  Interrupt Set Enable Register *\/$/;"	m	struct:__anon39
ISO_PTD_BASE_ADDR	device/LPC54018.h	/^  __IO uint32_t ISO_PTD_BASE_ADDR;                 \/**< Memory base address where ISO PTD0 is stored, offset: 0x14 *\/$/;"	m	struct:__anon190
ISO_PTD_DONE_MAP	device/LPC54018.h	/^  __IO uint32_t ISO_PTD_DONE_MAP;                  \/**< Done map for each ISO PTD, offset: 0x38 *\/$/;"	m	struct:__anon190
ISO_PTD_SKIP_MAP	device/LPC54018.h	/^  __IO uint32_t ISO_PTD_SKIP_MAP;                  \/**< Skip map for each ISO PTD, offset: 0x3C *\/$/;"	m	struct:__anon190
ISPR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t ISPR[16U];              \/*!< Offset: 0x100 (R\/W)  Interrupt Set Pending Register *\/$/;"	m	struct:__anon121
ISPR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ISPR[16U];              \/*!< Offset: 0x100 (R\/W)  Interrupt Set Pending Register *\/$/;"	m	struct:__anon17
ISPR	CMSIS/core_cm4.h	/^  __IOM uint32_t ISPR[8U];               \/*!< Offset: 0x100 (R\/W)  Interrupt Set Pending Register *\/$/;"	m	struct:__anon39
ISR	CMSIS/core_armv8mbl.h	/^    uint32_t ISR:9;                      \/*!< bit:  0.. 8  Exception number *\/$/;"	m	struct:__anon115::__anon116
ISR	CMSIS/core_armv8mbl.h	/^    uint32_t ISR:9;                      \/*!< bit:  0.. 8  Exception number *\/$/;"	m	struct:__anon117::__anon118
ISR	CMSIS/core_armv8mml.h	/^    uint32_t ISR:9;                      \/*!< bit:  0.. 8  Exception number *\/$/;"	m	struct:__anon11::__anon12
ISR	CMSIS/core_armv8mml.h	/^    uint32_t ISR:9;                      \/*!< bit:  0.. 8  Exception number *\/$/;"	m	struct:__anon13::__anon14
ISR	CMSIS/core_cm4.h	/^    uint32_t ISR:9;                      \/*!< bit:  0.. 8  Exception number *\/$/;"	m	struct:__anon33::__anon34
ISR	CMSIS/core_cm4.h	/^    uint32_t ISR:9;                      \/*!< bit:  0.. 8  Exception number *\/$/;"	m	struct:__anon35::__anon36
IST	device/LPC54018.h	/^  __IO uint32_t IST;                               \/**< Pin interrupt status register, offset: 0x24 *\/$/;"	m	struct:__anon169
IS_RANGE_MODE	radio/sx1276.h	50;"	d
IS_RUNNING_IN_ISR	utilities/fsl_debug_console.c	97;"	d	file:
IS_RUNNING_IN_ISR	utilities/fsl_debug_console.c	99;"	d	file:
IS_SOCK_ADDR_ALIGNED	lwip/src/api/sockets.c	159;"	d	file:
IS_SOCK_ADDR_LEN_VALID	lwip/src/api/sockets.c	119;"	d	file:
IS_SOCK_ADDR_LEN_VALID	lwip/src/api/sockets.c	136;"	d	file:
IS_SOCK_ADDR_LEN_VALID	lwip/src/api/sockets.c	145;"	d	file:
IS_SOCK_ADDR_TYPE_VALID	lwip/src/api/sockets.c	121;"	d	file:
IS_SOCK_ADDR_TYPE_VALID	lwip/src/api/sockets.c	137;"	d	file:
IS_SOCK_ADDR_TYPE_VALID	lwip/src/api/sockets.c	146;"	d	file:
IS_SOCK_ADDR_TYPE_VALID_OR_UNSPEC	lwip/src/api/sockets.c	155;"	d	file:
IT	CMSIS/core_armv8mml.h	/^    uint32_t IT:2;                       \/*!< bit: 25..26  saved IT state   (read 0) *\/$/;"	m	struct:__anon13::__anon14
ITATBCTR0	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t ITATBCTR0;              \/*!< Offset: 0xEF8 (R\/ )  ITATBCTR0 *\/$/;"	m	struct:__anon125
ITATBCTR0	CMSIS/core_armv8mml.h	/^  __IM  uint32_t ITATBCTR0;              \/*!< Offset: 0xEF8 (R\/ )  ITATBCTR0 *\/$/;"	m	struct:__anon24
ITATBCTR0	CMSIS/core_cm4.h	/^  __IM  uint32_t ITATBCTR0;              \/*!< Offset: 0xEF8 (R\/ )  ITATBCTR0 *\/$/;"	m	struct:__anon46
ITATBCTR2	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t ITATBCTR2;              \/*!< Offset: 0xEF0 (R\/ )  ITATBCTR2 *\/$/;"	m	struct:__anon125
ITATBCTR2	CMSIS/core_armv8mml.h	/^  __IM  uint32_t ITATBCTR2;              \/*!< Offset: 0xEF0 (R\/ )  ITATBCTR2 *\/$/;"	m	struct:__anon24
ITATBCTR2	CMSIS/core_cm4.h	/^  __IM  uint32_t ITATBCTR2;              \/*!< Offset: 0xEF0 (R\/ )  ITATBCTR2 *\/$/;"	m	struct:__anon46
ITCMCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ITCMCR;                 \/*!< Offset: 0x290 (R\/W)  Instruction Tightly-Coupled Memory Control Register *\/$/;"	m	struct:__anon18
ITCTRL	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t ITCTRL;                 \/*!< Offset: 0xF00 (R\/W)  Integration Mode Control *\/$/;"	m	struct:__anon125
ITCTRL	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ITCTRL;                 \/*!< Offset: 0xF00 (R\/W)  Integration Mode Control *\/$/;"	m	struct:__anon24
ITCTRL	CMSIS/core_cm4.h	/^  __IOM uint32_t ITCTRL;                 \/*!< Offset: 0xF00 (R\/W)  Integration Mode Control *\/$/;"	m	struct:__anon46
ITM	CMSIS/core_armv8mml.h	2040;"	d
ITM	CMSIS/core_cm4.h	1564;"	d
ITM_BASE	CMSIS/core_armv8mml.h	2028;"	d
ITM_BASE	CMSIS/core_cm4.h	1552;"	d
ITM_CheckChar	CMSIS/core_armv8mml.h	/^__STATIC_INLINE int32_t ITM_CheckChar (void)$/;"	f
ITM_CheckChar	CMSIS/core_cm4.h	/^__STATIC_INLINE int32_t ITM_CheckChar (void)$/;"	f
ITM_IMCR_INTEGRATION_Msk	CMSIS/core_armv8mml.h	1173;"	d
ITM_IMCR_INTEGRATION_Msk	CMSIS/core_cm4.h	889;"	d
ITM_IMCR_INTEGRATION_Pos	CMSIS/core_armv8mml.h	1172;"	d
ITM_IMCR_INTEGRATION_Pos	CMSIS/core_cm4.h	888;"	d
ITM_IRR_ATREADYM_Msk	CMSIS/core_armv8mml.h	1169;"	d
ITM_IRR_ATREADYM_Msk	CMSIS/core_cm4.h	885;"	d
ITM_IRR_ATREADYM_Pos	CMSIS/core_armv8mml.h	1168;"	d
ITM_IRR_ATREADYM_Pos	CMSIS/core_cm4.h	884;"	d
ITM_IWR_ATVALIDM_Msk	CMSIS/core_armv8mml.h	1165;"	d
ITM_IWR_ATVALIDM_Msk	CMSIS/core_cm4.h	881;"	d
ITM_IWR_ATVALIDM_Pos	CMSIS/core_armv8mml.h	1164;"	d
ITM_IWR_ATVALIDM_Pos	CMSIS/core_cm4.h	880;"	d
ITM_LSR_Access_Msk	CMSIS/core_armv8mml.h	1180;"	d
ITM_LSR_Access_Msk	CMSIS/core_cm4.h	896;"	d
ITM_LSR_Access_Pos	CMSIS/core_armv8mml.h	1179;"	d
ITM_LSR_Access_Pos	CMSIS/core_cm4.h	895;"	d
ITM_LSR_ByteAcc_Msk	CMSIS/core_armv8mml.h	1177;"	d
ITM_LSR_ByteAcc_Msk	CMSIS/core_cm4.h	893;"	d
ITM_LSR_ByteAcc_Pos	CMSIS/core_armv8mml.h	1176;"	d
ITM_LSR_ByteAcc_Pos	CMSIS/core_cm4.h	892;"	d
ITM_LSR_Present_Msk	CMSIS/core_armv8mml.h	1183;"	d
ITM_LSR_Present_Msk	CMSIS/core_cm4.h	899;"	d
ITM_LSR_Present_Pos	CMSIS/core_armv8mml.h	1182;"	d
ITM_LSR_Present_Pos	CMSIS/core_cm4.h	898;"	d
ITM_RXBUFFER_EMPTY	CMSIS/core_armv8mml.h	2884;"	d
ITM_RXBUFFER_EMPTY	CMSIS/core_cm4.h	2042;"	d
ITM_ReceiveChar	CMSIS/core_armv8mml.h	/^__STATIC_INLINE int32_t ITM_ReceiveChar (void)$/;"	f
ITM_ReceiveChar	CMSIS/core_cm4.h	/^__STATIC_INLINE int32_t ITM_ReceiveChar (void)$/;"	f
ITM_STIM_DISABLED_Msk	CMSIS/core_armv8mml.h	1123;"	d
ITM_STIM_DISABLED_Pos	CMSIS/core_armv8mml.h	1122;"	d
ITM_STIM_FIFOREADY_Msk	CMSIS/core_armv8mml.h	1126;"	d
ITM_STIM_FIFOREADY_Pos	CMSIS/core_armv8mml.h	1125;"	d
ITM_SendChar	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)$/;"	f
ITM_SendChar	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)$/;"	f
ITM_TCR_BUSY_Msk	CMSIS/core_armv8mml.h	1134;"	d
ITM_TCR_BUSY_Msk	CMSIS/core_cm4.h	853;"	d
ITM_TCR_BUSY_Pos	CMSIS/core_armv8mml.h	1133;"	d
ITM_TCR_BUSY_Pos	CMSIS/core_cm4.h	852;"	d
ITM_TCR_DWTENA_Msk	CMSIS/core_armv8mml.h	1152;"	d
ITM_TCR_DWTENA_Msk	CMSIS/core_cm4.h	868;"	d
ITM_TCR_DWTENA_Pos	CMSIS/core_armv8mml.h	1151;"	d
ITM_TCR_DWTENA_Pos	CMSIS/core_cm4.h	867;"	d
ITM_TCR_GTSFREQ_Msk	CMSIS/core_armv8mml.h	1140;"	d
ITM_TCR_GTSFREQ_Msk	CMSIS/core_cm4.h	859;"	d
ITM_TCR_GTSFREQ_Pos	CMSIS/core_armv8mml.h	1139;"	d
ITM_TCR_GTSFREQ_Pos	CMSIS/core_cm4.h	858;"	d
ITM_TCR_ITMENA_Msk	CMSIS/core_armv8mml.h	1161;"	d
ITM_TCR_ITMENA_Msk	CMSIS/core_cm4.h	877;"	d
ITM_TCR_ITMENA_Pos	CMSIS/core_armv8mml.h	1160;"	d
ITM_TCR_ITMENA_Pos	CMSIS/core_cm4.h	876;"	d
ITM_TCR_STALLENA_Msk	CMSIS/core_armv8mml.h	1146;"	d
ITM_TCR_STALLENA_Pos	CMSIS/core_armv8mml.h	1145;"	d
ITM_TCR_SWOENA_Msk	CMSIS/core_armv8mml.h	1149;"	d
ITM_TCR_SWOENA_Msk	CMSIS/core_cm4.h	865;"	d
ITM_TCR_SWOENA_Pos	CMSIS/core_armv8mml.h	1148;"	d
ITM_TCR_SWOENA_Pos	CMSIS/core_cm4.h	864;"	d
ITM_TCR_SYNCENA_Msk	CMSIS/core_armv8mml.h	1155;"	d
ITM_TCR_SYNCENA_Msk	CMSIS/core_cm4.h	871;"	d
ITM_TCR_SYNCENA_Pos	CMSIS/core_armv8mml.h	1154;"	d
ITM_TCR_SYNCENA_Pos	CMSIS/core_cm4.h	870;"	d
ITM_TCR_TRACEBUSID_Msk	CMSIS/core_armv8mml.h	1137;"	d
ITM_TCR_TRACEBUSID_Pos	CMSIS/core_armv8mml.h	1136;"	d
ITM_TCR_TSENA_Msk	CMSIS/core_armv8mml.h	1158;"	d
ITM_TCR_TSENA_Msk	CMSIS/core_cm4.h	874;"	d
ITM_TCR_TSENA_Pos	CMSIS/core_armv8mml.h	1157;"	d
ITM_TCR_TSENA_Pos	CMSIS/core_cm4.h	873;"	d
ITM_TCR_TSPRESCALE_Msk	CMSIS/core_armv8mml.h	1143;"	d
ITM_TCR_TSPRESCALE_Pos	CMSIS/core_armv8mml.h	1142;"	d
ITM_TCR_TSPrescale_Msk	CMSIS/core_cm4.h	862;"	d
ITM_TCR_TSPrescale_Pos	CMSIS/core_cm4.h	861;"	d
ITM_TCR_TraceBusID_Msk	CMSIS/core_cm4.h	856;"	d
ITM_TCR_TraceBusID_Pos	CMSIS/core_cm4.h	855;"	d
ITM_TPR_PRIVMASK_Msk	CMSIS/core_armv8mml.h	1130;"	d
ITM_TPR_PRIVMASK_Msk	CMSIS/core_cm4.h	849;"	d
ITM_TPR_PRIVMASK_Pos	CMSIS/core_armv8mml.h	1129;"	d
ITM_TPR_PRIVMASK_Pos	CMSIS/core_cm4.h	848;"	d
ITM_Type	CMSIS/core_armv8mml.h	/^} ITM_Type;$/;"	t	typeref:struct:__anon21
ITM_Type	CMSIS/core_cm4.h	/^} ITM_Type;$/;"	t	typeref:struct:__anon43
ITNS	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t ITNS[16U];              \/*!< Offset: 0x280 (R\/W)  Interrupt Non-Secure State Register *\/$/;"	m	struct:__anon121
ITNS	CMSIS/core_armv8mml.h	/^  __IOM uint32_t ITNS[16U];              \/*!< Offset: 0x280 (R\/W)  Interrupt Non-Secure State Register *\/$/;"	m	struct:__anon17
IWR	CMSIS/core_armv8mml.h	/^  __OM  uint32_t IWR;                    \/*!< Offset: 0xEF8 ( \/W)  ITM Integration Write Register *\/$/;"	m	struct:__anon21
IWR	CMSIS/core_cm4.h	/^  __OM  uint32_t IWR;                    \/*!< Offset: 0xEF8 ( \/W)  ITM Integration Write Register *\/$/;"	m	struct:__anon43
IconAlign	emwin/emWin_header/ICONVIEW_Private.h	/^  int              IconAlign;$/;"	m	struct:__anon218
Id	emwin/emWin_header/CHOOSEFILE.h	/^  int               Id;                                  \/\/ Id of pressed button (for internal use only)$/;"	m	struct:CHOOSEFILE_INFO
Id	emwin/emWin_header/DIALOG_Intern.h	/^  I16                      Id;               \/\/ ID ... should be unique in a dialog$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
Id	emwin/emWin_header/GUI_Type.h	/^  U32 Id;$/;"	m	struct:__anon269
Id	emwin/emWin_header/MENU.h	/^  U16           Id;$/;"	m	struct:__anon232
Id	emwin/emWin_header/MENU_Private.h	/^  U16         Id;$/;"	m	struct:__anon317
Id	emwin/emWin_header/WIDGET.h	/^  I16 Id;$/;"	m	struct:__anon212
Id	emwin/emWin_header/WM.h	/^  int          Id;$/;"	m	struct:__anon293
Indent	emwin/emWin_header/TREEVIEW_Private.h	/^  int Indent;$/;"	m	struct:__anon226
Index	emwin/emWin_header/LCD.h	/^  int Index;$/;"	m	struct:__anon419
Index	emwin/emWin_header/PROGBAR.h	/^  int Index;$/;"	m	struct:__anon222
IndexMask	codec2/pack.c	/^static const unsigned int	IndexMask = 0x7;$/;"	v	file:
IndexMask	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  LCD_PIXELINDEX IndexMask;$/;"	m	struct:__anon370
IndexMask	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  LCD_PIXELINDEX IndexMask;$/;"	m	struct:DRIVER_CONTEXT
IndexOCL	emwin/emWin_header/TREEVIEW.h	/^  U8 IndexOCL;$/;"	m	struct:__anon372
IndexPM	emwin/emWin_header/TREEVIEW.h	/^  U8 IndexPM;$/;"	m	struct:__anon372
Initialize	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*Initialize)     (ARM_I2C_SignalEvent_t cb_event);                                      \/\/\/< Pointer to \\ref ARM_I2C_Initialize : Initialize I2C Interface.$/;"	m	struct:_ARM_DRIVER_I2C
Initialize	CMSIS_driver/Driver_SPI.h	/^  int32_t              (*Initialize)      (ARM_SPI_SignalEvent_t cb_event);   \/\/\/< Pointer to \\ref ARM_SPI_Initialize : Initialize SPI Interface.$/;"	m	struct:_ARM_DRIVER_SPI
InstallIRQHandler	drivers/fsl_common.c	/^uint32_t InstallIRQHandler(IRQn_Type irq, uint32_t irqHandler)$/;"	f
IntDefaultHandler	startup/startup_lpc54018.c	/^WEAK_AV void IntDefaultHandler(void)$/;"	f
IntDefaultHandler	startup/startup_lpc54018.c	/^void ADC0_SEQA_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void ADC0_SEQB_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void ADC0_THCMP_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CAN0_IRQ0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CAN0_IRQ1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CAN1_IRQ0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CAN1_IRQ1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CTIMER0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CTIMER1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CTIMER2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CTIMER3_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void CTIMER4_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void DMA0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void DMIC0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void ETHERNET_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void ETHERNET_MACLP_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void ETHERNET_PMT_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM10_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM3_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM4_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM5_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM6_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM7_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM8_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void FLEXCOMM9_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void GINT0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void GINT1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void HWVAD0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void LCD_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void MRT0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void PIN_INT0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void PIN_INT1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void PIN_INT2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void PIN_INT3_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void PIN_INT4_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void PIN_INT5_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void PIN_INT6_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void PIN_INT7_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void RIT_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void RTC_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void Reserved47_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void Reserved68_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void SCT0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void SDIO_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void SHA_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void SMARTCARD0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void SMARTCARD1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void SPIFI0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void USB0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void USB0_NEEDCLK_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void USB1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void USB1_NEEDCLK_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void UTICK0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
IntDefaultHandler	startup/startup_lpc54018.c	/^void WDT_BOD_DriverIRQHandler(void) ALIAS(IntDefaultHandler);$/;"	v
InvalidRect	emwin/emWin_header/WM.h	/^  GUI_RECT InvalidRect; \/* Invalid rectangle *\/$/;"	m	struct:WM_Obj
IsBigEndian	emwin/emWin_header/GUI_VNC.h	/^  char IsBigEndian;$/;"	m	struct:GUI_VNC_CONTEXT
IsDirty	emwin/emWin_header/GUI.h	/^  int    IsDirty;       \/\/ Indicates if dirty pixels exist$/;"	m	struct:__anon385
IsDirty	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int IsDirty;$/;"	m	struct:DRIVER_CONTEXT
IsDirty	emwin/emWin_header/GUI_GCache_Private.h	/^  int x0, y0, x1, y1, IsDirty;$/;"	m	struct:__anon239
IsDragging	emwin/emWin_header/WM.h	/^  U8  IsDragging;$/;"	m	struct:__anon287
IsExpanded	emwin/emWin_header/TREEVIEW.h	/^  int IsExpanded;$/;"	m	struct:__anon371
IsMeasurement	emwin/emWin_header/GUI.h	/^  char IsMeasurement;$/;"	m	struct:__anon394
IsNode	emwin/emWin_header/TREEVIEW.h	/^  int IsNode;$/;"	m	struct:__anon371
IsOutside	emwin/emWin_header/WM.h	/^  U8  IsOutside;$/;"	m	struct:__anon287
IsPresorted	emwin/emWin_header/LISTVIEW_Private.h	/^  U8                           IsPresorted;$/;"	m	struct:LISTVIEW_Obj
IsPressed	emwin/emWin_header/DROPDOWN_Private.h	/^  char  IsPressed;$/;"	m	struct:__anon360
IsPressed	emwin/emWin_header/SLIDER.h	/^  int IsPressed;$/;"	m	struct:__anon305
IsProgressive	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 IsProgressive;             \/\/ Flag is set to 1 if JPEG is progressive$/;"	m	struct:GUI_JPEG_DCONTEXT
IsSorted	emwin/emWin_header/LISTVIEW_Private.h	/^  U8                           IsSorted;$/;"	m	struct:LISTVIEW_Obj
IsSubmenuActive	emwin/emWin_header/MENU_Private.h	/^  char                IsSubmenuActive;$/;"	m	struct:__anon319
IsVertical	emwin/emWin_header/PROGBAR.h	/^  int IsVertical;$/;"	m	struct:__anon222
IsVertical	emwin/emWin_header/SCROLLBAR.h	/^  int IsVertical;$/;"	m	struct:__anon216
IsVertical	emwin/emWin_header/SLIDER.h	/^  int IsVertical;$/;"	m	struct:__anon305
IsVisible	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int IsVisible;$/;"	m	struct:DRIVER_CONTEXT
IsVisible	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int IsVisible;$/;"	m	struct:DRIVER_CONTEXT
ItemArray	emwin/emWin_header/ICONVIEW_Private.h	/^  GUI_ARRAY               ItemArray;$/;"	m	struct:__anon219
ItemArray	emwin/emWin_header/LISTBOX_Private.h	/^  GUI_ARRAY ItemArray;$/;"	m	struct:__anon313
ItemArray	emwin/emWin_header/LISTWHEEL_Private.h	/^  GUI_ARRAY               ItemArray;$/;"	m	struct:__anon353
ItemArray	emwin/emWin_header/MENU_Private.h	/^  GUI_ARRAY           ItemArray;$/;"	m	struct:__anon319
ItemArray	emwin/emWin_header/SWIPELIST_Private.h	/^  GUI_ARRAY               ItemArray;$/;"	m	struct:__anon238
ItemHeight	emwin/emWin_header/MULTIPAGE_Private.h	/^  int                    ItemHeight;$/;"	m	struct:MULTIPAGE_Obj
ItemId	emwin/emWin_header/MENU.h	/^  U16 ItemId;$/;"	m	struct:__anon231
ItemIndex	emwin/emWin_header/WIDGET.h	/^  int        ItemIndex;$/;"	m	struct:__anon209
ItemPosY	emwin/emWin_header/LISTBOX_Private.h	/^  I32  ItemPosY;$/;"	m	struct:__anon311
ItemSpacing	emwin/emWin_header/DROPDOWN_Private.h	/^  U16     ItemSpacing;$/;"	m	struct:__anon360
ItemSpacing	emwin/emWin_header/LISTBOX_Private.h	/^  U16 ItemSpacing;$/;"	m	struct:__anon313
ItemWidth	emwin/emWin_header/MULTIPAGE_Private.h	/^  int     ItemWidth;$/;"	m	struct:__anon338
JPEG_LOCK_H	emwin/emWin_header/GUI_JPEG_Private.h	66;"	d
JTAGIDCODE	device/LPC54018.h	/^  __I  uint32_t JTAGIDCODE;                        \/**< JTAG ID code register, offset: 0xFF4 *\/$/;"	m	struct:__anon185
K	lwip/src/netif/ppp/polarssl/sha1.c	128;"	d	file:
K	lwip/src/netif/ppp/polarssl/sha1.c	151;"	d	file:
K	lwip/src/netif/ppp/polarssl/sha1.c	155;"	d	file:
K	lwip/src/netif/ppp/polarssl/sha1.c	178;"	d	file:
K	lwip/src/netif/ppp/polarssl/sha1.c	182;"	d	file:
K	lwip/src/netif/ppp/polarssl/sha1.c	205;"	d	file:
K	lwip/src/netif/ppp/polarssl/sha1.c	209;"	d	file:
K	lwip/src/netif/ppp/polarssl/sha1.c	232;"	d	file:
KEYMUXSEL	device/LPC54018.h	/^  __IO uint32_t KEYMUXSEL;                         \/**< AES key source selection, offset: 0x470 *\/$/;"	m	struct:__anon185
KISS_FFT_COS	codec2/_kiss_fft_guts.h	128;"	d
KISS_FFT_COS	codec2/_kiss_fft_guts.h	132;"	d
KISS_FFT_COS	codec2/_kiss_fft_guts.h	136;"	d
KISS_FFT_FREE	codec2/kiss_fft.h	30;"	d
KISS_FFT_FREE	codec2/kiss_fft.h	33;"	d
KISS_FFT_H	codec2/kiss_fft.h	2;"	d
KISS_FFT_MALLOC	codec2/kiss_fft.h	29;"	d
KISS_FFT_MALLOC	codec2/kiss_fft.h	32;"	d
KISS_FFT_SIN	codec2/_kiss_fft_guts.h	129;"	d
KISS_FFT_SIN	codec2/_kiss_fft_guts.h	133;"	d
KISS_FFT_SIN	codec2/_kiss_fft_guts.h	137;"	d
KISS_FFT_TMP_ALLOC	codec2/_kiss_fft_guts.h	159;"	d
KISS_FFT_TMP_ALLOC	codec2/_kiss_fft_guts.h	162;"	d
KISS_FFT_TMP_FREE	codec2/_kiss_fft_guts.h	160;"	d
KISS_FFT_TMP_FREE	codec2/_kiss_fft_guts.h	163;"	d
KISS_FTR_H	codec2/kiss_fftr.h	2;"	d
KNOB_H	emwin/emWin_header/KNOB.h	46;"	d
KNOB_Handle	emwin/emWin_header/KNOB.h	/^typedef WM_HMEM KNOB_Handle;$/;"	t
KNOB_ID	emwin/emWin_header/WIDGET.h	125;"	d
KNOB_INIT_ID	emwin/emWin_header/KNOB_Private.h	90;"	d
KNOB_INIT_ID	emwin/emWin_header/KNOB_Private.h	92;"	d
KNOB_LOCK_H	emwin/emWin_header/KNOB_Private.h	97;"	d
KNOB_LOCK_H	emwin/emWin_header/KNOB_Private.h	99;"	d
KNOB_OBJ	emwin/emWin_header/KNOB_Private.h	/^} KNOB_OBJ;$/;"	t	typeref:struct:__anon327
KNOB_PRIVATE_H	emwin/emWin_header/KNOB_Private.h	46;"	d
KNOB_PROPS	emwin/emWin_header/KNOB_Private.h	/^} KNOB_PROPS;$/;"	t	typeref:struct:__anon326
KSDK_I2C_MASTER_DmaCallback	drivers/fsl_i2c_cmsis.c	/^void KSDK_I2C_MASTER_DmaCallback(I2C_Type *base, i2c_master_dma_handle_t *handle, status_t status, void *userData)$/;"	f
KSDK_I2C_MASTER_InterruptCallback	drivers/fsl_i2c_cmsis.c	/^static void KSDK_I2C_MASTER_InterruptCallback(I2C_Type *base,$/;"	f	file:
KSDK_I2C_SLAVE_InterruptCallback	drivers/fsl_i2c_cmsis.c	/^static void KSDK_I2C_SLAVE_InterruptCallback(I2C_Type *base, volatile i2c_slave_transfer_t *xfer, void *param)$/;"	f	file:
KSDK_SPI_MasterDMACallback	drivers/fsl_spi_cmsis.c	/^void KSDK_SPI_MasterDMACallback(SPI_Type *base, spi_dma_handle_t *handle, status_t status, void *userData)$/;"	f
KSDK_SPI_MasterInterruptCallback	drivers/fsl_spi_cmsis.c	/^void KSDK_SPI_MasterInterruptCallback(SPI_Type *base, spi_master_handle_t *handle, status_t status, void *userData)$/;"	f
KSDK_SPI_SlaveDMACallback	drivers/fsl_spi_cmsis.c	/^void KSDK_SPI_SlaveDMACallback(SPI_Type *base, spi_dma_handle_t *handle, status_t status, void *userData)$/;"	f
KSDK_SPI_SlaveInterruptCallback	drivers/fsl_spi_cmsis.c	/^void KSDK_SPI_SlaveInterruptCallback(SPI_Type *base, spi_slave_handle_t *handle, status_t status, void *userData)$/;"	f
Kd	CMSIS/arm_math.h	/^    float32_t Kd;          \/**< The derivative gain. *\/$/;"	m	struct:__anon64
Kd	CMSIS/arm_math.h	/^    q15_t Kd;           \/**< The derivative gain. *\/$/;"	m	struct:__anon62
Kd	CMSIS/arm_math.h	/^    q31_t Kd;            \/**< The derivative gain. *\/$/;"	m	struct:__anon63
Key	emwin/emWin_header/GUI_Type.h	/^  int Key;$/;"	m	struct:__anon248
Key	emwin/emWin_header/WM.h	/^  int Key, PressedCnt;$/;"	m	struct:__anon283
KeyStat	emwin/emWin_header/LCD.h	/^  unsigned char KeyStat;$/;"	m	struct:__anon406
KeyValue	emwin/emWin_header/KNOB_Private.h	/^  I32 KeyValue;      \/\/ Range of movement for one key push$/;"	m	struct:__anon326
Ki	CMSIS/arm_math.h	/^    float32_t Ki;          \/**< The integral gain. *\/$/;"	m	struct:__anon64
Ki	CMSIS/arm_math.h	/^    q15_t Ki;           \/**< The integral gain. *\/$/;"	m	struct:__anon62
Ki	CMSIS/arm_math.h	/^    q31_t Ki;            \/**< The integral gain. *\/$/;"	m	struct:__anon63
Kp	CMSIS/arm_math.h	/^    float32_t Kp;          \/**< The proportional gain. *\/$/;"	m	struct:__anon64
Kp	CMSIS/arm_math.h	/^    q15_t Kp;           \/**< The proportional gain. *\/$/;"	m	struct:__anon62
Kp	CMSIS/arm_math.h	/^    q31_t Kp;            \/**< The proportional gain. *\/$/;"	m	struct:__anon63
L	CMSIS/arm_math.h	/^    uint8_t L;                      \/**< upsample factor. *\/$/;"	m	struct:__anon89
L	CMSIS/arm_math.h	/^    uint8_t L;                      \/**< upsample factor. *\/$/;"	m	struct:__anon90
L	CMSIS/arm_math.h	/^    uint8_t L;                     \/**< upsample factor. *\/$/;"	m	struct:__anon91
L	codec2/defines.h	/^    int   L;		  \/* number of harmonics                        *\/$/;"	m	struct:__anon135
LAR	CMSIS/core_armv8mml.h	/^  __OM  uint32_t LAR;                    \/*!< Offset: 0xFB0 ( \/W)  ITM Lock Access Register *\/$/;"	m	struct:__anon21
LAR	CMSIS/core_cm4.h	/^  __OM  uint32_t LAR;                    \/*!< Offset: 0xFB0 ( \/W)  ITM Lock Access Register *\/$/;"	m	struct:__anon43
LARGE	source/common.c	21;"	d	file:
LASTPTD	device/LPC54018.h	/^  __IO uint32_t LASTPTD;                           \/**< Marks the last PTD in the list for ISO, INT and ATL, offset: 0x48 *\/$/;"	m	struct:__anon190
LAST_ACK	lwip/src/include/lwip/tcpbase.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LBorder	emwin/emWin_header/GUI.h	/^  I16P LBorder;$/;"	m	struct:GUI_CONTEXT
LBorder	emwin/emWin_header/LISTVIEW_Private.h	/^  unsigned                     LBorder;$/;"	m	struct:LISTVIEW_Obj
LBorder	emwin/emWin_header/LISTWHEEL_Private.h	/^  unsigned                LBorder;$/;"	m	struct:__anon353
LCD	device/LPC54018.h	7363;"	d
LCDCLKDIV	device/LPC54018.h	/^  __IO uint32_t LCDCLKDIV;                         \/**< LCD clock divider, offset: 0x3B0 *\/$/;"	m	struct:__anon185
LCDCLKSEL	device/LPC54018.h	/^  __IO uint32_t LCDCLKSEL;                         \/**< LCD clock source select, offset: 0x2F4 *\/$/;"	m	struct:__anon185
LCDCONF_H	emwin/emWin_Config/LCDConf.h	46;"	d
LCDDEV_L0_Color2Index	emwin/emWin_header/GUI_Private.h	592;"	d
LCDDEV_L0_DrawBitmap	emwin/emWin_header/GUI_Private.h	595;"	d
LCDDEV_L0_DrawHLine	emwin/emWin_header/GUI_Private.h	596;"	d
LCDDEV_L0_DrawPixel	emwin/emWin_header/GUI_Private.h	598;"	d
LCDDEV_L0_DrawVLine	emwin/emWin_header/GUI_Private.h	597;"	d
LCDDEV_L0_FillRect	emwin/emWin_header/GUI_Private.h	599;"	d
LCDDEV_L0_GetDevFunc	emwin/emWin_header/GUI_Private.h	605;"	d
LCDDEV_L0_GetPixel	emwin/emWin_header/GUI_Private.h	600;"	d
LCDDEV_L0_GetPixelIndex	emwin/emWin_header/GUI_Private.h	602;"	d
LCDDEV_L0_GetRect	emwin/emWin_header/GUI_Private.h	601;"	d
LCDDEV_L0_Index2Color	emwin/emWin_header/GUI_Private.h	593;"	d
LCDDEV_L0_SetPixelIndex	emwin/emWin_header/GUI_Private.h	603;"	d
LCDDEV_L0_XorPixel	emwin/emWin_header/GUI_Private.h	604;"	d
LCDSIM_H	emwin/emWin_header/LCD_SIM.h	46;"	d
LCDSIM_MAX_DISPLAYS	emwin/emWin_header/LCD_SIM.h	56;"	d
LCD_ALLOW_NON_OPTIMIZED_MODE	emwin/emWin_header/LCD_ConfDefaults.h	79;"	d
LCD_API_COLOR_CONV	emwin/emWin_header/LCD.h	/^} LCD_API_COLOR_CONV;$/;"	t	typeref:struct:__anon408
LCD_API_LIST	emwin/emWin_header/LCD_Protected.h	/^} LCD_API_LIST;$/;"	t	typeref:struct:__anon356
LCD_API_NEXT_PIXEL	emwin/emWin_header/LCD.h	/^} LCD_API_NEXT_PIXEL;$/;"	t	typeref:struct:__anon420
LCD_BASE	device/LPC54018.h	7361;"	d
LCD_BASE_ADDRS	device/LPC54018.h	7365;"	d
LCD_BASE_PTRS	device/LPC54018.h	7367;"	d
LCD_BKCOLORINDEX	emwin/emWin_header/GUI_Private.h	633;"	d
LCD_CC_FLUSH	emwin/emWin_header/LCD.h	741;"	d
LCD_CC_LOCK	emwin/emWin_header/LCD.h	740;"	d
LCD_CC_UNLOCK	emwin/emWin_header/LCD.h	739;"	d
LCD_CLOCKS	drivers/fsl_clock.h	212;"	d
LCD_COLOR	emwin/emWin_header/LCD.h	/^typedef U32 LCD_COLOR;$/;"	t
LCD_COLORINDEX	emwin/emWin_header/GUI_Private.h	634;"	d
LCD_COLORINDEX_UNION	emwin/emWin_header/GUI.h	/^} LCD_COLORINDEX_UNION;$/;"	t	typeref:union:__anon384
LCD_CONFIG_DEFAULTS_H	emwin/emWin_header/LCD_ConfDefaults.h	46;"	d
LCD_CRSR_CFG_CRSRSIZE	device/LPC54018.h	7273;"	d
LCD_CRSR_CFG_CRSRSIZE_MASK	device/LPC54018.h	7271;"	d
LCD_CRSR_CFG_CRSRSIZE_SHIFT	device/LPC54018.h	7272;"	d
LCD_CRSR_CFG_FRAMESYNC	device/LPC54018.h	7276;"	d
LCD_CRSR_CFG_FRAMESYNC_MASK	device/LPC54018.h	7274;"	d
LCD_CRSR_CFG_FRAMESYNC_SHIFT	device/LPC54018.h	7275;"	d
LCD_CRSR_CLIP_CRSRCLIPX	device/LPC54018.h	7319;"	d
LCD_CRSR_CLIP_CRSRCLIPX_MASK	device/LPC54018.h	7317;"	d
LCD_CRSR_CLIP_CRSRCLIPX_SHIFT	device/LPC54018.h	7318;"	d
LCD_CRSR_CLIP_CRSRCLIPY	device/LPC54018.h	7322;"	d
LCD_CRSR_CLIP_CRSRCLIPY_MASK	device/LPC54018.h	7320;"	d
LCD_CRSR_CLIP_CRSRCLIPY_SHIFT	device/LPC54018.h	7321;"	d
LCD_CRSR_CTRL_CRSRNUM1_0	device/LPC54018.h	7266;"	d
LCD_CRSR_CTRL_CRSRNUM1_0_MASK	device/LPC54018.h	7264;"	d
LCD_CRSR_CTRL_CRSRNUM1_0_SHIFT	device/LPC54018.h	7265;"	d
LCD_CRSR_CTRL_CRSRON	device/LPC54018.h	7263;"	d
LCD_CRSR_CTRL_CRSRON_MASK	device/LPC54018.h	7261;"	d
LCD_CRSR_CTRL_CRSRON_SHIFT	device/LPC54018.h	7262;"	d
LCD_CRSR_IMG_COUNT	device/LPC54018.h	7257;"	d
LCD_CRSR_IMG_CRSR_IMG	device/LPC54018.h	7253;"	d
LCD_CRSR_IMG_CRSR_IMG_MASK	device/LPC54018.h	7251;"	d
LCD_CRSR_IMG_CRSR_IMG_SHIFT	device/LPC54018.h	7252;"	d
LCD_CRSR_INTCLR_CRSRIC	device/LPC54018.h	7336;"	d
LCD_CRSR_INTCLR_CRSRIC_MASK	device/LPC54018.h	7334;"	d
LCD_CRSR_INTCLR_CRSRIC_SHIFT	device/LPC54018.h	7335;"	d
LCD_CRSR_INTMSK_CRSRIM	device/LPC54018.h	7329;"	d
LCD_CRSR_INTMSK_CRSRIM_MASK	device/LPC54018.h	7327;"	d
LCD_CRSR_INTMSK_CRSRIM_SHIFT	device/LPC54018.h	7328;"	d
LCD_CRSR_INTRAW_CRSRRIS	device/LPC54018.h	7343;"	d
LCD_CRSR_INTRAW_CRSRRIS_MASK	device/LPC54018.h	7341;"	d
LCD_CRSR_INTRAW_CRSRRIS_SHIFT	device/LPC54018.h	7342;"	d
LCD_CRSR_INTSTAT_CRSRMIS	device/LPC54018.h	7350;"	d
LCD_CRSR_INTSTAT_CRSRMIS_MASK	device/LPC54018.h	7348;"	d
LCD_CRSR_INTSTAT_CRSRMIS_SHIFT	device/LPC54018.h	7349;"	d
LCD_CRSR_PAL0_BLUE	device/LPC54018.h	7289;"	d
LCD_CRSR_PAL0_BLUE_MASK	device/LPC54018.h	7287;"	d
LCD_CRSR_PAL0_BLUE_SHIFT	device/LPC54018.h	7288;"	d
LCD_CRSR_PAL0_GREEN	device/LPC54018.h	7286;"	d
LCD_CRSR_PAL0_GREEN_MASK	device/LPC54018.h	7284;"	d
LCD_CRSR_PAL0_GREEN_SHIFT	device/LPC54018.h	7285;"	d
LCD_CRSR_PAL0_RED	device/LPC54018.h	7283;"	d
LCD_CRSR_PAL0_RED_MASK	device/LPC54018.h	7281;"	d
LCD_CRSR_PAL0_RED_SHIFT	device/LPC54018.h	7282;"	d
LCD_CRSR_PAL1_BLUE	device/LPC54018.h	7302;"	d
LCD_CRSR_PAL1_BLUE_MASK	device/LPC54018.h	7300;"	d
LCD_CRSR_PAL1_BLUE_SHIFT	device/LPC54018.h	7301;"	d
LCD_CRSR_PAL1_GREEN	device/LPC54018.h	7299;"	d
LCD_CRSR_PAL1_GREEN_MASK	device/LPC54018.h	7297;"	d
LCD_CRSR_PAL1_GREEN_SHIFT	device/LPC54018.h	7298;"	d
LCD_CRSR_PAL1_RED	device/LPC54018.h	7296;"	d
LCD_CRSR_PAL1_RED_MASK	device/LPC54018.h	7294;"	d
LCD_CRSR_PAL1_RED_SHIFT	device/LPC54018.h	7295;"	d
LCD_CRSR_XY_CRSRX	device/LPC54018.h	7309;"	d
LCD_CRSR_XY_CRSRX_MASK	device/LPC54018.h	7307;"	d
LCD_CRSR_XY_CRSRX_SHIFT	device/LPC54018.h	7308;"	d
LCD_CRSR_XY_CRSRY	device/LPC54018.h	7312;"	d
LCD_CRSR_XY_CRSRY_MASK	device/LPC54018.h	7310;"	d
LCD_CRSR_XY_CRSRY_SHIFT	device/LPC54018.h	7311;"	d
LCD_CTRL_BEBO	device/LPC54018.h	7125;"	d
LCD_CTRL_BEBO_MASK	device/LPC54018.h	7123;"	d
LCD_CTRL_BEBO_SHIFT	device/LPC54018.h	7124;"	d
LCD_CTRL_BEPO	device/LPC54018.h	7128;"	d
LCD_CTRL_BEPO_MASK	device/LPC54018.h	7126;"	d
LCD_CTRL_BEPO_SHIFT	device/LPC54018.h	7127;"	d
LCD_CTRL_BGR	device/LPC54018.h	7122;"	d
LCD_CTRL_BGR_MASK	device/LPC54018.h	7120;"	d
LCD_CTRL_BGR_SHIFT	device/LPC54018.h	7121;"	d
LCD_CTRL_LCDBPP	device/LPC54018.h	7107;"	d
LCD_CTRL_LCDBPP_MASK	device/LPC54018.h	7105;"	d
LCD_CTRL_LCDBPP_SHIFT	device/LPC54018.h	7106;"	d
LCD_CTRL_LCDBW	device/LPC54018.h	7110;"	d
LCD_CTRL_LCDBW_MASK	device/LPC54018.h	7108;"	d
LCD_CTRL_LCDBW_SHIFT	device/LPC54018.h	7109;"	d
LCD_CTRL_LCDDUAL	device/LPC54018.h	7119;"	d
LCD_CTRL_LCDDUAL_MASK	device/LPC54018.h	7117;"	d
LCD_CTRL_LCDDUAL_SHIFT	device/LPC54018.h	7118;"	d
LCD_CTRL_LCDEN	device/LPC54018.h	7104;"	d
LCD_CTRL_LCDEN_MASK	device/LPC54018.h	7102;"	d
LCD_CTRL_LCDEN_SHIFT	device/LPC54018.h	7103;"	d
LCD_CTRL_LCDMONO8	device/LPC54018.h	7116;"	d
LCD_CTRL_LCDMONO8_MASK	device/LPC54018.h	7114;"	d
LCD_CTRL_LCDMONO8_SHIFT	device/LPC54018.h	7115;"	d
LCD_CTRL_LCDPWR	device/LPC54018.h	7131;"	d
LCD_CTRL_LCDPWR_MASK	device/LPC54018.h	7129;"	d
LCD_CTRL_LCDPWR_SHIFT	device/LPC54018.h	7130;"	d
LCD_CTRL_LCDTFT	device/LPC54018.h	7113;"	d
LCD_CTRL_LCDTFT_MASK	device/LPC54018.h	7111;"	d
LCD_CTRL_LCDTFT_SHIFT	device/LPC54018.h	7112;"	d
LCD_CTRL_LCDVCOMP	device/LPC54018.h	7134;"	d
LCD_CTRL_LCDVCOMP_MASK	device/LPC54018.h	7132;"	d
LCD_CTRL_LCDVCOMP_SHIFT	device/LPC54018.h	7133;"	d
LCD_CTRL_WATERMARK	device/LPC54018.h	7137;"	d
LCD_CTRL_WATERMARK_MASK	device/LPC54018.h	7135;"	d
LCD_CTRL_WATERMARK_SHIFT	device/LPC54018.h	7136;"	d
LCD_Color2Index_8666	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Color2Index LCD_Color2Index_8666;$/;"	v
LCD_DEVCAP_BITSPERPIXEL	emwin/emWin_header/LCD.h	357;"	d
LCD_DEVCAP_CONTROLLER	emwin/emWin_header/LCD.h	356;"	d
LCD_DEVCAP_MIRROR_X	emwin/emWin_header/LCD.h	361;"	d
LCD_DEVCAP_MIRROR_Y	emwin/emWin_header/LCD.h	362;"	d
LCD_DEVCAP_NUMCOLORS	emwin/emWin_header/LCD.h	358;"	d
LCD_DEVCAP_SWAP_RB	emwin/emWin_header/LCD.h	364;"	d
LCD_DEVCAP_SWAP_XY	emwin/emWin_header/LCD.h	363;"	d
LCD_DEVCAP_VXSIZE	emwin/emWin_header/LCD.h	352;"	d
LCD_DEVCAP_VYSIZE	emwin/emWin_header/LCD.h	353;"	d
LCD_DEVCAP_XMAG	emwin/emWin_header/LCD.h	359;"	d
LCD_DEVCAP_XORG	emwin/emWin_header/LCD.h	354;"	d
LCD_DEVCAP_XSIZE	emwin/emWin_header/LCD.h	350;"	d
LCD_DEVCAP_YMAG	emwin/emWin_header/LCD.h	360;"	d
LCD_DEVCAP_YORG	emwin/emWin_header/LCD.h	355;"	d
LCD_DEVCAP_YSIZE	emwin/emWin_header/LCD.h	351;"	d
LCD_DEVDATA_MEMDEV	emwin/emWin_header/LCD.h	489;"	d
LCD_DEVDATA_PHYSPAL	emwin/emWin_header/LCD.h	490;"	d
LCD_DEVDATA_VRAMADDR	emwin/emWin_header/LCD.h	491;"	d
LCD_DEVFUNC_24BPP	emwin/emWin_header/LCD.h	445;"	d
LCD_DEVFUNC_ALPHAMODE	emwin/emWin_header/LCD.h	457;"	d
LCD_DEVFUNC_CHROMA	emwin/emWin_header/LCD.h	459;"	d
LCD_DEVFUNC_CHROMAMODE	emwin/emWin_header/LCD.h	458;"	d
LCD_DEVFUNC_CONTROLCACHE	emwin/emWin_header/LCD.h	451;"	d
LCD_DEVFUNC_COPYBUFFER	emwin/emWin_header/LCD.h	466;"	d
LCD_DEVFUNC_COPYRECT	emwin/emWin_header/LCD.h	468;"	d
LCD_DEVFUNC_DRAWBMP_16BPP	emwin/emWin_header/LCD.h	469;"	d
LCD_DEVFUNC_DRAWBMP_1BPP	emwin/emWin_header/LCD.h	465;"	d
LCD_DEVFUNC_DRAWBMP_32BPP	emwin/emWin_header/LCD.h	473;"	d
LCD_DEVFUNC_DRAWBMP_8BPP	emwin/emWin_header/LCD.h	470;"	d
LCD_DEVFUNC_EXIT	emwin/emWin_header/LCD.h	475;"	d
LCD_DEVFUNC_FILLPOLY	emwin/emWin_header/LCD.h	455;"	d
LCD_DEVFUNC_FILLPOLYAA	emwin/emWin_header/LCD.h	456;"	d
LCD_DEVFUNC_FILLRECT	emwin/emWin_header/LCD.h	464;"	d
LCD_DEVFUNC_GETPOS	emwin/emWin_header/LCD.h	442;"	d
LCD_DEVFUNC_INIT	emwin/emWin_header/LCD.h	450;"	d
LCD_DEVFUNC_NEXT_PIXEL	emwin/emWin_header/LCD.h	446;"	d
LCD_DEVFUNC_OFF	emwin/emWin_header/LCD.h	453;"	d
LCD_DEVFUNC_ON	emwin/emWin_header/LCD.h	452;"	d
LCD_DEVFUNC_READMPIXELS	emwin/emWin_header/LCD.h	472;"	d
LCD_DEVFUNC_READPIXEL	emwin/emWin_header/LCD.h	471;"	d
LCD_DEVFUNC_READRECT	emwin/emWin_header/LCD.h	439;"	d
LCD_DEVFUNC_REFRESH	emwin/emWin_header/LCD.h	461;"	d
LCD_DEVFUNC_SETALPHA	emwin/emWin_header/LCD.h	440;"	d
LCD_DEVFUNC_SETFUNC	emwin/emWin_header/LCD.h	460;"	d
LCD_DEVFUNC_SETLUTENTRY	emwin/emWin_header/LCD.h	454;"	d
LCD_DEVFUNC_SETPOS	emwin/emWin_header/LCD.h	441;"	d
LCD_DEVFUNC_SETRECT	emwin/emWin_header/LCD.h	462;"	d
LCD_DEVFUNC_SETSIZE	emwin/emWin_header/LCD.h	443;"	d
LCD_DEVFUNC_SETVIS	emwin/emWin_header/LCD.h	444;"	d
LCD_DEVFUNC_SET_BUFFERPTR	emwin/emWin_header/LCD.h	474;"	d
LCD_DEVFUNC_SET_SIZE	emwin/emWin_header/LCD.h	449;"	d
LCD_DEVFUNC_SET_VRAM_ADDR	emwin/emWin_header/LCD.h	447;"	d
LCD_DEVFUNC_SET_VSIZE	emwin/emWin_header/LCD.h	448;"	d
LCD_DEVFUNC_SHOWBUFFER	emwin/emWin_header/LCD.h	467;"	d
LCD_DISPLAY_INDEX	emwin/emWin_header/LCD_ConfDefaults.h	73;"	d
LCD_DRAWMODE	emwin/emWin_header/LCD.h	/^typedef int LCD_DRAWMODE;$/;"	t
LCD_DRAWMODE_NORMAL	emwin/emWin_header/LCD.h	96;"	d
LCD_DRAWMODE_REV	emwin/emWin_header/LCD.h	99;"	d
LCD_DRAWMODE_TRANS	emwin/emWin_header/LCD.h	98;"	d
LCD_DRAWMODE_XOR	emwin/emWin_header/LCD.h	97;"	d
LCD_ENDIAN_BIG	emwin/emWin_header/LCD_ConfDefaults.h	76;"	d
LCD_ERR0	emwin/emWin_header/LCD.h	88;"	d
LCD_ERR_CONTROLLER_NOT_FOUND	emwin/emWin_header/LCD.h	89;"	d
LCD_ERR_MEMORY	emwin/emWin_header/LCD.h	90;"	d
LCD_FIRSTCOM0	emwin/emWin_header/LCD_ConfDefaults.h	64;"	d
LCD_FIRSTSEG0	emwin/emWin_header/LCD_ConfDefaults.h	67;"	d
LCD_H	emwin/emWin_header/LCD.h	46;"	d
LCD_HEIGHT	emwin/emwin_support.h	23;"	d
LCD_HL_DrawHLine	emwin/emWin_header/GUI_Private.h	237;"	d
LCD_HL_DrawPixel	emwin/emWin_header/GUI_Private.h	238;"	d
LCD_INTCLR_BERIC	device/LPC54018.h	7201;"	d
LCD_INTCLR_BERIC_MASK	device/LPC54018.h	7199;"	d
LCD_INTCLR_BERIC_SHIFT	device/LPC54018.h	7200;"	d
LCD_INTCLR_FUFIC	device/LPC54018.h	7192;"	d
LCD_INTCLR_FUFIC_MASK	device/LPC54018.h	7190;"	d
LCD_INTCLR_FUFIC_SHIFT	device/LPC54018.h	7191;"	d
LCD_INTCLR_LNBUIC	device/LPC54018.h	7195;"	d
LCD_INTCLR_LNBUIC_MASK	device/LPC54018.h	7193;"	d
LCD_INTCLR_LNBUIC_SHIFT	device/LPC54018.h	7194;"	d
LCD_INTCLR_VCOMPIC	device/LPC54018.h	7198;"	d
LCD_INTCLR_VCOMPIC_MASK	device/LPC54018.h	7196;"	d
LCD_INTCLR_VCOMPIC_SHIFT	device/LPC54018.h	7197;"	d
LCD_INTMSK_BERIM	device/LPC54018.h	7153;"	d
LCD_INTMSK_BERIM_MASK	device/LPC54018.h	7151;"	d
LCD_INTMSK_BERIM_SHIFT	device/LPC54018.h	7152;"	d
LCD_INTMSK_FUFIM	device/LPC54018.h	7144;"	d
LCD_INTMSK_FUFIM_MASK	device/LPC54018.h	7142;"	d
LCD_INTMSK_FUFIM_SHIFT	device/LPC54018.h	7143;"	d
LCD_INTMSK_LNBUIM	device/LPC54018.h	7147;"	d
LCD_INTMSK_LNBUIM_MASK	device/LPC54018.h	7145;"	d
LCD_INTMSK_LNBUIM_SHIFT	device/LPC54018.h	7146;"	d
LCD_INTMSK_VCOMPIM	device/LPC54018.h	7150;"	d
LCD_INTMSK_VCOMPIM_MASK	device/LPC54018.h	7148;"	d
LCD_INTMSK_VCOMPIM_SHIFT	device/LPC54018.h	7149;"	d
LCD_INTRAW_BERRAW	device/LPC54018.h	7169;"	d
LCD_INTRAW_BERRAW_MASK	device/LPC54018.h	7167;"	d
LCD_INTRAW_BERRAW_SHIFT	device/LPC54018.h	7168;"	d
LCD_INTRAW_FUFRIS	device/LPC54018.h	7160;"	d
LCD_INTRAW_FUFRIS_MASK	device/LPC54018.h	7158;"	d
LCD_INTRAW_FUFRIS_SHIFT	device/LPC54018.h	7159;"	d
LCD_INTRAW_LNBURIS	device/LPC54018.h	7163;"	d
LCD_INTRAW_LNBURIS_MASK	device/LPC54018.h	7161;"	d
LCD_INTRAW_LNBURIS_SHIFT	device/LPC54018.h	7162;"	d
LCD_INTRAW_VCOMPRIS	device/LPC54018.h	7166;"	d
LCD_INTRAW_VCOMPRIS_MASK	device/LPC54018.h	7164;"	d
LCD_INTRAW_VCOMPRIS_SHIFT	device/LPC54018.h	7165;"	d
LCD_INTSTAT_BERMIS	device/LPC54018.h	7185;"	d
LCD_INTSTAT_BERMIS_MASK	device/LPC54018.h	7183;"	d
LCD_INTSTAT_BERMIS_SHIFT	device/LPC54018.h	7184;"	d
LCD_INTSTAT_FUFMIS	device/LPC54018.h	7176;"	d
LCD_INTSTAT_FUFMIS_MASK	device/LPC54018.h	7174;"	d
LCD_INTSTAT_FUFMIS_SHIFT	device/LPC54018.h	7175;"	d
LCD_INTSTAT_LNBUMIS	device/LPC54018.h	7179;"	d
LCD_INTSTAT_LNBUMIS_MASK	device/LPC54018.h	7177;"	d
LCD_INTSTAT_LNBUMIS_SHIFT	device/LPC54018.h	7178;"	d
LCD_INTSTAT_VCOMPMIS	device/LPC54018.h	7182;"	d
LCD_INTSTAT_VCOMPMIS_MASK	device/LPC54018.h	7180;"	d
LCD_INTSTAT_VCOMPMIS_SHIFT	device/LPC54018.h	7181;"	d
LCD_IRQHandler	startup/startup_lpc54018.c	/^WEAK void LCD_IRQHandler(void)$/;"	f
LCD_IRQS	device/LPC54018.h	7369;"	d
LCD_IRQn	device/LPC54018.h	/^  LCD_IRQn                     = 53,               \/**< LCD interrupt *\/$/;"	e	enum:IRQn
LCD_Index2Color_444_12	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_444_12;$/;"	v
LCD_Index2Color_444_12_1	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_444_12_1;$/;"	v
LCD_Index2Color_444_16	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_444_16;$/;"	v
LCD_Index2Color_555	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_555;$/;"	v
LCD_Index2Color_565	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_565;$/;"	v
LCD_Index2Color_8666	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_8666;$/;"	v
LCD_Index2Color_888	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_888;$/;"	v
LCD_Index2Color_8888	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_8888;$/;"	v
LCD_Index2Color_M444_12	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_M444_12;$/;"	v
LCD_Index2Color_M444_12_1	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_M444_12_1;$/;"	v
LCD_Index2Color_M444_16	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_M444_16;$/;"	v
LCD_Index2Color_M555	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_M555;$/;"	v
LCD_Index2Color_M565	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_M565;$/;"	v
LCD_Index2Color_M888	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_M888;$/;"	v
LCD_Index2Color_M8888I	emwin/emWin_header/LCD_Protected.h	/^tLCDDEV_Index2Color LCD_Index2Color_M8888I;$/;"	v
LCD_LE_LED	device/LPC54018.h	7080;"	d
LCD_LE_LED_MASK	device/LPC54018.h	7078;"	d
LCD_LE_LED_SHIFT	device/LPC54018.h	7079;"	d
LCD_LE_LEE	device/LPC54018.h	7083;"	d
LCD_LE_LEE_MASK	device/LPC54018.h	7081;"	d
LCD_LE_LEE_SHIFT	device/LPC54018.h	7082;"	d
LCD_LOGPALETTE	emwin/emWin_header/LCD.h	/^} LCD_LOGPALETTE;$/;"	t	typeref:struct:__anon405
LCD_LPBASE_LCDLPBASE	device/LPC54018.h	7097;"	d
LCD_LPBASE_LCDLPBASE_MASK	device/LPC54018.h	7095;"	d
LCD_LPBASE_LCDLPBASE_SHIFT	device/LPC54018.h	7096;"	d
LCD_LPCURR_LCDLPCURR	device/LPC54018.h	7215;"	d
LCD_LPCURR_LCDLPCURR_MASK	device/LPC54018.h	7213;"	d
LCD_LPCURR_LCDLPCURR_SHIFT	device/LPC54018.h	7214;"	d
LCD_LUT_INFO	emwin/emWin_header/LCD_Protected.h	/^} LCD_LUT_INFO;$/;"	t	typeref:struct:__anon355
LCD_MAX_LOG_COLORS	emwin/emWin_header/GUI_ConfDefaults.h	63;"	d
LCD_MIRROR	emwin/emWin_header/GUIDRV_Lin_Private.h	310;"	d
LCD_MIRROR_X	emwin/emWin_header/LCD_ConfDefaults.h	55;"	d
LCD_MIRROR_Y	emwin/emWin_header/LCD_ConfDefaults.h	58;"	d
LCD_PAL_B04_0	device/LPC54018.h	7228;"	d
LCD_PAL_B04_0_MASK	device/LPC54018.h	7226;"	d
LCD_PAL_B04_0_SHIFT	device/LPC54018.h	7227;"	d
LCD_PAL_B14_0	device/LPC54018.h	7240;"	d
LCD_PAL_B14_0_MASK	device/LPC54018.h	7238;"	d
LCD_PAL_B14_0_SHIFT	device/LPC54018.h	7239;"	d
LCD_PAL_COUNT	device/LPC54018.h	7247;"	d
LCD_PAL_G04_0	device/LPC54018.h	7225;"	d
LCD_PAL_G04_0_MASK	device/LPC54018.h	7223;"	d
LCD_PAL_G04_0_SHIFT	device/LPC54018.h	7224;"	d
LCD_PAL_G14_0	device/LPC54018.h	7237;"	d
LCD_PAL_G14_0_MASK	device/LPC54018.h	7235;"	d
LCD_PAL_G14_0_SHIFT	device/LPC54018.h	7236;"	d
LCD_PAL_I0	device/LPC54018.h	7231;"	d
LCD_PAL_I0_MASK	device/LPC54018.h	7229;"	d
LCD_PAL_I0_SHIFT	device/LPC54018.h	7230;"	d
LCD_PAL_I1	device/LPC54018.h	7243;"	d
LCD_PAL_I1_MASK	device/LPC54018.h	7241;"	d
LCD_PAL_I1_SHIFT	device/LPC54018.h	7242;"	d
LCD_PAL_R04_0	device/LPC54018.h	7222;"	d
LCD_PAL_R04_0_MASK	device/LPC54018.h	7220;"	d
LCD_PAL_R04_0_SHIFT	device/LPC54018.h	7221;"	d
LCD_PAL_R14_0	device/LPC54018.h	7234;"	d
LCD_PAL_R14_0_MASK	device/LPC54018.h	7232;"	d
LCD_PAL_R14_0_SHIFT	device/LPC54018.h	7233;"	d
LCD_PHYSPALETTE	emwin/emWin_header/LCD.h	/^} LCD_PHYSPALETTE;$/;"	t	typeref:struct:__anon407
LCD_PIXELINDEX	emwin/emWin_header/GUI_ConfDefaults.h	70;"	d
LCD_POL_ACB	device/LPC54018.h	7052;"	d
LCD_POL_ACB_MASK	device/LPC54018.h	7050;"	d
LCD_POL_ACB_SHIFT	device/LPC54018.h	7051;"	d
LCD_POL_BCD	device/LPC54018.h	7070;"	d
LCD_POL_BCD_MASK	device/LPC54018.h	7068;"	d
LCD_POL_BCD_SHIFT	device/LPC54018.h	7069;"	d
LCD_POL_CPL	device/LPC54018.h	7067;"	d
LCD_POL_CPL_MASK	device/LPC54018.h	7065;"	d
LCD_POL_CPL_SHIFT	device/LPC54018.h	7066;"	d
LCD_POL_IHS	device/LPC54018.h	7058;"	d
LCD_POL_IHS_MASK	device/LPC54018.h	7056;"	d
LCD_POL_IHS_SHIFT	device/LPC54018.h	7057;"	d
LCD_POL_IOE	device/LPC54018.h	7064;"	d
LCD_POL_IOE_MASK	device/LPC54018.h	7062;"	d
LCD_POL_IOE_SHIFT	device/LPC54018.h	7063;"	d
LCD_POL_IPC	device/LPC54018.h	7061;"	d
LCD_POL_IPC_MASK	device/LPC54018.h	7059;"	d
LCD_POL_IPC_SHIFT	device/LPC54018.h	7060;"	d
LCD_POL_IVS	device/LPC54018.h	7055;"	d
LCD_POL_IVS_MASK	device/LPC54018.h	7053;"	d
LCD_POL_IVS_SHIFT	device/LPC54018.h	7054;"	d
LCD_POL_PCD_HI	device/LPC54018.h	7073;"	d
LCD_POL_PCD_HI_MASK	device/LPC54018.h	7071;"	d
LCD_POL_PCD_HI_SHIFT	device/LPC54018.h	7072;"	d
LCD_POL_PCD_LO	device/LPC54018.h	7049;"	d
LCD_POL_PCD_LO_MASK	device/LPC54018.h	7047;"	d
LCD_POL_PCD_LO_SHIFT	device/LPC54018.h	7048;"	d
LCD_PROTECTED_H	emwin/emWin_header/LCD_Protected.h	46;"	d
LCD_Private_H	emwin/emWin_header/LCD_Private.h	46;"	d
LCD_READ_A1	emwin/emWin_header/GUIDRV_SSD1926_Private.h	149;"	d
LCD_READ_MEM08P	emwin/emWin_header/GUIDRV_Lin_Private.h	101;"	d
LCD_READ_MEM08P	emwin/emWin_header/GUIDRV_Lin_Private.h	84;"	d
LCD_READ_MEM16	emwin/emWin_header/GUIDRV_Lin_Private.h	82;"	d
LCD_READ_MEM16	emwin/emWin_header/GUIDRV_Lin_Private.h	99;"	d
LCD_READ_MEM32	emwin/emWin_header/GUIDRV_Lin_Private.h	100;"	d
LCD_READ_MEM32	emwin/emWin_header/GUIDRV_Lin_Private.h	83;"	d
LCD_READ_MEM32P	emwin/emWin_header/GUIDRV_Lin_Private.h	102;"	d
LCD_READ_MEM32P	emwin/emWin_header/GUIDRV_Lin_Private.h	85;"	d
LCD_RECT	emwin/emWin_header/LCD.h	/^typedef struct { I16 x0,y0,x1,y1; } LCD_RECT;$/;"	t	typeref:struct:__anon404
LCD_RSTS	drivers/fsl_reset.h	159;"	d
LCD_SET_COLOR_API	emwin/emWin_header/GUI_Private.h	/^} LCD_SET_COLOR_API;$/;"	t	typeref:struct:__anon296
LCD_SWAP_RB	emwin/emWin_header/LCD_ConfDefaults.h	70;"	d
LCD_SWAP_XY	emwin/emWin_header/LCD_ConfDefaults.h	61;"	d
LCD_TIMH_HBP	device/LPC54018.h	7026;"	d
LCD_TIMH_HBP_MASK	device/LPC54018.h	7024;"	d
LCD_TIMH_HBP_SHIFT	device/LPC54018.h	7025;"	d
LCD_TIMH_HFP	device/LPC54018.h	7023;"	d
LCD_TIMH_HFP_MASK	device/LPC54018.h	7021;"	d
LCD_TIMH_HFP_SHIFT	device/LPC54018.h	7022;"	d
LCD_TIMH_HSW	device/LPC54018.h	7020;"	d
LCD_TIMH_HSW_MASK	device/LPC54018.h	7018;"	d
LCD_TIMH_HSW_SHIFT	device/LPC54018.h	7019;"	d
LCD_TIMH_PPL	device/LPC54018.h	7017;"	d
LCD_TIMH_PPL_MASK	device/LPC54018.h	7015;"	d
LCD_TIMH_PPL_SHIFT	device/LPC54018.h	7016;"	d
LCD_TIMV_LPP	device/LPC54018.h	7033;"	d
LCD_TIMV_LPP_MASK	device/LPC54018.h	7031;"	d
LCD_TIMV_LPP_SHIFT	device/LPC54018.h	7032;"	d
LCD_TIMV_VBP	device/LPC54018.h	7042;"	d
LCD_TIMV_VBP_MASK	device/LPC54018.h	7040;"	d
LCD_TIMV_VBP_SHIFT	device/LPC54018.h	7041;"	d
LCD_TIMV_VFP	device/LPC54018.h	7039;"	d
LCD_TIMV_VFP_MASK	device/LPC54018.h	7037;"	d
LCD_TIMV_VFP_SHIFT	device/LPC54018.h	7038;"	d
LCD_TIMV_VSW	device/LPC54018.h	7036;"	d
LCD_TIMV_VSW_MASK	device/LPC54018.h	7034;"	d
LCD_TIMV_VSW_SHIFT	device/LPC54018.h	7035;"	d
LCD_TYPE_COMTRANS	emwin/emWin_header/LCD_Private.h	63;"	d
LCD_TYPE_SEGTRANS	emwin/emWin_header/LCD_Private.h	62;"	d
LCD_Type	device/LPC54018.h	/^} LCD_Type;$/;"	t	typeref:struct:__anon165
LCD_UPBASE_LCDUPBASE	device/LPC54018.h	7090;"	d
LCD_UPBASE_LCDUPBASE_MASK	device/LPC54018.h	7088;"	d
LCD_UPBASE_LCDUPBASE_SHIFT	device/LPC54018.h	7089;"	d
LCD_UPCURR_LCDUPCURR	device/LPC54018.h	7208;"	d
LCD_UPCURR_LCDUPCURR_MASK	device/LPC54018.h	7206;"	d
LCD_UPCURR_LCDUPCURR_SHIFT	device/LPC54018.h	7207;"	d
LCD_WIDTH	emwin/emwin_support.h	22;"	d
LCD_WRITEM_A0	emwin/emWin_header/GUIDRV_SSD1926_Private.h	147;"	d
LCD_WRITEM_A1	emwin/emWin_header/GUIDRV_SSD1926_Private.h	148;"	d
LCD_WRITE_A0	emwin/emWin_header/GUIDRV_SSD1926_Private.h	145;"	d
LCD_WRITE_A1	emwin/emWin_header/GUIDRV_SSD1926_Private.h	146;"	d
LCD_WRITE_BUFFER_SIZE	emwin/emWin_header/GUIDRV_FlexColor_Private.h	61;"	d
LCD_WRITE_BUFFER_SIZE	emwin/emWin_header/GUIDRV_S1D13748_Private.h	64;"	d
LCD_WRITE_BUFFER_SIZE	emwin/emWin_header/GUIDRV_S1D13781_Private.h	57;"	d
LCD_WRITE_MEM08P	emwin/emWin_header/GUIDRV_Lin_Private.h	105;"	d
LCD_WRITE_MEM08P	emwin/emWin_header/GUIDRV_Lin_Private.h	88;"	d
LCD_WRITE_MEM16	emwin/emWin_header/GUIDRV_Lin_Private.h	103;"	d
LCD_WRITE_MEM16	emwin/emWin_header/GUIDRV_Lin_Private.h	86;"	d
LCD_WRITE_MEM16P	emwin/emWin_header/GUIDRV_Lin_Private.h	106;"	d
LCD_WRITE_MEM16P	emwin/emWin_header/GUIDRV_Lin_Private.h	89;"	d
LCD_WRITE_MEM32	emwin/emWin_header/GUIDRV_Lin_Private.h	104;"	d
LCD_WRITE_MEM32	emwin/emWin_header/GUIDRV_Lin_Private.h	87;"	d
LCD_WRITE_MEM32P	emwin/emWin_header/GUIDRV_Lin_Private.h	107;"	d
LCD_WRITE_MEM32P	emwin/emWin_header/GUIDRV_Lin_Private.h	90;"	d
LCD_XMAG	emwin/emWin_header/GUI_ConfDefaults.h	76;"	d
LCD_X_Config	emwin/emwin_support.c	/^void LCD_X_Config(void)$/;"	f
LCD_X_DisplayDriver	emwin/emwin_support.c	/^int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void *pData)$/;"	f
LCD_X_INITCONTROLLER	emwin/emWin_header/LCD.h	550;"	d
LCD_X_OFF	emwin/emWin_header/LCD.h	555;"	d
LCD_X_ON	emwin/emWin_header/LCD.h	554;"	d
LCD_X_SETALPHA	emwin/emWin_header/LCD.h	559;"	d
LCD_X_SETALPHAMODE	emwin/emWin_header/LCD.h	560;"	d
LCD_X_SETALPHAMODE_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETALPHAMODE_INFO;$/;"	t	typeref:struct:__anon416
LCD_X_SETALPHA_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETALPHA_INFO;$/;"	t	typeref:struct:__anon414
LCD_X_SETCHROMA	emwin/emWin_header/LCD.h	562;"	d
LCD_X_SETCHROMAMODE	emwin/emWin_header/LCD.h	561;"	d
LCD_X_SETCHROMAMODE_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETCHROMAMODE_INFO;$/;"	t	typeref:struct:__anon417
LCD_X_SETCHROMA_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETCHROMA_INFO;$/;"	t	typeref:struct:__anon418
LCD_X_SETLUTENTRY	emwin/emWin_header/LCD.h	553;"	d
LCD_X_SETLUTENTRY_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETLUTENTRY_INFO;$/;"	t	typeref:struct:__anon411
LCD_X_SETORG	emwin/emWin_header/LCD.h	552;"	d
LCD_X_SETORG_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETORG_INFO;$/;"	t	typeref:struct:__anon410
LCD_X_SETPOS	emwin/emWin_header/LCD.h	557;"	d
LCD_X_SETPOS_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETPOS_INFO;$/;"	t	typeref:struct:__anon413
LCD_X_SETSIZE	emwin/emWin_header/LCD.h	556;"	d
LCD_X_SETSIZE_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETSIZE_INFO;$/;"	t	typeref:struct:__anon412
LCD_X_SETVIS	emwin/emWin_header/LCD.h	558;"	d
LCD_X_SETVIS_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETVIS_INFO;$/;"	t	typeref:struct:__anon415
LCD_X_SETVRAMADDR	emwin/emWin_header/LCD.h	551;"	d
LCD_X_SETVRAMADDR_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SETVRAMADDR_INFO;$/;"	t	typeref:struct:__anon409
LCD_X_SHOWBUFFER	emwin/emWin_header/LCD.h	563;"	d
LCD_X_SHOWBUFFER_INFO	emwin/emWin_header/LCD.h	/^} LCD_X_SHOWBUFFER_INFO;$/;"	t	typeref:struct:__anon419
LCD_YMAG	emwin/emWin_header/GUI_ConfDefaults.h	73;"	d
LCD__GetBkColorIndex	emwin/emWin_header/GUI_Private.h	629;"	d
LCD__GetColorIndex	emwin/emWin_header/GUI_Private.h	630;"	d
LCD__SetBkColorIndex	emwin/emWin_header/GUI_Private.h	627;"	d
LCD__SetColorIndex	emwin/emWin_header/GUI_Private.h	628;"	d
LCD_pBkColorIndex	emwin/emWin_header/GUI.h	/^  LCD_PIXELINDEX * LCD_pBkColorIndex;$/;"	m	struct:GUI_CONTEXT
LCD_pColorIndex	emwin/emWin_header/GUI.h	/^  LCD_PIXELINDEX * LCD_pColorIndex;$/;"	m	struct:GUI_CONTEXT
LCD_tMouseState	emwin/emWin_header/LCD.h	/^} LCD_tMouseState;$/;"	t	typeref:struct:__anon406
LCPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	61;"	d
LCPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	73;"	d
LCP_DEFLOOPBACKFAIL	lwip/src/include/netif/ppp/ppp_opts.h	474;"	d
LCP_ECHOINTERVAL	lwip/src/include/netif/ppp/ppp_opts.h	481;"	d
LCP_H	lwip/src/include/netif/ppp/lcp.h	49;"	d
LCP_MAXECHOFAILS	lwip/src/include/netif/ppp/ppp_opts.h	488;"	d
LCR	device/LPC54018.h	/^  __IO uint32_t LCR;                               \/**< Line Control Register, offset: 0xC *\/$/;"	m	struct:__anon179
LDOPTIMIZE_EN	radio/sx1276-LoRa.h	/^}LDOPTIMIZE_EN;$/;"	t	typeref:enum:__anon483
LDOPTIMIZE_OFF	radio/sx1276-LoRa.h	/^	LDOPTIMIZE_OFF               =   0x00,       \/\/Disables the low datarate optimization$/;"	e	enum:__anon483
LDOPTIMIZE_ON	radio/sx1276-LoRa.h	/^	LDOPTIMIZE_ON                =   0x01,       \/\/Enables the low datarate optimization$/;"	e	enum:__anon483
LDPC	codec2/mpdecode_core.h	/^struct LDPC {$/;"	s
LE	device/LPC54018.h	/^  __IO uint32_t LE;                                \/**< Line End Control register, offset: 0xC *\/$/;"	m	struct:__anon165
LED1_INIT	board/board.h	163;"	d
LED1_OFF	board/board.h	168;"	d
LED1_ON	board/board.h	166;"	d
LED1_TOGGLE	board/board.h	170;"	d
LED2_INIT	board/board.h	172;"	d
LED2_OFF	board/board.h	177;"	d
LED2_ON	board/board.h	175;"	d
LED2_TOGGLE	board/board.h	179;"	d
LED3_INIT	board/board.h	182;"	d
LED3_OFF	board/board.h	187;"	d
LED3_ON	board/board.h	185;"	d
LED3_TOGGLE	board/board.h	189;"	d
LEFT	source/common.c	19;"	d	file:
LENCIADDR	lwip/src/netif/ppp/ipcp.c	758;"	d	file:
LENCIADDRS	lwip/src/netif/ppp/ipcp.c	754;"	d	file:
LENCICBCP	lwip/src/netif/ppp/lcp.c	783;"	d	file:
LENCICHAP	lwip/src/netif/ppp/lcp.c	776;"	d	file:
LENCIDNS	lwip/src/netif/ppp/ipcp.c	760;"	d	file:
LENCIIFACEID	lwip/src/netif/ppp/ipv6cp.c	536;"	d	file:
LENCILONG	lwip/src/netif/ppp/lcp.c	779;"	d	file:
LENCILQR	lwip/src/netif/ppp/lcp.c	781;"	d	file:
LENCISHORT	lwip/src/netif/ppp/lcp.c	778;"	d	file:
LENCIVJ	lwip/src/netif/ppp/ipcp.c	756;"	d	file:
LENCIVJ	lwip/src/netif/ppp/ipv6cp.c	534;"	d	file:
LENCIVOID	lwip/src/netif/ppp/lcp.c	774;"	d	file:
LFS_ASSERT	littlefs/littlefs_include/lfs_util.h	64;"	d
LFS_ASSERT	littlefs/littlefs_include/lfs_util.h	66;"	d
LFS_DEBUG	littlefs/littlefs_include/lfs_util.h	42;"	d
LFS_DEBUG	littlefs/littlefs_include/lfs_util.h	45;"	d
LFS_DISK_VERSION	littlefs/littlefs_include/lfs.h	37;"	d
LFS_DISK_VERSION_MAJOR	littlefs/littlefs_include/lfs.h	38;"	d
LFS_DISK_VERSION_MINOR	littlefs/littlefs_include/lfs.h	39;"	d
LFS_ERROR	littlefs/littlefs_include/lfs_util.h	56;"	d
LFS_ERROR	littlefs/littlefs_include/lfs_util.h	59;"	d
LFS_ERR_BADF	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_BADF     = -9,   \/\/ Bad file number$/;"	e	enum:lfs_error
LFS_ERR_CORRUPT	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_CORRUPT  = -52,  \/\/ Corrupted$/;"	e	enum:lfs_error
LFS_ERR_EXIST	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_EXIST    = -17,  \/\/ Entry already exists$/;"	e	enum:lfs_error
LFS_ERR_INVAL	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_INVAL    = -22,  \/\/ Invalid parameter$/;"	e	enum:lfs_error
LFS_ERR_IO	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_IO       = -5,   \/\/ Error during device operation$/;"	e	enum:lfs_error
LFS_ERR_ISDIR	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_ISDIR    = -21,  \/\/ Entry is a dir$/;"	e	enum:lfs_error
LFS_ERR_NOENT	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_NOENT    = -2,   \/\/ No directory entry$/;"	e	enum:lfs_error
LFS_ERR_NOMEM	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_NOMEM    = -12,  \/\/ No more memory available$/;"	e	enum:lfs_error
LFS_ERR_NOSPC	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_NOSPC    = -28,  \/\/ No space left on device$/;"	e	enum:lfs_error
LFS_ERR_NOTDIR	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_NOTDIR   = -20,  \/\/ Entry is not a dir$/;"	e	enum:lfs_error
LFS_ERR_NOTEMPTY	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_NOTEMPTY = -39,  \/\/ Dir is not empty$/;"	e	enum:lfs_error
LFS_ERR_OK	littlefs/littlefs_include/lfs.h	/^    LFS_ERR_OK       = 0,    \/\/ No error$/;"	e	enum:lfs_error
LFS_F_DIRTY	littlefs/littlefs_include/lfs.h	/^    LFS_F_DIRTY   = 0x10000, \/\/ File does not match storage$/;"	e	enum:lfs_open_flags
LFS_F_ERRED	littlefs/littlefs_include/lfs.h	/^    LFS_F_ERRED   = 0x80000, \/\/ An error occurred during write$/;"	e	enum:lfs_open_flags
LFS_F_READING	littlefs/littlefs_include/lfs.h	/^    LFS_F_READING = 0x40000, \/\/ File has been read since last flush$/;"	e	enum:lfs_open_flags
LFS_F_WRITING	littlefs/littlefs_include/lfs.h	/^    LFS_F_WRITING = 0x20000, \/\/ File has been written since last flush$/;"	e	enum:lfs_open_flags
LFS_H	littlefs/littlefs_include/lfs.h	19;"	d
LFS_NAME_MAX	littlefs/littlefs_include/lfs.h	55;"	d
LFS_O_APPEND	littlefs/littlefs_include/lfs.h	/^    LFS_O_APPEND = 0x0800,   \/\/ Move to end of file on every write$/;"	e	enum:lfs_open_flags
LFS_O_CREAT	littlefs/littlefs_include/lfs.h	/^    LFS_O_CREAT  = 0x0100,   \/\/ Create a file if it does not exist$/;"	e	enum:lfs_open_flags
LFS_O_EXCL	littlefs/littlefs_include/lfs.h	/^    LFS_O_EXCL   = 0x0200,   \/\/ Fail if a file already exists$/;"	e	enum:lfs_open_flags
LFS_O_RDONLY	littlefs/littlefs_include/lfs.h	/^    LFS_O_RDONLY = 1,        \/\/ Open a file as read only$/;"	e	enum:lfs_open_flags
LFS_O_RDWR	littlefs/littlefs_include/lfs.h	/^    LFS_O_RDWR   = 3,        \/\/ Open a file as read and write$/;"	e	enum:lfs_open_flags
LFS_O_TRUNC	littlefs/littlefs_include/lfs.h	/^    LFS_O_TRUNC  = 0x0400,   \/\/ Truncate the existing file to zero size$/;"	e	enum:lfs_open_flags
LFS_O_WRONLY	littlefs/littlefs_include/lfs.h	/^    LFS_O_WRONLY = 2,        \/\/ Open a file as write only$/;"	e	enum:lfs_open_flags
LFS_SEEK_CUR	littlefs/littlefs_include/lfs.h	/^    LFS_SEEK_CUR = 1,   \/\/ Seek relative to the current file position$/;"	e	enum:lfs_whence_flags
LFS_SEEK_END	littlefs/littlefs_include/lfs.h	/^    LFS_SEEK_END = 2,   \/\/ Seek relative to the end of the file$/;"	e	enum:lfs_whence_flags
LFS_SEEK_SET	littlefs/littlefs_include/lfs.h	/^    LFS_SEEK_SET = 0,   \/\/ Seek relative to an absolute position$/;"	e	enum:lfs_whence_flags
LFS_TYPE_DIR	littlefs/littlefs_include/lfs.h	/^    LFS_TYPE_DIR        = 0x22,$/;"	e	enum:lfs_type
LFS_TYPE_REG	littlefs/littlefs_include/lfs.h	/^    LFS_TYPE_REG        = 0x11,$/;"	e	enum:lfs_type
LFS_TYPE_SUPERBLOCK	littlefs/littlefs_include/lfs.h	/^    LFS_TYPE_SUPERBLOCK = 0x2e,$/;"	e	enum:lfs_type
LFS_UTIL_H	littlefs/littlefs_include/lfs_util.h	19;"	d
LFS_VERSION	littlefs/littlefs_include/lfs.h	30;"	d
LFS_VERSION_MAJOR	littlefs/littlefs_include/lfs.h	31;"	d
LFS_VERSION_MINOR	littlefs/littlefs_include/lfs.h	32;"	d
LFS_WARN	littlefs/littlefs_include/lfs_util.h	49;"	d
LFS_WARN	littlefs/littlefs_include/lfs_util.h	52;"	d
LHeight	emwin/emWin_header/GUI_Type.h	/^  U16 LHeight;      \/* Height of a small lower case character (a) *\/$/;"	m	struct:__anon262
LHeight	emwin/emWin_header/GUI_Type.h	/^  U8 LHeight;     \/* Height of a small lower case character (a,x) *\/$/;"	m	struct:GUI_FONT
LHeight	emwin/emWin_header/GUI_Type.h	/^  U8 LHeight;     \/* height of a small lower case character (a,x) *\/$/;"	m	struct:__anon258
LHs	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long LHs[16] =$/;"	v	file:
LIBS	Debug/objects.mk	/^LIBS := -larm_cortexM4lf_math -larm_cortexM7l_math -lpower_hardabi -lemWin_M4F$/;"	m
LIMIT	device/LPC54018.h	/^  __IO uint32_t LIMIT;                             \/**< SCT limit event select register, offset: 0x8 *\/$/;"	m	struct:__anon172
LINE_CODING_CHARFORMAT	vcom/virtual_com.h	35;"	d
LINE_CODING_DATABITS	vcom/virtual_com.h	37;"	d
LINE_CODING_DTERATE	vcom/virtual_com.h	34;"	d
LINE_CODING_PARITYTYPE	vcom/virtual_com.h	36;"	d
LINE_CODING_SIZE	vcom/virtual_com.h	33;"	d
LINK_STATS	lwip/src/include/lwip/opt.h	2115;"	d
LINK_STATS	lwip/src/include/lwip/opt.h	2235;"	d
LINK_STATS_DISPLAY	lwip/src/include/lwip/stats.h	382;"	d
LINK_STATS_DISPLAY	lwip/src/include/lwip/stats.h	385;"	d
LINK_STATS_INC	lwip/src/include/lwip/stats.h	381;"	d
LINK_STATS_INC	lwip/src/include/lwip/stats.h	384;"	d
LISTBOX_ALL_ITEMS	emwin/emWin_header/LISTBOX.h	65;"	d
LISTBOX_C	emwin/emWin_header/LISTBOX_Private.h	/^  void LISTBOX_C(void) {}$/;"	f
LISTBOX_CF_AUTOSCROLLBAR_H	emwin/emWin_header/LISTBOX.h	95;"	d
LISTBOX_CF_AUTOSCROLLBAR_V	emwin/emWin_header/LISTBOX.h	96;"	d
LISTBOX_CF_FIXEDSCROLLMODE	emwin/emWin_header/LISTBOX.h	99;"	d
LISTBOX_CF_MULTISEL	emwin/emWin_header/LISTBOX.h	97;"	d
LISTBOX_CF_WRAP	emwin/emWin_header/LISTBOX.h	98;"	d
LISTBOX_CI_DISABLED	emwin/emWin_header/LISTBOX.h	74;"	d
LISTBOX_CI_SEL	emwin/emWin_header/LISTBOX.h	72;"	d
LISTBOX_CI_SELFOCUS	emwin/emWin_header/LISTBOX.h	73;"	d
LISTBOX_CI_UNSEL	emwin/emWin_header/LISTBOX.h	71;"	d
LISTBOX_DeleteString	emwin/emWin_header/LISTBOX.h	215;"	d
LISTBOX_FM_CENTER	emwin/emWin_header/LISTBOX.h	112;"	d
LISTBOX_FM_OFF	emwin/emWin_header/LISTBOX.h	110;"	d
LISTBOX_FM_ON	emwin/emWin_header/LISTBOX.h	111;"	d
LISTBOX_H	emwin/emWin_header/LISTBOX.h	46;"	d
LISTBOX_Handle	emwin/emWin_header/LISTBOX.h	/^typedef WM_HMEM LISTBOX_Handle;$/;"	t
LISTBOX_ID	emwin/emWin_header/WIDGET.h	108;"	d
LISTBOX_INIT_ID	emwin/emWin_header/LISTBOX_Private.h	110;"	d
LISTBOX_INIT_ID	emwin/emWin_header/LISTBOX_Private.h	112;"	d
LISTBOX_ITEM	emwin/emWin_header/LISTBOX_Private.h	/^} LISTBOX_ITEM;$/;"	t	typeref:struct:__anon311
LISTBOX_ITEM_DISABLED	emwin/emWin_header/LISTBOX_Private.h	62;"	d
LISTBOX_ITEM_SELECTED	emwin/emWin_header/LISTBOX_Private.h	61;"	d
LISTBOX_LOCK_H	emwin/emWin_header/LISTBOX_Private.h	117;"	d
LISTBOX_LOCK_H	emwin/emWin_header/LISTBOX_Private.h	119;"	d
LISTBOX_NOTIFICATION_LOST_FOCUS	emwin/emWin_header/LISTBOX.h	89;"	d
LISTBOX_Obj	emwin/emWin_header/LISTBOX_Private.h	/^} LISTBOX_Obj;$/;"	t	typeref:struct:__anon313
LISTBOX_PRIVATE_H	emwin/emWin_header/LISTBOX_Private.h	46;"	d
LISTBOX_PROPS	emwin/emWin_header/LISTBOX_Private.h	/^} LISTBOX_PROPS;$/;"	t	typeref:struct:__anon312
LISTBOX_SF_AUTOSCROLLBAR_H	emwin/emWin_header/LISTBOX.h	100;"	d
LISTBOX_SF_AUTOSCROLLBAR_V	emwin/emWin_header/LISTBOX.h	101;"	d
LISTBOX_SF_FIXEDSCROLLMODE	emwin/emWin_header/LISTBOX.h	104;"	d
LISTBOX_SF_MULTISEL	emwin/emWin_header/LISTBOX.h	102;"	d
LISTBOX_SF_WRAP	emwin/emWin_header/LISTBOX.h	103;"	d
LISTBOX_SetBackColor	emwin/emWin_header/LISTBOX.h	214;"	d
LISTEN	lwip/src/include/lwip/tcpbase.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LISTVIEW_ALL_ITEMS	emwin/emWin_header/LISTVIEW.h	63;"	d
LISTVIEW_CELL	emwin/emWin_header/LISTVIEW_Private.h	/^} LISTVIEW_CELL;$/;"	t	typeref:struct:__anon333
LISTVIEW_CELL_INFO	emwin/emWin_header/LISTVIEW_Private.h	/^} LISTVIEW_CELL_INFO;$/;"	t	typeref:struct:__anon332
LISTVIEW_CELL_INFO_BITMAP	emwin/emWin_header/LISTVIEW_Private.h	66;"	d
LISTVIEW_CELL_INFO_COLORS	emwin/emWin_header/LISTVIEW_Private.h	65;"	d
LISTVIEW_CF_AUTOSCROLLBAR_H	emwin/emWin_header/LISTVIEW.h	78;"	d
LISTVIEW_CF_AUTOSCROLLBAR_V	emwin/emWin_header/LISTVIEW.h	79;"	d
LISTVIEW_CF_CELL_SELECT	emwin/emWin_header/LISTVIEW.h	80;"	d
LISTVIEW_CI_DISABLED	emwin/emWin_header/LISTVIEW.h	72;"	d
LISTVIEW_CI_SEL	emwin/emWin_header/LISTVIEW.h	70;"	d
LISTVIEW_CI_SELFOCUS	emwin/emWin_header/LISTVIEW.h	71;"	d
LISTVIEW_CI_UNSEL	emwin/emWin_header/LISTVIEW.h	69;"	d
LISTVIEW_COLUMN	emwin/emWin_header/LISTVIEW_Private.h	/^} LISTVIEW_COLUMN;$/;"	t	typeref:struct:__anon335
LISTVIEW_H	emwin/emWin_header/LISTVIEW.h	46;"	d
LISTVIEW_Handle	emwin/emWin_header/LISTVIEW.h	/^typedef WM_HMEM LISTVIEW_Handle;$/;"	t
LISTVIEW_ID	emwin/emWin_header/WIDGET.h	109;"	d
LISTVIEW_INIT_ID	emwin/emWin_header/LISTVIEW_Private.h	151;"	d
LISTVIEW_INIT_ID	emwin/emWin_header/LISTVIEW_Private.h	153;"	d
LISTVIEW_LOCK_H	emwin/emWin_header/LISTVIEW_Private.h	158;"	d
LISTVIEW_LOCK_H	emwin/emWin_header/LISTVIEW_Private.h	160;"	d
LISTVIEW_Obj	emwin/emWin_header/LISTVIEW_Private.h	/^struct LISTVIEW_Obj {$/;"	s
LISTVIEW_Obj	emwin/emWin_header/LISTVIEW_Private.h	/^typedef struct LISTVIEW_Obj LISTVIEW_Obj;$/;"	t	typeref:struct:LISTVIEW_Obj
LISTVIEW_PRIVATE_H	emwin/emWin_header/LISTVIEW_Private.h	46;"	d
LISTVIEW_PROPS	emwin/emWin_header/LISTVIEW_Private.h	/^} LISTVIEW_PROPS;$/;"	t	typeref:struct:__anon331
LISTVIEW_ROW	emwin/emWin_header/LISTVIEW_Private.h	/^} LISTVIEW_ROW;$/;"	t	typeref:struct:__anon334
LISTVIEW_SF_AUTOSCROLLBAR_H	emwin/emWin_header/LISTVIEW.h	81;"	d
LISTVIEW_SF_AUTOSCROLLBAR_V	emwin/emWin_header/LISTVIEW.h	82;"	d
LISTVIEW_SORT	emwin/emWin_header/LISTVIEW_Private.h	/^} LISTVIEW_SORT;$/;"	t	typeref:struct:__anon336
LISTWHEEL_CI_SEL	emwin/emWin_header/LISTWHEEL.h	65;"	d
LISTWHEEL_CI_UNSEL	emwin/emWin_header/LISTWHEEL.h	64;"	d
LISTWHEEL_H	emwin/emWin_header/LISTWHEEL.h	46;"	d
LISTWHEEL_Handle	emwin/emWin_header/LISTWHEEL.h	/^typedef WM_HMEM LISTWHEEL_Handle;$/;"	t
LISTWHEEL_ID	emwin/emWin_header/WIDGET.h	110;"	d
LISTWHEEL_INIT_ID	emwin/emWin_header/LISTWHEEL_Private.h	112;"	d
LISTWHEEL_INIT_ID	emwin/emWin_header/LISTWHEEL_Private.h	114;"	d
LISTWHEEL_ITEM	emwin/emWin_header/LISTWHEEL_Private.h	/^} LISTWHEEL_ITEM;$/;"	t	typeref:struct:__anon351
LISTWHEEL_LOCK_H	emwin/emWin_header/LISTWHEEL_Private.h	119;"	d
LISTWHEEL_LOCK_H	emwin/emWin_header/LISTWHEEL_Private.h	121;"	d
LISTWHEEL_OBJ	emwin/emWin_header/LISTWHEEL_Private.h	/^} LISTWHEEL_OBJ;$/;"	t	typeref:struct:__anon353
LISTWHEEL_PRIVATE_H	emwin/emWin_header/LISTWHEEL_Private.h	46;"	d
LISTWHEEL_PROPS	emwin/emWin_header/LISTWHEEL_Private.h	/^} LISTWHEEL_PROPS;$/;"	t	typeref:struct:__anon352
LISTWHEEL_STATE_PRESSED	emwin/emWin_header/LISTWHEEL_Private.h	61;"	d
LIST_AddHead	component/lists/generic_list.c	/^list_status_t LIST_AddHead(list_handle_t list, list_element_handle_t element)$/;"	f
LIST_AddPrevElement	component/lists/generic_list.c	/^list_status_t LIST_AddPrevElement(list_element_handle_t element, list_element_handle_t newElement)$/;"	f
LIST_AddTail	component/lists/generic_list.c	/^list_status_t LIST_AddTail(list_handle_t list, list_element_handle_t element)$/;"	f
LIST_GetAvailableSize	component/lists/generic_list.c	/^uint32_t LIST_GetAvailableSize(list_handle_t list)$/;"	f
LIST_GetHead	component/lists/generic_list.c	/^list_element_handle_t LIST_GetHead(list_handle_t list)$/;"	f
LIST_GetList	component/lists/generic_list.c	/^list_handle_t LIST_GetList(list_element_handle_t element)$/;"	f
LIST_GetNext	component/lists/generic_list.c	/^list_element_handle_t LIST_GetNext(list_element_handle_t element)$/;"	f
LIST_GetPrev	component/lists/generic_list.c	/^list_element_handle_t LIST_GetPrev(list_element_handle_t element)$/;"	f
LIST_GetSize	component/lists/generic_list.c	/^uint32_t LIST_GetSize(list_handle_t list)$/;"	f
LIST_H	amazon-freertos/include/list.h	61;"	d
LIST_Init	component/lists/generic_list.c	/^void LIST_Init(list_handle_t list, uint32_t max)$/;"	f
LIST_RemoveElement	component/lists/generic_list.c	/^list_status_t LIST_RemoveElement(list_element_handle_t element)$/;"	f
LIST_RemoveHead	component/lists/generic_list.c	/^list_element_handle_t LIST_RemoveHead(list_handle_t list)$/;"	f
LIST_Scan	component/lists/generic_list.c	/^static list_status_t LIST_Scan(list_handle_t list, list_element_handle_t newElement)$/;"	f	file:
LITTLE_ENDIAN	lwip/src/include/lwip/arch.h	41;"	d
LL_IP4_MULTICAST_ADDR_0	lwip/src/include/lwip/prot/ethernet.h	111;"	d
LL_IP4_MULTICAST_ADDR_1	lwip/src/include/lwip/prot/ethernet.h	112;"	d
LL_IP4_MULTICAST_ADDR_2	lwip/src/include/lwip/prot/ethernet.h	113;"	d
LL_IP6_MULTICAST_ADDR_0	lwip/src/include/lwip/prot/ethernet.h	116;"	d
LL_IP6_MULTICAST_ADDR_1	lwip/src/include/lwip/prot/ethernet.h	117;"	d
LOAD	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t LOAD;                   \/*!< Offset: 0x004 (R\/W)  SysTick Reload Value Register *\/$/;"	m	struct:__anon123
LOAD	CMSIS/core_armv8mml.h	/^  __IOM uint32_t LOAD;                   \/*!< Offset: 0x004 (R\/W)  SysTick Reload Value Register *\/$/;"	m	struct:__anon20
LOAD	CMSIS/core_cm4.h	/^  __IOM uint32_t LOAD;                   \/*!< Offset: 0x004 (R\/W)  SysTick Reload Value Register *\/$/;"	m	struct:__anon42
LOCALHOSTLIST_ELEM_SIZE	lwip/src/include/lwip/dns.h	85;"	d
LOCAL_IP_ADDR	lwip/src/netif/ppp/multilink.c	83;"	d	file:
LOCK_TCPIP_CORE	lwip/src/include/lwip/tcpip.h	57;"	d
LOCK_TCPIP_CORE	lwip/src/include/lwip/tcpip.h	62;"	d
LOG2PHYS_X	emwin/emWin_header/GUIDRV_IST3088_Private.h	131;"	d
LOG2PHYS_X	emwin/emWin_header/GUIDRV_S1D13748_Private.h	135;"	d
LOG2PHYS_X	emwin/emWin_header/GUIDRV_SLin_Private.h	165;"	d
LOG2PHYS_X	emwin/emWin_header/GUIDRV_SPage_Private.h	134;"	d
LOG2PHYS_X	emwin/emWin_header/GUIDRV_SSD1926_Private.h	155;"	d
LOG2PHYS_X	emwin/emWin_header/GUIDRV_TemplateI_Private.h	123;"	d
LOG2PHYS_X_OS	emwin/emWin_header/GUIDRV_IST3088_Private.h	135;"	d
LOG2PHYS_X_OS	emwin/emWin_header/GUIDRV_S1D13748_Private.h	139;"	d
LOG2PHYS_X_OS	emwin/emWin_header/GUIDRV_SLin_Private.h	169;"	d
LOG2PHYS_X_OS	emwin/emWin_header/GUIDRV_SPage_Private.h	138;"	d
LOG2PHYS_X_OS	emwin/emWin_header/GUIDRV_SSD1926_Private.h	159;"	d
LOG2PHYS_X_OS	emwin/emWin_header/GUIDRV_TemplateI_Private.h	127;"	d
LOG2PHYS_X_OSX	emwin/emWin_header/GUIDRV_IST3088_Private.h	136;"	d
LOG2PHYS_X_OSX	emwin/emWin_header/GUIDRV_S1D13748_Private.h	140;"	d
LOG2PHYS_X_OSX	emwin/emWin_header/GUIDRV_SLin_Private.h	170;"	d
LOG2PHYS_X_OSX	emwin/emWin_header/GUIDRV_SPage_Private.h	139;"	d
LOG2PHYS_X_OSX	emwin/emWin_header/GUIDRV_SSD1926_Private.h	160;"	d
LOG2PHYS_X_OSX	emwin/emWin_header/GUIDRV_TemplateI_Private.h	128;"	d
LOG2PHYS_X_OSXY	emwin/emWin_header/GUIDRV_IST3088_Private.h	138;"	d
LOG2PHYS_X_OSXY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	142;"	d
LOG2PHYS_X_OSXY	emwin/emWin_header/GUIDRV_SLin_Private.h	172;"	d
LOG2PHYS_X_OSXY	emwin/emWin_header/GUIDRV_SPage_Private.h	141;"	d
LOG2PHYS_X_OSXY	emwin/emWin_header/GUIDRV_SSD1926_Private.h	162;"	d
LOG2PHYS_X_OSXY	emwin/emWin_header/GUIDRV_TemplateI_Private.h	130;"	d
LOG2PHYS_X_OSY	emwin/emWin_header/GUIDRV_IST3088_Private.h	137;"	d
LOG2PHYS_X_OSY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	141;"	d
LOG2PHYS_X_OSY	emwin/emWin_header/GUIDRV_SLin_Private.h	171;"	d
LOG2PHYS_X_OSY	emwin/emWin_header/GUIDRV_SPage_Private.h	140;"	d
LOG2PHYS_X_OSY	emwin/emWin_header/GUIDRV_SSD1926_Private.h	161;"	d
LOG2PHYS_X_OSY	emwin/emWin_header/GUIDRV_TemplateI_Private.h	129;"	d
LOG2PHYS_X_OX	emwin/emWin_header/GUIDRV_IST3088_Private.h	132;"	d
LOG2PHYS_X_OX	emwin/emWin_header/GUIDRV_S1D13748_Private.h	136;"	d
LOG2PHYS_X_OX	emwin/emWin_header/GUIDRV_SLin_Private.h	166;"	d
LOG2PHYS_X_OX	emwin/emWin_header/GUIDRV_SPage_Private.h	135;"	d
LOG2PHYS_X_OX	emwin/emWin_header/GUIDRV_SSD1926_Private.h	156;"	d
LOG2PHYS_X_OX	emwin/emWin_header/GUIDRV_TemplateI_Private.h	124;"	d
LOG2PHYS_X_OXY	emwin/emWin_header/GUIDRV_IST3088_Private.h	134;"	d
LOG2PHYS_X_OXY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	138;"	d
LOG2PHYS_X_OXY	emwin/emWin_header/GUIDRV_SLin_Private.h	168;"	d
LOG2PHYS_X_OXY	emwin/emWin_header/GUIDRV_SPage_Private.h	137;"	d
LOG2PHYS_X_OXY	emwin/emWin_header/GUIDRV_SSD1926_Private.h	158;"	d
LOG2PHYS_X_OXY	emwin/emWin_header/GUIDRV_TemplateI_Private.h	126;"	d
LOG2PHYS_X_OY	emwin/emWin_header/GUIDRV_IST3088_Private.h	133;"	d
LOG2PHYS_X_OY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	137;"	d
LOG2PHYS_X_OY	emwin/emWin_header/GUIDRV_SLin_Private.h	167;"	d
LOG2PHYS_X_OY	emwin/emWin_header/GUIDRV_SPage_Private.h	136;"	d
LOG2PHYS_X_OY	emwin/emWin_header/GUIDRV_SSD1926_Private.h	157;"	d
LOG2PHYS_X_OY	emwin/emWin_header/GUIDRV_TemplateI_Private.h	125;"	d
LOG2PHYS_Y	emwin/emWin_header/GUIDRV_IST3088_Private.h	140;"	d
LOG2PHYS_Y	emwin/emWin_header/GUIDRV_S1D13748_Private.h	144;"	d
LOG2PHYS_Y	emwin/emWin_header/GUIDRV_SLin_Private.h	174;"	d
LOG2PHYS_Y	emwin/emWin_header/GUIDRV_SPage_Private.h	143;"	d
LOG2PHYS_Y	emwin/emWin_header/GUIDRV_SSD1926_Private.h	164;"	d
LOG2PHYS_Y	emwin/emWin_header/GUIDRV_TemplateI_Private.h	132;"	d
LOG2PHYS_Y_OS	emwin/emWin_header/GUIDRV_IST3088_Private.h	144;"	d
LOG2PHYS_Y_OS	emwin/emWin_header/GUIDRV_S1D13748_Private.h	148;"	d
LOG2PHYS_Y_OS	emwin/emWin_header/GUIDRV_SLin_Private.h	178;"	d
LOG2PHYS_Y_OS	emwin/emWin_header/GUIDRV_SPage_Private.h	147;"	d
LOG2PHYS_Y_OS	emwin/emWin_header/GUIDRV_SSD1926_Private.h	168;"	d
LOG2PHYS_Y_OS	emwin/emWin_header/GUIDRV_TemplateI_Private.h	136;"	d
LOG2PHYS_Y_OSX	emwin/emWin_header/GUIDRV_IST3088_Private.h	145;"	d
LOG2PHYS_Y_OSX	emwin/emWin_header/GUIDRV_S1D13748_Private.h	149;"	d
LOG2PHYS_Y_OSX	emwin/emWin_header/GUIDRV_SLin_Private.h	179;"	d
LOG2PHYS_Y_OSX	emwin/emWin_header/GUIDRV_SPage_Private.h	148;"	d
LOG2PHYS_Y_OSX	emwin/emWin_header/GUIDRV_SSD1926_Private.h	169;"	d
LOG2PHYS_Y_OSX	emwin/emWin_header/GUIDRV_TemplateI_Private.h	137;"	d
LOG2PHYS_Y_OSXY	emwin/emWin_header/GUIDRV_IST3088_Private.h	147;"	d
LOG2PHYS_Y_OSXY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	151;"	d
LOG2PHYS_Y_OSXY	emwin/emWin_header/GUIDRV_SLin_Private.h	181;"	d
LOG2PHYS_Y_OSXY	emwin/emWin_header/GUIDRV_SPage_Private.h	150;"	d
LOG2PHYS_Y_OSXY	emwin/emWin_header/GUIDRV_SSD1926_Private.h	171;"	d
LOG2PHYS_Y_OSXY	emwin/emWin_header/GUIDRV_TemplateI_Private.h	139;"	d
LOG2PHYS_Y_OSY	emwin/emWin_header/GUIDRV_IST3088_Private.h	146;"	d
LOG2PHYS_Y_OSY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	150;"	d
LOG2PHYS_Y_OSY	emwin/emWin_header/GUIDRV_SLin_Private.h	180;"	d
LOG2PHYS_Y_OSY	emwin/emWin_header/GUIDRV_SPage_Private.h	149;"	d
LOG2PHYS_Y_OSY	emwin/emWin_header/GUIDRV_SSD1926_Private.h	170;"	d
LOG2PHYS_Y_OSY	emwin/emWin_header/GUIDRV_TemplateI_Private.h	138;"	d
LOG2PHYS_Y_OX	emwin/emWin_header/GUIDRV_IST3088_Private.h	141;"	d
LOG2PHYS_Y_OX	emwin/emWin_header/GUIDRV_S1D13748_Private.h	145;"	d
LOG2PHYS_Y_OX	emwin/emWin_header/GUIDRV_SLin_Private.h	175;"	d
LOG2PHYS_Y_OX	emwin/emWin_header/GUIDRV_SPage_Private.h	144;"	d
LOG2PHYS_Y_OX	emwin/emWin_header/GUIDRV_SSD1926_Private.h	165;"	d
LOG2PHYS_Y_OX	emwin/emWin_header/GUIDRV_TemplateI_Private.h	133;"	d
LOG2PHYS_Y_OXY	emwin/emWin_header/GUIDRV_IST3088_Private.h	143;"	d
LOG2PHYS_Y_OXY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	147;"	d
LOG2PHYS_Y_OXY	emwin/emWin_header/GUIDRV_SLin_Private.h	177;"	d
LOG2PHYS_Y_OXY	emwin/emWin_header/GUIDRV_SPage_Private.h	146;"	d
LOG2PHYS_Y_OXY	emwin/emWin_header/GUIDRV_SSD1926_Private.h	167;"	d
LOG2PHYS_Y_OXY	emwin/emWin_header/GUIDRV_TemplateI_Private.h	135;"	d
LOG2PHYS_Y_OY	emwin/emWin_header/GUIDRV_IST3088_Private.h	142;"	d
LOG2PHYS_Y_OY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	146;"	d
LOG2PHYS_Y_OY	emwin/emWin_header/GUIDRV_SLin_Private.h	176;"	d
LOG2PHYS_Y_OY	emwin/emWin_header/GUIDRV_SPage_Private.h	145;"	d
LOG2PHYS_Y_OY	emwin/emWin_header/GUIDRV_SSD1926_Private.h	166;"	d
LOG2PHYS_Y_OY	emwin/emWin_header/GUIDRV_TemplateI_Private.h	134;"	d
LOGIC_LED_OFF	board/board.h	161;"	d
LOGIC_LED_ON	board/board.h	160;"	d
LOG_ALERT	source/logging.h	/^    LOG_ALERT,\/\/  KERN_SOH "1"    \/* action must be taken immediately *\/$/;"	e	enum:__anon499
LOG_CRIT	source/logging.h	/^    LOG_CRIT,\/\/   KERN_SOH "2"    \/* critical conditions *\/$/;"	e	enum:__anon499
LOG_CRITICAL	lwip/src/include/netif/ppp/pppdebug.h	48;"	d
LOG_DEBUG	lwip/src/include/netif/ppp/pppdebug.h	54;"	d
LOG_DEBUG	source/logging.h	/^    LOG_DEBUG,\/\/  KERN_SOH "7"    \/* debug-level messages *\/$/;"	e	enum:__anon499
LOG_DETAIL	lwip/src/include/netif/ppp/pppdebug.h	53;"	d
LOG_EMERG	source/logging.h	/^    LOG_EMERG,\/\/  KERN_SOH "0"    \/* system is unusable *\/$/;"	e	enum:__anon499
LOG_ERR	lwip/src/include/netif/ppp/pppdebug.h	49;"	d
LOG_ERR	source/logging.h	/^    LOG_ERR,\/\/    KERN_SOH "3"    \/* error conditions *\/$/;"	e	enum:__anon499
LOG_INFO	lwip/src/include/netif/ppp/pppdebug.h	52;"	d
LOG_INFO	source/logging.h	/^    LOG_INFO,\/\/   KERN_SOH "6"    \/* informational *\/$/;"	e	enum:__anon499
LOG_NOTICE	lwip/src/include/netif/ppp/pppdebug.h	50;"	d
LOG_NOTICE	source/logging.h	/^    LOG_NOTICE,\/\/ KERN_SOH "5"    \/* normal but significant condition *\/$/;"	e	enum:__anon499
LOG_WARNING	lwip/src/include/netif/ppp/pppdebug.h	51;"	d
LOG_WARNING	source/logging.h	/^    LOG_WARNING,\/\/ KERN_SOH "4"    \/* warning conditions *\/$/;"	e	enum:__anon499
LOOPIF_ADDRINIT	lwip/src/core/netif.c	181;"	d	file:
LORA_CHIP_MODE	radio/sx1276-LoRa.h	/^}LORA_CHIP_MODE;$/;"	t	typeref:enum:__anon478
LORA_MODE_CAD	radio/sx1276-LoRa.h	/^    LORA_MODE_CAD                =   0x07,       \/\/channel activity dection mode$/;"	e	enum:__anon478
LORA_MODE_FSRX	radio/sx1276-LoRa.h	/^    LORA_MODE_FSRX               =   0x04,       \/\/frequency synthesis rx mode$/;"	e	enum:__anon478
LORA_MODE_FSTX	radio/sx1276-LoRa.h	/^    LORA_MODE_FSTX               =   0x02,       \/\/frequency synthesis tx mode$/;"	e	enum:__anon478
LORA_MODE_RXC	radio/sx1276-LoRa.h	/^    LORA_MODE_RXC                =   0x05,       \/\/receive continuous mode$/;"	e	enum:__anon478
LORA_MODE_RXS	radio/sx1276-LoRa.h	/^    LORA_MODE_RXS                =   0x06,       \/\/receive single mode$/;"	e	enum:__anon478
LORA_MODE_SLEEP	radio/sx1276-LoRa.h	/^    LORA_MODE_SLEEP              =   0x00,       \/\/sleep mode$/;"	e	enum:__anon478
LORA_MODE_STDBY	radio/sx1276-LoRa.h	/^    LORA_MODE_STDBY              =   0x01,       \/\/standby mode$/;"	e	enum:__anon478
LORA_MODE_TX	radio/sx1276-LoRa.h	/^    LORA_MODE_TX                 =   0x03,       \/\/transmit mode$/;"	e	enum:__anon478
LORA_REG	radio/sx1276-LoRa.h	/^	LORA_REG                     =   0x00,       \/\/Access LoRa registers page 0x0D: 0x3F$/;"	e	enum:__anon479
LOWERUP	lwip/src/netif/ppp/chap-new.c	77;"	d	file:
LOWPAN6_MAX_PAYLOAD	lwip/src/netif/lowpan6.c	104;"	d	file:
LOWPAN6_TMR_INTERVAL	lwip/src/include/netif/lowpan6.h	60;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7053;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7057;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7075;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7081;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7090;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7093;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7111;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7117;"	d
LOW_OPTIMIZATION_ENTER	CMSIS/arm_math.h	7123;"	d
LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7062;"	d
LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7065;"	d
LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7076;"	d
LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7083;"	d
LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7097;"	d
LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7112;"	d
LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7118;"	d
LOW_OPTIMIZATION_EXIT	CMSIS/arm_math.h	7124;"	d
LPBASE	device/LPC54018.h	/^  __IO uint32_t LPBASE;                            \/**< Lower Panel Frame Base Address register, offset: 0x14 *\/$/;"	m	struct:__anon165
LPC54018_SERIES	device/fsl_device_registers.h	19;"	d
LPC54018_SPI_Get_Data	source/main.c	/^void LPC54018_SPI_Get_Data(unsigned char *RxBuffer, unsigned int num)$/;"	f
LPC54018_SPI_Send_Data	source/main.c	/^void LPC54018_SPI_Send_Data(unsigned char *TxBuffer, unsigned int num)$/;"	f
LPCPF_BETA	codec2/quantise.h	54;"	d
LPCPF_GAMMA	codec2/quantise.h	53;"	d
LPCURR	device/LPC54018.h	/^  __I  uint32_t LPCURR;                            \/**< Lower Panel Current Address Value register, offset: 0x30 *\/$/;"	m	struct:__anon165
LPC_CONTROLLER_ENDPOINT_LIST_ARRAY	usb/device/source/lpcip3511/usb_device_lpcip3511.c	170;"	d	file:
LPC_CONTROLLER_ENDPOINT_LIST_ARRAY	usb/device/source/lpcip3511/usb_device_lpcip3511.c	180;"	d	file:
LPC_MAX_N	codec2/lpc.c	28;"	d	file:
LPC_MAX_ORDER	codec2/lpc.h	31;"	d
LPC_ORD	codec2/defines.h	51;"	d
LPC_ORD_LOW	codec2/defines.h	52;"	d
LPM	device/LPC54018.h	/^  __IO uint32_t LPM;                               \/**< USB Link Power Management register, offset: 0x10 *\/$/;"	m	struct:__anon187
LPM	device/LPC54018.h	/^  __IO uint32_t LPM;                               \/**< USB Link Power Management register, offset: 0x10 *\/$/;"	m	struct:__anon189
LPSI_CLOCKS	drivers/fsl_clock.h	190;"	d
LPUART_CLOCKS	drivers/fsl_clock.h	177;"	d
LQR_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	284;"	d
LSPDT_ALL	codec2/quantise.h	47;"	d
LSPDT_HIGH	codec2/quantise.h	49;"	d
LSPDT_LOW	codec2/quantise.h	48;"	d
LSPD_SCALAR_INDEXES	codec2/quantise.h	42;"	d
LSP_DELTA1	codec2/quantise.c	46;"	d	file:
LSP_DIFF_FREQ_INDEXES	codec2/quantise.h	44;"	d
LSP_DIFF_TIME_BITS	codec2/quantise.h	45;"	d
LSP_PRED_VQ_INDEXES	codec2/quantise.h	43;"	d
LSP_SCALAR_INDEXES	codec2/quantise.h	41;"	d
LSR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t LSR;                    \/*!< Offset: 0xFB4 (R  )  Lock Status Register *\/$/;"	m	struct:__anon23
LSR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t LSR;                    \/*!< Offset: 0xFB4 (R\/ )  ITM Lock Status Register *\/$/;"	m	struct:__anon21
LSR	CMSIS/core_cm4.h	/^  __IM  uint32_t LSR;                    \/*!< Offset: 0xFB4 (R\/ )  ITM Lock Status Register *\/$/;"	m	struct:__anon43
LSR	device/LPC54018.h	/^  __I  uint32_t LSR;                               \/**< Line Status Register, offset: 0x14 *\/$/;"	m	struct:__anon179
LSUCNT	CMSIS/core_armv8mml.h	/^  __IOM uint32_t LSUCNT;                 \/*!< Offset: 0x014 (R\/W)  LSU Count Register *\/$/;"	m	struct:__anon23
LSUCNT	CMSIS/core_cm4.h	/^  __IOM uint32_t LSUCNT;                 \/*!< Offset: 0x014 (R\/W)  LSU Count Register *\/$/;"	m	struct:__anon45
LWIPAPPFILES	lwip/src/Filelists.mk	/^LWIPAPPFILES=$(SNMPFILES) \\$/;"	m
LWIPERFFILES	lwip/src/Filelists.mk	/^LWIPERFFILES=$(LWIPDIR)\/apps\/lwiperf\/lwiperf.c$/;"	m
LWIPNOAPPSFILES	lwip/src/Filelists.mk	/^LWIPNOAPPSFILES=$(COREFILES) \\$/;"	m
LWIP_6LOWPAN_802154_HW_CRC	lwip/src/include/netif/lowpan6_opts.h	72;"	d
LWIP_6LOWPAN_CALC_CRC	lwip/src/include/netif/lowpan6_opts.h	80;"	d
LWIP_6LOWPAN_CONTEXTS	lwip/src/netif/lowpan6.c	110;"	d	file:
LWIP_6LOWPAN_CONTEXTS	lwip/src/netif/lowpan6.c	112;"	d	file:
LWIP_6LOWPAN_DO_CALC_CRC	lwip/src/netif/lowpan6.c	69;"	d	file:
LWIP_6LOWPAN_DO_CALC_CRC	lwip/src/netif/lowpan6.c	71;"	d	file:
LWIP_6LOWPAN_INFER_SHORT_ADDRESS	lwip/src/include/netif/lowpan6_opts.h	57;"	d
LWIP_6LOWPAN_IPHC	lwip/src/include/netif/lowpan6_opts.h	64;"	d
LWIP_6LOWPAN_NUM_CONTEXTS	lwip/src/include/netif/lowpan6_opts.h	50;"	d
LWIP_ALIGNMENT_CAST	lwip/src/include/lwip/arch.h	245;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	lwip/src/include/lwip/opt.h	389;"	d
LWIP_ALTCP	lwip/src/include/lwip/opt.h	1495;"	d
LWIP_ALTCP_TLS	lwip/src/include/lwip/opt.h	1504;"	d
LWIP_API_MSG_SEM	lwip/src/include/lwip/priv/api_msg.h	158;"	d
LWIP_API_MSG_SEM	lwip/src/include/lwip/priv/api_msg.h	160;"	d
LWIP_ARP	lwip/src/include/lwip/opt.h	629;"	d
LWIP_ARP_FILTER_NETIF	lwip/src/include/netif/ethernet.h	63;"	d
LWIP_ARRAYSIZE	lwip/src/include/lwip/def.h	69;"	d
LWIP_ASSERT	lwip/src/include/lwip/debug.h	116;"	d
LWIP_ASSERT	lwip/src/include/lwip/debug.h	119;"	d
LWIP_ASSERT_CORE_LOCKED	lwip/src/include/lwip/opt.h	227;"	d
LWIP_AUTOIP	lwip/src/include/lwip/opt.h	982;"	d
LWIP_AUTOIP	lwip/src/include/lwip/opt.h	986;"	d
LWIP_AUTOIP	lwip/src/include/lwip/opt.h	987;"	d
LWIP_AUTOIP_CREATE_SEED_ADDR	lwip/src/core/ipv4/autoip.c	88;"	d	file:
LWIP_AUTOIP_RAND	lwip/src/core/ipv4/autoip.c	76;"	d	file:
LWIP_BROADCAST_PING	lwip/src/include/lwip/opt.h	864;"	d
LWIP_CALLBACK_API	lwip/src/include/lwip/opt.h	1450;"	d
LWIP_CALLBACK_API	lwip/src/include/lwip/opt.h	1456;"	d
LWIP_CHECKSUM_CTRL_PER_NETIF	lwip/src/include/lwip/opt.h	2275;"	d
LWIP_CHECKSUM_ON_COPY	lwip/src/include/lwip/opt.h	2353;"	d
LWIP_CHKSUM	lwip/src/core/inet_chksum.c	57;"	d	file:
LWIP_CHKSUM_ALGORITHM	lwip/src/core/inet_chksum.c	59;"	d	file:
LWIP_CHKSUM_ALGORITHM	lwip/src/core/inet_chksum.c	65;"	d	file:
LWIP_CHKSUM_COPY	lwip/src/include/lwip/inet_chksum.h	59;"	d
LWIP_CHKSUM_COPY_ALGORITHM	lwip/src/include/lwip/inet_chksum.h	61;"	d
LWIP_CHKSUM_COPY_ALGORITHM	lwip/src/include/lwip/inet_chksum.h	64;"	d
LWIP_CHKSUM_COPY_ALGORITHM	lwip/src/include/lwip/inet_chksum.h	67;"	d
LWIP_COMPAT_MUTEX	lwip/src/include/lwip/sys.h	108;"	d
LWIP_COMPAT_SOCKETS	lwip/src/include/lwip/opt.h	1952;"	d
LWIP_CONST_CAST	lwip/src/include/lwip/arch.h	240;"	d
LWIP_DBG_FRESH	lwip/src/include/lwip/debug.h	87;"	d
LWIP_DBG_HALT	lwip/src/include/lwip/debug.h	89;"	d
LWIP_DBG_LEVEL_ALL	lwip/src/include/lwip/debug.h	53;"	d
LWIP_DBG_LEVEL_OFF	lwip/src/include/lwip/debug.h	66;"	d
LWIP_DBG_LEVEL_SERIOUS	lwip/src/include/lwip/debug.h	57;"	d
LWIP_DBG_LEVEL_SEVERE	lwip/src/include/lwip/debug.h	59;"	d
LWIP_DBG_LEVEL_WARNING	lwip/src/include/lwip/debug.h	55;"	d
LWIP_DBG_MASK_LEVEL	lwip/src/include/lwip/debug.h	64;"	d
LWIP_DBG_MIN_LEVEL	lwip/src/include/lwip/opt.h	3244;"	d
LWIP_DBG_OFF	lwip/src/include/lwip/debug.h	74;"	d
LWIP_DBG_ON	lwip/src/include/lwip/debug.h	72;"	d
LWIP_DBG_STATE	lwip/src/include/lwip/debug.h	85;"	d
LWIP_DBG_TRACE	lwip/src/include/lwip/debug.h	83;"	d
LWIP_DBG_TYPES_ON	lwip/src/include/lwip/opt.h	3253;"	d
LWIP_DEBUG	lwip/src/include/lwip/debug.h	140;"	d
LWIP_DEBUG	lwip/src/include/lwip/debug.h	141;"	d
LWIP_DEBUG	source/lwipopts.h	257;"	d
LWIP_DEBUGF	lwip/src/include/lwip/debug.h	145;"	d
LWIP_DEBUGF	lwip/src/include/lwip/debug.h	158;"	d
LWIP_DEBUG_TIMERNAMES	lwip/src/include/lwip/timeouts.h	53;"	d
LWIP_DEBUG_TIMERNAMES	lwip/src/include/lwip/timeouts.h	55;"	d
LWIP_DECLARE_MEMORY_ALIGNED	lwip/src/include/lwip/arch.h	271;"	d
LWIP_DHCP	lwip/src/include/lwip/opt.h	918;"	d
LWIP_DHCP	lwip/src/include/lwip/opt.h	922;"	d
LWIP_DHCP	lwip/src/include/lwip/opt.h	923;"	d
LWIP_DHCP	source/lwipopts.h	172;"	d
LWIP_DHCP6_GET_NTP_SRV	lwip/src/include/lwip/opt.h	2700;"	d
LWIP_DHCP6_MAX_DNS_SERVERS	lwip/src/include/lwip/opt.h	2716;"	d
LWIP_DHCP6_MAX_NTP_SERVERS	lwip/src/include/lwip/opt.h	2707;"	d
LWIP_DHCP6_PROVIDE_DNS_SERVERS	lwip/src/core/ipv6/dhcp6.c	82;"	d	file:
LWIP_DHCP6_PROVIDE_DNS_SERVERS	lwip/src/core/ipv6/dhcp6.c	84;"	d	file:
LWIP_DHCP6_PROVIDE_DNS_SERVERS	lwip/src/core/ipv6/dhcp6.c	87;"	d	file:
LWIP_DHCP_AUTOIP_COOP	lwip/src/include/lwip/opt.h	995;"	d
LWIP_DHCP_AUTOIP_COOP_TRIES	lwip/src/include/lwip/opt.h	1006;"	d
LWIP_DHCP_BOOTP_FILE	lwip/src/include/lwip/opt.h	937;"	d
LWIP_DHCP_GET_NTP_SRV	lwip/src/include/lwip/opt.h	946;"	d
LWIP_DHCP_MAX_DNS_SERVERS	lwip/src/include/lwip/opt.h	962;"	d
LWIP_DHCP_MAX_NTP_SERVERS	lwip/src/include/lwip/opt.h	953;"	d
LWIP_DHCP_PROVIDE_DNS_SERVERS	lwip/src/core/ipv4/dhcp.c	122;"	d	file:
LWIP_DHCP_PROVIDE_DNS_SERVERS	lwip/src/core/ipv4/dhcp.c	124;"	d	file:
LWIP_DHCP_PROVIDE_DNS_SERVERS	lwip/src/core/ipv4/dhcp.c	127;"	d	file:
LWIP_DISABLE_MEMP_SANITY_CHECKS	lwip/src/core/init.c	269;"	d	file:
LWIP_DISABLE_TCP_SANITY_CHECKS	lwip/src/core/init.c	266;"	d	file:
LWIP_DNS	lwip/src/include/lwip/opt.h	1095;"	d
LWIP_DNS_ADDRTYPE_ARG	lwip/src/core/dns.c	166;"	d	file:
LWIP_DNS_ADDRTYPE_ARG	lwip/src/core/dns.c	176;"	d	file:
LWIP_DNS_ADDRTYPE_ARG_OR_ZERO	lwip/src/core/dns.c	167;"	d	file:
LWIP_DNS_ADDRTYPE_ARG_OR_ZERO	lwip/src/core/dns.c	177;"	d	file:
LWIP_DNS_ADDRTYPE_DEFAULT	lwip/src/include/lwip/dns.h	63;"	d
LWIP_DNS_ADDRTYPE_DEFAULT	lwip/src/include/lwip/dns.h	66;"	d
LWIP_DNS_ADDRTYPE_DEFAULT	lwip/src/include/lwip/dns.h	68;"	d
LWIP_DNS_ADDRTYPE_IPV4	lwip/src/include/lwip/dns.h	57;"	d
LWIP_DNS_ADDRTYPE_IPV4_IPV6	lwip/src/include/lwip/dns.h	59;"	d
LWIP_DNS_ADDRTYPE_IPV6	lwip/src/include/lwip/dns.h	58;"	d
LWIP_DNS_ADDRTYPE_IPV6_IPV4	lwip/src/include/lwip/dns.h	60;"	d
LWIP_DNS_ADDRTYPE_IS_IPV6	lwip/src/core/dns.c	164;"	d	file:
LWIP_DNS_ADDRTYPE_IS_IPV6	lwip/src/core/dns.c	171;"	d	file:
LWIP_DNS_ADDRTYPE_IS_IPV6	lwip/src/core/dns.c	173;"	d	file:
LWIP_DNS_ADDRTYPE_MATCH_IP	lwip/src/core/dns.c	165;"	d	file:
LWIP_DNS_ADDRTYPE_MATCH_IP	lwip/src/core/dns.c	175;"	d	file:
LWIP_DNS_API_DECLARE_H_ERRNO	lwip/src/include/lwip/netdb.h	51;"	d
LWIP_DNS_API_DECLARE_STRUCTS	lwip/src/include/lwip/netdb.h	63;"	d
LWIP_DNS_API_DEFINE_ERRORS	lwip/src/include/lwip/netdb.h	55;"	d
LWIP_DNS_API_DEFINE_FLAGS	lwip/src/include/lwip/netdb.h	59;"	d
LWIP_DNS_API_HOSTENT_STORAGE	lwip/src/api/netdb.c	67;"	d	file:
LWIP_DNS_ISMDNS_ARG	lwip/src/core/dns.c	182;"	d	file:
LWIP_DNS_ISMDNS_ARG	lwip/src/core/dns.c	184;"	d	file:
LWIP_DNS_SECURE	lwip/src/include/lwip/opt.h	1131;"	d
LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING	lwip/src/include/lwip/opt.h	1136;"	d
LWIP_DNS_SECURE_RAND_SRC_PORT	lwip/src/include/lwip/opt.h	1137;"	d
LWIP_DNS_SECURE_RAND_XID	lwip/src/include/lwip/opt.h	1135;"	d
LWIP_DNS_SET_ADDRTYPE	lwip/src/core/dns.c	168;"	d	file:
LWIP_DNS_SET_ADDRTYPE	lwip/src/core/dns.c	178;"	d	file:
LWIP_DNS_SUPPORT_MDNS_QUERIES	lwip/src/include/lwip/opt.h	1160;"	d
LWIP_ERROR	lwip/src/include/lwip/debug.h	132;"	d
LWIP_ETHERNET	lwip/src/include/lwip/opt.h	683;"	d
LWIP_EVENT_ACCEPT	lwip/src/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	lwip/src/include/lwip/opt.h	1449;"	d
LWIP_EVENT_API	lwip/src/include/lwip/opt.h	1453;"	d
LWIP_EVENT_CONNECTED	lwip/src/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	lwip/src/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	lwip/src/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	lwip/src/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	lwip/src/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_FIONREAD_LINUXMODE	lwip/src/include/lwip/opt.h	2061;"	d
LWIP_HAVE_INT64	lwip/src/include/lwip/arch.h	123;"	d
LWIP_HAVE_LOOPIF	lwip/src/include/lwip/opt.h	1688;"	d
LWIP_HDR_ALTCP_H	lwip/src/include/lwip/altcp.h	41;"	d
LWIP_HDR_ALTCP_PRIV_H	lwip/src/include/lwip/priv/altcp_priv.h	42;"	d
LWIP_HDR_ALTCP_TCP_H	lwip/src/include/lwip/altcp_tcp.h	44;"	d
LWIP_HDR_ALTCP_TLS_H	lwip/src/include/lwip/altcp_tls.h	44;"	d
LWIP_HDR_API_H	lwip/src/include/lwip/api.h	38;"	d
LWIP_HDR_API_MSG_H	lwip/src/include/lwip/priv/api_msg.h	38;"	d
LWIP_HDR_ARCH_H	lwip/src/include/lwip/arch.h	38;"	d
LWIP_HDR_AUTOIP_H	lwip/src/include/lwip/autoip.h	42;"	d
LWIP_HDR_DEBUG_H	lwip/src/include/lwip/debug.h	38;"	d
LWIP_HDR_DEF_H	lwip/src/include/lwip/def.h	49;"	d
LWIP_HDR_DHCP_H	lwip/src/include/lwip/dhcp.h	39;"	d
LWIP_HDR_DNS_H	lwip/src/include/lwip/dns.h	40;"	d
LWIP_HDR_ERRNO_H	lwip/src/include/lwip/errno.h	38;"	d
LWIP_HDR_ERR_H	lwip/src/include/lwip/err.h	37;"	d
LWIP_HDR_ETHIP6_H	lwip/src/include/lwip/ethip6.h	43;"	d
LWIP_HDR_ICMP6_H	lwip/src/include/lwip/icmp6.h	42;"	d
LWIP_HDR_ICMP_H	lwip/src/include/lwip/icmp.h	38;"	d
LWIP_HDR_IF_H	lwip/src/include/lwip/if_api.h	40;"	d
LWIP_HDR_IGMP_H	lwip/src/include/lwip/igmp.h	41;"	d
LWIP_HDR_INET_CHKSUM_H	lwip/src/include/lwip/inet_chksum.h	38;"	d
LWIP_HDR_INET_H	lwip/src/include/lwip/inet.h	41;"	d
LWIP_HDR_INIT_H	lwip/src/include/lwip/init.h	38;"	d
LWIP_HDR_IP4_ADDR_H	lwip/src/include/lwip/ip4_addr.h	38;"	d
LWIP_HDR_IP4_FRAG_H	lwip/src/include/lwip/ip4_frag.h	39;"	d
LWIP_HDR_IP4_H	lwip/src/include/lwip/ip4.h	38;"	d
LWIP_HDR_IP6_ADDR_H	lwip/src/include/lwip/ip6_addr.h	43;"	d
LWIP_HDR_IP6_DHCP6_H	lwip/src/include/lwip/dhcp6.h	41;"	d
LWIP_HDR_IP6_FRAG_H	lwip/src/include/lwip/ip6_frag.h	42;"	d
LWIP_HDR_IP6_H	lwip/src/include/lwip/ip6.h	42;"	d
LWIP_HDR_IP6_ZONE_H	lwip/src/include/lwip/ip6_zone.h	86;"	d
LWIP_HDR_IP_ADDR_H	lwip/src/include/lwip/ip_addr.h	38;"	d
LWIP_HDR_IP_H	lwip/src/include/lwip/ip.h	38;"	d
LWIP_HDR_LOWPAN6_BLE_H	lwip/src/include/netif/lowpan6_ble.h	40;"	d
LWIP_HDR_LOWPAN6_COMMON_H	lwip/src/include/netif/lowpan6_common.h	43;"	d
LWIP_HDR_LOWPAN6_H	lwip/src/include/netif/lowpan6.h	43;"	d
LWIP_HDR_LOWPAN6_OPTS_H	lwip/src/include/netif/lowpan6_opts.h	42;"	d
LWIP_HDR_MEMP_H	lwip/src/include/lwip/memp.h	39;"	d
LWIP_HDR_MEMP_PRIV_H	lwip/src/include/lwip/priv/memp_priv.h	39;"	d
LWIP_HDR_MEM_H	lwip/src/include/lwip/mem.h	38;"	d
LWIP_HDR_MEM_PRIV_H	lwip/src/include/lwip/priv/mem_priv.h	39;"	d
LWIP_HDR_MLD6_H	lwip/src/include/lwip/mld6.h	44;"	d
LWIP_HDR_ND6_H	lwip/src/include/lwip/nd6.h	45;"	d
LWIP_HDR_ND6_PRIV_H	lwip/src/include/lwip/priv/nd6_priv.h	45;"	d
LWIP_HDR_NETBUF_H	lwip/src/include/lwip/netbuf.h	38;"	d
LWIP_HDR_NETDB_H	lwip/src/include/lwip/netdb.h	35;"	d
LWIP_HDR_NETIFAPI_H	lwip/src/include/lwip/netifapi.h	33;"	d
LWIP_HDR_NETIF_BRIDGEIF_H	lwip/src/include/netif/bridgeif.h	38;"	d
LWIP_HDR_NETIF_BRIDGEIF_OPTS_H	lwip/src/include/netif/bridgeif_opts.h	39;"	d
LWIP_HDR_NETIF_ETHARP_H	lwip/src/include/lwip/etharp.h	43;"	d
LWIP_HDR_NETIF_ETHERNET_H	lwip/src/include/netif/ethernet.h	42;"	d
LWIP_HDR_NETIF_H	lwip/src/include/lwip/netif.h	38;"	d
LWIP_HDR_NETIF_IEEE802154_H	lwip/src/include/netif/ieee802154.h	38;"	d
LWIP_HDR_NETIF_SLIPIF_H	lwip/src/include/netif/slipif.h	41;"	d
LWIP_HDR_OPT_H	lwip/src/include/lwip/opt.h	45;"	d
LWIP_HDR_PBUF_H	lwip/src/include/lwip/pbuf.h	39;"	d
LWIP_HDR_PPP_IMPL_H	lwip/src/include/netif/ppp/ppp_impl.h	34;"	d
LWIP_HDR_PROT_AUTOIP_H	lwip/src/include/lwip/prot/autoip.h	41;"	d
LWIP_HDR_PROT_DHCP6_H	lwip/src/include/lwip/prot/dhcp6.h	38;"	d
LWIP_HDR_PROT_DHCP_H	lwip/src/include/lwip/prot/dhcp.h	39;"	d
LWIP_HDR_PROT_DNS_H	lwip/src/include/lwip/prot/dns.h	41;"	d
LWIP_HDR_PROT_ETHARP_H	lwip/src/include/lwip/prot/etharp.h	38;"	d
LWIP_HDR_PROT_ETHERNET_H	lwip/src/include/lwip/prot/ethernet.h	38;"	d
LWIP_HDR_PROT_IANA_H	lwip/src/include/lwip/prot/iana.h	42;"	d
LWIP_HDR_PROT_ICMP6_H	lwip/src/include/lwip/prot/icmp6.h	38;"	d
LWIP_HDR_PROT_ICMP_H	lwip/src/include/lwip/prot/icmp.h	38;"	d
LWIP_HDR_PROT_IEEE_H	lwip/src/include/lwip/prot/ieee.h	42;"	d
LWIP_HDR_PROT_IGMP_H	lwip/src/include/lwip/prot/igmp.h	38;"	d
LWIP_HDR_PROT_IP4_H	lwip/src/include/lwip/prot/ip4.h	38;"	d
LWIP_HDR_PROT_IP6_H	lwip/src/include/lwip/prot/ip6.h	38;"	d
LWIP_HDR_PROT_IP_H	lwip/src/include/lwip/prot/ip.h	38;"	d
LWIP_HDR_PROT_MLD6_H	lwip/src/include/lwip/prot/mld6.h	38;"	d
LWIP_HDR_PROT_ND6_H	lwip/src/include/lwip/prot/nd6.h	38;"	d
LWIP_HDR_PROT_TCP_H	lwip/src/include/lwip/prot/tcp.h	38;"	d
LWIP_HDR_PROT_UDP_H	lwip/src/include/lwip/prot/udp.h	38;"	d
LWIP_HDR_RAW_H	lwip/src/include/lwip/raw.h	39;"	d
LWIP_HDR_RAW_PRIV_H	lwip/src/include/lwip/priv/raw_priv.h	38;"	d
LWIP_HDR_SNMP_H	lwip/src/include/lwip/snmp.h	38;"	d
LWIP_HDR_SOCKETS_H	lwip/src/include/lwip/sockets.h	40;"	d
LWIP_HDR_SOCKETS_PRIV_H	lwip/src/include/lwip/priv/sockets_priv.h	38;"	d
LWIP_HDR_STATS_H	lwip/src/include/lwip/stats.h	38;"	d
LWIP_HDR_SYS_H	lwip/src/include/lwip/sys.h	38;"	d
LWIP_HDR_TCPBASE_H	lwip/src/include/lwip/tcpbase.h	39;"	d
LWIP_HDR_TCPIP_H	lwip/src/include/lwip/tcpip.h	38;"	d
LWIP_HDR_TCPIP_PRIV_H	lwip/src/include/lwip/priv/tcpip_priv.h	38;"	d
LWIP_HDR_TCP_H	lwip/src/include/lwip/tcp.h	39;"	d
LWIP_HDR_TCP_PRIV_H	lwip/src/include/lwip/priv/tcp_priv.h	38;"	d
LWIP_HDR_TIMEOUTS_H	lwip/src/include/lwip/timeouts.h	39;"	d
LWIP_HDR_UDP_H	lwip/src/include/lwip/udp.h	39;"	d
LWIP_HDR_ZEPIF_H	lwip/src/include/netif/zepif.h	41;"	d
LWIP_HOOK_DHCP6_APPEND_OPTIONS	lwip/src/core/ipv6/dhcp6.c	74;"	d	file:
LWIP_HOOK_DHCP6_APPEND_OPTIONS	lwip/src/include/lwip/opt.h	3152;"	d
LWIP_HOOK_DHCP6_PARSE_OPTION	lwip/src/core/ipv6/dhcp6.c	77;"	d	file:
LWIP_HOOK_DHCP_APPEND_OPTIONS	lwip/src/core/ipv4/dhcp.c	89;"	d	file:
LWIP_HOOK_DHCP_APPEND_OPTIONS	lwip/src/include/lwip/opt.h	3096;"	d
LWIP_HOOK_DHCP_PARSE_OPTION	lwip/src/core/ipv4/dhcp.c	92;"	d	file:
LWIP_HOOK_DHCP_PARSE_OPTION	lwip/src/include/lwip/opt.h	3124;"	d
LWIP_HOOK_ETHARP_GET_GW	lwip/src/include/lwip/opt.h	2937;"	d
LWIP_HOOK_FILENAME	lwip/src/include/lwip/opt.h	2741;"	d
LWIP_HOOK_IP4_CANFORWARD	lwip/src/include/lwip/opt.h	2915;"	d
LWIP_HOOK_IP4_INPUT	lwip/src/include/lwip/opt.h	2861;"	d
LWIP_HOOK_IP4_ROUTE	lwip/src/include/lwip/opt.h	2877;"	d
LWIP_HOOK_IP4_ROUTE_SRC	lwip/src/include/lwip/opt.h	2894;"	d
LWIP_HOOK_IP6_INPUT	lwip/src/include/lwip/opt.h	2956;"	d
LWIP_HOOK_IP6_ROUTE	lwip/src/include/lwip/opt.h	2973;"	d
LWIP_HOOK_MEMP_AVAILABLE	lwip/src/include/lwip/opt.h	3048;"	d
LWIP_HOOK_ND6_GET_GW	lwip/src/include/lwip/opt.h	2995;"	d
LWIP_HOOK_NETCONN_EXTERNAL_RESOLVE	lwip/src/include/lwip/opt.h	3221;"	d
LWIP_HOOK_SOCKETS_GETSOCKOPT	lwip/src/include/lwip/opt.h	3198;"	d
LWIP_HOOK_SOCKETS_SETSOCKOPT	lwip/src/include/lwip/opt.h	3175;"	d
LWIP_HOOK_TCP_INPACKET_PCB	lwip/src/include/lwip/opt.h	2796;"	d
LWIP_HOOK_TCP_ISN	lwip/src/include/lwip/opt.h	2766;"	d
LWIP_HOOK_TCP_OUT_ADD_TCPOPTS	lwip/src/include/lwip/opt.h	2842;"	d
LWIP_HOOK_TCP_OUT_TCPOPT_LENGTH	lwip/src/include/lwip/opt.h	2818;"	d
LWIP_HOOK_UNKNOWN_ETH_PROTOCOL	lwip/src/include/lwip/opt.h	3067;"	d
LWIP_HOOK_VLAN_CHECK	lwip/src/include/lwip/opt.h	3013;"	d
LWIP_HOOK_VLAN_SET	lwip/src/include/lwip/opt.h	3037;"	d
LWIP_IANA_HWTYPE_ETHERNET	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_HWTYPE_ETHERNET = 1$/;"	e	enum:lwip_iana_hwtype
LWIP_IANA_PORT_DHCP_CLIENT	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_DHCP_CLIENT = 68,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_DHCP_SERVER	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_DHCP_SERVER = 67,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_HTTP	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_HTTP        = 80,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_HTTPS	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_HTTPS       = 443,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_MDNS	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_MDNS        = 5353,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_MQTT	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_MQTT        = 1883,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_NETBIOS	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_NETBIOS     = 137,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_SECURE_MQTT	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_SECURE_MQTT = 8883$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_SMTP	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_SMTP        = 25,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_SMTPS	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_SMTPS       = 465,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_SNMP	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_SNMP        = 161,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_SNMP_TRAP	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_SNMP_TRAP   = 162,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_SNTP	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_SNTP        = 123,$/;"	e	enum:lwip_iana_port_number
LWIP_IANA_PORT_TFTP	lwip/src/include/lwip/prot/iana.h	/^  LWIP_IANA_PORT_TFTP        = 69,$/;"	e	enum:lwip_iana_port_number
LWIP_ICMP	lwip/src/include/lwip/opt.h	850;"	d
LWIP_ICMP	source/lwipopts.h	163;"	d
LWIP_ICMP6	lwip/src/include/lwip/opt.h	2489;"	d
LWIP_ICMP6_DATASIZE	lwip/src/core/ipv6/icmp6.c	61;"	d	file:
LWIP_ICMP6_DATASIZE	lwip/src/core/ipv6/icmp6.c	62;"	d	file:
LWIP_ICMP6_DATASIZE	lwip/src/include/lwip/opt.h	2497;"	d
LWIP_ICMP6_HL	lwip/src/include/lwip/opt.h	2504;"	d
LWIP_ICMP_ECHO_CHECK_INPUT_PBUF_LEN	lwip/src/core/ipv4/icmp.c	62;"	d	file:
LWIP_IGMP	lwip/src/include/lwip/opt.h	1070;"	d
LWIP_IGMP	lwip/src/include/lwip/opt.h	1073;"	d
LWIP_IGMP	lwip/src/include/lwip/opt.h	1074;"	d
LWIP_INCLUDED_POLARSSL_ARC4	lwip/src/include/netif/ppp/ppp_opts.h	579;"	d
LWIP_INCLUDED_POLARSSL_ARC4	lwip/src/include/netif/ppp/ppp_opts.h	600;"	d
LWIP_INCLUDED_POLARSSL_ARC4_H	lwip/src/include/netif/ppp/polarssl/arc4.h	40;"	d
LWIP_INCLUDED_POLARSSL_DES	lwip/src/include/netif/ppp/ppp_opts.h	574;"	d
LWIP_INCLUDED_POLARSSL_DES	lwip/src/include/netif/ppp/ppp_opts.h	597;"	d
LWIP_INCLUDED_POLARSSL_DES_H	lwip/src/include/netif/ppp/polarssl/des.h	40;"	d
LWIP_INCLUDED_POLARSSL_MD4	lwip/src/include/netif/ppp/ppp_opts.h	570;"	d
LWIP_INCLUDED_POLARSSL_MD4	lwip/src/include/netif/ppp/ppp_opts.h	588;"	d
LWIP_INCLUDED_POLARSSL_MD4_H	lwip/src/include/netif/ppp/polarssl/md4.h	40;"	d
LWIP_INCLUDED_POLARSSL_MD5	lwip/src/include/netif/ppp/ppp_opts.h	564;"	d
LWIP_INCLUDED_POLARSSL_MD5	lwip/src/include/netif/ppp/ppp_opts.h	591;"	d
LWIP_INCLUDED_POLARSSL_MD5_H	lwip/src/include/netif/ppp/polarssl/md5.h	40;"	d
LWIP_INCLUDED_POLARSSL_SHA1	lwip/src/include/netif/ppp/ppp_opts.h	572;"	d
LWIP_INCLUDED_POLARSSL_SHA1	lwip/src/include/netif/ppp/ppp_opts.h	594;"	d
LWIP_INCLUDED_POLARSSL_SHA1_H	lwip/src/include/netif/ppp/polarssl/sha1.h	40;"	d
LWIP_INLINE_IP_CHKSUM	lwip/src/core/ipv4/ip4.c	70;"	d	file:
LWIP_INLINE_IP_CHKSUM	lwip/src/core/ipv4/ip4.c	72;"	d	file:
LWIP_IPV4	lwip/src/include/lwip/opt.h	727;"	d
LWIP_IPV4_SRC_ROUTING	lwip/src/include/lwip/ip4.h	56;"	d
LWIP_IPV4_SRC_ROUTING	lwip/src/include/lwip/ip4.h	58;"	d
LWIP_IPV6	lwip/src/include/lwip/opt.h	2373;"	d
LWIP_IPV6_ADDRESS_LIFETIMES	lwip/src/include/lwip/opt.h	2467;"	d
LWIP_IPV6_AUTOCONFIG	lwip/src/include/lwip/opt.h	2456;"	d
LWIP_IPV6_DHCP6	lwip/src/include/lwip/opt.h	2676;"	d
LWIP_IPV6_DHCP6_STATEFUL	lwip/src/include/lwip/opt.h	2684;"	d
LWIP_IPV6_DHCP6_STATELESS	lwip/src/include/lwip/opt.h	2691;"	d
LWIP_IPV6_DUP_DETECT_ATTEMPTS	lwip/src/include/lwip/opt.h	2474;"	d
LWIP_IPV6_FORWARD	lwip/src/include/lwip/opt.h	2427;"	d
LWIP_IPV6_FRAG	lwip/src/include/lwip/opt.h	2434;"	d
LWIP_IPV6_MLD	lwip/src/include/lwip/opt.h	2521;"	d
LWIP_IPV6_NUM_ADDRESSES	lwip/src/include/lwip/opt.h	2420;"	d
LWIP_IPV6_REASS	lwip/src/include/lwip/opt.h	2441;"	d
LWIP_IPV6_SCOPES	lwip/src/include/lwip/opt.h	2403;"	d
LWIP_IPV6_SCOPES_DEBUG	lwip/src/include/lwip/opt.h	2413;"	d
LWIP_IPV6_SEND_ROUTER_SOLICIT	lwip/src/include/lwip/opt.h	2449;"	d
LWIP_IP_CHECK_PBUF_REF_COUNT_FOR_TX	lwip/src/include/lwip/ip.h	63;"	d
LWIP_IP_HDRINCL	lwip/src/include/lwip/ip.h	58;"	d
LWIP_LOOPBACK_MAX_PBUFS	lwip/src/include/lwip/opt.h	1711;"	d
LWIP_LOOPIF_MULTICAST	lwip/src/include/lwip/opt.h	1695;"	d
LWIP_LOWPAN6_802154_DEBUG	lwip/src/include/netif/lowpan6_opts.h	90;"	d
LWIP_LOWPAN6_DEBUG	lwip/src/include/netif/lowpan6_opts.h	85;"	d
LWIP_LOWPAN6_DECOMPRESSION_DEBUG	lwip/src/include/netif/lowpan6_opts.h	103;"	d
LWIP_LOWPAN6_IP_COMPRESSED_DEBUG	lwip/src/include/netif/lowpan6_opts.h	97;"	d
LWIP_MAKEU32	lwip/src/include/lwip/def.h	72;"	d
LWIP_MALLOC_MEMPOOL	lwip/src/include/lwip/priv/memp_priv.h	86;"	d
LWIP_MALLOC_MEMPOOL	lwip/src/include/lwip/priv/memp_priv.h	95;"	d
LWIP_MALLOC_MEMPOOL	lwip/src/include/lwip/priv/memp_std.h	150;"	d
LWIP_MALLOC_MEMPOOL	lwip/src/include/lwip/priv/memp_std.h	23;"	d
LWIP_MALLOC_MEMPOOL_END	lwip/src/include/lwip/priv/memp_priv.h	87;"	d
LWIP_MALLOC_MEMPOOL_END	lwip/src/include/lwip/priv/memp_priv.h	96;"	d
LWIP_MALLOC_MEMPOOL_END	lwip/src/include/lwip/priv/memp_std.h	152;"	d
LWIP_MALLOC_MEMPOOL_END	lwip/src/include/lwip/priv/memp_std.h	25;"	d
LWIP_MALLOC_MEMPOOL_START	lwip/src/include/lwip/priv/memp_priv.h	85;"	d
LWIP_MALLOC_MEMPOOL_START	lwip/src/include/lwip/priv/memp_priv.h	94;"	d
LWIP_MALLOC_MEMPOOL_START	lwip/src/include/lwip/priv/memp_std.h	151;"	d
LWIP_MALLOC_MEMPOOL_START	lwip/src/include/lwip/priv/memp_std.h	24;"	d
LWIP_MARK_TCPIP_THREAD	lwip/src/include/lwip/opt.h	236;"	d
LWIP_MAX	lwip/src/include/lwip/def.h	65;"	d
LWIP_MAX_TIMEOUT	lwip/src/core/timeouts.c	70;"	d	file:
LWIP_MEMPOOL	lwip/src/core/memp.c	78;"	d	file:
LWIP_MEMPOOL	lwip/src/core/memp.c	82;"	d	file:
LWIP_MEMPOOL	lwip/src/include/lwip/memp.h	48;"	d
LWIP_MEMPOOL	lwip/src/include/lwip/memp.h	53;"	d
LWIP_MEMPOOL	lwip/src/include/lwip/priv/memp_priv.h	84;"	d
LWIP_MEMPOOL	lwip/src/include/lwip/priv/memp_priv.h	93;"	d
LWIP_MEMPOOL	lwip/src/include/lwip/priv/memp_std.h	149;"	d
LWIP_MEMPOOL_ALLOC	lwip/src/include/lwip/memp.h	122;"	d
LWIP_MEMPOOL_DECLARE	lwip/src/include/lwip/memp.h	71;"	d
LWIP_MEMPOOL_DECLARE	lwip/src/include/lwip/memp.h	95;"	d
LWIP_MEMPOOL_DECLARE_STATS_INSTANCE	lwip/src/include/lwip/priv/memp_priv.h	140;"	d
LWIP_MEMPOOL_DECLARE_STATS_INSTANCE	lwip/src/include/lwip/priv/memp_priv.h	143;"	d
LWIP_MEMPOOL_DECLARE_STATS_REFERENCE	lwip/src/include/lwip/priv/memp_priv.h	141;"	d
LWIP_MEMPOOL_DECLARE_STATS_REFERENCE	lwip/src/include/lwip/priv/memp_priv.h	144;"	d
LWIP_MEMPOOL_FREE	lwip/src/include/lwip/memp.h	127;"	d
LWIP_MEMPOOL_INIT	lwip/src/include/lwip/memp.h	117;"	d
LWIP_MEMPOOL_PROTOTYPE	lwip/src/include/lwip/memp.h	67;"	d
LWIP_MEM_ALIGN	lwip/src/include/lwip/arch.h	294;"	d
LWIP_MEM_ALIGN_BUFFER	lwip/src/include/lwip/arch.h	287;"	d
LWIP_MEM_ALIGN_SIZE	lwip/src/include/lwip/arch.h	279;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	lwip/src/core/mem.c	401;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	lwip/src/core/mem.c	413;"	d	file:
LWIP_MEM_ALLOC_PROTECT	lwip/src/core/mem.c	402;"	d	file:
LWIP_MEM_ALLOC_PROTECT	lwip/src/core/mem.c	414;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	lwip/src/core/mem.c	403;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	lwip/src/core/mem.c	415;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	lwip/src/core/mem.c	398;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	lwip/src/core/mem.c	409;"	d	file:
LWIP_MEM_FREE_PROTECT	lwip/src/core/mem.c	399;"	d	file:
LWIP_MEM_FREE_PROTECT	lwip/src/core/mem.c	410;"	d	file:
LWIP_MEM_FREE_UNPROTECT	lwip/src/core/mem.c	400;"	d	file:
LWIP_MEM_FREE_UNPROTECT	lwip/src/core/mem.c	411;"	d	file:
LWIP_MEM_ILLEGAL_FREE	lwip/src/core/mem.c	71;"	d	file:
LWIP_MEM_LFREE_VOLATILE	lwip/src/core/mem.c	404;"	d	file:
LWIP_MEM_LFREE_VOLATILE	lwip/src/core/mem.c	416;"	d	file:
LWIP_MIB2_CALLBACKS	lwip/src/include/lwip/opt.h	1028;"	d
LWIP_MIN	lwip/src/include/lwip/def.h	66;"	d
LWIP_MPU_COMPATIBLE	lwip/src/include/lwip/opt.h	178;"	d
LWIP_MULTICAST_PING	lwip/src/include/lwip/opt.h	871;"	d
LWIP_MULTICAST_TX_OPTIONS	lwip/src/include/lwip/opt.h	1050;"	d
LWIP_ND6_ALLOW_RA_UPDATES	lwip/src/include/lwip/opt.h	2643;"	d
LWIP_ND6_DELAY_FIRST_PROBE_TIME	lwip/src/include/lwip/opt.h	2635;"	d
LWIP_ND6_MAX_ANYCAST_DELAY_TIME	lwip/src/include/lwip/opt.h	2605;"	d
LWIP_ND6_MAX_MULTICAST_SOLICIT	lwip/src/include/lwip/opt.h	2590;"	d
LWIP_ND6_MAX_NEIGHBOR_ADVERTISEMENT	lwip/src/include/lwip/opt.h	2612;"	d
LWIP_ND6_MAX_UNICAST_SOLICIT	lwip/src/include/lwip/opt.h	2598;"	d
LWIP_ND6_NUM_DESTINATIONS	lwip/src/include/lwip/opt.h	2568;"	d
LWIP_ND6_NUM_NEIGHBORS	lwip/src/include/lwip/opt.h	2561;"	d
LWIP_ND6_NUM_PREFIXES	lwip/src/include/lwip/opt.h	2575;"	d
LWIP_ND6_NUM_ROUTERS	lwip/src/include/lwip/opt.h	2582;"	d
LWIP_ND6_QUEUEING	lwip/src/include/lwip/opt.h	2547;"	d
LWIP_ND6_RDNSS_MAX_DNS_SERVERS	lwip/src/include/lwip/opt.h	2661;"	d
LWIP_ND6_REACHABLE_TIME	lwip/src/include/lwip/opt.h	2620;"	d
LWIP_ND6_RETRANS_TIMER	lwip/src/include/lwip/opt.h	2627;"	d
LWIP_ND6_TCP_REACHABILITY_HINTS	lwip/src/include/lwip/opt.h	2652;"	d
LWIP_NETBUF_RECVINFO	lwip/src/include/lwip/opt.h	1201;"	d
LWIP_NETCONN	lwip/src/api/sockets.c	74;"	d	file:
LWIP_NETCONN	lwip/src/api/sockets.c	75;"	d	file:
LWIP_NETCONN	lwip/src/api/sockets.c	79;"	d	file:
LWIP_NETCONN	lwip/src/api/sockets.c	80;"	d	file:
LWIP_NETCONN	lwip/src/include/lwip/opt.h	1889;"	d
LWIP_NETCONN	source/lwipopts.h	34;"	d
LWIP_NETCONN	source/lwipopts.h	54;"	d
LWIP_NETCONN_FULLDUPLEX	lwip/src/include/lwip/opt.h	1922;"	d
LWIP_NETCONN_SEM_PER_THREAD	lwip/src/include/lwip/opt.h	1910;"	d
LWIP_NETIF_API	lwip/src/include/lwip/opt.h	1592;"	d
LWIP_NETIF_CLIENT_DATA_INDEX_AUTOIP	lwip/src/include/lwip/netif.h	/^   LWIP_NETIF_CLIENT_DATA_INDEX_AUTOIP,$/;"	e	enum:lwip_internal_netif_client_data_index
LWIP_NETIF_CLIENT_DATA_INDEX_DHCP	lwip/src/include/lwip/netif.h	/^   LWIP_NETIF_CLIENT_DATA_INDEX_DHCP,$/;"	e	enum:lwip_internal_netif_client_data_index
LWIP_NETIF_CLIENT_DATA_INDEX_DHCP6	lwip/src/include/lwip/netif.h	/^   LWIP_NETIF_CLIENT_DATA_INDEX_DHCP6,$/;"	e	enum:lwip_internal_netif_client_data_index
LWIP_NETIF_CLIENT_DATA_INDEX_IGMP	lwip/src/include/lwip/netif.h	/^   LWIP_NETIF_CLIENT_DATA_INDEX_IGMP,$/;"	e	enum:lwip_internal_netif_client_data_index
LWIP_NETIF_CLIENT_DATA_INDEX_MAX	lwip/src/include/lwip/netif.h	/^   LWIP_NETIF_CLIENT_DATA_INDEX_MAX$/;"	e	enum:lwip_internal_netif_client_data_index
LWIP_NETIF_CLIENT_DATA_INDEX_MLD6	lwip/src/include/lwip/netif.h	/^   LWIP_NETIF_CLIENT_DATA_INDEX_MLD6,$/;"	e	enum:lwip_internal_netif_client_data_index
LWIP_NETIF_EXT_STATUS_CALLBACK	lwip/src/include/lwip/opt.h	1609;"	d
LWIP_NETIF_HOSTNAME	lwip/src/include/lwip/opt.h	1585;"	d
LWIP_NETIF_HWADDRHINT	lwip/src/include/lwip/opt.h	1636;"	d
LWIP_NETIF_LINK_CALLBACK	lwip/src/include/lwip/opt.h	1617;"	d
LWIP_NETIF_LOOPBACK	lwip/src/include/lwip/opt.h	1703;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	lwip/src/include/lwip/opt.h	1728;"	d
LWIP_NETIF_REMOVE_CALLBACK	lwip/src/include/lwip/opt.h	1625;"	d
LWIP_NETIF_STATUS_CALLBACK	lwip/src/include/lwip/opt.h	1600;"	d
LWIP_NETIF_TX_SINGLE_PBUF	lwip/src/include/lwip/opt.h	1658;"	d
LWIP_NETIF_USE_HINTS	lwip/src/include/lwip/netif.h	249;"	d
LWIP_NETIF_USE_HINTS	lwip/src/include/lwip/netif.h	254;"	d
LWIP_NOASSERT	lwip/src/include/lwip/debug.h	108;"	d
LWIP_NOASSERT	lwip/src/include/lwip/debug.h	109;"	d
LWIP_NO_CTYPE_H	lwip/src/include/lwip/arch.h	215;"	d
LWIP_NO_INTTYPES_H	lwip/port/arch/cc.h	46;"	d
LWIP_NO_INTTYPES_H	lwip/src/include/lwip/arch.h	143;"	d
LWIP_NO_LIMITS_H	lwip/src/include/lwip/arch.h	180;"	d
LWIP_NO_STDDEF_H	lwip/src/include/lwip/arch.h	103;"	d
LWIP_NO_STDINT_H	lwip/port/arch/cc.h	54;"	d
LWIP_NO_STDINT_H	lwip/src/include/lwip/arch.h	115;"	d
LWIP_NO_UNISTD_H	lwip/src/include/lwip/arch.h	196;"	d
LWIP_NSC_IPV4_ADDRESS_CHANGED	lwip/src/include/lwip/netif.h	579;"	d
LWIP_NSC_IPV4_GATEWAY_CHANGED	lwip/src/include/lwip/netif.h	581;"	d
LWIP_NSC_IPV4_NETMASK_CHANGED	lwip/src/include/lwip/netif.h	583;"	d
LWIP_NSC_IPV4_SETTINGS_CHANGED	lwip/src/include/lwip/netif.h	585;"	d
LWIP_NSC_IPV6_ADDR_STATE_CHANGED	lwip/src/include/lwip/netif.h	589;"	d
LWIP_NSC_IPV6_SET	lwip/src/include/lwip/netif.h	587;"	d
LWIP_NSC_LINK_CHANGED	lwip/src/include/lwip/netif.h	573;"	d
LWIP_NSC_NETIF_ADDED	lwip/src/include/lwip/netif.h	569;"	d
LWIP_NSC_NETIF_REMOVED	lwip/src/include/lwip/netif.h	571;"	d
LWIP_NSC_NONE	lwip/src/include/lwip/netif.h	567;"	d
LWIP_NSC_STATUS_CHANGED	lwip/src/include/lwip/netif.h	577;"	d
LWIP_NUM_NETIF_CLIENT_DATA	lwip/src/include/lwip/opt.h	1666;"	d
LWIP_NUM_SYS_TIMEOUT_INTERNAL	lwip/src/include/lwip/opt.h	508;"	d
LWIP_PACKED_CAST	lwip/src/include/lwip/arch.h	257;"	d
LWIP_PBUF_CUSTOM_REF_DEFINED	lwip/src/include/lwip/ip4_frag.h	78;"	d
LWIP_PBUF_CUSTOM_REF_DEFINED	lwip/src/include/lwip/ip6_frag.h	123;"	d
LWIP_PBUF_MEMPOOL	lwip/src/include/lwip/priv/memp_std.h	153;"	d
LWIP_PBUF_MEMPOOL	lwip/src/include/lwip/priv/memp_std.h	31;"	d
LWIP_PBUF_REF_T	lwip/src/include/lwip/opt.h	1556;"	d
LWIP_PERF	lwip/src/include/lwip/opt.h	3513;"	d
LWIP_PLATFORM_ASSERT	lwip/port/arch/cc.h	109;"	d
LWIP_PLATFORM_ASSERT	lwip/src/include/lwip/arch.h	92;"	d
LWIP_PLATFORM_DIAG	lwip/port/arch/cc.h	107;"	d
LWIP_PLATFORM_DIAG	lwip/src/include/lwip/arch.h	81;"	d
LWIP_PLATFORM_ERROR	lwip/src/include/lwip/debug.h	124;"	d
LWIP_PLATFORM_ERROR	lwip/src/include/lwip/debug.h	126;"	d
LWIP_PLATFORM_ERROR	lwip/src/include/lwip/debug.h	128;"	d
LWIP_POLLSCAN_CLEAR	lwip/src/api/sockets.c	/^  LWIP_POLLSCAN_CLEAR = 1,$/;"	e	enum:lwip_pollscan_opts	file:
LWIP_POLLSCAN_DEC_WAIT	lwip/src/api/sockets.c	/^  LWIP_POLLSCAN_DEC_WAIT = 4$/;"	e	enum:lwip_pollscan_opts	file:
LWIP_POLLSCAN_INC_WAIT	lwip/src/api/sockets.c	/^  LWIP_POLLSCAN_INC_WAIT = 2,$/;"	e	enum:lwip_pollscan_opts	file:
LWIP_POSIX_SOCKETS_IO_NAMES	lwip/src/include/lwip/opt.h	1961;"	d
LWIP_PPPAPI_H	lwip/src/include/netif/ppp/pppapi.h	29;"	d
LWIP_PPP_API	lwip/src/include/netif/ppp/ppp_opts.h	72;"	d
LWIP_PPP_OPTS_H	lwip/src/include/netif/ppp/ppp_opts.h	29;"	d
LWIP_PROVIDE_ERRNO	lwip/src/include/lwip/arch.h	382;"	d
LWIP_PROVIDE_ERRNO	source/lwipopts.h	188;"	d
LWIP_PTR_NUMERIC_CAST	lwip/src/include/lwip/arch.h	252;"	d
LWIP_RAM_HEAP_POINTER	lwip/src/core/mem.c	380;"	d	file:
LWIP_RAND	lwip/src/include/lwip/arch.h	72;"	d
LWIP_RAND	source/lwipopts.h	308;"	d
LWIP_RAW	lwip/src/include/lwip/opt.h	891;"	d
LWIP_RC_DEVELOPMENT	lwip/src/include/lwip/init.h	66;"	d
LWIP_RC_RELEASE	lwip/src/include/lwip/init.h	64;"	d
LWIP_RFC7668_IP_UNCOMPRESSED_DEBUG	lwip/src/include/netif/lowpan6_opts.h	109;"	d
LWIP_RFC7668_LINUX_WORKAROUND_PUBLIC_ADDRESS	lwip/src/include/netif/lowpan6_opts.h	118;"	d
LWIP_SELECT_MAXNFDS	lwip/src/include/lwip/sockets.h	470;"	d
LWIP_SELECT_MAXNFDS	lwip/src/include/lwip/sockets.h	489;"	d
LWIP_SETGETSOCKOPT_DATA_VAR_ALLOC	lwip/src/api/sockets.c	178;"	d	file:
LWIP_SETGETSOCKOPT_DATA_VAR_ALLOC	lwip/src/api/sockets.c	186;"	d	file:
LWIP_SETGETSOCKOPT_DATA_VAR_DECLARE	lwip/src/api/sockets.c	175;"	d	file:
LWIP_SETGETSOCKOPT_DATA_VAR_FREE	lwip/src/api/sockets.c	176;"	d	file:
LWIP_SETGETSOCKOPT_DATA_VAR_REF	lwip/src/api/sockets.c	174;"	d	file:
LWIP_SETGETSOCKOPT_MAXOPTLEN	lwip/src/include/lwip/priv/sockets_priv.h	100;"	d
LWIP_SINGLE_NETIF	lwip/src/include/lwip/opt.h	1577;"	d
LWIP_SOCKET	lwip/src/include/lwip/opt.h	1942;"	d
LWIP_SOCKET	source/lwipopts.h	38;"	d
LWIP_SOCKET	source/lwipopts.h	58;"	d
LWIP_SOCKET_MAX_MEMBERSHIPS	lwip/src/api/sockets.c	218;"	d	file:
LWIP_SOCKET_OFFSET	lwip/src/include/lwip/opt.h	1972;"	d
LWIP_SOCKET_POLL	lwip/src/include/lwip/opt.h	2079;"	d
LWIP_SOCKET_SELECT	lwip/src/include/lwip/opt.h	2071;"	d
LWIP_SOCKET_SELECT_DECL_PROTECT	lwip/src/api/sockets.c	265;"	d	file:
LWIP_SOCKET_SELECT_DECL_PROTECT	lwip/src/api/sockets.c	270;"	d	file:
LWIP_SOCKET_SELECT_PROTECT	lwip/src/api/sockets.c	266;"	d	file:
LWIP_SOCKET_SELECT_PROTECT	lwip/src/api/sockets.c	271;"	d	file:
LWIP_SOCKET_SELECT_UNPROTECT	lwip/src/api/sockets.c	267;"	d	file:
LWIP_SOCKET_SELECT_UNPROTECT	lwip/src/api/sockets.c	272;"	d	file:
LWIP_SOCKOPT_CHECK_OPTLEN	lwip/src/api/sockets.c	162;"	d	file:
LWIP_SOCKOPT_CHECK_OPTLEN_CONN	lwip/src/api/sockets.c	163;"	d	file:
LWIP_SOCKOPT_CHECK_OPTLEN_CONN_PCB	lwip/src/api/sockets.c	166;"	d	file:
LWIP_SOCKOPT_CHECK_OPTLEN_CONN_PCB_TYPE	lwip/src/api/sockets.c	169;"	d	file:
LWIP_SOCK_FD_FREE_FREE	lwip/src/include/lwip/priv/sockets_priv.h	90;"	d
LWIP_SOCK_FD_FREE_TCP	lwip/src/include/lwip/priv/sockets_priv.h	89;"	d
LWIP_SO_LINGER	lwip/src/include/lwip/opt.h	2019;"	d
LWIP_SO_RCVBUF	lwip/src/include/lwip/opt.h	2012;"	d
LWIP_SO_RCVTIMEO	lwip/src/include/lwip/opt.h	1997;"	d
LWIP_SO_RCVTIMEO	source/lwipopts.h	44;"	d
LWIP_SO_SNDRCVTIMEO_GET_MS	lwip/src/api/sockets.c	192;"	d	file:
LWIP_SO_SNDRCVTIMEO_GET_MS	lwip/src/api/sockets.c	199;"	d	file:
LWIP_SO_SNDRCVTIMEO_NONSTANDARD	lwip/src/include/lwip/opt.h	2005;"	d
LWIP_SO_SNDRCVTIMEO_OPTTYPE	lwip/src/api/sockets.c	190;"	d	file:
LWIP_SO_SNDRCVTIMEO_OPTTYPE	lwip/src/api/sockets.c	194;"	d	file:
LWIP_SO_SNDRCVTIMEO_SET	lwip/src/api/sockets.c	191;"	d	file:
LWIP_SO_SNDRCVTIMEO_SET	lwip/src/api/sockets.c	195;"	d	file:
LWIP_SO_SNDTIMEO	lwip/src/include/lwip/opt.h	1989;"	d
LWIP_STATS	lwip/src/include/lwip/opt.h	2099;"	d
LWIP_STATS	source/lwipopts.h	185;"	d
LWIP_STATS_DISPLAY	lwip/src/include/lwip/opt.h	2108;"	d
LWIP_STATS_DISPLAY	lwip/src/include/lwip/opt.h	2246;"	d
LWIP_STATS_LARGE	lwip/src/include/lwip/stats.h	52;"	d
LWIP_SUPPORT_CUSTOM_PBUF	lwip/src/include/lwip/pbuf.h	55;"	d
LWIP_TCP	lwip/src/include/lwip/opt.h	1221;"	d
LWIP_TCP	source/lwipopts.h	122;"	d
LWIP_TCPIP_CORE_LOCKING	lwip/src/include/lwip/opt.h	190;"	d
LWIP_TCPIP_CORE_LOCKING_INPUT	lwip/src/include/lwip/opt.h	202;"	d
LWIP_TCPIP_THREAD_ALIVE	lwip/src/include/lwip/opt.h	1783;"	d
LWIP_TCPIP_TIMEOUT	lwip/src/include/lwip/opt.h	1896;"	d
LWIP_TCP_CALC_INITIAL_CWND	lwip/src/core/tcp_in.c	69;"	d	file:
LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT	lwip/src/include/lwip/opt.h	2033;"	d
LWIP_TCP_KEEPALIVE	lwip/src/include/lwip/opt.h	1981;"	d
LWIP_TCP_MAX_SACK_NUM	lwip/src/include/lwip/opt.h	1282;"	d
LWIP_TCP_OPT_EOL	lwip/src/include/lwip/priv/tcp_priv.h	276;"	d
LWIP_TCP_OPT_LENGTH	lwip/src/include/lwip/priv/tcp_priv.h	304;"	d
LWIP_TCP_OPT_LENGTH_SEGMENT	lwip/src/core/tcp_out.c	89;"	d	file:
LWIP_TCP_OPT_LENGTH_SEGMENT	lwip/src/core/tcp_out.c	91;"	d	file:
LWIP_TCP_OPT_LEN_MSS	lwip/src/include/lwip/priv/tcp_priv.h	283;"	d
LWIP_TCP_OPT_LEN_SACK_PERM	lwip/src/include/lwip/priv/tcp_priv.h	298;"	d
LWIP_TCP_OPT_LEN_SACK_PERM_OUT	lwip/src/include/lwip/priv/tcp_priv.h	299;"	d
LWIP_TCP_OPT_LEN_SACK_PERM_OUT	lwip/src/include/lwip/priv/tcp_priv.h	301;"	d
LWIP_TCP_OPT_LEN_TS	lwip/src/include/lwip/priv/tcp_priv.h	285;"	d
LWIP_TCP_OPT_LEN_TS_OUT	lwip/src/include/lwip/priv/tcp_priv.h	286;"	d
LWIP_TCP_OPT_LEN_TS_OUT	lwip/src/include/lwip/priv/tcp_priv.h	288;"	d
LWIP_TCP_OPT_LEN_WS	lwip/src/include/lwip/priv/tcp_priv.h	291;"	d
LWIP_TCP_OPT_LEN_WS_OUT	lwip/src/include/lwip/priv/tcp_priv.h	292;"	d
LWIP_TCP_OPT_LEN_WS_OUT	lwip/src/include/lwip/priv/tcp_priv.h	294;"	d
LWIP_TCP_OPT_MSS	lwip/src/include/lwip/priv/tcp_priv.h	278;"	d
LWIP_TCP_OPT_NOP	lwip/src/include/lwip/priv/tcp_priv.h	277;"	d
LWIP_TCP_OPT_SACK_PERM	lwip/src/include/lwip/priv/tcp_priv.h	280;"	d
LWIP_TCP_OPT_TS	lwip/src/include/lwip/priv/tcp_priv.h	281;"	d
LWIP_TCP_OPT_WS	lwip/src/include/lwip/priv/tcp_priv.h	279;"	d
LWIP_TCP_PCB_NUM_EXT_ARGS	lwip/src/include/lwip/opt.h	1479;"	d
LWIP_TCP_PCB_NUM_EXT_ARG_ID_INVALID	lwip/src/include/lwip/tcp.h	192;"	d
LWIP_TCP_SACK_OUT	lwip/src/include/lwip/opt.h	1268;"	d
LWIP_TCP_SACK_VALID	lwip/src/include/lwip/tcp.h	291;"	d
LWIP_TCP_TIMESTAMPS	lwip/src/include/lwip/opt.h	1430;"	d
LWIP_TESTMODE	lwip/src/include/lwip/opt.h	3495;"	d
LWIP_TIMERS	lwip/src/include/lwip/opt.h	107;"	d
LWIP_TIMERS	lwip/src/include/lwip/opt.h	109;"	d
LWIP_TIMERS_CUSTOM	lwip/src/include/lwip/opt.h	121;"	d
LWIP_TIMEVAL_PRIVATE	lwip/src/include/lwip/sockets.h	518;"	d
LWIP_UDP	lwip/src/include/lwip/opt.h	1180;"	d
LWIP_UDP	source/lwipopts.h	177;"	d
LWIP_UDPLITE	lwip/src/include/lwip/opt.h	1187;"	d
LWIP_UINT32_MAX	lwip/src/include/lwip/arch.h	207;"	d
LWIP_UNUSED_ARG	lwip/src/include/lwip/arch.h	373;"	d
LWIP_USE_EXTERNAL_MBEDTLS	lwip/src/include/netif/ppp/ppp_opts.h	358;"	d
LWIP_USE_EXTERNAL_POLARSSL	lwip/src/include/netif/ppp/ppp_opts.h	351;"	d
LWIP_VERSION	lwip/src/include/lwip/init.h	84;"	d
LWIP_VERSION_IS_DEVELOPMENT	lwip/src/include/lwip/init.h	69;"	d
LWIP_VERSION_IS_RC	lwip/src/include/lwip/init.h	70;"	d
LWIP_VERSION_IS_RELEASE	lwip/src/include/lwip/init.h	68;"	d
LWIP_VERSION_MAJOR	lwip/src/include/lwip/init.h	53;"	d
LWIP_VERSION_MINOR	lwip/src/include/lwip/init.h	55;"	d
LWIP_VERSION_RC	lwip/src/include/lwip/init.h	61;"	d
LWIP_VERSION_REVISION	lwip/src/include/lwip/init.h	57;"	d
LWIP_VERSION_STRING	lwip/src/include/lwip/init.h	87;"	d
LWIP_VERSION_STRING_SUFFIX	lwip/src/include/lwip/init.h	76;"	d
LWIP_VERSION_STRING_SUFFIX	lwip/src/include/lwip/init.h	78;"	d
LWIP_VERSION_STRING_SUFFIX	lwip/src/include/lwip/init.h	80;"	d
LWIP_VERSTR	lwip/src/include/lwip/init.h	74;"	d
LWIP_VERSTR2	lwip/src/include/lwip/init.h	73;"	d
LWIP_WND_SCALE	lwip/src/include/lwip/opt.h	1469;"	d
Last	emwin/emWin_header/GUI_Type.h	/^  U16 Last;                          \/* Last character of font *\/$/;"	m	struct:__anon266
Last	emwin/emWin_header/GUI_Type.h	/^  U16 Last;         \/* Index of last character *\/$/;"	m	struct:__anon263
Last	emwin/emWin_header/GUI_Type.h	/^  U16P Last;                                   \/* Last character                *\/$/;"	m	struct:GUI_FONT_PROP
Last	emwin/emWin_header/GUI_Type.h	/^  U16P Last;                                   \/* Last character                *\/$/;"	m	struct:GUI_FONT_PROP_EXT
LastBit	emwin/emWin_header/GUI_GIF_Private.h	/^  int   LastBit;$/;"	m	struct:__anon323
LastButton	emwin/emWin_header/SPINBOX_Private.h	/^  I8                  LastButton;$/;"	m	struct:__anon322
LastByte	emwin/emWin_header/GUI_GIF_Private.h	/^  int   LastByte;$/;"	m	struct:__anon323
LastChar	emwin/emWin_header/GUI_Type.h	/^  U16P                       LastChar;$/;"	m	struct:__anon257
LastChar	emwin/emWin_header/GUI_Type.h	/^  U16P LastChar;$/;"	m	struct:__anon254
LastColor	emwin/emWin_header/CHOOSECOLOR.h	/^  U32               LastColor;$/;"	m	struct:__anon234
LastVisible	emwin/emWin_header/SWIPELIST_Private.h	/^  int                     LastVisible;$/;"	m	struct:__anon238
Layer	emwin/emWin_header/GUI_Type.h	/^  U8  Layer;$/;"	m	struct:__anon247
Layer	emwin/emWin_header/GUI_Type.h	/^  U8  Layer;$/;"	m	struct:__anon271
LayerIndex	emwin/emWin_header/GUI.h	/^  int LayerIndex;$/;"	m	struct:GUI_DEVICE
LayerIndex	emwin/emWin_header/GUI_Type.h	/^  int            LayerIndex;$/;"	m	struct:__anon270
LayerIndex	emwin/emWin_header/GUI_VNC.h	/^  int LayerIndex;$/;"	m	struct:GUI_VNC_CONTEXT
LcpEchoCheck	lwip/src/netif/ppp/lcp.c	/^static void LcpEchoCheck(fsm *f) {$/;"	f	file:
LcpEchoTimeout	lwip/src/netif/ppp/lcp.c	/^static void LcpEchoTimeout(void *arg) {$/;"	f	file:
LcpLinkFailure	lwip/src/netif/ppp/lcp.c	/^static void LcpLinkFailure(fsm *f) {$/;"	f	file:
LcpSendEchoRequest	lwip/src/netif/ppp/lcp.c	/^static void LcpSendEchoRequest(fsm *f) {$/;"	f	file:
Level	emwin/emWin_header/TREEVIEW.h	/^  int Level;$/;"	m	struct:__anon371
Level	emwin/emWin_header/TREEVIEW_Private.h	/^  U8                   Level;  \/* 0...15 *\/$/;"	m	struct:__anon225
LineHeight	emwin/emWin_header/LISTWHEEL_Private.h	/^  unsigned                LineHeight;$/;"	m	struct:__anon353
LineOff	emwin/emWin_header/GUI.h	/^  int    LineOff;       \/\/ Virtual xSize in pixels$/;"	m	struct:__anon385
LineStyle	emwin/emWin_header/GUI.h	/^  U8         LineStyle;$/;"	m	struct:GUI_CONTEXT
LineStyleH	emwin/emWin_header/GRAPH_Private.h	/^  U8              LineStyleH;$/;"	m	struct:GRAPH_OBJ
LineStyleV	emwin/emWin_header/GRAPH_Private.h	/^  U8              LineStyleV;$/;"	m	struct:GRAPH_OBJ
ListItem_t	amazon-freertos/include/list.h	/^typedef struct xLIST_ITEM ListItem_t;					\/* For some reason lint wants this as two separate definitions. *\/$/;"	t	typeref:struct:xLIST_ITEM
List_t	amazon-freertos/include/list.h	/^} List_t;$/;"	t	typeref:struct:xLIST
LoRa_DataRate_Table	radio/sx1276-lora.c	/^static const INT8U LoRa_DataRate_Table[6][3] = { { 7, 12, 1 }, \/\/0.3kbps,       BW: 125KHz, Spreading Factor: 12, Error Coding value: 4\/5,$/;"	v	file:
M	CMSIS/arm_math.h	/^    uint8_t M;                  \/**< decimation factor. *\/$/;"	m	struct:__anon86
M	CMSIS/arm_math.h	/^    uint8_t M;                  \/**< decimation factor. *\/$/;"	m	struct:__anon87
M	CMSIS/arm_math.h	/^    uint8_t M;                  \/**< decimation factor. *\/$/;"	m	struct:__anon88
MAC_1US_TIC_COUNTR	device/LPC54018.h	/^  __IO uint32_t MAC_1US_TIC_COUNTR;                \/**< , offset: 0xDC *\/$/;"	m	struct:__anon154
MAC_ADDR_HIGH	device/LPC54018.h	/^  __IO uint32_t MAC_ADDR_HIGH;                     \/**< MAC address0 high register, offset: 0x300 *\/$/;"	m	struct:__anon154
MAC_ADDR_LOW	device/LPC54018.h	/^  __IO uint32_t MAC_ADDR_LOW;                      \/**< MAC address0 low register, offset: 0x304 *\/$/;"	m	struct:__anon154
MAC_CONFIG	device/LPC54018.h	/^  __IO uint32_t MAC_CONFIG;                        \/**< MAC configuration register, offset: 0x0 *\/$/;"	m	struct:__anon154
MAC_DBG	device/LPC54018.h	/^  __I  uint32_t MAC_DBG;                           \/**< MAC debug register, offset: 0x114 *\/$/;"	m	struct:__anon154
MAC_EXT_CONFIG	device/LPC54018.h	/^  __IO uint32_t MAC_EXT_CONFIG;                    \/**< , offset: 0x4 *\/$/;"	m	struct:__anon154
MAC_FRAME_FILTER	device/LPC54018.h	/^  __IO uint32_t MAC_FRAME_FILTER;                  \/**< MAC frame filter register, offset: 0x8 *\/$/;"	m	struct:__anon154
MAC_HW_FEAT	device/LPC54018.h	/^  __I  uint32_t MAC_HW_FEAT[3];                    \/**< MAC hardware feature register 0x0201, array offset: 0x11C, array step: 0x4 *\/$/;"	m	struct:__anon154
MAC_INTR_EN	device/LPC54018.h	/^  __IO uint32_t MAC_INTR_EN;                       \/**< Interrupt enable register 0x0000, offset: 0xB4 *\/$/;"	m	struct:__anon154
MAC_INTR_STAT	device/LPC54018.h	/^  __I  uint32_t MAC_INTR_STAT;                     \/**< Interrupt status register 0x0000, offset: 0xB0 *\/$/;"	m	struct:__anon154
MAC_LPI_CTRL_STAT	device/LPC54018.h	/^  __IO uint32_t MAC_LPI_CTRL_STAT;                 \/**< LPI Control and Status Register, offset: 0xD0 *\/$/;"	m	struct:__anon154
MAC_LPI_ENTR_TIMR	device/LPC54018.h	/^  __IO uint32_t MAC_LPI_ENTR_TIMR;                 \/**< LPI entry Timer register, offset: 0xD8 *\/$/;"	m	struct:__anon154
MAC_LPI_TIMER_CTRL	device/LPC54018.h	/^  __IO uint32_t MAC_LPI_TIMER_CTRL;                \/**< LPI Timers Control register, offset: 0xD4 *\/$/;"	m	struct:__anon154
MAC_MDIO_ADDR	device/LPC54018.h	/^  __IO uint32_t MAC_MDIO_ADDR;                     \/**< MIDO address Register, offset: 0x200 *\/$/;"	m	struct:__anon154
MAC_MDIO_DATA	device/LPC54018.h	/^  __IO uint32_t MAC_MDIO_DATA;                     \/**< MDIO Data register, offset: 0x204 *\/$/;"	m	struct:__anon154
MAC_PMT_CRTL_STAT	device/LPC54018.h	/^  __IO uint32_t MAC_PMT_CRTL_STAT;                 \/**< , offset: 0xC0 *\/$/;"	m	struct:__anon154
MAC_RWAKE_FRFLT	device/LPC54018.h	/^  __IO uint32_t MAC_RWAKE_FRFLT;                   \/**< Remote wake-up frame filter, offset: 0xC4 *\/$/;"	m	struct:__anon154
MAC_RXQ_CTRL	device/LPC54018.h	/^  __IO uint32_t MAC_RXQ_CTRL[3];                   \/**< Receive Queue Control 0 register 0x0000, array offset: 0xA0, array step: 0x4 *\/$/;"	m	struct:__anon154
MAC_RXTX_STAT	device/LPC54018.h	/^  __I  uint32_t MAC_RXTX_STAT;                     \/**< Receive Transmit Status register, offset: 0xB8 *\/$/;"	m	struct:__anon154
MAC_RX_FLOW_CTRL	device/LPC54018.h	/^  __IO uint32_t MAC_RX_FLOW_CTRL;                  \/**< Receive flow control register, offset: 0x90 *\/$/;"	m	struct:__anon154
MAC_SUB_SCND_INCR	device/LPC54018.h	/^  __IO uint32_t MAC_SUB_SCND_INCR;                 \/**< Sub-second increment register, offset: 0xB04 *\/$/;"	m	struct:__anon154
MAC_SYS_TIMESTMP_ADDEND	device/LPC54018.h	/^  __IO uint32_t MAC_SYS_TIMESTMP_ADDEND;           \/**< Time stamp addend register, offset: 0xB18 *\/$/;"	m	struct:__anon154
MAC_SYS_TIMESTMP_STAT	device/LPC54018.h	/^  __I  uint32_t MAC_SYS_TIMESTMP_STAT;             \/**< Time stamp status register, offset: 0xB20 *\/$/;"	m	struct:__anon154
MAC_SYS_TIME_HWORD_SCND	device/LPC54018.h	/^  __IO uint32_t MAC_SYS_TIME_HWORD_SCND;           \/**< , offset: 0xB1C *\/$/;"	m	struct:__anon154
MAC_SYS_TIME_NSCND	device/LPC54018.h	/^  __I  uint32_t MAC_SYS_TIME_NSCND;                \/**< System time nanoseconds register, offset: 0xB0C *\/$/;"	m	struct:__anon154
MAC_SYS_TIME_NSCND_UPD	device/LPC54018.h	/^  __IO uint32_t MAC_SYS_TIME_NSCND_UPD;            \/**< , offset: 0xB14 *\/$/;"	m	struct:__anon154
MAC_SYS_TIME_SCND	device/LPC54018.h	/^  __I  uint32_t MAC_SYS_TIME_SCND;                 \/**< System time seconds register, offset: 0xB08 *\/$/;"	m	struct:__anon154
MAC_SYS_TIME_SCND_UPD	device/LPC54018.h	/^  __IO uint32_t MAC_SYS_TIME_SCND_UPD;             \/**< , offset: 0xB10 *\/$/;"	m	struct:__anon154
MAC_TIMESTAMP_CTRL	device/LPC54018.h	/^  __IO uint32_t MAC_TIMESTAMP_CTRL;                \/**< Time stamp control register, offset: 0xB00 *\/$/;"	m	struct:__anon154
MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND	device/LPC54018.h	/^  __IO uint32_t MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND; \/**< Timestamp egress correction, offset: 0xB5C *\/$/;"	m	struct:__anon154
MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND	device/LPC54018.h	/^  __IO uint32_t MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND; \/**< Timestamp ingress correction, offset: 0xB58 *\/$/;"	m	struct:__anon154
MAC_TXQ_PRIO_MAP	device/LPC54018.h	/^  __IO uint32_t MAC_TXQ_PRIO_MAP;                  \/**< , offset: 0x98 *\/$/;"	m	struct:__anon154
MAC_TX_FLOW_CTRL_Q	device/LPC54018.h	/^  __IO uint32_t MAC_TX_FLOW_CTRL_Q[2];             \/**< Transmit flow control register, array offset: 0x70, array step: 0x4 *\/$/;"	m	struct:__anon154
MAC_TX_TIMESTAMP_STATUS_NANOSECONDS	device/LPC54018.h	/^  __I  uint32_t MAC_TX_TIMESTAMP_STATUS_NANOSECONDS; \/**< Tx timestamp status nanoseconds, offset: 0xB30 *\/$/;"	m	struct:__anon154
MAC_TX_TIMESTAMP_STATUS_SECONDS	device/LPC54018.h	/^  __I  uint32_t MAC_TX_TIMESTAMP_STATUS_SECONDS;   \/**< Tx timestamp status seconds, offset: 0xB34 *\/$/;"	m	struct:__anon154
MAC_VERSION	device/LPC54018.h	/^  __I  uint32_t MAC_VERSION;                       \/**< MAC version register, offset: 0x110 *\/$/;"	m	struct:__anon154
MAC_VLAN_TAG	device/LPC54018.h	/^  __IO uint32_t MAC_VLAN_TAG;                      \/**< MAC vlan tag register, offset: 0x50 *\/$/;"	m	struct:__anon154
MAC_WD_TIMEROUT	device/LPC54018.h	/^  __IO uint32_t MAC_WD_TIMEROUT;                   \/**< MAC watchdog Timeout register, offset: 0xC *\/$/;"	m	struct:__anon154
MAGIC_H	lwip/src/include/netif/ppp/magic.h	81;"	d
MAINCLKSELA	device/LPC54018.h	/^  __IO uint32_t MAINCLKSELA;                       \/**< Main clock source select A, offset: 0x280 *\/$/;"	m	struct:__anon185
MAINCLKSELB	device/LPC54018.h	/^  __IO uint32_t MAINCLKSELB;                       \/**< Main clock source select B, offset: 0x284 *\/$/;"	m	struct:__anon185
MAINDEBUG	lwip/src/include/netif/ppp/pppdebug.h	58;"	d
MAINDEBUG	lwip/src/include/netif/ppp/pppdebug.h	70;"	d
MAIR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t MAIR[2];$/;"	m	union:__anon126::__anon127
MAIR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t MAIR[2];$/;"	m	union:__anon25::__anon26
MAIR0	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t MAIR0;                  \/*!< Offset: 0x030 (R\/W)  MPU Memory Attribute Indirection Register 0 *\/$/;"	m	struct:__anon126::__anon127::__anon128
MAIR0	CMSIS/core_armv8mml.h	/^  __IOM uint32_t MAIR0;                  \/*!< Offset: 0x030 (R\/W)  MPU Memory Attribute Indirection Register 0 *\/$/;"	m	struct:__anon25::__anon26::__anon27
MAIR1	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t MAIR1;                  \/*!< Offset: 0x034 (R\/W)  MPU Memory Attribute Indirection Register 1 *\/$/;"	m	struct:__anon126::__anon127::__anon128
MAIR1	CMSIS/core_armv8mml.h	/^  __IOM uint32_t MAIR1;                  \/*!< Offset: 0x034 (R\/W)  MPU Memory Attribute Indirection Register 1 *\/$/;"	m	struct:__anon25::__anon26::__anon27
MAKEFSDATAFILES	lwip/src/Filelists.mk	/^MAKEFSDATAFILES=$(LWIPDIR)\/apps\/http\/makefsdata\/makefsdata.c$/;"	m
MAKEHEADER	lwip/src/include/netif/ppp/ppp_impl.h	547;"	d
MAKE_PD_BITS	drivers/fsl_power.h	29;"	d
MAKE_STATUS	drivers/fsl_common.h	34;"	d
MAKE_VERSION	drivers/fsl_common.h	37;"	d
MAKE_VERSION	usb/include/usb.h	39;"	d
MANAGE_VMEM_API	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^} MANAGE_VMEM_API;$/;"	t	typeref:struct:__anon301
MANAGE_VMEM_API	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^} MANAGE_VMEM_API;$/;"	t	typeref:struct:__anon374
MANAGE_VMEM_API	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^} MANAGE_VMEM_API;$/;"	t	typeref:struct:__anon368
MANAGE_VMEM_API	emwin/emWin_header/GUIDRV_SLin_Private.h	/^} MANAGE_VMEM_API;$/;"	t	typeref:struct:__anon303
MANAGE_VMEM_API	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^} MANAGE_VMEM_API;$/;"	t	typeref:struct:__anon229
MANAGE_VMEM_API	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^} MANAGE_VMEM_API;$/;"	t	typeref:struct:__anon350
MASK	device/LPC54018.h	/^  __IO uint32_t MASK;                              \/**< Mask LSB register, offset: 0x4 *\/$/;"	m	struct:__anon170
MASK	device/LPC54018.h	/^  __IO uint32_t MASK[6];                           \/**< Mask register, array offset: 0x2080, array step: 0x4 *\/$/;"	m	struct:__anon159
MASK0	CMSIS/core_cm4.h	/^  __IOM uint32_t MASK0;                  \/*!< Offset: 0x024 (R\/W)  Mask Register 0 *\/$/;"	m	struct:__anon45
MASK1	CMSIS/core_cm4.h	/^  __IOM uint32_t MASK1;                  \/*!< Offset: 0x034 (R\/W)  Mask Register 1 *\/$/;"	m	struct:__anon45
MASK2	CMSIS/core_cm4.h	/^  __IOM uint32_t MASK2;                  \/*!< Offset: 0x044 (R\/W)  Mask Register 2 *\/$/;"	m	struct:__anon45
MASK3	CMSIS/core_cm4.h	/^  __IOM uint32_t MASK3;                  \/*!< Offset: 0x054 (R\/W)  Mask Register 3 *\/$/;"	m	struct:__anon45
MASK_H	device/LPC54018.h	/^  __IO uint32_t MASK_H;                            \/**< Mask MSB register, offset: 0x14 *\/$/;"	m	struct:__anon170
MATCH	device/LPC54018.h	/^  __IO uint32_t MATCH;                             \/**< RTC match register, offset: 0x4 *\/$/;"	m	struct:__anon171
MAX	drivers/fsl_common.h	187;"	d
MAXFACTORS	codec2/_kiss_fft_guts.h	22;"	d
MAXNAMELEN	lwip/src/include/netif/ppp/ppp_opts.h	545;"	d
MAXSECRETLEN	lwip/src/include/netif/ppp/ppp_opts.h	552;"	d
MAX_AMP	codec2/defines.h	41;"	d
MAX_BLOCKSPERMCU	emwin/emWin_header/GUI_JPEG_Private.h	86;"	d
MAX_CHALLENGE_LEN	lwip/src/include/netif/ppp/chap-new.h	68;"	d
MAX_COMPONENTS	emwin/emWin_header/GUI_JPEG_Private.h	82;"	d
MAX_COMPSINSCAN	emwin/emWin_header/GUI_JPEG_Private.h	85;"	d
MAX_CONFLICTS	lwip/src/include/lwip/prot/autoip.h	62;"	d
MAX_ENDP_LEN	lwip/src/include/netif/ppp/lcp.h	104;"	d
MAX_ENTRIES	codec2/quantise.c	415;"	d	file:
MAX_HDR	lwip/src/include/netif/ppp/vj.h	39;"	d
MAX_HUFFTABLES	emwin/emWin_header/GUI_JPEG_Private.h	83;"	d
MAX_NT_PASSWORD	lwip/src/netif/ppp/chap_ms.c	102;"	d	file:
MAX_NUM_LWZ_BITS	emwin/emWin_header/GUI_GIF_Private.h	56;"	d
MAX_QUANTTABLES	emwin/emWin_header/GUI_JPEG_Private.h	84;"	d
MAX_RESPONSE_LEN	lwip/src/include/netif/ppp/chap-new.h	69;"	d
MAX_SLOTS	lwip/src/include/netif/ppp/vj.h	38;"	d
MAX_STATES	lwip/src/include/netif/ppp/ipcp.h	74;"	d
MAX_STR	codec2/defines.h	46;"	d
MBEDTLS_FILES	lwip/src/Filelists.mk	/^MBEDTLS_FILES=$(LWIPDIR)\/apps\/altcp_tls\/altcp_tls_mbedtls.c \\$/;"	m
MBEST	codec2/mbest.h	/^struct MBEST {$/;"	s
MBEST_LIST	codec2/mbest.h	/^struct MBEST_LIST {$/;"	s
MBEST_PRINT	codec2/mbest.h	52;"	d
MBEST_PRINT	codec2/mbest.h	54;"	d
MBEST_STAGES	codec2/mbest.h	33;"	d
MCAN_CLOCKS	drivers/fsl_clock.h	161;"	d
MCAN_RSTS	drivers/fsl_reset.h	167;"	d
MCLKCLKSEL	device/LPC54018.h	/^  __IO uint32_t MCLKCLKSEL;                        \/**< MCLK clock source select, offset: 0x2E0 *\/$/;"	m	struct:__anon185
MCLKDIV	device/LPC54018.h	/^  __IO uint32_t MCLKDIV;                           \/**< I2S MCLK clock divider, offset: 0x3AC *\/$/;"	m	struct:__anon185
MCLKIO	device/LPC54018.h	/^  __IO uint32_t MCLKIO;                            \/**< MCLK input\/output control, offset: 0x420 *\/$/;"	m	struct:__anon185
MCMD	device/LPC54018.h	/^  __IO uint32_t MCMD;                              \/**< SPIFI memory command register, offset: 0x18 *\/$/;"	m	struct:__anon184
MCR	device/LPC54018.h	/^  __IO uint32_t MCR;                               \/**< Match Control Register, offset: 0x14 *\/$/;"	m	struct:__anon145
MCULinesLeft	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MCULinesLeft;   \/\/ Total number of lines left in current MCU$/;"	m	struct:GUI_JPEG_DCONTEXT
MCU_MEM_MAP_VERSION	device/LPC54018.h	55;"	d
MCU_MEM_MAP_VERSION_MINOR	device/LPC54018.h	57;"	d
MCUsPerCol	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MCUsPerCol;$/;"	m	struct:GUI_JPEG_DCONTEXT
MCUsPerRow	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MCUsPerRow;$/;"	m	struct:GUI_JPEG_DCONTEXT
MD4_SIGNATURE_SIZE	lwip/src/netif/ppp/chap_ms.c	101;"	d	file:
MD5_HASH_SIZE	lwip/src/netif/ppp/chap-md5.c	46;"	d	file:
MD5_HASH_SIZE	lwip/src/netif/ppp/magic.c	85;"	d	file:
MD5_MAX_CHALLENGE	lwip/src/netif/ppp/chap-md5.c	48;"	d	file:
MD5_MIN_CHALLENGE	lwip/src/netif/ppp/chap-md5.c	47;"	d	file:
MD5_MIN_MAX_POWER_OF_TWO_CHALLENGE	lwip/src/netif/ppp/chap-md5.c	49;"	d	file:
MD5_SIGNATURE_SIZE	lwip/src/include/netif/ppp/eap.h	82;"	d
MDNSFILES	lwip/src/Filelists.mk	/^MDNSFILES=$(LWIPDIR)\/apps\/mdns\/mdns.c$/;"	m
MDTYPE_MD5	lwip/src/include/netif/ppp/chap-new.h	83;"	d
MDTYPE_MICROSOFT	lwip/src/include/netif/ppp/chap-new.h	81;"	d
MDTYPE_MICROSOFT_V2	lwip/src/include/netif/ppp/chap-new.h	80;"	d
MDTYPE_NONE	lwip/src/include/netif/ppp/chap-new.h	84;"	d
MEMADDR	device/LPC54018.h	/^  __IO uint32_t MEMADDR;                           \/**< Memory Address register, offset: 0x14 *\/$/;"	m	struct:__anon178
MEMCPY	lwip/src/include/lwip/opt.h	137;"	d
MEMCTRL	device/LPC54018.h	/^  __IO uint32_t MEMCTRL;                           \/**< Memory Control register, offset: 0x10 *\/$/;"	m	struct:__anon178
MEMDEV_DEVFUNC_WRITETOACTIVE	emwin/emWin_header/LCD.h	482;"	d
MEMMOVE	lwip/src/include/lwip/opt.h	154;"	d
MEMP_ALIGN_SIZE	lwip/src/include/lwip/priv/memp_priv.h	55;"	d
MEMP_ALIGN_SIZE	lwip/src/include/lwip/priv/memp_priv.h	64;"	d
MEMP_DEBUG	lwip/src/include/lwip/opt.h	3351;"	d
MEMP_MAX	lwip/src/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon476
MEMP_MEM_INIT	lwip/src/include/lwip/opt.h	280;"	d
MEMP_MEM_MALLOC	lwip/src/include/lwip/opt.h	271;"	d
MEMP_NUM_ALTCP_PCB	lwip/src/include/lwip/opt.h	462;"	d
MEMP_NUM_API_MSG	lwip/src/include/lwip/opt.h	589;"	d
MEMP_NUM_ARP_QUEUE	lwip/src/include/lwip/opt.h	491;"	d
MEMP_NUM_DNS_API_MSG	lwip/src/include/lwip/opt.h	595;"	d
MEMP_NUM_FRAG_PBUF	lwip/src/include/lwip/opt.h	481;"	d
MEMP_NUM_IGMP_GROUP	lwip/src/include/lwip/opt.h	501;"	d
MEMP_NUM_LOCALHOSTLIST	lwip/src/include/lwip/opt.h	575;"	d
MEMP_NUM_MLD6_GROUP	lwip/src/include/lwip/opt.h	2531;"	d
MEMP_NUM_ND6_QUEUE	lwip/src/include/lwip/opt.h	2554;"	d
MEMP_NUM_NETBUF	lwip/src/include/lwip/opt.h	524;"	d
MEMP_NUM_NETCONN	lwip/src/include/lwip/opt.h	532;"	d
MEMP_NUM_NETDB	lwip/src/include/lwip/opt.h	567;"	d
MEMP_NUM_NETIFAPI_MSG	lwip/src/include/lwip/opt.h	609;"	d
MEMP_NUM_PBUF	lwip/src/include/lwip/opt.h	411;"	d
MEMP_NUM_PBUF	source/lwipopts.h	83;"	d
MEMP_NUM_PPPOE_INTERFACES	lwip/src/include/netif/ppp/ppp_opts.h	110;"	d
MEMP_NUM_PPPOL2TP_INTERFACES	lwip/src/include/netif/ppp/ppp_opts.h	118;"	d
MEMP_NUM_PPPOS_INTERFACES	lwip/src/include/netif/ppp/ppp_opts.h	102;"	d
MEMP_NUM_PPP_API_MSG	lwip/src/include/netif/ppp/ppp_opts.h	125;"	d
MEMP_NUM_PPP_PCB	lwip/src/include/netif/ppp/ppp_opts.h	82;"	d
MEMP_NUM_RAW_PCB	lwip/src/include/lwip/opt.h	419;"	d
MEMP_NUM_REASSDATA	lwip/src/include/lwip/opt.h	470;"	d
MEMP_NUM_SELECT_CB	lwip/src/include/lwip/opt.h	541;"	d
MEMP_NUM_SOCKET_SETGETSOCKOPT_DATA	lwip/src/include/lwip/opt.h	602;"	d
MEMP_NUM_SYS_TIMEOUT	lwip/src/include/lwip/opt.h	516;"	d
MEMP_NUM_SYS_TIMEOUT	source/lwipopts.h	108;"	d
MEMP_NUM_TCPIP_MSG_API	lwip/src/include/lwip/opt.h	550;"	d
MEMP_NUM_TCPIP_MSG_INPKT	lwip/src/include/lwip/opt.h	559;"	d
MEMP_NUM_TCP_PCB	lwip/src/include/lwip/opt.h	436;"	d
MEMP_NUM_TCP_PCB	source/lwipopts.h	93;"	d
MEMP_NUM_TCP_PCB_LISTEN	lwip/src/include/lwip/opt.h	444;"	d
MEMP_NUM_TCP_PCB_LISTEN	source/lwipopts.h	98;"	d
MEMP_NUM_TCP_SEG	lwip/src/include/lwip/opt.h	452;"	d
MEMP_NUM_TCP_SEG	source/lwipopts.h	103;"	d
MEMP_NUM_UDP_PCB	lwip/src/include/lwip/opt.h	428;"	d
MEMP_NUM_UDP_PCB	source/lwipopts.h	88;"	d
MEMP_OVERFLOW_CHECK	lwip/src/core/memp.c	91;"	d	file:
MEMP_OVERFLOW_CHECK	lwip/src/core/memp.c	93;"	d	file:
MEMP_OVERFLOW_CHECK	lwip/src/include/lwip/opt.h	310;"	d
MEMP_POOL_FIRST	lwip/src/include/lwip/priv/memp_priv.h	103;"	d
MEMP_POOL_HELPER_FIRST	lwip/src/include/lwip/priv/memp_priv.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon452
MEMP_POOL_HELPER_LAST	lwip/src/include/lwip/priv/memp_priv.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon452
MEMP_POOL_LAST	lwip/src/include/lwip/priv/memp_priv.h	104;"	d
MEMP_SANITY_CHECK	lwip/src/include/lwip/opt.h	318;"	d
MEMP_SIZE	lwip/src/include/lwip/priv/memp_priv.h	54;"	d
MEMP_SIZE	lwip/src/include/lwip/priv/memp_priv.h	63;"	d
MEMP_STATS	lwip/src/include/lwip/opt.h	2181;"	d
MEMP_STATS	lwip/src/include/lwip/opt.h	2244;"	d
MEMP_STATS_DEC	lwip/src/include/lwip/stats.h	403;"	d
MEMP_STATS_DEC	lwip/src/include/lwip/stats.h	407;"	d
MEMP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	404;"	d
MEMP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	408;"	d
MEMP_STATS_GET	lwip/src/include/lwip/stats.h	405;"	d
MEMP_STATS_GET	lwip/src/include/lwip/stats.h	409;"	d
MEMP_USE_CUSTOM_POOLS	lwip/src/include/lwip/opt.h	367;"	d
MEM_ALIGNMENT	lwip/src/include/lwip/opt.h	289;"	d
MEM_ALIGNMENT	source/lwipopts.h	68;"	d
MEM_DEBUG	lwip/src/include/lwip/opt.h	3344;"	d
MEM_LIBC_MALLOC	lwip/src/include/lwip/opt.h	258;"	d
MEM_LIBC_STATSHELPER_SIZE	lwip/src/core/mem.c	193;"	d	file:
MEM_LIBC_STATSHELPER_SIZE	lwip/src/core/mem.c	195;"	d	file:
MEM_OVERFLOW_CHECK	lwip/src/include/lwip/opt.h	331;"	d
MEM_SANITY	lwip/src/core/mem.c	425;"	d	file:
MEM_SANITY	lwip/src/core/mem.c	427;"	d	file:
MEM_SANITY_CHECK	lwip/src/include/lwip/opt.h	339;"	d
MEM_SANITY_OFFSET	lwip/src/core/mem.c	79;"	d	file:
MEM_SANITY_OFFSET	lwip/src/core/mem.c	82;"	d	file:
MEM_SANITY_OVERHEAD	lwip/src/core/mem.c	80;"	d	file:
MEM_SANITY_OVERHEAD	lwip/src/core/mem.c	83;"	d	file:
MEM_SANITY_REGION_AFTER	lwip/src/include/lwip/priv/mem_priv.h	67;"	d
MEM_SANITY_REGION_AFTER_ALIGNED	lwip/src/include/lwip/priv/mem_priv.h	70;"	d
MEM_SANITY_REGION_AFTER_ALIGNED	lwip/src/include/lwip/priv/mem_priv.h	72;"	d
MEM_SANITY_REGION_BEFORE	lwip/src/include/lwip/priv/mem_priv.h	59;"	d
MEM_SANITY_REGION_BEFORE_ALIGNED	lwip/src/include/lwip/priv/mem_priv.h	62;"	d
MEM_SANITY_REGION_BEFORE_ALIGNED	lwip/src/include/lwip/priv/mem_priv.h	64;"	d
MEM_SIZE	lwip/src/include/lwip/opt.h	297;"	d
MEM_SIZE	source/lwipopts.h	76;"	d
MEM_SIZE_ALIGNED	lwip/src/core/mem.c	371;"	d	file:
MEM_SIZE_F	lwip/src/include/lwip/mem.h	51;"	d
MEM_SIZE_F	lwip/src/include/lwip/mem.h	56;"	d
MEM_SIZE_F	lwip/src/include/lwip/mem.h	65;"	d
MEM_SIZE_F	lwip/src/include/lwip/mem.h	68;"	d
MEM_STATS	lwip/src/include/lwip/opt.h	2174;"	d
MEM_STATS	lwip/src/include/lwip/opt.h	2243;"	d
MEM_STATS_AVAIL	lwip/src/include/lwip/stats.h	389;"	d
MEM_STATS_AVAIL	lwip/src/include/lwip/stats.h	395;"	d
MEM_STATS_DEC_USED	lwip/src/include/lwip/stats.h	392;"	d
MEM_STATS_DEC_USED	lwip/src/include/lwip/stats.h	398;"	d
MEM_STATS_DEC_USED_LOCKED	lwip/src/core/mem.c	76;"	d	file:
MEM_STATS_DISPLAY	lwip/src/include/lwip/stats.h	393;"	d
MEM_STATS_DISPLAY	lwip/src/include/lwip/stats.h	399;"	d
MEM_STATS_INC	lwip/src/include/lwip/stats.h	390;"	d
MEM_STATS_INC	lwip/src/include/lwip/stats.h	396;"	d
MEM_STATS_INC_LOCKED	lwip/src/core/mem.c	74;"	d	file:
MEM_STATS_INC_USED	lwip/src/include/lwip/stats.h	391;"	d
MEM_STATS_INC_USED	lwip/src/include/lwip/stats.h	397;"	d
MEM_STATS_INC_USED_LOCKED	lwip/src/core/mem.c	75;"	d	file:
MEM_USE_POOLS	lwip/src/include/lwip/opt.h	349;"	d
MEM_USE_POOLS_TRY_BIGGER_POOL	lwip/src/include/lwip/opt.h	357;"	d
MENU_BI_BOTTOM	emwin/emWin_header/MENU.h	100;"	d
MENU_BI_LEFT	emwin/emWin_header/MENU.h	97;"	d
MENU_BI_RIGHT	emwin/emWin_header/MENU.h	98;"	d
MENU_BI_TOP	emwin/emWin_header/MENU.h	99;"	d
MENU_CF_CLOSE_ON_SECOND_CLICK	emwin/emWin_header/MENU.h	73;"	d
MENU_CF_HIDE_DISABLED_SEL	emwin/emWin_header/MENU.h	74;"	d
MENU_CF_HORIZONTAL	emwin/emWin_header/MENU.h	70;"	d
MENU_CF_OPEN_ON_POINTEROVER	emwin/emWin_header/MENU.h	72;"	d
MENU_CF_VERTICAL	emwin/emWin_header/MENU.h	71;"	d
MENU_CI_ACTIVE_SUBMENU	emwin/emWin_header/MENU.h	91;"	d
MENU_CI_DISABLED	emwin/emWin_header/MENU.h	89;"	d
MENU_CI_DISABLED_SEL	emwin/emWin_header/MENU.h	90;"	d
MENU_CI_ENABLED	emwin/emWin_header/MENU.h	87;"	d
MENU_CI_SELECTED	emwin/emWin_header/MENU.h	88;"	d
MENU_H	emwin/emWin_header/MENU.h	46;"	d
MENU_Handle	emwin/emWin_header/MENU.h	/^typedef WM_HMEM MENU_Handle;$/;"	t
MENU_ID	emwin/emWin_header/WIDGET.h	111;"	d
MENU_IF_DISABLED	emwin/emWin_header/MENU.h	80;"	d
MENU_IF_SEPARATOR	emwin/emWin_header/MENU.h	81;"	d
MENU_INIT_ID	emwin/emWin_header/MENU_Private.h	133;"	d
MENU_INIT_ID	emwin/emWin_header/MENU_Private.h	135;"	d
MENU_IS_MENU	emwin/emWin_header/MENU.h	111;"	d
MENU_ITEM	emwin/emWin_header/MENU_Private.h	/^} MENU_ITEM;$/;"	t	typeref:struct:__anon317
MENU_ITEM_DATA	emwin/emWin_header/MENU.h	/^} MENU_ITEM_DATA;$/;"	t	typeref:struct:__anon232
MENU_LOCK_H	emwin/emWin_header/MENU_Private.h	140;"	d
MENU_LOCK_H	emwin/emWin_header/MENU_Private.h	142;"	d
MENU_MSG_DATA	emwin/emWin_header/MENU.h	/^} MENU_MSG_DATA;$/;"	t	typeref:struct:__anon231
MENU_ON_CLOSE	emwin/emWin_header/MENU.h	110;"	d
MENU_ON_INITMENU	emwin/emWin_header/MENU.h	107;"	d
MENU_ON_INITSUBMENU	emwin/emWin_header/MENU.h	108;"	d
MENU_ON_ITEMACTIVATE	emwin/emWin_header/MENU.h	113;"	d
MENU_ON_ITEMPRESSED	emwin/emWin_header/MENU.h	114;"	d
MENU_ON_ITEMSELECT	emwin/emWin_header/MENU.h	106;"	d
MENU_ON_OPEN	emwin/emWin_header/MENU.h	109;"	d
MENU_Obj	emwin/emWin_header/MENU_Private.h	/^} MENU_Obj;$/;"	t	typeref:struct:__anon319
MENU_PRIVATE_H	emwin/emWin_header/MENU_Private.h	46;"	d
MENU_PROPS	emwin/emWin_header/MENU_Private.h	/^} MENU_PROPS;$/;"	t	typeref:struct:__anon318
MENU_SF_ACTIVE	emwin/emWin_header/MENU_Private.h	70;"	d
MENU_SF_ARROW	emwin/emWin_header/MENU_Private.h	72;"	d
MENU_SF_CLOSE_ON_SECOND_CLICK	emwin/emWin_header/MENU_Private.h	67;"	d
MENU_SF_HIDE_DISABLED_SEL	emwin/emWin_header/MENU_Private.h	68;"	d
MENU_SF_HORIZONTAL	emwin/emWin_header/MENU_Private.h	64;"	d
MENU_SF_OPEN_ON_POINTEROVER	emwin/emWin_header/MENU_Private.h	66;"	d
MENU_SF_POPUP	emwin/emWin_header/MENU_Private.h	71;"	d
MENU_SF_VERTICAL	emwin/emWin_header/MENU_Private.h	65;"	d
MENU_SKINFLEX_PI_ACTIVE_SUBMENU	emwin/emWin_header/MENU.h	124;"	d
MENU_SKINFLEX_PI_DISABLED	emwin/emWin_header/MENU.h	122;"	d
MENU_SKINFLEX_PI_DISABLED_SEL	emwin/emWin_header/MENU.h	123;"	d
MENU_SKINFLEX_PI_ENABLED	emwin/emWin_header/MENU.h	120;"	d
MENU_SKINFLEX_PI_SELECTED	emwin/emWin_header/MENU.h	121;"	d
MENU_SKINFLEX_PROPS	emwin/emWin_header/MENU.h	/^} MENU_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon230
MENU_SKIN_FLEX	emwin/emWin_header/MENU.h	64;"	d
MENU_SKIN_PRIVATE	emwin/emWin_header/MENU_Private.h	/^} MENU_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon316
MESSAGEBOX_H	emwin/emWin_header/MESSAGEBOX.h	46;"	d
MIB2_COPY_SYSUPTIME_TO	lwip/src/include/lwip/snmp.h	136;"	d
MIB2_COPY_SYSUPTIME_TO	lwip/src/include/lwip/snmp.h	98;"	d
MIB2_INIT_NETIF	lwip/src/include/lwip/snmp.h	119;"	d
MIB2_INIT_NETIF	lwip/src/include/lwip/snmp.h	138;"	d
MIB2_STATS	lwip/src/include/lwip/opt.h	2230;"	d
MIB2_STATS	lwip/src/include/lwip/opt.h	2252;"	d
MIB2_STATS_INC	lwip/src/include/lwip/stats.h	465;"	d
MIB2_STATS_INC	lwip/src/include/lwip/stats.h	467;"	d
MIB2_STATS_NETIF_ADD	lwip/src/include/lwip/snmp.h	110;"	d
MIB2_STATS_NETIF_ADD	lwip/src/include/lwip/snmp.h	140;"	d
MIB2_STATS_NETIF_INC	lwip/src/include/lwip/snmp.h	105;"	d
MIB2_STATS_NETIF_INC	lwip/src/include/lwip/snmp.h	139;"	d
MIN	codec2/quantise.c	414;"	d	file:
MIN	drivers/fsl_common.h	183;"	d
MINTSTS	device/LPC54018.h	/^  __I  uint32_t MINTSTS;                           \/**< Masked Interrupt Status register, offset: 0x40 *\/$/;"	m	struct:__anon177
MIN_SIZE	lwip/src/core/mem.c	366;"	d	file:
MIN_SIZE_ALIGNED	lwip/src/core/mem.c	369;"	d	file:
MIRROR	emwin/emWin_header/GUIDRV_Lin_Private.h	314;"	d
MIRROR	emwin/emWin_header/GUIDRV_Lin_Private.h	319;"	d
MISRAC_DISABLE	osa/usb_osa_freertos.h	17;"	d
MISRAC_DISABLE	osa/usb_osa_freertos.h	56;"	d
MISRAC_ENABLE	osa/usb_osa_freertos.h	36;"	d
MISRAC_ENABLE	osa/usb_osa_freertos.h	57;"	d
MLD6_GROUP_DELAYING_MEMBER	lwip/src/core/ipv6/mld6.c	80;"	d	file:
MLD6_GROUP_IDLE_MEMBER	lwip/src/core/ipv6/mld6.c	81;"	d	file:
MLD6_GROUP_NON_MEMBER	lwip/src/core/ipv6/mld6.c	79;"	d	file:
MLD6_HBH_HLEN	lwip/src/include/lwip/prot/mld6.h	47;"	d
MLD6_HL	lwip/src/core/ipv6/mld6.c	76;"	d	file:
MLD6_JOIN_DELAYING_MEMBER_TMR_MS	lwip/src/core/ipv6/mld6.c	77;"	d	file:
MLD6_STATS	lwip/src/include/lwip/opt.h	2216;"	d
MLD6_STATS	lwip/src/include/lwip/opt.h	2250;"	d
MLD6_STATS_DISPLAY	lwip/src/include/lwip/stats.h	450;"	d
MLD6_STATS_DISPLAY	lwip/src/include/lwip/stats.h	453;"	d
MLD6_STATS_INC	lwip/src/include/lwip/stats.h	449;"	d
MLD6_STATS_INC	lwip/src/include/lwip/stats.h	452;"	d
MLD6_TMR_INTERVAL	lwip/src/include/lwip/mld6.h	73;"	d
MMFAR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t MMFAR;                  \/*!< Offset: 0x034 (R\/W)  MemManage Fault Address Register *\/$/;"	m	struct:__anon18
MMFAR	CMSIS/core_cm4.h	/^  __IOM uint32_t MMFAR;                  \/*!< Offset: 0x034 (R\/W)  MemManage Fault Address Register *\/$/;"	m	struct:__anon40
MMFR	CMSIS/core_cm4.h	/^  __IM  uint32_t MMFR[4U];               \/*!< Offset: 0x050 (R\/ )  Memory Model Feature Register *\/$/;"	m	struct:__anon40
MOD	device/LPC54018.h	/^  __IO uint32_t MOD;                               \/**< Watchdog mode register. This register contains the basic mode and status of the Watchdog Timer., offset: 0x0 *\/$/;"	m	struct:__anon192
MODCFG	device/LPC54018.h	/^  __IO uint32_t MODCFG;                            \/**< Module Configuration register. This register provides information about this particular MRT instance, and allows choosing an overall mode for the idle channel feature., offset: 0xF0 *\/$/;"	m	struct:__anon166
MODE	device/LPC54018.h	/^  __IO uint32_t MODE;                              \/**< CRC mode register, offset: 0x0 *\/$/;"	m	struct:__anon143
MODEL	codec2/defines.h	/^} MODEL;$/;"	t	typeref:struct:__anon135
MODEM_STATS	codec2/modem_stats.h	/^struct MODEM_STATS {$/;"	s
MODEM_STATS_ET_MAX	codec2/modem_stats.h	40;"	d
MODEM_STATS_MAX_F_EST	codec2/modem_stats.h	43;"	d
MODEM_STATS_MAX_F_HZ	codec2/modem_stats.h	42;"	d
MODEM_STATS_NC_MAX	codec2/modem_stats.h	38;"	d
MODEM_STATS_NR_MAX	codec2/modem_stats.h	39;"	d
MODEM_STATS_NSPEC	codec2/modem_stats.h	41;"	d
MODE_2FSK	codec2/fsk.h	36;"	d
MODE_4FSK	codec2/fsk.h	37;"	d
MODE_FSK	radio/sx1276.h	/^    MODE_FSK                =   0x00,       \/\/FSK mode$/;"	e	enum:__anon486
MODE_LORA	radio/sx1276.h	/^   	MODE_LORA               =   0x01,       \/\/LoRa mode$/;"	e	enum:__anon486
MODE_M_MAX	codec2/fsk.h	39;"	d
MODULE_DESC_LEN	source/common.h	28;"	d
MONO	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(MONO);$/;"	v
MONRXDAT	device/LPC54018.h	/^  __I  uint32_t MONRXDAT;                          \/**< Monitor receiver data register., offset: 0x880 *\/$/;"	m	struct:__anon160
MPAGECLNT_ID	emwin/emWin_header/WIDGET.h	114;"	d
MPIN	device/LPC54018.h	/^  __IO uint32_t MPIN[6];                           \/**< Masked port register, array offset: 0x2180, array step: 0x4 *\/$/;"	m	struct:__anon159
MPPE_ALL_BITS	lwip/src/include/netif/ppp/mppe.h	77;"	d
MPPE_BITS	lwip/src/netif/ppp/mppe.c	50;"	d	file:
MPPE_BIT_A	lwip/src/netif/ppp/mppe.c	42;"	d	file:
MPPE_BIT_B	lwip/src/netif/ppp/mppe.c	43;"	d	file:
MPPE_BIT_C	lwip/src/netif/ppp/mppe.c	44;"	d	file:
MPPE_BIT_D	lwip/src/netif/ppp/mppe.c	45;"	d	file:
MPPE_BIT_ENCRYPTED	lwip/src/netif/ppp/mppe.c	48;"	d	file:
MPPE_BIT_FLUSHED	lwip/src/netif/ppp/mppe.c	47;"	d	file:
MPPE_CCOUNT	lwip/src/netif/ppp/mppe.c	51;"	d	file:
MPPE_CCOUNT_SPACE	lwip/src/netif/ppp/mppe.c	52;"	d	file:
MPPE_CI_TO_OPTS	lwip/src/include/netif/ppp/mppe.h	102;"	d
MPPE_C_BIT	lwip/src/include/netif/ppp/mppe.h	69;"	d
MPPE_D_BIT	lwip/src/include/netif/ppp/mppe.h	70;"	d
MPPE_H	lwip/src/include/netif/ppp/mppe.h	40;"	d
MPPE_H_BIT	lwip/src/include/netif/ppp/mppe.h	74;"	d
MPPE_L_BIT	lwip/src/include/netif/ppp/mppe.h	71;"	d
MPPE_MAX_KEY_LEN	lwip/src/include/netif/ppp/mppe.h	49;"	d
MPPE_M_BIT	lwip/src/include/netif/ppp/mppe.h	73;"	d
MPPE_OPTS_TO_CI	lwip/src/include/netif/ppp/mppe.h	80;"	d
MPPE_OPT_128	lwip/src/include/netif/ppp/mppe.h	53;"	d
MPPE_OPT_40	lwip/src/include/netif/ppp/mppe.h	52;"	d
MPPE_OPT_56	lwip/src/include/netif/ppp/mppe.h	56;"	d
MPPE_OPT_D	lwip/src/include/netif/ppp/mppe.h	58;"	d
MPPE_OPT_MPPC	lwip/src/include/netif/ppp/mppe.h	57;"	d
MPPE_OPT_STATEFUL	lwip/src/include/netif/ppp/mppe.h	54;"	d
MPPE_OPT_UNKNOWN	lwip/src/include/netif/ppp/mppe.h	60;"	d
MPPE_OPT_UNSUPPORTED	lwip/src/include/netif/ppp/mppe.h	59;"	d
MPPE_OVHD	lwip/src/netif/ppp/mppe.c	54;"	d	file:
MPPE_PAD	lwip/src/include/netif/ppp/mppe.h	48;"	d
MPPE_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	245;"	d
MPPE_S_BIT	lwip/src/include/netif/ppp/mppe.h	72;"	d
MPU	CMSIS/core_armv8mbl.h	1185;"	d
MPU	CMSIS/core_armv8mml.h	2047;"	d
MPU	CMSIS/core_cm4.h	1571;"	d
MPU_BASE	CMSIS/core_armv8mbl.h	1184;"	d
MPU_BASE	CMSIS/core_armv8mml.h	2046;"	d
MPU_BASE	CMSIS/core_cm4.h	1570;"	d
MPU_BASE_NS	CMSIS/core_armv8mbl.h	1206;"	d
MPU_BASE_NS	CMSIS/core_armv8mml.h	2072;"	d
MPU_CTRL_ENABLE_Msk	CMSIS/core_armv8mbl.h	915;"	d
MPU_CTRL_ENABLE_Msk	CMSIS/core_armv8mml.h	1583;"	d
MPU_CTRL_ENABLE_Msk	CMSIS/core_cm4.h	1255;"	d
MPU_CTRL_ENABLE_Pos	CMSIS/core_armv8mbl.h	914;"	d
MPU_CTRL_ENABLE_Pos	CMSIS/core_armv8mml.h	1582;"	d
MPU_CTRL_ENABLE_Pos	CMSIS/core_cm4.h	1254;"	d
MPU_CTRL_HFNMIENA_Msk	CMSIS/core_armv8mbl.h	912;"	d
MPU_CTRL_HFNMIENA_Msk	CMSIS/core_armv8mml.h	1580;"	d
MPU_CTRL_HFNMIENA_Msk	CMSIS/core_cm4.h	1252;"	d
MPU_CTRL_HFNMIENA_Pos	CMSIS/core_armv8mbl.h	911;"	d
MPU_CTRL_HFNMIENA_Pos	CMSIS/core_armv8mml.h	1579;"	d
MPU_CTRL_HFNMIENA_Pos	CMSIS/core_cm4.h	1251;"	d
MPU_CTRL_PRIVDEFENA_Msk	CMSIS/core_armv8mbl.h	909;"	d
MPU_CTRL_PRIVDEFENA_Msk	CMSIS/core_armv8mml.h	1577;"	d
MPU_CTRL_PRIVDEFENA_Msk	CMSIS/core_cm4.h	1249;"	d
MPU_CTRL_PRIVDEFENA_Pos	CMSIS/core_armv8mbl.h	908;"	d
MPU_CTRL_PRIVDEFENA_Pos	CMSIS/core_armv8mml.h	1576;"	d
MPU_CTRL_PRIVDEFENA_Pos	CMSIS/core_cm4.h	1248;"	d
MPU_MAIR0_Attr0_Msk	CMSIS/core_armv8mbl.h	955;"	d
MPU_MAIR0_Attr0_Msk	CMSIS/core_armv8mml.h	1623;"	d
MPU_MAIR0_Attr0_Pos	CMSIS/core_armv8mbl.h	954;"	d
MPU_MAIR0_Attr0_Pos	CMSIS/core_armv8mml.h	1622;"	d
MPU_MAIR0_Attr1_Msk	CMSIS/core_armv8mbl.h	952;"	d
MPU_MAIR0_Attr1_Msk	CMSIS/core_armv8mml.h	1620;"	d
MPU_MAIR0_Attr1_Pos	CMSIS/core_armv8mbl.h	951;"	d
MPU_MAIR0_Attr1_Pos	CMSIS/core_armv8mml.h	1619;"	d
MPU_MAIR0_Attr2_Msk	CMSIS/core_armv8mbl.h	949;"	d
MPU_MAIR0_Attr2_Msk	CMSIS/core_armv8mml.h	1617;"	d
MPU_MAIR0_Attr2_Pos	CMSIS/core_armv8mbl.h	948;"	d
MPU_MAIR0_Attr2_Pos	CMSIS/core_armv8mml.h	1616;"	d
MPU_MAIR0_Attr3_Msk	CMSIS/core_armv8mbl.h	946;"	d
MPU_MAIR0_Attr3_Msk	CMSIS/core_armv8mml.h	1614;"	d
MPU_MAIR0_Attr3_Pos	CMSIS/core_armv8mbl.h	945;"	d
MPU_MAIR0_Attr3_Pos	CMSIS/core_armv8mml.h	1613;"	d
MPU_MAIR1_Attr4_Msk	CMSIS/core_armv8mbl.h	968;"	d
MPU_MAIR1_Attr4_Msk	CMSIS/core_armv8mml.h	1636;"	d
MPU_MAIR1_Attr4_Pos	CMSIS/core_armv8mbl.h	967;"	d
MPU_MAIR1_Attr4_Pos	CMSIS/core_armv8mml.h	1635;"	d
MPU_MAIR1_Attr5_Msk	CMSIS/core_armv8mbl.h	965;"	d
MPU_MAIR1_Attr5_Msk	CMSIS/core_armv8mml.h	1633;"	d
MPU_MAIR1_Attr5_Pos	CMSIS/core_armv8mbl.h	964;"	d
MPU_MAIR1_Attr5_Pos	CMSIS/core_armv8mml.h	1632;"	d
MPU_MAIR1_Attr6_Msk	CMSIS/core_armv8mbl.h	962;"	d
MPU_MAIR1_Attr6_Msk	CMSIS/core_armv8mml.h	1630;"	d
MPU_MAIR1_Attr6_Pos	CMSIS/core_armv8mbl.h	961;"	d
MPU_MAIR1_Attr6_Pos	CMSIS/core_armv8mml.h	1629;"	d
MPU_MAIR1_Attr7_Msk	CMSIS/core_armv8mbl.h	959;"	d
MPU_MAIR1_Attr7_Msk	CMSIS/core_armv8mml.h	1627;"	d
MPU_MAIR1_Attr7_Pos	CMSIS/core_armv8mbl.h	958;"	d
MPU_MAIR1_Attr7_Pos	CMSIS/core_armv8mml.h	1626;"	d
MPU_NS	CMSIS/core_armv8mbl.h	1207;"	d
MPU_NS	CMSIS/core_armv8mml.h	2073;"	d
MPU_PROTOTYPES_H	amazon-freertos/include/mpu_prototypes.h	38;"	d
MPU_RASR_AP_Msk	CMSIS/core_cm4.h	1279;"	d
MPU_RASR_AP_Pos	CMSIS/core_cm4.h	1278;"	d
MPU_RASR_ATTRS_Msk	CMSIS/core_cm4.h	1273;"	d
MPU_RASR_ATTRS_Pos	CMSIS/core_cm4.h	1272;"	d
MPU_RASR_B_Msk	CMSIS/core_cm4.h	1291;"	d
MPU_RASR_B_Pos	CMSIS/core_cm4.h	1290;"	d
MPU_RASR_C_Msk	CMSIS/core_cm4.h	1288;"	d
MPU_RASR_C_Pos	CMSIS/core_cm4.h	1287;"	d
MPU_RASR_ENABLE_Msk	CMSIS/core_cm4.h	1300;"	d
MPU_RASR_ENABLE_Pos	CMSIS/core_cm4.h	1299;"	d
MPU_RASR_SIZE_Msk	CMSIS/core_cm4.h	1297;"	d
MPU_RASR_SIZE_Pos	CMSIS/core_cm4.h	1296;"	d
MPU_RASR_SRD_Msk	CMSIS/core_cm4.h	1294;"	d
MPU_RASR_SRD_Pos	CMSIS/core_cm4.h	1293;"	d
MPU_RASR_S_Msk	CMSIS/core_cm4.h	1285;"	d
MPU_RASR_S_Pos	CMSIS/core_cm4.h	1284;"	d
MPU_RASR_TEX_Msk	CMSIS/core_cm4.h	1282;"	d
MPU_RASR_TEX_Pos	CMSIS/core_cm4.h	1281;"	d
MPU_RASR_XN_Msk	CMSIS/core_cm4.h	1276;"	d
MPU_RASR_XN_Pos	CMSIS/core_cm4.h	1275;"	d
MPU_RBAR_ADDR_Msk	CMSIS/core_armv8mml.h	1591;"	d
MPU_RBAR_ADDR_Msk	CMSIS/core_cm4.h	1263;"	d
MPU_RBAR_ADDR_Pos	CMSIS/core_armv8mml.h	1590;"	d
MPU_RBAR_ADDR_Pos	CMSIS/core_cm4.h	1262;"	d
MPU_RBAR_AP_Msk	CMSIS/core_armv8mbl.h	929;"	d
MPU_RBAR_AP_Msk	CMSIS/core_armv8mml.h	1597;"	d
MPU_RBAR_AP_Pos	CMSIS/core_armv8mbl.h	928;"	d
MPU_RBAR_AP_Pos	CMSIS/core_armv8mml.h	1596;"	d
MPU_RBAR_BASE_Msk	CMSIS/core_armv8mbl.h	923;"	d
MPU_RBAR_BASE_Pos	CMSIS/core_armv8mbl.h	922;"	d
MPU_RBAR_REGION_Msk	CMSIS/core_cm4.h	1269;"	d
MPU_RBAR_REGION_Pos	CMSIS/core_cm4.h	1268;"	d
MPU_RBAR_SH_Msk	CMSIS/core_armv8mbl.h	926;"	d
MPU_RBAR_SH_Msk	CMSIS/core_armv8mml.h	1594;"	d
MPU_RBAR_SH_Pos	CMSIS/core_armv8mbl.h	925;"	d
MPU_RBAR_SH_Pos	CMSIS/core_armv8mml.h	1593;"	d
MPU_RBAR_VALID_Msk	CMSIS/core_cm4.h	1266;"	d
MPU_RBAR_VALID_Pos	CMSIS/core_cm4.h	1265;"	d
MPU_RBAR_XN_Msk	CMSIS/core_armv8mbl.h	932;"	d
MPU_RBAR_XN_Msk	CMSIS/core_armv8mml.h	1600;"	d
MPU_RBAR_XN_Pos	CMSIS/core_armv8mbl.h	931;"	d
MPU_RBAR_XN_Pos	CMSIS/core_armv8mml.h	1599;"	d
MPU_RLAR_AttrIndx_Msk	CMSIS/core_armv8mbl.h	939;"	d
MPU_RLAR_AttrIndx_Msk	CMSIS/core_armv8mml.h	1607;"	d
MPU_RLAR_AttrIndx_Pos	CMSIS/core_armv8mbl.h	938;"	d
MPU_RLAR_AttrIndx_Pos	CMSIS/core_armv8mml.h	1606;"	d
MPU_RLAR_EN_Msk	CMSIS/core_armv8mbl.h	942;"	d
MPU_RLAR_EN_Msk	CMSIS/core_armv8mml.h	1610;"	d
MPU_RLAR_EN_Pos	CMSIS/core_armv8mbl.h	941;"	d
MPU_RLAR_EN_Pos	CMSIS/core_armv8mml.h	1609;"	d
MPU_RLAR_LIMIT_Msk	CMSIS/core_armv8mbl.h	936;"	d
MPU_RLAR_LIMIT_Msk	CMSIS/core_armv8mml.h	1604;"	d
MPU_RLAR_LIMIT_Pos	CMSIS/core_armv8mbl.h	935;"	d
MPU_RLAR_LIMIT_Pos	CMSIS/core_armv8mml.h	1603;"	d
MPU_RNR_REGION_Msk	CMSIS/core_armv8mbl.h	919;"	d
MPU_RNR_REGION_Msk	CMSIS/core_armv8mml.h	1587;"	d
MPU_RNR_REGION_Msk	CMSIS/core_cm4.h	1259;"	d
MPU_RNR_REGION_Pos	CMSIS/core_armv8mbl.h	918;"	d
MPU_RNR_REGION_Pos	CMSIS/core_armv8mml.h	1586;"	d
MPU_RNR_REGION_Pos	CMSIS/core_cm4.h	1258;"	d
MPU_TYPE_DREGION_Msk	CMSIS/core_armv8mbl.h	902;"	d
MPU_TYPE_DREGION_Msk	CMSIS/core_armv8mml.h	1570;"	d
MPU_TYPE_DREGION_Msk	CMSIS/core_cm4.h	1242;"	d
MPU_TYPE_DREGION_Pos	CMSIS/core_armv8mbl.h	901;"	d
MPU_TYPE_DREGION_Pos	CMSIS/core_armv8mml.h	1569;"	d
MPU_TYPE_DREGION_Pos	CMSIS/core_cm4.h	1241;"	d
MPU_TYPE_IREGION_Msk	CMSIS/core_armv8mbl.h	899;"	d
MPU_TYPE_IREGION_Msk	CMSIS/core_armv8mml.h	1567;"	d
MPU_TYPE_IREGION_Msk	CMSIS/core_cm4.h	1239;"	d
MPU_TYPE_IREGION_Pos	CMSIS/core_armv8mbl.h	898;"	d
MPU_TYPE_IREGION_Pos	CMSIS/core_armv8mml.h	1566;"	d
MPU_TYPE_IREGION_Pos	CMSIS/core_cm4.h	1238;"	d
MPU_TYPE_RALIASES	CMSIS/core_armv8mbl.h	895;"	d
MPU_TYPE_RALIASES	CMSIS/core_armv8mml.h	1563;"	d
MPU_TYPE_RALIASES	CMSIS/core_cm4.h	1235;"	d
MPU_TYPE_SEPARATE_Msk	CMSIS/core_armv8mbl.h	905;"	d
MPU_TYPE_SEPARATE_Msk	CMSIS/core_armv8mml.h	1573;"	d
MPU_TYPE_SEPARATE_Msk	CMSIS/core_cm4.h	1245;"	d
MPU_TYPE_SEPARATE_Pos	CMSIS/core_armv8mbl.h	904;"	d
MPU_TYPE_SEPARATE_Pos	CMSIS/core_armv8mml.h	1572;"	d
MPU_TYPE_SEPARATE_Pos	CMSIS/core_cm4.h	1244;"	d
MPU_Type	CMSIS/core_armv8mbl.h	/^} MPU_Type;$/;"	t	typeref:struct:__anon126
MPU_Type	CMSIS/core_armv8mml.h	/^} MPU_Type;$/;"	t	typeref:struct:__anon25
MPU_Type	CMSIS/core_cm4.h	/^} MPU_Type;$/;"	t	typeref:struct:__anon47
MPU_WRAPPERS_H	amazon-freertos/include/mpu_wrappers.h	29;"	d
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/event_groups.c	34;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/event_groups.c	46;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_1.c	41;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_1.c	46;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_2.c	42;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_2.c	47;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_3.c	45;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_3.c	50;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_4.c	41;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_4.c	46;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_5.c	75;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/portable/heap_5.c	80;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/queue.c	34;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/queue.c	48;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/stream_buffer.c	35;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/stream_buffer.c	50;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/tasks.c	35;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/tasks.c	47;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/timers.c	34;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	amazon-freertos/freertos/timers.c	49;"	d	file:
MQTTFILES	lwip/src/Filelists.mk	/^MQTTFILES=$(LWIPDIR)\/apps\/mqtt\/mqtt.c$/;"	m
MR	device/LPC54018.h	/^  __IO uint32_t MR[4];                             \/**< Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and\/or generate an interrupt every time MR matches the TC., array offset: 0x18, array step: 0x4 *\/$/;"	m	struct:__anon145
MRBA	device/LPC54018.h	/^  __IO uint32_t MRBA;                              \/**< CAN Message RAM Base Address, offset: 0x200 *\/$/;"	m	struct:__anon142
MRT0	device/LPC54018.h	7548;"	d
MRT0_BASE	device/LPC54018.h	7546;"	d
MRT0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void MRT0_IRQHandler(void)$/;"	f
MRT0_IRQn	device/LPC54018.h	/^  MRT0_IRQn                    = 9,                \/**< Multi-rate timer *\/$/;"	e	enum:IRQn
MRT_BASE_ADDRS	device/LPC54018.h	7550;"	d
MRT_BASE_PTRS	device/LPC54018.h	7552;"	d
MRT_CHANNEL_CTRL_COUNT	device/LPC54018.h	7458;"	d
MRT_CHANNEL_CTRL_INTEN	device/LPC54018.h	7445;"	d
MRT_CHANNEL_CTRL_INTEN_MASK	device/LPC54018.h	7439;"	d
MRT_CHANNEL_CTRL_INTEN_SHIFT	device/LPC54018.h	7440;"	d
MRT_CHANNEL_CTRL_MODE	device/LPC54018.h	7454;"	d
MRT_CHANNEL_CTRL_MODE_MASK	device/LPC54018.h	7446;"	d
MRT_CHANNEL_CTRL_MODE_SHIFT	device/LPC54018.h	7447;"	d
MRT_CHANNEL_INTVAL_COUNT	device/LPC54018.h	7425;"	d
MRT_CHANNEL_INTVAL_IVALUE	device/LPC54018.h	7412;"	d
MRT_CHANNEL_INTVAL_IVALUE_MASK	device/LPC54018.h	7410;"	d
MRT_CHANNEL_INTVAL_IVALUE_SHIFT	device/LPC54018.h	7411;"	d
MRT_CHANNEL_INTVAL_LOAD	device/LPC54018.h	7421;"	d
MRT_CHANNEL_INTVAL_LOAD_MASK	device/LPC54018.h	7413;"	d
MRT_CHANNEL_INTVAL_LOAD_SHIFT	device/LPC54018.h	7414;"	d
MRT_CHANNEL_STAT_COUNT	device/LPC54018.h	7490;"	d
MRT_CHANNEL_STAT_INTFLAG	device/LPC54018.h	7470;"	d
MRT_CHANNEL_STAT_INTFLAG_MASK	device/LPC54018.h	7462;"	d
MRT_CHANNEL_STAT_INTFLAG_SHIFT	device/LPC54018.h	7463;"	d
MRT_CHANNEL_STAT_INUSE	device/LPC54018.h	7486;"	d
MRT_CHANNEL_STAT_INUSE_MASK	device/LPC54018.h	7478;"	d
MRT_CHANNEL_STAT_INUSE_SHIFT	device/LPC54018.h	7479;"	d
MRT_CHANNEL_STAT_RUN	device/LPC54018.h	7477;"	d
MRT_CHANNEL_STAT_RUN_MASK	device/LPC54018.h	7471;"	d
MRT_CHANNEL_STAT_RUN_SHIFT	device/LPC54018.h	7472;"	d
MRT_CHANNEL_TIMER_COUNT	device/LPC54018.h	7435;"	d
MRT_CHANNEL_TIMER_VALUE	device/LPC54018.h	7431;"	d
MRT_CHANNEL_TIMER_VALUE_MASK	device/LPC54018.h	7429;"	d
MRT_CHANNEL_TIMER_VALUE_SHIFT	device/LPC54018.h	7430;"	d
MRT_CLOCKS	drivers/fsl_clock.h	146;"	d
MRT_IDLE_CH_CHAN	device/LPC54018.h	7513;"	d
MRT_IDLE_CH_CHAN_MASK	device/LPC54018.h	7511;"	d
MRT_IDLE_CH_CHAN_SHIFT	device/LPC54018.h	7512;"	d
MRT_IRQS	device/LPC54018.h	7554;"	d
MRT_IRQ_FLAG_GFLAG0	device/LPC54018.h	7526;"	d
MRT_IRQ_FLAG_GFLAG0_MASK	device/LPC54018.h	7518;"	d
MRT_IRQ_FLAG_GFLAG0_SHIFT	device/LPC54018.h	7519;"	d
MRT_IRQ_FLAG_GFLAG1	device/LPC54018.h	7529;"	d
MRT_IRQ_FLAG_GFLAG1_MASK	device/LPC54018.h	7527;"	d
MRT_IRQ_FLAG_GFLAG1_SHIFT	device/LPC54018.h	7528;"	d
MRT_IRQ_FLAG_GFLAG2	device/LPC54018.h	7532;"	d
MRT_IRQ_FLAG_GFLAG2_MASK	device/LPC54018.h	7530;"	d
MRT_IRQ_FLAG_GFLAG2_SHIFT	device/LPC54018.h	7531;"	d
MRT_IRQ_FLAG_GFLAG3	device/LPC54018.h	7535;"	d
MRT_IRQ_FLAG_GFLAG3_MASK	device/LPC54018.h	7533;"	d
MRT_IRQ_FLAG_GFLAG3_SHIFT	device/LPC54018.h	7534;"	d
MRT_MODCFG_MULTITASK	device/LPC54018.h	7506;"	d
MRT_MODCFG_MULTITASK_MASK	device/LPC54018.h	7500;"	d
MRT_MODCFG_MULTITASK_SHIFT	device/LPC54018.h	7501;"	d
MRT_MODCFG_NOB	device/LPC54018.h	7499;"	d
MRT_MODCFG_NOB_MASK	device/LPC54018.h	7497;"	d
MRT_MODCFG_NOB_SHIFT	device/LPC54018.h	7498;"	d
MRT_MODCFG_NOC	device/LPC54018.h	7496;"	d
MRT_MODCFG_NOC_MASK	device/LPC54018.h	7494;"	d
MRT_MODCFG_NOC_SHIFT	device/LPC54018.h	7495;"	d
MRT_RSTS	drivers/fsl_reset.h	163;"	d
MRT_Type	device/LPC54018.h	/^} MRT_Type;$/;"	t	typeref:struct:__anon166
MSCCAPA16_ARRAY	usb/device/class/usb_device_msc.c	122;"	d	file:
MSCCAPA16_ARRAY	usb/device/class/usb_device_msc.c	63;"	d	file:
MSCCAPA16_ARRAY	usb/device/class/usb_device_msc.c	88;"	d	file:
MSCCBW_ARRAY	usb/device/class/usb_device_msc.c	51;"	d	file:
MSCCBW_ARRAY	usb/device/class/usb_device_msc.c	68;"	d	file:
MSCCBW_ARRAY	usb/device/class/usb_device_msc.c	94;"	d	file:
MSCCPAP_ARRAY	usb/device/class/usb_device_msc.c	121;"	d	file:
MSCCPAP_ARRAY	usb/device/class/usb_device_msc.c	62;"	d	file:
MSCCPAP_ARRAY	usb/device/class/usb_device_msc.c	87;"	d	file:
MSCCSW_ARRAY	usb/device/class/usb_device_msc.c	53;"	d	file:
MSCCSW_ARRAY	usb/device/class/usb_device_msc.c	71;"	d	file:
MSCCSW_ARRAY	usb/device/class/usb_device_msc.c	98;"	d	file:
MSCFORMAT_ARRAY	usb/device/class/usb_device_msc.c	124;"	d	file:
MSCFORMAT_ARRAY	usb/device/class/usb_device_msc.c	64;"	d	file:
MSCFORMAT_ARRAY	usb/device/class/usb_device_msc.c	89;"	d	file:
MSCHAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	219;"	d
MSCHAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	252;"	d
MSCHAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	253;"	d
MSCSENSE_ARRAY	usb/device/class/usb_device_msc.c	120;"	d	file:
MSCSENSE_ARRAY	usb/device/class/usb_device_msc.c	61;"	d	file:
MSCSENSE_ARRAY	usb/device/class/usb_device_msc.c	86;"	d	file:
MSEC_TO_COUNT	drivers/fsl_common.h	215;"	d
MSEC_TO_TICK	osa/usb_osa_freertos.c	18;"	d	file:
MSG_CTRUNC	lwip/src/include/lwip/sockets.h	139;"	d
MSG_DONTWAIT	lwip/src/include/lwip/sockets.h	263;"	d
MSG_MORE	lwip/src/include/lwip/sockets.h	264;"	d
MSG_NOSIGNAL	lwip/src/include/lwip/sockets.h	265;"	d
MSG_OOB	lwip/src/include/lwip/sockets.h	262;"	d
MSG_PEEK	lwip/src/include/lwip/sockets.h	260;"	d
MSG_TRUNC	lwip/src/include/lwip/sockets.h	138;"	d
MSG_WAITALL	lwip/src/include/lwip/sockets.h	261;"	d
MSR	device/LPC54018.h	/^  __IO uint32_t MSR[4];                            \/**< Match Shadow Register, array offset: 0x78, array step: 0x4 *\/$/;"	m	struct:__anon145
MSTCTL	device/LPC54018.h	/^  __IO uint32_t MSTCTL;                            \/**< Master control register., offset: 0x820 *\/$/;"	m	struct:__anon160
MSTDAT	device/LPC54018.h	/^  __IO uint32_t MSTDAT;                            \/**< Combined Master receiver and transmitter data register., offset: 0x828 *\/$/;"	m	struct:__anon160
MSTTIME	device/LPC54018.h	/^  __IO uint32_t MSTTIME;                           \/**< Master timing configuration., offset: 0x824 *\/$/;"	m	struct:__anon160
MS_AUTH_RESPONSE_LENGTH	lwip/src/netif/ppp/chap_ms.c	106;"	d	file:
MS_CHAP2_AUTHENTICATEE	lwip/src/netif/ppp/chap_ms.c	150;"	d	file:
MS_CHAP2_AUTHENTICATOR	lwip/src/netif/ppp/chap_ms.c	151;"	d	file:
MS_CHAP2_FLAGS	lwip/src/netif/ppp/chap_ms.c	134;"	d	file:
MS_CHAP2_NTRESP	lwip/src/netif/ppp/chap_ms.c	132;"	d	file:
MS_CHAP2_NTRESP_LEN	lwip/src/netif/ppp/chap_ms.c	133;"	d	file:
MS_CHAP2_PEER_CHALLENGE	lwip/src/netif/ppp/chap_ms.c	129;"	d	file:
MS_CHAP2_PEER_CHAL_LEN	lwip/src/netif/ppp/chap_ms.c	130;"	d	file:
MS_CHAP2_RESERVED_LEN	lwip/src/netif/ppp/chap_ms.c	131;"	d	file:
MS_CHAP2_RESPONSE_LEN	lwip/src/netif/ppp/chap_ms.c	105;"	d	file:
MS_CHAP_ERROR_ACCT_DISABLED	lwip/src/netif/ppp/chap_ms.c	111;"	d	file:
MS_CHAP_ERROR_AUTHENTICATION_FAILURE	lwip/src/netif/ppp/chap_ms.c	114;"	d	file:
MS_CHAP_ERROR_CHANGING_PASSWORD	lwip/src/netif/ppp/chap_ms.c	115;"	d	file:
MS_CHAP_ERROR_NO_DIALIN_PERMISSION	lwip/src/netif/ppp/chap_ms.c	113;"	d	file:
MS_CHAP_ERROR_PASSWD_EXPIRED	lwip/src/netif/ppp/chap_ms.c	112;"	d	file:
MS_CHAP_ERROR_RESTRICTED_LOGON_HOURS	lwip/src/netif/ppp/chap_ms.c	110;"	d	file:
MS_CHAP_LANMANRESP	lwip/src/netif/ppp/chap_ms.c	120;"	d	file:
MS_CHAP_LANMANRESP_LEN	lwip/src/netif/ppp/chap_ms.c	121;"	d	file:
MS_CHAP_NTRESP	lwip/src/netif/ppp/chap_ms.c	122;"	d	file:
MS_CHAP_NTRESP_LEN	lwip/src/netif/ppp/chap_ms.c	123;"	d	file:
MS_CHAP_RESPONSE_LEN	lwip/src/netif/ppp/chap_ms.c	104;"	d	file:
MS_CHAP_USENT	lwip/src/netif/ppp/chap_ms.c	124;"	d	file:
MTL_INTR_STAT	device/LPC54018.h	/^  __I  uint32_t MTL_INTR_STAT;                     \/**< MTL Interrupt Status register, offset: 0xC20 *\/$/;"	m	struct:__anon154
MTL_OP_MODE	device/LPC54018.h	/^  __IO uint32_t MTL_OP_MODE;                       \/**< MTL Operation Mode Register, offset: 0xC00 *\/$/;"	m	struct:__anon154
MTL_QUEUE	device/LPC54018.h	/^  } MTL_QUEUE[2];$/;"	m	struct:__anon154	typeref:struct:__anon154::__anon155
MTL_RXQX_CTRL	device/LPC54018.h	/^    __IO uint32_t MTL_RXQX_CTRL;                     \/**< MTL RxQx Control register, array offset: 0xD3C, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_RXQX_DBG	device/LPC54018.h	/^    __I  uint32_t MTL_RXQX_DBG;                      \/**< MTL RxQx Debug register, array offset: 0xD38, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_RXQX_MISSPKT_OVRFLW_CNT	device/LPC54018.h	/^    __I  uint32_t MTL_RXQX_MISSPKT_OVRFLW_CNT;       \/**< MTL RxQx Missed Packet Overflow Counter register, array offset: 0xD34, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_RXQX_OP_MODE	device/LPC54018.h	/^    __IO uint32_t MTL_RXQX_OP_MODE;                  \/**< MTL RxQx Operation Mode register, array offset: 0xD30, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_RXQ_DMA_MAP	device/LPC54018.h	/^  __IO uint32_t MTL_RXQ_DMA_MAP;                   \/**< MTL Receive Queue and DMA Channel Mapping register, offset: 0xC30 *\/$/;"	m	struct:__anon154
MTL_TXQX_DBG	device/LPC54018.h	/^    __I  uint32_t MTL_TXQX_DBG;                      \/**< MTL TxQx Debug register, array offset: 0xD08, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_ETS_CTRL	device/LPC54018.h	/^    __IO uint32_t MTL_TXQX_ETS_CTRL;                 \/**< MTL TxQx ETS control register, only TxQ1 support, array offset: 0xD10, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_ETS_STAT	device/LPC54018.h	/^    __I  uint32_t MTL_TXQX_ETS_STAT;                 \/**< MTL TxQx ETS Status register, array offset: 0xD14, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_HI_CRDT	device/LPC54018.h	/^    __IO uint32_t MTL_TXQX_HI_CRDT;                  \/**< MTL TxQx hiCredit register, only TxQ1 support, array offset: 0xD20, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_INTCTRL_STAT	device/LPC54018.h	/^    __IO uint32_t MTL_TXQX_INTCTRL_STAT;             \/**< , array offset: 0xD2C, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_LO_CRDT	device/LPC54018.h	/^    __IO uint32_t MTL_TXQX_LO_CRDT;                  \/**< MTL TxQx loCredit register, only TxQ1 support, array offset: 0xD24, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_OP_MODE	device/LPC54018.h	/^    __IO uint32_t MTL_TXQX_OP_MODE;                  \/**< MTL TxQx Operation Mode register, array offset: 0xD00, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_QNTM_WGHT	device/LPC54018.h	/^    __IO uint32_t MTL_TXQX_QNTM_WGHT;                \/**< , array offset: 0xD18, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_SNDSLP_CRDT	device/LPC54018.h	/^    __IO uint32_t MTL_TXQX_SNDSLP_CRDT;              \/**< MTL TxQx SendSlopCredit register, only TxQ1 support, array offset: 0xD1C, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MTL_TXQX_UNDRFLW	device/LPC54018.h	/^    __I  uint32_t MTL_TXQX_UNDRFLW;                  \/**< MTL TxQx Underflow register, array offset: 0xD04, array step: 0x40 *\/$/;"	m	struct:__anon154::__anon155
MULTIEDIT_CF_AUTOSCROLLBAR_H	emwin/emWin_header/MULTIEDIT.h	60;"	d
MULTIEDIT_CF_AUTOSCROLLBAR_V	emwin/emWin_header/MULTIEDIT.h	59;"	d
MULTIEDIT_CF_INSERT	emwin/emWin_header/MULTIEDIT.h	58;"	d
MULTIEDIT_CF_PASSWORD	emwin/emWin_header/MULTIEDIT.h	61;"	d
MULTIEDIT_CF_READONLY	emwin/emWin_header/MULTIEDIT.h	57;"	d
MULTIEDIT_CF_SHOWCURSOR	emwin/emWin_header/MULTIEDIT.h	62;"	d
MULTIEDIT_CI_EDIT	emwin/emWin_header/MULTIEDIT.h	74;"	d
MULTIEDIT_CI_READONLY	emwin/emWin_header/MULTIEDIT.h	75;"	d
MULTIEDIT_GetStringSize	emwin/emWin_header/MULTIEDIT.h	159;"	d
MULTIEDIT_H	emwin/emWin_header/MULTIEDIT.h	46;"	d
MULTIEDIT_HANDLE	emwin/emWin_header/MULTIEDIT.h	/^typedef WM_HMEM MULTIEDIT_HANDLE;$/;"	t
MULTIEDIT_ID	emwin/emWin_header/WIDGET.h	112;"	d
MULTIEDIT_SF_AUTOSCROLLBAR_H	emwin/emWin_header/MULTIEDIT.h	67;"	d
MULTIEDIT_SF_AUTOSCROLLBAR_V	emwin/emWin_header/MULTIEDIT.h	66;"	d
MULTIEDIT_SF_INSERT	emwin/emWin_header/MULTIEDIT.h	65;"	d
MULTIEDIT_SF_PASSWORD	emwin/emWin_header/MULTIEDIT.h	68;"	d
MULTIEDIT_SF_READONLY	emwin/emWin_header/MULTIEDIT.h	64;"	d
MULTIEDIT_SetFocussable	emwin/emWin_header/MULTIEDIT.h	149;"	d
MULTIEDIT_SetMaxLen	emwin/emWin_header/MULTIEDIT.h	158;"	d
MULTIPAGE_ALIGN_BOTTOM	emwin/emWin_header/MULTIPAGE.h	70;"	d
MULTIPAGE_ALIGN_LEFT	emwin/emWin_header/MULTIPAGE.h	67;"	d
MULTIPAGE_ALIGN_RIGHT	emwin/emWin_header/MULTIPAGE.h	68;"	d
MULTIPAGE_ALIGN_TOP	emwin/emWin_header/MULTIPAGE.h	69;"	d
MULTIPAGE_BI_DISABLED	emwin/emWin_header/MULTIPAGE.h	91;"	d
MULTIPAGE_BI_MAX	emwin/emWin_header/MULTIPAGE.h	92;"	d
MULTIPAGE_BI_SELECTED	emwin/emWin_header/MULTIPAGE.h	89;"	d
MULTIPAGE_BI_UNSELECTED	emwin/emWin_header/MULTIPAGE.h	90;"	d
MULTIPAGE_CF_ROTATE_CW	emwin/emWin_header/MULTIPAGE.h	72;"	d
MULTIPAGE_CI_DISABLED	emwin/emWin_header/MULTIPAGE.h	74;"	d
MULTIPAGE_CI_ENABLED	emwin/emWin_header/MULTIPAGE.h	75;"	d
MULTIPAGE_H	emwin/emWin_header/MULTIPAGE.h	46;"	d
MULTIPAGE_Handle	emwin/emWin_header/MULTIPAGE.h	/^typedef WM_HMEM MULTIPAGE_Handle;$/;"	t
MULTIPAGE_ID	emwin/emWin_header/WIDGET.h	113;"	d
MULTIPAGE_INIT_ID	emwin/emWin_header/MULTIPAGE_Private.h	132;"	d
MULTIPAGE_INIT_ID	emwin/emWin_header/MULTIPAGE_Private.h	134;"	d
MULTIPAGE_LOCK_H	emwin/emWin_header/MULTIPAGE_Private.h	139;"	d
MULTIPAGE_LOCK_H	emwin/emWin_header/MULTIPAGE_Private.h	141;"	d
MULTIPAGE_NUMCOLORS	emwin/emWin_header/MULTIPAGE_Private.h	63;"	d
MULTIPAGE_Obj	emwin/emWin_header/MULTIPAGE_Private.h	/^struct MULTIPAGE_Obj {$/;"	s
MULTIPAGE_Obj	emwin/emWin_header/MULTIPAGE_Private.h	/^typedef struct MULTIPAGE_Obj MULTIPAGE_Obj;$/;"	t	typeref:struct:MULTIPAGE_Obj
MULTIPAGE_PAGE	emwin/emWin_header/MULTIPAGE_Private.h	/^} MULTIPAGE_PAGE;$/;"	t	typeref:struct:__anon338
MULTIPAGE_PRIVATE_H	emwin/emWin_header/MULTIPAGE_Private.h	46;"	d
MULTIPAGE_PROPS	emwin/emWin_header/MULTIPAGE_Private.h	/^} MULTIPAGE_PROPS;$/;"	t	typeref:struct:__anon340
MULTIPAGE_SKINFLEX_PI_DISABLED	emwin/emWin_header/MULTIPAGE.h	85;"	d
MULTIPAGE_SKINFLEX_PI_ENABLED	emwin/emWin_header/MULTIPAGE.h	83;"	d
MULTIPAGE_SKINFLEX_PI_SELECTED	emwin/emWin_header/MULTIPAGE.h	84;"	d
MULTIPAGE_SKINFLEX_PROPS	emwin/emWin_header/MULTIPAGE.h	/^} MULTIPAGE_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon198
MULTIPAGE_SKIN_FLEX	emwin/emWin_header/MULTIPAGE.h	218;"	d
MULTIPAGE_SKIN_FRAME_ALL	emwin/emWin_header/MULTIPAGE.h	81;"	d
MULTIPAGE_SKIN_FRAME_BOTTOM	emwin/emWin_header/MULTIPAGE.h	80;"	d
MULTIPAGE_SKIN_FRAME_LEFT	emwin/emWin_header/MULTIPAGE.h	77;"	d
MULTIPAGE_SKIN_FRAME_RIGHT	emwin/emWin_header/MULTIPAGE.h	78;"	d
MULTIPAGE_SKIN_FRAME_TOP	emwin/emWin_header/MULTIPAGE.h	79;"	d
MULTIPAGE_SKIN_INFO	emwin/emWin_header/MULTIPAGE.h	/^} MULTIPAGE_SKIN_INFO;$/;"	t	typeref:struct:__anon200
MULTIPAGE_SKIN_PRIVATE	emwin/emWin_header/MULTIPAGE_Private.h	/^} MULTIPAGE_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon339
MULTIPAGE_SKIN_PROPS	emwin/emWin_header/MULTIPAGE.h	/^} MULTIPAGE_SKIN_PROPS;$/;"	t	typeref:struct:__anon199
MULTIPAGE_STATE_ENABLED	emwin/emWin_header/MULTIPAGE_Private.h	60;"	d
MULTIPAGE_STATE_SCROLLMODE	emwin/emWin_header/MULTIPAGE_Private.h	61;"	d
MUX_A	drivers/fsl_clock.h	449;"	d
MUX_B	drivers/fsl_clock.h	450;"	d
MVALMAX	device/system_LPC54018.c	58;"	d	file:
MVALMAX	drivers/fsl_clock.c	21;"	d	file:
MVFR0	CMSIS/core_armv8mml.h	/^  __IM  uint32_t MVFR0;                  \/*!< Offset: 0x010 (R\/ )  Media and FP Feature Register 0 *\/$/;"	m	struct:__anon29
MVFR0	CMSIS/core_armv8mml.h	/^  __IM  uint32_t MVFR0;                  \/*!< Offset: 0x240 (R\/ )  Media and VFP Feature Register 0 *\/$/;"	m	struct:__anon18
MVFR0	CMSIS/core_cm4.h	/^  __IM  uint32_t MVFR0;                  \/*!< Offset: 0x010 (R\/ )  Media and FP Feature Register 0 *\/$/;"	m	struct:__anon48
MVFR1	CMSIS/core_armv8mml.h	/^  __IM  uint32_t MVFR1;                  \/*!< Offset: 0x014 (R\/ )  Media and FP Feature Register 1 *\/$/;"	m	struct:__anon29
MVFR1	CMSIS/core_armv8mml.h	/^  __IM  uint32_t MVFR1;                  \/*!< Offset: 0x244 (R\/ )  Media and VFP Feature Register 1 *\/$/;"	m	struct:__anon18
MVFR1	CMSIS/core_cm4.h	/^  __IM  uint32_t MVFR1;                  \/*!< Offset: 0x014 (R\/ )  Media and FP Feature Register 1 *\/$/;"	m	struct:__anon48
MVFR2	CMSIS/core_armv8mml.h	/^  __IM  uint32_t MVFR2;                  \/*!< Offset: 0x248 (R\/ )  Media and VFP Feature Register 2 *\/$/;"	m	struct:__anon18
M_APP0	emwin/emWin_header/GUI_JPEG_Private.h	129;"	d
M_APP14	emwin/emWin_header/GUI_JPEG_Private.h	130;"	d
M_DAC	emwin/emWin_header/GUI_JPEG_Private.h	112;"	d
M_DHT	emwin/emWin_header/GUI_JPEG_Private.h	110;"	d
M_DQT	emwin/emWin_header/GUI_JPEG_Private.h	126;"	d
M_DRI	emwin/emWin_header/GUI_JPEG_Private.h	127;"	d
M_EOI	emwin/emWin_header/GUI_JPEG_Private.h	124;"	d
M_JPG	emwin/emWin_header/GUI_JPEG_Private.h	101;"	d
M_PI	codec2/ofdm_internal.h	42;"	d
M_PITCH_S	codec2/defines.h	56;"	d
M_RST0	emwin/emWin_header/GUI_JPEG_Private.h	114;"	d
M_RST1	emwin/emWin_header/GUI_JPEG_Private.h	115;"	d
M_RST2	emwin/emWin_header/GUI_JPEG_Private.h	116;"	d
M_RST3	emwin/emWin_header/GUI_JPEG_Private.h	117;"	d
M_RST4	emwin/emWin_header/GUI_JPEG_Private.h	118;"	d
M_RST5	emwin/emWin_header/GUI_JPEG_Private.h	119;"	d
M_RST6	emwin/emWin_header/GUI_JPEG_Private.h	120;"	d
M_RST7	emwin/emWin_header/GUI_JPEG_Private.h	121;"	d
M_SOF0	emwin/emWin_header/GUI_JPEG_Private.h	92;"	d
M_SOF1	emwin/emWin_header/GUI_JPEG_Private.h	93;"	d
M_SOF10	emwin/emWin_header/GUI_JPEG_Private.h	103;"	d
M_SOF11	emwin/emWin_header/GUI_JPEG_Private.h	104;"	d
M_SOF13	emwin/emWin_header/GUI_JPEG_Private.h	106;"	d
M_SOF14	emwin/emWin_header/GUI_JPEG_Private.h	107;"	d
M_SOF15	emwin/emWin_header/GUI_JPEG_Private.h	108;"	d
M_SOF2	emwin/emWin_header/GUI_JPEG_Private.h	94;"	d
M_SOF3	emwin/emWin_header/GUI_JPEG_Private.h	95;"	d
M_SOF5	emwin/emWin_header/GUI_JPEG_Private.h	97;"	d
M_SOF6	emwin/emWin_header/GUI_JPEG_Private.h	98;"	d
M_SOF7	emwin/emWin_header/GUI_JPEG_Private.h	99;"	d
M_SOF9	emwin/emWin_header/GUI_JPEG_Private.h	102;"	d
M_SOI	emwin/emWin_header/GUI_JPEG_Private.h	123;"	d
M_SOS	emwin/emWin_header/GUI_JPEG_Private.h	125;"	d
M_TEM	emwin/emWin_header/GUI_JPEG_Private.h	132;"	d
ManageVMEM_API	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  MANAGE_VMEM_API ManageVMEM_API; \/\/ Memory management$/;"	m	struct:DRIVER_CONTEXT
ManageVMEM_API	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  MANAGE_VMEM_API ManageVMEM_API; \/\/ Memory management$/;"	m	struct:DRIVER_CONTEXT
ManageVMEM_API	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  MANAGE_VMEM_API ManageVMEM_API; \/\/ Memory management$/;"	m	struct:DRIVER_CONTEXT
ManageVMEM_API	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  MANAGE_VMEM_API ManageVMEM_API; \/\/ Memory management$/;"	m	struct:DRIVER_CONTEXT
ManageVMEM_API	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  MANAGE_VMEM_API ManageVMEM_API; \/\/ Memory management$/;"	m	struct:DRIVER_CONTEXT
ManageVMEM_API	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  MANAGE_VMEM_API ManageVMEM_API; \/\/ Memory management$/;"	m	struct:DRIVER_CONTEXT
MasterReceive	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*MasterReceive)  (uint32_t addr,       uint8_t *data, uint32_t num, bool xfer_pending); \/\/\/< Pointer to \\ref ARM_I2C_MasterReceive : Start receiving data as I2C Master.$/;"	m	struct:_ARM_DRIVER_I2C
MasterTransmit	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*MasterTransmit) (uint32_t addr, const uint8_t *data, uint32_t num, bool xfer_pending); \/\/\/< Pointer to \\ref ARM_I2C_MasterTransmit : Start transmitting data as I2C Master.$/;"	m	struct:_ARM_DRIVER_I2C
Max	emwin/emWin_header/EDIT_Private.h	/^  I32                  Min, Max;        \/\/ Min max values as normalized floats (integers)$/;"	m	struct:EDIT_Obj_struct
Max	emwin/emWin_header/PROGBAR_Private.h	/^  int Min, Max;$/;"	m	struct:__anon424
Max	emwin/emWin_header/SLIDER_Private.h	/^  int                 Max;$/;"	m	struct:__anon378
Max	emwin/emWin_header/SPINBOX_Private.h	/^  I32                  Max;                  \/\/ Maximum allowed value.$/;"	m	struct:__anon321
MaxBlocksPerMCU	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MaxBlocksPerMCU;          \/\/ Maximum number of blocks per MCU$/;"	m	struct:GUI_JPEG_DCONTEXT
MaxBlocksPerRow	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MaxBlocksPerRow;          \/\/ Maximum number of blocks per row$/;"	m	struct:GUI_JPEG_DCONTEXT
MaxCode	emwin/emWin_header/GUI_GIF_Private.h	/^  int   MaxCode;$/;"	m	struct:__anon323
MaxCodeSize	emwin/emWin_header/GUI_GIF_Private.h	/^  int   MaxCodeSize;$/;"	m	struct:__anon323
MaxHeight	emwin/emWin_header/MULTIPAGE_Private.h	/^  int                    MaxHeight;$/;"	m	struct:MULTIPAGE_Obj
MaxLen	emwin/emWin_header/EDIT_Private.h	/^  I16                  MaxLen;$/;"	m	struct:EDIT_Obj_struct
MaxMCU_xSize	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MaxMCU_xSize;             \/\/ MCU's max. X size in pixels$/;"	m	struct:GUI_JPEG_DCONTEXT
MaxMCU_ySize	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MaxMCU_ySize;             \/\/ MCU's max. Y size in pixels$/;"	m	struct:GUI_JPEG_DCONTEXT
MaxMCUsPerCol	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MaxMCUsPerCol;            \/\/ Maximum number of MCUs per column$/;"	m	struct:GUI_JPEG_DCONTEXT
MaxMCUsPerRow	emwin/emWin_header/GUI_JPEG_Private.h	/^  int MaxMCUsPerRow;            \/\/ Maximum number of MCUs per row$/;"	m	struct:GUI_JPEG_DCONTEXT
MaxNumItems	emwin/emWin_header/GRAPH_Private.h	/^  unsigned        MaxNumItems;$/;"	m	struct:GRAPH_DATA_OBJ
MaxRange	emwin/emWin_header/KNOB_Private.h	/^  I32 MaxRange;$/;"	m	struct:__anon326
MaxUsedBytes	emwin/emWin_header/GUI.h	/^  U32 MaxUsedBytes;$/;"	m	struct:__anon392
MemManage_Handler	startup/startup_lpc54018.c	/^WEAK_AV void MemManage_Handler(void)$/;"	f
MemSize	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  U32 MemSize;$/;"	m	struct:__anon370
MemSize	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int MemSize;$/;"	m	struct:DRIVER_CONTEXT
MemSize	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int MemSize;$/;"	m	struct:DRIVER_CONTEXT
MemSize	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int MemSize;$/;"	m	struct:DRIVER_CONTEXT
MemSize	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int MemSize;$/;"	m	struct:DRIVER_CONTEXT
MemSize	emwin/emWin_header/GUI_GCache_Private.h	/^  int MemSize;$/;"	m	struct:__anon239
MemoryManagement_IRQn	device/LPC54018.h	/^  MemoryManagement_IRQn        = -12,              \/**< Cortex-M4 Memory Management Interrupt *\/$/;"	e	enum:IRQn
MemoryRegion_t	amazon-freertos/include/task.h	/^} MemoryRegion_t;$/;"	t	typeref:struct:xMEMORY_REGION
MenuHeight	emwin/emWin_header/FRAMEWIN_Private.h	/^  I16      MenuHeight;$/;"	m	struct:__anon281
MessageBufferHandle_t	amazon-freertos/include/message_buffer.h	/^typedef void * MessageBufferHandle_t;$/;"	t
Min	emwin/emWin_header/EDIT_Private.h	/^  I32                  Min, Max;        \/\/ Min max values as normalized floats (integers)$/;"	m	struct:EDIT_Obj_struct
Min	emwin/emWin_header/PROGBAR_Private.h	/^  int Min, Max;$/;"	m	struct:__anon424
Min	emwin/emWin_header/SLIDER_Private.h	/^  int                 Min;$/;"	m	struct:__anon378
Min	emwin/emWin_header/SPINBOX_Private.h	/^  I32                  Min;                  \/\/ Minimum allowed value.$/;"	m	struct:__anon321
MinItemHeight	emwin/emWin_header/TREEVIEW_Private.h	/^  int MinItemHeight;$/;"	m	struct:__anon226
MinMaxMode	emwin/emWin_header/EDIT_Private.h	/^  U8                   MinMaxMode;$/;"	m	struct:EDIT_Obj_struct
MinRange	emwin/emWin_header/KNOB_Private.h	/^  I32 MinRange;$/;"	m	struct:__anon326
MiniListItem_t	amazon-freertos/include/list.h	/^typedef struct xMINI_LIST_ITEM MiniListItem_t;$/;"	t	typeref:struct:xMINI_LIST_ITEM
Mirror	emwin/emWin_header/GUIDRV_BitPlains.h	/^  int Mirror;$/;"	m	struct:__anon379
ModeParametersHeader	usb/device/class/usb_device_msc.h	/^    usb_device_mode_parameters_header_struct_t ModeParametersHeader; \/*!< Mode Parameter Header*\/$/;"	m	struct:_usb_device_msc_ufi_struct
Mode_Lora_Fsk	radio/sx1276.h	/^    RANGE_MODE          Mode_Lora_Fsk;$/;"	m	struct:__anon487
Month	emwin/emWin_header/CALENDAR.h	/^  int Month;$/;"	m	struct:__anon240
MsgId	emwin/emWin_header/WM.h	/^  int MsgId;            \/* type of message *\/$/;"	m	struct:WM_MESSAGE
MsgType	emwin/emWin_header/MENU.h	/^  U16 MsgType;$/;"	m	struct:__anon231
N	CMSIS/arm_math.h	/^    uint16_t N;                          \/**< length of the DCT4. *\/$/;"	m	struct:__anon83
N	CMSIS/arm_math.h	/^    uint16_t N;                          \/**< length of the DCT4. *\/$/;"	m	struct:__anon84
N	CMSIS/arm_math.h	/^    uint16_t N;                          \/**< length of the DCT4. *\/$/;"	m	struct:__anon85
N	CMSIS/core_armv8mbl.h	/^    uint32_t N:1;                        \/*!< bit:     31  Negative condition code flag *\/$/;"	m	struct:__anon113::__anon114
N	CMSIS/core_armv8mbl.h	/^    uint32_t N:1;                        \/*!< bit:     31  Negative condition code flag *\/$/;"	m	struct:__anon117::__anon118
N	CMSIS/core_armv8mml.h	/^    uint32_t N:1;                        \/*!< bit:     31  Negative condition code flag *\/$/;"	m	struct:__anon13::__anon14
N	CMSIS/core_armv8mml.h	/^    uint32_t N:1;                        \/*!< bit:     31  Negative condition code flag *\/$/;"	m	struct:__anon9::__anon10
N	CMSIS/core_cm4.h	/^    uint32_t N:1;                        \/*!< bit:     31  Negative condition code flag *\/$/;"	m	struct:__anon31::__anon32
N	CMSIS/core_cm4.h	/^    uint32_t N:1;                        \/*!< bit:     31  Negative condition code flag *\/$/;"	m	struct:__anon35::__anon36
N	codec2/fsk.h	/^    int N;                  \/* processing buffer size *\/$/;"	m	struct:FSK
NAKCIADDR	lwip/src/netif/ppp/ipcp.c	1128;"	d	file:
NAKCIADDRS	lwip/src/netif/ppp/ipcp.c	1099;"	d	file:
NAKCICHAP	lwip/src/netif/ppp/lcp.c	1158;"	d	file:
NAKCICHAR	lwip/src/netif/ppp/lcp.c	1171;"	d	file:
NAKCIDNS	lwip/src/netif/ppp/ipcp.c	1142;"	d	file:
NAKCIENDP	lwip/src/netif/ppp/lcp.c	1218;"	d	file:
NAKCIIFACEID	lwip/src/netif/ppp/ipv6cp.c	690;"	d	file:
NAKCILONG	lwip/src/netif/ppp/lcp.c	1193;"	d	file:
NAKCILQR	lwip/src/netif/ppp/lcp.c	1205;"	d	file:
NAKCISHORT	lwip/src/netif/ppp/lcp.c	1182;"	d	file:
NAKCIVJ	lwip/src/netif/ppp/ipcp.c	1115;"	d	file:
NAKCIVJ	lwip/src/netif/ppp/ipv6cp.c	703;"	d	file:
NAKCIVOID	lwip/src/netif/ppp/lcp.c	1147;"	d	file:
NBTP	device/LPC54018.h	/^  __IO uint32_t NBTP;                              \/**< Nominal Bit Timing and Prescaler Register, offset: 0x1C *\/$/;"	m	struct:__anon142
ND6_2HRS	lwip/src/include/lwip/priv/nd6_priv.h	123;"	d
ND6_DELAY	lwip/src/include/lwip/priv/nd6_priv.h	/^  ND6_DELAY,$/;"	e	enum:nd6_neighbor_cache_entry_state
ND6_FLAG_OVERRIDE	lwip/src/include/lwip/prot/nd6.h	86;"	d
ND6_FLAG_ROUTER	lwip/src/include/lwip/prot/nd6.h	84;"	d
ND6_FLAG_SOLICITED	lwip/src/include/lwip/prot/nd6.h	85;"	d
ND6_HOPLIM	lwip/src/include/lwip/priv/nd6_priv.h	121;"	d
ND6_INCOMPLETE	lwip/src/include/lwip/priv/nd6_priv.h	/^  ND6_INCOMPLETE,$/;"	e	enum:nd6_neighbor_cache_entry_state
ND6_NO_ENTRY	lwip/src/include/lwip/priv/nd6_priv.h	/^  ND6_NO_ENTRY = 0,$/;"	e	enum:nd6_neighbor_cache_entry_state
ND6_OPTION_TYPE_MTU	lwip/src/include/lwip/prot/nd6.h	215;"	d
ND6_OPTION_TYPE_PREFIX_INFO	lwip/src/include/lwip/prot/nd6.h	171;"	d
ND6_OPTION_TYPE_RDNSS	lwip/src/include/lwip/prot/nd6.h	251;"	d
ND6_OPTION_TYPE_REDIR_HDR	lwip/src/include/lwip/prot/nd6.h	197;"	d
ND6_OPTION_TYPE_ROUTE_INFO	lwip/src/include/lwip/prot/nd6.h	232;"	d
ND6_OPTION_TYPE_SOURCE_LLADDR	lwip/src/include/lwip/prot/nd6.h	154;"	d
ND6_OPTION_TYPE_TARGET_LLADDR	lwip/src/include/lwip/prot/nd6.h	155;"	d
ND6_PREFIX_FLAG_AUTONOMOUS	lwip/src/include/lwip/prot/nd6.h	173;"	d
ND6_PREFIX_FLAG_ON_LINK	lwip/src/include/lwip/prot/nd6.h	172;"	d
ND6_PREFIX_FLAG_ROUTER_ADDRESS	lwip/src/include/lwip/prot/nd6.h	174;"	d
ND6_PREFIX_FLAG_SITE_PREFIX	lwip/src/include/lwip/prot/nd6.h	175;"	d
ND6_PROBE	lwip/src/include/lwip/priv/nd6_priv.h	/^  ND6_PROBE$/;"	e	enum:nd6_neighbor_cache_entry_state
ND6_RA_FLAG_HOME_AGENT	lwip/src/include/lwip/prot/nd6.h	108;"	d
ND6_RA_FLAG_MANAGED_ADDR_CONFIG	lwip/src/include/lwip/prot/nd6.h	106;"	d
ND6_RA_FLAG_OTHER_CONFIG	lwip/src/include/lwip/prot/nd6.h	107;"	d
ND6_RA_PREFERENCE_DISABLED	lwip/src/include/lwip/prot/nd6.h	113;"	d
ND6_RA_PREFERENCE_HIGH	lwip/src/include/lwip/prot/nd6.h	110;"	d
ND6_RA_PREFERENCE_LOW	lwip/src/include/lwip/prot/nd6.h	112;"	d
ND6_RA_PREFERENCE_MASK	lwip/src/include/lwip/prot/nd6.h	109;"	d
ND6_RA_PREFERENCE_MEDIUM	lwip/src/include/lwip/prot/nd6.h	111;"	d
ND6_REACHABLE	lwip/src/include/lwip/priv/nd6_priv.h	/^  ND6_REACHABLE,$/;"	e	enum:nd6_neighbor_cache_entry_state
ND6_RTR_SOLICITATION_INTERVAL	lwip/src/include/lwip/nd6.h	63;"	d
ND6_SEND_FLAG_ALLNODES_DEST	lwip/src/core/ipv6/nd6.c	122;"	d	file:
ND6_SEND_FLAG_ANY_SRC	lwip/src/core/ipv6/nd6.c	123;"	d	file:
ND6_SEND_FLAG_MULTICAST_DEST	lwip/src/core/ipv6/nd6.c	121;"	d	file:
ND6_STALE	lwip/src/include/lwip/priv/nd6_priv.h	/^  ND6_STALE,$/;"	e	enum:nd6_neighbor_cache_entry_state
ND6_STATS	lwip/src/include/lwip/opt.h	2223;"	d
ND6_STATS	lwip/src/include/lwip/opt.h	2251;"	d
ND6_STATS_DISPLAY	lwip/src/include/lwip/stats.h	458;"	d
ND6_STATS_DISPLAY	lwip/src/include/lwip/stats.h	461;"	d
ND6_STATS_INC	lwip/src/include/lwip/stats.h	457;"	d
ND6_STATS_INC	lwip/src/include/lwip/stats.h	460;"	d
ND6_TMR_INTERVAL	lwip/src/include/lwip/nd6.h	59;"	d
NDAT1	device/LPC54018.h	/^  __IO uint32_t NDAT1;                             \/**< New Data 1, offset: 0x98 *\/$/;"	m	struct:__anon142
NDAT2	device/LPC54018.h	/^  __IO uint32_t NDAT2;                             \/**< New Data 2, offset: 0x9C *\/$/;"	m	struct:__anon142
NDIS_802_3_MAC_OPTION_PRIORITY	usb/device/class/usb_device_cdc_rndis.h	95;"	d
NDIS_HARDWARE_STATUS_CLOSING	usb/device/class/usb_device_cdc_rndis.h	131;"	d
NDIS_HARDWARE_STATUS_INITIALIZING	usb/device/class/usb_device_cdc_rndis.h	127;"	d
NDIS_HARDWARE_STATUS_NOT_READY	usb/device/class/usb_device_cdc_rndis.h	133;"	d
NDIS_HARDWARE_STATUS_READY	usb/device/class/usb_device_cdc_rndis.h	125;"	d
NDIS_HARDWARE_STATUS_RESET	usb/device/class/usb_device_cdc_rndis.h	129;"	d
NDIS_MEDIA_STATE_CONNECTED	usb/device/class/usb_device_cdc_rndis.h	333;"	d
NDIS_MEDIA_STATE_DISCONNECTED	usb/device/class/usb_device_cdc_rndis.h	335;"	d
NDIS_MEDIA_STATE_UNKNOWN	usb/device/class/usb_device_cdc_rndis.h	337;"	d
NDIS_MEDIUM1394	usb/device/class/usb_device_cdc_rndis.h	178;"	d
NDIS_MEDIUM802_3	usb/device/class/usb_device_cdc_rndis.h	146;"	d
NDIS_MEDIUM802_5	usb/device/class/usb_device_cdc_rndis.h	148;"	d
NDIS_MEDIUM_ARCNET878_2	usb/device/class/usb_device_cdc_rndis.h	160;"	d
NDIS_MEDIUM_ARCNET_RAW	usb/device/class/usb_device_cdc_rndis.h	158;"	d
NDIS_MEDIUM_ATM	usb/device/class/usb_device_cdc_rndis.h	162;"	d
NDIS_MEDIUM_BPC	usb/device/class/usb_device_cdc_rndis.h	180;"	d
NDIS_MEDIUM_COWAN	usb/device/class/usb_device_cdc_rndis.h	176;"	d
NDIS_MEDIUM_DIX	usb/device/class/usb_device_cdc_rndis.h	156;"	d
NDIS_MEDIUM_FDDI	usb/device/class/usb_device_cdc_rndis.h	150;"	d
NDIS_MEDIUM_INFINI_BAND	usb/device/class/usb_device_cdc_rndis.h	182;"	d
NDIS_MEDIUM_IRDA	usb/device/class/usb_device_cdc_rndis.h	174;"	d
NDIS_MEDIUM_LOCAL_TALK	usb/device/class/usb_device_cdc_rndis.h	154;"	d
NDIS_MEDIUM_LOOPBACK	usb/device/class/usb_device_cdc_rndis.h	186;"	d
NDIS_MEDIUM_NATIVE802_11	usb/device/class/usb_device_cdc_rndis.h	168;"	d
NDIS_MEDIUM_TUNNEL	usb/device/class/usb_device_cdc_rndis.h	184;"	d
NDIS_MEDIUM_WAN	usb/device/class/usb_device_cdc_rndis.h	152;"	d
NDIS_MEDIUM_WIRELESS_WAN	usb/device/class/usb_device_cdc_rndis.h	172;"	d
NDIS_OID_802_3_CURRENT_ADDRESS	usb/device/class/usb_device_cdc_rndis.h	90;"	d
NDIS_OID_802_3_MAC_OPTIONS	usb/device/class/usb_device_cdc_rndis.h	93;"	d
NDIS_OID_802_3_MAXIMUM_LIST_SIZE	usb/device/class/usb_device_cdc_rndis.h	92;"	d
NDIS_OID_802_3_MULTICAST_LIST	usb/device/class/usb_device_cdc_rndis.h	91;"	d
NDIS_OID_802_3_PERMANENT_ADDRESS	usb/device/class/usb_device_cdc_rndis.h	89;"	d
NDIS_OID_802_3_RCV_ERROR_ALIGNMENT	usb/device/class/usb_device_cdc_rndis.h	96;"	d
NDIS_OID_802_3_RCV_OVERRUN	usb/device/class/usb_device_cdc_rndis.h	101;"	d
NDIS_OID_802_3_XMIT_DEFERRED	usb/device/class/usb_device_cdc_rndis.h	99;"	d
NDIS_OID_802_3_XMIT_HEARTBEAT_FAILURE	usb/device/class/usb_device_cdc_rndis.h	103;"	d
NDIS_OID_802_3_XMIT_LATE_COLLISIONS	usb/device/class/usb_device_cdc_rndis.h	105;"	d
NDIS_OID_802_3_XMIT_MAX_COLLISIONS	usb/device/class/usb_device_cdc_rndis.h	100;"	d
NDIS_OID_802_3_XMIT_MORE_COLLISIONS	usb/device/class/usb_device_cdc_rndis.h	98;"	d
NDIS_OID_802_3_XMIT_ONE_COLLISION	usb/device/class/usb_device_cdc_rndis.h	97;"	d
NDIS_OID_802_3_XMIT_TIMES_CRS_LOST	usb/device/class/usb_device_cdc_rndis.h	104;"	d
NDIS_OID_802_3_XMIT_UNDERRUN	usb/device/class/usb_device_cdc_rndis.h	102;"	d
NDIS_OID_GEN_BROADCAST_BYTES_RCV	usb/device/class/usb_device_cdc_rndis.h	82;"	d
NDIS_OID_GEN_BROADCAST_BYTES_XMIT	usb/device/class/usb_device_cdc_rndis.h	76;"	d
NDIS_OID_GEN_BROADCAST_FRAMES_RCV	usb/device/class/usb_device_cdc_rndis.h	83;"	d
NDIS_OID_GEN_BROADCAST_FRAMES_XMIT	usb/device/class/usb_device_cdc_rndis.h	77;"	d
NDIS_OID_GEN_CURRENT_LOOKAHEAD	usb/device/class/usb_device_cdc_rndis.h	60;"	d
NDIS_OID_GEN_CURRENT_PACKET_FILTER	usb/device/class/usb_device_cdc_rndis.h	59;"	d
NDIS_OID_GEN_DIRECTED_BYTES_RCV	usb/device/class/usb_device_cdc_rndis.h	78;"	d
NDIS_OID_GEN_DIRECTED_BYTES_XMIT	usb/device/class/usb_device_cdc_rndis.h	72;"	d
NDIS_OID_GEN_DIRECTED_FRAMES_RCV	usb/device/class/usb_device_cdc_rndis.h	79;"	d
NDIS_OID_GEN_DIRECTED_FRAMES_XMIT	usb/device/class/usb_device_cdc_rndis.h	73;"	d
NDIS_OID_GEN_DRIVER_VERSION	usb/device/class/usb_device_cdc_rndis.h	61;"	d
NDIS_OID_GEN_GET_NETCARD_TIME	usb/device/class/usb_device_cdc_rndis.h	87;"	d
NDIS_OID_GEN_GET_TIME_CAPS	usb/device/class/usb_device_cdc_rndis.h	86;"	d
NDIS_OID_GEN_HARDWARE_STATUS	usb/device/class/usb_device_cdc_rndis.h	47;"	d
NDIS_OID_GEN_LINK_SPEED	usb/device/class/usb_device_cdc_rndis.h	52;"	d
NDIS_OID_GEN_MACHINE_NAME	usb/device/class/usb_device_cdc_rndis.h	112;"	d
NDIS_OID_GEN_MAC_OPTIONS	usb/device/class/usb_device_cdc_rndis.h	64;"	d
NDIS_OID_GEN_MAXIMUM_FRAME_SIZE	usb/device/class/usb_device_cdc_rndis.h	51;"	d
NDIS_OID_GEN_MAXIMUM_LOOKAHEAD	usb/device/class/usb_device_cdc_rndis.h	50;"	d
NDIS_OID_GEN_MAXIMUM_SEND_PACKETS	usb/device/class/usb_device_cdc_rndis.h	66;"	d
NDIS_OID_GEN_MAXIMUM_TOTAL_SIZE	usb/device/class/usb_device_cdc_rndis.h	62;"	d
NDIS_OID_GEN_MEDIA_CAPABILITIES	usb/device/class/usb_device_cdc_rndis.h	115;"	d
NDIS_OID_GEN_MEDIA_CONNECT_STATUS	usb/device/class/usb_device_cdc_rndis.h	65;"	d
NDIS_OID_GEN_MEDIA_IN_USE	usb/device/class/usb_device_cdc_rndis.h	49;"	d
NDIS_OID_GEN_MEDIA_SUPPORTED	usb/device/class/usb_device_cdc_rndis.h	48;"	d
NDIS_OID_GEN_MULTICAST_BYTES_RCV	usb/device/class/usb_device_cdc_rndis.h	80;"	d
NDIS_OID_GEN_MULTICAST_BYTES_XMIT	usb/device/class/usb_device_cdc_rndis.h	74;"	d
NDIS_OID_GEN_MULTICAST_FRAMES_RCV	usb/device/class/usb_device_cdc_rndis.h	81;"	d
NDIS_OID_GEN_MULTICAST_FRAMES_XMIT	usb/device/class/usb_device_cdc_rndis.h	75;"	d
NDIS_OID_GEN_NETWORK_LAYER_ADDRESSES	usb/device/class/usb_device_cdc_rndis.h	110;"	d
NDIS_OID_GEN_PHYSICAL_MEDIUM	usb/device/class/usb_device_cdc_rndis.h	116;"	d
NDIS_OID_GEN_PROTOCOL_OPTIONS	usb/device/class/usb_device_cdc_rndis.h	63;"	d
NDIS_OID_GEN_RCV_CRC_ERROR	usb/device/class/usb_device_cdc_rndis.h	84;"	d
NDIS_OID_GEN_RCV_ERROR	usb/device/class/usb_device_cdc_rndis.h	70;"	d
NDIS_OID_GEN_RCV_NO_BUFFER	usb/device/class/usb_device_cdc_rndis.h	71;"	d
NDIS_OID_GEN_RCV_OK	usb/device/class/usb_device_cdc_rndis.h	68;"	d
NDIS_OID_GEN_RECEIVE_BLOCK_SIZE	usb/device/class/usb_device_cdc_rndis.h	56;"	d
NDIS_OID_GEN_RECEIVE_BUFFER_SPACE	usb/device/class/usb_device_cdc_rndis.h	54;"	d
NDIS_OID_GEN_RNDIS_CONFIG_PARAMETER	usb/device/class/usb_device_cdc_rndis.h	113;"	d
NDIS_OID_GEN_SUPPORTED_GUIDS	usb/device/class/usb_device_cdc_rndis.h	109;"	d
NDIS_OID_GEN_SUPPORTED_LIST	usb/device/class/usb_device_cdc_rndis.h	46;"	d
NDIS_OID_GEN_TRANSMIT_BLOCK_SIZE	usb/device/class/usb_device_cdc_rndis.h	55;"	d
NDIS_OID_GEN_TRANSMIT_BUFFER_SPACE	usb/device/class/usb_device_cdc_rndis.h	53;"	d
NDIS_OID_GEN_TRANSMIT_QUEUE_LENGTH	usb/device/class/usb_device_cdc_rndis.h	85;"	d
NDIS_OID_GEN_TRANSPORT_HEADER_OFFSET	usb/device/class/usb_device_cdc_rndis.h	111;"	d
NDIS_OID_GEN_VENDOR_DESCRIPTION	usb/device/class/usb_device_cdc_rndis.h	58;"	d
NDIS_OID_GEN_VENDOR_DRIVER_VERSION	usb/device/class/usb_device_cdc_rndis.h	108;"	d
NDIS_OID_GEN_VENDOR_ID	usb/device/class/usb_device_cdc_rndis.h	57;"	d
NDIS_OID_GEN_VLAN_ID	usb/device/class/usb_device_cdc_rndis.h	114;"	d
NDIS_OID_GEN_XMIT_ERROR	usb/device/class/usb_device_cdc_rndis.h	69;"	d
NDIS_OID_GEN_XMIT_OK	usb/device/class/usb_device_cdc_rndis.h	67;"	d
NDIS_PACKET_TYPE_ALL_FUNCTIONAL	usb/device/class/usb_device_cdc_rndis.h	233;"	d
NDIS_PACKET_TYPE_ALL_LOCAL	usb/device/class/usb_device_cdc_rndis.h	223;"	d
NDIS_PACKET_TYPE_ALL_MULTICAST	usb/device/class/usb_device_cdc_rndis.h	209;"	d
NDIS_PACKET_TYPE_BROADCAST	usb/device/class/usb_device_cdc_rndis.h	211;"	d
NDIS_PACKET_TYPE_DIRECTED	usb/device/class/usb_device_cdc_rndis.h	197;"	d
NDIS_PACKET_TYPE_FUNCTIONAL	usb/device/class/usb_device_cdc_rndis.h	229;"	d
NDIS_PACKET_TYPE_GROUP	usb/device/class/usb_device_cdc_rndis.h	235;"	d
NDIS_PACKET_TYPE_MAC_FRAME	usb/device/class/usb_device_cdc_rndis.h	225;"	d
NDIS_PACKET_TYPE_MULTICAST	usb/device/class/usb_device_cdc_rndis.h	205;"	d
NDIS_PACKET_TYPE_PROMISCUOUS	usb/device/class/usb_device_cdc_rndis.h	217;"	d
NDIS_PACKET_TYPE_SMT	usb/device/class/usb_device_cdc_rndis.h	219;"	d
NDIS_PACKET_TYPE_SOURCE_ROUTING	usb/device/class/usb_device_cdc_rndis.h	215;"	d
NDIS_PHYSICAL_MEDIUM1394	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM1394,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUMDSL	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUMDSL, \/* includes ADSL and UADSL (G.Lite) *\/$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_BLUETOOTH	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_BLUETOOTH,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_CABLE_MODEM	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_CABLE_MODEM,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_FIBRE_CHANNEL	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_FIBRE_CHANNEL,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_MAX	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_MAX \/* Not a real physical type, defined as an upper-bound. *\/$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_NATIVE802_11	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_NATIVE802_11,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_PHONE_LINE	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_PHONE_LINE,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_POWER_LINE	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_POWER_LINE,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_UNSPECIFIED	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_UNSPECIFIED,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_WIRELESS_LAN	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_WIRELESS_LAN,$/;"	e	enum:_ndis_physical_medium_enum
NDIS_PHYSICAL_MEDIUM_WIRELESS_WAN	usb/device/class/usb_device_cdc_rndis.h	/^    NDIS_PHYSICAL_MEDIUM_WIRELESS_WAN,$/;"	e	enum:_ndis_physical_medium_enum
NETBIOSNSFILES	lwip/src/Filelists.mk	/^NETBIOSNSFILES=$(LWIPDIR)\/apps\/netbiosns\/netbiosns.c$/;"	m
NETBUF_FLAG_CHKSUM	lwip/src/include/lwip/netbuf.h	57;"	d
NETBUF_FLAG_DESTADDR	lwip/src/include/lwip/netbuf.h	55;"	d
NETCONNTYPE_DATAGRAM	lwip/src/include/lwip/api.h	98;"	d
NETCONNTYPE_GROUP	lwip/src/include/lwip/api.h	97;"	d
NETCONNTYPE_ISIPV6	lwip/src/include/lwip/api.h	101;"	d
NETCONNTYPE_ISIPV6	lwip/src/include/lwip/api.h	105;"	d
NETCONNTYPE_ISUDPLITE	lwip/src/include/lwip/api.h	102;"	d
NETCONNTYPE_ISUDPLITE	lwip/src/include/lwip/api.h	106;"	d
NETCONNTYPE_ISUDPNOCHKSUM	lwip/src/include/lwip/api.h	103;"	d
NETCONNTYPE_ISUDPNOCHKSUM	lwip/src/include/lwip/api.h	107;"	d
NETCONN_ACCEPTMBOX_WAITABLE	lwip/src/api/api_lib.c	101;"	d	file:
NETCONN_ACCEPTMBOX_WAITABLE	lwip/src/api/api_lib.c	96;"	d	file:
NETCONN_CLOSE	lwip/src/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	lwip/src/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	lwip/src/include/lwip/api.h	63;"	d
NETCONN_DNS_DEFAULT	lwip/src/include/lwip/api.h	199;"	d
NETCONN_DNS_IPV4	lwip/src/include/lwip/api.h	200;"	d
NETCONN_DNS_IPV4_IPV6	lwip/src/include/lwip/api.h	202;"	d
NETCONN_DNS_IPV6	lwip/src/include/lwip/api.h	201;"	d
NETCONN_DNS_IPV6_IPV4	lwip/src/include/lwip/api.h	203;"	d
NETCONN_DONTBLOCK	lwip/src/include/lwip/api.h	65;"	d
NETCONN_EVT_ERROR	lwip/src/include/lwip/api.h	/^  NETCONN_EVT_ERROR$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVMINUS	lwip/src/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	lwip/src/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	lwip/src/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	lwip/src/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_FIN_RX_PENDING	lwip/src/include/lwip/api.h	94;"	d
NETCONN_FLAG_CHECK_WRITESPACE	lwip/src/include/lwip/api.h	82;"	d
NETCONN_FLAG_IN_NONBLOCKING_CONNECT	lwip/src/include/lwip/api.h	75;"	d
NETCONN_FLAG_IPV6_V6ONLY	lwip/src/include/lwip/api.h	87;"	d
NETCONN_FLAG_MBOXCLOSED	lwip/src/include/lwip/api.h	71;"	d
NETCONN_FLAG_MBOXINVALID	lwip/src/include/lwip/api.h	78;"	d
NETCONN_FLAG_NON_BLOCKING	lwip/src/include/lwip/api.h	73;"	d
NETCONN_FLAG_PKTINFO	lwip/src/include/lwip/api.h	91;"	d
NETCONN_INVALID	lwip/src/include/lwip/api.h	/^  NETCONN_INVALID     = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	lwip/src/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	lwip/src/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	lwip/src/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MBOX_VALID	lwip/src/api/api_msg.c	69;"	d	file:
NETCONN_MBOX_VALID	lwip/src/api/api_msg.c	71;"	d	file:
NETCONN_MBOX_WAITING_DEC	lwip/src/api/api_lib.c	103;"	d	file:
NETCONN_MBOX_WAITING_DEC	lwip/src/api/api_lib.c	98;"	d	file:
NETCONN_MBOX_WAITING_INC	lwip/src/api/api_lib.c	102;"	d	file:
NETCONN_MBOX_WAITING_INC	lwip/src/api/api_lib.c	97;"	d	file:
NETCONN_MORE	lwip/src/include/lwip/api.h	64;"	d
NETCONN_NOAUTORCVD	lwip/src/include/lwip/api.h	66;"	d
NETCONN_NOCOPY	lwip/src/include/lwip/api.h	62;"	d
NETCONN_NOFIN	lwip/src/include/lwip/api.h	67;"	d
NETCONN_NOFLAG	lwip/src/include/lwip/api.h	61;"	d
NETCONN_NONE	lwip/src/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	lwip/src/include/lwip/api.h	/^  NETCONN_RAW         = 0x40$/;"	e	enum:netconn_type
NETCONN_RAW_IPV6	lwip/src/include/lwip/api.h	/^  , NETCONN_RAW_IPV6    = NETCONN_RAW | NETCONN_TYPE_IPV6 \/* 0x48 *\/$/;"	e	enum:netconn_type
NETCONN_RECVMBOX_WAITABLE	lwip/src/api/api_lib.c	100;"	d	file:
NETCONN_RECVMBOX_WAITABLE	lwip/src/api/api_lib.c	95;"	d	file:
NETCONN_SHUT_RD	lwip/src/include/lwip/priv/api_msg.h	69;"	d
NETCONN_SHUT_RDWR	lwip/src/include/lwip/priv/api_msg.h	71;"	d
NETCONN_SHUT_WR	lwip/src/include/lwip/priv/api_msg.h	70;"	d
NETCONN_TCP	lwip/src/include/lwip/api.h	/^  NETCONN_TCP         = 0x10,$/;"	e	enum:netconn_type
NETCONN_TCP_IPV6	lwip/src/include/lwip/api.h	/^  NETCONN_TCP_IPV6    = NETCONN_TCP | NETCONN_TYPE_IPV6 \/* 0x18 *\/,$/;"	e	enum:netconn_type
NETCONN_TCP_POLL_INTERVAL	lwip/src/api/api_msg.c	60;"	d	file:
NETCONN_TYPE_IPV6	lwip/src/include/lwip/api.h	100;"	d
NETCONN_UDP	lwip/src/include/lwip/api.h	/^  NETCONN_UDP         = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	lwip/src/include/lwip/api.h	/^  NETCONN_UDPLITE     = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPLITE_IPV6	lwip/src/include/lwip/api.h	/^  NETCONN_UDPLITE_IPV6     = NETCONN_UDPLITE | NETCONN_TYPE_IPV6 \/* 0x29 *\/,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	lwip/src/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM = 0x22,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM_IPV6	lwip/src/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM_IPV6 = NETCONN_UDPNOCHKSUM | NETCONN_TYPE_IPV6 \/* 0x2a *\/,$/;"	e	enum:netconn_type
NETCONN_UDP_IPV6	lwip/src/include/lwip/api.h	/^  NETCONN_UDP_IPV6         = NETCONN_UDP | NETCONN_TYPE_IPV6 \/* 0x28 *\/,$/;"	e	enum:netconn_type
NETCONN_WRITE	lwip/src/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETDB_ELEM_SIZE	lwip/src/include/lwip/netdb.h	115;"	d
NETIFAPI_ARP_PERM	lwip/src/include/lwip/netifapi.h	/^  NETIFAPI_ARP_PERM \/* Permanent entry *\/$/;"	e	enum:netifapi_arp_entry
NETIFAPI_IPADDR_DEF	lwip/src/include/lwip/priv/api_msg.h	229;"	d
NETIFAPI_IPADDR_DEF	lwip/src/include/lwip/priv/api_msg.h	231;"	d
NETIFAPI_VAR_ALLOC	lwip/src/api/netifapi.c	54;"	d	file:
NETIFAPI_VAR_DECLARE	lwip/src/api/netifapi.c	53;"	d	file:
NETIFAPI_VAR_FREE	lwip/src/api/netifapi.c	55;"	d	file:
NETIFAPI_VAR_REF	lwip/src/api/netifapi.c	52;"	d	file:
NETIFFILES	lwip/src/Filelists.mk	/^NETIFFILES=$(LWIPDIR)\/netif\/ethernet.c \\$/;"	m
NETIF_ADDR_IDX_MAX	lwip/src/include/lwip/netif.h	242;"	d
NETIF_ADDR_IDX_MAX	lwip/src/include/lwip/netif.h	245;"	d
NETIF_ADD_MAC_FILTER	lwip/src/include/lwip/netif.h	/^  NETIF_ADD_MAC_FILTER = 1$/;"	e	enum:netif_mac_filter_action
NETIF_CHECKSUM_CHECK_ICMP	lwip/src/include/lwip/netif.h	146;"	d
NETIF_CHECKSUM_CHECK_ICMP6	lwip/src/include/lwip/netif.h	147;"	d
NETIF_CHECKSUM_CHECK_IP	lwip/src/include/lwip/netif.h	143;"	d
NETIF_CHECKSUM_CHECK_TCP	lwip/src/include/lwip/netif.h	145;"	d
NETIF_CHECKSUM_CHECK_UDP	lwip/src/include/lwip/netif.h	144;"	d
NETIF_CHECKSUM_DISABLE_ALL	lwip/src/include/lwip/netif.h	149;"	d
NETIF_CHECKSUM_ENABLE_ALL	lwip/src/include/lwip/netif.h	148;"	d
NETIF_CHECKSUM_GEN_ICMP	lwip/src/include/lwip/netif.h	141;"	d
NETIF_CHECKSUM_GEN_ICMP6	lwip/src/include/lwip/netif.h	142;"	d
NETIF_CHECKSUM_GEN_IP	lwip/src/include/lwip/netif.h	138;"	d
NETIF_CHECKSUM_GEN_TCP	lwip/src/include/lwip/netif.h	140;"	d
NETIF_CHECKSUM_GEN_UDP	lwip/src/include/lwip/netif.h	139;"	d
NETIF_DEBUG	lwip/src/include/lwip/opt.h	3267;"	d
NETIF_DECLARE_EXT_CALLBACK	lwip/src/include/lwip/netif.h	654;"	d
NETIF_DECLARE_EXT_CALLBACK	lwip/src/include/lwip/netif.h	659;"	d
NETIF_DEL_MAC_FILTER	lwip/src/include/lwip/netif.h	/^  NETIF_DEL_MAC_FILTER = 0,$/;"	e	enum:netif_mac_filter_action
NETIF_FLAG_BROADCAST	lwip/src/include/lwip/netif.h	87;"	d
NETIF_FLAG_ETHARP	lwip/src/include/lwip/netif.h	97;"	d
NETIF_FLAG_ETHERNET	lwip/src/include/lwip/netif.h	101;"	d
NETIF_FLAG_IGMP	lwip/src/include/lwip/netif.h	104;"	d
NETIF_FLAG_LINK_UP	lwip/src/include/lwip/netif.h	93;"	d
NETIF_FLAG_MLD6	lwip/src/include/lwip/netif.h	107;"	d
NETIF_FLAG_UP	lwip/src/include/lwip/netif.h	84;"	d
NETIF_FOREACH	lwip/src/include/lwip/netif.h	402;"	d
NETIF_FOREACH	lwip/src/include/lwip/netif.h	406;"	d
NETIF_INIT_SNMP	lwip/src/include/lwip/snmp.h	196;"	d
NETIF_LINK_CALLBACK	lwip/src/core/netif.c	100;"	d	file:
NETIF_LINK_CALLBACK	lwip/src/core/netif.c	102;"	d	file:
NETIF_MAX_HWADDR_LEN	lwip/src/include/lwip/netif.h	63;"	d
NETIF_NAMESIZE	lwip/src/include/lwip/netif.h	70;"	d
NETIF_NO_INDEX	lwip/src/include/lwip/netif.h	557;"	d
NETIF_REPORT_TYPE_IPV4	lwip/src/core/netif.c	121;"	d	file:
NETIF_REPORT_TYPE_IPV6	lwip/src/core/netif.c	122;"	d	file:
NETIF_RESET_HINTS	lwip/src/include/lwip/netif.h	545;"	d
NETIF_RESET_HINTS	lwip/src/include/lwip/netif.h	548;"	d
NETIF_SET_CHECKSUM_CTRL	lwip/src/include/lwip/netif.h	393;"	d
NETIF_SET_CHECKSUM_CTRL	lwip/src/include/lwip/netif.h	397;"	d
NETIF_SET_HINTS	lwip/src/include/lwip/netif.h	544;"	d
NETIF_SET_HINTS	lwip/src/include/lwip/netif.h	547;"	d
NETIF_STATUS_CALLBACK	lwip/src/core/netif.c	94;"	d	file:
NETIF_STATUS_CALLBACK	lwip/src/core/netif.c	96;"	d	file:
NEWAMP1_K	codec2/newamp1.h	35;"	d
NEWAMP1_N_INDEXES	codec2/newamp1.h	33;"	d
NEWAMP1_PHASE_NFFT	codec2/newamp1.h	34;"	d
NEWAMP1_VQ_MBEST_DEPTH	codec2/newamp1.c	44;"	d	file:
NEW_A	lwip/src/include/netif/ppp/vj.h	94;"	d
NEW_C	lwip/src/include/netif/ppp/vj.h	91;"	d
NEW_I	lwip/src/include/netif/ppp/vj.h	92;"	d
NEW_S	lwip/src/include/netif/ppp/vj.h	93;"	d
NEW_U	lwip/src/include/netif/ppp/vj.h	96;"	d
NEW_W	lwip/src/include/netif/ppp/vj.h	95;"	d
NLP	codec2/nlp.c	/^} NLP;$/;"	t	typeref:struct:__anon138	file:
NLP_NTAP	codec2/nlp.c	55;"	d	file:
NMISRC	device/LPC54018.h	/^  __IO uint32_t NMISRC;                            \/**< NMI Source Select, offset: 0x48 *\/$/;"	m	struct:__anon185
NMI_Handler	startup/startup_lpc54018.c	/^WEAK_AV void NMI_Handler(void)$/;"	f
NOT	device/LPC54018.h	/^  __O  uint32_t NOT[6];                            \/**< Toggle port, array offset: 0x2300, array step: 0x4 *\/$/;"	m	struct:__anon159
NOTIF_PACKET_SIZE	usb/device/class/usb_device_cdc_rndis.c	33;"	d	file:
NOTIF_PACKET_SIZE	vcom/virtual_com.h	45;"	d
NOTIF_REQUEST_TYPE	vcom/virtual_com.h	47;"	d
NO_DATA	lwip/src/include/lwip/netdb.h	75;"	d
NO_RECOVERY	lwip/src/include/lwip/netdb.h	76;"	d
NO_SYS	lwip/src/include/lwip/opt.h	89;"	d
NO_SYS	source/lwipopts.h	30;"	d
NO_SYS	source/lwipopts.h	50;"	d
NPMODE_DROP	lwip/src/include/netif/ppp/ppp_impl.h	/^    NPMODE_DROP,		\/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	lwip/src/include/netif/ppp/ppp_impl.h	/^    NPMODE_ERROR,		\/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	lwip/src/include/netif/ppp/ppp_impl.h	/^    NPMODE_PASS,		\/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	lwip/src/include/netif/ppp/ppp_impl.h	/^    NPMODE_QUEUE		\/* save it up for later. *\/$/;"	e	enum:NPmode
NPmode	lwip/src/include/netif/ppp/ppp_impl.h	/^enum NPmode {$/;"	g
NSACR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t NSACR;                  \/*!< Offset: 0x08C (R\/W)  Non-Secure Access Control Register *\/$/;"	m	struct:__anon18
NTPasswordHash	lwip/src/netif/ppp/chap_ms.c	/^static void NTPasswordHash(u_char *secret, int secret_len, u_char hash[MD4_SIGNATURE_SIZE]) {$/;"	f	file:
NULL	emwin/emWin_header/LCD_Protected.h	55;"	d
NULL	lwip/src/include/lwip/def.h	79;"	d
NULL	lwip/src/include/lwip/def.h	81;"	d
NUMBER_OF_INT_VECTORS	device/LPC54018.h	70;"	d
NUM_SOCKETS	lwip/src/include/lwip/priv/sockets_priv.h	52;"	d
NUM_TCP_PCB_LISTS	lwip/src/include/lwip/priv/tcp_priv.h	343;"	d
NUM_TCP_PCB_LISTS_NO_TIME_WAIT	lwip/src/include/lwip/priv/tcp_priv.h	342;"	d
NVALMAX	device/system_LPC54018.c	56;"	d	file:
NVALMAX	drivers/fsl_clock.c	19;"	d	file:
NVIC	CMSIS/core_armv8mbl.h	1178;"	d
NVIC	CMSIS/core_armv8mml.h	2039;"	d
NVIC	CMSIS/core_cm4.h	1563;"	d
NVIC_BASE	CMSIS/core_armv8mbl.h	1172;"	d
NVIC_BASE	CMSIS/core_armv8mml.h	2033;"	d
NVIC_BASE	CMSIS/core_cm4.h	1557;"	d
NVIC_BASE_NS	CMSIS/core_armv8mbl.h	1197;"	d
NVIC_BASE_NS	CMSIS/core_armv8mml.h	2062;"	d
NVIC_ClearPendingIRQ	CMSIS/core_armv8mbl.h	1249;"	d
NVIC_ClearPendingIRQ	CMSIS/core_armv8mml.h	2119;"	d
NVIC_ClearPendingIRQ	CMSIS/core_cm4.h	1616;"	d
NVIC_ClearTargetState	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t NVIC_ClearTargetState(IRQn_Type IRQn)$/;"	f
NVIC_ClearTargetState	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t NVIC_ClearTargetState(IRQn_Type IRQn)$/;"	f
NVIC_DecodePriority	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* const pPreemptPriority, uint32_t* const pSubPriority)$/;"	f
NVIC_DecodePriority	CMSIS/core_cm4.h	/^__STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* const pPreemptPriority, uint32_t* const pSubPriority)$/;"	f
NVIC_DisableIRQ	CMSIS/core_armv8mbl.h	1246;"	d
NVIC_DisableIRQ	CMSIS/core_armv8mml.h	2116;"	d
NVIC_DisableIRQ	CMSIS/core_cm4.h	1613;"	d
NVIC_EnableIRQ	CMSIS/core_armv8mbl.h	1244;"	d
NVIC_EnableIRQ	CMSIS/core_armv8mml.h	2114;"	d
NVIC_EnableIRQ	CMSIS/core_cm4.h	1611;"	d
NVIC_EncodePriority	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)$/;"	f
NVIC_EncodePriority	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)$/;"	f
NVIC_GetActive	CMSIS/core_armv8mbl.h	1250;"	d
NVIC_GetActive	CMSIS/core_armv8mml.h	2120;"	d
NVIC_GetActive	CMSIS/core_cm4.h	1617;"	d
NVIC_GetEnableIRQ	CMSIS/core_armv8mbl.h	1245;"	d
NVIC_GetEnableIRQ	CMSIS/core_armv8mml.h	2115;"	d
NVIC_GetEnableIRQ	CMSIS/core_cm4.h	1612;"	d
NVIC_GetPendingIRQ	CMSIS/core_armv8mbl.h	1247;"	d
NVIC_GetPendingIRQ	CMSIS/core_armv8mml.h	2117;"	d
NVIC_GetPendingIRQ	CMSIS/core_cm4.h	1614;"	d
NVIC_GetPriority	CMSIS/core_armv8mbl.h	1252;"	d
NVIC_GetPriority	CMSIS/core_armv8mml.h	2122;"	d
NVIC_GetPriority	CMSIS/core_cm4.h	1619;"	d
NVIC_GetPriorityGrouping	CMSIS/core_armv8mml.h	2113;"	d
NVIC_GetPriorityGrouping	CMSIS/core_cm4.h	1610;"	d
NVIC_GetTargetState	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t NVIC_GetTargetState(IRQn_Type IRQn)$/;"	f
NVIC_GetTargetState	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t NVIC_GetTargetState(IRQn_Type IRQn)$/;"	f
NVIC_GetVector	CMSIS/core_armv8mbl.h	1263;"	d
NVIC_GetVector	CMSIS/core_armv8mml.h	2133;"	d
NVIC_GetVector	CMSIS/core_cm4.h	1630;"	d
NVIC_NS	CMSIS/core_armv8mbl.h	1202;"	d
NVIC_NS	CMSIS/core_armv8mml.h	2068;"	d
NVIC_STIR_INTID_Msk	CMSIS/core_armv8mml.h	482;"	d
NVIC_STIR_INTID_Msk	CMSIS/core_cm4.h	425;"	d
NVIC_STIR_INTID_Pos	CMSIS/core_armv8mml.h	481;"	d
NVIC_STIR_INTID_Pos	CMSIS/core_cm4.h	424;"	d
NVIC_SetPendingIRQ	CMSIS/core_armv8mbl.h	1248;"	d
NVIC_SetPendingIRQ	CMSIS/core_armv8mml.h	2118;"	d
NVIC_SetPendingIRQ	CMSIS/core_cm4.h	1615;"	d
NVIC_SetPriority	CMSIS/core_armv8mbl.h	1251;"	d
NVIC_SetPriority	CMSIS/core_armv8mml.h	2121;"	d
NVIC_SetPriority	CMSIS/core_cm4.h	1618;"	d
NVIC_SetPriorityGrouping	CMSIS/core_armv8mml.h	2112;"	d
NVIC_SetPriorityGrouping	CMSIS/core_cm4.h	1609;"	d
NVIC_SetTargetState	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t NVIC_SetTargetState(IRQn_Type IRQn)$/;"	f
NVIC_SetTargetState	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t NVIC_SetTargetState(IRQn_Type IRQn)$/;"	f
NVIC_SetVector	CMSIS/core_armv8mbl.h	1262;"	d
NVIC_SetVector	CMSIS/core_armv8mml.h	2132;"	d
NVIC_SetVector	CMSIS/core_cm4.h	1629;"	d
NVIC_SystemReset	CMSIS/core_armv8mbl.h	1253;"	d
NVIC_SystemReset	CMSIS/core_armv8mml.h	2123;"	d
NVIC_SystemReset	CMSIS/core_cm4.h	1620;"	d
NVIC_Type	CMSIS/core_armv8mbl.h	/^}  NVIC_Type;$/;"	t	typeref:struct:__anon121
NVIC_Type	CMSIS/core_armv8mml.h	/^}  NVIC_Type;$/;"	t	typeref:struct:__anon17
NVIC_Type	CMSIS/core_cm4.h	/^}  NVIC_Type;$/;"	t	typeref:struct:__anon39
NVIC_USER_IRQ_OFFSET	CMSIS/core_armv8mbl.h	1266;"	d
NVIC_USER_IRQ_OFFSET	CMSIS/core_armv8mml.h	2136;"	d
NVIC_USER_IRQ_OFFSET	CMSIS/core_cm4.h	1633;"	d
NXP_FLD2VAL	device/LPC54018.h	15669;"	d
NXP_VAL2FLD	device/LPC54018.h	15662;"	d
N_S	codec2/defines.h	39;"	d
Nbits	codec2/fsk.h	/^    int Nbits;              \/* Number of bits spat out in a processing frame *\/$/;"	m	struct:FSK
Nby2	CMSIS/arm_math.h	/^    uint16_t Nby2;                       \/**< half of the length of the DCT4. *\/$/;"	m	struct:__anon83
Nby2	CMSIS/arm_math.h	/^    uint16_t Nby2;                       \/**< half of the length of the DCT4. *\/$/;"	m	struct:__anon84
Nby2	CMSIS/arm_math.h	/^    uint16_t Nby2;                       \/**< half of the length of the DCT4. *\/$/;"	m	struct:__anon85
Nc	codec2/modem_stats.h	/^    int    Nc;$/;"	m	struct:MODEM_STATS
Ndft	codec2/fsk.h	/^    int Ndft;               \/* buffer size for freq offset est fft *\/$/;"	m	struct:FSK
NextRestartNum	emwin/emWin_header/GUI_JPEG_Private.h	/^  int NextRestartNum;$/;"	m	struct:GUI_JPEG_DCONTEXT
Nmem	codec2/fsk.h	/^    int Nmem;               \/* size of extra mem for timing adj *\/$/;"	m	struct:FSK
NoAction	emwin/emWin_header/SPINBOX_Private.h	/^  I8                  NoAction;$/;"	m	struct:__anon322
NoAlpha	emwin/emWin_header/LCD.h	/^  int NoAlpha;$/;"	m	struct:__anon408
NonMaskableInt_IRQn	device/LPC54018.h	/^  NonMaskableInt_IRQn          = -14,              \/**< Non Maskable Interrupt *\/$/;"	e	enum:IRQn
NotAvail_IRQn	device/LPC54018.h	/^  NotAvail_IRQn                = -128,             \/**< Not available device specific interrupt *\/$/;"	e	enum:IRQn
Nsym	codec2/fsk.h	/^    int Nsym;               \/* Number of symbols spat out in a processing frame *\/$/;"	m	struct:FSK
NumAreas	emwin/emWin_header/GUI_Type.h	/^  U16 NumAreas;     \/* Number of character areas *\/$/;"	m	struct:__anon262
NumBitsLeft	emwin/emWin_header/GUI_JPEG_Private.h	/^  int NumBitsLeft;$/;"	m	struct:GUI_JPEG_DCONTEXT
NumBlocksPerMCU	emwin/emWin_header/GUI_JPEG_Private.h	/^  int NumBlocksPerMCU;$/;"	m	struct:GUI_JPEG_DCONTEXT
NumBlocksX	emwin/emWin_header/GUI_JPEG_Private.h	/^  int NumBlocksX;$/;"	m	struct:__anon363
NumBlocksY	emwin/emWin_header/GUI_JPEG_Private.h	/^  int NumBlocksY;$/;"	m	struct:__anon363
NumBytes	emwin/emWin_header/GUI_Type.h	/^  U32 NumBytes;            \/* Size of file in bytes *\/$/;"	m	struct:__anon267
NumBytesInBuffer	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int NumBytesInBuffer;$/;"	m	struct:DRIVER_CONTEXT
NumBytesInBuffer	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int NumBytesInBuffer;$/;"	m	struct:DRIVER_CONTEXT
NumBytesInBuffer	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int NumBytesInBuffer; \/\/ Number of bytes in buffer$/;"	m	struct:DRIVER_CONTEXT
NumBytesInBuffer	emwin/emWin_header/GUI_GIF_Private.h	/^  unsigned            NumBytesInBuffer;     \/* Remaining bytes in buffer *\/$/;"	m	struct:__anon323
NumBytesInBuffer	emwin/emWin_header/GUI_JPEG_Private.h	/^  unsigned   NumBytesInBuffer;$/;"	m	struct:GUI_JPEG_DCONTEXT
NumBytesInBuffer	emwin/emWin_header/GUI_VNC.h	/^  int  NumBytesInBuffer;$/;"	m	struct:__anon344
NumBytesStuffed	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8         NumBytesStuffed;  \/\/ Number of stuffed bytes$/;"	m	struct:GUI_JPEG_DCONTEXT
NumColors	emwin/emWin_header/CHOOSECOLOR.h	/^  unsigned          NumColors;$/;"	m	struct:__anon234
NumColors	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int NumColors;$/;"	m	struct:__anon370
NumColors	emwin/emWin_header/GUI_GIF_Private.h	/^  int NumColors;$/;"	m	struct:__anon324
NumColors	emwin/emWin_header/GUI_Type.h	/^  U16 NumColors;$/;"	m	struct:__anon244
NumColors	emwin/emWin_header/GUI_Type.h	/^  int NumColors;$/;"	m	struct:__anon246
NumColorsPerLine	emwin/emWin_header/CHOOSECOLOR.h	/^  unsigned          NumColorsPerLine;$/;"	m	struct:__anon234
NumCompsPerFrame	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 NumCompsPerFrame;                      \/\/ Number of components per frame$/;"	m	struct:GUI_JPEG_DCONTEXT
NumCompsPerScan	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 NumCompsPerScan;                       \/\/ Number of components per scan$/;"	m	struct:GUI_JPEG_DCONTEXT
NumConnectors	emwin/emWin_header/TREEVIEW.h	/^  U8 NumConnectors;$/;"	m	struct:__anon372
NumDecs	emwin/emWin_header/EDIT_Private.h	/^  U8                   NumDecs;         \/\/ Number of decimals$/;"	m	struct:EDIT_Obj_struct
NumDecs	emwin/emWin_header/GRAPH_Private.h	/^  int               NumDecs;$/;"	m	struct:GRAPH_SCALE_OBJ
NumDummyReads	emwin/emWin_header/GUIDRV_FlexColor.h	/^  int NumDummyReads;$/;"	m	struct:__anon364
NumDummyReads	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int NumDummyReads;  \/\/ Number of required dummy reads$/;"	m	struct:DRIVER_CONTEXT
NumDummyReads	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int NumDummyReads;$/;"	m	struct:DRIVER_CONTEXT
NumEntries	emwin/emWin_header/LCD.h	/^  int               NumEntries;$/;"	m	struct:__anon407
NumEntries	emwin/emWin_header/LCD.h	/^  int              NumEntries;$/;"	m	struct:__anon405
NumEntries	emwin/emWin_header/LCD_Protected.h	/^  I16         NumEntries;$/;"	m	struct:__anon355
NumExtraBytes	emwin/emWin_header/DIALOG_Intern.h	/^  U32                      NumExtraBytes;    \/\/ Number of extra bytes usable with <WIDGET>_SetUserData & <WIDGET>_GetUserData$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
NumFixedBytes	emwin/emWin_header/GUI.h	/^  U32 NumFixedBytes;$/;"	m	struct:__anon392
NumFrames	emwin/emWin_header/GUI.h	/^  U32 NumFrames;     \/\/ Number of frames$/;"	m	struct:__anon388
NumImages	emwin/emWin_header/GUI_Type.h	/^  int NumImages;$/;"	m	struct:__anon250
NumImages	emwin/emWin_header/IMAGE_Private.h	/^  int                 NumImages;    \/\/ Number of (sub)images$/;"	m	struct:__anon315
NumItems	emwin/emWin_header/GRAPH_Private.h	/^  unsigned        NumItems;$/;"	m	struct:GRAPH_DATA_OBJ
NumItems	emwin/emWin_header/GUI.h	/^  int                 NumItems;$/;"	m	struct:__anon390
NumItems	emwin/emWin_header/GUI_ARRAY_Private.h	/^  U16 NumItems;$/;"	m	struct:__anon365
NumItems	emwin/emWin_header/RADIO_Private.h	/^  U16 NumItems;$/;"	m	struct:__anon343
NumItems	emwin/emWin_header/SCROLLBAR_Private.h	/^  int NumItems, v, PageSize;$/;"	m	struct:SCROLLBAR_OBJ
NumItems	emwin/emWin_header/TREEVIEW_Private.h	/^  int NumItems;$/;"	m	struct:__anon227
NumItems	emwin/emWin_header/WM.h	/^  int NumItems, v, PageSize;$/;"	m	struct:__anon284
NumLines	emwin/emWin_header/TREEVIEW.h	/^  U8 NumLines;$/;"	m	struct:__anon372
NumPages	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int NumPages;$/;"	m	struct:DRIVER_CONTEXT
NumPoints	emwin/emWin_header/GUI_Type.h	/^  U8  NumPoints;$/;"	m	struct:__anon271
NumPoints	emwin/emWin_header/GUI_Type.h	/^  unsigned       NumPoints;$/;"	m	struct:__anon270
NumStates	emwin/emWin_header/CHECKBOX_Private.h	/^  U8                  NumStates;$/;"	m	struct:__anon206
NumTicks	emwin/emWin_header/SLIDER.h	/^  int NumTicks;$/;"	m	struct:__anon305
NumTicks	emwin/emWin_header/SLIDER_Private.h	/^  int                 NumTicks;$/;"	m	struct:__anon378
NumVisItems	emwin/emWin_header/TREEVIEW_Private.h	/^  int NumVisItems;$/;"	m	struct:__anon227
NumberParityBits	codec2/mpdecode_core.h	/^    int NumberParityBits;$/;"	m	struct:LDPC
NumberRowsHcols	codec2/mpdecode_core.h	/^    int NumberRowsHcols;$/;"	m	struct:LDPC
OBJS	Debug/sources.mk	/^OBJS := $/;"	m
OBJ_SRCS	Debug/sources.mk	/^OBJ_SRCS := $/;"	m
OFDM	codec2/ofdm_internal.h	/^struct OFDM {$/;"	s
OFDM_AMP_SCALE	codec2/codec2_ofdm.h	46;"	d
OFDM_BITSPERFRAME	codec2/ofdm_internal.h	73;"	d
OFDM_BPS	codec2/ofdm_internal.h	51;"	d
OFDM_CENTRE	codec2/ofdm_internal.h	54;"	d
OFDM_CLIP	codec2/codec2_ofdm.h	47;"	d
OFDM_CONFIG	codec2/ofdm_internal.h	/^struct OFDM_CONFIG{$/;"	s
OFDM_FS	codec2/ofdm_internal.h	50;"	d
OFDM_FTWINDOWWIDTH	codec2/ofdm_internal.h	71;"	d
OFDM_INTERNAL_H	codec2/ofdm_internal.h	29;"	d
OFDM_INVERSE_M	codec2/ofdm_internal.h	68;"	d
OFDM_M	codec2/ofdm_internal.h	58;"	d
OFDM_M	codec2/ofdm_internal.h	64;"	d
OFDM_MAX_SAMPLESPERFRAME	codec2/ofdm_internal.h	79;"	d
OFDM_NC	codec2/ofdm_internal.h	47;"	d
OFDM_NCP	codec2/ofdm_internal.h	59;"	d
OFDM_NCP	codec2/ofdm_internal.h	65;"	d
OFDM_NS	codec2/ofdm_internal.h	53;"	d
OFDM_NTXTBITS	codec2/ofdm_internal.h	88;"	d
OFDM_NUWBITS	codec2/ofdm_internal.h	92;"	d
OFDM_ROWSPERFRAME	codec2/ofdm_internal.h	75;"	d
OFDM_RS	codec2/ofdm_internal.h	49;"	d
OFDM_RXBUF	codec2/ofdm_internal.h	80;"	d
OFDM_SAMPLESPERFRAME	codec2/ofdm_internal.h	77;"	d
OFDM_STATE_STR	codec2/ofdm_internal.h	94;"	d
OFDM_SYNC_AUTO	codec2/codec2_ofdm.h	49;"	d
OFDM_SYNC_MANUAL	codec2/codec2_ofdm.h	50;"	d
OFDM_SYNC_UNSYNC	codec2/codec2_ofdm.h	48;"	d
OFDM_TCP	codec2/ofdm_internal.h	52;"	d
OFDM_TIMING_MX_THRESH	codec2/ofdm_internal.h	84;"	d
OFDM_TS	codec2/ofdm_internal.h	48;"	d
OFF2PTR08	emwin/emWin_header/GUIDRV_Lin_Private.h	138;"	d
OFF2PTR16	emwin/emWin_header/GUIDRV_Lin_Private.h	139;"	d
OFF2PTR32	emwin/emWin_header/GUIDRV_Lin_Private.h	140;"	d
OPT_PASSIVE	lwip/src/include/netif/ppp/fsm.h	149;"	d
OPT_RESTART	lwip/src/include/netif/ppp/fsm.h	150;"	d
OPT_SILENT	lwip/src/include/netif/ppp/fsm.h	151;"	d
OSR	device/LPC54018.h	/^    __IO uint32_t OSR;                               \/**< Oversample Rate register 0, array offset: 0x0, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
OSR	device/LPC54018.h	/^  __IO uint32_t OSR;                               \/**< Oversample selection register for asynchronous communication., offset: 0x28 *\/$/;"	m	struct:__anon186
OSR	device/LPC54018.h	/^  __IO uint32_t OSR;                               \/**< Oversampling register, offset: 0x2C *\/$/;"	m	struct:__anon179
OTPC	device/LPC54018.h	7645;"	d
OTPC_AESKEY_COUNT	device/LPC54018.h	7597;"	d
OTPC_AESKEY_KEY	device/LPC54018.h	7593;"	d
OTPC_AESKEY_KEY_MASK	device/LPC54018.h	7591;"	d
OTPC_AESKEY_KEY_SHIFT	device/LPC54018.h	7592;"	d
OTPC_BASE	device/LPC54018.h	7643;"	d
OTPC_BASE_ADDRS	device/LPC54018.h	7647;"	d
OTPC_BASE_PTRS	device/LPC54018.h	7649;"	d
OTPC_ECRP_CRP_ALLOW_ZERO	device/LPC54018.h	7615;"	d
OTPC_ECRP_CRP_ALLOW_ZERO_MASK	device/LPC54018.h	7613;"	d
OTPC_ECRP_CRP_ALLOW_ZERO_SHIFT	device/LPC54018.h	7614;"	d
OTPC_ECRP_CRP_ISP_DISABLE_IAP	device/LPC54018.h	7612;"	d
OTPC_ECRP_CRP_ISP_DISABLE_IAP_MASK	device/LPC54018.h	7610;"	d
OTPC_ECRP_CRP_ISP_DISABLE_IAP_SHIFT	device/LPC54018.h	7611;"	d
OTPC_ECRP_CRP_ISP_DISABLE_PIN	device/LPC54018.h	7609;"	d
OTPC_ECRP_CRP_ISP_DISABLE_PIN_MASK	device/LPC54018.h	7607;"	d
OTPC_ECRP_CRP_ISP_DISABLE_PIN_SHIFT	device/LPC54018.h	7608;"	d
OTPC_ECRP_CRP_MASS_ERASE_DISABLE	device/LPC54018.h	7603;"	d
OTPC_ECRP_CRP_MASS_ERASE_DISABLE_MASK	device/LPC54018.h	7601;"	d
OTPC_ECRP_CRP_MASS_ERASE_DISABLE_SHIFT	device/LPC54018.h	7602;"	d
OTPC_ECRP_IAP_PROTECTION_ENABLE	device/LPC54018.h	7606;"	d
OTPC_ECRP_IAP_PROTECTION_ENABLE_MASK	device/LPC54018.h	7604;"	d
OTPC_ECRP_IAP_PROTECTION_ENABLE_SHIFT	device/LPC54018.h	7605;"	d
OTPC_ECRP_JTAG_DISABLE	device/LPC54018.h	7618;"	d
OTPC_ECRP_JTAG_DISABLE_MASK	device/LPC54018.h	7616;"	d
OTPC_ECRP_JTAG_DISABLE_SHIFT	device/LPC54018.h	7617;"	d
OTPC_Type	device/LPC54018.h	/^} OTPC_Type;$/;"	t	typeref:struct:__anon168
OTPC_USER0_USER0	device/LPC54018.h	7625;"	d
OTPC_USER0_USER0_MASK	device/LPC54018.h	7623;"	d
OTPC_USER0_USER0_SHIFT	device/LPC54018.h	7624;"	d
OTPC_USER1_USER1	device/LPC54018.h	7632;"	d
OTPC_USER1_USER1_MASK	device/LPC54018.h	7630;"	d
OTPC_USER1_USER1_SHIFT	device/LPC54018.h	7631;"	d
OTP_API	device/LPC54018.h	15726;"	d
OTP_API_Type	device/LPC54018.h	/^} OTP_API_Type;$/;"	t	typeref:struct:__anon193
OTP_CLOCKS	drivers/fsl_clock.h	242;"	d
OTP_RSTS	drivers/fsl_reset.h	171;"	d
OUT	device/LPC54018.h	/^  } OUT[10];$/;"	m	struct:__anon172	typeref:struct:__anon172::__anon176
OUTCHAR	lwip/src/netif/ppp/utils.c	133;"	d	file:
OUTPUT	device/LPC54018.h	/^  __IO uint32_t OUTPUT;                            \/**< SCT output register, offset: 0x50 *\/$/;"	m	struct:__anon172
OUTPUTDIRCTRL	device/LPC54018.h	/^  __IO uint32_t OUTPUTDIRCTRL;                     \/**< SCT output counter direction control register, offset: 0x54 *\/$/;"	m	struct:__anon172
O_NDELAY	lwip/src/include/lwip/sockets.h	447;"	d
O_NONBLOCK	lwip/src/include/lwip/sockets.h	444;"	d
O_RDONLY	lwip/src/include/lwip/sockets.h	450;"	d
O_RDWR	lwip/src/include/lwip/sockets.h	456;"	d
O_SRCS	Debug/sources.mk	/^O_SRCS := $/;"	m
O_WRONLY	lwip/src/include/lwip/sockets.h	453;"	d
ObjPtr	emwin/emWin_header/WM.h	/^    void * ObjPtr;$/;"	m	struct:WM_Obj
Odd	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int Odd;              \/\/ 1 if the next address to be written is odd$/;"	m	struct:DRIVER_CONTEXT
Off	emwin/emWin_header/GRAPH_Private.h	/^  int               Off;$/;"	m	struct:GRAPH_SCALE_OBJ
Off	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  U32 Off;         \/\/ Used by T6963$/;"	m	struct:DRIVER_CONTEXT
Off	emwin/emWin_header/GUI_BMP_Private.h	/^  U32                 Off;       \/\/ Data pointer$/;"	m	struct:__anon329
Off	emwin/emWin_header/GUI_GIF_Private.h	/^  U32                 Off;                  \/* Data pointer *\/$/;"	m	struct:__anon323
Off	emwin/emWin_header/GUI_JPEG_Private.h	/^  U32 Off;                       \/\/ Data pointer$/;"	m	struct:GUI_JPEG_DCONTEXT
Off	emwin/emWin_header/LCD.h	/^  U32 Off;$/;"	m	struct:__anon413
OffData	emwin/emWin_header/GUI_Type.h	/^  U32 OffData;      \/* Offset of pixel data *\/$/;"	m	struct:__anon264
OffData	emwin/emWin_header/GUI_Type.h	/^  U32 OffData;      \/* Offset of pixel data *\/$/;"	m	struct:__anon265
OffX	emwin/emWin_header/GRAPH_Private.h	/^  int             OffX, OffY;$/;"	m	struct:GRAPH_DATA_OBJ
OffY	emwin/emWin_header/GRAPH_Private.h	/^  int             OffX, OffY;$/;"	m	struct:GRAPH_DATA_OBJ
Offset	emwin/emWin_header/KNOB_Private.h	/^  I32 Offset;        \/\/ the offset$/;"	m	struct:__anon326
OldCode	emwin/emWin_header/GUI_GIF_Private.h	/^  int   OldCode;$/;"	m	struct:__anon323
OnOff	emwin/emWin_header/LCD.h	/^  int OnOff;$/;"	m	struct:__anon415
OrgLock	emwin/emWin_header/GUI_VNC.h	/^  char OrgLock;$/;"	m	struct:GUI_VNC_CONTEXT
Orientation	emwin/emWin_header/GUIDRV_FlexColor.h	/^  int Orientation;$/;"	m	struct:__anon364
Orientation	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int Orientation;$/;"	m	struct:DRIVER_CONTEXT
Orientation	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  int Orientation;$/;"	m	struct:DRIVER_CONTEXT
Orientation	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int Orientation;$/;"	m	struct:DRIVER_CONTEXT
Orientation	emwin/emWin_header/GUIDRV_S1D15G00.h	/^  int Orientation;$/;"	m	struct:__anon228
Orientation	emwin/emWin_header/GUITDRV_ADS7846.h	/^  unsigned Orientation;$/;"	m	struct:__anon306
Orientation	emwin/emWin_header/GUI_SetOrientation.h	/^  int Orientation;$/;"	m	struct:DRIVER_CONTEXT
Overlap	emwin/emWin_header/WM.h	/^  unsigned Overlap;$/;"	m	struct:__anon287
P	codec2/fsk.h	/^    int P;                  \/* oversample rate for timing est\/adj *\/$/;"	m	struct:FSK
P	lwip/src/netif/ppp/polarssl/md4.c	115;"	d	file:
P	lwip/src/netif/ppp/polarssl/md4.c	134;"	d	file:
P	lwip/src/netif/ppp/polarssl/md4.c	138;"	d	file:
P	lwip/src/netif/ppp/polarssl/md4.c	157;"	d	file:
P	lwip/src/netif/ppp/polarssl/md4.c	161;"	d	file:
P	lwip/src/netif/ppp/polarssl/md4.c	181;"	d	file:
P	lwip/src/netif/ppp/polarssl/md5.c	108;"	d	file:
P	lwip/src/netif/ppp/polarssl/sha1.c	116;"	d	file:
PACKED_STRUCT_TEST_EXPECTED_SIZE	lwip/src/core/init.c	78;"	d	file:
PACK_STRUCT_BEGIN	lwip/port/arch/cc.h	72;"	d
PACK_STRUCT_BEGIN	lwip/port/arch/cc.h	74;"	d
PACK_STRUCT_BEGIN	lwip/port/arch/cc.h	76;"	d
PACK_STRUCT_BEGIN	lwip/port/arch/cc.h	78;"	d
PACK_STRUCT_BEGIN	lwip/src/include/lwip/arch.h	307;"	d
PACK_STRUCT_END	lwip/port/arch/cc.h	92;"	d
PACK_STRUCT_END	lwip/port/arch/cc.h	94;"	d
PACK_STRUCT_END	lwip/port/arch/cc.h	96;"	d
PACK_STRUCT_END	lwip/port/arch/cc.h	98;"	d
PACK_STRUCT_END	lwip/src/include/lwip/arch.h	316;"	d
PACK_STRUCT_FIELD	lwip/port/arch/cc.h	101;"	d
PACK_STRUCT_FIELD	lwip/src/include/lwip/arch.h	338;"	d
PACK_STRUCT_FLD_8	lwip/src/include/lwip/arch.h	347;"	d
PACK_STRUCT_FLD_S	lwip/src/include/lwip/arch.h	356;"	d
PACK_STRUCT_STRUCT	lwip/port/arch/cc.h	82;"	d
PACK_STRUCT_STRUCT	lwip/port/arch/cc.h	84;"	d
PACK_STRUCT_STRUCT	lwip/port/arch/cc.h	86;"	d
PACK_STRUCT_STRUCT	lwip/port/arch/cc.h	88;"	d
PACK_STRUCT_STRUCT	lwip/src/core/init.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:packed_struct_test
PACK_STRUCT_STRUCT	lwip/src/core/ipv4/ip4_frag.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_reass_helper
PACK_STRUCT_STRUCT	lwip/src/core/ipv6/ip6_frag.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip6_reass_helper
PACK_STRUCT_STRUCT	lwip/src/include/lwip/arch.h	326;"	d
PACK_STRUCT_STRUCT	lwip/src/include/lwip/arch.h	328;"	d
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/dhcp6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp6_msg
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/dns.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip4_addr_wordaligned
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ethernet.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ethernet.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ethernet.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_vlan_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/icmp6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp6_echo_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/icmp6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp6_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip4.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip4_addr_packed
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip4.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip6_addr_packed
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip6_dest_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip6_frag_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip6_hbh_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip6_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip6_opt_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/ip6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip6_rout_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/mld6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:mld_header
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:lladdr_option
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:mtu_option
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:na_header
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ns_header
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:prefix_option
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ra_header
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:rdnss_option
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:redirect_header
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:redirected_header_option
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:route_option
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/nd6.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:rs_header
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	lwip/src/include/lwip/prot/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	lwip/src/include/netif/ieee802154.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ieee_802154_hdr
PACK_STRUCT_STRUCT	lwip/src/include/netif/ppp/pppoe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	lwip/src/include/netif/ppp/pppoe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	lwip/src/netif/ppp/pppos.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppos_input_header
PACK_STRUCT_STRUCT	lwip/src/netif/ppp/vj.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:vj_u16_t
PACK_STRUCT_STRUCT	lwip/src/netif/ppp/vj.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:vj_u32_t
PACK_STRUCT_STRUCT	lwip/src/netif/zepif.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:zep_hdr
PACK_STRUCT_USE_INCLUDES	lwip/src/include/lwip/arch.h	368;"	d
PAL	device/LPC54018.h	/^  __IO uint32_t PAL[128];                          \/**< 256x16-bit Color Palette registers, array offset: 0x200, array step: 0x4 *\/$/;"	m	struct:__anon165
PAP_PEER	lwip/src/include/netif/ppp/ppp_impl.h	331;"	d
PAP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	205;"	d
PAP_WITHPEER	lwip/src/include/netif/ppp/ppp_impl.h	330;"	d
PBUF_ALLOC_FLAG_DATA_CONTIGUOUS	lwip/src/include/lwip/pbuf.h	131;"	d
PBUF_ALLOC_FLAG_RX	lwip/src/include/lwip/pbuf.h	129;"	d
PBUF_CHECK_FREE_OOSEQ	lwip/src/include/lwip/pbuf.h	260;"	d
PBUF_CHECK_FREE_OOSEQ	lwip/src/include/lwip/pbuf.h	266;"	d
PBUF_DEBUG	lwip/src/include/lwip/opt.h	3274;"	d
PBUF_FLAG_IS_CUSTOM	lwip/src/include/lwip/pbuf.h	175;"	d
PBUF_FLAG_LLBCAST	lwip/src/include/lwip/pbuf.h	179;"	d
PBUF_FLAG_LLMCAST	lwip/src/include/lwip/pbuf.h	181;"	d
PBUF_FLAG_MCASTLOOP	lwip/src/include/lwip/pbuf.h	177;"	d
PBUF_FLAG_PUSH	lwip/src/include/lwip/pbuf.h	172;"	d
PBUF_FLAG_TCP_FIN	lwip/src/include/lwip/pbuf.h	183;"	d
PBUF_IP	lwip/src/include/lwip/pbuf.h	/^  PBUF_IP = PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN,$/;"	e	enum:__anon448
PBUF_IP_HLEN	lwip/src/include/lwip/pbuf.h	80;"	d
PBUF_IP_HLEN	lwip/src/include/lwip/pbuf.h	82;"	d
PBUF_LINK	lwip/src/include/lwip/pbuf.h	/^  PBUF_LINK = PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN,$/;"	e	enum:__anon448
PBUF_LINK_ENCAPSULATION_HLEN	lwip/src/include/lwip/opt.h	1539;"	d
PBUF_LINK_HLEN	lwip/src/include/lwip/opt.h	1528;"	d
PBUF_LINK_HLEN	lwip/src/include/lwip/opt.h	1530;"	d
PBUF_NEEDS_COPY	lwip/src/include/lwip/pbuf.h	72;"	d
PBUF_POOL	lwip/src/include/lwip/pbuf.h	/^  PBUF_POOL = (PBUF_ALLOC_FLAG_RX | PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF_POOL)$/;"	e	enum:__anon449
PBUF_POOL_BUFSIZE	lwip/src/include/lwip/opt.h	1548;"	d
PBUF_POOL_BUFSIZE_ALIGNED	lwip/src/core/pbuf.c	92;"	d	file:
PBUF_POOL_FREE_OOSEQ	lwip/src/include/lwip/pbuf.h	252;"	d
PBUF_POOL_FREE_OOSEQ_QUEUE_CALL	lwip/src/core/pbuf.c	104;"	d	file:
PBUF_POOL_IS_EMPTY	lwip/src/core/pbuf.c	114;"	d	file:
PBUF_POOL_IS_EMPTY	lwip/src/core/pbuf.c	98;"	d	file:
PBUF_POOL_SIZE	lwip/src/include/lwip/opt.h	582;"	d
PBUF_POOL_SIZE	source/lwipopts.h	114;"	d
PBUF_RAM	lwip/src/include/lwip/pbuf.h	/^  PBUF_RAM = (PBUF_ALLOC_FLAG_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_ALLOC_SRC_MASK_STD_HEAP),$/;"	e	enum:__anon449
PBUF_RAW	lwip/src/include/lwip/pbuf.h	/^  PBUF_RAW = 0$/;"	e	enum:__anon448
PBUF_RAW_TX	lwip/src/include/lwip/pbuf.h	/^  PBUF_RAW_TX = PBUF_LINK_ENCAPSULATION_HLEN,$/;"	e	enum:__anon448
PBUF_REF	lwip/src/include/lwip/pbuf.h	/^  PBUF_REF = (PBUF_TYPE_FLAG_DATA_VOLATILE | PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF),$/;"	e	enum:__anon449
PBUF_ROM	lwip/src/include/lwip/pbuf.h	/^  PBUF_ROM = PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF,$/;"	e	enum:__anon449
PBUF_TRANSPORT	lwip/src/include/lwip/pbuf.h	/^  PBUF_TRANSPORT = PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN,$/;"	e	enum:__anon448
PBUF_TRANSPORT_HLEN	lwip/src/include/lwip/pbuf.h	78;"	d
PBUF_TYPE_ALLOC_SRC_MASK	lwip/src/include/lwip/pbuf.h	125;"	d
PBUF_TYPE_ALLOC_SRC_MASK_APP_MAX	lwip/src/include/lwip/pbuf.h	139;"	d
PBUF_TYPE_ALLOC_SRC_MASK_APP_MIN	lwip/src/include/lwip/pbuf.h	137;"	d
PBUF_TYPE_ALLOC_SRC_MASK_STD_HEAP	lwip/src/include/lwip/pbuf.h	133;"	d
PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF	lwip/src/include/lwip/pbuf.h	134;"	d
PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF_POOL	lwip/src/include/lwip/pbuf.h	135;"	d
PBUF_TYPE_FLAG_DATA_VOLATILE	lwip/src/include/lwip/pbuf.h	122;"	d
PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS	lwip/src/include/lwip/pbuf.h	119;"	d
PC	device/LPC54018.h	/^  __IO uint32_t PC;                                \/**< Prescale Counter, offset: 0x10 *\/$/;"	m	struct:__anon145
PCFG1	device/LPC54018.h	/^    __IO uint32_t PCFG1;                             \/**< Configuration register 1 for channel pair, array offset: 0xC20, array step: 0x20 *\/$/;"	m	struct:__anon161::__anon162
PCFG2	device/LPC54018.h	/^    __IO uint32_t PCFG2;                             \/**< Configuration register 2 for channel pair, array offset: 0xC24, array step: 0x20 *\/$/;"	m	struct:__anon161::__anon162
PCSR	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t PCSR;                   \/*!< Offset: 0x01C (R\/ )  Program Counter Sample Register *\/$/;"	m	struct:__anon124
PCSR	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PCSR;                   \/*!< Offset: 0x01C (R\/ )  Program Counter Sample Register *\/$/;"	m	struct:__anon23
PCSR	CMSIS/core_cm4.h	/^  __IM  uint32_t PCSR;                   \/*!< Offset: 0x01C (R\/ )  Program Counter Sample Register *\/$/;"	m	struct:__anon45
PDADDRESS	lwip/src/include/netif/ppp/pppos.h	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon433
PDCONTROL	lwip/src/include/netif/ppp/pppos.h	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon433
PDDATA	lwip/src/include/netif/ppp/pppos.h	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon433
PDIDLE	lwip/src/include/netif/ppp/pppos.h	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon433
PDPROTOCOL1	lwip/src/include/netif/ppp/pppos.h	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon433
PDPROTOCOL2	lwip/src/include/netif/ppp/pppos.h	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon433
PDRCFG0	drivers/fsl_power.h	30;"	d
PDRCFG1	drivers/fsl_power.h	31;"	d
PDRUNCFG	device/LPC54018.h	/^  __IO uint32_t PDRUNCFG[2];                       \/**< Power configuration register, array offset: 0x610, array step: 0x4 *\/$/;"	m	struct:__anon185
PDRUNCFGCLR	device/LPC54018.h	/^  __IO uint32_t PDRUNCFGCLR[2];                    \/**< Power configuration clear register, array offset: 0x630, array step: 0x4 *\/$/;"	m	struct:__anon185
PDRUNCFGSET	device/LPC54018.h	/^  __IO uint32_t PDRUNCFGSET[2];                    \/**< Power configuration set register, array offset: 0x620, array step: 0x4 *\/$/;"	m	struct:__anon185
PDSLEEPCFG	device/LPC54018.h	/^  __IO uint32_t PDSLEEPCFG[2];                     \/**< Sleep configuration register, array offset: 0x600, array step: 0x4 *\/$/;"	m	struct:__anon185
PDSTART	lwip/src/include/netif/ppp/pppos.h	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon433
PENIRQ	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      PENIRQ;    \/\/ Last sampled PENIRQ state if PENIRQ callback has been set$/;"	m	struct:__anon307
PERF_START	lwip/port/arch/perf.h	35;"	d
PERF_START	lwip/src/include/lwip/def.h	57;"	d
PERF_STOP	lwip/port/arch/perf.h	36;"	d
PERF_STOP	lwip/src/include/lwip/def.h	58;"	d
PE_FFT_SIZE	codec2/nlp.c	48;"	d	file:
PFR	CMSIS/core_cm4.h	/^  __IM  uint32_t PFR[2U];                \/*!< Offset: 0x040 (R\/ )  Processor Feature Register *\/$/;"	m	struct:__anon40
PF_INET	lwip/src/include/lwip/sockets.h	244;"	d
PF_INET6	lwip/src/include/lwip/sockets.h	245;"	d
PF_UNSPEC	lwip/src/include/lwip/sockets.h	246;"	d
PHY_CTRL	device/LPC54018.h	/^    __IO uint32_t PHY_CTRL;                          \/**< PDM Source Configuration register 0, array offset: 0x8C, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
PHY_EnableLoopback	board/fsl_phy.c	/^status_t PHY_EnableLoopback(ENET_Type *base, uint32_t phyAddr, phy_loop_t mode, phy_speed_t speed, bool enable)$/;"	f
PHY_GetLinkSpeedDuplex	board/fsl_phy.c	/^status_t PHY_GetLinkSpeedDuplex(ENET_Type *base, uint32_t phyAddr, phy_speed_t *speed, phy_duplex_t *duplex)$/;"	f
PHY_GetLinkStatus	board/fsl_phy.c	/^status_t PHY_GetLinkStatus(ENET_Type *base, uint32_t phyAddr, bool *status)$/;"	f
PHY_Init	board/fsl_phy.c	/^status_t PHY_Init(ENET_Type *base, uint32_t phyAddr, uint32_t srcClock_Hz)$/;"	f
PHY_Read	board/fsl_phy.c	/^status_t PHY_Read(ENET_Type *base, uint32_t phyAddr, uint32_t phyReg, uint32_t *dataPtr)$/;"	f
PHY_Write	board/fsl_phy.c	/^status_t PHY_Write(ENET_Type *base, uint32_t phyAddr, uint32_t phyReg, uint32_t data)$/;"	f
PI	CMSIS/arm_math.h	364;"	d
PI	codec2/defines.h	43;"	d
PI	codec2/lpc.c	29;"	d	file:
PI	codec2/nlp.c	51;"	d	file:
PID	device/LPC54018.h	/^  __I  uint32_t PID;                               \/**< Peripheral identification register., offset: 0xFFC *\/$/;"	m	struct:__anon157
PID0	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PID0;                   \/*!< Offset: 0xFE0 (R\/ )  ITM Peripheral Identification Register #0 *\/$/;"	m	struct:__anon21
PID0	CMSIS/core_cm4.h	/^  __IM  uint32_t PID0;                   \/*!< Offset: 0xFE0 (R\/ )  ITM Peripheral Identification Register #0 *\/$/;"	m	struct:__anon43
PID1	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PID1;                   \/*!< Offset: 0xFE4 (R\/ )  ITM Peripheral Identification Register #1 *\/$/;"	m	struct:__anon21
PID1	CMSIS/core_cm4.h	/^  __IM  uint32_t PID1;                   \/*!< Offset: 0xFE4 (R\/ )  ITM Peripheral Identification Register #1 *\/$/;"	m	struct:__anon43
PID2	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PID2;                   \/*!< Offset: 0xFE8 (R\/ )  ITM Peripheral Identification Register #2 *\/$/;"	m	struct:__anon21
PID2	CMSIS/core_cm4.h	/^  __IM  uint32_t PID2;                   \/*!< Offset: 0xFE8 (R\/ )  ITM Peripheral Identification Register #2 *\/$/;"	m	struct:__anon43
PID3	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PID3;                   \/*!< Offset: 0xFEC (R\/ )  ITM Peripheral Identification Register #3 *\/$/;"	m	struct:__anon21
PID3	CMSIS/core_cm4.h	/^  __IM  uint32_t PID3;                   \/*!< Offset: 0xFEC (R\/ )  ITM Peripheral Identification Register #3 *\/$/;"	m	struct:__anon43
PID4	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PID4;                   \/*!< Offset: 0xFD0 (R\/ )  ITM Peripheral Identification Register #4 *\/$/;"	m	struct:__anon21
PID4	CMSIS/core_cm4.h	/^  __IM  uint32_t PID4;                   \/*!< Offset: 0xFD0 (R\/ )  ITM Peripheral Identification Register #4 *\/$/;"	m	struct:__anon43
PID5	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PID5;                   \/*!< Offset: 0xFD4 (R\/ )  ITM Peripheral Identification Register #5 *\/$/;"	m	struct:__anon21
PID5	CMSIS/core_cm4.h	/^  __IM  uint32_t PID5;                   \/*!< Offset: 0xFD4 (R\/ )  ITM Peripheral Identification Register #5 *\/$/;"	m	struct:__anon43
PID6	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PID6;                   \/*!< Offset: 0xFD8 (R\/ )  ITM Peripheral Identification Register #6 *\/$/;"	m	struct:__anon21
PID6	CMSIS/core_cm4.h	/^  __IM  uint32_t PID6;                   \/*!< Offset: 0xFD8 (R\/ )  ITM Peripheral Identification Register #6 *\/$/;"	m	struct:__anon43
PID7	CMSIS/core_armv8mml.h	/^  __IM  uint32_t PID7;                   \/*!< Offset: 0xFDC (R\/ )  ITM Peripheral Identification Register #7 *\/$/;"	m	struct:__anon21
PID7	CMSIS/core_cm4.h	/^  __IM  uint32_t PID7;                   \/*!< Offset: 0xFDC (R\/ )  ITM Peripheral Identification Register #7 *\/$/;"	m	struct:__anon43
PIN	device/LPC54018.h	/^  __IO uint32_t PIN[6];                            \/**< Port pin register, array offset: 0x2100, array step: 0x4 *\/$/;"	m	struct:__anon159
PIN01_IDX	board/pin_mux.c	63;"	d	file:
PIN02_IDX	board/pin_mux.c	64;"	d	file:
PIN03_IDX	board/pin_mux.c	65;"	d	file:
PIN05_IDX	board/pin_mux.c	50;"	d	file:
PIN06_IDX	board/pin_mux.c	66;"	d	file:
PIN0_IDX	board/pin_mux.c	54;"	d	file:
PIN11_IDX	board/pin_mux.c	58;"	d	file:
PIN13_IDX	board/pin_mux.c	59;"	d	file:
PIN17_IDX	board/pin_mux.c	49;"	d	file:
PIN18_IDX	board/pin_mux.c	55;"	d	file:
PIN19_IDX	board/pin_mux.c	56;"	d	file:
PIN20_IDX	board/pin_mux.c	57;"	d	file:
PIN21_IDX	board/pin_mux.c	60;"	d	file:
PIN22_IDX	board/pin_mux.c	51;"	d	file:
PIN23_IDX	board/pin_mux.c	61;"	d	file:
PIN24_IDX	board/pin_mux.c	62;"	d	file:
PIN29_IDX	board/pin_mux.c	52;"	d	file:
PIN2_IDX	board/pin_mux.c	47;"	d	file:
PIN30_IDX	board/pin_mux.c	53;"	d	file:
PIN3_IDX	board/pin_mux.c	48;"	d	file:
PININT_BITSLICE_CFG_MASK	drivers/fsl_pint.h	45;"	d
PININT_BITSLICE_CFG_START	drivers/fsl_pint.h	44;"	d
PININT_BITSLICE_ENDP_MASK	drivers/fsl_pint.h	46;"	d
PININT_BITSLICE_SRC_MASK	drivers/fsl_pint.h	41;"	d
PININT_BITSLICE_SRC_START	drivers/fsl_pint.h	40;"	d
PINT	device/LPC54018.h	8121;"	d
PINTSEL	device/LPC54018.h	/^  __IO uint32_t PINTSEL[8];                        \/**< Pin interrupt select register, array offset: 0xC0, array step: 0x4 *\/$/;"	m	struct:__anon163
PINTSEL_PMUX_ID	drivers/fsl_inputmux_connections.h	33;"	d
PINT_BASE	device/LPC54018.h	8119;"	d
PINT_BASE_ADDRS	device/LPC54018.h	8123;"	d
PINT_BASE_PTRS	device/LPC54018.h	8125;"	d
PINT_CIENF_CENAF	device/LPC54018.h	7737;"	d
PINT_CIENF_CENAF_MASK	device/LPC54018.h	7735;"	d
PINT_CIENF_CENAF_SHIFT	device/LPC54018.h	7736;"	d
PINT_CIENR_CENRL	device/LPC54018.h	7716;"	d
PINT_CIENR_CENRL_MASK	device/LPC54018.h	7714;"	d
PINT_CIENR_CENRL_SHIFT	device/LPC54018.h	7715;"	d
PINT_CLOCKS	drivers/fsl_clock.h	111;"	d
PINT_Deinit	drivers/fsl_pint.c	/^void PINT_Deinit(PINT_Type *base)$/;"	f
PINT_DisableCallback	drivers/fsl_pint.c	/^void PINT_DisableCallback(PINT_Type *base)$/;"	f
PINT_DisableCallbackByIndex	drivers/fsl_pint.c	/^void PINT_DisableCallbackByIndex(PINT_Type *base, pint_pin_int_t pintIdx)$/;"	f
PINT_EnableCallback	drivers/fsl_pint.c	/^void PINT_EnableCallback(PINT_Type *base)$/;"	f
PINT_EnableCallbackByIndex	drivers/fsl_pint.c	/^void PINT_EnableCallbackByIndex(PINT_Type *base, pint_pin_int_t pintIdx)$/;"	f
PINT_FALL_FDET	device/LPC54018.h	7751;"	d
PINT_FALL_FDET_MASK	device/LPC54018.h	7749;"	d
PINT_FALL_FDET_SHIFT	device/LPC54018.h	7750;"	d
PINT_IENF_ENAF	device/LPC54018.h	7723;"	d
PINT_IENF_ENAF_MASK	device/LPC54018.h	7721;"	d
PINT_IENF_ENAF_SHIFT	device/LPC54018.h	7722;"	d
PINT_IENR_ENRL	device/LPC54018.h	7702;"	d
PINT_IENR_ENRL_MASK	device/LPC54018.h	7700;"	d
PINT_IENR_ENRL_SHIFT	device/LPC54018.h	7701;"	d
PINT_INPUT_COUNT	drivers/fsl_pint.h	37;"	d
PINT_IRQS	device/LPC54018.h	8127;"	d
PINT_ISEL_PMODE	device/LPC54018.h	7695;"	d
PINT_ISEL_PMODE_MASK	device/LPC54018.h	7693;"	d
PINT_ISEL_PMODE_SHIFT	device/LPC54018.h	7694;"	d
PINT_IST_PSTAT	device/LPC54018.h	7758;"	d
PINT_IST_PSTAT_MASK	device/LPC54018.h	7756;"	d
PINT_IST_PSTAT_SHIFT	device/LPC54018.h	7757;"	d
PINT_Init	drivers/fsl_pint.c	/^void PINT_Init(PINT_Type *base)$/;"	f
PINT_PIN_BOTH_EDGE	drivers/fsl_pint.h	54;"	d
PINT_PIN_FALL_EDGE	drivers/fsl_pint.h	53;"	d
PINT_PIN_HIGH_LEVEL	drivers/fsl_pint.h	56;"	d
PINT_PIN_INT_COUNT	drivers/fsl_pint.h	31;"	d
PINT_PIN_INT_EDGE	drivers/fsl_pint.h	49;"	d
PINT_PIN_INT_FALL_OR_HIGH_LEVEL	drivers/fsl_pint.h	50;"	d
PINT_PIN_INT_HIGH_OR_RISE_TRIGGER	drivers/fsl_gpio.h	55;"	d
PINT_PIN_INT_LEVEL	drivers/fsl_pint.h	48;"	d
PINT_PIN_INT_LOW_OR_FALL_TRIGGER	drivers/fsl_gpio.h	56;"	d
PINT_PIN_INT_RISE	drivers/fsl_pint.h	51;"	d
PINT_PIN_LOW_LEVEL	drivers/fsl_pint.h	55;"	d
PINT_PIN_RISE_EDGE	drivers/fsl_pint.h	52;"	d
PINT_PMCFG_CFG0	device/LPC54018.h	7961;"	d
PINT_PMCFG_CFG0_MASK	device/LPC54018.h	7941;"	d
PINT_PMCFG_CFG0_SHIFT	device/LPC54018.h	7942;"	d
PINT_PMCFG_CFG1	device/LPC54018.h	7982;"	d
PINT_PMCFG_CFG1_MASK	device/LPC54018.h	7962;"	d
PINT_PMCFG_CFG1_SHIFT	device/LPC54018.h	7963;"	d
PINT_PMCFG_CFG2	device/LPC54018.h	8003;"	d
PINT_PMCFG_CFG2_MASK	device/LPC54018.h	7983;"	d
PINT_PMCFG_CFG2_SHIFT	device/LPC54018.h	7984;"	d
PINT_PMCFG_CFG3	device/LPC54018.h	8024;"	d
PINT_PMCFG_CFG3_MASK	device/LPC54018.h	8004;"	d
PINT_PMCFG_CFG3_SHIFT	device/LPC54018.h	8005;"	d
PINT_PMCFG_CFG4	device/LPC54018.h	8045;"	d
PINT_PMCFG_CFG4_MASK	device/LPC54018.h	8025;"	d
PINT_PMCFG_CFG4_SHIFT	device/LPC54018.h	8026;"	d
PINT_PMCFG_CFG5	device/LPC54018.h	8066;"	d
PINT_PMCFG_CFG5_MASK	device/LPC54018.h	8046;"	d
PINT_PMCFG_CFG5_SHIFT	device/LPC54018.h	8047;"	d
PINT_PMCFG_CFG6	device/LPC54018.h	8087;"	d
PINT_PMCFG_CFG6_MASK	device/LPC54018.h	8067;"	d
PINT_PMCFG_CFG6_SHIFT	device/LPC54018.h	8068;"	d
PINT_PMCFG_CFG7	device/LPC54018.h	8108;"	d
PINT_PMCFG_CFG7_MASK	device/LPC54018.h	8088;"	d
PINT_PMCFG_CFG7_SHIFT	device/LPC54018.h	8089;"	d
PINT_PMCFG_PROD_ENDPTS0	device/LPC54018.h	7898;"	d
PINT_PMCFG_PROD_ENDPTS0_MASK	device/LPC54018.h	7892;"	d
PINT_PMCFG_PROD_ENDPTS0_SHIFT	device/LPC54018.h	7893;"	d
PINT_PMCFG_PROD_ENDPTS1	device/LPC54018.h	7905;"	d
PINT_PMCFG_PROD_ENDPTS1_MASK	device/LPC54018.h	7899;"	d
PINT_PMCFG_PROD_ENDPTS1_SHIFT	device/LPC54018.h	7900;"	d
PINT_PMCFG_PROD_ENDPTS2	device/LPC54018.h	7912;"	d
PINT_PMCFG_PROD_ENDPTS2_MASK	device/LPC54018.h	7906;"	d
PINT_PMCFG_PROD_ENDPTS2_SHIFT	device/LPC54018.h	7907;"	d
PINT_PMCFG_PROD_ENDPTS3	device/LPC54018.h	7919;"	d
PINT_PMCFG_PROD_ENDPTS3_MASK	device/LPC54018.h	7913;"	d
PINT_PMCFG_PROD_ENDPTS3_SHIFT	device/LPC54018.h	7914;"	d
PINT_PMCFG_PROD_ENDPTS4	device/LPC54018.h	7926;"	d
PINT_PMCFG_PROD_ENDPTS4_MASK	device/LPC54018.h	7920;"	d
PINT_PMCFG_PROD_ENDPTS4_SHIFT	device/LPC54018.h	7921;"	d
PINT_PMCFG_PROD_ENDPTS5	device/LPC54018.h	7933;"	d
PINT_PMCFG_PROD_ENDPTS5_MASK	device/LPC54018.h	7927;"	d
PINT_PMCFG_PROD_ENDPTS5_SHIFT	device/LPC54018.h	7928;"	d
PINT_PMCFG_PROD_ENDPTS6	device/LPC54018.h	7940;"	d
PINT_PMCFG_PROD_ENDPTS6_MASK	device/LPC54018.h	7934;"	d
PINT_PMCFG_PROD_ENDPTS6_SHIFT	device/LPC54018.h	7935;"	d
PINT_PMCTRL_ENA_RXEV	device/LPC54018.h	7776;"	d
PINT_PMCTRL_ENA_RXEV_MASK	device/LPC54018.h	7770;"	d
PINT_PMCTRL_ENA_RXEV_SHIFT	device/LPC54018.h	7771;"	d
PINT_PMCTRL_PMAT	device/LPC54018.h	7779;"	d
PINT_PMCTRL_PMAT_MASK	device/LPC54018.h	7777;"	d
PINT_PMCTRL_PMAT_SHIFT	device/LPC54018.h	7778;"	d
PINT_PMCTRL_SEL_PMATCH	device/LPC54018.h	7769;"	d
PINT_PMCTRL_SEL_PMATCH_MASK	device/LPC54018.h	7763;"	d
PINT_PMCTRL_SEL_PMATCH_SHIFT	device/LPC54018.h	7764;"	d
PINT_PMSRC_SRC0	device/LPC54018.h	7796;"	d
PINT_PMSRC_SRC0_MASK	device/LPC54018.h	7784;"	d
PINT_PMSRC_SRC0_SHIFT	device/LPC54018.h	7785;"	d
PINT_PMSRC_SRC1	device/LPC54018.h	7809;"	d
PINT_PMSRC_SRC1_MASK	device/LPC54018.h	7797;"	d
PINT_PMSRC_SRC1_SHIFT	device/LPC54018.h	7798;"	d
PINT_PMSRC_SRC2	device/LPC54018.h	7822;"	d
PINT_PMSRC_SRC2_MASK	device/LPC54018.h	7810;"	d
PINT_PMSRC_SRC2_SHIFT	device/LPC54018.h	7811;"	d
PINT_PMSRC_SRC3	device/LPC54018.h	7835;"	d
PINT_PMSRC_SRC3_MASK	device/LPC54018.h	7823;"	d
PINT_PMSRC_SRC3_SHIFT	device/LPC54018.h	7824;"	d
PINT_PMSRC_SRC4	device/LPC54018.h	7848;"	d
PINT_PMSRC_SRC4_MASK	device/LPC54018.h	7836;"	d
PINT_PMSRC_SRC4_SHIFT	device/LPC54018.h	7837;"	d
PINT_PMSRC_SRC5	device/LPC54018.h	7861;"	d
PINT_PMSRC_SRC5_MASK	device/LPC54018.h	7849;"	d
PINT_PMSRC_SRC5_SHIFT	device/LPC54018.h	7850;"	d
PINT_PMSRC_SRC6	device/LPC54018.h	7874;"	d
PINT_PMSRC_SRC6_MASK	device/LPC54018.h	7862;"	d
PINT_PMSRC_SRC6_SHIFT	device/LPC54018.h	7863;"	d
PINT_PMSRC_SRC7	device/LPC54018.h	7887;"	d
PINT_PMSRC_SRC7_MASK	device/LPC54018.h	7875;"	d
PINT_PMSRC_SRC7_SHIFT	device/LPC54018.h	7876;"	d
PINT_PatternMatchConfig	drivers/fsl_pint.c	/^void PINT_PatternMatchConfig(PINT_Type *base, pint_pmatch_bslice_t bslice, pint_pmatch_cfg_t *cfg)$/;"	f
PINT_PatternMatchDisable	drivers/fsl_pint.h	/^static inline void PINT_PatternMatchDisable(PINT_Type *base)$/;"	f
PINT_PatternMatchDisableRXEV	drivers/fsl_pint.h	/^static inline void PINT_PatternMatchDisableRXEV(PINT_Type *base)$/;"	f
PINT_PatternMatchEnable	drivers/fsl_pint.h	/^static inline void PINT_PatternMatchEnable(PINT_Type *base)$/;"	f
PINT_PatternMatchEnableRXEV	drivers/fsl_pint.h	/^static inline void PINT_PatternMatchEnableRXEV(PINT_Type *base)$/;"	f
PINT_PatternMatchGetConfig	drivers/fsl_pint.c	/^void PINT_PatternMatchGetConfig(PINT_Type *base, pint_pmatch_bslice_t bslice, pint_pmatch_cfg_t *cfg)$/;"	f
PINT_PatternMatchGetStatus	drivers/fsl_pint.h	/^static inline uint32_t PINT_PatternMatchGetStatus(PINT_Type *base, pint_pmatch_bslice_t bslice)$/;"	f
PINT_PatternMatchGetStatusAll	drivers/fsl_pint.h	/^static inline uint32_t PINT_PatternMatchGetStatusAll(PINT_Type *base)$/;"	f
PINT_PatternMatchResetDetectLogic	drivers/fsl_pint.c	/^uint32_t PINT_PatternMatchResetDetectLogic(PINT_Type *base)$/;"	f
PINT_PinInterruptClrFallFlag	drivers/fsl_pint.h	/^static inline void PINT_PinInterruptClrFallFlag(PINT_Type *base, pint_pin_int_t pintr)$/;"	f
PINT_PinInterruptClrFallFlagAll	drivers/fsl_pint.h	/^static inline void PINT_PinInterruptClrFallFlagAll(PINT_Type *base)$/;"	f
PINT_PinInterruptClrRiseFlag	drivers/fsl_pint.h	/^static inline void PINT_PinInterruptClrRiseFlag(PINT_Type *base, pint_pin_int_t pintr)$/;"	f
PINT_PinInterruptClrRiseFlagAll	drivers/fsl_pint.h	/^static inline void PINT_PinInterruptClrRiseFlagAll(PINT_Type *base)$/;"	f
PINT_PinInterruptClrStatus	drivers/fsl_pint.c	/^void PINT_PinInterruptClrStatus(PINT_Type *base, pint_pin_int_t pintr)$/;"	f
PINT_PinInterruptClrStatusAll	drivers/fsl_pint.c	/^void PINT_PinInterruptClrStatusAll(PINT_Type *base)$/;"	f
PINT_PinInterruptConfig	drivers/fsl_pint.c	/^void PINT_PinInterruptConfig(PINT_Type *base, pint_pin_int_t intr, pint_pin_enable_t enable, pint_cb_t callback)$/;"	f
PINT_PinInterruptGetConfig	drivers/fsl_pint.c	/^void PINT_PinInterruptGetConfig(PINT_Type *base, pint_pin_int_t pintr, pint_pin_enable_t *enable, pint_cb_t *callback)$/;"	f
PINT_PinInterruptGetFallFlag	drivers/fsl_pint.h	/^static inline uint32_t PINT_PinInterruptGetFallFlag(PINT_Type *base, pint_pin_int_t pintr)$/;"	f
PINT_PinInterruptGetFallFlagAll	drivers/fsl_pint.h	/^static inline uint32_t PINT_PinInterruptGetFallFlagAll(PINT_Type *base)$/;"	f
PINT_PinInterruptGetRiseFlag	drivers/fsl_pint.h	/^static inline uint32_t PINT_PinInterruptGetRiseFlag(PINT_Type *base, pint_pin_int_t pintr)$/;"	f
PINT_PinInterruptGetRiseFlagAll	drivers/fsl_pint.h	/^static inline uint32_t PINT_PinInterruptGetRiseFlagAll(PINT_Type *base)$/;"	f
PINT_PinInterruptGetStatus	drivers/fsl_pint.h	/^static inline uint32_t PINT_PinInterruptGetStatus(PINT_Type *base, pint_pin_int_t pintr)$/;"	f
PINT_PinInterruptGetStatusAll	drivers/fsl_pint.h	/^static inline uint32_t PINT_PinInterruptGetStatusAll(PINT_Type *base)$/;"	f
PINT_RISE_RDET	device/LPC54018.h	7744;"	d
PINT_RISE_RDET_MASK	device/LPC54018.h	7742;"	d
PINT_RISE_RDET_SHIFT	device/LPC54018.h	7743;"	d
PINT_RSTS	drivers/fsl_reset.h	175;"	d
PINT_SIENF_SETENAF	device/LPC54018.h	7730;"	d
PINT_SIENF_SETENAF_MASK	device/LPC54018.h	7728;"	d
PINT_SIENF_SETENAF_SHIFT	device/LPC54018.h	7729;"	d
PINT_SIENR_SETENRL	device/LPC54018.h	7709;"	d
PINT_SIENR_SETENRL_MASK	device/LPC54018.h	7707;"	d
PINT_SIENR_SETENRL_SHIFT	device/LPC54018.h	7708;"	d
PINT_Type	device/LPC54018.h	/^} PINT_Type;$/;"	t	typeref:struct:__anon169
PIN_INT0_DriverIRQHandler	drivers/fsl_pint.c	/^void PIN_INT0_DriverIRQHandler(void)$/;"	f
PIN_INT0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void PIN_INT0_IRQHandler(void)$/;"	f
PIN_INT0_IRQn	device/LPC54018.h	/^  PIN_INT0_IRQn                = 4,                \/**< Pin interrupt 0 or pattern match engine slice 0 *\/$/;"	e	enum:IRQn
PIN_INT1_DriverIRQHandler	drivers/fsl_pint.c	/^void PIN_INT1_DriverIRQHandler(void)$/;"	f
PIN_INT1_IRQHandler	startup/startup_lpc54018.c	/^WEAK void PIN_INT1_IRQHandler(void)$/;"	f
PIN_INT1_IRQn	device/LPC54018.h	/^  PIN_INT1_IRQn                = 5,                \/**< Pin interrupt 1or pattern match engine slice 1 *\/$/;"	e	enum:IRQn
PIN_INT2_DriverIRQHandler	drivers/fsl_pint.c	/^void PIN_INT2_DriverIRQHandler(void)$/;"	f
PIN_INT2_IRQHandler	startup/startup_lpc54018.c	/^WEAK void PIN_INT2_IRQHandler(void)$/;"	f
PIN_INT2_IRQn	device/LPC54018.h	/^  PIN_INT2_IRQn                = 6,                \/**< Pin interrupt 2 or pattern match engine slice 2 *\/$/;"	e	enum:IRQn
PIN_INT3_DriverIRQHandler	drivers/fsl_pint.c	/^void PIN_INT3_DriverIRQHandler(void)$/;"	f
PIN_INT3_IRQHandler	startup/startup_lpc54018.c	/^WEAK void PIN_INT3_IRQHandler(void)$/;"	f
PIN_INT3_IRQn	device/LPC54018.h	/^  PIN_INT3_IRQn                = 7,                \/**< Pin interrupt 3 or pattern match engine slice 3 *\/$/;"	e	enum:IRQn
PIN_INT4_DriverIRQHandler	drivers/fsl_pint.c	/^void PIN_INT4_DriverIRQHandler(void)$/;"	f
PIN_INT4_IRQHandler	startup/startup_lpc54018.c	/^WEAK void PIN_INT4_IRQHandler(void)$/;"	f
PIN_INT4_IRQn	device/LPC54018.h	/^  PIN_INT4_IRQn                = 32,               \/**< Pin interrupt 4 or pattern match engine slice 4 int *\/$/;"	e	enum:IRQn
PIN_INT5_DAC1_IRQHandler	drivers/fsl_pint.c	/^void PIN_INT5_DAC1_IRQHandler(void)$/;"	f
PIN_INT5_IRQHandler	startup/startup_lpc54018.c	/^WEAK void PIN_INT5_IRQHandler(void)$/;"	f
PIN_INT5_IRQn	device/LPC54018.h	/^  PIN_INT5_IRQn                = 33,               \/**< Pin interrupt 5 or pattern match engine slice 5 int *\/$/;"	e	enum:IRQn
PIN_INT6_IRQHandler	startup/startup_lpc54018.c	/^WEAK void PIN_INT6_IRQHandler(void)$/;"	f
PIN_INT6_IRQn	device/LPC54018.h	/^  PIN_INT6_IRQn                = 34,               \/**< Pin interrupt 6 or pattern match engine slice 6 int *\/$/;"	e	enum:IRQn
PIN_INT6_USART3_IRQHandler	drivers/fsl_pint.c	/^void PIN_INT6_USART3_IRQHandler(void)$/;"	f
PIN_INT7_IRQHandler	startup/startup_lpc54018.c	/^WEAK void PIN_INT7_IRQHandler(void)$/;"	f
PIN_INT7_IRQn	device/LPC54018.h	/^  PIN_INT7_IRQn                = 35,               \/**< Pin interrupt 7 or pattern match engine slice 7 int *\/$/;"	e	enum:IRQn
PIN_INT7_USART4_IRQHandler	drivers/fsl_pint.c	/^void PIN_INT7_USART4_IRQHandler(void)$/;"	f
PIO	device/LPC54018.h	/^  __IO uint32_t PIO[6][32];                        \/**< Digital I\/O control for port 0 pins PIO0_0..Digital I\/O control for port 5 pins PIO5_31, array offset: 0x0, array step: index*0x80, index2*0x4 *\/$/;"	m	struct:__anon164
PIO320_DIGIMODE_DIGITAL	board/pin_mux.h	55;"	d
PIO320_DIGIMODE_DIGITAL	board/pin_mux.h	70;"	d
PIO320_FUNC_ALT0	board/pin_mux.h	71;"	d
PIO320_FUNC_ALT1	board/pin_mux.h	56;"	d
PIO321_DIGIMODE_DIGITAL	board/pin_mux.h	57;"	d
PIO321_DIGIMODE_DIGITAL	board/pin_mux.h	72;"	d
PIO321_FUNC_ALT0	board/pin_mux.h	73;"	d
PIO321_FUNC_ALT1	board/pin_mux.h	58;"	d
PIO322_DIGIMODE_DIGITAL	board/pin_mux.h	59;"	d
PIO322_DIGIMODE_DIGITAL	board/pin_mux.h	74;"	d
PIO322_FUNC_ALT0	board/pin_mux.h	75;"	d
PIO322_FUNC_ALT1	board/pin_mux.h	60;"	d
PIO330_DIGIMODE_DIGITAL	board/pin_mux.h	61;"	d
PIO330_DIGIMODE_DIGITAL	board/pin_mux.h	76;"	d
PIO330_FUNC_ALT0	board/pin_mux.h	77;"	d
PIO330_FUNC_ALT1	board/pin_mux.h	62;"	d
PIOPORCAP	device/LPC54018.h	/^  __I  uint32_t PIOPORCAP[2];                      \/**< POR captured value of port n, array offset: 0xC0, array step: 0x4 *\/$/;"	m	struct:__anon185
PIORESCAP	device/LPC54018.h	/^  __I  uint32_t PIORESCAP[2];                      \/**< Reset captured value of port n, array offset: 0xD0, array step: 0x4 *\/$/;"	m	struct:__anon185
PKT_FORMAT	radio/sx1276-Fsk.h	/^}PKT_FORMAT;$/;"	t	typeref:enum:__anon494
PKT_FORMAT_FIXED	radio/sx1276-Fsk.h	/^    PKT_FORMAT_FIXED             =   0x00,       \/\/fixed packet$/;"	e	enum:__anon494
PKT_FORMAT_VARIABLE	radio/sx1276-Fsk.h	/^    PKT_FORMAT_VARIABLE          =   0x01,       \/\/variable packet$/;"	e	enum:__anon494
PLDMND	device/LPC54018.h	/^  __O  uint32_t PLDMND;                            \/**< Poll Demand register, offset: 0x84 *\/$/;"	m	struct:__anon177
PLL_CONFIGFLAG_FORCENOFRACT	drivers/fsl_clock.h	1005;"	d
PLL_CONFIGFLAG_USEINRATE	drivers/fsl_clock.h	1004;"	d
PLL_LOWER_IN_LIMIT	drivers/fsl_clock.c	39;"	d	file:
PLL_MAX_CCO_FREQ_MHZ	drivers/fsl_clock.c	38;"	d	file:
PLL_MAX_IN_SSMODE	drivers/fsl_clock.c	41;"	d	file:
PLL_MAX_N_DIV	drivers/fsl_clock.c	27;"	d	file:
PLL_MDEC_VAL_M	device/system_LPC54018.c	60;"	d	file:
PLL_MDEC_VAL_M	drivers/fsl_clock.c	31;"	d	file:
PLL_MDEC_VAL_P	device/system_LPC54018.c	59;"	d	file:
PLL_MDEC_VAL_P	drivers/fsl_clock.c	30;"	d	file:
PLL_MDEC_VAL_SET	drivers/fsl_clock.c	69;"	d	file:
PLL_MIN_CCO_FREQ_MHZ	drivers/fsl_clock.c	37;"	d	file:
PLL_MIN_IN_SSMODE	drivers/fsl_clock.c	40;"	d	file:
PLL_NDEC_VAL_M	device/system_LPC54018.c	62;"	d	file:
PLL_NDEC_VAL_M	drivers/fsl_clock.c	33;"	d	file:
PLL_NDEC_VAL_P	device/system_LPC54018.c	61;"	d	file:
PLL_NDEC_VAL_P	drivers/fsl_clock.c	32;"	d	file:
PLL_NDEC_VAL_SET	drivers/fsl_clock.c	65;"	d	file:
PLL_PDEC_VAL_M	device/system_LPC54018.c	64;"	d	file:
PLL_PDEC_VAL_M	drivers/fsl_clock.c	35;"	d	file:
PLL_PDEC_VAL_P	device/system_LPC54018.c	63;"	d	file:
PLL_PDEC_VAL_P	drivers/fsl_clock.c	34;"	d	file:
PLL_PDEC_VAL_SET	drivers/fsl_clock.c	67;"	d	file:
PLL_SETUPFLAG_ADGVOLT	drivers/fsl_clock.h	1032;"	d
PLL_SETUPFLAG_POWERUP	drivers/fsl_clock.h	1030;"	d
PLL_SETUPFLAG_WAITLOCK	drivers/fsl_clock.h	1031;"	d
PLL_SSCG_DITHER_VALUE	drivers/fsl_clock.c	47;"	d	file:
PLL_SSCG_MC_COMP_VALUE	drivers/fsl_clock.c	45;"	d	file:
PLL_SSCG_MF_FREQ_VALUE	drivers/fsl_clock.c	44;"	d	file:
PLL_SSCG_MR_DEPTH_VALUE	drivers/fsl_clock.c	46;"	d	file:
PLUS	source/common.c	17;"	d	file:
PMAX_M	codec2/nlp.c	46;"	d	file:
PMCFG	device/LPC54018.h	/^  __IO uint32_t PMCFG;                             \/**< Pattern match interrupt bit slice configuration register, offset: 0x30 *\/$/;"	m	struct:__anon169
PMCTRL	device/LPC54018.h	/^  __IO uint32_t PMCTRL;                            \/**< Pattern match interrupt control register, offset: 0x28 *\/$/;"	m	struct:__anon169
PMSRC	device/LPC54018.h	/^  __IO uint32_t PMSRC;                             \/**< Pattern match interrupt bit-slice source register, offset: 0x2C *\/$/;"	m	struct:__anon169
PMUX_SHIFT	drivers/fsl_inputmux_connections.h	37;"	d
POL	device/LPC54018.h	/^  __IO uint32_t POL;                               \/**< Clock and Signal Polarity Control register, offset: 0x8 *\/$/;"	m	struct:__anon165
POLLERR	lwip/src/include/lwip/sockets.h	497;"	d
POLLHUP	lwip/src/include/lwip/sockets.h	505;"	d
POLLIN	lwip/src/include/lwip/sockets.h	495;"	d
POLLNVAL	lwip/src/include/lwip/sockets.h	498;"	d
POLLOUT	lwip/src/include/lwip/sockets.h	496;"	d
POLLPRI	lwip/src/include/lwip/sockets.h	502;"	d
POLLRDBAND	lwip/src/include/lwip/sockets.h	501;"	d
POLLRDNORM	lwip/src/include/lwip/sockets.h	500;"	d
POLLWRBAND	lwip/src/include/lwip/sockets.h	504;"	d
POLLWRNORM	lwip/src/include/lwip/sockets.h	503;"	d
POP_RECT	emwin/emWin_header/GUIDRV_FlexColor_Private.h	74;"	d
PORT	CMSIS/core_armv8mml.h	/^  }  PORT [32U];                         \/*!< Offset: 0x000 ( \/W)  ITM Stimulus Port Registers *\/$/;"	m	struct:__anon21	typeref:union:__anon21::__anon22
PORT	CMSIS/core_cm4.h	/^  }  PORT [32U];                         \/*!< Offset: 0x000 ( \/W)  ITM Stimulus Port Registers *\/$/;"	m	struct:__anon43	typeref:union:__anon43::__anon44
PORT0_IDX	board/pin_mux.c	68;"	d	file:
PORT1_IDX	board/pin_mux.c	69;"	d	file:
PORT2_IDX	board/pin_mux.c	70;"	d	file:
PORT3_IDX	board/pin_mux.c	71;"	d	file:
PORT4_IDX	board/pin_mux.c	72;"	d	file:
PORTABLE_H	amazon-freertos/include/portable.h	33;"	d
PORTMACRO_H	amazon-freertos/freertos/portable/portmacro.h	30;"	d
PORTMODE	device/LPC54018.h	/^  __IO uint32_t PORTMODE;                          \/**< Controls the port if it is attached to the host block or the device block, offset: 0x50 *\/$/;"	m	struct:__anon190
PORTMODE	device/LPC54018.h	/^  __IO uint32_t PORTMODE;                          \/**< Controls the port if it is attached to the host block or the device block, offset: 0x5C *\/$/;"	m	struct:__anon188
PORTSC1	device/LPC54018.h	/^  __IO uint32_t PORTSC1;                           \/**< Port Status and Control register, offset: 0x2C *\/$/;"	m	struct:__anon190
PORT_ENA	device/LPC54018.h	/^  __IO uint32_t PORT_ENA[2];                       \/**< GPIO grouped interrupt port 0 enable register, array offset: 0x40, array step: 0x4 *\/$/;"	m	struct:__anon158
PORT_POL	device/LPC54018.h	/^  __IO uint32_t PORT_POL[2];                       \/**< GPIO grouped interrupt port 0 polarity register, array offset: 0x20, array step: 0x4 *\/$/;"	m	struct:__anon158
POST_PROCESS_MBE	codec2/nlp.c	56;"	d	file:
POW10F	codec2/defines.h	120;"	d
POW10F	codec2/defines.h	122;"	d
POWER_DisableDeepSleep	drivers/fsl_power.h	/^static inline void POWER_DisableDeepSleep(void)$/;"	f
POWER_DisablePD	drivers/fsl_power.h	/^static inline void POWER_DisablePD(pd_bit_t en)$/;"	f
POWER_EnableDeepSleep	drivers/fsl_power.h	/^static inline void POWER_EnableDeepSleep(void)$/;"	f
POWER_EnablePD	drivers/fsl_power.h	/^static inline void POWER_EnablePD(pd_bit_t en)$/;"	f
PPPAPI_MSG	lwip/src/netif/ppp/ppp.c	/^LWIP_MEMPOOL_PROTOTYPE(PPPAPI_MSG);$/;"	v
PPPAPI_VAR_ALLOC	lwip/src/netif/ppp/pppapi.c	50;"	d	file:
PPPAPI_VAR_ALLOC_RETURN_NULL	lwip/src/netif/ppp/pppapi.c	51;"	d	file:
PPPAPI_VAR_DECLARE	lwip/src/netif/ppp/pppapi.c	49;"	d	file:
PPPAPI_VAR_FREE	lwip/src/netif/ppp/pppapi.c	52;"	d	file:
PPPAPI_VAR_REF	lwip/src/netif/ppp/pppapi.c	48;"	d	file:
PPPAUTHTYPE_ANY	lwip/src/include/netif/ppp/ppp.h	465;"	d
PPPAUTHTYPE_CHAP	lwip/src/include/netif/ppp/ppp.h	461;"	d
PPPAUTHTYPE_EAP	lwip/src/include/netif/ppp/ppp.h	464;"	d
PPPAUTHTYPE_MSCHAP	lwip/src/include/netif/ppp/ppp.h	462;"	d
PPPAUTHTYPE_MSCHAP_V2	lwip/src/include/netif/ppp/ppp.h	463;"	d
PPPAUTHTYPE_NONE	lwip/src/include/netif/ppp/ppp.h	459;"	d
PPPAUTHTYPE_PAP	lwip/src/include/netif/ppp/ppp.h	460;"	d
PPPCRYPT_H	lwip/src/include/netif/ppp/pppcrypt.h	39;"	d
PPPCTLG_ERRCODE	lwip/src/include/netif/ppp/ppp.h	668;"	d
PPPCTLG_FD	lwip/src/include/netif/ppp/ppp.h	673;"	d
PPPCTLG_UPSTATUS	lwip/src/include/netif/ppp/ppp.h	662;"	d
PPPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	66;"	d
PPPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	78;"	d
PPPDEBUG_H	lwip/src/include/netif/ppp/pppdebug.h	41;"	d
PPPERR_ALLOC	lwip/src/include/netif/ppp/ppp.h	135;"	d
PPPERR_AUTHFAIL	lwip/src/include/netif/ppp/ppp.h	138;"	d
PPPERR_CONNECT	lwip/src/include/netif/ppp/ppp.h	137;"	d
PPPERR_CONNECTTIME	lwip/src/include/netif/ppp/ppp.h	142;"	d
PPPERR_DEVICE	lwip/src/include/netif/ppp/ppp.h	134;"	d
PPPERR_IDLETIMEOUT	lwip/src/include/netif/ppp/ppp.h	141;"	d
PPPERR_LOOPBACK	lwip/src/include/netif/ppp/ppp.h	143;"	d
PPPERR_NONE	lwip/src/include/netif/ppp/ppp.h	131;"	d
PPPERR_OPEN	lwip/src/include/netif/ppp/ppp.h	133;"	d
PPPERR_PARAM	lwip/src/include/netif/ppp/ppp.h	132;"	d
PPPERR_PEERDEAD	lwip/src/include/netif/ppp/ppp.h	140;"	d
PPPERR_PROTOCOL	lwip/src/include/netif/ppp/ppp.h	139;"	d
PPPERR_USER	lwip/src/include/netif/ppp/ppp.h	136;"	d
PPPFILES	lwip/src/Filelists.mk	/^PPPFILES=$(LWIPDIR)\/netif\/ppp\/auth.c \\$/;"	m
PPPOE_ADD_16	lwip/src/netif/ppp/pppoe.c	94;"	d	file:
PPPOE_ADD_HEADER	lwip/src/netif/ppp/pppoe.c	99;"	d	file:
PPPOE_CODE_PADI	lwip/src/include/netif/ppp/pppoe.h	133;"	d
PPPOE_CODE_PADO	lwip/src/include/netif/ppp/pppoe.h	134;"	d
PPPOE_CODE_PADR	lwip/src/include/netif/ppp/pppoe.h	135;"	d
PPPOE_CODE_PADS	lwip/src/include/netif/ppp/pppoe.h	136;"	d
PPPOE_CODE_PADT	lwip/src/include/netif/ppp/pppoe.h	137;"	d
PPPOE_DISC_MAXPADI	lwip/src/netif/ppp/pppoe.c	107;"	d	file:
PPPOE_DISC_MAXPADR	lwip/src/netif/ppp/pppoe.c	108;"	d	file:
PPPOE_DISC_TIMEOUT	lwip/src/netif/ppp/pppoe.c	105;"	d	file:
PPPOE_ERRORSTRING_LEN	lwip/src/netif/ppp/pppoe.c	116;"	d	file:
PPPOE_HEADERLEN	lwip/src/include/netif/ppp/pppoe.h	119;"	d
PPPOE_IF	lwip/src/netif/ppp/ppp.c	/^LWIP_MEMPOOL_PROTOTYPE(PPPOE_IF);$/;"	v
PPPOE_MAX_AC_COOKIE_LEN	lwip/src/include/netif/ppp/pppoe.h	140;"	d
PPPOE_SLOW_RETRY	lwip/src/netif/ppp/pppoe.c	106;"	d	file:
PPPOE_STATE_INITIAL	lwip/src/include/netif/ppp/pppoe.h	112;"	d
PPPOE_STATE_PADI_SENT	lwip/src/include/netif/ppp/pppoe.h	113;"	d
PPPOE_STATE_PADO_SENT	lwip/src/include/netif/ppp/pppoe.h	117;"	d
PPPOE_STATE_PADR_SENT	lwip/src/include/netif/ppp/pppoe.h	114;"	d
PPPOE_STATE_SESSION	lwip/src/include/netif/ppp/pppoe.h	115;"	d
PPPOE_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	44;"	d
PPPOE_TAG_ACCOOKIE	lwip/src/include/netif/ppp/pppoe.h	126;"	d
PPPOE_TAG_ACNAME	lwip/src/include/netif/ppp/pppoe.h	124;"	d
PPPOE_TAG_ACSYS_ERR	lwip/src/include/netif/ppp/pppoe.h	130;"	d
PPPOE_TAG_EOL	lwip/src/include/netif/ppp/pppoe.h	122;"	d
PPPOE_TAG_GENERIC_ERR	lwip/src/include/netif/ppp/pppoe.h	131;"	d
PPPOE_TAG_HUNIQUE	lwip/src/include/netif/ppp/pppoe.h	125;"	d
PPPOE_TAG_RELAYSID	lwip/src/include/netif/ppp/pppoe.h	128;"	d
PPPOE_TAG_SNAME	lwip/src/include/netif/ppp/pppoe.h	123;"	d
PPPOE_TAG_SNAME_ERR	lwip/src/include/netif/ppp/pppoe.h	129;"	d
PPPOE_TAG_VENDOR	lwip/src/include/netif/ppp/pppoe.h	127;"	d
PPPOE_VERTYPE	lwip/src/include/netif/ppp/pppoe.h	120;"	d
PPPOL2TP_AUTH_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	58;"	d
PPPOL2TP_AVPHEADERFLAG_HIDDEN	lwip/src/include/netif/ppp/pppol2tp.h	72;"	d
PPPOL2TP_AVPHEADERFLAG_LENGTHMASK	lwip/src/include/netif/ppp/pppol2tp.h	73;"	d
PPPOL2TP_AVPHEADERFLAG_MANDATORY	lwip/src/include/netif/ppp/pppol2tp.h	71;"	d
PPPOL2TP_AVPTYPE_BEARERCAPABILITIES	lwip/src/include/netif/ppp/pppol2tp.h	110;"	d
PPPOL2TP_AVPTYPE_CALLSERIALNUMBER	lwip/src/include/netif/ppp/pppol2tp.h	145;"	d
PPPOL2TP_AVPTYPE_CAUSECODE	lwip/src/include/netif/ppp/pppol2tp.h	135;"	d
PPPOL2TP_AVPTYPE_CHALLENGE	lwip/src/include/netif/ppp/pppol2tp.h	132;"	d
PPPOL2TP_AVPTYPE_CHALLENGERESPONSE	lwip/src/include/netif/ppp/pppol2tp.h	138;"	d
PPPOL2TP_AVPTYPE_CHALLENGERESPONSE_SIZE	lwip/src/include/netif/ppp/pppol2tp.h	139;"	d
PPPOL2TP_AVPTYPE_FRAMINGCAPABILITIES	lwip/src/include/netif/ppp/pppol2tp.h	106;"	d
PPPOL2TP_AVPTYPE_FRAMINGTYPE	lwip/src/include/netif/ppp/pppol2tp.h	148;"	d
PPPOL2TP_AVPTYPE_HOSTNAME	lwip/src/include/netif/ppp/pppol2tp.h	117;"	d
PPPOL2TP_AVPTYPE_MESSAGE	lwip/src/include/netif/ppp/pppol2tp.h	76;"	d
PPPOL2TP_AVPTYPE_RECEIVEWINDOWSIZE	lwip/src/include/netif/ppp/pppol2tp.h	128;"	d
PPPOL2TP_AVPTYPE_RESULTCODE	lwip/src/include/netif/ppp/pppol2tp.h	98;"	d
PPPOL2TP_AVPTYPE_SESSIONID	lwip/src/include/netif/ppp/pppol2tp.h	142;"	d
PPPOL2TP_AVPTYPE_TIEBREAKER	lwip/src/include/netif/ppp/pppol2tp.h	114;"	d
PPPOL2TP_AVPTYPE_TUNNELID	lwip/src/include/netif/ppp/pppol2tp.h	125;"	d
PPPOL2TP_AVPTYPE_TXCONNECTSPEED	lwip/src/include/netif/ppp/pppol2tp.h	152;"	d
PPPOL2TP_AVPTYPE_VENDORNAME	lwip/src/include/netif/ppp/pppol2tp.h	121;"	d
PPPOL2TP_AVPTYPE_VERSION	lwip/src/include/netif/ppp/pppol2tp.h	102;"	d
PPPOL2TP_BEARERCAPABILITIES	lwip/src/include/netif/ppp/pppol2tp.h	111;"	d
PPPOL2TP_CONTROL_TIMEOUT	lwip/src/include/netif/ppp/pppol2tp.h	47;"	d
PPPOL2TP_DEFMRU	lwip/src/include/netif/ppp/ppp_opts.h	537;"	d
PPPOL2TP_FRAMINGCAPABILITIES	lwip/src/include/netif/ppp/pppol2tp.h	107;"	d
PPPOL2TP_FRAMINGTYPE	lwip/src/include/netif/ppp/pppol2tp.h	149;"	d
PPPOL2TP_H	lwip/src/include/netif/ppp/pppol2tp.h	38;"	d
PPPOL2TP_HEADERFLAG_CONTROL	lwip/src/include/netif/ppp/pppol2tp.h	55;"	d
PPPOL2TP_HEADERFLAG_CONTROL_FORBIDDEN	lwip/src/include/netif/ppp/pppol2tp.h	65;"	d
PPPOL2TP_HEADERFLAG_CONTROL_MANDATORY	lwip/src/include/netif/ppp/pppol2tp.h	63;"	d
PPPOL2TP_HEADERFLAG_DATA_MANDATORY	lwip/src/include/netif/ppp/pppol2tp.h	68;"	d
PPPOL2TP_HEADERFLAG_LENGTH	lwip/src/include/netif/ppp/pppol2tp.h	56;"	d
PPPOL2TP_HEADERFLAG_OFFSET	lwip/src/include/netif/ppp/pppol2tp.h	58;"	d
PPPOL2TP_HEADERFLAG_PRIORITY	lwip/src/include/netif/ppp/pppol2tp.h	59;"	d
PPPOL2TP_HEADERFLAG_SEQUENCE	lwip/src/include/netif/ppp/pppol2tp.h	57;"	d
PPPOL2TP_HEADERFLAG_VERSION	lwip/src/include/netif/ppp/pppol2tp.h	60;"	d
PPPOL2TP_HOSTNAME	lwip/src/include/netif/ppp/pppol2tp.h	118;"	d
PPPOL2TP_MAXICCN	lwip/src/include/netif/ppp/pppol2tp.h	52;"	d
PPPOL2TP_MAXICRQ	lwip/src/include/netif/ppp/pppol2tp.h	51;"	d
PPPOL2TP_MAXSCCRQ	lwip/src/include/netif/ppp/pppol2tp.h	50;"	d
PPPOL2TP_MESSAGETYPE_CDN	lwip/src/include/netif/ppp/pppol2tp.h	91;"	d
PPPOL2TP_MESSAGETYPE_HELLO	lwip/src/include/netif/ppp/pppol2tp.h	83;"	d
PPPOL2TP_MESSAGETYPE_ICCN	lwip/src/include/netif/ppp/pppol2tp.h	90;"	d
PPPOL2TP_MESSAGETYPE_ICRP	lwip/src/include/netif/ppp/pppol2tp.h	89;"	d
PPPOL2TP_MESSAGETYPE_ICRQ	lwip/src/include/netif/ppp/pppol2tp.h	88;"	d
PPPOL2TP_MESSAGETYPE_OCCN	lwip/src/include/netif/ppp/pppol2tp.h	87;"	d
PPPOL2TP_MESSAGETYPE_OCRP	lwip/src/include/netif/ppp/pppol2tp.h	86;"	d
PPPOL2TP_MESSAGETYPE_OCRQ	lwip/src/include/netif/ppp/pppol2tp.h	85;"	d
PPPOL2TP_MESSAGETYPE_SCCCN	lwip/src/include/netif/ppp/pppol2tp.h	81;"	d
PPPOL2TP_MESSAGETYPE_SCCRP	lwip/src/include/netif/ppp/pppol2tp.h	80;"	d
PPPOL2TP_MESSAGETYPE_SCCRQ	lwip/src/include/netif/ppp/pppol2tp.h	79;"	d
PPPOL2TP_MESSAGETYPE_SLI	lwip/src/include/netif/ppp/pppol2tp.h	95;"	d
PPPOL2TP_MESSAGETYPE_STOPCCN	lwip/src/include/netif/ppp/pppol2tp.h	82;"	d
PPPOL2TP_MESSAGETYPE_WEN	lwip/src/include/netif/ppp/pppol2tp.h	93;"	d
PPPOL2TP_OUTPUT_DATA_HEADER_LEN	lwip/src/include/netif/ppp/pppol2tp.h	162;"	d
PPPOL2TP_PCB	lwip/src/netif/ppp/ppp.c	/^LWIP_MEMPOOL_PROTOTYPE(PPPOL2TP_PCB);$/;"	v
PPPOL2TP_RECEIVEWINDOWSIZE	lwip/src/include/netif/ppp/pppol2tp.h	129;"	d
PPPOL2TP_RESULTCODE	lwip/src/include/netif/ppp/pppol2tp.h	99;"	d
PPPOL2TP_SLOW_RETRY	lwip/src/include/netif/ppp/pppol2tp.h	48;"	d
PPPOL2TP_STATE_DATA	lwip/src/include/netif/ppp/pppol2tp.h	160;"	d
PPPOL2TP_STATE_ICCN_SENT	lwip/src/include/netif/ppp/pppol2tp.h	159;"	d
PPPOL2TP_STATE_ICRQ_SENT	lwip/src/include/netif/ppp/pppol2tp.h	158;"	d
PPPOL2TP_STATE_INITIAL	lwip/src/include/netif/ppp/pppol2tp.h	156;"	d
PPPOL2TP_STATE_SCCRQ_SENT	lwip/src/include/netif/ppp/pppol2tp.h	157;"	d
PPPOL2TP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	51;"	d
PPPOL2TP_TXCONNECTSPEED	lwip/src/include/netif/ppp/pppol2tp.h	153;"	d
PPPOL2TP_VENDORNAME	lwip/src/include/netif/ppp/pppol2tp.h	122;"	d
PPPOL2TP_VERSION	lwip/src/include/netif/ppp/pppol2tp.h	103;"	d
PPPOS_DECL_PROTECT	lwip/src/netif/ppp/pppos.c	159;"	d	file:
PPPOS_DECL_PROTECT	lwip/src/netif/ppp/pppos.c	163;"	d	file:
PPPOS_H	lwip/src/include/netif/ppp/pppos.h	38;"	d
PPPOS_PCB	lwip/src/netif/ppp/ppp.c	/^LWIP_MEMPOOL_PROTOTYPE(PPPOS_PCB);$/;"	v
PPPOS_PROTECT	lwip/src/netif/ppp/pppos.c	160;"	d	file:
PPPOS_PROTECT	lwip/src/netif/ppp/pppos.c	164;"	d	file:
PPPOS_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	65;"	d
PPPOS_UNPROTECT	lwip/src/netif/ppp/pppos.c	161;"	d	file:
PPPOS_UNPROTECT	lwip/src/netif/ppp/pppos.c	165;"	d	file:
PPP_ADDRESS	lwip/src/include/netif/ppp/ppp_impl.h	77;"	d
PPP_ALLOWED_ADDRS	lwip/src/include/netif/ppp/ppp.h	80;"	d
PPP_ALLSTATIONS	lwip/src/include/netif/ppp/ppp_impl.h	84;"	d
PPP_AUTH_SUPPORT	lwip/src/include/netif/ppp/ppp.h	146;"	d
PPP_CBCP	lwip/src/include/netif/ppp/ppp_impl.h	133;"	d
PPP_CCP	lwip/src/include/netif/ppp/ppp_impl.h	117;"	d
PPP_CHAP	lwip/src/include/netif/ppp/ppp_impl.h	130;"	d
PPP_COMP	lwip/src/include/netif/ppp/ppp_impl.h	106;"	d
PPP_CONTROL	lwip/src/include/netif/ppp/ppp_impl.h	78;"	d
PPP_CTRL_PBUF_MAX_SIZE	lwip/src/include/netif/ppp/ppp_impl.h	68;"	d
PPP_CTRL_PBUF_MAX_SIZE	lwip/src/include/netif/ppp/ppp_impl.h	71;"	d
PPP_CTRL_PBUF_TYPE	lwip/src/include/netif/ppp/ppp_impl.h	67;"	d
PPP_CTRL_PBUF_TYPE	lwip/src/include/netif/ppp/ppp_impl.h	70;"	d
PPP_DATAINPUT	lwip/src/include/netif/ppp/ppp_impl.h	275;"	d
PPP_DEBUG	lwip/src/include/netif/ppp/ppp_opts.h	132;"	d
PPP_DEFMRU	lwip/src/include/netif/ppp/ppp_opts.h	513;"	d
PPP_EAP	lwip/src/include/netif/ppp/ppp_impl.h	136;"	d
PPP_EAP_H	lwip/src/include/netif/ppp/eap.h	27;"	d
PPP_ECP	lwip/src/include/netif/ppp/ppp_impl.h	120;"	d
PPP_ESCAPE	lwip/src/include/netif/ppp/ppp_impl.h	87;"	d
PPP_FCS	lwip/src/netif/ppp/pppos.c	134;"	d	file:
PPP_FCS	lwip/src/netif/ppp/pppos.c	149;"	d	file:
PPP_FCSLEN	lwip/src/include/netif/ppp/ppp.h	111;"	d
PPP_FCS_POLYNOMIAL	lwip/src/netif/ppp/pppos.c	137;"	d	file:
PPP_FCS_TABLE	lwip/src/include/netif/ppp/ppp_opts.h	198;"	d
PPP_FLAG	lwip/src/include/netif/ppp/ppp_impl.h	86;"	d
PPP_FSM_ACKRCVD	lwip/src/include/netif/ppp/fsm.h	141;"	d
PPP_FSM_ACKSENT	lwip/src/include/netif/ppp/fsm.h	142;"	d
PPP_FSM_CLOSED	lwip/src/include/netif/ppp/fsm.h	136;"	d
PPP_FSM_CLOSING	lwip/src/include/netif/ppp/fsm.h	138;"	d
PPP_FSM_INITIAL	lwip/src/include/netif/ppp/fsm.h	134;"	d
PPP_FSM_OPENED	lwip/src/include/netif/ppp/fsm.h	143;"	d
PPP_FSM_REQSENT	lwip/src/include/netif/ppp/fsm.h	140;"	d
PPP_FSM_STARTING	lwip/src/include/netif/ppp/fsm.h	135;"	d
PPP_FSM_STOPPED	lwip/src/include/netif/ppp/fsm.h	137;"	d
PPP_FSM_STOPPING	lwip/src/include/netif/ppp/fsm.h	139;"	d
PPP_GOODFCS	lwip/src/netif/ppp/pppos.c	156;"	d	file:
PPP_H	lwip/src/include/netif/ppp/ppp.h	38;"	d
PPP_HDRLEN	lwip/src/include/netif/ppp/ppp.h	110;"	d
PPP_IDLETIMELIMIT	lwip/src/include/netif/ppp/ppp.h	68;"	d
PPP_INITFCS	lwip/src/netif/ppp/pppos.c	155;"	d	file:
PPP_INPROC_IRQ_SAFE	lwip/src/include/netif/ppp/ppp_opts.h	141;"	d
PPP_IP	lwip/src/include/netif/ppp/ppp_impl.h	93;"	d
PPP_IPCP	lwip/src/include/netif/ppp/ppp_impl.h	108;"	d
PPP_IPV4_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	157;"	d
PPP_IPV6	lwip/src/include/netif/ppp/ppp_impl.h	103;"	d
PPP_IPV6CP	lwip/src/include/netif/ppp/ppp_impl.h	114;"	d
PPP_IPV6_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	164;"	d
PPP_LCP	lwip/src/include/netif/ppp/ppp_impl.h	122;"	d
PPP_LCP_ADAPTIVE	lwip/src/include/netif/ppp/ppp.h	72;"	d
PPP_LQR	lwip/src/include/netif/ppp/ppp_impl.h	127;"	d
PPP_MAXCONNECT	lwip/src/include/netif/ppp/ppp.h	76;"	d
PPP_MAXIDLEFLAG	lwip/src/include/netif/ppp/ppp_opts.h	495;"	d
PPP_MAXMRU	lwip/src/include/netif/ppp/ppp_opts.h	520;"	d
PPP_MD5_RANDM	lwip/src/include/netif/ppp/ppp_opts.h	322;"	d
PPP_MINMRU	lwip/src/include/netif/ppp/ppp_opts.h	527;"	d
PPP_MPPE_ALLOW_STATEFUL	lwip/src/include/netif/ppp/ppp.h	511;"	d
PPP_MPPE_DISABLE	lwip/src/include/netif/ppp/ppp.h	507;"	d
PPP_MPPE_ENABLE	lwip/src/include/netif/ppp/ppp.h	509;"	d
PPP_MPPE_REFUSE_128	lwip/src/include/netif/ppp/ppp.h	515;"	d
PPP_MPPE_REFUSE_40	lwip/src/include/netif/ppp/ppp.h	513;"	d
PPP_MRU	lwip/src/include/netif/ppp/ppp_opts.h	506;"	d
PPP_NOTIFY	lwip/src/include/netif/ppp/ppp.h	60;"	d
PPP_NOTIFY_PHASE	lwip/src/include/netif/ppp/ppp_opts.h	177;"	d
PPP_NUM_TIMEOUTS	lwip/src/include/netif/ppp/ppp_opts.h	607;"	d
PPP_NUM_TIMEOUTS	lwip/src/include/netif/ppp/ppp_opts.h	95;"	d
PPP_NUM_TIMEOUTS_PER_PCB	lwip/src/include/netif/ppp/ppp_opts.h	91;"	d
PPP_OCTETS_DIRECTION_IN	lwip/src/include/netif/ppp/ppp_impl.h	265;"	d
PPP_OCTETS_DIRECTION_MAXOVERAL	lwip/src/include/netif/ppp/ppp_impl.h	267;"	d
PPP_OCTETS_DIRECTION_MAXSESSION	lwip/src/include/netif/ppp/ppp_impl.h	269;"	d
PPP_OCTETS_DIRECTION_OUT	lwip/src/include/netif/ppp/ppp_impl.h	266;"	d
PPP_OCTETS_DIRECTION_SUM	lwip/src/include/netif/ppp/ppp_impl.h	264;"	d
PPP_OE_H	lwip/src/include/netif/ppp/pppoe.h	74;"	d
PPP_OPTIONS	lwip/src/include/netif/ppp/ppp.h	56;"	d
PPP_OUR_NAME	lwip/src/include/netif/ppp/ppp_opts.h	301;"	d
PPP_PAP	lwip/src/include/netif/ppp/ppp_impl.h	124;"	d
PPP_PHASE_AUTHENTICATE	lwip/src/include/netif/ppp/ppp.h	123;"	d
PPP_PHASE_CALLBACK	lwip/src/include/netif/ppp/ppp.h	124;"	d
PPP_PHASE_DEAD	lwip/src/include/netif/ppp/ppp.h	116;"	d
PPP_PHASE_DISCONNECT	lwip/src/include/netif/ppp/ppp.h	128;"	d
PPP_PHASE_DORMANT	lwip/src/include/netif/ppp/ppp.h	121;"	d
PPP_PHASE_ESTABLISH	lwip/src/include/netif/ppp/ppp.h	122;"	d
PPP_PHASE_HOLDOFF	lwip/src/include/netif/ppp/ppp.h	118;"	d
PPP_PHASE_INITIALIZE	lwip/src/include/netif/ppp/ppp.h	119;"	d
PPP_PHASE_MASTER	lwip/src/include/netif/ppp/ppp.h	117;"	d
PPP_PHASE_NETWORK	lwip/src/include/netif/ppp/ppp.h	125;"	d
PPP_PHASE_RUNNING	lwip/src/include/netif/ppp/ppp.h	126;"	d
PPP_PHASE_SERIALCONN	lwip/src/include/netif/ppp/ppp.h	120;"	d
PPP_PHASE_TERMINATE	lwip/src/include/netif/ppp/ppp.h	127;"	d
PPP_PROTOCOL	lwip/src/include/netif/ppp/ppp_impl.h	79;"	d
PPP_PROTOCOLNAME	lwip/src/include/netif/ppp/ppp.h	84;"	d
PPP_REMOTENAME	lwip/src/include/netif/ppp/ppp.h	64;"	d
PPP_SERVER	lwip/src/include/netif/ppp/ppp_opts.h	293;"	d
PPP_STATS_SUPPORT	lwip/src/include/netif/ppp/ppp.h	88;"	d
PPP_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	37;"	d
PPP_TRANS	lwip/src/include/netif/ppp/ppp_impl.h	88;"	d
PPP_UI	lwip/src/include/netif/ppp/ppp_impl.h	85;"	d
PPP_USE_PBUF_RAM	lwip/src/include/netif/ppp/ppp_opts.h	191;"	d
PPP_VJC_COMP	lwip/src/include/netif/ppp/ppp_impl.h	99;"	d
PPP_VJC_UNCOMP	lwip/src/include/netif/ppp/ppp_impl.h	100;"	d
PP_HTONL	lwip/src/include/lwip/def.h	110;"	d
PP_HTONL	lwip/src/include/lwip/def.h	92;"	d
PP_HTONS	lwip/src/include/lwip/def.h	108;"	d
PP_HTONS	lwip/src/include/lwip/def.h	90;"	d
PP_NTOHL	lwip/src/include/lwip/def.h	114;"	d
PP_NTOHL	lwip/src/include/lwip/def.h	93;"	d
PP_NTOHS	lwip/src/include/lwip/def.h	109;"	d
PP_NTOHS	lwip/src/include/lwip/def.h	91;"	d
PR	device/LPC54018.h	/^  __IO uint32_t PR;                                \/**< Prescale Register, offset: 0xC *\/$/;"	m	struct:__anon145
PREAC2FSCOEF	device/LPC54018.h	/^    __IO uint32_t PREAC2FSCOEF;                      \/**< Pre-Emphasis Filter Coefficient for 2 FS register, array offset: 0x8, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
PREAC4FSCOEF	device/LPC54018.h	/^    __IO uint32_t PREAC4FSCOEF;                      \/**< Pre-Emphasis Filter Coefficient for 4 FS register, array offset: 0xC, array step: 0x100 *\/$/;"	m	struct:__anon149::__anon150
PREDICTOR_SUPPORT	lwip/src/include/netif/ppp/ppp.h	100;"	d
PRESETCTRL	device/LPC54018.h	/^  __IO uint32_t PRESETCTRL[3];                     \/**< Peripheral reset control n, array offset: 0x100, array step: 0x4 *\/$/;"	m	struct:__anon185
PRESETCTRLCLR	device/LPC54018.h	/^  __O  uint32_t PRESETCTRLCLR[3];                  \/**< Clear bits in PRESETCTRLn, array offset: 0x140, array step: 0x4 *\/$/;"	m	struct:__anon185
PRESETCTRLSET	device/LPC54018.h	/^  __O  uint32_t PRESETCTRLSET[3];                  \/**< Set bits in PRESETCTRLn, array offset: 0x120, array step: 0x4 *\/$/;"	m	struct:__anon185
PRESSED_STATE_LEFT	emwin/emWin_header/SCROLLBAR_Private.h	62;"	d
PRESSED_STATE_NONE	emwin/emWin_header/SCROLLBAR_Private.h	60;"	d
PRESSED_STATE_RIGHT	emwin/emWin_header/SCROLLBAR_Private.h	61;"	d
PRESSED_STATE_THUMB	emwin/emWin_header/SCROLLBAR_Private.h	63;"	d
PRINTF	utilities/fsl_debug_console.h	70;"	d
PRINTF	utilities/fsl_debug_console.h	75;"	d
PRINTF	utilities/fsl_debug_console.h	81;"	d
PRINTF_ADVANCED_ENABLE	utilities/fsl_debug_console_conf.h	144;"	d
PRINTF_FLOAT_ENABLE	utilities/fsl_debug_console_conf.h	134;"	d
PRINTMSG	lwip/src/include/netif/ppp/ppp_impl.h	542;"	d
PRINTPKT_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	150;"	d
PRIVATE_CONTEXT_MEMBERS	emwin/emWin_header/GUIDRV_Lin_Private.h	199;"	d
PRIVATE_DEVFUNC_ONINITHOOK	emwin/emWin_header/GUIDRV_TemplateI_Private.h	57;"	d
PRIVATE_MANAGEMENT_GETDEVFUNC	emwin/emWin_header/GUIDRV_Lin_Private.h	273;"	d
PRIVATE_MANAGEMENT_SETDEVFUNC	emwin/emWin_header/GUIDRV_Lin_Private.h	303;"	d
PRIVILEGED_DATA	amazon-freertos/include/mpu_wrappers.h	163;"	d
PRIVILEGED_DATA	amazon-freertos/include/mpu_wrappers.h	170;"	d
PRIVILEGED_DATA	amazon-freertos/include/mpu_wrappers.h	178;"	d
PRIVILEGED_FUNCTION	amazon-freertos/include/mpu_wrappers.h	162;"	d
PRIVILEGED_FUNCTION	amazon-freertos/include/mpu_wrappers.h	169;"	d
PRIVILEGED_FUNCTION	amazon-freertos/include/mpu_wrappers.h	177;"	d
PROBE_MAX	lwip/src/include/lwip/prot/autoip.h	57;"	d
PROBE_MIN	lwip/src/include/lwip/prot/autoip.h	56;"	d
PROBE_NUM	lwip/src/include/lwip/prot/autoip.h	58;"	d
PROBE_WAIT	lwip/src/include/lwip/prot/autoip.h	55;"	d
PROFILE	codec2/nlp.c	32;"	d	file:
PROFILE	codec2/quantise.c	43;"	d	file:
PROFILE_SAMPLE	codec2/machdep.h	34;"	d
PROFILE_SAMPLE	codec2/machdep.h	41;"	d
PROFILE_SAMPLE_AND_LOG	codec2/machdep.h	35;"	d
PROFILE_SAMPLE_AND_LOG	codec2/machdep.h	42;"	d
PROFILE_SAMPLE_AND_LOG2	codec2/machdep.h	37;"	d
PROFILE_SAMPLE_AND_LOG2	codec2/machdep.h	43;"	d
PROFILE_VAR	codec2/machdep.h	33;"	d
PROFILE_VAR	codec2/machdep.h	40;"	d
PROGBAR_CF_HORIZONTAL	emwin/emWin_header/PROGBAR.h	68;"	d
PROGBAR_CF_USER	emwin/emWin_header/PROGBAR.h	70;"	d
PROGBAR_CF_VERTICAL	emwin/emWin_header/PROGBAR.h	69;"	d
PROGBAR_H	emwin/emWin_header/PROGBAR.h	46;"	d
PROGBAR_Handle	emwin/emWin_header/PROGBAR.h	/^typedef WM_HMEM PROGBAR_Handle;$/;"	t
PROGBAR_ID	emwin/emWin_header/WIDGET.h	115;"	d
PROGBAR_INIT_ID	emwin/emWin_header/PROGBAR_Private.h	101;"	d
PROGBAR_INIT_ID	emwin/emWin_header/PROGBAR_Private.h	99;"	d
PROGBAR_LOCK_H	emwin/emWin_header/PROGBAR_Private.h	106;"	d
PROGBAR_LOCK_H	emwin/emWin_header/PROGBAR_Private.h	108;"	d
PROGBAR_Obj	emwin/emWin_header/PROGBAR_Private.h	/^} PROGBAR_Obj;$/;"	t	typeref:struct:__anon424
PROGBAR_PRIVATE_H	emwin/emWin_header/PROGBAR_Private.h	46;"	d
PROGBAR_PROPS	emwin/emWin_header/PROGBAR_Private.h	/^} PROGBAR_PROPS;$/;"	t	typeref:struct:__anon423
PROGBAR_SF_HORIZONTAL	emwin/emWin_header/PROGBAR_Private.h	59;"	d
PROGBAR_SF_USER	emwin/emWin_header/PROGBAR_Private.h	61;"	d
PROGBAR_SF_VERTICAL	emwin/emWin_header/PROGBAR_Private.h	60;"	d
PROGBAR_SKINFLEX_INFO	emwin/emWin_header/PROGBAR.h	/^} PROGBAR_SKINFLEX_INFO;$/;"	t	typeref:struct:__anon222
PROGBAR_SKINFLEX_L	emwin/emWin_header/PROGBAR.h	76;"	d
PROGBAR_SKINFLEX_PROPS	emwin/emWin_header/PROGBAR.h	/^} PROGBAR_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon221
PROGBAR_SKINFLEX_R	emwin/emWin_header/PROGBAR.h	77;"	d
PROGBAR_SKIN_FLEX	emwin/emWin_header/PROGBAR.h	160;"	d
PROGBAR_SKIN_PRIVATE	emwin/emWin_header/PROGBAR_Private.h	/^} PROGBAR_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon422
PROJDEFS_H	amazon-freertos/include/projdefs.h	29;"	d
PROP	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(PROP);$/;"	v
PROPAA	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(PROPAA);$/;"	v
PROP_AA2	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(PROP_AA2);$/;"	v
PROP_AA2_EXT	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(PROP_AA2_EXT);$/;"	v
PROP_AA4	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(PROP_AA4);$/;"	v
PROP_AA4_EXT	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(PROP_AA4_EXT);$/;"	v
PROP_EXT	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(PROP_EXT);$/;"	v
PROP_FRM	emwin/emWin_header/GUI_Type.h	/^DECLARE_FONT(PROP_FRM);$/;"	v
PROTO_NAME	lwip/src/netif/ppp/fsm.c	71;"	d	file:
PROTREJ	lwip/src/include/netif/ppp/lcp.h	87;"	d
PSELID	device/LPC54018.h	/^  __IO uint32_t PSELID;                            \/**< Peripheral Select and Flexcomm ID register., offset: 0xFF8 *\/$/;"	m	struct:__anon157
PSR	device/LPC54018.h	/^  __I  uint32_t PSR;                               \/**< Protocol Status Register, offset: 0x44 *\/$/;"	m	struct:__anon142
PSTAT	device/LPC54018.h	/^    __IO uint32_t PSTAT;                             \/**< Status register for channel pair, array offset: 0xC28, array step: 0x20 *\/$/;"	m	struct:__anon161::__anon162
PTR_ADDR	emwin/emWin_header/Global.h	89;"	d
PTR_ADDR	emwin/emWin_header/Global.h	91;"	d
PTS	usb/device/class/usb_device_video.h	/^            uint8_t PTS : 1U; \/*!< Presentation Time Stamp. This bit, when set, indicates the presence of a PTS field.*\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
PTT_PRESS	radio/sx1276.h	/^    PTT_PRESS$/;"	e	enum:__anon489
PTT_RELEASE	radio/sx1276.h	/^    PTT_RELEASE,$/;"	e	enum:__anon489
PUSH_RECT	emwin/emWin_header/GUIDRV_FlexColor_Private.h	73;"	d
PUTCHAR	lwip/src/include/netif/ppp/ppp_impl.h	505;"	d
PUTCHAR	utilities/fsl_debug_console.h	72;"	d
PUTCHAR	utilities/fsl_debug_console.h	77;"	d
PUTCHAR	utilities/fsl_debug_console.h	83;"	d
PUTLONG	lwip/src/include/netif/ppp/ppp_impl.h	522;"	d
PUTSHORT	lwip/src/include/netif/ppp/ppp_impl.h	512;"	d
PUT_ULONG_BE	lwip/src/netif/ppp/polarssl/des.c	61;"	d	file:
PUT_ULONG_BE	lwip/src/netif/ppp/polarssl/sha1.c	62;"	d	file:
PUT_ULONG_LE	lwip/src/netif/ppp/polarssl/md4.c	63;"	d	file:
PUT_ULONG_LE	lwip/src/netif/ppp/polarssl/md5.c	62;"	d	file:
PVALMAX	device/system_LPC54018.c	57;"	d	file:
PVALMAX	drivers/fsl_clock.c	20;"	d	file:
PWMC	device/LPC54018.h	/^  __IO uint32_t PWMC;                              \/**< PWM Control Register. The PWMCON enables PWM mode for the external match pins., offset: 0x74 *\/$/;"	m	struct:__anon145
PWREN	device/LPC54018.h	/^  __IO uint32_t PWREN;                             \/**< Power Enable register, offset: 0x4 *\/$/;"	m	struct:__anon177
P_MAX_S	codec2/defines.h	58;"	d
P_MIN_S	codec2/defines.h	57;"	d
PageSize	emwin/emWin_header/SCROLLBAR_Private.h	/^  int NumItems, v, PageSize;$/;"	m	struct:SCROLLBAR_OBJ
PageSize	emwin/emWin_header/WM.h	/^  int NumItems, v, PageSize;$/;"	m	struct:__anon284
PageStatus	emwin/emWin_header/MULTIPAGE.h	/^  U8                PageStatus;$/;"	m	struct:__anon200
PaintObj	emwin/emWin_header/GRAPH_Private.h	/^  GRAPH_PAINT_OBJ   PaintObj;$/;"	m	struct:GRAPH_SCALE_OBJ
PaintObj	emwin/emWin_header/GRAPH_Private.h	/^  GRAPH_PAINT_OBJ PaintObj;$/;"	m	struct:GRAPH_DATA_OBJ
Palette	emwin/emWin_header/IMAGE_Private.h	/^  GUI_LOGPALETTE      Palette;      \/\/ Palette structure$/;"	m	struct:__anon315
Para	emwin/emWin_header/DIALOG_Intern.h	/^  I32                      Para;             \/\/ Widget specific parameter (opt.)$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
PenShape	emwin/emWin_header/GUI.h	/^  U8         PenShape;$/;"	m	struct:GUI_CONTEXT
PenSize	emwin/emWin_header/GUI.h	/^  U8         PenSize;$/;"	m	struct:GUI_CONTEXT
PendSV_Handler	startup/startup_lpc54018.c	/^WEAK_AV void PendSV_Handler(void)$/;"	f
PendSV_IRQn	device/LPC54018.h	/^  PendSV_IRQn                  = -2,               \/**< Cortex-M4 Pend SV Interrupt *\/$/;"	e	enum:IRQn
PendedFunction_t	amazon-freertos/include/timers.h	/^typedef void (*PendedFunction_t)( void *, uint32_t );$/;"	t
Period	emwin/emWin_header/GUI.h	/^  GUI_TIMER_TIME Period;$/;"	m	struct:__anon397
Period	emwin/emWin_header/GUI.h	/^  unsigned            Period;$/;"	m	struct:__anon390
Period	emwin/emWin_header/KNOB_Private.h	/^  I32 Period;        \/\/ Time it takes to stop the knob in ms$/;"	m	struct:__anon326
Period	emwin/emWin_header/WM.h	/^  int Period;$/;"	m	struct:__anon287
PixelHeight	emwin/emWin_header/GUI_Type.h	/^  int PixelHeight;         \/* Pixel height of new font. It means the height of the surrounding rectangle$/;"	m	struct:__anon268
PixelOffset	emwin/emWin_header/GUI_SetOrientation.h	/^  int PixelOffset;$/;"	m	struct:DRIVER_CONTEXT
PlateResistanceX	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      PlateResistanceX;              \/\/ Resistance of the X-plate of the touch screen. This value is needed for calculation of the touch pressure.$/;"	m	struct:__anon306
Pn	codec2/codec2_internal.h	/^    float        *Pn;	                   \/* [2*n_samp] trapezoidal synthesis window   *\/$/;"	m	struct:CODEC2
Point	emwin/emWin_header/WM.h	/^  GUI_POINT      Point;     \/\/ Relative movement$/;"	m	struct:__anon289
Pos	emwin/emWin_header/GRAPH_Private.h	/^  int               Pos;$/;"	m	struct:GRAPH_SCALE_OBJ
Pos	emwin/emWin_header/GUI.h	/^  int Pos;$/;"	m	struct:__anon397
Pos	emwin/emWin_header/LCD.h	/^  U8 Pos;$/;"	m	struct:__anon411
Pos	emwin/emWin_header/LISTWHEEL_Private.h	/^  int                     Pos;              \/\/ Current position in pixels$/;"	m	struct:__anon353
Pos	emwin/emWin_header/SWIPELIST_Private.h	/^  int                     Pos;$/;"	m	struct:__anon238
Pos	emwin/emWin_header/SWIPELIST_Private.h	/^  int            Pos;$/;"	m	struct:__anon236
PosTouchedLast	emwin/emWin_header/LISTWHEEL_Private.h	/^  int                     PosTouchedLast;   \/\/ Last touched position in pixels$/;"	m	struct:__anon353
PowerControl	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*PowerControl)   (ARM_POWER_STATE state);                                               \/\/\/< Pointer to \\ref ARM_I2C_PowerControl : Control I2C Interface Power.$/;"	m	struct:_ARM_DRIVER_I2C
PowerControl	CMSIS_driver/Driver_SPI.h	/^  int32_t              (*PowerControl)    (ARM_POWER_STATE state);            \/\/\/< Pointer to \\ref ARM_SPI_PowerControl : Control SPI Interface Power.$/;"	m	struct:_ARM_DRIVER_SPI
PowerIndex	radio/sx1276.h	/^    INT8U               PowerIndex;$/;"	m	struct:__anon487
PrepareTxLastWord	drivers/fsl_spi_dma.c	/^static void PrepareTxLastWord(spi_transfer_t *xfer, uint32_t *txLastWord, spi_config_t *config)$/;"	f	file:
Pressed	emwin/emWin_header/GUI_Type.h	/^  U8  Pressed;$/;"	m	struct:__anon247
Pressed	emwin/emWin_header/GUI_Type.h	/^  int Pressed;$/;"	m	struct:__anon248
PressedCnt	emwin/emWin_header/WM.h	/^  int Key, PressedCnt;$/;"	m	struct:__anon283
Pressure	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      Pressure;  \/\/ Last measured touch pressure if touch pressure measurement is enabled$/;"	m	struct:__anon307
PressureMax	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      PressureMax;                   \/\/ Maximum pressure threshold. A measured pressure above this value means we do not have a valid touch event.$/;"	m	struct:__anon306
PressureMin	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      PressureMin;                   \/\/ Minimum pressure threshold. A measured pressure below this value means we do not have a valid touch event.$/;"	m	struct:__anon306
Props	emwin/emWin_header/BUTTON_Private.h	/^  BUTTON_PROPS Props;$/;"	m	struct:__anon402
Props	emwin/emWin_header/CHECKBOX_Private.h	/^  CHECKBOX_PROPS      Props;$/;"	m	struct:__anon206
Props	emwin/emWin_header/CHOOSECOLOR.h	/^  CHOOSECOLOR_PROPS Props;$/;"	m	struct:__anon234
Props	emwin/emWin_header/DROPDOWN_Private.h	/^  DROPDOWN_PROPS Props;$/;"	m	struct:__anon360
Props	emwin/emWin_header/EDIT_Private.h	/^  EDIT_PROPS           Props;$/;"	m	struct:EDIT_Obj_struct
Props	emwin/emWin_header/FRAMEWIN_Private.h	/^  FRAMEWIN_PROPS          Props;$/;"	m	struct:__anon280
Props	emwin/emWin_header/GRAPH_Private.h	/^  GRAPH_PROPS     Props;$/;"	m	struct:GRAPH_OBJ
Props	emwin/emWin_header/GRAPH_Private.h	/^  GRAPH_SCALE_PROPS Props;$/;"	m	struct:GRAPH_SCALE_OBJ
Props	emwin/emWin_header/HEADER_Private.h	/^  HEADER_PROPS        Props;$/;"	m	struct:__anon276
Props	emwin/emWin_header/ICONVIEW_Private.h	/^  ICONVIEW_PROPS          Props;$/;"	m	struct:__anon219
Props	emwin/emWin_header/IMAGE_Private.h	/^  IMAGE_PROPS         Props;$/;"	m	struct:__anon315
Props	emwin/emWin_header/KNOB_Private.h	/^  KNOB_PROPS Props;$/;"	m	struct:__anon327
Props	emwin/emWin_header/LISTBOX_Private.h	/^  LISTBOX_PROPS Props;$/;"	m	struct:__anon313
Props	emwin/emWin_header/LISTVIEW_Private.h	/^  LISTVIEW_PROPS               Props;$/;"	m	struct:LISTVIEW_Obj
Props	emwin/emWin_header/LISTWHEEL_Private.h	/^  LISTWHEEL_PROPS         Props;$/;"	m	struct:__anon353
Props	emwin/emWin_header/MENU_Private.h	/^  MENU_PROPS          Props;$/;"	m	struct:__anon319
Props	emwin/emWin_header/MULTIPAGE_Private.h	/^  MULTIPAGE_PROPS        Props;$/;"	m	struct:MULTIPAGE_Obj
Props	emwin/emWin_header/PROGBAR_Private.h	/^  PROGBAR_PROPS Props;$/;"	m	struct:__anon424
Props	emwin/emWin_header/RADIO_Private.h	/^  RADIO_PROPS Props;$/;"	m	struct:__anon343
Props	emwin/emWin_header/SCROLLBAR_Private.h	/^  SCROLLBAR_PROPS Props;$/;"	m	struct:SCROLLBAR_OBJ
Props	emwin/emWin_header/SLIDER_Private.h	/^  SLIDER_PROPS        Props;$/;"	m	struct:__anon378
Props	emwin/emWin_header/SPINBOX_Private.h	/^  SPINBOX_PROPS       Props;$/;"	m	struct:__anon322
Props	emwin/emWin_header/SWIPELIST_Private.h	/^  SWIPELIST_PROPS         Props;$/;"	m	struct:__anon238
Props	emwin/emWin_header/TEXT_Private.h	/^  TEXT_PROPS Props;$/;"	m	struct:__anon298
Props	emwin/emWin_header/TREEVIEW_Private.h	/^  TREEVIEW_PROPS          Props;$/;"	m	struct:__anon227
Q	CMSIS/core_armv8mml.h	/^    uint32_t Q:1;                        \/*!< bit:     27  Saturation condition flag *\/$/;"	m	struct:__anon13::__anon14
Q	CMSIS/core_armv8mml.h	/^    uint32_t Q:1;                        \/*!< bit:     27  Saturation condition flag *\/$/;"	m	struct:__anon9::__anon10
Q	CMSIS/core_cm4.h	/^    uint32_t Q:1;                        \/*!< bit:     27  Saturation condition flag *\/$/;"	m	struct:__anon31::__anon32
Q	CMSIS/core_cm4.h	/^    uint32_t Q:1;                        \/*!< bit:     27  Saturation condition flag *\/$/;"	m	struct:__anon35::__anon36
QUEUE_H	amazon-freertos/include/queue.h	30;"	d
QUEUE_REGISTRY_ITEM	amazon-freertos/freertos/queue.c	/^	typedef struct QUEUE_REGISTRY_ITEM$/;"	s	file:
QueueDefinition	amazon-freertos/freertos/queue.c	/^typedef struct QueueDefinition 		\/* The old naming convention is used to prevent breaking kernel aware debuggers. *\/$/;"	s	file:
QueueHandle_t	amazon-freertos/include/queue.h	/^typedef struct QueueDefinition * QueueHandle_t;$/;"	t	typeref:struct:QueueDefinition
QueuePointers	amazon-freertos/freertos/queue.c	/^typedef struct QueuePointers$/;"	s	file:
QueuePointers_t	amazon-freertos/freertos/queue.c	/^} QueuePointers_t;$/;"	t	typeref:struct:QueuePointers	file:
QueueRegistryItem_t	amazon-freertos/freertos/queue.c	/^	typedef xQueueRegistryItem QueueRegistryItem_t;$/;"	t	file:
QueueSetHandle_t	amazon-freertos/include/queue.h	/^typedef struct QueueDefinition * QueueSetHandle_t;$/;"	t	typeref:struct:QueueDefinition
QueueSetMemberHandle_t	amazon-freertos/include/queue.h	/^typedef struct QueueDefinition * QueueSetMemberHandle_t;$/;"	t	typeref:struct:QueueDefinition
Queue_t	amazon-freertos/freertos/queue.c	/^typedef xQUEUE Queue_t;$/;"	t	file:
R	lwip/src/netif/ppp/polarssl/sha1.c	109;"	d	file:
RACKTIMEOUT	lwip/src/netif/ppp/ccp.c	271;"	d	file:
RACK_PENDING	lwip/src/netif/ppp/ccp.c	268;"	d	file:
RADIO_BI_ACTIV	emwin/emWin_header/RADIO.h	63;"	d
RADIO_BI_CHECK	emwin/emWin_header/RADIO.h	64;"	d
RADIO_BI_INACTIV	emwin/emWin_header/RADIO.h	62;"	d
RADIO_BORDER	emwin/emWin_header/RADIO_Private.h	110;"	d
RADIO_DEFAULT_BKCOLOR	emwin/emWin_header/RADIO_Private.h	103;"	d
RADIO_DEFAULT_TEXT_COLOR	emwin/emWin_header/RADIO_Private.h	98;"	d
RADIO_FOCUSCOLOR_DEFAULT	emwin/emWin_header/RADIO_Private.h	107;"	d
RADIO_FONT_DEFAULT	emwin/emWin_header/RADIO_Private.h	81;"	d
RADIO_FONT_DEFAULT	emwin/emWin_header/RADIO_Private.h	84;"	d
RADIO_FONT_DEFAULT	emwin/emWin_header/RADIO_Private.h	87;"	d
RADIO_H	emwin/emWin_header/RADIO.h	46;"	d
RADIO_Handle	emwin/emWin_header/RADIO.h	/^typedef WM_HMEM RADIO_Handle;$/;"	t
RADIO_ID	emwin/emWin_header/WIDGET.h	116;"	d
RADIO_IDLE	radio/sx1276.h	/^    RADIO_IDLE = 0,$/;"	e	enum:__anon488
RADIO_IMAGE0_DEFAULT	emwin/emWin_header/RADIO_Private.h	64;"	d
RADIO_IMAGE1_DEFAULT	emwin/emWin_header/RADIO_Private.h	69;"	d
RADIO_IMAGE_CHECK_DEFAULT	emwin/emWin_header/RADIO_Private.h	74;"	d
RADIO_INIT_ID	emwin/emWin_header/RADIO_Private.h	151;"	d
RADIO_INIT_ID	emwin/emWin_header/RADIO_Private.h	153;"	d
RADIO_LOCK_H	emwin/emWin_header/RADIO_Private.h	158;"	d
RADIO_LOCK_H	emwin/emWin_header/RADIO_Private.h	160;"	d
RADIO_Obj	emwin/emWin_header/RADIO_Private.h	/^} RADIO_Obj;$/;"	t	typeref:struct:__anon343
RADIO_PRIVATE_H	emwin/emWin_header/RADIO_Private.h	46;"	d
RADIO_PROPS	emwin/emWin_header/RADIO_Private.h	/^} RADIO_PROPS;$/;"	t	typeref:struct:__anon342
RADIO_RX	radio/sx1276.h	/^    RADIO_RX,$/;"	e	enum:__anon488
RADIO_SKINFLEX_PI_PRESSED	emwin/emWin_header/RADIO.h	70;"	d
RADIO_SKINFLEX_PI_UNPRESSED	emwin/emWin_header/RADIO.h	71;"	d
RADIO_SKINFLEX_PROPS	emwin/emWin_header/RADIO.h	/^} RADIO_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon373
RADIO_SKIN_FLEX	emwin/emWin_header/RADIO.h	182;"	d
RADIO_SKIN_PRIVATE	emwin/emWin_header/RADIO_Private.h	/^} RADIO_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon341
RADIO_SPACING_DEFAULT	emwin/emWin_header/RADIO_Private.h	80;"	d
RADIO_SPACING_DEFAULT	emwin/emWin_header/RADIO_Private.h	83;"	d
RADIO_SPACING_DEFAULT	emwin/emWin_header/RADIO_Private.h	86;"	d
RADIO_SPACING_DEFAULT	emwin/emWin_header/RADIO_Private.h	93;"	d
RADIO_TEXTPOS_LEFT	emwin/emWin_header/RADIO.h	90;"	d
RADIO_TEXTPOS_RIGHT	emwin/emWin_header/RADIO.h	89;"	d
RADIO_TX	radio/sx1276.h	/^    RADIO_TX,$/;"	e	enum:__anon488
RADIO_TX_DONE	radio/sx1276.h	/^    RADIO_TX_DONE,$/;"	e	enum:__anon488
RAMFUNCTION_SECTION_CODE	drivers/fsl_common.h	370;"	d
RANGE_MODE	radio/sx1276.h	/^}RANGE_MODE;$/;"	t	typeref:enum:__anon486
RASR	CMSIS/core_cm4.h	/^  __IOM uint32_t RASR;                   \/*!< Offset: 0x010 (R\/W)  MPU Region Attribute and Size Register *\/$/;"	m	struct:__anon47
RASR	CMSIS/mpu_armv7.h	/^  uint32_t RASR; \/\/!< The region attribute and size register value (RASR) \\ref MPU_RASR$/;"	m	struct:__anon112
RASR_A1	CMSIS/core_cm4.h	/^  __IOM uint32_t RASR_A1;                \/*!< Offset: 0x018 (R\/W)  MPU Alias 1 Region Attribute and Size Register *\/$/;"	m	struct:__anon47
RASR_A2	CMSIS/core_cm4.h	/^  __IOM uint32_t RASR_A2;                \/*!< Offset: 0x020 (R\/W)  MPU Alias 2 Region Attribute and Size Register *\/$/;"	m	struct:__anon47
RASR_A3	CMSIS/core_cm4.h	/^  __IOM uint32_t RASR_A3;                \/*!< Offset: 0x028 (R\/W)  MPU Alias 3 Region Attribute and Size Register *\/$/;"	m	struct:__anon47
RATE_LIMIT_INTERVAL	lwip/src/include/lwip/prot/autoip.h	63;"	d
RAW_DEBUG	lwip/src/include/lwip/opt.h	3337;"	d
RAW_FLAGS_CONNECTED	lwip/src/include/lwip/raw.h	55;"	d
RAW_FLAGS_HDRINCL	lwip/src/include/lwip/raw.h	56;"	d
RAW_FLAGS_MULTICAST_LOOP	lwip/src/include/lwip/raw.h	57;"	d
RAW_INPUT_DELIVERED	lwip/src/include/lwip/priv/raw_priv.h	/^  RAW_INPUT_DELIVERED \/* pbuf only delivered to pcb (pbuf can still be referenced) *\/$/;"	e	enum:raw_input_state
RAW_INPUT_EATEN	lwip/src/include/lwip/priv/raw_priv.h	/^  RAW_INPUT_EATEN,    \/* pbuf handed off and delivered to pcb *\/$/;"	e	enum:raw_input_state
RAW_INPUT_NONE	lwip/src/include/lwip/priv/raw_priv.h	/^  RAW_INPUT_NONE = 0, \/* pbuf did not match any pcbs *\/$/;"	e	enum:raw_input_state
RAW_TTL	lwip/src/include/lwip/opt.h	898;"	d
RBAR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t RBAR;                   \/*!< Offset: 0x00C (R\/W)  MPU Region Base Address Register *\/$/;"	m	struct:__anon126
RBAR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t RBAR;                   \/*!< Offset: 0x00C (R\/W)  SAU Region Base Address Register *\/$/;"	m	struct:__anon129
RBAR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RBAR;                   \/*!< Offset: 0x00C (R\/W)  MPU Region Base Address Register *\/$/;"	m	struct:__anon25
RBAR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RBAR;                   \/*!< Offset: 0x00C (R\/W)  SAU Region Base Address Register *\/$/;"	m	struct:__anon28
RBAR	CMSIS/core_cm4.h	/^  __IOM uint32_t RBAR;                   \/*!< Offset: 0x00C (R\/W)  MPU Region Base Address Register *\/$/;"	m	struct:__anon47
RBAR	CMSIS/mpu_armv7.h	/^  uint32_t RBAR; \/\/!< The region base address register value (RBAR)$/;"	m	struct:__anon112
RBAR	CMSIS/mpu_armv8.h	/^  uint32_t RBAR;                   \/*!< Region Base Address Register value *\/$/;"	m	struct:__anon8
RBAR_A1	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RBAR_A1;                \/*!< Offset: 0x014 (R\/W)  MPU Region Base Address Register Alias 1 *\/$/;"	m	struct:__anon25
RBAR_A1	CMSIS/core_cm4.h	/^  __IOM uint32_t RBAR_A1;                \/*!< Offset: 0x014 (R\/W)  MPU Alias 1 Region Base Address Register *\/$/;"	m	struct:__anon47
RBAR_A2	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RBAR_A2;                \/*!< Offset: 0x01C (R\/W)  MPU Region Base Address Register Alias 2 *\/$/;"	m	struct:__anon25
RBAR_A2	CMSIS/core_cm4.h	/^  __IOM uint32_t RBAR_A2;                \/*!< Offset: 0x01C (R\/W)  MPU Alias 2 Region Base Address Register *\/$/;"	m	struct:__anon47
RBAR_A3	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RBAR_A3;                \/*!< Offset: 0x024 (R\/W)  MPU Region Base Address Register Alias 3 *\/$/;"	m	struct:__anon25
RBAR_A3	CMSIS/core_cm4.h	/^  __IOM uint32_t RBAR_A3;                \/*!< Offset: 0x024 (R\/W)  MPU Alias 3 Region Base Address Register *\/$/;"	m	struct:__anon47
RBR	device/LPC54018.h	/^    __I  uint32_t RBR;                               \/**< Receiver Buffer Register, offset: 0x0 *\/$/;"	m	union:__anon179::__anon180
RBorder	emwin/emWin_header/LISTVIEW_Private.h	/^  unsigned                     RBorder;$/;"	m	struct:LISTVIEW_Obj
RBorder	emwin/emWin_header/LISTWHEEL_Private.h	/^  unsigned                RBorder;$/;"	m	struct:__anon353
RCV_WND_SCALE	lwip/src/include/lwip/tcp.h	137;"	d
RCV_WND_SCALE	lwip/src/include/lwip/tcp.h	142;"	d
READ_MEM08P	emwin/emWin_header/GUIDRV_Lin_Private.h	117;"	d
READ_MEM16	emwin/emWin_header/GUIDRV_Lin_Private.h	120;"	d
READ_MEM32	emwin/emWin_header/GUIDRV_Lin_Private.h	123;"	d
READ_MEM32P	emwin/emWin_header/GUIDRV_Lin_Private.h	126;"	d
REBOOT_TRIES	lwip/src/core/ipv4/dhcp.c	118;"	d	file:
RECV_BUFSIZE_DEFAULT	lwip/src/include/lwip/opt.h	2026;"	d
REGMODE	device/LPC54018.h	/^  __IO uint32_t REGMODE;                           \/**< SCT match\/capture mode register, offset: 0x4C *\/$/;"	m	struct:__anon172
REG_AFCBW	radio/sx1276-Fsk.h	32;"	d
REG_AFCFEI	radio/sx1276-Fsk.h	39;"	d
REG_AFCLSB	radio/sx1276-Fsk.h	41;"	d
REG_AFCMSB	radio/sx1276-Fsk.h	40;"	d
REG_AGCREF	radio/sx1276-Fsk.h	93;"	d
REG_AGCTHRESH1	radio/sx1276-Fsk.h	94;"	d
REG_AGCTHRESH2	radio/sx1276-Fsk.h	95;"	d
REG_AGCTHRESH3	radio/sx1276-Fsk.h	96;"	d
REG_BITBLT_BCR0	emwin/emWin_header/GUIDRV_S1D13781_Private.h	74;"	d
REG_BITBLT_BCR1	emwin/emWin_header/GUIDRV_S1D13781_Private.h	75;"	d
REG_BITBLT_CR	emwin/emWin_header/GUIDRV_S1D13781_Private.h	66;"	d
REG_BITBLT_CR0	emwin/emWin_header/GUIDRV_S1D13781_Private.h	63;"	d
REG_BITBLT_CR0_START	emwin/emWin_header/GUIDRV_S1D13781_Private.h	81;"	d
REG_BITBLT_CR1	emwin/emWin_header/GUIDRV_S1D13781_Private.h	64;"	d
REG_BITBLT_CR_FILL	emwin/emWin_header/GUIDRV_S1D13781_Private.h	80;"	d
REG_BITBLT_CR_MOVEP	emwin/emWin_header/GUIDRV_S1D13781_Private.h	79;"	d
REG_BITBLT_DSAR0	emwin/emWin_header/GUIDRV_S1D13781_Private.h	69;"	d
REG_BITBLT_DSAR1	emwin/emWin_header/GUIDRV_S1D13781_Private.h	70;"	d
REG_BITBLT_FCR0	emwin/emWin_header/GUIDRV_S1D13781_Private.h	76;"	d
REG_BITBLT_FCR1	emwin/emWin_header/GUIDRV_S1D13781_Private.h	77;"	d
REG_BITBLT_HR	emwin/emWin_header/GUIDRV_S1D13781_Private.h	73;"	d
REG_BITBLT_ROR	emwin/emWin_header/GUIDRV_S1D13781_Private.h	71;"	d
REG_BITBLT_SR	emwin/emWin_header/GUIDRV_S1D13781_Private.h	65;"	d
REG_BITBLT_SSAR0	emwin/emWin_header/GUIDRV_S1D13781_Private.h	67;"	d
REG_BITBLT_SSAR1	emwin/emWin_header/GUIDRV_S1D13781_Private.h	68;"	d
REG_BITBLT_WR	emwin/emWin_header/GUIDRV_S1D13781_Private.h	72;"	d
REG_BITRATEFRAC	radio/sx1276-Fsk.h	92;"	d
REG_BITRATELSB	radio/sx1276-Fsk.h	14;"	d
REG_BITRATEMSB	radio/sx1276-Fsk.h	13;"	d
REG_BROADCASTADRS	radio/sx1276-Fsk.h	67;"	d
REG_CR_PSR	emwin/emWin_header/GUIDRV_S1D13781_Private.h	105;"	d
REG_DIOMAPPING1	radio/sx1276-Fsk.h	83;"	d
REG_DIOMAPPING2	radio/sx1276-Fsk.h	84;"	d
REG_FDEVLSB	radio/sx1276-Fsk.h	16;"	d
REG_FDEVMSB	radio/sx1276-Fsk.h	15;"	d
REG_FEILSB	radio/sx1276-Fsk.h	43;"	d
REG_FEIMSB	radio/sx1276-Fsk.h	42;"	d
REG_FIFO	radio/sx1276-Fsk.h	10;"	d
REG_FIFOTHRESH	radio/sx1276-Fsk.h	68;"	d
REG_FORMERTEMP	radio/sx1276-Fsk.h	91;"	d
REG_FRFLSB	radio/sx1276-Fsk.h	19;"	d
REG_FRFMID	radio/sx1276-Fsk.h	18;"	d
REG_FRFMSB	radio/sx1276-Fsk.h	17;"	d
REG_IMAGECAL	radio/sx1276-Fsk.h	76;"	d
REG_IRQFLAGS1	radio/sx1276-Fsk.h	80;"	d
REG_IRQFLAGS2	radio/sx1276-Fsk.h	81;"	d
REG_LNA	radio/sx1276-Fsk.h	25;"	d
REG_LOWBAT	radio/sx1276-Fsk.h	78;"	d
REG_LR_AGCREF	radio/sx1276-LoRa.h	61;"	d
REG_LR_AGCTHRESH1	radio/sx1276-LoRa.h	62;"	d
REG_LR_AGCTHRESH2	radio/sx1276-LoRa.h	63;"	d
REG_LR_AGCTHRESH3	radio/sx1276-LoRa.h	64;"	d
REG_LR_BANDSETTING	radio/sx1276-LoRa.h	12;"	d
REG_LR_BITRATEFRAC	radio/sx1276-LoRa.h	60;"	d
REG_LR_DIOMAPPING1	radio/sx1276-LoRa.h	51;"	d
REG_LR_DIOMAPPING2	radio/sx1276-LoRa.h	52;"	d
REG_LR_FIFO	radio/sx1276-LoRa.h	9;"	d
REG_LR_FIFOADDRPTR	radio/sx1276-LoRa.h	23;"	d
REG_LR_FIFORXBASEADDR	radio/sx1276-LoRa.h	25;"	d
REG_LR_FIFORXBYTEADDR	radio/sx1276-LoRa.h	47;"	d
REG_LR_FIFORXCURRENTADDR	radio/sx1276-LoRa.h	26;"	d
REG_LR_FIFOTXBASEADDR	radio/sx1276-LoRa.h	24;"	d
REG_LR_FORMERTEMP	radio/sx1276-LoRa.h	59;"	d
REG_LR_FRFLSB	radio/sx1276-LoRa.h	15;"	d
REG_LR_FRFMID	radio/sx1276-LoRa.h	14;"	d
REG_LR_FRFMSB	radio/sx1276-LoRa.h	13;"	d
REG_LR_HOPCHANNEL	radio/sx1276-LoRa.h	38;"	d
REG_LR_HOPPERIOD	radio/sx1276-LoRa.h	46;"	d
REG_LR_IRQFLAGS	radio/sx1276-LoRa.h	28;"	d
REG_LR_IRQFLAGSMASK	radio/sx1276-LoRa.h	27;"	d
REG_LR_LNA	radio/sx1276-LoRa.h	21;"	d
REG_LR_MODEMCONFIG1	radio/sx1276-LoRa.h	39;"	d
REG_LR_MODEMCONFIG2	radio/sx1276-LoRa.h	40;"	d
REG_LR_MODEMCONFIG3	radio/sx1276-LoRa.h	48;"	d
REG_LR_MODEMSTAT	radio/sx1276-LoRa.h	34;"	d
REG_LR_NBRXBYTES	radio/sx1276-LoRa.h	29;"	d
REG_LR_OCP	radio/sx1276-LoRa.h	19;"	d
REG_LR_OPMODE	radio/sx1276-LoRa.h	11;"	d
REG_LR_PACONFIG	radio/sx1276-LoRa.h	17;"	d
REG_LR_PADAC	radio/sx1276-LoRa.h	58;"	d
REG_LR_PARAMP	radio/sx1276-LoRa.h	18;"	d
REG_LR_PAYLOADLENGTH	radio/sx1276-LoRa.h	44;"	d
REG_LR_PAYLOADMAXLENGTH	radio/sx1276-LoRa.h	45;"	d
REG_LR_PKTRSSIVALUE	radio/sx1276-LoRa.h	36;"	d
REG_LR_PKTSNRVALUE	radio/sx1276-LoRa.h	35;"	d
REG_LR_PLLHOP	radio/sx1276-LoRa.h	56;"	d
REG_LR_PREAMBLELSB	radio/sx1276-LoRa.h	43;"	d
REG_LR_PREAMBLEMSB	radio/sx1276-LoRa.h	42;"	d
REG_LR_RSSIVALUE	radio/sx1276-LoRa.h	37;"	d
REG_LR_RXHEADERCNTVALUELSB	radio/sx1276-LoRa.h	31;"	d
REG_LR_RXHEADERCNTVALUEMSB	radio/sx1276-LoRa.h	30;"	d
REG_LR_RXPACKETCNTVALUELSB	radio/sx1276-LoRa.h	33;"	d
REG_LR_RXPACKETCNTVALUEMSB	radio/sx1276-LoRa.h	32;"	d
REG_LR_SYMBTIMEOUTLSB	radio/sx1276-LoRa.h	41;"	d
REG_LR_TCXO	radio/sx1276-LoRa.h	57;"	d
REG_LR_VERSION	radio/sx1276-LoRa.h	54;"	d
REG_MAIN_SADDR0	emwin/emWin_header/GUIDRV_S1D13781_Private.h	87;"	d
REG_MAIN_SADDR1	emwin/emWin_header/GUIDRV_S1D13781_Private.h	88;"	d
REG_MAIN_SETUP	emwin/emWin_header/GUIDRV_S1D13781_Private.h	86;"	d
REG_MAIN_XSIZE	emwin/emWin_header/GUIDRV_S1D13781_Private.h	83;"	d
REG_MAIN_YSIZE	emwin/emWin_header/GUIDRV_S1D13781_Private.h	84;"	d
REG_NODEADRS	radio/sx1276-Fsk.h	66;"	d
REG_OCP	radio/sx1276-Fsk.h	23;"	d
REG_OOKAVG	radio/sx1276-Fsk.h	35;"	d
REG_OOKFIX	radio/sx1276-Fsk.h	34;"	d
REG_OOKPEAK	radio/sx1276-Fsk.h	33;"	d
REG_OPMODE	radio/sx1276-Fsk.h	12;"	d
REG_OSC	radio/sx1276-Fsk.h	50;"	d
REG_PACKETCONFIG1	radio/sx1276-Fsk.h	63;"	d
REG_PACKETCONFIG2	radio/sx1276-Fsk.h	64;"	d
REG_PACONFIG	radio/sx1276-Fsk.h	21;"	d
REG_PADAC	radio/sx1276-Fsk.h	90;"	d
REG_PARAMP	radio/sx1276-Fsk.h	22;"	d
REG_PAYLOADLENGTH	radio/sx1276-Fsk.h	65;"	d
REG_PCR_DSR	emwin/emWin_header/GUIDRV_S1D13781_Private.h	104;"	d
REG_PIP_ALPHA	emwin/emWin_header/GUIDRV_S1D13781_Private.h	99;"	d
REG_PIP_ENABLE	emwin/emWin_header/GUIDRV_S1D13781_Private.h	97;"	d
REG_PIP_SADDR0	emwin/emWin_header/GUIDRV_S1D13781_Private.h	91;"	d
REG_PIP_SADDR1	emwin/emWin_header/GUIDRV_S1D13781_Private.h	92;"	d
REG_PIP_SETUP	emwin/emWin_header/GUIDRV_S1D13781_Private.h	90;"	d
REG_PIP_TCOL0	emwin/emWin_header/GUIDRV_S1D13781_Private.h	101;"	d
REG_PIP_TCOL1	emwin/emWin_header/GUIDRV_S1D13781_Private.h	102;"	d
REG_PIP_TRANS	emwin/emWin_header/GUIDRV_S1D13781_Private.h	100;"	d
REG_PIP_XPOS	emwin/emWin_header/GUIDRV_S1D13781_Private.h	95;"	d
REG_PIP_XSIZE	emwin/emWin_header/GUIDRV_S1D13781_Private.h	93;"	d
REG_PIP_YPOS	emwin/emWin_header/GUIDRV_S1D13781_Private.h	96;"	d
REG_PIP_YSIZE	emwin/emWin_header/GUIDRV_S1D13781_Private.h	94;"	d
REG_PLLHOP	radio/sx1276-Fsk.h	88;"	d
REG_PREAMBLEDETECT	radio/sx1276-Fsk.h	44;"	d
REG_PREAMBLELSB	radio/sx1276-Fsk.h	53;"	d
REG_PREAMBLEMSB	radio/sx1276-Fsk.h	52;"	d
REG_RES17	radio/sx1276-Fsk.h	36;"	d
REG_RES18	radio/sx1276-Fsk.h	37;"	d
REG_RES19	radio/sx1276-Fsk.h	38;"	d
REG_RSSICOLLISION	radio/sx1276-Fsk.h	28;"	d
REG_RSSICONFIG	radio/sx1276-Fsk.h	27;"	d
REG_RSSITHRESH	radio/sx1276-Fsk.h	29;"	d
REG_RSSIVALUE	radio/sx1276-Fsk.h	30;"	d
REG_RXBW	radio/sx1276-Fsk.h	31;"	d
REG_RXCONFIG	radio/sx1276-Fsk.h	26;"	d
REG_RXDELAY	radio/sx1276-Fsk.h	48;"	d
REG_RXTIMEOUT1	radio/sx1276-Fsk.h	45;"	d
REG_RXTIMEOUT2	radio/sx1276-Fsk.h	46;"	d
REG_RXTIMEOUT3	radio/sx1276-Fsk.h	47;"	d
REG_SEQCONFIG1	radio/sx1276-Fsk.h	70;"	d
REG_SEQCONFIG2	radio/sx1276-Fsk.h	71;"	d
REG_SYNCCONFIG	radio/sx1276-Fsk.h	54;"	d
REG_SYNCVALUE1	radio/sx1276-Fsk.h	55;"	d
REG_SYNCVALUE2	radio/sx1276-Fsk.h	56;"	d
REG_SYNCVALUE3	radio/sx1276-Fsk.h	57;"	d
REG_SYNCVALUE4	radio/sx1276-Fsk.h	58;"	d
REG_SYNCVALUE5	radio/sx1276-Fsk.h	59;"	d
REG_SYNCVALUE6	radio/sx1276-Fsk.h	60;"	d
REG_SYNCVALUE7	radio/sx1276-Fsk.h	61;"	d
REG_SYNCVALUE8	radio/sx1276-Fsk.h	62;"	d
REG_TCXO	radio/sx1276-Fsk.h	89;"	d
REG_TEMP	radio/sx1276-Fsk.h	77;"	d
REG_TIMER1COEF	radio/sx1276-Fsk.h	73;"	d
REG_TIMER2COEF	radio/sx1276-Fsk.h	74;"	d
REG_TIMERRESOL	radio/sx1276-Fsk.h	72;"	d
REG_VERSION	radio/sx1276-Fsk.h	86;"	d
REJCIADDR	lwip/src/netif/ppp/ipcp.c	1403;"	d	file:
REJCIADDRS	lwip/src/netif/ppp/ipcp.c	1358;"	d	file:
REJCICBCP	lwip/src/netif/ppp/lcp.c	1727;"	d	file:
REJCICHAP	lwip/src/netif/ppp/lcp.c	1628;"	d	file:
REJCICHAP	lwip/src/netif/ppp/lcp.c	1646;"	d	file:
REJCICHAP	lwip/src/netif/ppp/lcp.c	1664;"	d	file:
REJCICHAP	lwip/src/netif/ppp/lcp.c	1682;"	d	file:
REJCIDNS	lwip/src/netif/ppp/ipcp.c	1420;"	d	file:
REJCIENDP	lwip/src/netif/ppp/lcp.c	1740;"	d	file:
REJCIIFACEID	lwip/src/netif/ppp/ipv6cp.c	822;"	d	file:
REJCILONG	lwip/src/netif/ppp/lcp.c	1698;"	d	file:
REJCILQR	lwip/src/netif/ppp/lcp.c	1712;"	d	file:
REJCISHORT	lwip/src/netif/ppp/lcp.c	1613;"	d	file:
REJCIVJ	lwip/src/netif/ppp/ipcp.c	1380;"	d	file:
REJCIVJ	lwip/src/netif/ppp/ipv6cp.c	837;"	d	file:
REJCIVOID	lwip/src/netif/ppp/lcp.c	1604;"	d	file:
RES	device/LPC54018.h	/^  __IO uint32_t RES;                               \/**< SCT conflict resolution register, offset: 0x58 *\/$/;"	m	struct:__anon172
RES	usb/device/class/usb_device_video.h	/^            uint8_t RES : 1U; \/*!< Reserved. Set to 0. *\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
RESERVED0	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED0;$/;"	m	struct:__anon122
RESERVED0	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED0[16U];$/;"	m	struct:__anon121
RESERVED0	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED0[2U];$/;"	m	struct:__anon125
RESERVED0	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED0[6U];$/;"	m	struct:__anon124
RESERVED0	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED0[7U];$/;"	m	struct:__anon126
RESERVED0	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED0[16U];$/;"	m	struct:__anon17
RESERVED0	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED0[1U];$/;"	m	struct:__anon19
RESERVED0	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED0[1U];$/;"	m	struct:__anon29
RESERVED0	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED0[1];$/;"	m	struct:__anon25
RESERVED0	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED0[2U];$/;"	m	struct:__anon24
RESERVED0	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED0[3];$/;"	m	struct:__anon28
RESERVED0	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED0[864U];$/;"	m	struct:__anon21
RESERVED0	CMSIS/core_cm4.h	/^        uint32_t RESERVED0[1U];$/;"	m	struct:__anon41
RESERVED0	CMSIS/core_cm4.h	/^        uint32_t RESERVED0[1U];$/;"	m	struct:__anon45
RESERVED0	CMSIS/core_cm4.h	/^        uint32_t RESERVED0[1U];$/;"	m	struct:__anon48
RESERVED0	CMSIS/core_cm4.h	/^        uint32_t RESERVED0[24U];$/;"	m	struct:__anon39
RESERVED0	CMSIS/core_cm4.h	/^        uint32_t RESERVED0[2U];$/;"	m	struct:__anon46
RESERVED0	CMSIS/core_cm4.h	/^        uint32_t RESERVED0[5U];$/;"	m	struct:__anon40
RESERVED0	CMSIS/core_cm4.h	/^        uint32_t RESERVED0[864U];$/;"	m	struct:__anon43
RESERVED1	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED1;$/;"	m	struct:__anon122
RESERVED1	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED1[1U];$/;"	m	struct:__anon124
RESERVED1	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED1[55U];$/;"	m	struct:__anon125
RESERVED1	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED1[15U];$/;"	m	struct:__anon21
RESERVED1	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED1[1U];$/;"	m	struct:__anon23
RESERVED1	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED1[55U];$/;"	m	struct:__anon24
RESERVED1	CMSIS/core_cm4.h	/^        uint32_t RESERVED1[15U];$/;"	m	struct:__anon43
RESERVED1	CMSIS/core_cm4.h	/^        uint32_t RESERVED1[1U];$/;"	m	struct:__anon45
RESERVED1	CMSIS/core_cm4.h	/^        uint32_t RESERVED1[55U];$/;"	m	struct:__anon46
RESERVED10	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED10[1U];$/;"	m	struct:__anon124
RESERVED10	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED10[1U];$/;"	m	struct:__anon23
RESERVED11	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED11[1U];$/;"	m	struct:__anon124
RESERVED11	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED11[1U];$/;"	m	struct:__anon23
RESERVED12	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED12[1U];$/;"	m	struct:__anon124
RESERVED12	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED12[1U];$/;"	m	struct:__anon23
RESERVED13	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED13[1U];$/;"	m	struct:__anon124
RESERVED13	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED13[1U];$/;"	m	struct:__anon23
RESERVED14	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED14[1U];$/;"	m	struct:__anon124
RESERVED14	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED14[1U];$/;"	m	struct:__anon23
RESERVED15	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED15[1U];$/;"	m	struct:__anon124
RESERVED15	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED15[1U];$/;"	m	struct:__anon23
RESERVED16	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED16[1U];$/;"	m	struct:__anon124
RESERVED16	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED16[1U];$/;"	m	struct:__anon23
RESERVED17	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED17[1U];$/;"	m	struct:__anon124
RESERVED17	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED17[1U];$/;"	m	struct:__anon23
RESERVED18	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED18[1U];$/;"	m	struct:__anon124
RESERVED18	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED18[1U];$/;"	m	struct:__anon23
RESERVED19	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED19[1U];$/;"	m	struct:__anon124
RESERVED19	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED19[1U];$/;"	m	struct:__anon23
RESERVED2	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED2[131U];$/;"	m	struct:__anon125
RESERVED2	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED2[16U];$/;"	m	struct:__anon121
RESERVED2	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED2[1U];$/;"	m	struct:__anon124
RESERVED2	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED2[131U];$/;"	m	struct:__anon24
RESERVED2	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED2[15U];$/;"	m	struct:__anon21
RESERVED2	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED2[16U];$/;"	m	struct:__anon17
RESERVED2	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED2[1U];$/;"	m	struct:__anon23
RESERVED2	CMSIS/core_cm4.h	/^        uint32_t RESERVED2[131U];$/;"	m	struct:__anon46
RESERVED2	CMSIS/core_cm4.h	/^        uint32_t RESERVED2[15U];$/;"	m	struct:__anon43
RESERVED2	CMSIS/core_cm4.h	/^        uint32_t RESERVED2[1U];$/;"	m	struct:__anon45
RESERVED2	CMSIS/core_cm4.h	/^        uint32_t RESERVED2[24U];$/;"	m	struct:__anon39
RESERVED20	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED20[1U];$/;"	m	struct:__anon124
RESERVED20	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED20[1U];$/;"	m	struct:__anon23
RESERVED21	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED21[1U];$/;"	m	struct:__anon124
RESERVED21	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED21[1U];$/;"	m	struct:__anon23
RESERVED22	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED22[1U];$/;"	m	struct:__anon124
RESERVED22	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED22[1U];$/;"	m	struct:__anon23
RESERVED23	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED23[1U];$/;"	m	struct:__anon124
RESERVED23	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED23[1U];$/;"	m	struct:__anon23
RESERVED24	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED24[1U];$/;"	m	struct:__anon124
RESERVED24	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED24[1U];$/;"	m	struct:__anon23
RESERVED25	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED25[1U];$/;"	m	struct:__anon124
RESERVED25	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED25[1U];$/;"	m	struct:__anon23
RESERVED26	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED26[1U];$/;"	m	struct:__anon124
RESERVED26	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED26[1U];$/;"	m	struct:__anon23
RESERVED27	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED27[1U];$/;"	m	struct:__anon124
RESERVED27	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED27[1U];$/;"	m	struct:__anon23
RESERVED28	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED28[1U];$/;"	m	struct:__anon124
RESERVED28	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED28[1U];$/;"	m	struct:__anon23
RESERVED29	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED29[1U];$/;"	m	struct:__anon124
RESERVED29	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED29[1U];$/;"	m	struct:__anon23
RESERVED3	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED3[16U];$/;"	m	struct:__anon121
RESERVED3	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED3[1U];$/;"	m	struct:__anon124
RESERVED3	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED3[759U];$/;"	m	struct:__anon125
RESERVED3	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED3[16U];$/;"	m	struct:__anon17
RESERVED3	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED3[1U];$/;"	m	struct:__anon23
RESERVED3	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED3[29U];$/;"	m	struct:__anon21
RESERVED3	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED3[759U];$/;"	m	struct:__anon24
RESERVED3	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED3[92U];$/;"	m	struct:__anon18
RESERVED3	CMSIS/core_cm4.h	/^        uint32_t RESERVED3[24U];$/;"	m	struct:__anon39
RESERVED3	CMSIS/core_cm4.h	/^        uint32_t RESERVED3[29U];$/;"	m	struct:__anon43
RESERVED3	CMSIS/core_cm4.h	/^        uint32_t RESERVED3[759U];$/;"	m	struct:__anon46
RESERVED30	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED30[1U];$/;"	m	struct:__anon124
RESERVED30	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED30[1U];$/;"	m	struct:__anon23
RESERVED31	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED31[1U];$/;"	m	struct:__anon124
RESERVED31	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED31[1U];$/;"	m	struct:__anon23
RESERVED32	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED32[934U];$/;"	m	struct:__anon23
RESERVED33	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED33[1U];$/;"	m	struct:__anon23
RESERVED4	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED4[16U];$/;"	m	struct:__anon121
RESERVED4	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED4[1U];$/;"	m	struct:__anon124
RESERVED4	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED4[1U];$/;"	m	struct:__anon125
RESERVED4	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED4[1U];$/;"	m	struct:__anon130
RESERVED4	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED4[15U];$/;"	m	struct:__anon18
RESERVED4	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED4[16U];$/;"	m	struct:__anon17
RESERVED4	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED4[1U];$/;"	m	struct:__anon23
RESERVED4	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED4[1U];$/;"	m	struct:__anon24
RESERVED4	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED4[1U];$/;"	m	struct:__anon30
RESERVED4	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED4[43U];$/;"	m	struct:__anon21
RESERVED4	CMSIS/core_cm4.h	/^        uint32_t RESERVED4[1U];$/;"	m	struct:__anon46
RESERVED4	CMSIS/core_cm4.h	/^        uint32_t RESERVED4[43U];$/;"	m	struct:__anon43
RESERVED4	CMSIS/core_cm4.h	/^        uint32_t RESERVED4[56U];$/;"	m	struct:__anon39
RESERVED5	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED5[16U];$/;"	m	struct:__anon121
RESERVED5	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED5[1U];$/;"	m	struct:__anon124
RESERVED5	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED5[39U];$/;"	m	struct:__anon125
RESERVED5	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED5[16U];$/;"	m	struct:__anon17
RESERVED5	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED5[1U];$/;"	m	struct:__anon18
RESERVED5	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED5[1U];$/;"	m	struct:__anon21
RESERVED5	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED5[1U];$/;"	m	struct:__anon23
RESERVED5	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED5[39U];$/;"	m	struct:__anon24
RESERVED5	CMSIS/core_cm4.h	/^        uint32_t RESERVED5[39U];$/;"	m	struct:__anon46
RESERVED5	CMSIS/core_cm4.h	/^        uint32_t RESERVED5[644U];$/;"	m	struct:__anon39
RESERVED5	CMSIS/core_cm4.h	/^        uint32_t RESERVED5[6U];$/;"	m	struct:__anon43
RESERVED6	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED6[1U];$/;"	m	struct:__anon124
RESERVED6	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED6[1U];$/;"	m	struct:__anon18
RESERVED6	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED6[1U];$/;"	m	struct:__anon23
RESERVED6	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED6[4U];$/;"	m	struct:__anon21
RESERVED6	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED6[580U];$/;"	m	struct:__anon17
RESERVED7	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED7[1U];$/;"	m	struct:__anon124
RESERVED7	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED7[8U];$/;"	m	struct:__anon125
RESERVED7	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED7[1U];$/;"	m	struct:__anon23
RESERVED7	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED7[6U];$/;"	m	struct:__anon18
RESERVED7	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED7[8U];$/;"	m	struct:__anon24
RESERVED7	CMSIS/core_cm4.h	/^        uint32_t RESERVED7[8U];$/;"	m	struct:__anon46
RESERVED8	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED8[1U];$/;"	m	struct:__anon124
RESERVED8	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED8[1U];$/;"	m	struct:__anon18
RESERVED8	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED8[1U];$/;"	m	struct:__anon23
RESERVED9	CMSIS/core_armv8mbl.h	/^        uint32_t RESERVED9[1U];$/;"	m	struct:__anon124
RESERVED9	CMSIS/core_armv8mml.h	/^        uint32_t RESERVED9[1U];$/;"	m	struct:__anon23
RESERVED_0	device/LPC54018.h	/^         uint8_t RESERVED_0[108];$/;"	m	struct:__anon149::__anon150
RESERVED_0	device/LPC54018.h	/^         uint8_t RESERVED_0[20];$/;"	m	struct:__anon161::__anon162
RESERVED_0	device/LPC54018.h	/^         uint8_t RESERVED_0[24];$/;"	m	struct:__anon151::__anon152
RESERVED_0	device/LPC54018.h	/^         uint8_t RESERVED_0[4];$/;"	m	struct:__anon146::__anon147
RESERVED_0	device/LPC54018.h	/^         uint8_t RESERVED_0[4];$/;"	m	struct:__anon146::__anon148
RESERVED_0	device/LPC54018.h	/^         uint8_t RESERVED_0[4];$/;"	m	struct:__anon151::__anon153
RESERVED_0	device/LPC54018.h	/^         uint8_t RESERVED_0[4];$/;"	m	struct:__anon154::__anon155
RESERVED_0	device/LPC54018.h	/^         uint8_t RESERVED_0[8];$/;"	m	struct:__anon154::__anon156
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[1024];$/;"	m	struct:__anon183
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[12];$/;"	m	struct:__anon142
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[12];$/;"	m	struct:__anon186
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[164];$/;"	m	struct:__anon163
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[16];$/;"	m	struct:__anon168
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[16];$/;"	m	struct:__anon185
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[176];$/;"	m	struct:__anon166
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[2048];$/;"	m	struct:__anon160
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[20];$/;"	m	struct:__anon146
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[20];$/;"	m	struct:__anon151
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[28];$/;"	m	struct:__anon158
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[3072];$/;"	m	struct:__anon161
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[3328];$/;"	m	struct:__anon149
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[3904];$/;"	m	struct:__anon159
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[4088];$/;"	m	struct:__anon157
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[40];$/;"	m	struct:__anon172
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[460];$/;"	m	struct:__anon165
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[48];$/;"	m	struct:__anon145
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[48];$/;"	m	struct:__anon171
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[4];$/;"	m	struct:__anon141
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[4];$/;"	m	struct:__anon170
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[4];$/;"	m	struct:__anon177
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[4];$/;"	m	struct:__anon179
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[4];$/;"	m	struct:__anon188
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[4];$/;"	m	struct:__anon190
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[4];$/;"	m	struct:__anon192
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[64];$/;"	m	struct:__anon154
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[8];$/;"	m	struct:__anon140
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[8];$/;"	m	struct:__anon178
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[8];$/;"	m	struct:__anon187
RESERVED_0	device/LPC54018.h	/^       uint8_t RESERVED_0[8];$/;"	m	struct:__anon189
RESERVED_0	device/LPC54018.h	/^      uint32_t RESERVED_0[13];$/;"	m	struct:__anon194
RESERVED_0	device/LPC54018.h	/^  uint32_t RESERVED_0[5];$/;"	m	struct:__anon193
RESERVED_1	device/LPC54018.h	/^         uint8_t RESERVED_1[108];$/;"	m	struct:__anon149::__anon150
RESERVED_1	device/LPC54018.h	/^         uint8_t RESERVED_1[4];$/;"	m	struct:__anon146::__anon147
RESERVED_1	device/LPC54018.h	/^         uint8_t RESERVED_1[4];$/;"	m	struct:__anon154::__anon155
RESERVED_1	device/LPC54018.h	/^         uint8_t RESERVED_1[4];$/;"	m	struct:__anon154::__anon156
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[1024];$/;"	m	struct:__anon165
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[140];$/;"	m	struct:__anon172
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[16];$/;"	m	struct:__anon161
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[16];$/;"	m	struct:__anon163
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[16];$/;"	m	struct:__anon183
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[24];$/;"	m	struct:__anon158
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[28];$/;"	m	struct:__anon154
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[3328];$/;"	m	struct:__anon159
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[3536];$/;"	m	struct:__anon186
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[44];$/;"	m	struct:__anon185
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[4];$/;"	m	struct:__anon141
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[4];$/;"	m	struct:__anon142
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[4];$/;"	m	struct:__anon151
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[4];$/;"	m	struct:__anon160
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[4];$/;"	m	struct:__anon168
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[4];$/;"	m	struct:__anon177
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[4];$/;"	m	struct:__anon179
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[8];$/;"	m	struct:__anon149
RESERVED_1	device/LPC54018.h	/^       uint8_t RESERVED_1[900];$/;"	m	struct:__anon146
RESERVED_10	device/LPC54018.h	/^         uint8_t RESERVED_10[4];$/;"	m	struct:__anon146::__anon147
RESERVED_10	device/LPC54018.h	/^       uint8_t RESERVED_10[104];$/;"	m	struct:__anon159
RESERVED_10	device/LPC54018.h	/^       uint8_t RESERVED_10[20];$/;"	m	struct:__anon185
RESERVED_10	device/LPC54018.h	/^       uint8_t RESERVED_10[216];$/;"	m	struct:__anon154
RESERVED_11	device/LPC54018.h	/^       uint8_t RESERVED_11[20];$/;"	m	struct:__anon185
RESERVED_11	device/LPC54018.h	/^       uint8_t RESERVED_11[248];$/;"	m	struct:__anon154
RESERVED_12	device/LPC54018.h	/^       uint8_t RESERVED_12[2040];$/;"	m	struct:__anon154
RESERVED_12	device/LPC54018.h	/^       uint8_t RESERVED_12[48];$/;"	m	struct:__anon185
RESERVED_13	device/LPC54018.h	/^       uint8_t RESERVED_13[12];$/;"	m	struct:__anon154
RESERVED_13	device/LPC54018.h	/^       uint8_t RESERVED_13[4];$/;"	m	struct:__anon185
RESERVED_14	device/LPC54018.h	/^       uint8_t RESERVED_14[32];$/;"	m	struct:__anon154
RESERVED_14	device/LPC54018.h	/^       uint8_t RESERVED_14[4];$/;"	m	struct:__anon185
RESERVED_15	device/LPC54018.h	/^       uint8_t RESERVED_15[160];$/;"	m	struct:__anon154
RESERVED_15	device/LPC54018.h	/^       uint8_t RESERVED_15[4];$/;"	m	struct:__anon185
RESERVED_16	device/LPC54018.h	/^       uint8_t RESERVED_16[28];$/;"	m	struct:__anon154
RESERVED_16	device/LPC54018.h	/^       uint8_t RESERVED_16[4];$/;"	m	struct:__anon185
RESERVED_17	device/LPC54018.h	/^       uint8_t RESERVED_17[12];$/;"	m	struct:__anon154
RESERVED_17	device/LPC54018.h	/^       uint8_t RESERVED_17[4];$/;"	m	struct:__anon185
RESERVED_18	device/LPC54018.h	/^       uint8_t RESERVED_18[204];$/;"	m	struct:__anon154
RESERVED_18	device/LPC54018.h	/^       uint8_t RESERVED_18[4];$/;"	m	struct:__anon185
RESERVED_19	device/LPC54018.h	/^       uint8_t RESERVED_19[104];$/;"	m	struct:__anon185
RESERVED_19	device/LPC54018.h	/^       uint8_t RESERVED_19[640];$/;"	m	struct:__anon154
RESERVED_2	device/LPC54018.h	/^         uint8_t RESERVED_2[4];$/;"	m	struct:__anon146::__anon147
RESERVED_2	device/LPC54018.h	/^         uint8_t RESERVED_2[4];$/;"	m	struct:__anon154::__anon156
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[104];$/;"	m	struct:__anon159
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[108];$/;"	m	struct:__anon149
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[12];$/;"	m	struct:__anon179
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[16];$/;"	m	struct:__anon142
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[16];$/;"	m	struct:__anon177
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[192];$/;"	m	struct:__anon172
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[20];$/;"	m	struct:__anon160
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[24];$/;"	m	struct:__anon154
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[2516];$/;"	m	struct:__anon183
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[36];$/;"	m	struct:__anon151
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[384];$/;"	m	struct:__anon161
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[4];$/;"	m	struct:__anon185
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[4];$/;"	m	struct:__anon186
RESERVED_2	device/LPC54018.h	/^       uint8_t RESERVED_2[8];$/;"	m	struct:__anon165
RESERVED_20	device/LPC54018.h	/^       uint8_t RESERVED_20[240];$/;"	m	struct:__anon154
RESERVED_20	device/LPC54018.h	/^       uint8_t RESERVED_20[4];$/;"	m	struct:__anon185
RESERVED_21	device/LPC54018.h	/^       uint8_t RESERVED_21[4];$/;"	m	struct:__anon185
RESERVED_22	device/LPC54018.h	/^       uint8_t RESERVED_22[76];$/;"	m	struct:__anon185
RESERVED_23	device/LPC54018.h	/^       uint8_t RESERVED_23[4];$/;"	m	struct:__anon185
RESERVED_24	device/LPC54018.h	/^       uint8_t RESERVED_24[4];$/;"	m	struct:__anon185
RESERVED_25	device/LPC54018.h	/^       uint8_t RESERVED_25[24];$/;"	m	struct:__anon185
RESERVED_26	device/LPC54018.h	/^       uint8_t RESERVED_26[8];$/;"	m	struct:__anon185
RESERVED_27	device/LPC54018.h	/^       uint8_t RESERVED_27[12];$/;"	m	struct:__anon185
RESERVED_28	device/LPC54018.h	/^       uint8_t RESERVED_28[140];$/;"	m	struct:__anon185
RESERVED_29	device/LPC54018.h	/^       uint8_t RESERVED_29[12];$/;"	m	struct:__anon185
RESERVED_3	device/LPC54018.h	/^         uint8_t RESERVED_3[4];$/;"	m	struct:__anon146::__anon147
RESERVED_3	device/LPC54018.h	/^         uint8_t RESERVED_3[4];$/;"	m	struct:__anon154::__anon156
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[104];$/;"	m	struct:__anon159
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[112];$/;"	m	struct:__anon185
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[124];$/;"	m	struct:__anon151
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[192];$/;"	m	struct:__anon172
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[24];$/;"	m	struct:__anon179
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[36];$/;"	m	struct:__anon160
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[4];$/;"	m	struct:__anon142
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[4];$/;"	m	struct:__anon154
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[4];$/;"	m	struct:__anon161
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[4];$/;"	m	struct:__anon177
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[4];$/;"	m	struct:__anon183
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[4];$/;"	m	struct:__anon186
RESERVED_3	device/LPC54018.h	/^       uint8_t RESERVED_3[96];$/;"	m	struct:__anon149
RESERVED_30	device/LPC54018.h	/^       uint8_t RESERVED_30[92];$/;"	m	struct:__anon185
RESERVED_31	device/LPC54018.h	/^       uint8_t RESERVED_31[12];$/;"	m	struct:__anon185
RESERVED_32	device/LPC54018.h	/^       uint8_t RESERVED_32[72];$/;"	m	struct:__anon185
RESERVED_33	device/LPC54018.h	/^       uint8_t RESERVED_33[8];$/;"	m	struct:__anon185
RESERVED_34	device/LPC54018.h	/^       uint8_t RESERVED_34[8];$/;"	m	struct:__anon185
RESERVED_35	device/LPC54018.h	/^       uint8_t RESERVED_35[8];$/;"	m	struct:__anon185
RESERVED_36	device/LPC54018.h	/^       uint8_t RESERVED_36[72];$/;"	m	struct:__anon185
RESERVED_37	device/LPC54018.h	/^       uint8_t RESERVED_37[24];$/;"	m	struct:__anon185
RESERVED_38	device/LPC54018.h	/^       uint8_t RESERVED_38[24];$/;"	m	struct:__anon185
RESERVED_39	device/LPC54018.h	/^       uint8_t RESERVED_39[184];$/;"	m	struct:__anon185
RESERVED_4	device/LPC54018.h	/^         uint8_t RESERVED_4[4];$/;"	m	struct:__anon146::__anon147
RESERVED_4	device/LPC54018.h	/^         uint8_t RESERVED_4[4];$/;"	m	struct:__anon154::__anon156
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[100];$/;"	m	struct:__anon177
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[104];$/;"	m	struct:__anon159
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[128];$/;"	m	struct:__anon151
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[12];$/;"	m	struct:__anon186
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[1912];$/;"	m	struct:__anon160
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[32];$/;"	m	struct:__anon142
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[384];$/;"	m	struct:__anon172
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[4];$/;"	m	struct:__anon154
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[4];$/;"	m	struct:__anon161
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[4];$/;"	m	struct:__anon183
RESERVED_4	device/LPC54018.h	/^       uint8_t RESERVED_4[8];$/;"	m	struct:__anon185
RESERVED_40	device/LPC54018.h	/^       uint8_t RESERVED_40[1664];$/;"	m	struct:__anon185
RESERVED_41	device/LPC54018.h	/^       uint8_t RESERVED_41[492];$/;"	m	struct:__anon185
RESERVED_42	device/LPC54018.h	/^       uint8_t RESERVED_42[127044];$/;"	m	struct:__anon185
RESERVED_5	device/LPC54018.h	/^         uint8_t RESERVED_5[4];$/;"	m	struct:__anon146::__anon147
RESERVED_5	device/LPC54018.h	/^         uint8_t RESERVED_5[4];$/;"	m	struct:__anon154::__anon156
RESERVED_5	device/LPC54018.h	/^       uint8_t RESERVED_5[104];$/;"	m	struct:__anon159
RESERVED_5	device/LPC54018.h	/^       uint8_t RESERVED_5[12];$/;"	m	struct:__anon183
RESERVED_5	device/LPC54018.h	/^       uint8_t RESERVED_5[12];$/;"	m	struct:__anon186
RESERVED_5	device/LPC54018.h	/^       uint8_t RESERVED_5[248];$/;"	m	struct:__anon177
RESERVED_5	device/LPC54018.h	/^       uint8_t RESERVED_5[40];$/;"	m	struct:__anon185
RESERVED_5	device/LPC54018.h	/^       uint8_t RESERVED_5[4];$/;"	m	struct:__anon142
RESERVED_5	device/LPC54018.h	/^       uint8_t RESERVED_5[4];$/;"	m	struct:__anon154
RESERVED_5	device/LPC54018.h	/^       uint8_t RESERVED_5[8];$/;"	m	struct:__anon161
RESERVED_6	device/LPC54018.h	/^         uint8_t RESERVED_6[4];$/;"	m	struct:__anon146::__anon147
RESERVED_6	device/LPC54018.h	/^         uint8_t RESERVED_6[4];$/;"	m	struct:__anon154::__anon156
RESERVED_6	device/LPC54018.h	/^       uint8_t RESERVED_6[104];$/;"	m	struct:__anon159
RESERVED_6	device/LPC54018.h	/^       uint8_t RESERVED_6[12];$/;"	m	struct:__anon183
RESERVED_6	device/LPC54018.h	/^       uint8_t RESERVED_6[20];$/;"	m	struct:__anon185
RESERVED_6	device/LPC54018.h	/^       uint8_t RESERVED_6[440];$/;"	m	struct:__anon186
RESERVED_6	device/LPC54018.h	/^       uint8_t RESERVED_6[4];$/;"	m	struct:__anon154
RESERVED_6	device/LPC54018.h	/^       uint8_t RESERVED_6[8];$/;"	m	struct:__anon142
RESERVED_6	device/LPC54018.h	/^       uint8_t RESERVED_6[8];$/;"	m	struct:__anon161
RESERVED_7	device/LPC54018.h	/^         uint8_t RESERVED_7[4];$/;"	m	struct:__anon146::__anon147
RESERVED_7	device/LPC54018.h	/^         uint8_t RESERVED_7[8];$/;"	m	struct:__anon154::__anon156
RESERVED_7	device/LPC54018.h	/^       uint8_t RESERVED_7[104];$/;"	m	struct:__anon159
RESERVED_7	device/LPC54018.h	/^       uint8_t RESERVED_7[20];$/;"	m	struct:__anon185
RESERVED_7	device/LPC54018.h	/^       uint8_t RESERVED_7[260];$/;"	m	struct:__anon142
RESERVED_7	device/LPC54018.h	/^       uint8_t RESERVED_7[4020];$/;"	m	struct:__anon161
RESERVED_7	device/LPC54018.h	/^       uint8_t RESERVED_7[440];$/;"	m	struct:__anon183
RESERVED_7	device/LPC54018.h	/^       uint8_t RESERVED_7[8];$/;"	m	struct:__anon154
RESERVED_8	device/LPC54018.h	/^         uint8_t RESERVED_8[16];$/;"	m	struct:__anon154::__anon156
RESERVED_8	device/LPC54018.h	/^         uint8_t RESERVED_8[4];$/;"	m	struct:__anon146::__anon147
RESERVED_8	device/LPC54018.h	/^       uint8_t RESERVED_8[104];$/;"	m	struct:__anon159
RESERVED_8	device/LPC54018.h	/^       uint8_t RESERVED_8[164];$/;"	m	struct:__anon185
RESERVED_8	device/LPC54018.h	/^       uint8_t RESERVED_8[48];$/;"	m	struct:__anon154
RESERVED_8	device/LPC54018.h	/^       uint8_t RESERVED_8[508];$/;"	m	struct:__anon142
RESERVED_9	device/LPC54018.h	/^         uint8_t RESERVED_9[4];$/;"	m	struct:__anon146::__anon147
RESERVED_9	device/LPC54018.h	/^       uint8_t RESERVED_9[104];$/;"	m	struct:__anon159
RESERVED_9	device/LPC54018.h	/^       uint8_t RESERVED_9[12];$/;"	m	struct:__anon185
RESERVED_9	device/LPC54018.h	/^       uint8_t RESERVED_9[4];$/;"	m	struct:__anon154
RESERVED_9	device/LPC54018.h	/^       uint8_t RESERVED_9[508];$/;"	m	struct:__anon142
RESET_ClearPeripheralReset	drivers/fsl_reset.c	/^void RESET_ClearPeripheralReset(reset_ip_name_t peripheral)$/;"	f
RESET_PeripheralReset	drivers/fsl_reset.c	/^void RESET_PeripheralReset(reset_ip_name_t peripheral)$/;"	f
RESET_SetPeripheralReset	drivers/fsl_reset.c	/^void RESET_SetPeripheralReset(reset_ip_name_t peripheral)$/;"	f
RESP	device/LPC54018.h	/^  __I  uint32_t RESP[4];                           \/**< Response register, array offset: 0x30, array step: 0x4 *\/$/;"	m	struct:__anon177
RESP_MAX_PKTLEN	lwip/src/include/netif/ppp/chap-new.h	76;"	d
RFBX_DOWNLOAD_DATA_REPLY	emwin/emWin_header/GUI_VNC.h	97;"	d
RFBX_DOWNLOAD_DATA_REQUEST	emwin/emWin_header/GUI_VNC.h	96;"	d
RFBX_DOWNLOAD_END_REPLY	emwin/emWin_header/GUI_VNC.h	98;"	d
RFBX_DOWNLOAD_START_REPLY	emwin/emWin_header/GUI_VNC.h	95;"	d
RFBX_DOWNLOAD_START_REQUEST	emwin/emWin_header/GUI_VNC.h	94;"	d
RFBX_FILE_LIST_REPLY	emwin/emWin_header/GUI_VNC.h	86;"	d
RFBX_FILE_LIST_REQUEST	emwin/emWin_header/GUI_VNC.h	85;"	d
RFBX_MKDIR_REPLY	emwin/emWin_header/GUI_VNC.h	100;"	d
RFBX_MKDIR_REQUEST	emwin/emWin_header/GUI_VNC.h	99;"	d
RFBX_REMOVE_REPLY	emwin/emWin_header/GUI_VNC.h	102;"	d
RFBX_REMOVE_REQUEST	emwin/emWin_header/GUI_VNC.h	101;"	d
RFBX_RENAME_REPLY	emwin/emWin_header/GUI_VNC.h	104;"	d
RFBX_RENAME_REQUEST	emwin/emWin_header/GUI_VNC.h	103;"	d
RFBX_UPLOAD_DATA_REPLY	emwin/emWin_header/GUI_VNC.h	90;"	d
RFBX_UPLOAD_DATA_REQUEST	emwin/emWin_header/GUI_VNC.h	89;"	d
RFBX_UPLOAD_END_REPLY	emwin/emWin_header/GUI_VNC.h	92;"	d
RFBX_UPLOAD_END_REQUEST	emwin/emWin_header/GUI_VNC.h	91;"	d
RFBX_UPLOAD_START_REPLY	emwin/emWin_header/GUI_VNC.h	88;"	d
RFBX_UPLOAD_START_REQUEST	emwin/emWin_header/GUI_VNC.h	87;"	d
RFB_EXTENSION	emwin/emWin_header/GUI_VNC.h	80;"	d
RFLR_BANDSETTING_AUTO	radio/sx1276-LoRa.h	155;"	d
RFLR_BANDSETTING_DIV_BY_1	radio/sx1276-LoRa.h	156;"	d
RFLR_BANDSETTING_DIV_BY_2	radio/sx1276-LoRa.h	157;"	d
RFLR_BANDSETTING_DIV_BY_6	radio/sx1276-LoRa.h	158;"	d
RFLR_BANDSETTING_MASK	radio/sx1276-LoRa.h	154;"	d
RFLR_DIOMAPPING1_DIO0_00	radio/sx1276-LoRa.h	563;"	d
RFLR_DIOMAPPING1_DIO0_01	radio/sx1276-LoRa.h	564;"	d
RFLR_DIOMAPPING1_DIO0_10	radio/sx1276-LoRa.h	565;"	d
RFLR_DIOMAPPING1_DIO0_11	radio/sx1276-LoRa.h	566;"	d
RFLR_DIOMAPPING1_DIO0_MASK	radio/sx1276-LoRa.h	562;"	d
RFLR_DIOMAPPING1_DIO1_00	radio/sx1276-LoRa.h	569;"	d
RFLR_DIOMAPPING1_DIO1_01	radio/sx1276-LoRa.h	570;"	d
RFLR_DIOMAPPING1_DIO1_10	radio/sx1276-LoRa.h	571;"	d
RFLR_DIOMAPPING1_DIO1_11	radio/sx1276-LoRa.h	572;"	d
RFLR_DIOMAPPING1_DIO1_MASK	radio/sx1276-LoRa.h	568;"	d
RFLR_DIOMAPPING1_DIO2_00	radio/sx1276-LoRa.h	575;"	d
RFLR_DIOMAPPING1_DIO2_01	radio/sx1276-LoRa.h	576;"	d
RFLR_DIOMAPPING1_DIO2_10	radio/sx1276-LoRa.h	577;"	d
RFLR_DIOMAPPING1_DIO2_11	radio/sx1276-LoRa.h	578;"	d
RFLR_DIOMAPPING1_DIO2_MASK	radio/sx1276-LoRa.h	574;"	d
RFLR_DIOMAPPING1_DIO3_00	radio/sx1276-LoRa.h	581;"	d
RFLR_DIOMAPPING1_DIO3_01	radio/sx1276-LoRa.h	582;"	d
RFLR_DIOMAPPING1_DIO3_10	radio/sx1276-LoRa.h	583;"	d
RFLR_DIOMAPPING1_DIO3_11	radio/sx1276-LoRa.h	584;"	d
RFLR_DIOMAPPING1_DIO3_MASK	radio/sx1276-LoRa.h	580;"	d
RFLR_DIOMAPPING2_DIO4_00	radio/sx1276-LoRa.h	590;"	d
RFLR_DIOMAPPING2_DIO4_01	radio/sx1276-LoRa.h	591;"	d
RFLR_DIOMAPPING2_DIO4_10	radio/sx1276-LoRa.h	592;"	d
RFLR_DIOMAPPING2_DIO4_11	radio/sx1276-LoRa.h	593;"	d
RFLR_DIOMAPPING2_DIO4_MASK	radio/sx1276-LoRa.h	589;"	d
RFLR_DIOMAPPING2_DIO5_00	radio/sx1276-LoRa.h	596;"	d
RFLR_DIOMAPPING2_DIO5_01	radio/sx1276-LoRa.h	597;"	d
RFLR_DIOMAPPING2_DIO5_10	radio/sx1276-LoRa.h	598;"	d
RFLR_DIOMAPPING2_DIO5_11	radio/sx1276-LoRa.h	599;"	d
RFLR_DIOMAPPING2_DIO5_MASK	radio/sx1276-LoRa.h	595;"	d
RFLR_DIOMAPPING2_MAP_MASK	radio/sx1276-LoRa.h	601;"	d
RFLR_DIOMAPPING2_MAP_PREAMBLEDETECT	radio/sx1276-LoRa.h	602;"	d
RFLR_DIOMAPPING2_MAP_RSSI	radio/sx1276-LoRa.h	603;"	d
RFLR_FIFOADDRPTR	radio/sx1276-LoRa.h	376;"	d
RFLR_FIFORXBASEADDR	radio/sx1276-LoRa.h	386;"	d
RFLR_FIFOTXBASEADDR	radio/sx1276-LoRa.h	381;"	d
RFLR_FRFLSB_434_MHZ	radio/sx1276-LoRa.h	166;"	d
RFLR_FRFLSB_863_MHZ	radio/sx1276-LoRa.h	170;"	d
RFLR_FRFLSB_864_MHZ	radio/sx1276-LoRa.h	173;"	d
RFLR_FRFLSB_865_MHZ	radio/sx1276-LoRa.h	176;"	d
RFLR_FRFLSB_866_MHZ	radio/sx1276-LoRa.h	179;"	d
RFLR_FRFLSB_867_MHZ	radio/sx1276-LoRa.h	182;"	d
RFLR_FRFLSB_868_MHZ	radio/sx1276-LoRa.h	185;"	d
RFLR_FRFLSB_869_MHZ	radio/sx1276-LoRa.h	188;"	d
RFLR_FRFLSB_870_MHZ	radio/sx1276-LoRa.h	191;"	d
RFLR_FRFLSB_902_MHZ	radio/sx1276-LoRa.h	195;"	d
RFLR_FRFLSB_903_MHZ	radio/sx1276-LoRa.h	198;"	d
RFLR_FRFLSB_904_MHZ	radio/sx1276-LoRa.h	201;"	d
RFLR_FRFLSB_905_MHZ	radio/sx1276-LoRa.h	204;"	d
RFLR_FRFLSB_906_MHZ	radio/sx1276-LoRa.h	207;"	d
RFLR_FRFLSB_907_MHZ	radio/sx1276-LoRa.h	210;"	d
RFLR_FRFLSB_908_MHZ	radio/sx1276-LoRa.h	213;"	d
RFLR_FRFLSB_909_MHZ	radio/sx1276-LoRa.h	216;"	d
RFLR_FRFLSB_910_MHZ	radio/sx1276-LoRa.h	219;"	d
RFLR_FRFLSB_911_MHZ	radio/sx1276-LoRa.h	222;"	d
RFLR_FRFLSB_912_MHZ	radio/sx1276-LoRa.h	225;"	d
RFLR_FRFLSB_913_MHZ	radio/sx1276-LoRa.h	228;"	d
RFLR_FRFLSB_914_MHZ	radio/sx1276-LoRa.h	231;"	d
RFLR_FRFLSB_915_MHZ	radio/sx1276-LoRa.h	234;"	d
RFLR_FRFLSB_916_MHZ	radio/sx1276-LoRa.h	237;"	d
RFLR_FRFLSB_917_MHZ	radio/sx1276-LoRa.h	240;"	d
RFLR_FRFLSB_918_MHZ	radio/sx1276-LoRa.h	243;"	d
RFLR_FRFLSB_919_MHZ	radio/sx1276-LoRa.h	246;"	d
RFLR_FRFLSB_920_MHZ	radio/sx1276-LoRa.h	249;"	d
RFLR_FRFLSB_921_MHZ	radio/sx1276-LoRa.h	252;"	d
RFLR_FRFLSB_922_MHZ	radio/sx1276-LoRa.h	255;"	d
RFLR_FRFLSB_923_MHZ	radio/sx1276-LoRa.h	258;"	d
RFLR_FRFLSB_924_MHZ	radio/sx1276-LoRa.h	261;"	d
RFLR_FRFLSB_925_MHZ	radio/sx1276-LoRa.h	264;"	d
RFLR_FRFLSB_926_MHZ	radio/sx1276-LoRa.h	267;"	d
RFLR_FRFLSB_927_MHZ	radio/sx1276-LoRa.h	270;"	d
RFLR_FRFLSB_928_MHZ	radio/sx1276-LoRa.h	273;"	d
RFLR_FRFMID_434_MHZ	radio/sx1276-LoRa.h	165;"	d
RFLR_FRFMID_863_MHZ	radio/sx1276-LoRa.h	169;"	d
RFLR_FRFMID_864_MHZ	radio/sx1276-LoRa.h	172;"	d
RFLR_FRFMID_865_MHZ	radio/sx1276-LoRa.h	175;"	d
RFLR_FRFMID_866_MHZ	radio/sx1276-LoRa.h	178;"	d
RFLR_FRFMID_867_MHZ	radio/sx1276-LoRa.h	181;"	d
RFLR_FRFMID_868_MHZ	radio/sx1276-LoRa.h	184;"	d
RFLR_FRFMID_869_MHZ	radio/sx1276-LoRa.h	187;"	d
RFLR_FRFMID_870_MHZ	radio/sx1276-LoRa.h	190;"	d
RFLR_FRFMID_902_MHZ	radio/sx1276-LoRa.h	194;"	d
RFLR_FRFMID_903_MHZ	radio/sx1276-LoRa.h	197;"	d
RFLR_FRFMID_904_MHZ	radio/sx1276-LoRa.h	200;"	d
RFLR_FRFMID_905_MHZ	radio/sx1276-LoRa.h	203;"	d
RFLR_FRFMID_906_MHZ	radio/sx1276-LoRa.h	206;"	d
RFLR_FRFMID_907_MHZ	radio/sx1276-LoRa.h	209;"	d
RFLR_FRFMID_908_MHZ	radio/sx1276-LoRa.h	212;"	d
RFLR_FRFMID_909_MHZ	radio/sx1276-LoRa.h	215;"	d
RFLR_FRFMID_910_MHZ	radio/sx1276-LoRa.h	218;"	d
RFLR_FRFMID_911_MHZ	radio/sx1276-LoRa.h	221;"	d
RFLR_FRFMID_912_MHZ	radio/sx1276-LoRa.h	224;"	d
RFLR_FRFMID_913_MHZ	radio/sx1276-LoRa.h	227;"	d
RFLR_FRFMID_914_MHZ	radio/sx1276-LoRa.h	230;"	d
RFLR_FRFMID_915_MHZ	radio/sx1276-LoRa.h	233;"	d
RFLR_FRFMID_916_MHZ	radio/sx1276-LoRa.h	236;"	d
RFLR_FRFMID_917_MHZ	radio/sx1276-LoRa.h	239;"	d
RFLR_FRFMID_918_MHZ	radio/sx1276-LoRa.h	242;"	d
RFLR_FRFMID_919_MHZ	radio/sx1276-LoRa.h	245;"	d
RFLR_FRFMID_920_MHZ	radio/sx1276-LoRa.h	248;"	d
RFLR_FRFMID_921_MHZ	radio/sx1276-LoRa.h	251;"	d
RFLR_FRFMID_922_MHZ	radio/sx1276-LoRa.h	254;"	d
RFLR_FRFMID_923_MHZ	radio/sx1276-LoRa.h	257;"	d
RFLR_FRFMID_924_MHZ	radio/sx1276-LoRa.h	260;"	d
RFLR_FRFMID_925_MHZ	radio/sx1276-LoRa.h	263;"	d
RFLR_FRFMID_926_MHZ	radio/sx1276-LoRa.h	266;"	d
RFLR_FRFMID_927_MHZ	radio/sx1276-LoRa.h	269;"	d
RFLR_FRFMID_928_MHZ	radio/sx1276-LoRa.h	272;"	d
RFLR_FRFMSB_434_MHZ	radio/sx1276-LoRa.h	164;"	d
RFLR_FRFMSB_863_MHZ	radio/sx1276-LoRa.h	168;"	d
RFLR_FRFMSB_864_MHZ	radio/sx1276-LoRa.h	171;"	d
RFLR_FRFMSB_865_MHZ	radio/sx1276-LoRa.h	174;"	d
RFLR_FRFMSB_866_MHZ	radio/sx1276-LoRa.h	177;"	d
RFLR_FRFMSB_867_MHZ	radio/sx1276-LoRa.h	180;"	d
RFLR_FRFMSB_868_MHZ	radio/sx1276-LoRa.h	183;"	d
RFLR_FRFMSB_869_MHZ	radio/sx1276-LoRa.h	186;"	d
RFLR_FRFMSB_870_MHZ	radio/sx1276-LoRa.h	189;"	d
RFLR_FRFMSB_902_MHZ	radio/sx1276-LoRa.h	193;"	d
RFLR_FRFMSB_903_MHZ	radio/sx1276-LoRa.h	196;"	d
RFLR_FRFMSB_904_MHZ	radio/sx1276-LoRa.h	199;"	d
RFLR_FRFMSB_905_MHZ	radio/sx1276-LoRa.h	202;"	d
RFLR_FRFMSB_906_MHZ	radio/sx1276-LoRa.h	205;"	d
RFLR_FRFMSB_907_MHZ	radio/sx1276-LoRa.h	208;"	d
RFLR_FRFMSB_908_MHZ	radio/sx1276-LoRa.h	211;"	d
RFLR_FRFMSB_909_MHZ	radio/sx1276-LoRa.h	214;"	d
RFLR_FRFMSB_910_MHZ	radio/sx1276-LoRa.h	217;"	d
RFLR_FRFMSB_911_MHZ	radio/sx1276-LoRa.h	220;"	d
RFLR_FRFMSB_912_MHZ	radio/sx1276-LoRa.h	223;"	d
RFLR_FRFMSB_913_MHZ	radio/sx1276-LoRa.h	226;"	d
RFLR_FRFMSB_914_MHZ	radio/sx1276-LoRa.h	229;"	d
RFLR_FRFMSB_915_MHZ	radio/sx1276-LoRa.h	232;"	d
RFLR_FRFMSB_916_MHZ	radio/sx1276-LoRa.h	235;"	d
RFLR_FRFMSB_917_MHZ	radio/sx1276-LoRa.h	238;"	d
RFLR_FRFMSB_918_MHZ	radio/sx1276-LoRa.h	241;"	d
RFLR_FRFMSB_919_MHZ	radio/sx1276-LoRa.h	244;"	d
RFLR_FRFMSB_920_MHZ	radio/sx1276-LoRa.h	247;"	d
RFLR_FRFMSB_921_MHZ	radio/sx1276-LoRa.h	250;"	d
RFLR_FRFMSB_922_MHZ	radio/sx1276-LoRa.h	253;"	d
RFLR_FRFMSB_923_MHZ	radio/sx1276-LoRa.h	256;"	d
RFLR_FRFMSB_924_MHZ	radio/sx1276-LoRa.h	259;"	d
RFLR_FRFMSB_925_MHZ	radio/sx1276-LoRa.h	262;"	d
RFLR_FRFMSB_926_MHZ	radio/sx1276-LoRa.h	265;"	d
RFLR_FRFMSB_927_MHZ	radio/sx1276-LoRa.h	268;"	d
RFLR_FRFMSB_928_MHZ	radio/sx1276-LoRa.h	271;"	d
RFLR_HOPCHANNEL_CHANNEL_MASK	radio/sx1276-LoRa.h	525;"	d
RFLR_HOPCHANNEL_PAYLOAD_CRC16_MASK	radio/sx1276-LoRa.h	521;"	d
RFLR_HOPCHANNEL_PAYLOAD_CRC16_OFF	radio/sx1276-LoRa.h	523;"	d
RFLR_HOPCHANNEL_PAYLOAD_CRC16_ON	radio/sx1276-LoRa.h	522;"	d
RFLR_HOPCHANNEL_PLL_LOCK_FAIL	radio/sx1276-LoRa.h	518;"	d
RFLR_HOPCHANNEL_PLL_LOCK_SUCCEED	radio/sx1276-LoRa.h	519;"	d
RFLR_HOPCHANNEL_PLL_LOCK_TIMEOUT_MASK	radio/sx1276-LoRa.h	517;"	d
RFLR_HOPPERIOD_FREQFOPPINGPERIOD	radio/sx1276-LoRa.h	556;"	d
RFLR_IRQFLAGS_CADDETECTED	radio/sx1276-LoRa.h	414;"	d
RFLR_IRQFLAGS_CADDETECTED_MASK	radio/sx1276-LoRa.h	402;"	d
RFLR_IRQFLAGS_CADDONE	radio/sx1276-LoRa.h	412;"	d
RFLR_IRQFLAGS_CADDONE_MASK	radio/sx1276-LoRa.h	400;"	d
RFLR_IRQFLAGS_FHSSCHANGEDCHANNEL	radio/sx1276-LoRa.h	413;"	d
RFLR_IRQFLAGS_FHSSCHANGEDCHANNEL_MASK	radio/sx1276-LoRa.h	401;"	d
RFLR_IRQFLAGS_PAYLOADCRCERROR	radio/sx1276-LoRa.h	409;"	d
RFLR_IRQFLAGS_PAYLOADCRCERROR_MASK	radio/sx1276-LoRa.h	397;"	d
RFLR_IRQFLAGS_RXDONE	radio/sx1276-LoRa.h	408;"	d
RFLR_IRQFLAGS_RXDONE_MASK	radio/sx1276-LoRa.h	396;"	d
RFLR_IRQFLAGS_RXTIMEOUT	radio/sx1276-LoRa.h	407;"	d
RFLR_IRQFLAGS_RXTIMEOUT_MASK	radio/sx1276-LoRa.h	395;"	d
RFLR_IRQFLAGS_TXDONE	radio/sx1276-LoRa.h	411;"	d
RFLR_IRQFLAGS_TXDONE_MASK	radio/sx1276-LoRa.h	399;"	d
RFLR_IRQFLAGS_VALIDHEADER	radio/sx1276-LoRa.h	410;"	d
RFLR_IRQFLAGS_VALIDHEADER_MASK	radio/sx1276-LoRa.h	398;"	d
RFLR_LNA_BOOST_HF_MASK	radio/sx1276-LoRa.h	369;"	d
RFLR_LNA_BOOST_HF_OFF	radio/sx1276-LoRa.h	370;"	d
RFLR_LNA_BOOST_HF_ON	radio/sx1276-LoRa.h	371;"	d
RFLR_LNA_BOOST_LF_BOOST	radio/sx1276-LoRa.h	363;"	d
RFLR_LNA_BOOST_LF_DEFAULT	radio/sx1276-LoRa.h	360;"	d
RFLR_LNA_BOOST_LF_GAIN	radio/sx1276-LoRa.h	361;"	d
RFLR_LNA_BOOST_LF_IP3	radio/sx1276-LoRa.h	362;"	d
RFLR_LNA_BOOST_LF_MASK	radio/sx1276-LoRa.h	359;"	d
RFLR_LNA_GAIN_G1	radio/sx1276-LoRa.h	352;"	d
RFLR_LNA_GAIN_G2	radio/sx1276-LoRa.h	353;"	d
RFLR_LNA_GAIN_G3	radio/sx1276-LoRa.h	354;"	d
RFLR_LNA_GAIN_G4	radio/sx1276-LoRa.h	355;"	d
RFLR_LNA_GAIN_G5	radio/sx1276-LoRa.h	356;"	d
RFLR_LNA_GAIN_G6	radio/sx1276-LoRa.h	357;"	d
RFLR_LNA_GAIN_MASK	radio/sx1276-LoRa.h	351;"	d
RFLR_LNA_RXBANDFORCE_AUTO	radio/sx1276-LoRa.h	367;"	d
RFLR_LNA_RXBANDFORCE_BAND_SEL	radio/sx1276-LoRa.h	366;"	d
RFLR_LNA_RXBANDFORCE_MASK	radio/sx1276-LoRa.h	365;"	d
RFLR_MODEMCONFIG1_BW_10_41_KHZ	radio/sx1276-LoRa.h	470;"	d
RFLR_MODEMCONFIG1_BW_125_KHZ	radio/sx1276-LoRa.h	476;"	d
RFLR_MODEMCONFIG1_BW_15_62_KHZ	radio/sx1276-LoRa.h	471;"	d
RFLR_MODEMCONFIG1_BW_20_83_KHZ	radio/sx1276-LoRa.h	472;"	d
RFLR_MODEMCONFIG1_BW_250_KHZ	radio/sx1276-LoRa.h	477;"	d
RFLR_MODEMCONFIG1_BW_31_25_KHZ	radio/sx1276-LoRa.h	473;"	d
RFLR_MODEMCONFIG1_BW_41_66_KHZ	radio/sx1276-LoRa.h	474;"	d
RFLR_MODEMCONFIG1_BW_500_KHZ	radio/sx1276-LoRa.h	478;"	d
RFLR_MODEMCONFIG1_BW_62_50_KHZ	radio/sx1276-LoRa.h	475;"	d
RFLR_MODEMCONFIG1_BW_7_81_KHZ	radio/sx1276-LoRa.h	469;"	d
RFLR_MODEMCONFIG1_BW_MASK	radio/sx1276-LoRa.h	467;"	d
RFLR_MODEMCONFIG1_CODINGRATE_4_5	radio/sx1276-LoRa.h	481;"	d
RFLR_MODEMCONFIG1_CODINGRATE_4_6	radio/sx1276-LoRa.h	482;"	d
RFLR_MODEMCONFIG1_CODINGRATE_4_7	radio/sx1276-LoRa.h	483;"	d
RFLR_MODEMCONFIG1_CODINGRATE_4_8	radio/sx1276-LoRa.h	484;"	d
RFLR_MODEMCONFIG1_CODINGRATE_MASK	radio/sx1276-LoRa.h	480;"	d
RFLR_MODEMCONFIG1_IMPLICITHEADER_MASK	radio/sx1276-LoRa.h	486;"	d
RFLR_MODEMCONFIG1_IMPLICITHEADER_OFF	radio/sx1276-LoRa.h	488;"	d
RFLR_MODEMCONFIG1_IMPLICITHEADER_ON	radio/sx1276-LoRa.h	487;"	d
RFLR_MODEMCONFIG2_RXPAYLOADCRC_MASK	radio/sx1276-LoRa.h	506;"	d
RFLR_MODEMCONFIG2_RXPAYLOADCRC_OFF	radio/sx1276-LoRa.h	508;"	d
RFLR_MODEMCONFIG2_RXPAYLOADCRC_ON	radio/sx1276-LoRa.h	507;"	d
RFLR_MODEMCONFIG2_SF_10	radio/sx1276-LoRa.h	498;"	d
RFLR_MODEMCONFIG2_SF_11	radio/sx1276-LoRa.h	499;"	d
RFLR_MODEMCONFIG2_SF_12	radio/sx1276-LoRa.h	500;"	d
RFLR_MODEMCONFIG2_SF_6	radio/sx1276-LoRa.h	494;"	d
RFLR_MODEMCONFIG2_SF_7	radio/sx1276-LoRa.h	495;"	d
RFLR_MODEMCONFIG2_SF_8	radio/sx1276-LoRa.h	496;"	d
RFLR_MODEMCONFIG2_SF_9	radio/sx1276-LoRa.h	497;"	d
RFLR_MODEMCONFIG2_SF_MASK	radio/sx1276-LoRa.h	493;"	d
RFLR_MODEMCONFIG2_SYMBTIMEOUTMSB	radio/sx1276-LoRa.h	511;"	d
RFLR_MODEMCONFIG2_SYMBTIMEOUTMSB_MASK	radio/sx1276-LoRa.h	510;"	d
RFLR_MODEMCONFIG2_TXCONTINUOUSMODE_MASK	radio/sx1276-LoRa.h	502;"	d
RFLR_MODEMCONFIG2_TXCONTINUOUSMODE_OFF	radio/sx1276-LoRa.h	504;"	d
RFLR_MODEMCONFIG2_TXCONTINUOUSMODE_ON	radio/sx1276-LoRa.h	503;"	d
RFLR_MODEMCONFIG3_AGCAUTO_MASK	radio/sx1276-LoRa.h	675;"	d
RFLR_MODEMCONFIG3_AGCAUTO_OFF	radio/sx1276-LoRa.h	677;"	d
RFLR_MODEMCONFIG3_AGCAUTO_ON	radio/sx1276-LoRa.h	676;"	d
RFLR_MODEMCONFIG3_LOWDATARATEOPTIMIZE_MASK	radio/sx1276-LoRa.h	671;"	d
RFLR_MODEMCONFIG3_LOWDATARATEOPTIMIZE_OFF	radio/sx1276-LoRa.h	673;"	d
RFLR_MODEMCONFIG3_LOWDATARATEOPTIMIZE_ON	radio/sx1276-LoRa.h	672;"	d
RFLR_MODEMSTAT_MODEM_STATUS_MASK	radio/sx1276-LoRa.h	447;"	d
RFLR_MODEMSTAT_RX_CR_MASK	radio/sx1276-LoRa.h	446;"	d
RFLR_OCP_MASK	radio/sx1276-LoRa.h	314;"	d
RFLR_OCP_OFF	radio/sx1276-LoRa.h	316;"	d
RFLR_OCP_ON	radio/sx1276-LoRa.h	315;"	d
RFLR_OCP_TRIM_045_MA	radio/sx1276-LoRa.h	319;"	d
RFLR_OCP_TRIM_050_MA	radio/sx1276-LoRa.h	320;"	d
RFLR_OCP_TRIM_055_MA	radio/sx1276-LoRa.h	321;"	d
RFLR_OCP_TRIM_060_MA	radio/sx1276-LoRa.h	322;"	d
RFLR_OCP_TRIM_065_MA	radio/sx1276-LoRa.h	323;"	d
RFLR_OCP_TRIM_070_MA	radio/sx1276-LoRa.h	324;"	d
RFLR_OCP_TRIM_075_MA	radio/sx1276-LoRa.h	325;"	d
RFLR_OCP_TRIM_080_MA	radio/sx1276-LoRa.h	326;"	d
RFLR_OCP_TRIM_085_MA	radio/sx1276-LoRa.h	327;"	d
RFLR_OCP_TRIM_090_MA	radio/sx1276-LoRa.h	328;"	d
RFLR_OCP_TRIM_095_MA	radio/sx1276-LoRa.h	329;"	d
RFLR_OCP_TRIM_100_MA	radio/sx1276-LoRa.h	330;"	d
RFLR_OCP_TRIM_105_MA	radio/sx1276-LoRa.h	331;"	d
RFLR_OCP_TRIM_110_MA	radio/sx1276-LoRa.h	332;"	d
RFLR_OCP_TRIM_115_MA	radio/sx1276-LoRa.h	333;"	d
RFLR_OCP_TRIM_120_MA	radio/sx1276-LoRa.h	334;"	d
RFLR_OCP_TRIM_130_MA	radio/sx1276-LoRa.h	335;"	d
RFLR_OCP_TRIM_140_MA	radio/sx1276-LoRa.h	336;"	d
RFLR_OCP_TRIM_150_MA	radio/sx1276-LoRa.h	337;"	d
RFLR_OCP_TRIM_160_MA	radio/sx1276-LoRa.h	338;"	d
RFLR_OCP_TRIM_170_MA	radio/sx1276-LoRa.h	339;"	d
RFLR_OCP_TRIM_180_MA	radio/sx1276-LoRa.h	340;"	d
RFLR_OCP_TRIM_190_MA	radio/sx1276-LoRa.h	341;"	d
RFLR_OCP_TRIM_200_MA	radio/sx1276-LoRa.h	342;"	d
RFLR_OCP_TRIM_210_MA	radio/sx1276-LoRa.h	343;"	d
RFLR_OCP_TRIM_220_MA	radio/sx1276-LoRa.h	344;"	d
RFLR_OCP_TRIM_230_MA	radio/sx1276-LoRa.h	345;"	d
RFLR_OCP_TRIM_240_MA	radio/sx1276-LoRa.h	346;"	d
RFLR_OCP_TRIM_MASK	radio/sx1276-LoRa.h	318;"	d
RFLR_OPMODE_ACCESSSHAREDREG_DISABLE	radio/sx1276-LoRa.h	134;"	d
RFLR_OPMODE_ACCESSSHAREDREG_ENABLE	radio/sx1276-LoRa.h	133;"	d
RFLR_OPMODE_ACCESSSHAREDREG_MASK	radio/sx1276-LoRa.h	132;"	d
RFLR_OPMODE_CAD	radio/sx1276-LoRa.h	149;"	d
RFLR_OPMODE_FREQMODE_ACCESS_HF	radio/sx1276-LoRa.h	138;"	d
RFLR_OPMODE_FREQMODE_ACCESS_LF	radio/sx1276-LoRa.h	137;"	d
RFLR_OPMODE_FREQMODE_ACCESS_MASK	radio/sx1276-LoRa.h	136;"	d
RFLR_OPMODE_LONGRANGEMODE_MASK	radio/sx1276-LoRa.h	128;"	d
RFLR_OPMODE_LONGRANGEMODE_OFF	radio/sx1276-LoRa.h	129;"	d
RFLR_OPMODE_LONGRANGEMODE_ON	radio/sx1276-LoRa.h	130;"	d
RFLR_OPMODE_MASK	radio/sx1276-LoRa.h	140;"	d
RFLR_OPMODE_RECEIVER	radio/sx1276-LoRa.h	146;"	d
RFLR_OPMODE_RECEIVER_SINGLE	radio/sx1276-LoRa.h	148;"	d
RFLR_OPMODE_SLEEP	radio/sx1276-LoRa.h	141;"	d
RFLR_OPMODE_STANDBY	radio/sx1276-LoRa.h	142;"	d
RFLR_OPMODE_SYNTHESIZER_RX	radio/sx1276-LoRa.h	145;"	d
RFLR_OPMODE_SYNTHESIZER_TX	radio/sx1276-LoRa.h	143;"	d
RFLR_OPMODE_TRANSMITTER	radio/sx1276-LoRa.h	144;"	d
RFLR_PACONFIG_MAX_POWER_MASK	radio/sx1276-LoRa.h	282;"	d
RFLR_PACONFIG_OUTPUTPOWER_MASK	radio/sx1276-LoRa.h	284;"	d
RFLR_PACONFIG_PASELECT_MASK	radio/sx1276-LoRa.h	278;"	d
RFLR_PACONFIG_PASELECT_PABOOST	radio/sx1276-LoRa.h	279;"	d
RFLR_PACONFIG_PASELECT_RFO	radio/sx1276-LoRa.h	280;"	d
RFLR_PADAC_20DBM_MASK	radio/sx1276-LoRa.h	646;"	d
RFLR_PADAC_20DBM_OFF	radio/sx1276-LoRa.h	648;"	d
RFLR_PADAC_20DBM_ON	radio/sx1276-LoRa.h	647;"	d
RFLR_PARAMP_0010_US	radio/sx1276-LoRa.h	309;"	d
RFLR_PARAMP_0012_US	radio/sx1276-LoRa.h	308;"	d
RFLR_PARAMP_0015_US	radio/sx1276-LoRa.h	307;"	d
RFLR_PARAMP_0020_US	radio/sx1276-LoRa.h	306;"	d
RFLR_PARAMP_0025_US	radio/sx1276-LoRa.h	305;"	d
RFLR_PARAMP_0031_US	radio/sx1276-LoRa.h	304;"	d
RFLR_PARAMP_0040_US	radio/sx1276-LoRa.h	303;"	d
RFLR_PARAMP_0050_US	radio/sx1276-LoRa.h	302;"	d
RFLR_PARAMP_0062_US	radio/sx1276-LoRa.h	301;"	d
RFLR_PARAMP_0100_US	radio/sx1276-LoRa.h	300;"	d
RFLR_PARAMP_0125_US	radio/sx1276-LoRa.h	299;"	d
RFLR_PARAMP_0250_US	radio/sx1276-LoRa.h	298;"	d
RFLR_PARAMP_0500_US	radio/sx1276-LoRa.h	297;"	d
RFLR_PARAMP_1000_US	radio/sx1276-LoRa.h	296;"	d
RFLR_PARAMP_2000_US	radio/sx1276-LoRa.h	295;"	d
RFLR_PARAMP_3400_US	radio/sx1276-LoRa.h	294;"	d
RFLR_PARAMP_MASK	radio/sx1276-LoRa.h	293;"	d
RFLR_PARAMP_TXBANDFORCE_AUTO	radio/sx1276-LoRa.h	291;"	d
RFLR_PARAMP_TXBANDFORCE_BAND_SEL	radio/sx1276-LoRa.h	290;"	d
RFLR_PARAMP_TXBANDFORCE_MASK	radio/sx1276-LoRa.h	289;"	d
RFLR_PAYLOADLENGTH	radio/sx1276-LoRa.h	546;"	d
RFLR_PAYLOADMAXLENGTH	radio/sx1276-LoRa.h	551;"	d
RFLR_PLLHOP_FASTHOP_MASK	radio/sx1276-LoRa.h	632;"	d
RFLR_PLLHOP_FASTHOP_OFF	radio/sx1276-LoRa.h	634;"	d
RFLR_PLLHOP_FASTHOP_ON	radio/sx1276-LoRa.h	633;"	d
RFLR_PLLLOWPN_BANDWIDTH_150	radio/sx1276-LoRa.h	664;"	d
RFLR_PLLLOWPN_BANDWIDTH_225	radio/sx1276-LoRa.h	665;"	d
RFLR_PLLLOWPN_BANDWIDTH_300	radio/sx1276-LoRa.h	666;"	d
RFLR_PLLLOWPN_BANDWIDTH_75	radio/sx1276-LoRa.h	663;"	d
RFLR_PLLLOWPN_BANDWIDTH_MASK	radio/sx1276-LoRa.h	662;"	d
RFLR_PLL_BANDWIDTH_150	radio/sx1276-LoRa.h	655;"	d
RFLR_PLL_BANDWIDTH_225	radio/sx1276-LoRa.h	656;"	d
RFLR_PLL_BANDWIDTH_300	radio/sx1276-LoRa.h	657;"	d
RFLR_PLL_BANDWIDTH_75	radio/sx1276-LoRa.h	654;"	d
RFLR_PLL_BANDWIDTH_MASK	radio/sx1276-LoRa.h	653;"	d
RFLR_PREAMBLELENGTHLSB	radio/sx1276-LoRa.h	541;"	d
RFLR_PREAMBLELENGTHMSB	radio/sx1276-LoRa.h	536;"	d
RFLR_STATE	radio/sx1276-LoRa.h	/^}RFLR_STATE;$/;"	t	typeref:enum:__anon485
RFLR_STATE_IDLE	radio/sx1276-LoRa.h	/^    RFLR_STATE_IDLE,$/;"	e	enum:__anon485
RFLR_STATE_RX_DONE	radio/sx1276-LoRa.h	/^    RFLR_STATE_RX_DONE,$/;"	e	enum:__anon485
RFLR_STATE_RX_INIT	radio/sx1276-LoRa.h	/^    RFLR_STATE_RX_INIT,$/;"	e	enum:__anon485
RFLR_STATE_RX_RUNNING	radio/sx1276-LoRa.h	/^    RFLR_STATE_RX_RUNNING,$/;"	e	enum:__anon485
RFLR_SYMBTIMEOUTLSB_SYMBTIMEOUT	radio/sx1276-LoRa.h	531;"	d
RFLR_TCXO_TCXOINPUT_MASK	radio/sx1276-LoRa.h	639;"	d
RFLR_TCXO_TCXOINPUT_OFF	radio/sx1276-LoRa.h	641;"	d
RFLR_TCXO_TCXOINPUT_ON	radio/sx1276-LoRa.h	640;"	d
RF_AFCBW_EXPAFC_0	radio/sx1276-Fsk.h	672;"	d
RF_AFCBW_EXPAFC_1	radio/sx1276-Fsk.h	673;"	d
RF_AFCBW_EXPAFC_2	radio/sx1276-Fsk.h	674;"	d
RF_AFCBW_EXPAFC_3	radio/sx1276-Fsk.h	675;"	d
RF_AFCBW_EXPAFC_4	radio/sx1276-Fsk.h	676;"	d
RF_AFCBW_EXPAFC_5	radio/sx1276-Fsk.h	677;"	d
RF_AFCBW_EXPAFC_6	radio/sx1276-Fsk.h	678;"	d
RF_AFCBW_EXPAFC_7	radio/sx1276-Fsk.h	679;"	d
RF_AFCBW_EXPAFC_MASK	radio/sx1276-Fsk.h	671;"	d
RF_AFCBW_MANTAFC_16	radio/sx1276-Fsk.h	667;"	d
RF_AFCBW_MANTAFC_20	radio/sx1276-Fsk.h	668;"	d
RF_AFCBW_MANTAFC_24	radio/sx1276-Fsk.h	669;"	d
RF_AFCBW_MANTAFC_MASK	radio/sx1276-Fsk.h	666;"	d
RF_AFCFEI_AFCAUTOCLEAR_MASK	radio/sx1276-Fsk.h	740;"	d
RF_AFCFEI_AFCAUTOCLEAR_OFF	radio/sx1276-Fsk.h	742;"	d
RF_AFCFEI_AFCAUTOCLEAR_ON	radio/sx1276-Fsk.h	741;"	d
RF_AFCFEI_AFCCLEAR	radio/sx1276-Fsk.h	738;"	d
RF_AFCFEI_AGCSTART	radio/sx1276-Fsk.h	736;"	d
RF_BITRATEFRAC_MASK	radio/sx1276-Fsk.h	1241;"	d
RF_BITRATELSB_100000_BPS	radio/sx1276-Fsk.h	260;"	d
RF_BITRATELSB_10000_BPS	radio/sx1276-Fsk.h	223;"	d
RF_BITRATELSB_1000_BPS	radio/sx1276-Fsk.h	220;"	d
RF_BITRATELSB_115200_BPS	radio/sx1276-Fsk.h	252;"	d
RF_BITRATELSB_1200_BPS	radio/sx1276-Fsk.h	232;"	d
RF_BITRATELSB_12500_BPS	radio/sx1276-Fsk.h	254;"	d
RF_BITRATELSB_150000_BPS	radio/sx1276-Fsk.h	262;"	d
RF_BITRATELSB_15000_BPS	radio/sx1276-Fsk.h	240;"	d
RF_BITRATELSB_153600_BPS	radio/sx1276-Fsk.h	248;"	d
RF_BITRATELSB_19200_BPS	radio/sx1276-Fsk.h	242;"	d
RF_BITRATELSB_200000_BPS	radio/sx1276-Fsk.h	264;"	d
RF_BITRATELSB_20000_BPS	radio/sx1276-Fsk.h	226;"	d
RF_BITRATELSB_2400_BPS	radio/sx1276-Fsk.h	234;"	d
RF_BITRATELSB_250000_BPS	radio/sx1276-Fsk.h	266;"	d
RF_BITRATELSB_25000_BPS	radio/sx1276-Fsk.h	229;"	d
RF_BITRATELSB_25000_BPS	radio/sx1276-Fsk.h	256;"	d
RF_BITRATELSB_32768_BPS	radio/sx1276-Fsk.h	268;"	d
RF_BITRATELSB_38400_BPS	radio/sx1276-Fsk.h	244;"	d
RF_BITRATELSB_4800_BPS	radio/sx1276-Fsk.h	236;"	d
RF_BITRATELSB_50000_BPS	radio/sx1276-Fsk.h	258;"	d
RF_BITRATELSB_57600_BPS	radio/sx1276-Fsk.h	250;"	d
RF_BITRATELSB_76800_BPS	radio/sx1276-Fsk.h	246;"	d
RF_BITRATELSB_9600_BPS	radio/sx1276-Fsk.h	238;"	d
RF_BITRATEMSB_100000_BPS	radio/sx1276-Fsk.h	259;"	d
RF_BITRATEMSB_10000_BPS	radio/sx1276-Fsk.h	222;"	d
RF_BITRATEMSB_1000_BPS	radio/sx1276-Fsk.h	219;"	d
RF_BITRATEMSB_115200_BPS	radio/sx1276-Fsk.h	251;"	d
RF_BITRATEMSB_1200_BPS	radio/sx1276-Fsk.h	231;"	d
RF_BITRATEMSB_12500_BPS	radio/sx1276-Fsk.h	253;"	d
RF_BITRATEMSB_150000_BPS	radio/sx1276-Fsk.h	261;"	d
RF_BITRATEMSB_15000_BPS	radio/sx1276-Fsk.h	239;"	d
RF_BITRATEMSB_153600_BPS	radio/sx1276-Fsk.h	247;"	d
RF_BITRATEMSB_19200_BPS	radio/sx1276-Fsk.h	241;"	d
RF_BITRATEMSB_200000_BPS	radio/sx1276-Fsk.h	263;"	d
RF_BITRATEMSB_20000_BPS	radio/sx1276-Fsk.h	225;"	d
RF_BITRATEMSB_2400_BPS	radio/sx1276-Fsk.h	233;"	d
RF_BITRATEMSB_250000_BPS	radio/sx1276-Fsk.h	265;"	d
RF_BITRATEMSB_25000_BPS	radio/sx1276-Fsk.h	228;"	d
RF_BITRATEMSB_25000_BPS	radio/sx1276-Fsk.h	255;"	d
RF_BITRATEMSB_32768_BPS	radio/sx1276-Fsk.h	267;"	d
RF_BITRATEMSB_38400_BPS	radio/sx1276-Fsk.h	243;"	d
RF_BITRATEMSB_4800_BPS	radio/sx1276-Fsk.h	235;"	d
RF_BITRATEMSB_50000_BPS	radio/sx1276-Fsk.h	257;"	d
RF_BITRATEMSB_57600_BPS	radio/sx1276-Fsk.h	249;"	d
RF_BITRATEMSB_76800_BPS	radio/sx1276-Fsk.h	245;"	d
RF_BITRATEMSB_9600_BPS	radio/sx1276-Fsk.h	237;"	d
RF_BROADCASTADDRESS_ADDRESS	radio/sx1276-Fsk.h	952;"	d
RF_BUSY	radio/sx1276-LoRa.h	/^    RF_BUSY,$/;"	e	enum:__anon484
RF_DIOMAPPING1_DIO0_00	radio/sx1276-Fsk.h	1133;"	d
RF_DIOMAPPING1_DIO0_01	radio/sx1276-Fsk.h	1134;"	d
RF_DIOMAPPING1_DIO0_10	radio/sx1276-Fsk.h	1135;"	d
RF_DIOMAPPING1_DIO0_11	radio/sx1276-Fsk.h	1136;"	d
RF_DIOMAPPING1_DIO0_MASK	radio/sx1276-Fsk.h	1132;"	d
RF_DIOMAPPING1_DIO1_00	radio/sx1276-Fsk.h	1139;"	d
RF_DIOMAPPING1_DIO1_01	radio/sx1276-Fsk.h	1140;"	d
RF_DIOMAPPING1_DIO1_10	radio/sx1276-Fsk.h	1141;"	d
RF_DIOMAPPING1_DIO1_11	radio/sx1276-Fsk.h	1142;"	d
RF_DIOMAPPING1_DIO1_MASK	radio/sx1276-Fsk.h	1138;"	d
RF_DIOMAPPING1_DIO2_00	radio/sx1276-Fsk.h	1145;"	d
RF_DIOMAPPING1_DIO2_01	radio/sx1276-Fsk.h	1146;"	d
RF_DIOMAPPING1_DIO2_10	radio/sx1276-Fsk.h	1147;"	d
RF_DIOMAPPING1_DIO2_11	radio/sx1276-Fsk.h	1148;"	d
RF_DIOMAPPING1_DIO2_MASK	radio/sx1276-Fsk.h	1144;"	d
RF_DIOMAPPING1_DIO3_00	radio/sx1276-Fsk.h	1151;"	d
RF_DIOMAPPING1_DIO3_01	radio/sx1276-Fsk.h	1152;"	d
RF_DIOMAPPING1_DIO3_10	radio/sx1276-Fsk.h	1153;"	d
RF_DIOMAPPING1_DIO3_11	radio/sx1276-Fsk.h	1154;"	d
RF_DIOMAPPING1_DIO3_MASK	radio/sx1276-Fsk.h	1150;"	d
RF_DIOMAPPING2_DIO4_00	radio/sx1276-Fsk.h	1160;"	d
RF_DIOMAPPING2_DIO4_01	radio/sx1276-Fsk.h	1161;"	d
RF_DIOMAPPING2_DIO4_10	radio/sx1276-Fsk.h	1162;"	d
RF_DIOMAPPING2_DIO4_11	radio/sx1276-Fsk.h	1163;"	d
RF_DIOMAPPING2_DIO4_MASK	radio/sx1276-Fsk.h	1159;"	d
RF_DIOMAPPING2_DIO5_00	radio/sx1276-Fsk.h	1166;"	d
RF_DIOMAPPING2_DIO5_01	radio/sx1276-Fsk.h	1167;"	d
RF_DIOMAPPING2_DIO5_10	radio/sx1276-Fsk.h	1168;"	d
RF_DIOMAPPING2_DIO5_11	radio/sx1276-Fsk.h	1169;"	d
RF_DIOMAPPING2_DIO5_MASK	radio/sx1276-Fsk.h	1165;"	d
RF_DIOMAPPING2_MAP_MASK	radio/sx1276-Fsk.h	1171;"	d
RF_DIOMAPPING2_MAP_PREAMBLEDETECT	radio/sx1276-Fsk.h	1172;"	d
RF_DIOMAPPING2_MAP_RSSI	radio/sx1276-Fsk.h	1173;"	d
RF_FDEVLSB_100000_HZ	radio/sx1276-Fsk.h	323;"	d
RF_FDEVLSB_10000_HZ	radio/sx1276-Fsk.h	287;"	d
RF_FDEVLSB_110000_HZ	radio/sx1276-Fsk.h	325;"	d
RF_FDEVLSB_120000_HZ	radio/sx1276-Fsk.h	327;"	d
RF_FDEVLSB_130000_HZ	radio/sx1276-Fsk.h	329;"	d
RF_FDEVLSB_140000_HZ	radio/sx1276-Fsk.h	331;"	d
RF_FDEVLSB_150000_HZ	radio/sx1276-Fsk.h	333;"	d
RF_FDEVLSB_15000_HZ	radio/sx1276-Fsk.h	289;"	d
RF_FDEVLSB_160000_HZ	radio/sx1276-Fsk.h	335;"	d
RF_FDEVLSB_170000_HZ	radio/sx1276-Fsk.h	337;"	d
RF_FDEVLSB_180000_HZ	radio/sx1276-Fsk.h	339;"	d
RF_FDEVLSB_190000_HZ	radio/sx1276-Fsk.h	341;"	d
RF_FDEVLSB_200000_HZ	radio/sx1276-Fsk.h	343;"	d
RF_FDEVLSB_20000_HZ	radio/sx1276-Fsk.h	291;"	d
RF_FDEVLSB_2000_HZ	radio/sx1276-Fsk.h	283;"	d
RF_FDEVLSB_25000_HZ	radio/sx1276-Fsk.h	293;"	d
RF_FDEVLSB_30000_HZ	radio/sx1276-Fsk.h	295;"	d
RF_FDEVLSB_35000_HZ	radio/sx1276-Fsk.h	297;"	d
RF_FDEVLSB_40000_HZ	radio/sx1276-Fsk.h	299;"	d
RF_FDEVLSB_45000_HZ	radio/sx1276-Fsk.h	301;"	d
RF_FDEVLSB_50000_HZ	radio/sx1276-Fsk.h	303;"	d
RF_FDEVLSB_5000_HZ	radio/sx1276-Fsk.h	285;"	d
RF_FDEVLSB_55000_HZ	radio/sx1276-Fsk.h	305;"	d
RF_FDEVLSB_60000_HZ	radio/sx1276-Fsk.h	307;"	d
RF_FDEVLSB_65000_HZ	radio/sx1276-Fsk.h	309;"	d
RF_FDEVLSB_70000_HZ	radio/sx1276-Fsk.h	311;"	d
RF_FDEVLSB_75000_HZ	radio/sx1276-Fsk.h	313;"	d
RF_FDEVLSB_80000_HZ	radio/sx1276-Fsk.h	315;"	d
RF_FDEVLSB_85000_HZ	radio/sx1276-Fsk.h	317;"	d
RF_FDEVLSB_90000_HZ	radio/sx1276-Fsk.h	319;"	d
RF_FDEVLSB_95000_HZ	radio/sx1276-Fsk.h	321;"	d
RF_FDEVMSB_100000_HZ	radio/sx1276-Fsk.h	322;"	d
RF_FDEVMSB_10000_HZ	radio/sx1276-Fsk.h	286;"	d
RF_FDEVMSB_110000_HZ	radio/sx1276-Fsk.h	324;"	d
RF_FDEVMSB_120000_HZ	radio/sx1276-Fsk.h	326;"	d
RF_FDEVMSB_130000_HZ	radio/sx1276-Fsk.h	328;"	d
RF_FDEVMSB_140000_HZ	radio/sx1276-Fsk.h	330;"	d
RF_FDEVMSB_150000_HZ	radio/sx1276-Fsk.h	332;"	d
RF_FDEVMSB_15000_HZ	radio/sx1276-Fsk.h	288;"	d
RF_FDEVMSB_160000_HZ	radio/sx1276-Fsk.h	334;"	d
RF_FDEVMSB_170000_HZ	radio/sx1276-Fsk.h	336;"	d
RF_FDEVMSB_180000_HZ	radio/sx1276-Fsk.h	338;"	d
RF_FDEVMSB_190000_HZ	radio/sx1276-Fsk.h	340;"	d
RF_FDEVMSB_200000_HZ	radio/sx1276-Fsk.h	342;"	d
RF_FDEVMSB_20000_HZ	radio/sx1276-Fsk.h	290;"	d
RF_FDEVMSB_2000_HZ	radio/sx1276-Fsk.h	282;"	d
RF_FDEVMSB_25000_HZ	radio/sx1276-Fsk.h	292;"	d
RF_FDEVMSB_30000_HZ	radio/sx1276-Fsk.h	294;"	d
RF_FDEVMSB_35000_HZ	radio/sx1276-Fsk.h	296;"	d
RF_FDEVMSB_40000_HZ	radio/sx1276-Fsk.h	298;"	d
RF_FDEVMSB_45000_HZ	radio/sx1276-Fsk.h	300;"	d
RF_FDEVMSB_50000_HZ	radio/sx1276-Fsk.h	302;"	d
RF_FDEVMSB_5000_HZ	radio/sx1276-Fsk.h	284;"	d
RF_FDEVMSB_55000_HZ	radio/sx1276-Fsk.h	304;"	d
RF_FDEVMSB_60000_HZ	radio/sx1276-Fsk.h	306;"	d
RF_FDEVMSB_65000_HZ	radio/sx1276-Fsk.h	308;"	d
RF_FDEVMSB_70000_HZ	radio/sx1276-Fsk.h	310;"	d
RF_FDEVMSB_75000_HZ	radio/sx1276-Fsk.h	312;"	d
RF_FDEVMSB_80000_HZ	radio/sx1276-Fsk.h	314;"	d
RF_FDEVMSB_85000_HZ	radio/sx1276-Fsk.h	316;"	d
RF_FDEVMSB_90000_HZ	radio/sx1276-Fsk.h	318;"	d
RF_FDEVMSB_95000_HZ	radio/sx1276-Fsk.h	320;"	d
RF_FDEVMSB_BANDREG_AUTO	radio/sx1276-Fsk.h	275;"	d
RF_FDEVMSB_BANDREG_DIV_BY_1	radio/sx1276-Fsk.h	276;"	d
RF_FDEVMSB_BANDREG_DIV_BY_2	radio/sx1276-Fsk.h	277;"	d
RF_FDEVMSB_BANDREG_DIV_BY_6	radio/sx1276-Fsk.h	278;"	d
RF_FDEVMSB_BANDREG_MASK	radio/sx1276-Fsk.h	274;"	d
RF_FDEVMSB_FDEV_MASK	radio/sx1276-Fsk.h	280;"	d
RF_FIFOTHRESH_FIFOTHRESHOLD_MASK	radio/sx1276-Fsk.h	961;"	d
RF_FIFOTHRESH_FIFOTHRESHOLD_THRESHOLD	radio/sx1276-Fsk.h	962;"	d
RF_FIFOTHRESH_TXSTARTCONDITION_FIFONOTEMPTY	radio/sx1276-Fsk.h	959;"	d
RF_FIFOTHRESH_TXSTARTCONDITION_FIFOTHRESH	radio/sx1276-Fsk.h	958;"	d
RF_FIFOTHRESH_TXSTARTCONDITION_MASK	radio/sx1276-Fsk.h	957;"	d
RF_FRFLSB_863_MHZ	radio/sx1276-Fsk.h	350;"	d
RF_FRFLSB_864_MHZ	radio/sx1276-Fsk.h	353;"	d
RF_FRFLSB_865_MHZ	radio/sx1276-Fsk.h	356;"	d
RF_FRFLSB_866_MHZ	radio/sx1276-Fsk.h	359;"	d
RF_FRFLSB_867_MHZ	radio/sx1276-Fsk.h	362;"	d
RF_FRFLSB_868_MHZ	radio/sx1276-Fsk.h	365;"	d
RF_FRFLSB_869_MHZ	radio/sx1276-Fsk.h	368;"	d
RF_FRFLSB_870_MHZ	radio/sx1276-Fsk.h	371;"	d
RF_FRFLSB_902_MHZ	radio/sx1276-Fsk.h	375;"	d
RF_FRFLSB_903_MHZ	radio/sx1276-Fsk.h	378;"	d
RF_FRFLSB_904_MHZ	radio/sx1276-Fsk.h	381;"	d
RF_FRFLSB_905_MHZ	radio/sx1276-Fsk.h	384;"	d
RF_FRFLSB_906_MHZ	radio/sx1276-Fsk.h	387;"	d
RF_FRFLSB_907_MHZ	radio/sx1276-Fsk.h	390;"	d
RF_FRFLSB_908_MHZ	radio/sx1276-Fsk.h	393;"	d
RF_FRFLSB_909_MHZ	radio/sx1276-Fsk.h	396;"	d
RF_FRFLSB_910_MHZ	radio/sx1276-Fsk.h	399;"	d
RF_FRFLSB_911_MHZ	radio/sx1276-Fsk.h	402;"	d
RF_FRFLSB_912_MHZ	radio/sx1276-Fsk.h	405;"	d
RF_FRFLSB_913_MHZ	radio/sx1276-Fsk.h	408;"	d
RF_FRFLSB_914_MHZ	radio/sx1276-Fsk.h	411;"	d
RF_FRFLSB_915_MHZ	radio/sx1276-Fsk.h	414;"	d
RF_FRFLSB_916_MHZ	radio/sx1276-Fsk.h	417;"	d
RF_FRFLSB_917_MHZ	radio/sx1276-Fsk.h	420;"	d
RF_FRFLSB_918_MHZ	radio/sx1276-Fsk.h	423;"	d
RF_FRFLSB_919_MHZ	radio/sx1276-Fsk.h	426;"	d
RF_FRFLSB_920_MHZ	radio/sx1276-Fsk.h	429;"	d
RF_FRFLSB_921_MHZ	radio/sx1276-Fsk.h	432;"	d
RF_FRFLSB_922_MHZ	radio/sx1276-Fsk.h	435;"	d
RF_FRFLSB_923_MHZ	radio/sx1276-Fsk.h	438;"	d
RF_FRFLSB_924_MHZ	radio/sx1276-Fsk.h	441;"	d
RF_FRFLSB_925_MHZ	radio/sx1276-Fsk.h	444;"	d
RF_FRFLSB_926_MHZ	radio/sx1276-Fsk.h	447;"	d
RF_FRFLSB_927_MHZ	radio/sx1276-Fsk.h	450;"	d
RF_FRFLSB_928_MHZ	radio/sx1276-Fsk.h	453;"	d
RF_FRFMID_863_MHZ	radio/sx1276-Fsk.h	349;"	d
RF_FRFMID_864_MHZ	radio/sx1276-Fsk.h	352;"	d
RF_FRFMID_865_MHZ	radio/sx1276-Fsk.h	355;"	d
RF_FRFMID_866_MHZ	radio/sx1276-Fsk.h	358;"	d
RF_FRFMID_867_MHZ	radio/sx1276-Fsk.h	361;"	d
RF_FRFMID_868_MHZ	radio/sx1276-Fsk.h	364;"	d
RF_FRFMID_869_MHZ	radio/sx1276-Fsk.h	367;"	d
RF_FRFMID_870_MHZ	radio/sx1276-Fsk.h	370;"	d
RF_FRFMID_902_MHZ	radio/sx1276-Fsk.h	374;"	d
RF_FRFMID_903_MHZ	radio/sx1276-Fsk.h	377;"	d
RF_FRFMID_904_MHZ	radio/sx1276-Fsk.h	380;"	d
RF_FRFMID_905_MHZ	radio/sx1276-Fsk.h	383;"	d
RF_FRFMID_906_MHZ	radio/sx1276-Fsk.h	386;"	d
RF_FRFMID_907_MHZ	radio/sx1276-Fsk.h	389;"	d
RF_FRFMID_908_MHZ	radio/sx1276-Fsk.h	392;"	d
RF_FRFMID_909_MHZ	radio/sx1276-Fsk.h	395;"	d
RF_FRFMID_910_MHZ	radio/sx1276-Fsk.h	398;"	d
RF_FRFMID_911_MHZ	radio/sx1276-Fsk.h	401;"	d
RF_FRFMID_912_MHZ	radio/sx1276-Fsk.h	404;"	d
RF_FRFMID_913_MHZ	radio/sx1276-Fsk.h	407;"	d
RF_FRFMID_914_MHZ	radio/sx1276-Fsk.h	410;"	d
RF_FRFMID_915_MHZ	radio/sx1276-Fsk.h	413;"	d
RF_FRFMID_916_MHZ	radio/sx1276-Fsk.h	416;"	d
RF_FRFMID_917_MHZ	radio/sx1276-Fsk.h	419;"	d
RF_FRFMID_918_MHZ	radio/sx1276-Fsk.h	422;"	d
RF_FRFMID_919_MHZ	radio/sx1276-Fsk.h	425;"	d
RF_FRFMID_920_MHZ	radio/sx1276-Fsk.h	428;"	d
RF_FRFMID_921_MHZ	radio/sx1276-Fsk.h	431;"	d
RF_FRFMID_922_MHZ	radio/sx1276-Fsk.h	434;"	d
RF_FRFMID_923_MHZ	radio/sx1276-Fsk.h	437;"	d
RF_FRFMID_924_MHZ	radio/sx1276-Fsk.h	440;"	d
RF_FRFMID_925_MHZ	radio/sx1276-Fsk.h	443;"	d
RF_FRFMID_926_MHZ	radio/sx1276-Fsk.h	446;"	d
RF_FRFMID_927_MHZ	radio/sx1276-Fsk.h	449;"	d
RF_FRFMID_928_MHZ	radio/sx1276-Fsk.h	452;"	d
RF_FRFMSB_863_MHZ	radio/sx1276-Fsk.h	348;"	d
RF_FRFMSB_864_MHZ	radio/sx1276-Fsk.h	351;"	d
RF_FRFMSB_865_MHZ	radio/sx1276-Fsk.h	354;"	d
RF_FRFMSB_866_MHZ	radio/sx1276-Fsk.h	357;"	d
RF_FRFMSB_867_MHZ	radio/sx1276-Fsk.h	360;"	d
RF_FRFMSB_868_MHZ	radio/sx1276-Fsk.h	363;"	d
RF_FRFMSB_869_MHZ	radio/sx1276-Fsk.h	366;"	d
RF_FRFMSB_870_MHZ	radio/sx1276-Fsk.h	369;"	d
RF_FRFMSB_902_MHZ	radio/sx1276-Fsk.h	373;"	d
RF_FRFMSB_903_MHZ	radio/sx1276-Fsk.h	376;"	d
RF_FRFMSB_904_MHZ	radio/sx1276-Fsk.h	379;"	d
RF_FRFMSB_905_MHZ	radio/sx1276-Fsk.h	382;"	d
RF_FRFMSB_906_MHZ	radio/sx1276-Fsk.h	385;"	d
RF_FRFMSB_907_MHZ	radio/sx1276-Fsk.h	388;"	d
RF_FRFMSB_908_MHZ	radio/sx1276-Fsk.h	391;"	d
RF_FRFMSB_909_MHZ	radio/sx1276-Fsk.h	394;"	d
RF_FRFMSB_910_MHZ	radio/sx1276-Fsk.h	397;"	d
RF_FRFMSB_911_MHZ	radio/sx1276-Fsk.h	400;"	d
RF_FRFMSB_912_MHZ	radio/sx1276-Fsk.h	403;"	d
RF_FRFMSB_913_MHZ	radio/sx1276-Fsk.h	406;"	d
RF_FRFMSB_914_MHZ	radio/sx1276-Fsk.h	409;"	d
RF_FRFMSB_915_MHZ	radio/sx1276-Fsk.h	412;"	d
RF_FRFMSB_916_MHZ	radio/sx1276-Fsk.h	415;"	d
RF_FRFMSB_917_MHZ	radio/sx1276-Fsk.h	418;"	d
RF_FRFMSB_918_MHZ	radio/sx1276-Fsk.h	421;"	d
RF_FRFMSB_919_MHZ	radio/sx1276-Fsk.h	424;"	d
RF_FRFMSB_920_MHZ	radio/sx1276-Fsk.h	427;"	d
RF_FRFMSB_921_MHZ	radio/sx1276-Fsk.h	430;"	d
RF_FRFMSB_922_MHZ	radio/sx1276-Fsk.h	433;"	d
RF_FRFMSB_923_MHZ	radio/sx1276-Fsk.h	436;"	d
RF_FRFMSB_924_MHZ	radio/sx1276-Fsk.h	439;"	d
RF_FRFMSB_925_MHZ	radio/sx1276-Fsk.h	442;"	d
RF_FRFMSB_926_MHZ	radio/sx1276-Fsk.h	445;"	d
RF_FRFMSB_927_MHZ	radio/sx1276-Fsk.h	448;"	d
RF_FRFMSB_928_MHZ	radio/sx1276-Fsk.h	451;"	d
RF_IDLE	radio/sx1276-LoRa.h	/^    RF_IDLE,  \/\/$/;"	e	enum:__anon484
RF_IMAGECAL_AUTOIMAGECAL_MASK	radio/sx1276-Fsk.h	1047;"	d
RF_IMAGECAL_AUTOIMAGECAL_OFF	radio/sx1276-Fsk.h	1049;"	d
RF_IMAGECAL_AUTOIMAGECAL_ON	radio/sx1276-Fsk.h	1048;"	d
RF_IMAGECAL_IMAGECAL_DONE	radio/sx1276-Fsk.h	1055;"	d
RF_IMAGECAL_IMAGECAL_MASK	radio/sx1276-Fsk.h	1051;"	d
RF_IMAGECAL_IMAGECAL_RUNNING	radio/sx1276-Fsk.h	1054;"	d
RF_IMAGECAL_IMAGECAL_START	radio/sx1276-Fsk.h	1052;"	d
RF_IMAGECAL_TEMPCHANGE_HIGHER	radio/sx1276-Fsk.h	1057;"	d
RF_IMAGECAL_TEMPCHANGE_LOWER	radio/sx1276-Fsk.h	1058;"	d
RF_IMAGECAL_TEMPMONITOR_MASK	radio/sx1276-Fsk.h	1066;"	d
RF_IMAGECAL_TEMPMONITOR_OFF	radio/sx1276-Fsk.h	1068;"	d
RF_IMAGECAL_TEMPMONITOR_ON	radio/sx1276-Fsk.h	1067;"	d
RF_IMAGECAL_TEMPTHRESHOLD_05	radio/sx1276-Fsk.h	1061;"	d
RF_IMAGECAL_TEMPTHRESHOLD_10	radio/sx1276-Fsk.h	1062;"	d
RF_IMAGECAL_TEMPTHRESHOLD_15	radio/sx1276-Fsk.h	1063;"	d
RF_IMAGECAL_TEMPTHRESHOLD_20	radio/sx1276-Fsk.h	1064;"	d
RF_IMAGECAL_TEMPTHRESHOLD_MASK	radio/sx1276-Fsk.h	1060;"	d
RF_IRQFLAGS1_MODEREADY	radio/sx1276-Fsk.h	1094;"	d
RF_IRQFLAGS1_PLLLOCK	radio/sx1276-Fsk.h	1100;"	d
RF_IRQFLAGS1_PREAMBLEDETECT	radio/sx1276-Fsk.h	1106;"	d
RF_IRQFLAGS1_RSSI	radio/sx1276-Fsk.h	1102;"	d
RF_IRQFLAGS1_RXREADY	radio/sx1276-Fsk.h	1096;"	d
RF_IRQFLAGS1_SYNCADDRESSMATCH	radio/sx1276-Fsk.h	1108;"	d
RF_IRQFLAGS1_TIMEOUT	radio/sx1276-Fsk.h	1104;"	d
RF_IRQFLAGS1_TXREADY	radio/sx1276-Fsk.h	1098;"	d
RF_IRQFLAGS2_CRCOK	radio/sx1276-Fsk.h	1125;"	d
RF_IRQFLAGS2_FIFOEMPTY	radio/sx1276-Fsk.h	1115;"	d
RF_IRQFLAGS2_FIFOFULL	radio/sx1276-Fsk.h	1113;"	d
RF_IRQFLAGS2_FIFOLEVEL	radio/sx1276-Fsk.h	1117;"	d
RF_IRQFLAGS2_FIFOOVERRUN	radio/sx1276-Fsk.h	1119;"	d
RF_IRQFLAGS2_LOWBAT	radio/sx1276-Fsk.h	1127;"	d
RF_IRQFLAGS2_PACKETSENT	radio/sx1276-Fsk.h	1121;"	d
RF_IRQFLAGS2_PAYLOADREADY	radio/sx1276-Fsk.h	1123;"	d
RF_Initial	radio/radio.c	/^void RF_Initial()$/;"	f
RF_LNA_BOOST_HF_MASK	radio/sx1276-Fsk.h	555;"	d
RF_LNA_BOOST_HF_OFF	radio/sx1276-Fsk.h	556;"	d
RF_LNA_BOOST_HF_ON	radio/sx1276-Fsk.h	557;"	d
RF_LNA_BOOST_LF_BOOST	radio/sx1276-Fsk.h	549;"	d
RF_LNA_BOOST_LF_DEFAULT	radio/sx1276-Fsk.h	546;"	d
RF_LNA_BOOST_LF_GAIN	radio/sx1276-Fsk.h	547;"	d
RF_LNA_BOOST_LF_IP3	radio/sx1276-Fsk.h	548;"	d
RF_LNA_BOOST_LF_MASK	radio/sx1276-Fsk.h	545;"	d
RF_LNA_GAIN_G1	radio/sx1276-Fsk.h	538;"	d
RF_LNA_GAIN_G2	radio/sx1276-Fsk.h	539;"	d
RF_LNA_GAIN_G3	radio/sx1276-Fsk.h	540;"	d
RF_LNA_GAIN_G4	radio/sx1276-Fsk.h	541;"	d
RF_LNA_GAIN_G5	radio/sx1276-Fsk.h	542;"	d
RF_LNA_GAIN_G6	radio/sx1276-Fsk.h	543;"	d
RF_LNA_GAIN_MASK	radio/sx1276-Fsk.h	537;"	d
RF_LNA_RXBANDFORCE_AUTO	radio/sx1276-Fsk.h	553;"	d
RF_LNA_RXBANDFORCE_BAND_SEL	radio/sx1276-Fsk.h	552;"	d
RF_LNA_RXBANDFORCE_MASK	radio/sx1276-Fsk.h	551;"	d
RF_LOWBAT_MASK	radio/sx1276-Fsk.h	1077;"	d
RF_LOWBAT_OFF	radio/sx1276-Fsk.h	1079;"	d
RF_LOWBAT_ON	radio/sx1276-Fsk.h	1078;"	d
RF_LOWBAT_TRIM_1695	radio/sx1276-Fsk.h	1082;"	d
RF_LOWBAT_TRIM_1764	radio/sx1276-Fsk.h	1083;"	d
RF_LOWBAT_TRIM_1835	radio/sx1276-Fsk.h	1084;"	d
RF_LOWBAT_TRIM_1905	radio/sx1276-Fsk.h	1085;"	d
RF_LOWBAT_TRIM_1976	radio/sx1276-Fsk.h	1086;"	d
RF_LOWBAT_TRIM_2045	radio/sx1276-Fsk.h	1087;"	d
RF_LOWBAT_TRIM_2116	radio/sx1276-Fsk.h	1088;"	d
RF_LOWBAT_TRIM_2185	radio/sx1276-Fsk.h	1089;"	d
RF_LOWBAT_TRIM_MASK	radio/sx1276-Fsk.h	1081;"	d
RF_MAX_PACKET_SIZE	radio/sx1276-lora.c	5;"	d	file:
RF_NODEADDRESS_ADDRESS	radio/sx1276-Fsk.h	947;"	d
RF_OCP_MASK	radio/sx1276-Fsk.h	500;"	d
RF_OCP_OFF	radio/sx1276-Fsk.h	502;"	d
RF_OCP_ON	radio/sx1276-Fsk.h	501;"	d
RF_OCP_TRIM_045_MA	radio/sx1276-Fsk.h	505;"	d
RF_OCP_TRIM_050_MA	radio/sx1276-Fsk.h	506;"	d
RF_OCP_TRIM_055_MA	radio/sx1276-Fsk.h	507;"	d
RF_OCP_TRIM_060_MA	radio/sx1276-Fsk.h	508;"	d
RF_OCP_TRIM_065_MA	radio/sx1276-Fsk.h	509;"	d
RF_OCP_TRIM_070_MA	radio/sx1276-Fsk.h	510;"	d
RF_OCP_TRIM_075_MA	radio/sx1276-Fsk.h	511;"	d
RF_OCP_TRIM_080_MA	radio/sx1276-Fsk.h	512;"	d
RF_OCP_TRIM_085_MA	radio/sx1276-Fsk.h	513;"	d
RF_OCP_TRIM_090_MA	radio/sx1276-Fsk.h	514;"	d
RF_OCP_TRIM_095_MA	radio/sx1276-Fsk.h	515;"	d
RF_OCP_TRIM_100_MA	radio/sx1276-Fsk.h	516;"	d
RF_OCP_TRIM_105_MA	radio/sx1276-Fsk.h	517;"	d
RF_OCP_TRIM_110_MA	radio/sx1276-Fsk.h	518;"	d
RF_OCP_TRIM_115_MA	radio/sx1276-Fsk.h	519;"	d
RF_OCP_TRIM_120_MA	radio/sx1276-Fsk.h	520;"	d
RF_OCP_TRIM_130_MA	radio/sx1276-Fsk.h	521;"	d
RF_OCP_TRIM_140_MA	radio/sx1276-Fsk.h	522;"	d
RF_OCP_TRIM_150_MA	radio/sx1276-Fsk.h	523;"	d
RF_OCP_TRIM_160_MA	radio/sx1276-Fsk.h	524;"	d
RF_OCP_TRIM_170_MA	radio/sx1276-Fsk.h	525;"	d
RF_OCP_TRIM_180_MA	radio/sx1276-Fsk.h	526;"	d
RF_OCP_TRIM_190_MA	radio/sx1276-Fsk.h	527;"	d
RF_OCP_TRIM_200_MA	radio/sx1276-Fsk.h	528;"	d
RF_OCP_TRIM_210_MA	radio/sx1276-Fsk.h	529;"	d
RF_OCP_TRIM_220_MA	radio/sx1276-Fsk.h	530;"	d
RF_OCP_TRIM_230_MA	radio/sx1276-Fsk.h	531;"	d
RF_OCP_TRIM_240_MA	radio/sx1276-Fsk.h	532;"	d
RF_OCP_TRIM_MASK	radio/sx1276-Fsk.h	504;"	d
RF_OOKAVG_AVERAGEOFFSET_0_DB	radio/sx1276-Fsk.h	722;"	d
RF_OOKAVG_AVERAGEOFFSET_2_DB	radio/sx1276-Fsk.h	723;"	d
RF_OOKAVG_AVERAGEOFFSET_4_DB	radio/sx1276-Fsk.h	724;"	d
RF_OOKAVG_AVERAGEOFFSET_6_DB	radio/sx1276-Fsk.h	725;"	d
RF_OOKAVG_AVERAGEOFFSET_MASK	radio/sx1276-Fsk.h	721;"	d
RF_OOKAVG_OOKAVERAGETHRESHFILT_00	radio/sx1276-Fsk.h	728;"	d
RF_OOKAVG_OOKAVERAGETHRESHFILT_01	radio/sx1276-Fsk.h	729;"	d
RF_OOKAVG_OOKAVERAGETHRESHFILT_10	radio/sx1276-Fsk.h	730;"	d
RF_OOKAVG_OOKAVERAGETHRESHFILT_11	radio/sx1276-Fsk.h	731;"	d
RF_OOKAVG_OOKAVERAGETHRESHFILT_MASK	radio/sx1276-Fsk.h	727;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_000	radio/sx1276-Fsk.h	712;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_001	radio/sx1276-Fsk.h	713;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_010	radio/sx1276-Fsk.h	714;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_011	radio/sx1276-Fsk.h	715;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_100	radio/sx1276-Fsk.h	716;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_101	radio/sx1276-Fsk.h	717;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_110	radio/sx1276-Fsk.h	718;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_111	radio/sx1276-Fsk.h	719;"	d
RF_OOKAVG_OOKPEAKTHRESHDEC_MASK	radio/sx1276-Fsk.h	711;"	d
RF_OOKFIX_OOKFIXEDTHRESHOLD	radio/sx1276-Fsk.h	706;"	d
RF_OOKPEAK_BITSYNC_MASK	radio/sx1276-Fsk.h	684;"	d
RF_OOKPEAK_BITSYNC_OFF	radio/sx1276-Fsk.h	686;"	d
RF_OOKPEAK_BITSYNC_ON	radio/sx1276-Fsk.h	685;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_0_5_DB	radio/sx1276-Fsk.h	694;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_1_0_DB	radio/sx1276-Fsk.h	695;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_1_5_DB	radio/sx1276-Fsk.h	696;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_2_0_DB	radio/sx1276-Fsk.h	697;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_3_0_DB	radio/sx1276-Fsk.h	698;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_4_0_DB	radio/sx1276-Fsk.h	699;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_5_0_DB	radio/sx1276-Fsk.h	700;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_6_0_DB	radio/sx1276-Fsk.h	701;"	d
RF_OOKPEAK_OOKPEAKTHRESHSTEP_MASK	radio/sx1276-Fsk.h	693;"	d
RF_OOKPEAK_OOKTHRESHTYPE_AVERAGE	radio/sx1276-Fsk.h	691;"	d
RF_OOKPEAK_OOKTHRESHTYPE_FIXED	radio/sx1276-Fsk.h	689;"	d
RF_OOKPEAK_OOKTHRESHTYPE_MASK	radio/sx1276-Fsk.h	688;"	d
RF_OOKPEAK_OOKTHRESHTYPE_PEAK	radio/sx1276-Fsk.h	690;"	d
RF_OPMODE_FREQMODE_ACCESS_HF	radio/sx1276-Fsk.h	206;"	d
RF_OPMODE_FREQMODE_ACCESS_LF	radio/sx1276-Fsk.h	205;"	d
RF_OPMODE_FREQMODE_ACCESS_MASK	radio/sx1276-Fsk.h	204;"	d
RF_OPMODE_LONGRANGEMODE_MASK	radio/sx1276-Fsk.h	196;"	d
RF_OPMODE_LONGRANGEMODE_OFF	radio/sx1276-Fsk.h	197;"	d
RF_OPMODE_LONGRANGEMODE_ON	radio/sx1276-Fsk.h	198;"	d
RF_OPMODE_MASK	radio/sx1276-Fsk.h	208;"	d
RF_OPMODE_MODULATIONTYPE_FSK	radio/sx1276-Fsk.h	201;"	d
RF_OPMODE_MODULATIONTYPE_MASK	radio/sx1276-Fsk.h	200;"	d
RF_OPMODE_MODULATIONTYPE_OOK	radio/sx1276-Fsk.h	202;"	d
RF_OPMODE_RECEIVER	radio/sx1276-Fsk.h	214;"	d
RF_OPMODE_SLEEP	radio/sx1276-Fsk.h	209;"	d
RF_OPMODE_STANDBY	radio/sx1276-Fsk.h	210;"	d
RF_OPMODE_SYNTHESIZER_RX	radio/sx1276-Fsk.h	213;"	d
RF_OPMODE_SYNTHESIZER_TX	radio/sx1276-Fsk.h	211;"	d
RF_OPMODE_TRANSMITTER	radio/sx1276-Fsk.h	212;"	d
RF_OSC_CLKOUT_16_MHZ	radio/sx1276-Fsk.h	834;"	d
RF_OSC_CLKOUT_1_MHZ	radio/sx1276-Fsk.h	838;"	d
RF_OSC_CLKOUT_2_MHZ	radio/sx1276-Fsk.h	837;"	d
RF_OSC_CLKOUT_32_MHZ	radio/sx1276-Fsk.h	833;"	d
RF_OSC_CLKOUT_4_MHZ	radio/sx1276-Fsk.h	836;"	d
RF_OSC_CLKOUT_8_MHZ	radio/sx1276-Fsk.h	835;"	d
RF_OSC_CLKOUT_MASK	radio/sx1276-Fsk.h	832;"	d
RF_OSC_CLKOUT_OFF	radio/sx1276-Fsk.h	840;"	d
RF_OSC_CLKOUT_RC	radio/sx1276-Fsk.h	839;"	d
RF_OSC_RCCALSTART	radio/sx1276-Fsk.h	830;"	d
RF_PACKETCONFIG1_ADDRSFILTERING_MASK	radio/sx1276-Fsk.h	908;"	d
RF_PACKETCONFIG1_ADDRSFILTERING_NODE	radio/sx1276-Fsk.h	910;"	d
RF_PACKETCONFIG1_ADDRSFILTERING_NODEBROADCAST	radio/sx1276-Fsk.h	911;"	d
RF_PACKETCONFIG1_ADDRSFILTERING_OFF	radio/sx1276-Fsk.h	909;"	d
RF_PACKETCONFIG1_CRCAUTOCLEAR_MASK	radio/sx1276-Fsk.h	904;"	d
RF_PACKETCONFIG1_CRCAUTOCLEAR_OFF	radio/sx1276-Fsk.h	906;"	d
RF_PACKETCONFIG1_CRCAUTOCLEAR_ON	radio/sx1276-Fsk.h	905;"	d
RF_PACKETCONFIG1_CRCWHITENINGTYPE_CCITT	radio/sx1276-Fsk.h	914;"	d
RF_PACKETCONFIG1_CRCWHITENINGTYPE_IBM	radio/sx1276-Fsk.h	915;"	d
RF_PACKETCONFIG1_CRCWHITENINGTYPE_MASK	radio/sx1276-Fsk.h	913;"	d
RF_PACKETCONFIG1_CRC_MASK	radio/sx1276-Fsk.h	900;"	d
RF_PACKETCONFIG1_CRC_OFF	radio/sx1276-Fsk.h	902;"	d
RF_PACKETCONFIG1_CRC_ON	radio/sx1276-Fsk.h	901;"	d
RF_PACKETCONFIG1_DCFREE_MANCHESTER	radio/sx1276-Fsk.h	897;"	d
RF_PACKETCONFIG1_DCFREE_MASK	radio/sx1276-Fsk.h	895;"	d
RF_PACKETCONFIG1_DCFREE_OFF	radio/sx1276-Fsk.h	896;"	d
RF_PACKETCONFIG1_DCFREE_WHITENING	radio/sx1276-Fsk.h	898;"	d
RF_PACKETCONFIG1_PACKETFORMAT_FIXED	radio/sx1276-Fsk.h	892;"	d
RF_PACKETCONFIG1_PACKETFORMAT_MASK	radio/sx1276-Fsk.h	891;"	d
RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE	radio/sx1276-Fsk.h	893;"	d
RF_PACKETCONFIG2_BEACON_MASK	radio/sx1276-Fsk.h	933;"	d
RF_PACKETCONFIG2_BEACON_OFF	radio/sx1276-Fsk.h	935;"	d
RF_PACKETCONFIG2_BEACON_ON	radio/sx1276-Fsk.h	934;"	d
RF_PACKETCONFIG2_DATAMODE_CONTINUOUS	radio/sx1276-Fsk.h	926;"	d
RF_PACKETCONFIG2_DATAMODE_MASK	radio/sx1276-Fsk.h	925;"	d
RF_PACKETCONFIG2_DATAMODE_PACKET	radio/sx1276-Fsk.h	927;"	d
RF_PACKETCONFIG2_IOHOME_MASK	radio/sx1276-Fsk.h	929;"	d
RF_PACKETCONFIG2_IOHOME_OFF	radio/sx1276-Fsk.h	931;"	d
RF_PACKETCONFIG2_IOHOME_ON	radio/sx1276-Fsk.h	930;"	d
RF_PACKETCONFIG2_PAYLOADLENGTH_MSB_MASK	radio/sx1276-Fsk.h	937;"	d
RF_PACKETCONFIG2_WMBUS_CRC_DISABLE	radio/sx1276-Fsk.h	923;"	d
RF_PACKETCONFIG2_WMBUS_CRC_ENABLE	radio/sx1276-Fsk.h	922;"	d
RF_PACKETCONFIG2_WMBUS_CRC_ENABLE_MASK	radio/sx1276-Fsk.h	921;"	d
RF_PACONFIG_MAX_POWER_MASK	radio/sx1276-Fsk.h	462;"	d
RF_PACONFIG_OUTPUTPOWER_MASK	radio/sx1276-Fsk.h	464;"	d
RF_PACONFIG_PASELECT_MASK	radio/sx1276-Fsk.h	458;"	d
RF_PACONFIG_PASELECT_PABOOST	radio/sx1276-Fsk.h	459;"	d
RF_PACONFIG_PASELECT_RFO	radio/sx1276-Fsk.h	460;"	d
RF_PADAC_20DBM_MASK	radio/sx1276-Fsk.h	1212;"	d
RF_PADAC_20DBM_OFF	radio/sx1276-Fsk.h	1214;"	d
RF_PADAC_20DBM_ON	radio/sx1276-Fsk.h	1213;"	d
RF_PARAMP_0010_US	radio/sx1276-Fsk.h	495;"	d
RF_PARAMP_0012_US	radio/sx1276-Fsk.h	494;"	d
RF_PARAMP_0015_US	radio/sx1276-Fsk.h	493;"	d
RF_PARAMP_0020_US	radio/sx1276-Fsk.h	492;"	d
RF_PARAMP_0025_US	radio/sx1276-Fsk.h	491;"	d
RF_PARAMP_0031_US	radio/sx1276-Fsk.h	490;"	d
RF_PARAMP_0040_US	radio/sx1276-Fsk.h	489;"	d
RF_PARAMP_0050_US	radio/sx1276-Fsk.h	488;"	d
RF_PARAMP_0062_US	radio/sx1276-Fsk.h	487;"	d
RF_PARAMP_0100_US	radio/sx1276-Fsk.h	486;"	d
RF_PARAMP_0125_US	radio/sx1276-Fsk.h	485;"	d
RF_PARAMP_0250_US	radio/sx1276-Fsk.h	484;"	d
RF_PARAMP_0500_US	radio/sx1276-Fsk.h	483;"	d
RF_PARAMP_1000_US	radio/sx1276-Fsk.h	482;"	d
RF_PARAMP_2000_US	radio/sx1276-Fsk.h	481;"	d
RF_PARAMP_3400_US	radio/sx1276-Fsk.h	480;"	d
RF_PARAMP_MASK	radio/sx1276-Fsk.h	479;"	d
RF_PARAMP_MODULATIONSHAPING_00	radio/sx1276-Fsk.h	470;"	d
RF_PARAMP_MODULATIONSHAPING_01	radio/sx1276-Fsk.h	471;"	d
RF_PARAMP_MODULATIONSHAPING_10	radio/sx1276-Fsk.h	472;"	d
RF_PARAMP_MODULATIONSHAPING_11	radio/sx1276-Fsk.h	473;"	d
RF_PARAMP_MODULATIONSHAPING_MASK	radio/sx1276-Fsk.h	469;"	d
RF_PARAMP_TXBANDFORCE_AUTO	radio/sx1276-Fsk.h	477;"	d
RF_PARAMP_TXBANDFORCE_BAND_SEL	radio/sx1276-Fsk.h	476;"	d
RF_PARAMP_TXBANDFORCE_MASK	radio/sx1276-Fsk.h	475;"	d
RF_PAYLOADLENGTH_LENGTH	radio/sx1276-Fsk.h	942;"	d
RF_PLLHOP_FASTHOP_MASK	radio/sx1276-Fsk.h	1198;"	d
RF_PLLHOP_FASTHOP_OFF	radio/sx1276-Fsk.h	1200;"	d
RF_PLLHOP_FASTHOP_ON	radio/sx1276-Fsk.h	1199;"	d
RF_PLLLOWPN_BANDWIDTH_150	radio/sx1276-Fsk.h	1230;"	d
RF_PLLLOWPN_BANDWIDTH_225	radio/sx1276-Fsk.h	1231;"	d
RF_PLLLOWPN_BANDWIDTH_300	radio/sx1276-Fsk.h	1232;"	d
RF_PLLLOWPN_BANDWIDTH_75	radio/sx1276-Fsk.h	1229;"	d
RF_PLLLOWPN_BANDWIDTH_MASK	radio/sx1276-Fsk.h	1228;"	d
RF_PLL_BANDWIDTH_150	radio/sx1276-Fsk.h	1221;"	d
RF_PLL_BANDWIDTH_225	radio/sx1276-Fsk.h	1222;"	d
RF_PLL_BANDWIDTH_300	radio/sx1276-Fsk.h	1223;"	d
RF_PLL_BANDWIDTH_75	radio/sx1276-Fsk.h	1220;"	d
RF_PLL_BANDWIDTH_MASK	radio/sx1276-Fsk.h	1219;"	d
RF_PREAMBLEDETECT_DETECTORSIZE_1	radio/sx1276-Fsk.h	768;"	d
RF_PREAMBLEDETECT_DETECTORSIZE_2	radio/sx1276-Fsk.h	769;"	d
RF_PREAMBLEDETECT_DETECTORSIZE_3	radio/sx1276-Fsk.h	770;"	d
RF_PREAMBLEDETECT_DETECTORSIZE_4	radio/sx1276-Fsk.h	771;"	d
RF_PREAMBLEDETECT_DETECTORSIZE_MASK	radio/sx1276-Fsk.h	767;"	d
RF_PREAMBLEDETECT_DETECTORTOL_0	radio/sx1276-Fsk.h	774;"	d
RF_PREAMBLEDETECT_DETECTORTOL_1	radio/sx1276-Fsk.h	775;"	d
RF_PREAMBLEDETECT_DETECTORTOL_10	radio/sx1276-Fsk.h	784;"	d
RF_PREAMBLEDETECT_DETECTORTOL_11	radio/sx1276-Fsk.h	785;"	d
RF_PREAMBLEDETECT_DETECTORTOL_12	radio/sx1276-Fsk.h	786;"	d
RF_PREAMBLEDETECT_DETECTORTOL_13	radio/sx1276-Fsk.h	787;"	d
RF_PREAMBLEDETECT_DETECTORTOL_14	radio/sx1276-Fsk.h	788;"	d
RF_PREAMBLEDETECT_DETECTORTOL_15	radio/sx1276-Fsk.h	789;"	d
RF_PREAMBLEDETECT_DETECTORTOL_16	radio/sx1276-Fsk.h	790;"	d
RF_PREAMBLEDETECT_DETECTORTOL_17	radio/sx1276-Fsk.h	791;"	d
RF_PREAMBLEDETECT_DETECTORTOL_18	radio/sx1276-Fsk.h	792;"	d
RF_PREAMBLEDETECT_DETECTORTOL_19	radio/sx1276-Fsk.h	793;"	d
RF_PREAMBLEDETECT_DETECTORTOL_2	radio/sx1276-Fsk.h	776;"	d
RF_PREAMBLEDETECT_DETECTORTOL_20	radio/sx1276-Fsk.h	794;"	d
RF_PREAMBLEDETECT_DETECTORTOL_21	radio/sx1276-Fsk.h	795;"	d
RF_PREAMBLEDETECT_DETECTORTOL_22	radio/sx1276-Fsk.h	796;"	d
RF_PREAMBLEDETECT_DETECTORTOL_23	radio/sx1276-Fsk.h	797;"	d
RF_PREAMBLEDETECT_DETECTORTOL_24	radio/sx1276-Fsk.h	798;"	d
RF_PREAMBLEDETECT_DETECTORTOL_25	radio/sx1276-Fsk.h	799;"	d
RF_PREAMBLEDETECT_DETECTORTOL_26	radio/sx1276-Fsk.h	800;"	d
RF_PREAMBLEDETECT_DETECTORTOL_27	radio/sx1276-Fsk.h	801;"	d
RF_PREAMBLEDETECT_DETECTORTOL_28	radio/sx1276-Fsk.h	802;"	d
RF_PREAMBLEDETECT_DETECTORTOL_29	radio/sx1276-Fsk.h	803;"	d
RF_PREAMBLEDETECT_DETECTORTOL_3	radio/sx1276-Fsk.h	777;"	d
RF_PREAMBLEDETECT_DETECTORTOL_30	radio/sx1276-Fsk.h	804;"	d
RF_PREAMBLEDETECT_DETECTORTOL_31	radio/sx1276-Fsk.h	805;"	d
RF_PREAMBLEDETECT_DETECTORTOL_4	radio/sx1276-Fsk.h	778;"	d
RF_PREAMBLEDETECT_DETECTORTOL_5	radio/sx1276-Fsk.h	779;"	d
RF_PREAMBLEDETECT_DETECTORTOL_6	radio/sx1276-Fsk.h	780;"	d
RF_PREAMBLEDETECT_DETECTORTOL_7	radio/sx1276-Fsk.h	781;"	d
RF_PREAMBLEDETECT_DETECTORTOL_8	radio/sx1276-Fsk.h	782;"	d
RF_PREAMBLEDETECT_DETECTORTOL_9	radio/sx1276-Fsk.h	783;"	d
RF_PREAMBLEDETECT_DETECTORTOL_MASK	radio/sx1276-Fsk.h	773;"	d
RF_PREAMBLEDETECT_DETECTOR_MASK	radio/sx1276-Fsk.h	763;"	d
RF_PREAMBLEDETECT_DETECTOR_OFF	radio/sx1276-Fsk.h	765;"	d
RF_PREAMBLEDETECT_DETECTOR_ON	radio/sx1276-Fsk.h	764;"	d
RF_PREAMBLELSB_SIZE	radio/sx1276-Fsk.h	846;"	d
RF_PREAMBLEMSB_SIZE	radio/sx1276-Fsk.h	845;"	d
RF_RSSICOLISION_THRESHOLD	radio/sx1276-Fsk.h	634;"	d
RF_RSSICONFIG_OFFSET_MASK	radio/sx1276-Fsk.h	587;"	d
RF_RSSICONFIG_OFFSET_M_01_DB	radio/sx1276-Fsk.h	619;"	d
RF_RSSICONFIG_OFFSET_M_02_DB	radio/sx1276-Fsk.h	618;"	d
RF_RSSICONFIG_OFFSET_M_03_DB	radio/sx1276-Fsk.h	617;"	d
RF_RSSICONFIG_OFFSET_M_04_DB	radio/sx1276-Fsk.h	616;"	d
RF_RSSICONFIG_OFFSET_M_05_DB	radio/sx1276-Fsk.h	615;"	d
RF_RSSICONFIG_OFFSET_M_06_DB	radio/sx1276-Fsk.h	614;"	d
RF_RSSICONFIG_OFFSET_M_07_DB	radio/sx1276-Fsk.h	613;"	d
RF_RSSICONFIG_OFFSET_M_08_DB	radio/sx1276-Fsk.h	612;"	d
RF_RSSICONFIG_OFFSET_M_09_DB	radio/sx1276-Fsk.h	611;"	d
RF_RSSICONFIG_OFFSET_M_10_DB	radio/sx1276-Fsk.h	610;"	d
RF_RSSICONFIG_OFFSET_M_11_DB	radio/sx1276-Fsk.h	609;"	d
RF_RSSICONFIG_OFFSET_M_12_DB	radio/sx1276-Fsk.h	608;"	d
RF_RSSICONFIG_OFFSET_M_13_DB	radio/sx1276-Fsk.h	607;"	d
RF_RSSICONFIG_OFFSET_M_14_DB	radio/sx1276-Fsk.h	606;"	d
RF_RSSICONFIG_OFFSET_M_15_DB	radio/sx1276-Fsk.h	605;"	d
RF_RSSICONFIG_OFFSET_M_16_DB	radio/sx1276-Fsk.h	604;"	d
RF_RSSICONFIG_OFFSET_P_00_DB	radio/sx1276-Fsk.h	588;"	d
RF_RSSICONFIG_OFFSET_P_01_DB	radio/sx1276-Fsk.h	589;"	d
RF_RSSICONFIG_OFFSET_P_02_DB	radio/sx1276-Fsk.h	590;"	d
RF_RSSICONFIG_OFFSET_P_03_DB	radio/sx1276-Fsk.h	591;"	d
RF_RSSICONFIG_OFFSET_P_04_DB	radio/sx1276-Fsk.h	592;"	d
RF_RSSICONFIG_OFFSET_P_05_DB	radio/sx1276-Fsk.h	593;"	d
RF_RSSICONFIG_OFFSET_P_06_DB	radio/sx1276-Fsk.h	594;"	d
RF_RSSICONFIG_OFFSET_P_07_DB	radio/sx1276-Fsk.h	595;"	d
RF_RSSICONFIG_OFFSET_P_08_DB	radio/sx1276-Fsk.h	596;"	d
RF_RSSICONFIG_OFFSET_P_09_DB	radio/sx1276-Fsk.h	597;"	d
RF_RSSICONFIG_OFFSET_P_10_DB	radio/sx1276-Fsk.h	598;"	d
RF_RSSICONFIG_OFFSET_P_11_DB	radio/sx1276-Fsk.h	599;"	d
RF_RSSICONFIG_OFFSET_P_12_DB	radio/sx1276-Fsk.h	600;"	d
RF_RSSICONFIG_OFFSET_P_13_DB	radio/sx1276-Fsk.h	601;"	d
RF_RSSICONFIG_OFFSET_P_14_DB	radio/sx1276-Fsk.h	602;"	d
RF_RSSICONFIG_OFFSET_P_15_DB	radio/sx1276-Fsk.h	603;"	d
RF_RSSICONFIG_SMOOTHING_128	radio/sx1276-Fsk.h	628;"	d
RF_RSSICONFIG_SMOOTHING_16	radio/sx1276-Fsk.h	625;"	d
RF_RSSICONFIG_SMOOTHING_2	radio/sx1276-Fsk.h	622;"	d
RF_RSSICONFIG_SMOOTHING_256	radio/sx1276-Fsk.h	629;"	d
RF_RSSICONFIG_SMOOTHING_32	radio/sx1276-Fsk.h	626;"	d
RF_RSSICONFIG_SMOOTHING_4	radio/sx1276-Fsk.h	623;"	d
RF_RSSICONFIG_SMOOTHING_64	radio/sx1276-Fsk.h	627;"	d
RF_RSSICONFIG_SMOOTHING_8	radio/sx1276-Fsk.h	624;"	d
RF_RSSICONFIG_SMOOTHING_MASK	radio/sx1276-Fsk.h	621;"	d
RF_RSSITHRESH_THRESHOLD	radio/sx1276-Fsk.h	639;"	d
RF_RXBW_EXP_0	radio/sx1276-Fsk.h	654;"	d
RF_RXBW_EXP_1	radio/sx1276-Fsk.h	655;"	d
RF_RXBW_EXP_2	radio/sx1276-Fsk.h	656;"	d
RF_RXBW_EXP_3	radio/sx1276-Fsk.h	657;"	d
RF_RXBW_EXP_4	radio/sx1276-Fsk.h	658;"	d
RF_RXBW_EXP_5	radio/sx1276-Fsk.h	659;"	d
RF_RXBW_EXP_6	radio/sx1276-Fsk.h	660;"	d
RF_RXBW_EXP_7	radio/sx1276-Fsk.h	661;"	d
RF_RXBW_EXP_MASK	radio/sx1276-Fsk.h	653;"	d
RF_RXBW_MANT_16	radio/sx1276-Fsk.h	649;"	d
RF_RXBW_MANT_20	radio/sx1276-Fsk.h	650;"	d
RF_RXBW_MANT_24	radio/sx1276-Fsk.h	651;"	d
RF_RXBW_MANT_MASK	radio/sx1276-Fsk.h	648;"	d
RF_RXCONFIG_AFCAUTO_MASK	radio/sx1276-Fsk.h	570;"	d
RF_RXCONFIG_AFCAUTO_OFF	radio/sx1276-Fsk.h	572;"	d
RF_RXCONFIG_AFCAUTO_ON	radio/sx1276-Fsk.h	571;"	d
RF_RXCONFIG_AGCAUTO_MASK	radio/sx1276-Fsk.h	574;"	d
RF_RXCONFIG_AGCAUTO_OFF	radio/sx1276-Fsk.h	576;"	d
RF_RXCONFIG_AGCAUTO_ON	radio/sx1276-Fsk.h	575;"	d
RF_RXCONFIG_RESTARTRXONCOLLISION_MASK	radio/sx1276-Fsk.h	562;"	d
RF_RXCONFIG_RESTARTRXONCOLLISION_OFF	radio/sx1276-Fsk.h	564;"	d
RF_RXCONFIG_RESTARTRXONCOLLISION_ON	radio/sx1276-Fsk.h	563;"	d
RF_RXCONFIG_RESTARTRXWITHOUTPLLLOCK	radio/sx1276-Fsk.h	566;"	d
RF_RXCONFIG_RESTARTRXWITHPLLLOCK	radio/sx1276-Fsk.h	568;"	d
RF_RXCONFIG_RXTRIGER_MASK	radio/sx1276-Fsk.h	578;"	d
RF_RXCONFIG_RXTRIGER_OFF	radio/sx1276-Fsk.h	579;"	d
RF_RXCONFIG_RXTRIGER_PREAMBLEDETECT	radio/sx1276-Fsk.h	581;"	d
RF_RXCONFIG_RXTRIGER_RSSI	radio/sx1276-Fsk.h	580;"	d
RF_RXCONFIG_RXTRIGER_RSSI_PREAMBLEDETECT	radio/sx1276-Fsk.h	582;"	d
RF_RXDELAY_INTERPACKETRXDELAY	radio/sx1276-Fsk.h	825;"	d
RF_RXTIMEOUT1_TIMEOUTRXRSSI	radio/sx1276-Fsk.h	810;"	d
RF_RXTIMEOUT2_TIMEOUTRXPREAMBLE	radio/sx1276-Fsk.h	815;"	d
RF_RXTIMEOUT3_TIMEOUTSIGNALSYNC	radio/sx1276-Fsk.h	820;"	d
RF_RX_DONE	radio/sx1276-LoRa.h	/^    RF_RX_DONE,  \/\/receive successed$/;"	e	enum:__anon484
RF_RecvHandler	radio/radio.c	/^void RF_RecvHandler(void)$/;"	f
RF_SEQCONFIG1_FROMIDLE_MASK	radio/sx1276-Fsk.h	985;"	d
RF_SEQCONFIG1_FROMIDLE_TORX	radio/sx1276-Fsk.h	987;"	d
RF_SEQCONFIG1_FROMIDLE_TOTX	radio/sx1276-Fsk.h	986;"	d
RF_SEQCONFIG1_FROMSTART_MASK	radio/sx1276-Fsk.h	975;"	d
RF_SEQCONFIG1_FROMSTART_TOLPS	radio/sx1276-Fsk.h	976;"	d
RF_SEQCONFIG1_FROMSTART_TORX	radio/sx1276-Fsk.h	977;"	d
RF_SEQCONFIG1_FROMSTART_TOTX	radio/sx1276-Fsk.h	978;"	d
RF_SEQCONFIG1_FROMSTART_TOTX_ONFIFOLEVEL	radio/sx1276-Fsk.h	979;"	d
RF_SEQCONFIG1_FROMTX_MASK	radio/sx1276-Fsk.h	989;"	d
RF_SEQCONFIG1_FROMTX_TOLPS	radio/sx1276-Fsk.h	990;"	d
RF_SEQCONFIG1_FROMTX_TORX	radio/sx1276-Fsk.h	991;"	d
RF_SEQCONFIG1_IDLEMODE_MASK	radio/sx1276-Fsk.h	971;"	d
RF_SEQCONFIG1_IDLEMODE_SLEEP	radio/sx1276-Fsk.h	972;"	d
RF_SEQCONFIG1_IDLEMODE_STANDBY	radio/sx1276-Fsk.h	973;"	d
RF_SEQCONFIG1_LPS_IDLE	radio/sx1276-Fsk.h	983;"	d
RF_SEQCONFIG1_LPS_MASK	radio/sx1276-Fsk.h	981;"	d
RF_SEQCONFIG1_LPS_SEQUENCER_OFF	radio/sx1276-Fsk.h	982;"	d
RF_SEQCONFIG1_SEQUENCER_START	radio/sx1276-Fsk.h	967;"	d
RF_SEQCONFIG1_SEQUENCER_STOP	radio/sx1276-Fsk.h	969;"	d
RF_SEQCONFIG2_FROMRXPKT_MASK	radio/sx1276-Fsk.h	1012;"	d
RF_SEQCONFIG2_FROMRXPKT_TOLPS	radio/sx1276-Fsk.h	1015;"	d
RF_SEQCONFIG2_FROMRXPKT_TORX	radio/sx1276-Fsk.h	1017;"	d
RF_SEQCONFIG2_FROMRXPKT_TOSEQUENCEROFF	radio/sx1276-Fsk.h	1013;"	d
RF_SEQCONFIG2_FROMRXPKT_TOSYNTHESIZERRX	radio/sx1276-Fsk.h	1016;"	d
RF_SEQCONFIG2_FROMRXPKT_TOTX_ONFIFOEMPTY	radio/sx1276-Fsk.h	1014;"	d
RF_SEQCONFIG2_FROMRXTIMEOUT_MASK	radio/sx1276-Fsk.h	1006;"	d
RF_SEQCONFIG2_FROMRXTIMEOUT_TOLPS	radio/sx1276-Fsk.h	1009;"	d
RF_SEQCONFIG2_FROMRXTIMEOUT_TORXRESTART	radio/sx1276-Fsk.h	1007;"	d
RF_SEQCONFIG2_FROMRXTIMEOUT_TOSEQUENCEROFF	radio/sx1276-Fsk.h	1010;"	d
RF_SEQCONFIG2_FROMRXTIMEOUT_TOTX	radio/sx1276-Fsk.h	1008;"	d
RF_SEQCONFIG2_FROMRX_MASK	radio/sx1276-Fsk.h	996;"	d
RF_SEQCONFIG2_FROMRX_TOLPS_ONPLDRDY	radio/sx1276-Fsk.h	999;"	d
RF_SEQCONFIG2_FROMRX_TORXPKT_ONCRCOK	radio/sx1276-Fsk.h	1000;"	d
RF_SEQCONFIG2_FROMRX_TORXPKT_ONPLDRDY	radio/sx1276-Fsk.h	998;"	d
RF_SEQCONFIG2_FROMRX_TOSEQUENCEROFF_ONPREAMBLE	radio/sx1276-Fsk.h	1003;"	d
RF_SEQCONFIG2_FROMRX_TOSEQUENCEROFF_ONRSSI	radio/sx1276-Fsk.h	1001;"	d
RF_SEQCONFIG2_FROMRX_TOSEQUENCEROFF_ONSYNC	radio/sx1276-Fsk.h	1002;"	d
RF_SEQCONFIG2_FROMRX_TOUNUSED_000	radio/sx1276-Fsk.h	997;"	d
RF_SEQCONFIG2_FROMRX_TOUNUSED_111	radio/sx1276-Fsk.h	1004;"	d
RF_STATE	radio/sx1276-LoRa.h	/^}RF_STATE;$/;"	t	typeref:enum:__anon484
RF_SYNCCONFIG_AUTORESTARTRXMODE_MASK	radio/sx1276-Fsk.h	851;"	d
RF_SYNCCONFIG_AUTORESTARTRXMODE_OFF	radio/sx1276-Fsk.h	854;"	d
RF_SYNCCONFIG_AUTORESTARTRXMODE_WAITPLL_OFF	radio/sx1276-Fsk.h	853;"	d
RF_SYNCCONFIG_AUTORESTARTRXMODE_WAITPLL_ON	radio/sx1276-Fsk.h	852;"	d
RF_SYNCCONFIG_PREAMBLEPOLARITY_55	radio/sx1276-Fsk.h	858;"	d
RF_SYNCCONFIG_PREAMBLEPOLARITY_AA	radio/sx1276-Fsk.h	859;"	d
RF_SYNCCONFIG_PREAMBLEPOLARITY_MASK	radio/sx1276-Fsk.h	857;"	d
RF_SYNCCONFIG_SYNCSIZE_1	radio/sx1276-Fsk.h	867;"	d
RF_SYNCCONFIG_SYNCSIZE_2	radio/sx1276-Fsk.h	868;"	d
RF_SYNCCONFIG_SYNCSIZE_3	radio/sx1276-Fsk.h	869;"	d
RF_SYNCCONFIG_SYNCSIZE_4	radio/sx1276-Fsk.h	870;"	d
RF_SYNCCONFIG_SYNCSIZE_5	radio/sx1276-Fsk.h	871;"	d
RF_SYNCCONFIG_SYNCSIZE_6	radio/sx1276-Fsk.h	872;"	d
RF_SYNCCONFIG_SYNCSIZE_7	radio/sx1276-Fsk.h	873;"	d
RF_SYNCCONFIG_SYNCSIZE_8	radio/sx1276-Fsk.h	874;"	d
RF_SYNCCONFIG_SYNCSIZE_MASK	radio/sx1276-Fsk.h	866;"	d
RF_SYNCCONFIG_SYNC_MASK	radio/sx1276-Fsk.h	861;"	d
RF_SYNCCONFIG_SYNC_OFF	radio/sx1276-Fsk.h	863;"	d
RF_SYNCCONFIG_SYNC_ON	radio/sx1276-Fsk.h	862;"	d
RF_SYNCVALUE1_SYNCVALUE	radio/sx1276-Fsk.h	879;"	d
RF_SYNCVALUE2_SYNCVALUE	radio/sx1276-Fsk.h	880;"	d
RF_SYNCVALUE3_SYNCVALUE	radio/sx1276-Fsk.h	881;"	d
RF_SYNCVALUE4_SYNCVALUE	radio/sx1276-Fsk.h	882;"	d
RF_SYNCVALUE5_SYNCVALUE	radio/sx1276-Fsk.h	883;"	d
RF_SYNCVALUE6_SYNCVALUE	radio/sx1276-Fsk.h	884;"	d
RF_SYNCVALUE7_SYNCVALUE	radio/sx1276-Fsk.h	885;"	d
RF_SYNCVALUE8_SYNCVALUE	radio/sx1276-Fsk.h	886;"	d
RF_TCXO_TCXOINPUT_MASK	radio/sx1276-Fsk.h	1205;"	d
RF_TCXO_TCXOINPUT_OFF	radio/sx1276-Fsk.h	1207;"	d
RF_TCXO_TCXOINPUT_ON	radio/sx1276-Fsk.h	1206;"	d
RF_TIMER1COEF_TIMER1COEFFICIENT	radio/sx1276-Fsk.h	1037;"	d
RF_TIMER2COEF_TIMER2COEFFICIENT	radio/sx1276-Fsk.h	1042;"	d
RF_TIMERRESOL_TIMER1RESOL_000064_US	radio/sx1276-Fsk.h	1024;"	d
RF_TIMERRESOL_TIMER1RESOL_004100_US	radio/sx1276-Fsk.h	1025;"	d
RF_TIMERRESOL_TIMER1RESOL_262000_US	radio/sx1276-Fsk.h	1026;"	d
RF_TIMERRESOL_TIMER1RESOL_MASK	radio/sx1276-Fsk.h	1022;"	d
RF_TIMERRESOL_TIMER1RESOL_OFF	radio/sx1276-Fsk.h	1023;"	d
RF_TIMERRESOL_TIMER2RESOL_000064_US	radio/sx1276-Fsk.h	1030;"	d
RF_TIMERRESOL_TIMER2RESOL_004100_US	radio/sx1276-Fsk.h	1031;"	d
RF_TIMERRESOL_TIMER2RESOL_262000_US	radio/sx1276-Fsk.h	1032;"	d
RF_TIMERRESOL_TIMER2RESOL_MASK	radio/sx1276-Fsk.h	1028;"	d
RF_TIMERRESOL_TIMER2RESOL_OFF	radio/sx1276-Fsk.h	1029;"	d
RHs	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long RHs[16] =$/;"	v	file:
RINTSTS	device/LPC54018.h	/^  __IO uint32_t RINTSTS;                           \/**< Raw Interrupt Status register, offset: 0x44 *\/$/;"	m	struct:__anon177
RISE	device/LPC54018.h	/^  __IO uint32_t RISE;                              \/**< Pin interrupt rising edge register, offset: 0x1C *\/$/;"	m	struct:__anon169
RIT	device/LPC54018.h	8232;"	d
RIT_BASE	device/LPC54018.h	8230;"	d
RIT_BASE_ADDRS	device/LPC54018.h	8234;"	d
RIT_BASE_PTRS	device/LPC54018.h	8236;"	d
RIT_CLOCKS	drivers/fsl_clock.h	151;"	d
RIT_COMPVAL_H_RICOMP	device/LPC54018.h	8205;"	d
RIT_COMPVAL_H_RICOMP_MASK	device/LPC54018.h	8203;"	d
RIT_COMPVAL_H_RICOMP_SHIFT	device/LPC54018.h	8204;"	d
RIT_COMPVAL_RICOMP	device/LPC54018.h	8168;"	d
RIT_COMPVAL_RICOMP_MASK	device/LPC54018.h	8166;"	d
RIT_COMPVAL_RICOMP_SHIFT	device/LPC54018.h	8167;"	d
RIT_COUNTER_H_RICOUNTER	device/LPC54018.h	8219;"	d
RIT_COUNTER_H_RICOUNTER_MASK	device/LPC54018.h	8217;"	d
RIT_COUNTER_H_RICOUNTER_SHIFT	device/LPC54018.h	8218;"	d
RIT_COUNTER_RICOUNTER	device/LPC54018.h	8198;"	d
RIT_COUNTER_RICOUNTER_MASK	device/LPC54018.h	8196;"	d
RIT_COUNTER_RICOUNTER_SHIFT	device/LPC54018.h	8197;"	d
RIT_CTRL_RITEN	device/LPC54018.h	8191;"	d
RIT_CTRL_RITENBR	device/LPC54018.h	8188;"	d
RIT_CTRL_RITENBR_MASK	device/LPC54018.h	8186;"	d
RIT_CTRL_RITENBR_SHIFT	device/LPC54018.h	8187;"	d
RIT_CTRL_RITENCLR	device/LPC54018.h	8185;"	d
RIT_CTRL_RITENCLR_MASK	device/LPC54018.h	8183;"	d
RIT_CTRL_RITENCLR_SHIFT	device/LPC54018.h	8184;"	d
RIT_CTRL_RITEN_MASK	device/LPC54018.h	8189;"	d
RIT_CTRL_RITEN_SHIFT	device/LPC54018.h	8190;"	d
RIT_CTRL_RITINT	device/LPC54018.h	8182;"	d
RIT_CTRL_RITINT_MASK	device/LPC54018.h	8180;"	d
RIT_CTRL_RITINT_SHIFT	device/LPC54018.h	8181;"	d
RIT_IRQHandler	startup/startup_lpc54018.c	/^WEAK void RIT_IRQHandler(void)$/;"	f
RIT_IRQS	device/LPC54018.h	8238;"	d
RIT_IRQn	device/LPC54018.h	/^  RIT_IRQn                     = 38,               \/**< Repetitive Interrupt Timer *\/$/;"	e	enum:IRQn
RIT_MASK_H_RIMASK	device/LPC54018.h	8212;"	d
RIT_MASK_H_RIMASK_MASK	device/LPC54018.h	8210;"	d
RIT_MASK_H_RIMASK_SHIFT	device/LPC54018.h	8211;"	d
RIT_MASK_RIMASK	device/LPC54018.h	8175;"	d
RIT_MASK_RIMASK_MASK	device/LPC54018.h	8173;"	d
RIT_MASK_RIMASK_SHIFT	device/LPC54018.h	8174;"	d
RIT_Type	device/LPC54018.h	/^} RIT_Type;$/;"	t	typeref:struct:__anon170
RLAR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t RLAR;                   \/*!< Offset: 0x010 (R\/W)  MPU Region Limit Address Register *\/$/;"	m	struct:__anon126
RLAR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t RLAR;                   \/*!< Offset: 0x010 (R\/W)  SAU Region Limit Address Register *\/$/;"	m	struct:__anon129
RLAR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RLAR;                   \/*!< Offset: 0x010 (R\/W)  MPU Region Limit Address Register *\/$/;"	m	struct:__anon25
RLAR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RLAR;                   \/*!< Offset: 0x010 (R\/W)  SAU Region Limit Address Register *\/$/;"	m	struct:__anon28
RLAR	CMSIS/mpu_armv8.h	/^  uint32_t RLAR;                   \/*!< Region Limit Address Register value *\/$/;"	m	struct:__anon8
RLAR_A1	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RLAR_A1;                \/*!< Offset: 0x018 (R\/W)  MPU Region Limit Address Register Alias 1 *\/$/;"	m	struct:__anon25
RLAR_A2	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RLAR_A2;                \/*!< Offset: 0x020 (R\/W)  MPU Region Limit Address Register Alias 2 *\/$/;"	m	struct:__anon25
RLAR_A3	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RLAR_A3;                \/*!< Offset: 0x028 (R\/W)  MPU Region Limit Address Register Alias 3 *\/$/;"	m	struct:__anon25
RM	Debug/makefile	/^RM := rm -rf$/;"	m
RNDIS_AF_LIST_OFFSET	usb/device/class/usb_device_cdc_rndis.h	354;"	d
RNDIS_AF_LIST_SIZE	usb/device/class/usb_device_cdc_rndis.h	355;"	d
RNDIS_DATA_INITIALIZED	usb/device/class/usb_device_cdc_rndis.h	/^    RNDIS_DATA_INITIALIZED,$/;"	e	enum:_rndis_state_enum
RNDIS_DF_CONNECTIONLESS	usb/device/class/usb_device_cdc_rndis.h	313;"	d
RNDIS_DF_CONNECTION_ORIENTED	usb/device/class/usb_device_cdc_rndis.h	315;"	d
RNDIS_ETHER_ADDR_SIZE	usb/device/class/usb_device_cdc_rndis.h	359;"	d
RNDIS_HALT_MSG	usb/device/class/usb_device_cdc_rndis.h	27;"	d
RNDIS_INDICATE_STATUS_MSG	usb/device/class/usb_device_cdc_rndis.h	31;"	d
RNDIS_INITIALIZED	usb/device/class/usb_device_cdc_rndis.h	/^    RNDIS_INITIALIZED,$/;"	e	enum:_rndis_state_enum
RNDIS_INITIALIZE_CMPLT	usb/device/class/usb_device_cdc_rndis.h	33;"	d
RNDIS_INITIALIZE_MSG	usb/device/class/usb_device_cdc_rndis.h	26;"	d
RNDIS_KEEPALIVE_CMPLT	usb/device/class/usb_device_cdc_rndis.h	37;"	d
RNDIS_KEEPALIVE_MSG	usb/device/class/usb_device_cdc_rndis.h	32;"	d
RNDIS_MAX_EXPECTED_COMMAND_SIZE	usb/device/class/usb_device_cdc_rndis.h	341;"	d
RNDIS_MAX_EXPECTED_RESPONSE_SIZE	usb/device/class/usb_device_cdc_rndis.h	348;"	d
RNDIS_MULTICAST_LIST_SIZE	usb/device/class/usb_device_cdc_rndis.h	364;"	d
RNDIS_NIC_IDENTIFIER_VENDOR	usb/device/class/usb_device_cdc_rndis.h	325;"	d
RNDIS_NUM_OIDS_SUPPORTED	usb/device/class/usb_device_cdc_rndis.h	321;"	d
RNDIS_PACKET_ALIGNMENT_FACTOR	usb/device/class/usb_device_cdc_rndis.h	319;"	d
RNDIS_PACKET_MSG	usb/device/class/usb_device_cdc_rndis.h	25;"	d
RNDIS_QUERY_CMPLT	usb/device/class/usb_device_cdc_rndis.h	34;"	d
RNDIS_QUERY_MSG	usb/device/class/usb_device_cdc_rndis.h	28;"	d
RNDIS_RESET_CMPLT	usb/device/class/usb_device_cdc_rndis.h	36;"	d
RNDIS_RESET_MSG	usb/device/class/usb_device_cdc_rndis.h	30;"	d
RNDIS_RESPONSE_INITIALIZE_MSG_SIZE	usb/device/class/usb_device_cdc_rndis.h	301;"	d
RNDIS_RESPONSE_KEEPALIVE_MSG_SIZE	usb/device/class/usb_device_cdc_rndis.h	309;"	d
RNDIS_RESPONSE_QUERY_MSG_SIZE	usb/device/class/usb_device_cdc_rndis.h	303;"	d
RNDIS_RESPONSE_RESET_MSG_SIZE	usb/device/class/usb_device_cdc_rndis.h	307;"	d
RNDIS_RESPONSE_SET_MSG_SIZE	usb/device/class/usb_device_cdc_rndis.h	305;"	d
RNDIS_SET_CMPLT	usb/device/class/usb_device_cdc_rndis.h	35;"	d
RNDIS_SET_MSG	usb/device/class/usb_device_cdc_rndis.h	29;"	d
RNDIS_SINGLE_PACKET_TRANSFER	usb/device/class/usb_device_cdc_rndis.h	317;"	d
RNDIS_STATUS_BUFFER_TOO_SHORT	usb/device/class/usb_device_cdc_rndis.h	280;"	d
RNDIS_STATUS_CLOSING	usb/device/class/usb_device_cdc_rndis.h	265;"	d
RNDIS_STATUS_CLOSING_INDICATING	usb/device/class/usb_device_cdc_rndis.h	267;"	d
RNDIS_STATUS_FAILURE	usb/device/class/usb_device_cdc_rndis.h	257;"	d
RNDIS_STATUS_INVALID_DATA	usb/device/class/usb_device_cdc_rndis.h	284;"	d
RNDIS_STATUS_INVALID_LENGTH	usb/device/class/usb_device_cdc_rndis.h	278;"	d
RNDIS_STATUS_INVALID_OID	usb/device/class/usb_device_cdc_rndis.h	288;"	d
RNDIS_STATUS_MEDIA_CONNECT	usb/device/class/usb_device_cdc_rndis.h	290;"	d
RNDIS_STATUS_MEDIA_DISCONNECT	usb/device/class/usb_device_cdc_rndis.h	292;"	d
RNDIS_STATUS_NOT_ACCEPTED	usb/device/class/usb_device_cdc_rndis.h	253;"	d
RNDIS_STATUS_NOT_RECOGNIZED	usb/device/class/usb_device_cdc_rndis.h	246;"	d
RNDIS_STATUS_NOT_SUPPORTED	usb/device/class/usb_device_cdc_rndis.h	248;"	d
RNDIS_STATUS_RESET_IN_PROGRESS	usb/device/class/usb_device_cdc_rndis.h	271;"	d
RNDIS_STATUS_RESOURCES	usb/device/class/usb_device_cdc_rndis.h	263;"	d
RNDIS_STATUS_SUCCESS	usb/device/class/usb_device_cdc_rndis.h	244;"	d
RNDIS_UNINITIALIZED	usb/device/class/usb_device_cdc_rndis.h	/^    RNDIS_UNINITIALIZED = 0,$/;"	e	enum:_rndis_state_enum
RNDIS_USB_HEADER_SIZE	usb/device/class/usb_device_cdc_rndis.h	362;"	d
RNDIS_VENDOR_ID	usb/device/class/usb_device_cdc_rndis.h	323;"	d
RNG_CLOCKS	drivers/fsl_clock.h	247;"	d
RNG_GetRandomData	drivers/fsl_rng.h	/^static inline uint32_t RNG_GetRandomData(void)$/;"	f
RNG_RSTS	drivers/fsl_reset.h	179;"	d
RNR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t RNR;                    \/*!< Offset: 0x008 (R\/W)  MPU Region Number Register *\/$/;"	m	struct:__anon126
RNR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t RNR;                    \/*!< Offset: 0x008 (R\/W)  SAU Region Number Register *\/$/;"	m	struct:__anon129
RNR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RNR;                    \/*!< Offset: 0x008 (R\/W)  MPU Region Number Register *\/$/;"	m	struct:__anon25
RNR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t RNR;                    \/*!< Offset: 0x008 (R\/W)  SAU Region Number Register *\/$/;"	m	struct:__anon28
RNR	CMSIS/core_cm4.h	/^  __IOM uint32_t RNR;                    \/*!< Offset: 0x008 (R\/W)  MPU Region RNRber Register *\/$/;"	m	struct:__anon47
ROM_API	device/LPC54018.h	15724;"	d
ROM_API_BASE	device/LPC54018.h	15722;"	d
ROM_API_Type	device/LPC54018.h	/^} ROM_API_Type;$/;"	t	typeref:struct:__anon194
ROM_CLOCKS	drivers/fsl_clock.h	66;"	d
ROUTER_ALERT	lwip/src/include/lwip/prot/igmp.h	52;"	d
ROUTER_ALERTLEN	lwip/src/include/lwip/prot/igmp.h	53;"	d
RREQ_REPEAT	lwip/src/netif/ppp/ccp.c	269;"	d	file:
RSERVED1	CMSIS/core_armv8mbl.h	/^        uint32_t RSERVED1[16U];$/;"	m	struct:__anon121
RSERVED1	CMSIS/core_armv8mml.h	/^        uint32_t RSERVED1[16U];$/;"	m	struct:__anon17
RSERVED1	CMSIS/core_cm4.h	/^        uint32_t RSERVED1[24U];$/;"	m	struct:__anon39
RST_N	device/LPC54018.h	/^  __IO uint32_t RST_N;                             \/**< Hardware Reset, offset: 0x78 *\/$/;"	m	struct:__anon177
RTC	device/LPC54018.h	8383;"	d
RTCOSCCTRL	device/LPC54018.h	/^  __IO uint32_t RTCOSCCTRL;                        \/**< RTC oscillator 32 kHz output control, offset: 0x50C *\/$/;"	m	struct:__anon185
RTC_BASE	device/LPC54018.h	8381;"	d
RTC_BASE_ADDRS	device/LPC54018.h	8385;"	d
RTC_BASE_PTRS	device/LPC54018.h	8387;"	d
RTC_CLOCKS	drivers/fsl_clock.h	136;"	d
RTC_COUNT_VAL	device/LPC54018.h	8353;"	d
RTC_COUNT_VAL_MASK	device/LPC54018.h	8351;"	d
RTC_COUNT_VAL_SHIFT	device/LPC54018.h	8352;"	d
RTC_CTRL_ALARM1HZ	device/LPC54018.h	8292;"	d
RTC_CTRL_ALARM1HZ_MASK	device/LPC54018.h	8285;"	d
RTC_CTRL_ALARM1HZ_SHIFT	device/LPC54018.h	8286;"	d
RTC_CTRL_ALARMDPD_EN	device/LPC54018.h	8307;"	d
RTC_CTRL_ALARMDPD_EN_MASK	device/LPC54018.h	8301;"	d
RTC_CTRL_ALARMDPD_EN_SHIFT	device/LPC54018.h	8302;"	d
RTC_CTRL_RTC1KHZ_EN	device/LPC54018.h	8322;"	d
RTC_CTRL_RTC1KHZ_EN_MASK	device/LPC54018.h	8315;"	d
RTC_CTRL_RTC1KHZ_EN_SHIFT	device/LPC54018.h	8316;"	d
RTC_CTRL_RTC_EN	device/LPC54018.h	8332;"	d
RTC_CTRL_RTC_EN_MASK	device/LPC54018.h	8323;"	d
RTC_CTRL_RTC_EN_SHIFT	device/LPC54018.h	8324;"	d
RTC_CTRL_RTC_OSC_PD	device/LPC54018.h	8339;"	d
RTC_CTRL_RTC_OSC_PD_MASK	device/LPC54018.h	8333;"	d
RTC_CTRL_RTC_OSC_PD_SHIFT	device/LPC54018.h	8334;"	d
RTC_CTRL_SWRESET	device/LPC54018.h	8284;"	d
RTC_CTRL_SWRESET_MASK	device/LPC54018.h	8275;"	d
RTC_CTRL_SWRESET_SHIFT	device/LPC54018.h	8276;"	d
RTC_CTRL_WAKE1KHZ	device/LPC54018.h	8300;"	d
RTC_CTRL_WAKE1KHZ_MASK	device/LPC54018.h	8293;"	d
RTC_CTRL_WAKE1KHZ_SHIFT	device/LPC54018.h	8294;"	d
RTC_CTRL_WAKEDPD_EN	device/LPC54018.h	8314;"	d
RTC_CTRL_WAKEDPD_EN_MASK	device/LPC54018.h	8308;"	d
RTC_CTRL_WAKEDPD_EN_SHIFT	device/LPC54018.h	8309;"	d
RTC_GPREG_COUNT	device/LPC54018.h	8371;"	d
RTC_GPREG_GPDATA	device/LPC54018.h	8367;"	d
RTC_GPREG_GPDATA_MASK	device/LPC54018.h	8365;"	d
RTC_GPREG_GPDATA_SHIFT	device/LPC54018.h	8366;"	d
RTC_IRQHandler	startup/startup_lpc54018.c	/^WEAK void RTC_IRQHandler(void)$/;"	f
RTC_IRQS	device/LPC54018.h	8389;"	d
RTC_IRQn	device/LPC54018.h	/^  RTC_IRQn                     = 29,               \/**< RTC alarm and wake-up interrupts *\/$/;"	e	enum:IRQn
RTC_MATCH_MATVAL	device/LPC54018.h	8346;"	d
RTC_MATCH_MATVAL_MASK	device/LPC54018.h	8344;"	d
RTC_MATCH_MATVAL_SHIFT	device/LPC54018.h	8345;"	d
RTC_Type	device/LPC54018.h	/^} RTC_Type;$/;"	t	typeref:struct:__anon171
RTC_WAKE_VAL	device/LPC54018.h	8360;"	d
RTC_WAKE_VAL_MASK	device/LPC54018.h	8358;"	d
RTC_WAKE_VAL_SHIFT	device/LPC54018.h	8359;"	d
RTE_I2C0	board/RTE_Device.h	102;"	d
RTE_I2C0_DMA_EN	board/RTE_Device.h	103;"	d
RTE_I2C0_Master_DMA_BASE	board/RTE_Device.h	124;"	d
RTE_I2C0_Master_DMA_CH	board/RTE_Device.h	125;"	d
RTE_I2C1	board/RTE_Device.h	104;"	d
RTE_I2C1_DMA_EN	board/RTE_Device.h	105;"	d
RTE_I2C1_Master_DMA_BASE	board/RTE_Device.h	127;"	d
RTE_I2C1_Master_DMA_CH	board/RTE_Device.h	128;"	d
RTE_I2C2	board/RTE_Device.h	106;"	d
RTE_I2C2_DMA_EN	board/RTE_Device.h	107;"	d
RTE_I2C2_Master_DMA_BASE	board/RTE_Device.h	130;"	d
RTE_I2C2_Master_DMA_CH	board/RTE_Device.h	131;"	d
RTE_I2C3	board/RTE_Device.h	108;"	d
RTE_I2C3_DMA_EN	board/RTE_Device.h	109;"	d
RTE_I2C3_Master_DMA_BASE	board/RTE_Device.h	133;"	d
RTE_I2C3_Master_DMA_CH	board/RTE_Device.h	134;"	d
RTE_I2C4	board/RTE_Device.h	110;"	d
RTE_I2C4_DMA_EN	board/RTE_Device.h	111;"	d
RTE_I2C4_Master_DMA_BASE	board/RTE_Device.h	136;"	d
RTE_I2C4_Master_DMA_CH	board/RTE_Device.h	137;"	d
RTE_I2C5	board/RTE_Device.h	112;"	d
RTE_I2C5_DMA_EN	board/RTE_Device.h	113;"	d
RTE_I2C5_Master_DMA_BASE	board/RTE_Device.h	139;"	d
RTE_I2C5_Master_DMA_CH	board/RTE_Device.h	140;"	d
RTE_I2C6	board/RTE_Device.h	114;"	d
RTE_I2C6_DMA_EN	board/RTE_Device.h	115;"	d
RTE_I2C6_Master_DMA_BASE	board/RTE_Device.h	142;"	d
RTE_I2C6_Master_DMA_CH	board/RTE_Device.h	143;"	d
RTE_I2C7	board/RTE_Device.h	116;"	d
RTE_I2C7_DMA_EN	board/RTE_Device.h	117;"	d
RTE_I2C7_Master_DMA_BASE	board/RTE_Device.h	145;"	d
RTE_I2C7_Master_DMA_CH	board/RTE_Device.h	146;"	d
RTE_I2C8	board/RTE_Device.h	118;"	d
RTE_I2C8_DMA_EN	board/RTE_Device.h	119;"	d
RTE_I2C8_Master_DMA_BASE	board/RTE_Device.h	148;"	d
RTE_I2C8_Master_DMA_CH	board/RTE_Device.h	149;"	d
RTE_I2C9	board/RTE_Device.h	120;"	d
RTE_I2C9_DMA_EN	board/RTE_Device.h	121;"	d
RTE_I2C9_Master_DMA_BASE	board/RTE_Device.h	151;"	d
RTE_I2C9_Master_DMA_CH	board/RTE_Device.h	152;"	d
RTE_SPI0	board/RTE_Device.h	157;"	d
RTE_SPI0_DMA_EN	board/RTE_Device.h	158;"	d
RTE_SPI0_DMA_RX_CH	board/RTE_Device.h	182;"	d
RTE_SPI0_DMA_RX_DMA_BASE	board/RTE_Device.h	183;"	d
RTE_SPI0_DMA_TX_CH	board/RTE_Device.h	180;"	d
RTE_SPI0_DMA_TX_DMA_BASE	board/RTE_Device.h	181;"	d
RTE_SPI0_SSEL_NUM	board/RTE_Device.h	179;"	d
RTE_SPI1	board/RTE_Device.h	159;"	d
RTE_SPI1_DMA_EN	board/RTE_Device.h	160;"	d
RTE_SPI1_DMA_RX_CH	board/RTE_Device.h	188;"	d
RTE_SPI1_DMA_RX_DMA_BASE	board/RTE_Device.h	189;"	d
RTE_SPI1_DMA_TX_CH	board/RTE_Device.h	186;"	d
RTE_SPI1_DMA_TX_DMA_BASE	board/RTE_Device.h	187;"	d
RTE_SPI1_SSEL_NUM	board/RTE_Device.h	185;"	d
RTE_SPI2	board/RTE_Device.h	161;"	d
RTE_SPI2_DMA_EN	board/RTE_Device.h	162;"	d
RTE_SPI2_DMA_RX_CH	board/RTE_Device.h	194;"	d
RTE_SPI2_DMA_RX_DMA_BASE	board/RTE_Device.h	195;"	d
RTE_SPI2_DMA_TX_CH	board/RTE_Device.h	192;"	d
RTE_SPI2_DMA_TX_DMA_BASE	board/RTE_Device.h	193;"	d
RTE_SPI2_SSEL_NUM	board/RTE_Device.h	191;"	d
RTE_SPI3	board/RTE_Device.h	163;"	d
RTE_SPI3_DMA_EN	board/RTE_Device.h	164;"	d
RTE_SPI3_DMA_RX_CH	board/RTE_Device.h	200;"	d
RTE_SPI3_DMA_RX_DMA_BASE	board/RTE_Device.h	201;"	d
RTE_SPI3_DMA_TX_CH	board/RTE_Device.h	198;"	d
RTE_SPI3_DMA_TX_DMA_BASE	board/RTE_Device.h	199;"	d
RTE_SPI3_SSEL_NUM	board/RTE_Device.h	197;"	d
RTE_SPI4	board/RTE_Device.h	165;"	d
RTE_SPI4_DMA_EN	board/RTE_Device.h	166;"	d
RTE_SPI4_DMA_RX_CH	board/RTE_Device.h	206;"	d
RTE_SPI4_DMA_RX_DMA_BASE	board/RTE_Device.h	207;"	d
RTE_SPI4_DMA_TX_CH	board/RTE_Device.h	204;"	d
RTE_SPI4_DMA_TX_DMA_BASE	board/RTE_Device.h	205;"	d
RTE_SPI4_SSEL_NUM	board/RTE_Device.h	203;"	d
RTE_SPI5	board/RTE_Device.h	167;"	d
RTE_SPI5_DMA_EN	board/RTE_Device.h	168;"	d
RTE_SPI5_DMA_RX_CH	board/RTE_Device.h	212;"	d
RTE_SPI5_DMA_RX_DMA_BASE	board/RTE_Device.h	213;"	d
RTE_SPI5_DMA_TX_CH	board/RTE_Device.h	210;"	d
RTE_SPI5_DMA_TX_DMA_BASE	board/RTE_Device.h	211;"	d
RTE_SPI5_SSEL_NUM	board/RTE_Device.h	209;"	d
RTE_SPI6	board/RTE_Device.h	169;"	d
RTE_SPI6_DMA_EN	board/RTE_Device.h	170;"	d
RTE_SPI6_DMA_RX_CH	board/RTE_Device.h	218;"	d
RTE_SPI6_DMA_RX_DMA_BASE	board/RTE_Device.h	219;"	d
RTE_SPI6_DMA_TX_CH	board/RTE_Device.h	216;"	d
RTE_SPI6_DMA_TX_DMA_BASE	board/RTE_Device.h	217;"	d
RTE_SPI6_SSEL_NUM	board/RTE_Device.h	215;"	d
RTE_SPI7	board/RTE_Device.h	171;"	d
RTE_SPI7_DMA_EN	board/RTE_Device.h	172;"	d
RTE_SPI7_DMA_RX_CH	board/RTE_Device.h	224;"	d
RTE_SPI7_DMA_RX_DMA_BASE	board/RTE_Device.h	225;"	d
RTE_SPI7_DMA_TX_CH	board/RTE_Device.h	222;"	d
RTE_SPI7_DMA_TX_DMA_BASE	board/RTE_Device.h	223;"	d
RTE_SPI7_SSEL_NUM	board/RTE_Device.h	221;"	d
RTE_SPI8	board/RTE_Device.h	173;"	d
RTE_SPI8_DMA_EN	board/RTE_Device.h	174;"	d
RTE_SPI8_DMA_RX_CH	board/RTE_Device.h	230;"	d
RTE_SPI8_DMA_RX_DMA_BASE	board/RTE_Device.h	231;"	d
RTE_SPI8_DMA_TX_CH	board/RTE_Device.h	228;"	d
RTE_SPI8_DMA_TX_DMA_BASE	board/RTE_Device.h	229;"	d
RTE_SPI8_SSEL_NUM	board/RTE_Device.h	227;"	d
RTE_SPI9	board/RTE_Device.h	175;"	d
RTE_SPI9_DMA_EN	board/RTE_Device.h	176;"	d
RTE_SPI9_DMA_RX_CH	board/RTE_Device.h	236;"	d
RTE_SPI9_DMA_RX_DMA_BASE	board/RTE_Device.h	237;"	d
RTE_SPI9_DMA_TX_CH	board/RTE_Device.h	234;"	d
RTE_SPI9_DMA_TX_DMA_BASE	board/RTE_Device.h	235;"	d
RTE_SPI9_SSEL_NUM	board/RTE_Device.h	233;"	d
RTE_USART0	board/RTE_Device.h	15;"	d
RTE_USART0_DMA_EN	board/RTE_Device.h	16;"	d
RTE_USART0_DMA_RX_CH	board/RTE_Device.h	51;"	d
RTE_USART0_DMA_RX_DMA_BASE	board/RTE_Device.h	52;"	d
RTE_USART0_DMA_TX_CH	board/RTE_Device.h	49;"	d
RTE_USART0_DMA_TX_DMA_BASE	board/RTE_Device.h	50;"	d
RTE_USART1	board/RTE_Device.h	17;"	d
RTE_USART1_DMA_EN	board/RTE_Device.h	18;"	d
RTE_USART1_DMA_RX_CH	board/RTE_Device.h	56;"	d
RTE_USART1_DMA_RX_DMA_BASE	board/RTE_Device.h	57;"	d
RTE_USART1_DMA_TX_CH	board/RTE_Device.h	54;"	d
RTE_USART1_DMA_TX_DMA_BASE	board/RTE_Device.h	55;"	d
RTE_USART2	board/RTE_Device.h	19;"	d
RTE_USART2_DMA_EN	board/RTE_Device.h	20;"	d
RTE_USART2_DMA_RX_CH	board/RTE_Device.h	61;"	d
RTE_USART2_DMA_RX_DMA_BASE	board/RTE_Device.h	62;"	d
RTE_USART2_DMA_TX_CH	board/RTE_Device.h	59;"	d
RTE_USART2_DMA_TX_DMA_BASE	board/RTE_Device.h	60;"	d
RTE_USART3	board/RTE_Device.h	21;"	d
RTE_USART3_DMA_EN	board/RTE_Device.h	22;"	d
RTE_USART3_DMA_RX_CH	board/RTE_Device.h	66;"	d
RTE_USART3_DMA_RX_DMA_BASE	board/RTE_Device.h	67;"	d
RTE_USART3_DMA_TX_CH	board/RTE_Device.h	64;"	d
RTE_USART3_DMA_TX_DMA_BASE	board/RTE_Device.h	65;"	d
RTE_USART4	board/RTE_Device.h	23;"	d
RTE_USART4_DMA_EN	board/RTE_Device.h	24;"	d
RTE_USART4_DMA_RX_CH	board/RTE_Device.h	71;"	d
RTE_USART4_DMA_RX_DMA_BASE	board/RTE_Device.h	72;"	d
RTE_USART4_DMA_TX_CH	board/RTE_Device.h	69;"	d
RTE_USART4_DMA_TX_DMA_BASE	board/RTE_Device.h	70;"	d
RTE_USART5	board/RTE_Device.h	25;"	d
RTE_USART5_DMA_EN	board/RTE_Device.h	26;"	d
RTE_USART5_DMA_RX_CH	board/RTE_Device.h	76;"	d
RTE_USART5_DMA_RX_DMA_BASE	board/RTE_Device.h	77;"	d
RTE_USART5_DMA_TX_CH	board/RTE_Device.h	74;"	d
RTE_USART5_DMA_TX_DMA_BASE	board/RTE_Device.h	75;"	d
RTE_USART6	board/RTE_Device.h	27;"	d
RTE_USART6_DMA_EN	board/RTE_Device.h	28;"	d
RTE_USART6_DMA_RX_CH	board/RTE_Device.h	81;"	d
RTE_USART6_DMA_RX_DMA_BASE	board/RTE_Device.h	82;"	d
RTE_USART6_DMA_TX_CH	board/RTE_Device.h	79;"	d
RTE_USART6_DMA_TX_DMA_BASE	board/RTE_Device.h	80;"	d
RTE_USART7	board/RTE_Device.h	29;"	d
RTE_USART7_DMA_EN	board/RTE_Device.h	30;"	d
RTE_USART7_DMA_RX_CH	board/RTE_Device.h	86;"	d
RTE_USART7_DMA_RX_DMA_BASE	board/RTE_Device.h	87;"	d
RTE_USART7_DMA_TX_CH	board/RTE_Device.h	84;"	d
RTE_USART7_DMA_TX_DMA_BASE	board/RTE_Device.h	85;"	d
RTE_USART8	board/RTE_Device.h	31;"	d
RTE_USART8_DMA_EN	board/RTE_Device.h	32;"	d
RTE_USART8_DMA_RX_CH	board/RTE_Device.h	91;"	d
RTE_USART8_DMA_RX_DMA_BASE	board/RTE_Device.h	92;"	d
RTE_USART8_DMA_TX_CH	board/RTE_Device.h	89;"	d
RTE_USART8_DMA_TX_DMA_BASE	board/RTE_Device.h	90;"	d
RTE_USART9	board/RTE_Device.h	33;"	d
RTE_USART9_DMA_EN	board/RTE_Device.h	34;"	d
RTE_USART9_DMA_RX_CH	board/RTE_Device.h	96;"	d
RTE_USART9_DMA_RX_DMA_BASE	board/RTE_Device.h	97;"	d
RTE_USART9_DMA_TX_CH	board/RTE_Device.h	94;"	d
RTE_USART9_DMA_TX_DMA_BASE	board/RTE_Device.h	95;"	d
RUN_TIME_TABLES	codec2/golay23.c	38;"	d	file:
RXBC	device/LPC54018.h	/^  __IO uint32_t RXBC;                              \/**< Rx Buffer Configuration, offset: 0xAC *\/$/;"	m	struct:__anon142
RXESC	device/LPC54018.h	/^  __IO uint32_t RXESC;                             \/**< Rx Buffer and FIFO Element Size Configuration, offset: 0xBC *\/$/;"	m	struct:__anon142
RXF0A	device/LPC54018.h	/^  __IO uint32_t RXF0A;                             \/**< Rx FIFO 0 Acknowledge, offset: 0xA8 *\/$/;"	m	struct:__anon142
RXF0C	device/LPC54018.h	/^  __IO uint32_t RXF0C;                             \/**< Rx FIFO 0 Configuration, offset: 0xA0 *\/$/;"	m	struct:__anon142
RXF0S	device/LPC54018.h	/^  __I  uint32_t RXF0S;                             \/**< Rx FIFO 0 Status, offset: 0xA4 *\/$/;"	m	struct:__anon142
RXF1A	device/LPC54018.h	/^  __IO uint32_t RXF1A;                             \/**< Rx FIFO 1 Acknowledge, offset: 0xB8 *\/$/;"	m	struct:__anon142
RXF1C	device/LPC54018.h	/^  __IO uint32_t RXF1C;                             \/**< Rx FIFO 1 Configuration, offset: 0xB0 *\/$/;"	m	struct:__anon142
RXF1S	device/LPC54018.h	/^  __I  uint32_t RXF1S;                             \/**< Rx FIFO 1 Status, offset: 0xB4 *\/$/;"	m	struct:__anon142
Radius	emwin/emWin_header/BUTTON.h	/^  int Radius;$/;"	m	struct:__anon337
Radius	emwin/emWin_header/DROPDOWN.h	/^  int Radius;$/;"	m	struct:__anon357
Radius	emwin/emWin_header/FRAMEWIN.h	/^  int Radius;$/;"	m	struct:__anon277
RangeX	emwin/emWin_header/GRAPH_Private.h	/^  unsigned        RangeX, RangeY;$/;"	m	struct:GRAPH_OBJ
RangeY	emwin/emWin_header/GRAPH_Private.h	/^  unsigned        RangeX, RangeY;$/;"	m	struct:GRAPH_OBJ
RealDestBytesPerScanline	emwin/emWin_header/GUI_JPEG_Private.h	/^  int RealDestBytesPerScanline; \/\/ Actual bytes$/;"	m	struct:GUI_JPEG_DCONTEXT
Receive	CMSIS_driver/Driver_SPI.h	/^  int32_t              (*Receive)         (      void *data, uint32_t num);   \/\/\/< Pointer to \\ref ARM_SPI_Receive : Start receiving data from SPI Interface.$/;"	m	struct:_ARM_DRIVER_SPI
Rect	emwin/emWin_header/GUI_SPRITE_Private.h	/^  GUI_RECT           Rect;$/;"	m	struct:__anon294
Rect	emwin/emWin_header/WM.h	/^  GUI_RECT Rect;        \/* Outer dimensions of window *\/$/;"	m	struct:WM_Obj
Rect	emwin/emWin_header/WM.h	/^  GUI_RECT Rect;$/;"	m	struct:WM_WINDOW_INFO
RegEntryMode	emwin/emWin_header/GUIDRV_FlexColor.h	/^  U16 RegEntryMode;$/;"	m	struct:__anon364
RegEntryMode	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U16 RegEntryMode;   \/\/ Can be used for storing additional configuration bits for 'EntryMode' register which is modified by the driver$/;"	m	struct:DRIVER_CONTEXT
RegsTable1	radio/sx1276-lora.c	/^INT8U RegsTable1[] =           \/\/0x06 -  0x0F$/;"	v
RegsTable2	radio/sx1276-lora.c	/^INT8U RegsTable2[] =          \/\/0x1D -  0x24$/;"	v
ReleasedItem	emwin/emWin_header/ICONVIEW_Private.h	/^  int                     ReleasedItem;$/;"	m	struct:__anon219
ReleasedItem	emwin/emWin_header/SWIPELIST_Private.h	/^  int                     ReleasedItem;$/;"	m	struct:__anon238
Reserved47_IRQHandler	startup/startup_lpc54018.c	/^WEAK void Reserved47_IRQHandler(void)$/;"	f
Reserved47_IRQn	device/LPC54018.h	/^  Reserved47_IRQn              = 31,               \/**< Reserved interrupt *\/$/;"	e	enum:IRQn
Reserved68_IRQHandler	startup/startup_lpc54018.c	/^WEAK void Reserved68_IRQHandler(void)$/;"	f
Reserved68_IRQn	device/LPC54018.h	/^  Reserved68_IRQn              = 52,               \/**< Reserved interrupt *\/$/;"	e	enum:IRQn
ResetISR	startup/startup_lpc54018.c	/^void ResetISR(void) {$/;"	f
RestartInterval	emwin/emWin_header/GUI_JPEG_Private.h	/^  int RestartInterval;$/;"	m	struct:GUI_JPEG_DCONTEXT
RestartsLeft	emwin/emWin_header/GUI_JPEG_Private.h	/^  int RestartsLeft;$/;"	m	struct:GUI_JPEG_DCONTEXT
ReturnClear	emwin/emWin_header/GUI_GIF_Private.h	/^  int   ReturnClear;$/;"	m	struct:__anon323
ReturnValue	emwin/emWin_header/WM.h	/^  int ReturnValue;$/;"	m	struct:__anon285
Reverse	emwin/emWin_header/LISTVIEW_Private.h	/^  U8                           Reverse;$/;"	m	struct:__anon336
ReverseSort	emwin/emWin_header/LISTVIEW_Private.h	/^  U8                           ReverseSort;                                       \/\/ Set to 1 if reverse sorting is required$/;"	m	struct:LISTVIEW_Obj
RowDistY	emwin/emWin_header/LISTVIEW_Private.h	/^  unsigned                     RowDistY;$/;"	m	struct:LISTVIEW_Obj
Rs	codec2/fsk.h	/^    int Rs;                 \/* symbol rate *\/$/;"	m	struct:FSK
RxBw_Table	radio/sx1276-Fsk.c	/^static const INT8U RxBw_Table[21][2] =$/;"	v	file:
S	lwip/src/netif/ppp/polarssl/md4.c	107;"	d	file:
S	lwip/src/netif/ppp/polarssl/md5.c	106;"	d	file:
S	lwip/src/netif/ppp/polarssl/sha1.c	107;"	d	file:
S16_F	lwip/src/include/lwip/arch.h	156;"	d
S16_F	source/lwipopts.h	264;"	d
S32_F	lwip/src/include/lwip/arch.h	165;"	d
S32_F	source/lwipopts.h	267;"	d
S8_F	source/lwipopts.h	261;"	d
SAMPLE_RATE	codec2/nlp.c	50;"	d	file:
SAMPPROD	codec2/_kiss_fft_guts.h	47;"	d
SAMPPROD	codec2/_kiss_fft_guts.h	51;"	d
SAMP_MAX	codec2/_kiss_fft_guts.h	48;"	d
SAMP_MAX	codec2/_kiss_fft_guts.h	52;"	d
SAMP_MIN	codec2/_kiss_fft_guts.h	55;"	d
SANITY_MAX	lwip/src/netif/ppp/mppe.c	55;"	d	file:
SAU	CMSIS/core_armv8mbl.h	1190;"	d
SAU	CMSIS/core_armv8mml.h	2052;"	d
SAU_BASE	CMSIS/core_armv8mbl.h	1189;"	d
SAU_BASE	CMSIS/core_armv8mml.h	2051;"	d
SAU_CTRL_ALLNS_Msk	CMSIS/core_armv8mbl.h	998;"	d
SAU_CTRL_ALLNS_Msk	CMSIS/core_armv8mml.h	1670;"	d
SAU_CTRL_ALLNS_Pos	CMSIS/core_armv8mbl.h	997;"	d
SAU_CTRL_ALLNS_Pos	CMSIS/core_armv8mml.h	1669;"	d
SAU_CTRL_ENABLE_Msk	CMSIS/core_armv8mbl.h	1001;"	d
SAU_CTRL_ENABLE_Msk	CMSIS/core_armv8mml.h	1673;"	d
SAU_CTRL_ENABLE_Pos	CMSIS/core_armv8mbl.h	1000;"	d
SAU_CTRL_ENABLE_Pos	CMSIS/core_armv8mml.h	1672;"	d
SAU_RBAR_BADDR_Msk	CMSIS/core_armv8mbl.h	1014;"	d
SAU_RBAR_BADDR_Msk	CMSIS/core_armv8mml.h	1686;"	d
SAU_RBAR_BADDR_Pos	CMSIS/core_armv8mbl.h	1013;"	d
SAU_RBAR_BADDR_Pos	CMSIS/core_armv8mml.h	1685;"	d
SAU_RLAR_ENABLE_Msk	CMSIS/core_armv8mbl.h	1024;"	d
SAU_RLAR_ENABLE_Msk	CMSIS/core_armv8mml.h	1696;"	d
SAU_RLAR_ENABLE_Pos	CMSIS/core_armv8mbl.h	1023;"	d
SAU_RLAR_ENABLE_Pos	CMSIS/core_armv8mml.h	1695;"	d
SAU_RLAR_LADDR_Msk	CMSIS/core_armv8mbl.h	1018;"	d
SAU_RLAR_LADDR_Msk	CMSIS/core_armv8mml.h	1690;"	d
SAU_RLAR_LADDR_Pos	CMSIS/core_armv8mbl.h	1017;"	d
SAU_RLAR_LADDR_Pos	CMSIS/core_armv8mml.h	1689;"	d
SAU_RLAR_NSC_Msk	CMSIS/core_armv8mbl.h	1021;"	d
SAU_RLAR_NSC_Msk	CMSIS/core_armv8mml.h	1693;"	d
SAU_RLAR_NSC_Pos	CMSIS/core_armv8mbl.h	1020;"	d
SAU_RLAR_NSC_Pos	CMSIS/core_armv8mml.h	1692;"	d
SAU_RNR_REGION_Msk	CMSIS/core_armv8mbl.h	1010;"	d
SAU_RNR_REGION_Msk	CMSIS/core_armv8mml.h	1682;"	d
SAU_RNR_REGION_Pos	CMSIS/core_armv8mbl.h	1009;"	d
SAU_RNR_REGION_Pos	CMSIS/core_armv8mml.h	1681;"	d
SAU_SFSR_AUVIOL_Msk	CMSIS/core_armv8mml.h	1714;"	d
SAU_SFSR_AUVIOL_Pos	CMSIS/core_armv8mml.h	1713;"	d
SAU_SFSR_INVEP_Msk	CMSIS/core_armv8mml.h	1723;"	d
SAU_SFSR_INVEP_Pos	CMSIS/core_armv8mml.h	1722;"	d
SAU_SFSR_INVER_Msk	CMSIS/core_armv8mml.h	1717;"	d
SAU_SFSR_INVER_Pos	CMSIS/core_armv8mml.h	1716;"	d
SAU_SFSR_INVIS_Msk	CMSIS/core_armv8mml.h	1720;"	d
SAU_SFSR_INVIS_Pos	CMSIS/core_armv8mml.h	1719;"	d
SAU_SFSR_INVTRAN_Msk	CMSIS/core_armv8mml.h	1711;"	d
SAU_SFSR_INVTRAN_Pos	CMSIS/core_armv8mml.h	1710;"	d
SAU_SFSR_LSERR_Msk	CMSIS/core_armv8mml.h	1702;"	d
SAU_SFSR_LSERR_Pos	CMSIS/core_armv8mml.h	1701;"	d
SAU_SFSR_LSPERR_Msk	CMSIS/core_armv8mml.h	1708;"	d
SAU_SFSR_LSPERR_Pos	CMSIS/core_armv8mml.h	1707;"	d
SAU_SFSR_SFARVALID_Msk	CMSIS/core_armv8mml.h	1705;"	d
SAU_SFSR_SFARVALID_Pos	CMSIS/core_armv8mml.h	1704;"	d
SAU_TYPE_SREGION_Msk	CMSIS/core_armv8mbl.h	1005;"	d
SAU_TYPE_SREGION_Msk	CMSIS/core_armv8mml.h	1677;"	d
SAU_TYPE_SREGION_Pos	CMSIS/core_armv8mbl.h	1004;"	d
SAU_TYPE_SREGION_Pos	CMSIS/core_armv8mml.h	1676;"	d
SAU_Type	CMSIS/core_armv8mbl.h	/^} SAU_Type;$/;"	t	typeref:struct:__anon129
SAU_Type	CMSIS/core_armv8mml.h	/^} SAU_Type;$/;"	t	typeref:struct:__anon28
SB1	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long SB1[64] =$/;"	v	file:
SB2	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long SB2[64] =$/;"	v	file:
SB3	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long SB3[64] =$/;"	v	file:
SB4	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long SB4[64] =$/;"	v	file:
SB5	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long SB5[64] =$/;"	v	file:
SB6	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long SB6[64] =$/;"	v	file:
SB7	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long SB7[64] =$/;"	v	file:
SB8	lwip/src/netif/ppp/polarssl/des.c	/^static const unsigned long SB8[64] =$/;"	v	file:
SC0CLKDIV	device/LPC54018.h	/^  __IO uint32_t SC0CLKDIV;                         \/**< Smartcard0 clock divider, offset: 0x310 *\/$/;"	m	struct:__anon185
SC1CLKDIV	device/LPC54018.h	/^  __IO uint32_t SC1CLKDIV;                         \/**< Smartcard1 clock divider, offset: 0x314 *\/$/;"	m	struct:__anon185
SCANF	utilities/fsl_debug_console.h	71;"	d
SCANF	utilities/fsl_debug_console.h	76;"	d
SCANF	utilities/fsl_debug_console.h	82;"	d
SCANF_ADVANCED_ENABLE	utilities/fsl_debug_console_conf.h	149;"	d
SCANF_FLOAT_ENABLE	utilities/fsl_debug_console_conf.h	139;"	d
SCB	CMSIS/core_armv8mbl.h	1176;"	d
SCB	CMSIS/core_armv8mml.h	2037;"	d
SCB	CMSIS/core_cm4.h	1561;"	d
SCB_ABFSR_AHBP_Msk	CMSIS/core_armv8mml.h	985;"	d
SCB_ABFSR_AHBP_Pos	CMSIS/core_armv8mml.h	984;"	d
SCB_ABFSR_AXIMTYPE_Msk	CMSIS/core_armv8mml.h	976;"	d
SCB_ABFSR_AXIMTYPE_Pos	CMSIS/core_armv8mml.h	975;"	d
SCB_ABFSR_AXIM_Msk	CMSIS/core_armv8mml.h	982;"	d
SCB_ABFSR_AXIM_Pos	CMSIS/core_armv8mml.h	981;"	d
SCB_ABFSR_DTCM_Msk	CMSIS/core_armv8mml.h	988;"	d
SCB_ABFSR_DTCM_Pos	CMSIS/core_armv8mml.h	987;"	d
SCB_ABFSR_EPPB_Msk	CMSIS/core_armv8mml.h	979;"	d
SCB_ABFSR_EPPB_Pos	CMSIS/core_armv8mml.h	978;"	d
SCB_ABFSR_ITCM_Msk	CMSIS/core_armv8mml.h	991;"	d
SCB_ABFSR_ITCM_Pos	CMSIS/core_armv8mml.h	990;"	d
SCB_AHBPCR_EN_Msk	CMSIS/core_armv8mml.h	952;"	d
SCB_AHBPCR_EN_Pos	CMSIS/core_armv8mml.h	951;"	d
SCB_AHBPCR_SZ_Msk	CMSIS/core_armv8mml.h	949;"	d
SCB_AHBPCR_SZ_Pos	CMSIS/core_armv8mml.h	948;"	d
SCB_AHBSCR_CTL_Msk	CMSIS/core_armv8mml.h	972;"	d
SCB_AHBSCR_CTL_Pos	CMSIS/core_armv8mml.h	971;"	d
SCB_AHBSCR_INITCOUNT_Msk	CMSIS/core_armv8mml.h	966;"	d
SCB_AHBSCR_INITCOUNT_Pos	CMSIS/core_armv8mml.h	965;"	d
SCB_AHBSCR_TPRI_Msk	CMSIS/core_armv8mml.h	969;"	d
SCB_AHBSCR_TPRI_Pos	CMSIS/core_armv8mml.h	968;"	d
SCB_AIRCR_BFHFNMINS_Msk	CMSIS/core_armv8mbl.h	471;"	d
SCB_AIRCR_BFHFNMINS_Msk	CMSIS/core_armv8mml.h	622;"	d
SCB_AIRCR_BFHFNMINS_Pos	CMSIS/core_armv8mbl.h	470;"	d
SCB_AIRCR_BFHFNMINS_Pos	CMSIS/core_armv8mml.h	621;"	d
SCB_AIRCR_ENDIANESS_Msk	CMSIS/core_armv8mbl.h	465;"	d
SCB_AIRCR_ENDIANESS_Msk	CMSIS/core_armv8mml.h	616;"	d
SCB_AIRCR_ENDIANESS_Msk	CMSIS/core_cm4.h	524;"	d
SCB_AIRCR_ENDIANESS_Pos	CMSIS/core_armv8mbl.h	464;"	d
SCB_AIRCR_ENDIANESS_Pos	CMSIS/core_armv8mml.h	615;"	d
SCB_AIRCR_ENDIANESS_Pos	CMSIS/core_cm4.h	523;"	d
SCB_AIRCR_PRIGROUP_Msk	CMSIS/core_armv8mml.h	625;"	d
SCB_AIRCR_PRIGROUP_Msk	CMSIS/core_cm4.h	527;"	d
SCB_AIRCR_PRIGROUP_Pos	CMSIS/core_armv8mml.h	624;"	d
SCB_AIRCR_PRIGROUP_Pos	CMSIS/core_cm4.h	526;"	d
SCB_AIRCR_PRIS_Msk	CMSIS/core_armv8mbl.h	468;"	d
SCB_AIRCR_PRIS_Msk	CMSIS/core_armv8mml.h	619;"	d
SCB_AIRCR_PRIS_Pos	CMSIS/core_armv8mbl.h	467;"	d
SCB_AIRCR_PRIS_Pos	CMSIS/core_armv8mml.h	618;"	d
SCB_AIRCR_SYSRESETREQS_Msk	CMSIS/core_armv8mbl.h	474;"	d
SCB_AIRCR_SYSRESETREQS_Msk	CMSIS/core_armv8mml.h	628;"	d
SCB_AIRCR_SYSRESETREQS_Pos	CMSIS/core_armv8mbl.h	473;"	d
SCB_AIRCR_SYSRESETREQS_Pos	CMSIS/core_armv8mml.h	627;"	d
SCB_AIRCR_SYSRESETREQ_Msk	CMSIS/core_armv8mbl.h	477;"	d
SCB_AIRCR_SYSRESETREQ_Msk	CMSIS/core_armv8mml.h	631;"	d
SCB_AIRCR_SYSRESETREQ_Msk	CMSIS/core_cm4.h	530;"	d
SCB_AIRCR_SYSRESETREQ_Pos	CMSIS/core_armv8mbl.h	476;"	d
SCB_AIRCR_SYSRESETREQ_Pos	CMSIS/core_armv8mml.h	630;"	d
SCB_AIRCR_SYSRESETREQ_Pos	CMSIS/core_cm4.h	529;"	d
SCB_AIRCR_VECTCLRACTIVE_Msk	CMSIS/core_armv8mbl.h	480;"	d
SCB_AIRCR_VECTCLRACTIVE_Msk	CMSIS/core_armv8mml.h	634;"	d
SCB_AIRCR_VECTCLRACTIVE_Msk	CMSIS/core_cm4.h	533;"	d
SCB_AIRCR_VECTCLRACTIVE_Pos	CMSIS/core_armv8mbl.h	479;"	d
SCB_AIRCR_VECTCLRACTIVE_Pos	CMSIS/core_armv8mml.h	633;"	d
SCB_AIRCR_VECTCLRACTIVE_Pos	CMSIS/core_cm4.h	532;"	d
SCB_AIRCR_VECTKEYSTAT_Msk	CMSIS/core_armv8mbl.h	462;"	d
SCB_AIRCR_VECTKEYSTAT_Msk	CMSIS/core_armv8mml.h	613;"	d
SCB_AIRCR_VECTKEYSTAT_Msk	CMSIS/core_cm4.h	521;"	d
SCB_AIRCR_VECTKEYSTAT_Pos	CMSIS/core_armv8mbl.h	461;"	d
SCB_AIRCR_VECTKEYSTAT_Pos	CMSIS/core_armv8mml.h	612;"	d
SCB_AIRCR_VECTKEYSTAT_Pos	CMSIS/core_cm4.h	520;"	d
SCB_AIRCR_VECTKEY_Msk	CMSIS/core_armv8mbl.h	459;"	d
SCB_AIRCR_VECTKEY_Msk	CMSIS/core_armv8mml.h	610;"	d
SCB_AIRCR_VECTKEY_Msk	CMSIS/core_cm4.h	518;"	d
SCB_AIRCR_VECTKEY_Pos	CMSIS/core_armv8mbl.h	458;"	d
SCB_AIRCR_VECTKEY_Pos	CMSIS/core_armv8mml.h	609;"	d
SCB_AIRCR_VECTKEY_Pos	CMSIS/core_cm4.h	517;"	d
SCB_AIRCR_VECTRESET_Msk	CMSIS/core_cm4.h	536;"	d
SCB_AIRCR_VECTRESET_Pos	CMSIS/core_cm4.h	535;"	d
SCB_BASE	CMSIS/core_armv8mbl.h	1173;"	d
SCB_BASE	CMSIS/core_armv8mml.h	2034;"	d
SCB_BASE	CMSIS/core_cm4.h	1558;"	d
SCB_BASE_NS	CMSIS/core_armv8mbl.h	1198;"	d
SCB_BASE_NS	CMSIS/core_armv8mml.h	2063;"	d
SCB_CACR_ECCEN_Msk	CMSIS/core_armv8mml.h	959;"	d
SCB_CACR_ECCEN_Pos	CMSIS/core_armv8mml.h	958;"	d
SCB_CACR_FORCEWT_Msk	CMSIS/core_armv8mml.h	956;"	d
SCB_CACR_FORCEWT_Pos	CMSIS/core_armv8mml.h	955;"	d
SCB_CACR_SIWT_Msk	CMSIS/core_armv8mml.h	962;"	d
SCB_CACR_SIWT_Pos	CMSIS/core_armv8mml.h	961;"	d
SCB_CCR_BFHFNMIGN_Msk	CMSIS/core_armv8mbl.h	509;"	d
SCB_CCR_BFHFNMIGN_Msk	CMSIS/core_armv8mml.h	663;"	d
SCB_CCR_BFHFNMIGN_Msk	CMSIS/core_cm4.h	553;"	d
SCB_CCR_BFHFNMIGN_Pos	CMSIS/core_armv8mbl.h	508;"	d
SCB_CCR_BFHFNMIGN_Pos	CMSIS/core_armv8mml.h	662;"	d
SCB_CCR_BFHFNMIGN_Pos	CMSIS/core_cm4.h	552;"	d
SCB_CCR_BP_Msk	CMSIS/core_armv8mbl.h	497;"	d
SCB_CCR_BP_Msk	CMSIS/core_armv8mml.h	651;"	d
SCB_CCR_BP_Pos	CMSIS/core_armv8mbl.h	496;"	d
SCB_CCR_BP_Pos	CMSIS/core_armv8mml.h	650;"	d
SCB_CCR_DC_Msk	CMSIS/core_armv8mbl.h	503;"	d
SCB_CCR_DC_Msk	CMSIS/core_armv8mml.h	657;"	d
SCB_CCR_DC_Pos	CMSIS/core_armv8mbl.h	502;"	d
SCB_CCR_DC_Pos	CMSIS/core_armv8mml.h	656;"	d
SCB_CCR_DIV_0_TRP_Msk	CMSIS/core_armv8mbl.h	512;"	d
SCB_CCR_DIV_0_TRP_Msk	CMSIS/core_armv8mml.h	666;"	d
SCB_CCR_DIV_0_TRP_Msk	CMSIS/core_cm4.h	556;"	d
SCB_CCR_DIV_0_TRP_Pos	CMSIS/core_armv8mbl.h	511;"	d
SCB_CCR_DIV_0_TRP_Pos	CMSIS/core_armv8mml.h	665;"	d
SCB_CCR_DIV_0_TRP_Pos	CMSIS/core_cm4.h	555;"	d
SCB_CCR_IC_Msk	CMSIS/core_armv8mbl.h	500;"	d
SCB_CCR_IC_Msk	CMSIS/core_armv8mml.h	654;"	d
SCB_CCR_IC_Pos	CMSIS/core_armv8mbl.h	499;"	d
SCB_CCR_IC_Pos	CMSIS/core_armv8mml.h	653;"	d
SCB_CCR_NONBASETHRDENA_Msk	CMSIS/core_cm4.h	565;"	d
SCB_CCR_NONBASETHRDENA_Pos	CMSIS/core_cm4.h	564;"	d
SCB_CCR_STKALIGN_Msk	CMSIS/core_cm4.h	550;"	d
SCB_CCR_STKALIGN_Pos	CMSIS/core_cm4.h	549;"	d
SCB_CCR_STKOFHFNMIGN_Msk	CMSIS/core_armv8mbl.h	506;"	d
SCB_CCR_STKOFHFNMIGN_Msk	CMSIS/core_armv8mml.h	660;"	d
SCB_CCR_STKOFHFNMIGN_Pos	CMSIS/core_armv8mbl.h	505;"	d
SCB_CCR_STKOFHFNMIGN_Pos	CMSIS/core_armv8mml.h	659;"	d
SCB_CCR_UNALIGN_TRP_Msk	CMSIS/core_armv8mbl.h	515;"	d
SCB_CCR_UNALIGN_TRP_Msk	CMSIS/core_armv8mml.h	669;"	d
SCB_CCR_UNALIGN_TRP_Msk	CMSIS/core_cm4.h	559;"	d
SCB_CCR_UNALIGN_TRP_Pos	CMSIS/core_armv8mbl.h	514;"	d
SCB_CCR_UNALIGN_TRP_Pos	CMSIS/core_armv8mml.h	668;"	d
SCB_CCR_UNALIGN_TRP_Pos	CMSIS/core_cm4.h	558;"	d
SCB_CCR_USERSETMPEND_Msk	CMSIS/core_armv8mbl.h	518;"	d
SCB_CCR_USERSETMPEND_Msk	CMSIS/core_armv8mml.h	672;"	d
SCB_CCR_USERSETMPEND_Msk	CMSIS/core_cm4.h	562;"	d
SCB_CCR_USERSETMPEND_Pos	CMSIS/core_armv8mbl.h	517;"	d
SCB_CCR_USERSETMPEND_Pos	CMSIS/core_armv8mml.h	671;"	d
SCB_CCR_USERSETMPEND_Pos	CMSIS/core_cm4.h	561;"	d
SCB_CCSIDR_ASSOCIATIVITY_Msk	CMSIS/core_armv8mml.h	884;"	d
SCB_CCSIDR_ASSOCIATIVITY_Pos	CMSIS/core_armv8mml.h	883;"	d
SCB_CCSIDR_LINESIZE_Msk	CMSIS/core_armv8mml.h	887;"	d
SCB_CCSIDR_LINESIZE_Pos	CMSIS/core_armv8mml.h	886;"	d
SCB_CCSIDR_NUMSETS_Msk	CMSIS/core_armv8mml.h	881;"	d
SCB_CCSIDR_NUMSETS_Pos	CMSIS/core_armv8mml.h	880;"	d
SCB_CCSIDR_RA_Msk	CMSIS/core_armv8mml.h	875;"	d
SCB_CCSIDR_RA_Pos	CMSIS/core_armv8mml.h	874;"	d
SCB_CCSIDR_WA_Msk	CMSIS/core_armv8mml.h	878;"	d
SCB_CCSIDR_WA_Pos	CMSIS/core_armv8mml.h	877;"	d
SCB_CCSIDR_WB_Msk	CMSIS/core_armv8mml.h	872;"	d
SCB_CCSIDR_WB_Pos	CMSIS/core_armv8mml.h	871;"	d
SCB_CCSIDR_WT_Msk	CMSIS/core_armv8mml.h	869;"	d
SCB_CCSIDR_WT_Pos	CMSIS/core_armv8mml.h	868;"	d
SCB_CFSR_BFARVALID_Msk	CMSIS/core_armv8mml.h	766;"	d
SCB_CFSR_BFARVALID_Msk	CMSIS/core_cm4.h	641;"	d
SCB_CFSR_BFARVALID_Pos	CMSIS/core_armv8mml.h	765;"	d
SCB_CFSR_BFARVALID_Pos	CMSIS/core_cm4.h	640;"	d
SCB_CFSR_BUSFAULTSR_Msk	CMSIS/core_armv8mml.h	740;"	d
SCB_CFSR_BUSFAULTSR_Msk	CMSIS/core_cm4.h	615;"	d
SCB_CFSR_BUSFAULTSR_Pos	CMSIS/core_armv8mml.h	739;"	d
SCB_CFSR_BUSFAULTSR_Pos	CMSIS/core_cm4.h	614;"	d
SCB_CFSR_DACCVIOL_Msk	CMSIS/core_armv8mml.h	759;"	d
SCB_CFSR_DACCVIOL_Msk	CMSIS/core_cm4.h	634;"	d
SCB_CFSR_DACCVIOL_Pos	CMSIS/core_armv8mml.h	758;"	d
SCB_CFSR_DACCVIOL_Pos	CMSIS/core_cm4.h	633;"	d
SCB_CFSR_DIVBYZERO_Msk	CMSIS/core_armv8mml.h	788;"	d
SCB_CFSR_DIVBYZERO_Msk	CMSIS/core_cm4.h	663;"	d
SCB_CFSR_DIVBYZERO_Pos	CMSIS/core_armv8mml.h	787;"	d
SCB_CFSR_DIVBYZERO_Pos	CMSIS/core_cm4.h	662;"	d
SCB_CFSR_IACCVIOL_Msk	CMSIS/core_armv8mml.h	762;"	d
SCB_CFSR_IACCVIOL_Msk	CMSIS/core_cm4.h	637;"	d
SCB_CFSR_IACCVIOL_Pos	CMSIS/core_armv8mml.h	761;"	d
SCB_CFSR_IACCVIOL_Pos	CMSIS/core_cm4.h	636;"	d
SCB_CFSR_IBUSERR_Msk	CMSIS/core_armv8mml.h	784;"	d
SCB_CFSR_IBUSERR_Msk	CMSIS/core_cm4.h	659;"	d
SCB_CFSR_IBUSERR_Pos	CMSIS/core_armv8mml.h	783;"	d
SCB_CFSR_IBUSERR_Pos	CMSIS/core_cm4.h	658;"	d
SCB_CFSR_IMPRECISERR_Msk	CMSIS/core_armv8mml.h	778;"	d
SCB_CFSR_IMPRECISERR_Msk	CMSIS/core_cm4.h	653;"	d
SCB_CFSR_IMPRECISERR_Pos	CMSIS/core_armv8mml.h	777;"	d
SCB_CFSR_IMPRECISERR_Pos	CMSIS/core_cm4.h	652;"	d
SCB_CFSR_INVPC_Msk	CMSIS/core_armv8mml.h	800;"	d
SCB_CFSR_INVPC_Msk	CMSIS/core_cm4.h	672;"	d
SCB_CFSR_INVPC_Pos	CMSIS/core_armv8mml.h	799;"	d
SCB_CFSR_INVPC_Pos	CMSIS/core_cm4.h	671;"	d
SCB_CFSR_INVSTATE_Msk	CMSIS/core_armv8mml.h	803;"	d
SCB_CFSR_INVSTATE_Msk	CMSIS/core_cm4.h	675;"	d
SCB_CFSR_INVSTATE_Pos	CMSIS/core_armv8mml.h	802;"	d
SCB_CFSR_INVSTATE_Pos	CMSIS/core_cm4.h	674;"	d
SCB_CFSR_LSPERR_Msk	CMSIS/core_armv8mml.h	769;"	d
SCB_CFSR_LSPERR_Msk	CMSIS/core_cm4.h	644;"	d
SCB_CFSR_LSPERR_Pos	CMSIS/core_armv8mml.h	768;"	d
SCB_CFSR_LSPERR_Pos	CMSIS/core_cm4.h	643;"	d
SCB_CFSR_MEMFAULTSR_Msk	CMSIS/core_armv8mml.h	743;"	d
SCB_CFSR_MEMFAULTSR_Msk	CMSIS/core_cm4.h	618;"	d
SCB_CFSR_MEMFAULTSR_Pos	CMSIS/core_armv8mml.h	742;"	d
SCB_CFSR_MEMFAULTSR_Pos	CMSIS/core_cm4.h	617;"	d
SCB_CFSR_MLSPERR_Msk	CMSIS/core_armv8mml.h	750;"	d
SCB_CFSR_MLSPERR_Msk	CMSIS/core_cm4.h	625;"	d
SCB_CFSR_MLSPERR_Pos	CMSIS/core_armv8mml.h	749;"	d
SCB_CFSR_MLSPERR_Pos	CMSIS/core_cm4.h	624;"	d
SCB_CFSR_MMARVALID_Msk	CMSIS/core_armv8mml.h	747;"	d
SCB_CFSR_MMARVALID_Msk	CMSIS/core_cm4.h	622;"	d
SCB_CFSR_MMARVALID_Pos	CMSIS/core_armv8mml.h	746;"	d
SCB_CFSR_MMARVALID_Pos	CMSIS/core_cm4.h	621;"	d
SCB_CFSR_MSTKERR_Msk	CMSIS/core_armv8mml.h	753;"	d
SCB_CFSR_MSTKERR_Msk	CMSIS/core_cm4.h	628;"	d
SCB_CFSR_MSTKERR_Pos	CMSIS/core_armv8mml.h	752;"	d
SCB_CFSR_MSTKERR_Pos	CMSIS/core_cm4.h	627;"	d
SCB_CFSR_MUNSTKERR_Msk	CMSIS/core_armv8mml.h	756;"	d
SCB_CFSR_MUNSTKERR_Msk	CMSIS/core_cm4.h	631;"	d
SCB_CFSR_MUNSTKERR_Pos	CMSIS/core_armv8mml.h	755;"	d
SCB_CFSR_MUNSTKERR_Pos	CMSIS/core_cm4.h	630;"	d
SCB_CFSR_NOCP_Msk	CMSIS/core_armv8mml.h	797;"	d
SCB_CFSR_NOCP_Msk	CMSIS/core_cm4.h	669;"	d
SCB_CFSR_NOCP_Pos	CMSIS/core_armv8mml.h	796;"	d
SCB_CFSR_NOCP_Pos	CMSIS/core_cm4.h	668;"	d
SCB_CFSR_PRECISERR_Msk	CMSIS/core_armv8mml.h	781;"	d
SCB_CFSR_PRECISERR_Msk	CMSIS/core_cm4.h	656;"	d
SCB_CFSR_PRECISERR_Pos	CMSIS/core_armv8mml.h	780;"	d
SCB_CFSR_PRECISERR_Pos	CMSIS/core_cm4.h	655;"	d
SCB_CFSR_STKERR_Msk	CMSIS/core_armv8mml.h	772;"	d
SCB_CFSR_STKERR_Msk	CMSIS/core_cm4.h	647;"	d
SCB_CFSR_STKERR_Pos	CMSIS/core_armv8mml.h	771;"	d
SCB_CFSR_STKERR_Pos	CMSIS/core_cm4.h	646;"	d
SCB_CFSR_STKOF_Msk	CMSIS/core_armv8mml.h	794;"	d
SCB_CFSR_STKOF_Pos	CMSIS/core_armv8mml.h	793;"	d
SCB_CFSR_UNALIGNED_Msk	CMSIS/core_armv8mml.h	791;"	d
SCB_CFSR_UNALIGNED_Msk	CMSIS/core_cm4.h	666;"	d
SCB_CFSR_UNALIGNED_Pos	CMSIS/core_armv8mml.h	790;"	d
SCB_CFSR_UNALIGNED_Pos	CMSIS/core_cm4.h	665;"	d
SCB_CFSR_UNDEFINSTR_Msk	CMSIS/core_armv8mml.h	806;"	d
SCB_CFSR_UNDEFINSTR_Msk	CMSIS/core_cm4.h	678;"	d
SCB_CFSR_UNDEFINSTR_Pos	CMSIS/core_armv8mml.h	805;"	d
SCB_CFSR_UNDEFINSTR_Pos	CMSIS/core_cm4.h	677;"	d
SCB_CFSR_UNSTKERR_Msk	CMSIS/core_armv8mml.h	775;"	d
SCB_CFSR_UNSTKERR_Msk	CMSIS/core_cm4.h	650;"	d
SCB_CFSR_UNSTKERR_Pos	CMSIS/core_armv8mml.h	774;"	d
SCB_CFSR_UNSTKERR_Pos	CMSIS/core_cm4.h	649;"	d
SCB_CFSR_USGFAULTSR_Msk	CMSIS/core_armv8mml.h	737;"	d
SCB_CFSR_USGFAULTSR_Msk	CMSIS/core_cm4.h	612;"	d
SCB_CFSR_USGFAULTSR_Pos	CMSIS/core_armv8mml.h	736;"	d
SCB_CFSR_USGFAULTSR_Pos	CMSIS/core_cm4.h	611;"	d
SCB_CLIDR_LOC_Msk	CMSIS/core_armv8mml.h	849;"	d
SCB_CLIDR_LOC_Pos	CMSIS/core_armv8mml.h	848;"	d
SCB_CLIDR_LOUU_Msk	CMSIS/core_armv8mml.h	846;"	d
SCB_CLIDR_LOUU_Pos	CMSIS/core_armv8mml.h	845;"	d
SCB_CPUID_ARCHITECTURE_Msk	CMSIS/core_armv8mbl.h	406;"	d
SCB_CPUID_ARCHITECTURE_Msk	CMSIS/core_armv8mml.h	559;"	d
SCB_CPUID_ARCHITECTURE_Msk	CMSIS/core_cm4.h	473;"	d
SCB_CPUID_ARCHITECTURE_Pos	CMSIS/core_armv8mbl.h	405;"	d
SCB_CPUID_ARCHITECTURE_Pos	CMSIS/core_armv8mml.h	558;"	d
SCB_CPUID_ARCHITECTURE_Pos	CMSIS/core_cm4.h	472;"	d
SCB_CPUID_IMPLEMENTER_Msk	CMSIS/core_armv8mbl.h	400;"	d
SCB_CPUID_IMPLEMENTER_Msk	CMSIS/core_armv8mml.h	553;"	d
SCB_CPUID_IMPLEMENTER_Msk	CMSIS/core_cm4.h	467;"	d
SCB_CPUID_IMPLEMENTER_Pos	CMSIS/core_armv8mbl.h	399;"	d
SCB_CPUID_IMPLEMENTER_Pos	CMSIS/core_armv8mml.h	552;"	d
SCB_CPUID_IMPLEMENTER_Pos	CMSIS/core_cm4.h	466;"	d
SCB_CPUID_PARTNO_Msk	CMSIS/core_armv8mbl.h	409;"	d
SCB_CPUID_PARTNO_Msk	CMSIS/core_armv8mml.h	562;"	d
SCB_CPUID_PARTNO_Msk	CMSIS/core_cm4.h	476;"	d
SCB_CPUID_PARTNO_Pos	CMSIS/core_armv8mbl.h	408;"	d
SCB_CPUID_PARTNO_Pos	CMSIS/core_armv8mml.h	561;"	d
SCB_CPUID_PARTNO_Pos	CMSIS/core_cm4.h	475;"	d
SCB_CPUID_REVISION_Msk	CMSIS/core_armv8mbl.h	412;"	d
SCB_CPUID_REVISION_Msk	CMSIS/core_armv8mml.h	565;"	d
SCB_CPUID_REVISION_Msk	CMSIS/core_cm4.h	479;"	d
SCB_CPUID_REVISION_Pos	CMSIS/core_armv8mbl.h	411;"	d
SCB_CPUID_REVISION_Pos	CMSIS/core_armv8mml.h	564;"	d
SCB_CPUID_REVISION_Pos	CMSIS/core_cm4.h	478;"	d
SCB_CPUID_VARIANT_Msk	CMSIS/core_armv8mbl.h	403;"	d
SCB_CPUID_VARIANT_Msk	CMSIS/core_armv8mml.h	556;"	d
SCB_CPUID_VARIANT_Msk	CMSIS/core_cm4.h	470;"	d
SCB_CPUID_VARIANT_Pos	CMSIS/core_armv8mbl.h	402;"	d
SCB_CPUID_VARIANT_Pos	CMSIS/core_armv8mml.h	555;"	d
SCB_CPUID_VARIANT_Pos	CMSIS/core_cm4.h	469;"	d
SCB_CSSELR_IND_Msk	CMSIS/core_armv8mml.h	894;"	d
SCB_CSSELR_IND_Pos	CMSIS/core_armv8mml.h	893;"	d
SCB_CSSELR_LEVEL_Msk	CMSIS/core_armv8mml.h	891;"	d
SCB_CSSELR_LEVEL_Pos	CMSIS/core_armv8mml.h	890;"	d
SCB_CTR_CWG_Msk	CMSIS/core_armv8mml.h	856;"	d
SCB_CTR_CWG_Pos	CMSIS/core_armv8mml.h	855;"	d
SCB_CTR_DMINLINE_Msk	CMSIS/core_armv8mml.h	862;"	d
SCB_CTR_DMINLINE_Pos	CMSIS/core_armv8mml.h	861;"	d
SCB_CTR_ERG_Msk	CMSIS/core_armv8mml.h	859;"	d
SCB_CTR_ERG_Pos	CMSIS/core_armv8mml.h	858;"	d
SCB_CTR_FORMAT_Msk	CMSIS/core_armv8mml.h	853;"	d
SCB_CTR_FORMAT_Pos	CMSIS/core_armv8mml.h	852;"	d
SCB_CTR_IMINLINE_Msk	CMSIS/core_armv8mml.h	865;"	d
SCB_CTR_IMINLINE_Pos	CMSIS/core_armv8mml.h	864;"	d
SCB_DCCISW_SET_Msk	CMSIS/core_armv8mml.h	919;"	d
SCB_DCCISW_SET_Pos	CMSIS/core_armv8mml.h	918;"	d
SCB_DCCISW_WAY_Msk	CMSIS/core_armv8mml.h	916;"	d
SCB_DCCISW_WAY_Pos	CMSIS/core_armv8mml.h	915;"	d
SCB_DCCSW_SET_Msk	CMSIS/core_armv8mml.h	912;"	d
SCB_DCCSW_SET_Pos	CMSIS/core_armv8mml.h	911;"	d
SCB_DCCSW_WAY_Msk	CMSIS/core_armv8mml.h	909;"	d
SCB_DCCSW_WAY_Pos	CMSIS/core_armv8mml.h	908;"	d
SCB_DCISW_SET_Msk	CMSIS/core_armv8mml.h	905;"	d
SCB_DCISW_SET_Pos	CMSIS/core_armv8mml.h	904;"	d
SCB_DCISW_WAY_Msk	CMSIS/core_armv8mml.h	902;"	d
SCB_DCISW_WAY_Pos	CMSIS/core_armv8mml.h	901;"	d
SCB_DFSR_BKPT_Msk	CMSIS/core_armv8mml.h	829;"	d
SCB_DFSR_BKPT_Msk	CMSIS/core_cm4.h	701;"	d
SCB_DFSR_BKPT_Pos	CMSIS/core_armv8mml.h	828;"	d
SCB_DFSR_BKPT_Pos	CMSIS/core_cm4.h	700;"	d
SCB_DFSR_DWTTRAP_Msk	CMSIS/core_armv8mml.h	826;"	d
SCB_DFSR_DWTTRAP_Msk	CMSIS/core_cm4.h	698;"	d
SCB_DFSR_DWTTRAP_Pos	CMSIS/core_armv8mml.h	825;"	d
SCB_DFSR_DWTTRAP_Pos	CMSIS/core_cm4.h	697;"	d
SCB_DFSR_EXTERNAL_Msk	CMSIS/core_armv8mml.h	820;"	d
SCB_DFSR_EXTERNAL_Msk	CMSIS/core_cm4.h	692;"	d
SCB_DFSR_EXTERNAL_Pos	CMSIS/core_armv8mml.h	819;"	d
SCB_DFSR_EXTERNAL_Pos	CMSIS/core_cm4.h	691;"	d
SCB_DFSR_HALTED_Msk	CMSIS/core_armv8mml.h	832;"	d
SCB_DFSR_HALTED_Msk	CMSIS/core_cm4.h	704;"	d
SCB_DFSR_HALTED_Pos	CMSIS/core_armv8mml.h	831;"	d
SCB_DFSR_HALTED_Pos	CMSIS/core_cm4.h	703;"	d
SCB_DFSR_VCATCH_Msk	CMSIS/core_armv8mml.h	823;"	d
SCB_DFSR_VCATCH_Msk	CMSIS/core_cm4.h	695;"	d
SCB_DFSR_VCATCH_Pos	CMSIS/core_armv8mml.h	822;"	d
SCB_DFSR_VCATCH_Pos	CMSIS/core_cm4.h	694;"	d
SCB_DTCMCR_EN_Msk	CMSIS/core_armv8mml.h	945;"	d
SCB_DTCMCR_EN_Pos	CMSIS/core_armv8mml.h	944;"	d
SCB_DTCMCR_RETEN_Msk	CMSIS/core_armv8mml.h	939;"	d
SCB_DTCMCR_RETEN_Pos	CMSIS/core_armv8mml.h	938;"	d
SCB_DTCMCR_RMW_Msk	CMSIS/core_armv8mml.h	942;"	d
SCB_DTCMCR_RMW_Pos	CMSIS/core_armv8mml.h	941;"	d
SCB_DTCMCR_SZ_Msk	CMSIS/core_armv8mml.h	936;"	d
SCB_DTCMCR_SZ_Pos	CMSIS/core_armv8mml.h	935;"	d
SCB_GetFPUType	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t SCB_GetFPUType(void)$/;"	f
SCB_GetFPUType	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t SCB_GetFPUType(void)$/;"	f
SCB_GetFPUType	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t SCB_GetFPUType(void)$/;"	f
SCB_HFSR_DEBUGEVT_Msk	CMSIS/core_armv8mml.h	810;"	d
SCB_HFSR_DEBUGEVT_Msk	CMSIS/core_cm4.h	682;"	d
SCB_HFSR_DEBUGEVT_Pos	CMSIS/core_armv8mml.h	809;"	d
SCB_HFSR_DEBUGEVT_Pos	CMSIS/core_cm4.h	681;"	d
SCB_HFSR_FORCED_Msk	CMSIS/core_armv8mml.h	813;"	d
SCB_HFSR_FORCED_Msk	CMSIS/core_cm4.h	685;"	d
SCB_HFSR_FORCED_Pos	CMSIS/core_armv8mml.h	812;"	d
SCB_HFSR_FORCED_Pos	CMSIS/core_cm4.h	684;"	d
SCB_HFSR_VECTTBL_Msk	CMSIS/core_armv8mml.h	816;"	d
SCB_HFSR_VECTTBL_Msk	CMSIS/core_cm4.h	688;"	d
SCB_HFSR_VECTTBL_Pos	CMSIS/core_armv8mml.h	815;"	d
SCB_HFSR_VECTTBL_Pos	CMSIS/core_cm4.h	687;"	d
SCB_ICSR_ISRPENDING_Msk	CMSIS/core_armv8mbl.h	440;"	d
SCB_ICSR_ISRPENDING_Msk	CMSIS/core_armv8mml.h	593;"	d
SCB_ICSR_ISRPENDING_Msk	CMSIS/core_cm4.h	501;"	d
SCB_ICSR_ISRPENDING_Pos	CMSIS/core_armv8mbl.h	439;"	d
SCB_ICSR_ISRPENDING_Pos	CMSIS/core_armv8mml.h	592;"	d
SCB_ICSR_ISRPENDING_Pos	CMSIS/core_cm4.h	500;"	d
SCB_ICSR_ISRPREEMPT_Msk	CMSIS/core_armv8mbl.h	437;"	d
SCB_ICSR_ISRPREEMPT_Msk	CMSIS/core_armv8mml.h	590;"	d
SCB_ICSR_ISRPREEMPT_Msk	CMSIS/core_cm4.h	498;"	d
SCB_ICSR_ISRPREEMPT_Pos	CMSIS/core_armv8mbl.h	436;"	d
SCB_ICSR_ISRPREEMPT_Pos	CMSIS/core_armv8mml.h	589;"	d
SCB_ICSR_ISRPREEMPT_Pos	CMSIS/core_cm4.h	497;"	d
SCB_ICSR_NMIPENDSET_Msk	CMSIS/core_cm4.h	483;"	d
SCB_ICSR_NMIPENDSET_Pos	CMSIS/core_cm4.h	482;"	d
SCB_ICSR_PENDNMICLR_Msk	CMSIS/core_armv8mbl.h	419;"	d
SCB_ICSR_PENDNMICLR_Msk	CMSIS/core_armv8mml.h	572;"	d
SCB_ICSR_PENDNMICLR_Pos	CMSIS/core_armv8mbl.h	418;"	d
SCB_ICSR_PENDNMICLR_Pos	CMSIS/core_armv8mml.h	571;"	d
SCB_ICSR_PENDNMISET_Msk	CMSIS/core_armv8mbl.h	416;"	d
SCB_ICSR_PENDNMISET_Msk	CMSIS/core_armv8mml.h	569;"	d
SCB_ICSR_PENDNMISET_Pos	CMSIS/core_armv8mbl.h	415;"	d
SCB_ICSR_PENDNMISET_Pos	CMSIS/core_armv8mml.h	568;"	d
SCB_ICSR_PENDSTCLR_Msk	CMSIS/core_armv8mbl.h	431;"	d
SCB_ICSR_PENDSTCLR_Msk	CMSIS/core_armv8mml.h	584;"	d
SCB_ICSR_PENDSTCLR_Msk	CMSIS/core_cm4.h	495;"	d
SCB_ICSR_PENDSTCLR_Pos	CMSIS/core_armv8mbl.h	430;"	d
SCB_ICSR_PENDSTCLR_Pos	CMSIS/core_armv8mml.h	583;"	d
SCB_ICSR_PENDSTCLR_Pos	CMSIS/core_cm4.h	494;"	d
SCB_ICSR_PENDSTSET_Msk	CMSIS/core_armv8mbl.h	428;"	d
SCB_ICSR_PENDSTSET_Msk	CMSIS/core_armv8mml.h	581;"	d
SCB_ICSR_PENDSTSET_Msk	CMSIS/core_cm4.h	492;"	d
SCB_ICSR_PENDSTSET_Pos	CMSIS/core_armv8mbl.h	427;"	d
SCB_ICSR_PENDSTSET_Pos	CMSIS/core_armv8mml.h	580;"	d
SCB_ICSR_PENDSTSET_Pos	CMSIS/core_cm4.h	491;"	d
SCB_ICSR_PENDSVCLR_Msk	CMSIS/core_armv8mbl.h	425;"	d
SCB_ICSR_PENDSVCLR_Msk	CMSIS/core_armv8mml.h	578;"	d
SCB_ICSR_PENDSVCLR_Msk	CMSIS/core_cm4.h	489;"	d
SCB_ICSR_PENDSVCLR_Pos	CMSIS/core_armv8mbl.h	424;"	d
SCB_ICSR_PENDSVCLR_Pos	CMSIS/core_armv8mml.h	577;"	d
SCB_ICSR_PENDSVCLR_Pos	CMSIS/core_cm4.h	488;"	d
SCB_ICSR_PENDSVSET_Msk	CMSIS/core_armv8mbl.h	422;"	d
SCB_ICSR_PENDSVSET_Msk	CMSIS/core_armv8mml.h	575;"	d
SCB_ICSR_PENDSVSET_Msk	CMSIS/core_cm4.h	486;"	d
SCB_ICSR_PENDSVSET_Pos	CMSIS/core_armv8mbl.h	421;"	d
SCB_ICSR_PENDSVSET_Pos	CMSIS/core_armv8mml.h	574;"	d
SCB_ICSR_PENDSVSET_Pos	CMSIS/core_cm4.h	485;"	d
SCB_ICSR_RETTOBASE_Msk	CMSIS/core_armv8mbl.h	446;"	d
SCB_ICSR_RETTOBASE_Msk	CMSIS/core_armv8mml.h	599;"	d
SCB_ICSR_RETTOBASE_Msk	CMSIS/core_cm4.h	507;"	d
SCB_ICSR_RETTOBASE_Pos	CMSIS/core_armv8mbl.h	445;"	d
SCB_ICSR_RETTOBASE_Pos	CMSIS/core_armv8mml.h	598;"	d
SCB_ICSR_RETTOBASE_Pos	CMSIS/core_cm4.h	506;"	d
SCB_ICSR_STTNS_Msk	CMSIS/core_armv8mbl.h	434;"	d
SCB_ICSR_STTNS_Msk	CMSIS/core_armv8mml.h	587;"	d
SCB_ICSR_STTNS_Pos	CMSIS/core_armv8mbl.h	433;"	d
SCB_ICSR_STTNS_Pos	CMSIS/core_armv8mml.h	586;"	d
SCB_ICSR_VECTACTIVE_Msk	CMSIS/core_armv8mbl.h	449;"	d
SCB_ICSR_VECTACTIVE_Msk	CMSIS/core_armv8mml.h	602;"	d
SCB_ICSR_VECTACTIVE_Msk	CMSIS/core_cm4.h	510;"	d
SCB_ICSR_VECTACTIVE_Pos	CMSIS/core_armv8mbl.h	448;"	d
SCB_ICSR_VECTACTIVE_Pos	CMSIS/core_armv8mml.h	601;"	d
SCB_ICSR_VECTACTIVE_Pos	CMSIS/core_cm4.h	509;"	d
SCB_ICSR_VECTPENDING_Msk	CMSIS/core_armv8mbl.h	443;"	d
SCB_ICSR_VECTPENDING_Msk	CMSIS/core_armv8mml.h	596;"	d
SCB_ICSR_VECTPENDING_Msk	CMSIS/core_cm4.h	504;"	d
SCB_ICSR_VECTPENDING_Pos	CMSIS/core_armv8mbl.h	442;"	d
SCB_ICSR_VECTPENDING_Pos	CMSIS/core_armv8mml.h	595;"	d
SCB_ICSR_VECTPENDING_Pos	CMSIS/core_cm4.h	503;"	d
SCB_ITCMCR_EN_Msk	CMSIS/core_armv8mml.h	932;"	d
SCB_ITCMCR_EN_Pos	CMSIS/core_armv8mml.h	931;"	d
SCB_ITCMCR_RETEN_Msk	CMSIS/core_armv8mml.h	926;"	d
SCB_ITCMCR_RETEN_Pos	CMSIS/core_armv8mml.h	925;"	d
SCB_ITCMCR_RMW_Msk	CMSIS/core_armv8mml.h	929;"	d
SCB_ITCMCR_RMW_Pos	CMSIS/core_armv8mml.h	928;"	d
SCB_ITCMCR_SZ_Msk	CMSIS/core_armv8mml.h	923;"	d
SCB_ITCMCR_SZ_Pos	CMSIS/core_armv8mml.h	922;"	d
SCB_NS	CMSIS/core_armv8mbl.h	1200;"	d
SCB_NS	CMSIS/core_armv8mml.h	2066;"	d
SCB_NSACR_CP10_Msk	CMSIS/core_armv8mml.h	839;"	d
SCB_NSACR_CP10_Pos	CMSIS/core_armv8mml.h	838;"	d
SCB_NSACR_CP11_Msk	CMSIS/core_armv8mml.h	836;"	d
SCB_NSACR_CP11_Pos	CMSIS/core_armv8mml.h	835;"	d
SCB_NSACR_CPn_Msk	CMSIS/core_armv8mml.h	842;"	d
SCB_NSACR_CPn_Pos	CMSIS/core_armv8mml.h	841;"	d
SCB_SCR_SEVONPEND_Msk	CMSIS/core_armv8mbl.h	484;"	d
SCB_SCR_SEVONPEND_Msk	CMSIS/core_armv8mml.h	638;"	d
SCB_SCR_SEVONPEND_Msk	CMSIS/core_cm4.h	540;"	d
SCB_SCR_SEVONPEND_Pos	CMSIS/core_armv8mbl.h	483;"	d
SCB_SCR_SEVONPEND_Pos	CMSIS/core_armv8mml.h	637;"	d
SCB_SCR_SEVONPEND_Pos	CMSIS/core_cm4.h	539;"	d
SCB_SCR_SLEEPDEEPS_Msk	CMSIS/core_armv8mbl.h	487;"	d
SCB_SCR_SLEEPDEEPS_Msk	CMSIS/core_armv8mml.h	641;"	d
SCB_SCR_SLEEPDEEPS_Pos	CMSIS/core_armv8mbl.h	486;"	d
SCB_SCR_SLEEPDEEPS_Pos	CMSIS/core_armv8mml.h	640;"	d
SCB_SCR_SLEEPDEEP_Msk	CMSIS/core_armv8mbl.h	490;"	d
SCB_SCR_SLEEPDEEP_Msk	CMSIS/core_armv8mml.h	644;"	d
SCB_SCR_SLEEPDEEP_Msk	CMSIS/core_cm4.h	543;"	d
SCB_SCR_SLEEPDEEP_Pos	CMSIS/core_armv8mbl.h	489;"	d
SCB_SCR_SLEEPDEEP_Pos	CMSIS/core_armv8mml.h	643;"	d
SCB_SCR_SLEEPDEEP_Pos	CMSIS/core_cm4.h	542;"	d
SCB_SCR_SLEEPONEXIT_Msk	CMSIS/core_armv8mbl.h	493;"	d
SCB_SCR_SLEEPONEXIT_Msk	CMSIS/core_armv8mml.h	647;"	d
SCB_SCR_SLEEPONEXIT_Msk	CMSIS/core_cm4.h	546;"	d
SCB_SCR_SLEEPONEXIT_Pos	CMSIS/core_armv8mbl.h	492;"	d
SCB_SCR_SLEEPONEXIT_Pos	CMSIS/core_armv8mml.h	646;"	d
SCB_SCR_SLEEPONEXIT_Pos	CMSIS/core_cm4.h	545;"	d
SCB_SHCSR_BUSFAULTACT_Msk	CMSIS/core_armv8mml.h	730;"	d
SCB_SHCSR_BUSFAULTACT_Msk	CMSIS/core_cm4.h	605;"	d
SCB_SHCSR_BUSFAULTACT_Pos	CMSIS/core_armv8mml.h	729;"	d
SCB_SHCSR_BUSFAULTACT_Pos	CMSIS/core_cm4.h	604;"	d
SCB_SHCSR_BUSFAULTENA_Msk	CMSIS/core_armv8mml.h	688;"	d
SCB_SHCSR_BUSFAULTENA_Msk	CMSIS/core_cm4.h	572;"	d
SCB_SHCSR_BUSFAULTENA_Pos	CMSIS/core_armv8mml.h	687;"	d
SCB_SHCSR_BUSFAULTENA_Pos	CMSIS/core_cm4.h	571;"	d
SCB_SHCSR_BUSFAULTPENDED_Msk	CMSIS/core_armv8mml.h	697;"	d
SCB_SHCSR_BUSFAULTPENDED_Msk	CMSIS/core_cm4.h	581;"	d
SCB_SHCSR_BUSFAULTPENDED_Pos	CMSIS/core_armv8mml.h	696;"	d
SCB_SHCSR_BUSFAULTPENDED_Pos	CMSIS/core_cm4.h	580;"	d
SCB_SHCSR_HARDFAULTACT_Msk	CMSIS/core_armv8mbl.h	540;"	d
SCB_SHCSR_HARDFAULTACT_Msk	CMSIS/core_armv8mml.h	727;"	d
SCB_SHCSR_HARDFAULTACT_Pos	CMSIS/core_armv8mbl.h	539;"	d
SCB_SHCSR_HARDFAULTACT_Pos	CMSIS/core_armv8mml.h	726;"	d
SCB_SHCSR_HARDFAULTPENDED_Msk	CMSIS/core_armv8mbl.h	522;"	d
SCB_SHCSR_HARDFAULTPENDED_Msk	CMSIS/core_armv8mml.h	676;"	d
SCB_SHCSR_HARDFAULTPENDED_Pos	CMSIS/core_armv8mbl.h	521;"	d
SCB_SHCSR_HARDFAULTPENDED_Pos	CMSIS/core_armv8mml.h	675;"	d
SCB_SHCSR_MEMFAULTACT_Msk	CMSIS/core_armv8mml.h	733;"	d
SCB_SHCSR_MEMFAULTACT_Msk	CMSIS/core_cm4.h	608;"	d
SCB_SHCSR_MEMFAULTACT_Pos	CMSIS/core_armv8mml.h	732;"	d
SCB_SHCSR_MEMFAULTACT_Pos	CMSIS/core_cm4.h	607;"	d
SCB_SHCSR_MEMFAULTENA_Msk	CMSIS/core_armv8mml.h	691;"	d
SCB_SHCSR_MEMFAULTENA_Msk	CMSIS/core_cm4.h	575;"	d
SCB_SHCSR_MEMFAULTENA_Pos	CMSIS/core_armv8mml.h	690;"	d
SCB_SHCSR_MEMFAULTENA_Pos	CMSIS/core_cm4.h	574;"	d
SCB_SHCSR_MEMFAULTPENDED_Msk	CMSIS/core_armv8mml.h	700;"	d
SCB_SHCSR_MEMFAULTPENDED_Msk	CMSIS/core_cm4.h	584;"	d
SCB_SHCSR_MEMFAULTPENDED_Pos	CMSIS/core_armv8mml.h	699;"	d
SCB_SHCSR_MEMFAULTPENDED_Pos	CMSIS/core_cm4.h	583;"	d
SCB_SHCSR_MONITORACT_Msk	CMSIS/core_armv8mml.h	712;"	d
SCB_SHCSR_MONITORACT_Msk	CMSIS/core_cm4.h	596;"	d
SCB_SHCSR_MONITORACT_Pos	CMSIS/core_armv8mml.h	711;"	d
SCB_SHCSR_MONITORACT_Pos	CMSIS/core_cm4.h	595;"	d
SCB_SHCSR_NMIACT_Msk	CMSIS/core_armv8mbl.h	537;"	d
SCB_SHCSR_NMIACT_Msk	CMSIS/core_armv8mml.h	718;"	d
SCB_SHCSR_NMIACT_Pos	CMSIS/core_armv8mbl.h	536;"	d
SCB_SHCSR_NMIACT_Pos	CMSIS/core_armv8mml.h	717;"	d
SCB_SHCSR_PENDSVACT_Msk	CMSIS/core_armv8mbl.h	531;"	d
SCB_SHCSR_PENDSVACT_Msk	CMSIS/core_armv8mml.h	709;"	d
SCB_SHCSR_PENDSVACT_Msk	CMSIS/core_cm4.h	593;"	d
SCB_SHCSR_PENDSVACT_Pos	CMSIS/core_armv8mbl.h	530;"	d
SCB_SHCSR_PENDSVACT_Pos	CMSIS/core_armv8mml.h	708;"	d
SCB_SHCSR_PENDSVACT_Pos	CMSIS/core_cm4.h	592;"	d
SCB_SHCSR_SECUREFAULTACT_Msk	CMSIS/core_armv8mml.h	721;"	d
SCB_SHCSR_SECUREFAULTACT_Pos	CMSIS/core_armv8mml.h	720;"	d
SCB_SHCSR_SECUREFAULTENA_Msk	CMSIS/core_armv8mml.h	682;"	d
SCB_SHCSR_SECUREFAULTENA_Pos	CMSIS/core_armv8mml.h	681;"	d
SCB_SHCSR_SECUREFAULTPENDED_Msk	CMSIS/core_armv8mml.h	679;"	d
SCB_SHCSR_SECUREFAULTPENDED_Pos	CMSIS/core_armv8mml.h	678;"	d
SCB_SHCSR_SVCALLACT_Msk	CMSIS/core_armv8mbl.h	534;"	d
SCB_SHCSR_SVCALLACT_Msk	CMSIS/core_armv8mml.h	715;"	d
SCB_SHCSR_SVCALLACT_Msk	CMSIS/core_cm4.h	599;"	d
SCB_SHCSR_SVCALLACT_Pos	CMSIS/core_armv8mbl.h	533;"	d
SCB_SHCSR_SVCALLACT_Pos	CMSIS/core_armv8mml.h	714;"	d
SCB_SHCSR_SVCALLACT_Pos	CMSIS/core_cm4.h	598;"	d
SCB_SHCSR_SVCALLPENDED_Msk	CMSIS/core_armv8mbl.h	525;"	d
SCB_SHCSR_SVCALLPENDED_Msk	CMSIS/core_armv8mml.h	694;"	d
SCB_SHCSR_SVCALLPENDED_Msk	CMSIS/core_cm4.h	578;"	d
SCB_SHCSR_SVCALLPENDED_Pos	CMSIS/core_armv8mbl.h	524;"	d
SCB_SHCSR_SVCALLPENDED_Pos	CMSIS/core_armv8mml.h	693;"	d
SCB_SHCSR_SVCALLPENDED_Pos	CMSIS/core_cm4.h	577;"	d
SCB_SHCSR_SYSTICKACT_Msk	CMSIS/core_armv8mbl.h	528;"	d
SCB_SHCSR_SYSTICKACT_Msk	CMSIS/core_armv8mml.h	706;"	d
SCB_SHCSR_SYSTICKACT_Msk	CMSIS/core_cm4.h	590;"	d
SCB_SHCSR_SYSTICKACT_Pos	CMSIS/core_armv8mbl.h	527;"	d
SCB_SHCSR_SYSTICKACT_Pos	CMSIS/core_armv8mml.h	705;"	d
SCB_SHCSR_SYSTICKACT_Pos	CMSIS/core_cm4.h	589;"	d
SCB_SHCSR_USGFAULTACT_Msk	CMSIS/core_armv8mml.h	724;"	d
SCB_SHCSR_USGFAULTACT_Msk	CMSIS/core_cm4.h	602;"	d
SCB_SHCSR_USGFAULTACT_Pos	CMSIS/core_armv8mml.h	723;"	d
SCB_SHCSR_USGFAULTACT_Pos	CMSIS/core_cm4.h	601;"	d
SCB_SHCSR_USGFAULTENA_Msk	CMSIS/core_armv8mml.h	685;"	d
SCB_SHCSR_USGFAULTENA_Msk	CMSIS/core_cm4.h	569;"	d
SCB_SHCSR_USGFAULTENA_Pos	CMSIS/core_armv8mml.h	684;"	d
SCB_SHCSR_USGFAULTENA_Pos	CMSIS/core_cm4.h	568;"	d
SCB_SHCSR_USGFAULTPENDED_Msk	CMSIS/core_armv8mml.h	703;"	d
SCB_SHCSR_USGFAULTPENDED_Msk	CMSIS/core_cm4.h	587;"	d
SCB_SHCSR_USGFAULTPENDED_Pos	CMSIS/core_armv8mml.h	702;"	d
SCB_SHCSR_USGFAULTPENDED_Pos	CMSIS/core_cm4.h	586;"	d
SCB_STIR_INTID_Msk	CMSIS/core_armv8mml.h	898;"	d
SCB_STIR_INTID_Pos	CMSIS/core_armv8mml.h	897;"	d
SCB_Type	CMSIS/core_armv8mbl.h	/^} SCB_Type;$/;"	t	typeref:struct:__anon122
SCB_Type	CMSIS/core_armv8mml.h	/^} SCB_Type;$/;"	t	typeref:struct:__anon18
SCB_Type	CMSIS/core_cm4.h	/^} SCB_Type;$/;"	t	typeref:struct:__anon40
SCB_VTOR_TBLOFF_Msk	CMSIS/core_armv8mbl.h	454;"	d
SCB_VTOR_TBLOFF_Msk	CMSIS/core_armv8mml.h	606;"	d
SCB_VTOR_TBLOFF_Msk	CMSIS/core_cm4.h	514;"	d
SCB_VTOR_TBLOFF_Pos	CMSIS/core_armv8mbl.h	453;"	d
SCB_VTOR_TBLOFF_Pos	CMSIS/core_armv8mml.h	605;"	d
SCB_VTOR_TBLOFF_Pos	CMSIS/core_cm4.h	513;"	d
SCICTRL	device/LPC54018.h	/^  __IO uint32_t SCICTRL;                           \/**< Smart Card Interface control register, offset: 0x48 *\/$/;"	m	struct:__anon179
SCR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t SCR;                    \/*!< Offset: 0x010 (R\/W)  System Control Register *\/$/;"	m	struct:__anon122
SCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t SCR;                    \/*!< Offset: 0x010 (R\/W)  System Control Register *\/$/;"	m	struct:__anon18
SCR	CMSIS/core_cm4.h	/^  __IOM uint32_t SCR;                    \/*!< Offset: 0x010 (R\/W)  System Control Register *\/$/;"	m	struct:__anon40
SCR	device/LPC54018.h	/^  __IO uint32_t SCR;                               \/**< Scratch Pad Register, offset: 0x1C *\/$/;"	m	struct:__anon179
SCR	usb/device/class/usb_device_video.h	/^            uint8_t SCR : 1U; \/*!< Source Clock Reference. This bit, when set, indicates the presence of a SCR field.*\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
SCROLLBAR_BKCOLOR0_DEFAULT	emwin/emWin_header/SCROLLBAR.h	206;"	d
SCROLLBAR_BKCOLOR1_DEFAULT	emwin/emWin_header/SCROLLBAR.h	207;"	d
SCROLLBAR_CF_FOCUSABLE	emwin/emWin_header/SCROLLBAR.h	79;"	d
SCROLLBAR_CF_FOCUSSABLE	emwin/emWin_header/SCROLLBAR.h	81;"	d
SCROLLBAR_CF_VERTICAL	emwin/emWin_header/SCROLLBAR.h	78;"	d
SCROLLBAR_CI_ARROW	emwin/emWin_header/SCROLLBAR.h	66;"	d
SCROLLBAR_CI_SHAFT	emwin/emWin_header/SCROLLBAR.h	65;"	d
SCROLLBAR_CI_THUMB	emwin/emWin_header/SCROLLBAR.h	64;"	d
SCROLLBAR_COLOR0_DEFAULT	emwin/emWin_header/SCROLLBAR.h	208;"	d
SCROLLBAR_COLOR_ARROW_DEFAULT	emwin/emWin_header/SCROLLBAR_Private.h	78;"	d
SCROLLBAR_COLOR_SHAFT_DEFAULT	emwin/emWin_header/SCROLLBAR_Private.h	74;"	d
SCROLLBAR_COLOR_THUMB_DEFAULT	emwin/emWin_header/SCROLLBAR_Private.h	82;"	d
SCROLLBAR_DEFAULT_WIDTH	emwin/emWin_header/SCROLLBAR_Private.h	91;"	d
SCROLLBAR_DEFAULT_WIDTH	emwin/emWin_header/SCROLLBAR_Private.h	93;"	d
SCROLLBAR_DEFAULT_WIDTH	emwin/emWin_header/SCROLLBAR_Private.h	95;"	d
SCROLLBAR_H	emwin/emWin_header/SCROLLBAR.h	46;"	d
SCROLLBAR_Handle	emwin/emWin_header/SCROLLBAR.h	/^typedef WM_HMEM SCROLLBAR_Handle;$/;"	t
SCROLLBAR_ID	emwin/emWin_header/WIDGET.h	117;"	d
SCROLLBAR_INIT_ID	emwin/emWin_header/SCROLLBAR_Private.h	160;"	d
SCROLLBAR_INIT_ID	emwin/emWin_header/SCROLLBAR_Private.h	162;"	d
SCROLLBAR_LOCK_H	emwin/emWin_header/SCROLLBAR_Private.h	167;"	d
SCROLLBAR_LOCK_H	emwin/emWin_header/SCROLLBAR_Private.h	169;"	d
SCROLLBAR_OBJ	emwin/emWin_header/SCROLLBAR_Private.h	/^struct SCROLLBAR_OBJ {$/;"	s
SCROLLBAR_OBJ	emwin/emWin_header/SCROLLBAR_Private.h	/^typedef struct SCROLLBAR_OBJ SCROLLBAR_OBJ;$/;"	t	typeref:struct:SCROLLBAR_OBJ
SCROLLBAR_POSITIONS	emwin/emWin_header/SCROLLBAR_Private.h	/^} SCROLLBAR_POSITIONS;$/;"	t	typeref:struct:__anon349
SCROLLBAR_PRIVATE_H	emwin/emWin_header/SCROLLBAR_Private.h	46;"	d
SCROLLBAR_PROPS	emwin/emWin_header/SCROLLBAR_Private.h	/^} SCROLLBAR_PROPS;$/;"	t	typeref:struct:__anon348
SCROLLBAR_SIZE	emwin/emWin_header/MULTIPAGE.h	87;"	d
SCROLLBAR_SKINFLEX_INFO	emwin/emWin_header/SCROLLBAR.h	/^} SCROLLBAR_SKINFLEX_INFO;$/;"	t	typeref:struct:__anon216
SCROLLBAR_SKINFLEX_PI_PRESSED	emwin/emWin_header/SCROLLBAR.h	87;"	d
SCROLLBAR_SKINFLEX_PI_UNPRESSED	emwin/emWin_header/SCROLLBAR.h	88;"	d
SCROLLBAR_SKINFLEX_PROPS	emwin/emWin_header/SCROLLBAR.h	/^} SCROLLBAR_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon215
SCROLLBAR_SKIN_FLEX	emwin/emWin_header/SCROLLBAR.h	168;"	d
SCROLLBAR_SKIN_PRIVATE	emwin/emWin_header/SCROLLBAR_Private.h	/^} SCROLLBAR_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon347
SCROLLBAR_STATE_PRESSED	emwin/emWin_header/SCROLLBAR.h	72;"	d
SCROLLBAR_THUMB_SIZE_MIN_DEFAULT	emwin/emWin_header/SCROLLBAR_Private.h	86;"	d
SCROLLBAR_TIMER_ID	emwin/emWin_header/SCROLLBAR_Private.h	99;"	d
SCS_BASE	CMSIS/core_armv8mbl.h	1167;"	d
SCS_BASE	CMSIS/core_armv8mml.h	2027;"	d
SCS_BASE	CMSIS/core_cm4.h	1551;"	d
SCS_BASE_NS	CMSIS/core_armv8mbl.h	1194;"	d
SCS_BASE_NS	CMSIS/core_armv8mml.h	2059;"	d
SCT0	device/LPC54018.h	9242;"	d
SCT0_BASE	device/LPC54018.h	9240;"	d
SCT0_DriverIRQHandler	drivers/fsl_sctimer.c	/^void SCT0_DriverIRQHandler(void)$/;"	f
SCT0_INMUX	device/LPC54018.h	/^  __IO uint32_t SCT0_INMUX[7];                     \/**< Trigger select register for DMA channel, array offset: 0x0, array step: 0x4 *\/$/;"	m	struct:__anon163
SCT0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void SCT0_IRQHandler(void)$/;"	f
SCT0_IRQn	device/LPC54018.h	/^  SCT0_IRQn                    = 12,               \/**< SCTimer\/PWM *\/$/;"	e	enum:IRQn
SCT0_PMUX_ID	drivers/fsl_inputmux_connections.h	32;"	d
SCTCAP	device/LPC54018.h	/^    __IO uint32_t SCTCAP[16];                        \/**< SCT capture register of capture channel, array offset: 0x100, array step: 0x4 *\/$/;"	m	union:__anon172::__anon173
SCTCAPCTRL	device/LPC54018.h	/^    __IO uint32_t SCTCAPCTRL[16];                    \/**< SCT capture control register, array offset: 0x200, array step: 0x4 *\/$/;"	m	union:__anon172::__anon174
SCTCLKDIV	device/LPC54018.h	/^  __IO uint32_t SCTCLKDIV;                         \/**< SCT\/PWM clock divider, offset: 0x3B4 *\/$/;"	m	struct:__anon185
SCTCLKSEL	device/LPC54018.h	/^  __IO uint32_t SCTCLKSEL;                         \/**< SCTimer\/PWM clock source select, offset: 0x2F0 *\/$/;"	m	struct:__anon185
SCTIMER_ClearStatusFlags	drivers/fsl_sctimer.h	/^static inline void SCTIMER_ClearStatusFlags(SCT_Type *base, uint32_t mask)$/;"	f
SCTIMER_CreateAndScheduleEvent	drivers/fsl_sctimer.c	/^status_t SCTIMER_CreateAndScheduleEvent(SCT_Type *base,$/;"	f
SCTIMER_Deinit	drivers/fsl_sctimer.c	/^void SCTIMER_Deinit(SCT_Type *base)$/;"	f
SCTIMER_DisableInterrupts	drivers/fsl_sctimer.h	/^static inline void SCTIMER_DisableInterrupts(SCT_Type *base, uint32_t mask)$/;"	f
SCTIMER_EnableInterrupts	drivers/fsl_sctimer.h	/^static inline void SCTIMER_EnableInterrupts(SCT_Type *base, uint32_t mask)$/;"	f
SCTIMER_EventHandleIRQ	drivers/fsl_sctimer.c	/^void SCTIMER_EventHandleIRQ(SCT_Type *base)$/;"	f
SCTIMER_GetCurrentState	drivers/fsl_sctimer.c	/^uint32_t SCTIMER_GetCurrentState(SCT_Type *base)$/;"	f
SCTIMER_GetDefaultConfig	drivers/fsl_sctimer.c	/^void SCTIMER_GetDefaultConfig(sctimer_config_t *config)$/;"	f
SCTIMER_GetEnabledInterrupts	drivers/fsl_sctimer.h	/^static inline uint32_t SCTIMER_GetEnabledInterrupts(SCT_Type *base)$/;"	f
SCTIMER_GetInstance	drivers/fsl_sctimer.c	/^static uint32_t SCTIMER_GetInstance(SCT_Type *base)$/;"	f	file:
SCTIMER_GetStatusFlags	drivers/fsl_sctimer.h	/^static inline uint32_t SCTIMER_GetStatusFlags(SCT_Type *base)$/;"	f
SCTIMER_IncreaseState	drivers/fsl_sctimer.c	/^status_t SCTIMER_IncreaseState(SCT_Type *base)$/;"	f
SCTIMER_Init	drivers/fsl_sctimer.c	/^status_t SCTIMER_Init(SCT_Type *base, const sctimer_config_t *config)$/;"	f
SCTIMER_ScheduleEvent	drivers/fsl_sctimer.c	/^void SCTIMER_ScheduleEvent(SCT_Type *base, uint32_t event)$/;"	f
SCTIMER_SetCallback	drivers/fsl_sctimer.c	/^void SCTIMER_SetCallback(SCT_Type *base, sctimer_event_callback_t callback, uint32_t event)$/;"	f
SCTIMER_SetupCaptureAction	drivers/fsl_sctimer.c	/^status_t SCTIMER_SetupCaptureAction(SCT_Type *base,$/;"	f
SCTIMER_SetupCounterHaltAction	drivers/fsl_sctimer.h	/^static inline void SCTIMER_SetupCounterHaltAction(SCT_Type *base, sctimer_counter_t whichCounter, uint32_t event)$/;"	f
SCTIMER_SetupCounterLimitAction	drivers/fsl_sctimer.h	/^static inline void SCTIMER_SetupCounterLimitAction(SCT_Type *base, sctimer_counter_t whichCounter, uint32_t event)$/;"	f
SCTIMER_SetupCounterStartAction	drivers/fsl_sctimer.h	/^static inline void SCTIMER_SetupCounterStartAction(SCT_Type *base, sctimer_counter_t whichCounter, uint32_t event)$/;"	f
SCTIMER_SetupCounterStopAction	drivers/fsl_sctimer.h	/^static inline void SCTIMER_SetupCounterStopAction(SCT_Type *base, sctimer_counter_t whichCounter, uint32_t event)$/;"	f
SCTIMER_SetupDmaTriggerAction	drivers/fsl_sctimer.h	/^static inline void SCTIMER_SetupDmaTriggerAction(SCT_Type *base, uint32_t dmaNumber, uint32_t event)$/;"	f
SCTIMER_SetupNextStateAction	drivers/fsl_sctimer.h	/^static inline void SCTIMER_SetupNextStateAction(SCT_Type *base, uint32_t nextState, uint32_t event)$/;"	f
SCTIMER_SetupOutputClearAction	drivers/fsl_sctimer.h	/^static inline void SCTIMER_SetupOutputClearAction(SCT_Type *base, uint32_t whichIO, uint32_t event)$/;"	f
SCTIMER_SetupOutputSetAction	drivers/fsl_sctimer.h	/^static inline void SCTIMER_SetupOutputSetAction(SCT_Type *base, uint32_t whichIO, uint32_t event)$/;"	f
SCTIMER_SetupOutputToggleAction	drivers/fsl_sctimer.c	/^void SCTIMER_SetupOutputToggleAction(SCT_Type *base, uint32_t whichIO, uint32_t event)$/;"	f
SCTIMER_SetupPwm	drivers/fsl_sctimer.c	/^status_t SCTIMER_SetupPwm(SCT_Type *base,$/;"	f
SCTIMER_StartTimer	drivers/fsl_sctimer.h	/^static inline void SCTIMER_StartTimer(SCT_Type *base, sctimer_counter_t countertoStart)$/;"	f
SCTIMER_StopTimer	drivers/fsl_sctimer.h	/^static inline void SCTIMER_StopTimer(SCT_Type *base, sctimer_counter_t countertoStop)$/;"	f
SCTIMER_UpdatePwmDutycycle	drivers/fsl_sctimer.c	/^void SCTIMER_UpdatePwmDutycycle(SCT_Type *base, sctimer_out_t output, uint8_t dutyCyclePercent, uint32_t event)$/;"	f
SCTMATCH	device/LPC54018.h	/^    __IO uint32_t SCTMATCH[16];                      \/**< SCT match value register of match channels, array offset: 0x100, array step: 0x4 *\/$/;"	m	union:__anon172::__anon173
SCTMATCHREL	device/LPC54018.h	/^    __IO uint32_t SCTMATCHREL[16];                   \/**< SCT match reload value register, array offset: 0x200, array step: 0x4 *\/$/;"	m	union:__anon172::__anon174
SCT_BASE_ADDRS	device/LPC54018.h	9244;"	d
SCT_BASE_PTRS	device/LPC54018.h	9246;"	d
SCT_CLOCKS	drivers/fsl_clock.h	156;"	d
SCT_CONEN_NCEN	device/LPC54018.h	9064;"	d
SCT_CONEN_NCEN_MASK	device/LPC54018.h	9062;"	d
SCT_CONEN_NCEN_SHIFT	device/LPC54018.h	9063;"	d
SCT_CONFIG_AUTOLIMIT_H	device/LPC54018.h	8512;"	d
SCT_CONFIG_AUTOLIMIT_H_MASK	device/LPC54018.h	8510;"	d
SCT_CONFIG_AUTOLIMIT_H_SHIFT	device/LPC54018.h	8511;"	d
SCT_CONFIG_AUTOLIMIT_L	device/LPC54018.h	8509;"	d
SCT_CONFIG_AUTOLIMIT_L_MASK	device/LPC54018.h	8507;"	d
SCT_CONFIG_AUTOLIMIT_L_SHIFT	device/LPC54018.h	8508;"	d
SCT_CONFIG_CKSEL	device/LPC54018.h	8497;"	d
SCT_CONFIG_CKSEL_MASK	device/LPC54018.h	8484;"	d
SCT_CONFIG_CKSEL_SHIFT	device/LPC54018.h	8485;"	d
SCT_CONFIG_CLKMODE	device/LPC54018.h	8483;"	d
SCT_CONFIG_CLKMODE_MASK	device/LPC54018.h	8467;"	d
SCT_CONFIG_CLKMODE_SHIFT	device/LPC54018.h	8468;"	d
SCT_CONFIG_INSYNC	device/LPC54018.h	8506;"	d
SCT_CONFIG_INSYNC_MASK	device/LPC54018.h	8504;"	d
SCT_CONFIG_INSYNC_SHIFT	device/LPC54018.h	8505;"	d
SCT_CONFIG_NORELAOD_L	device/LPC54018.h	8500;"	d
SCT_CONFIG_NORELAOD_L_MASK	device/LPC54018.h	8498;"	d
SCT_CONFIG_NORELAOD_L_SHIFT	device/LPC54018.h	8499;"	d
SCT_CONFIG_NORELOAD_H	device/LPC54018.h	8503;"	d
SCT_CONFIG_NORELOAD_H_MASK	device/LPC54018.h	8501;"	d
SCT_CONFIG_NORELOAD_H_SHIFT	device/LPC54018.h	8502;"	d
SCT_CONFIG_UNIFY	device/LPC54018.h	8466;"	d
SCT_CONFIG_UNIFY_MASK	device/LPC54018.h	8460;"	d
SCT_CONFIG_UNIFY_SHIFT	device/LPC54018.h	8461;"	d
SCT_CONFLAG_BUSERRH	device/LPC54018.h	9077;"	d
SCT_CONFLAG_BUSERRH_MASK	device/LPC54018.h	9075;"	d
SCT_CONFLAG_BUSERRH_SHIFT	device/LPC54018.h	9076;"	d
SCT_CONFLAG_BUSERRL	device/LPC54018.h	9074;"	d
SCT_CONFLAG_BUSERRL_MASK	device/LPC54018.h	9072;"	d
SCT_CONFLAG_BUSERRL_SHIFT	device/LPC54018.h	9073;"	d
SCT_CONFLAG_NCFLAG	device/LPC54018.h	9071;"	d
SCT_CONFLAG_NCFLAG_MASK	device/LPC54018.h	9069;"	d
SCT_CONFLAG_NCFLAG_SHIFT	device/LPC54018.h	9070;"	d
SCT_COUNT_CTR_H	device/LPC54018.h	8610;"	d
SCT_COUNT_CTR_H_MASK	device/LPC54018.h	8608;"	d
SCT_COUNT_CTR_H_SHIFT	device/LPC54018.h	8609;"	d
SCT_COUNT_CTR_L	device/LPC54018.h	8607;"	d
SCT_COUNT_CTR_L_MASK	device/LPC54018.h	8605;"	d
SCT_COUNT_CTR_L_SHIFT	device/LPC54018.h	8606;"	d
SCT_CTRL_BIDIR_H	device/LPC54018.h	8557;"	d
SCT_CTRL_BIDIR_H_MASK	device/LPC54018.h	8551;"	d
SCT_CTRL_BIDIR_H_SHIFT	device/LPC54018.h	8552;"	d
SCT_CTRL_BIDIR_L	device/LPC54018.h	8535;"	d
SCT_CTRL_BIDIR_L_MASK	device/LPC54018.h	8529;"	d
SCT_CTRL_BIDIR_L_SHIFT	device/LPC54018.h	8530;"	d
SCT_CTRL_CLRCTR_H	device/LPC54018.h	8550;"	d
SCT_CTRL_CLRCTR_H_MASK	device/LPC54018.h	8548;"	d
SCT_CTRL_CLRCTR_H_SHIFT	device/LPC54018.h	8549;"	d
SCT_CTRL_CLRCTR_L	device/LPC54018.h	8528;"	d
SCT_CTRL_CLRCTR_L_MASK	device/LPC54018.h	8526;"	d
SCT_CTRL_CLRCTR_L_SHIFT	device/LPC54018.h	8527;"	d
SCT_CTRL_DOWN_H	device/LPC54018.h	8541;"	d
SCT_CTRL_DOWN_H_MASK	device/LPC54018.h	8539;"	d
SCT_CTRL_DOWN_H_SHIFT	device/LPC54018.h	8540;"	d
SCT_CTRL_DOWN_L	device/LPC54018.h	8519;"	d
SCT_CTRL_DOWN_L_MASK	device/LPC54018.h	8517;"	d
SCT_CTRL_DOWN_L_SHIFT	device/LPC54018.h	8518;"	d
SCT_CTRL_HALT_H	device/LPC54018.h	8547;"	d
SCT_CTRL_HALT_H_MASK	device/LPC54018.h	8545;"	d
SCT_CTRL_HALT_H_SHIFT	device/LPC54018.h	8546;"	d
SCT_CTRL_HALT_L	device/LPC54018.h	8525;"	d
SCT_CTRL_HALT_L_MASK	device/LPC54018.h	8523;"	d
SCT_CTRL_HALT_L_SHIFT	device/LPC54018.h	8524;"	d
SCT_CTRL_PRE_H	device/LPC54018.h	8560;"	d
SCT_CTRL_PRE_H_MASK	device/LPC54018.h	8558;"	d
SCT_CTRL_PRE_H_SHIFT	device/LPC54018.h	8559;"	d
SCT_CTRL_PRE_L	device/LPC54018.h	8538;"	d
SCT_CTRL_PRE_L_MASK	device/LPC54018.h	8536;"	d
SCT_CTRL_PRE_L_SHIFT	device/LPC54018.h	8537;"	d
SCT_CTRL_STOP_H	device/LPC54018.h	8544;"	d
SCT_CTRL_STOP_H_MASK	device/LPC54018.h	8542;"	d
SCT_CTRL_STOP_H_SHIFT	device/LPC54018.h	8543;"	d
SCT_CTRL_STOP_L	device/LPC54018.h	8522;"	d
SCT_CTRL_STOP_L_MASK	device/LPC54018.h	8520;"	d
SCT_CTRL_STOP_L_SHIFT	device/LPC54018.h	8521;"	d
SCT_DMA0REQUEST_DEV_0	device/LPC54018.h	9024;"	d
SCT_DMA0REQUEST_DEV_0_MASK	device/LPC54018.h	9022;"	d
SCT_DMA0REQUEST_DEV_0_SHIFT	device/LPC54018.h	9023;"	d
SCT_DMA0REQUEST_DRL0	device/LPC54018.h	9027;"	d
SCT_DMA0REQUEST_DRL0_MASK	device/LPC54018.h	9025;"	d
SCT_DMA0REQUEST_DRL0_SHIFT	device/LPC54018.h	9026;"	d
SCT_DMA0REQUEST_DRQ0	device/LPC54018.h	9030;"	d
SCT_DMA0REQUEST_DRQ0_MASK	device/LPC54018.h	9028;"	d
SCT_DMA0REQUEST_DRQ0_SHIFT	device/LPC54018.h	9029;"	d
SCT_DMA1REQUEST_DEV_1	device/LPC54018.h	9037;"	d
SCT_DMA1REQUEST_DEV_1_MASK	device/LPC54018.h	9035;"	d
SCT_DMA1REQUEST_DEV_1_SHIFT	device/LPC54018.h	9036;"	d
SCT_DMA1REQUEST_DRL1	device/LPC54018.h	9040;"	d
SCT_DMA1REQUEST_DRL1_MASK	device/LPC54018.h	9038;"	d
SCT_DMA1REQUEST_DRL1_SHIFT	device/LPC54018.h	9039;"	d
SCT_DMA1REQUEST_DRQ1	device/LPC54018.h	9043;"	d
SCT_DMA1REQUEST_DRQ1_MASK	device/LPC54018.h	9041;"	d
SCT_DMA1REQUEST_DRQ1_SHIFT	device/LPC54018.h	9042;"	d
SCT_EVENT_CTRL_COMBMODE	device/LPC54018.h	9183;"	d
SCT_EVENT_CTRL_COMBMODE_MASK	device/LPC54018.h	9175;"	d
SCT_EVENT_CTRL_COMBMODE_SHIFT	device/LPC54018.h	9176;"	d
SCT_EVENT_CTRL_COUNT	device/LPC54018.h	9210;"	d
SCT_EVENT_CTRL_DIRECTION	device/LPC54018.h	9206;"	d
SCT_EVENT_CTRL_DIRECTION_MASK	device/LPC54018.h	9198;"	d
SCT_EVENT_CTRL_DIRECTION_SHIFT	device/LPC54018.h	9199;"	d
SCT_EVENT_CTRL_HEVENT	device/LPC54018.h	9153;"	d
SCT_EVENT_CTRL_HEVENT_MASK	device/LPC54018.h	9147;"	d
SCT_EVENT_CTRL_HEVENT_SHIFT	device/LPC54018.h	9148;"	d
SCT_EVENT_CTRL_IOCOND	device/LPC54018.h	9174;"	d
SCT_EVENT_CTRL_IOCOND_MASK	device/LPC54018.h	9164;"	d
SCT_EVENT_CTRL_IOCOND_SHIFT	device/LPC54018.h	9165;"	d
SCT_EVENT_CTRL_IOSEL	device/LPC54018.h	9163;"	d
SCT_EVENT_CTRL_IOSEL_MASK	device/LPC54018.h	9161;"	d
SCT_EVENT_CTRL_IOSEL_SHIFT	device/LPC54018.h	9162;"	d
SCT_EVENT_CTRL_MATCHMEM	device/LPC54018.h	9197;"	d
SCT_EVENT_CTRL_MATCHMEM_MASK	device/LPC54018.h	9195;"	d
SCT_EVENT_CTRL_MATCHMEM_SHIFT	device/LPC54018.h	9196;"	d
SCT_EVENT_CTRL_MATCHSEL	device/LPC54018.h	9146;"	d
SCT_EVENT_CTRL_MATCHSEL_MASK	device/LPC54018.h	9144;"	d
SCT_EVENT_CTRL_MATCHSEL_SHIFT	device/LPC54018.h	9145;"	d
SCT_EVENT_CTRL_OUTSEL	device/LPC54018.h	9160;"	d
SCT_EVENT_CTRL_OUTSEL_MASK	device/LPC54018.h	9154;"	d
SCT_EVENT_CTRL_OUTSEL_SHIFT	device/LPC54018.h	9155;"	d
SCT_EVENT_CTRL_STATELD	device/LPC54018.h	9191;"	d
SCT_EVENT_CTRL_STATELD_MASK	device/LPC54018.h	9184;"	d
SCT_EVENT_CTRL_STATELD_SHIFT	device/LPC54018.h	9185;"	d
SCT_EVENT_CTRL_STATEV	device/LPC54018.h	9194;"	d
SCT_EVENT_CTRL_STATEV_MASK	device/LPC54018.h	9192;"	d
SCT_EVENT_CTRL_STATEV_SHIFT	device/LPC54018.h	9193;"	d
SCT_EVENT_STATE_COUNT	device/LPC54018.h	9140;"	d
SCT_EVENT_STATE_STATEMSKn	device/LPC54018.h	9136;"	d
SCT_EVENT_STATE_STATEMSKn_MASK	device/LPC54018.h	9134;"	d
SCT_EVENT_STATE_STATEMSKn_SHIFT	device/LPC54018.h	9135;"	d
SCT_EVEN_IEN	device/LPC54018.h	9050;"	d
SCT_EVEN_IEN_MASK	device/LPC54018.h	9048;"	d
SCT_EVEN_IEN_SHIFT	device/LPC54018.h	9049;"	d
SCT_EVFLAG_FLAG	device/LPC54018.h	9057;"	d
SCT_EVFLAG_FLAG_MASK	device/LPC54018.h	9055;"	d
SCT_EVFLAG_FLAG_SHIFT	device/LPC54018.h	9056;"	d
SCT_HALT_HALTMSK_H	device/LPC54018.h	8580;"	d
SCT_HALT_HALTMSK_H_MASK	device/LPC54018.h	8578;"	d
SCT_HALT_HALTMSK_H_SHIFT	device/LPC54018.h	8579;"	d
SCT_HALT_HALTMSK_L	device/LPC54018.h	8577;"	d
SCT_HALT_HALTMSK_L_MASK	device/LPC54018.h	8575;"	d
SCT_HALT_HALTMSK_L_SHIFT	device/LPC54018.h	8576;"	d
SCT_INPUT_AIN0	device/LPC54018.h	8627;"	d
SCT_INPUT_AIN0_MASK	device/LPC54018.h	8625;"	d
SCT_INPUT_AIN0_SHIFT	device/LPC54018.h	8626;"	d
SCT_INPUT_AIN1	device/LPC54018.h	8630;"	d
SCT_INPUT_AIN10	device/LPC54018.h	8657;"	d
SCT_INPUT_AIN10_MASK	device/LPC54018.h	8655;"	d
SCT_INPUT_AIN10_SHIFT	device/LPC54018.h	8656;"	d
SCT_INPUT_AIN11	device/LPC54018.h	8660;"	d
SCT_INPUT_AIN11_MASK	device/LPC54018.h	8658;"	d
SCT_INPUT_AIN11_SHIFT	device/LPC54018.h	8659;"	d
SCT_INPUT_AIN12	device/LPC54018.h	8663;"	d
SCT_INPUT_AIN12_MASK	device/LPC54018.h	8661;"	d
SCT_INPUT_AIN12_SHIFT	device/LPC54018.h	8662;"	d
SCT_INPUT_AIN13	device/LPC54018.h	8666;"	d
SCT_INPUT_AIN13_MASK	device/LPC54018.h	8664;"	d
SCT_INPUT_AIN13_SHIFT	device/LPC54018.h	8665;"	d
SCT_INPUT_AIN14	device/LPC54018.h	8669;"	d
SCT_INPUT_AIN14_MASK	device/LPC54018.h	8667;"	d
SCT_INPUT_AIN14_SHIFT	device/LPC54018.h	8668;"	d
SCT_INPUT_AIN15	device/LPC54018.h	8672;"	d
SCT_INPUT_AIN15_MASK	device/LPC54018.h	8670;"	d
SCT_INPUT_AIN15_SHIFT	device/LPC54018.h	8671;"	d
SCT_INPUT_AIN1_MASK	device/LPC54018.h	8628;"	d
SCT_INPUT_AIN1_SHIFT	device/LPC54018.h	8629;"	d
SCT_INPUT_AIN2	device/LPC54018.h	8633;"	d
SCT_INPUT_AIN2_MASK	device/LPC54018.h	8631;"	d
SCT_INPUT_AIN2_SHIFT	device/LPC54018.h	8632;"	d
SCT_INPUT_AIN3	device/LPC54018.h	8636;"	d
SCT_INPUT_AIN3_MASK	device/LPC54018.h	8634;"	d
SCT_INPUT_AIN3_SHIFT	device/LPC54018.h	8635;"	d
SCT_INPUT_AIN4	device/LPC54018.h	8639;"	d
SCT_INPUT_AIN4_MASK	device/LPC54018.h	8637;"	d
SCT_INPUT_AIN4_SHIFT	device/LPC54018.h	8638;"	d
SCT_INPUT_AIN5	device/LPC54018.h	8642;"	d
SCT_INPUT_AIN5_MASK	device/LPC54018.h	8640;"	d
SCT_INPUT_AIN5_SHIFT	device/LPC54018.h	8641;"	d
SCT_INPUT_AIN6	device/LPC54018.h	8645;"	d
SCT_INPUT_AIN6_MASK	device/LPC54018.h	8643;"	d
SCT_INPUT_AIN6_SHIFT	device/LPC54018.h	8644;"	d
SCT_INPUT_AIN7	device/LPC54018.h	8648;"	d
SCT_INPUT_AIN7_MASK	device/LPC54018.h	8646;"	d
SCT_INPUT_AIN7_SHIFT	device/LPC54018.h	8647;"	d
SCT_INPUT_AIN8	device/LPC54018.h	8651;"	d
SCT_INPUT_AIN8_MASK	device/LPC54018.h	8649;"	d
SCT_INPUT_AIN8_SHIFT	device/LPC54018.h	8650;"	d
SCT_INPUT_AIN9	device/LPC54018.h	8654;"	d
SCT_INPUT_AIN9_MASK	device/LPC54018.h	8652;"	d
SCT_INPUT_AIN9_SHIFT	device/LPC54018.h	8653;"	d
SCT_INPUT_SIN0	device/LPC54018.h	8675;"	d
SCT_INPUT_SIN0_MASK	device/LPC54018.h	8673;"	d
SCT_INPUT_SIN0_SHIFT	device/LPC54018.h	8674;"	d
SCT_INPUT_SIN1	device/LPC54018.h	8678;"	d
SCT_INPUT_SIN10	device/LPC54018.h	8705;"	d
SCT_INPUT_SIN10_MASK	device/LPC54018.h	8703;"	d
SCT_INPUT_SIN10_SHIFT	device/LPC54018.h	8704;"	d
SCT_INPUT_SIN11	device/LPC54018.h	8708;"	d
SCT_INPUT_SIN11_MASK	device/LPC54018.h	8706;"	d
SCT_INPUT_SIN11_SHIFT	device/LPC54018.h	8707;"	d
SCT_INPUT_SIN12	device/LPC54018.h	8711;"	d
SCT_INPUT_SIN12_MASK	device/LPC54018.h	8709;"	d
SCT_INPUT_SIN12_SHIFT	device/LPC54018.h	8710;"	d
SCT_INPUT_SIN13	device/LPC54018.h	8714;"	d
SCT_INPUT_SIN13_MASK	device/LPC54018.h	8712;"	d
SCT_INPUT_SIN13_SHIFT	device/LPC54018.h	8713;"	d
SCT_INPUT_SIN14	device/LPC54018.h	8717;"	d
SCT_INPUT_SIN14_MASK	device/LPC54018.h	8715;"	d
SCT_INPUT_SIN14_SHIFT	device/LPC54018.h	8716;"	d
SCT_INPUT_SIN15	device/LPC54018.h	8720;"	d
SCT_INPUT_SIN15_MASK	device/LPC54018.h	8718;"	d
SCT_INPUT_SIN15_SHIFT	device/LPC54018.h	8719;"	d
SCT_INPUT_SIN1_MASK	device/LPC54018.h	8676;"	d
SCT_INPUT_SIN1_SHIFT	device/LPC54018.h	8677;"	d
SCT_INPUT_SIN2	device/LPC54018.h	8681;"	d
SCT_INPUT_SIN2_MASK	device/LPC54018.h	8679;"	d
SCT_INPUT_SIN2_SHIFT	device/LPC54018.h	8680;"	d
SCT_INPUT_SIN3	device/LPC54018.h	8684;"	d
SCT_INPUT_SIN3_MASK	device/LPC54018.h	8682;"	d
SCT_INPUT_SIN3_SHIFT	device/LPC54018.h	8683;"	d
SCT_INPUT_SIN4	device/LPC54018.h	8687;"	d
SCT_INPUT_SIN4_MASK	device/LPC54018.h	8685;"	d
SCT_INPUT_SIN4_SHIFT	device/LPC54018.h	8686;"	d
SCT_INPUT_SIN5	device/LPC54018.h	8690;"	d
SCT_INPUT_SIN5_MASK	device/LPC54018.h	8688;"	d
SCT_INPUT_SIN5_SHIFT	device/LPC54018.h	8689;"	d
SCT_INPUT_SIN6	device/LPC54018.h	8693;"	d
SCT_INPUT_SIN6_MASK	device/LPC54018.h	8691;"	d
SCT_INPUT_SIN6_SHIFT	device/LPC54018.h	8692;"	d
SCT_INPUT_SIN7	device/LPC54018.h	8696;"	d
SCT_INPUT_SIN7_MASK	device/LPC54018.h	8694;"	d
SCT_INPUT_SIN7_SHIFT	device/LPC54018.h	8695;"	d
SCT_INPUT_SIN8	device/LPC54018.h	8699;"	d
SCT_INPUT_SIN8_MASK	device/LPC54018.h	8697;"	d
SCT_INPUT_SIN8_SHIFT	device/LPC54018.h	8698;"	d
SCT_INPUT_SIN9	device/LPC54018.h	8702;"	d
SCT_INPUT_SIN9_MASK	device/LPC54018.h	8700;"	d
SCT_INPUT_SIN9_SHIFT	device/LPC54018.h	8701;"	d
SCT_IRQS	device/LPC54018.h	9248;"	d
SCT_LIMIT_LIMMSK_H	device/LPC54018.h	8570;"	d
SCT_LIMIT_LIMMSK_H_MASK	device/LPC54018.h	8568;"	d
SCT_LIMIT_LIMMSK_H_SHIFT	device/LPC54018.h	8569;"	d
SCT_LIMIT_LIMMSK_L	device/LPC54018.h	8567;"	d
SCT_LIMIT_LIMMSK_L_MASK	device/LPC54018.h	8565;"	d
SCT_LIMIT_LIMMSK_L_SHIFT	device/LPC54018.h	8566;"	d
SCT_OUTPUTDIRCTRL_SETCLR0	device/LPC54018.h	8749;"	d
SCT_OUTPUTDIRCTRL_SETCLR0_MASK	device/LPC54018.h	8742;"	d
SCT_OUTPUTDIRCTRL_SETCLR0_SHIFT	device/LPC54018.h	8743;"	d
SCT_OUTPUTDIRCTRL_SETCLR1	device/LPC54018.h	8757;"	d
SCT_OUTPUTDIRCTRL_SETCLR10	device/LPC54018.h	8829;"	d
SCT_OUTPUTDIRCTRL_SETCLR10_MASK	device/LPC54018.h	8822;"	d
SCT_OUTPUTDIRCTRL_SETCLR10_SHIFT	device/LPC54018.h	8823;"	d
SCT_OUTPUTDIRCTRL_SETCLR11	device/LPC54018.h	8837;"	d
SCT_OUTPUTDIRCTRL_SETCLR11_MASK	device/LPC54018.h	8830;"	d
SCT_OUTPUTDIRCTRL_SETCLR11_SHIFT	device/LPC54018.h	8831;"	d
SCT_OUTPUTDIRCTRL_SETCLR12	device/LPC54018.h	8845;"	d
SCT_OUTPUTDIRCTRL_SETCLR12_MASK	device/LPC54018.h	8838;"	d
SCT_OUTPUTDIRCTRL_SETCLR12_SHIFT	device/LPC54018.h	8839;"	d
SCT_OUTPUTDIRCTRL_SETCLR13	device/LPC54018.h	8853;"	d
SCT_OUTPUTDIRCTRL_SETCLR13_MASK	device/LPC54018.h	8846;"	d
SCT_OUTPUTDIRCTRL_SETCLR13_SHIFT	device/LPC54018.h	8847;"	d
SCT_OUTPUTDIRCTRL_SETCLR14	device/LPC54018.h	8861;"	d
SCT_OUTPUTDIRCTRL_SETCLR14_MASK	device/LPC54018.h	8854;"	d
SCT_OUTPUTDIRCTRL_SETCLR14_SHIFT	device/LPC54018.h	8855;"	d
SCT_OUTPUTDIRCTRL_SETCLR15	device/LPC54018.h	8869;"	d
SCT_OUTPUTDIRCTRL_SETCLR15_MASK	device/LPC54018.h	8862;"	d
SCT_OUTPUTDIRCTRL_SETCLR15_SHIFT	device/LPC54018.h	8863;"	d
SCT_OUTPUTDIRCTRL_SETCLR1_MASK	device/LPC54018.h	8750;"	d
SCT_OUTPUTDIRCTRL_SETCLR1_SHIFT	device/LPC54018.h	8751;"	d
SCT_OUTPUTDIRCTRL_SETCLR2	device/LPC54018.h	8765;"	d
SCT_OUTPUTDIRCTRL_SETCLR2_MASK	device/LPC54018.h	8758;"	d
SCT_OUTPUTDIRCTRL_SETCLR2_SHIFT	device/LPC54018.h	8759;"	d
SCT_OUTPUTDIRCTRL_SETCLR3	device/LPC54018.h	8773;"	d
SCT_OUTPUTDIRCTRL_SETCLR3_MASK	device/LPC54018.h	8766;"	d
SCT_OUTPUTDIRCTRL_SETCLR3_SHIFT	device/LPC54018.h	8767;"	d
SCT_OUTPUTDIRCTRL_SETCLR4	device/LPC54018.h	8781;"	d
SCT_OUTPUTDIRCTRL_SETCLR4_MASK	device/LPC54018.h	8774;"	d
SCT_OUTPUTDIRCTRL_SETCLR4_SHIFT	device/LPC54018.h	8775;"	d
SCT_OUTPUTDIRCTRL_SETCLR5	device/LPC54018.h	8789;"	d
SCT_OUTPUTDIRCTRL_SETCLR5_MASK	device/LPC54018.h	8782;"	d
SCT_OUTPUTDIRCTRL_SETCLR5_SHIFT	device/LPC54018.h	8783;"	d
SCT_OUTPUTDIRCTRL_SETCLR6	device/LPC54018.h	8797;"	d
SCT_OUTPUTDIRCTRL_SETCLR6_MASK	device/LPC54018.h	8790;"	d
SCT_OUTPUTDIRCTRL_SETCLR6_SHIFT	device/LPC54018.h	8791;"	d
SCT_OUTPUTDIRCTRL_SETCLR7	device/LPC54018.h	8805;"	d
SCT_OUTPUTDIRCTRL_SETCLR7_MASK	device/LPC54018.h	8798;"	d
SCT_OUTPUTDIRCTRL_SETCLR7_SHIFT	device/LPC54018.h	8799;"	d
SCT_OUTPUTDIRCTRL_SETCLR8	device/LPC54018.h	8813;"	d
SCT_OUTPUTDIRCTRL_SETCLR8_MASK	device/LPC54018.h	8806;"	d
SCT_OUTPUTDIRCTRL_SETCLR8_SHIFT	device/LPC54018.h	8807;"	d
SCT_OUTPUTDIRCTRL_SETCLR9	device/LPC54018.h	8821;"	d
SCT_OUTPUTDIRCTRL_SETCLR9_MASK	device/LPC54018.h	8814;"	d
SCT_OUTPUTDIRCTRL_SETCLR9_SHIFT	device/LPC54018.h	8815;"	d
SCT_OUTPUT_OUT	device/LPC54018.h	8737;"	d
SCT_OUTPUT_OUT_MASK	device/LPC54018.h	8735;"	d
SCT_OUTPUT_OUT_SHIFT	device/LPC54018.h	8736;"	d
SCT_OUT_CLR_CLR	device/LPC54018.h	9226;"	d
SCT_OUT_CLR_CLR_MASK	device/LPC54018.h	9224;"	d
SCT_OUT_CLR_CLR_SHIFT	device/LPC54018.h	9225;"	d
SCT_OUT_CLR_COUNT	device/LPC54018.h	9230;"	d
SCT_OUT_SET_COUNT	device/LPC54018.h	9220;"	d
SCT_OUT_SET_SET	device/LPC54018.h	9216;"	d
SCT_OUT_SET_SET_MASK	device/LPC54018.h	9214;"	d
SCT_OUT_SET_SET_SHIFT	device/LPC54018.h	9215;"	d
SCT_REGMODE_REGMOD_H	device/LPC54018.h	8730;"	d
SCT_REGMODE_REGMOD_H_MASK	device/LPC54018.h	8728;"	d
SCT_REGMODE_REGMOD_H_SHIFT	device/LPC54018.h	8729;"	d
SCT_REGMODE_REGMOD_L	device/LPC54018.h	8727;"	d
SCT_REGMODE_REGMOD_L_MASK	device/LPC54018.h	8725;"	d
SCT_REGMODE_REGMOD_L_SHIFT	device/LPC54018.h	8726;"	d
SCT_RES_O0RES	device/LPC54018.h	8882;"	d
SCT_RES_O0RES_MASK	device/LPC54018.h	8874;"	d
SCT_RES_O0RES_SHIFT	device/LPC54018.h	8875;"	d
SCT_RES_O10RES	device/LPC54018.h	8972;"	d
SCT_RES_O10RES_MASK	device/LPC54018.h	8964;"	d
SCT_RES_O10RES_SHIFT	device/LPC54018.h	8965;"	d
SCT_RES_O11RES	device/LPC54018.h	8981;"	d
SCT_RES_O11RES_MASK	device/LPC54018.h	8973;"	d
SCT_RES_O11RES_SHIFT	device/LPC54018.h	8974;"	d
SCT_RES_O12RES	device/LPC54018.h	8990;"	d
SCT_RES_O12RES_MASK	device/LPC54018.h	8982;"	d
SCT_RES_O12RES_SHIFT	device/LPC54018.h	8983;"	d
SCT_RES_O13RES	device/LPC54018.h	8999;"	d
SCT_RES_O13RES_MASK	device/LPC54018.h	8991;"	d
SCT_RES_O13RES_SHIFT	device/LPC54018.h	8992;"	d
SCT_RES_O14RES	device/LPC54018.h	9008;"	d
SCT_RES_O14RES_MASK	device/LPC54018.h	9000;"	d
SCT_RES_O14RES_SHIFT	device/LPC54018.h	9001;"	d
SCT_RES_O15RES	device/LPC54018.h	9017;"	d
SCT_RES_O15RES_MASK	device/LPC54018.h	9009;"	d
SCT_RES_O15RES_SHIFT	device/LPC54018.h	9010;"	d
SCT_RES_O1RES	device/LPC54018.h	8891;"	d
SCT_RES_O1RES_MASK	device/LPC54018.h	8883;"	d
SCT_RES_O1RES_SHIFT	device/LPC54018.h	8884;"	d
SCT_RES_O2RES	device/LPC54018.h	8900;"	d
SCT_RES_O2RES_MASK	device/LPC54018.h	8892;"	d
SCT_RES_O2RES_SHIFT	device/LPC54018.h	8893;"	d
SCT_RES_O3RES	device/LPC54018.h	8909;"	d
SCT_RES_O3RES_MASK	device/LPC54018.h	8901;"	d
SCT_RES_O3RES_SHIFT	device/LPC54018.h	8902;"	d
SCT_RES_O4RES	device/LPC54018.h	8918;"	d
SCT_RES_O4RES_MASK	device/LPC54018.h	8910;"	d
SCT_RES_O4RES_SHIFT	device/LPC54018.h	8911;"	d
SCT_RES_O5RES	device/LPC54018.h	8927;"	d
SCT_RES_O5RES_MASK	device/LPC54018.h	8919;"	d
SCT_RES_O5RES_SHIFT	device/LPC54018.h	8920;"	d
SCT_RES_O6RES	device/LPC54018.h	8936;"	d
SCT_RES_O6RES_MASK	device/LPC54018.h	8928;"	d
SCT_RES_O6RES_SHIFT	device/LPC54018.h	8929;"	d
SCT_RES_O7RES	device/LPC54018.h	8945;"	d
SCT_RES_O7RES_MASK	device/LPC54018.h	8937;"	d
SCT_RES_O7RES_SHIFT	device/LPC54018.h	8938;"	d
SCT_RES_O8RES	device/LPC54018.h	8954;"	d
SCT_RES_O8RES_MASK	device/LPC54018.h	8946;"	d
SCT_RES_O8RES_SHIFT	device/LPC54018.h	8947;"	d
SCT_RES_O9RES	device/LPC54018.h	8963;"	d
SCT_RES_O9RES_MASK	device/LPC54018.h	8955;"	d
SCT_RES_O9RES_SHIFT	device/LPC54018.h	8956;"	d
SCT_RSTS	drivers/fsl_reset.h	187;"	d
SCT_SCTCAPCTRL_CAPCONn_H	device/LPC54018.h	9113;"	d
SCT_SCTCAPCTRL_CAPCONn_H_MASK	device/LPC54018.h	9111;"	d
SCT_SCTCAPCTRL_CAPCONn_H_SHIFT	device/LPC54018.h	9112;"	d
SCT_SCTCAPCTRL_CAPCONn_L	device/LPC54018.h	9110;"	d
SCT_SCTCAPCTRL_CAPCONn_L_MASK	device/LPC54018.h	9108;"	d
SCT_SCTCAPCTRL_CAPCONn_L_SHIFT	device/LPC54018.h	9109;"	d
SCT_SCTCAPCTRL_COUNT	device/LPC54018.h	9117;"	d
SCT_SCTCAP_CAPn_H	device/LPC54018.h	9087;"	d
SCT_SCTCAP_CAPn_H_MASK	device/LPC54018.h	9085;"	d
SCT_SCTCAP_CAPn_H_SHIFT	device/LPC54018.h	9086;"	d
SCT_SCTCAP_CAPn_L	device/LPC54018.h	9084;"	d
SCT_SCTCAP_CAPn_L_MASK	device/LPC54018.h	9082;"	d
SCT_SCTCAP_CAPn_L_SHIFT	device/LPC54018.h	9083;"	d
SCT_SCTCAP_COUNT	device/LPC54018.h	9091;"	d
SCT_SCTMATCHREL_COUNT	device/LPC54018.h	9130;"	d
SCT_SCTMATCHREL_RELOADn_H	device/LPC54018.h	9126;"	d
SCT_SCTMATCHREL_RELOADn_H_MASK	device/LPC54018.h	9124;"	d
SCT_SCTMATCHREL_RELOADn_H_SHIFT	device/LPC54018.h	9125;"	d
SCT_SCTMATCHREL_RELOADn_L	device/LPC54018.h	9123;"	d
SCT_SCTMATCHREL_RELOADn_L_MASK	device/LPC54018.h	9121;"	d
SCT_SCTMATCHREL_RELOADn_L_SHIFT	device/LPC54018.h	9122;"	d
SCT_SCTMATCH_COUNT	device/LPC54018.h	9104;"	d
SCT_SCTMATCH_MATCHn_H	device/LPC54018.h	9100;"	d
SCT_SCTMATCH_MATCHn_H_MASK	device/LPC54018.h	9098;"	d
SCT_SCTMATCH_MATCHn_H_SHIFT	device/LPC54018.h	9099;"	d
SCT_SCTMATCH_MATCHn_L	device/LPC54018.h	9097;"	d
SCT_SCTMATCH_MATCHn_L_MASK	device/LPC54018.h	9095;"	d
SCT_SCTMATCH_MATCHn_L_SHIFT	device/LPC54018.h	9096;"	d
SCT_START_STARTMSK_H	device/LPC54018.h	8600;"	d
SCT_START_STARTMSK_H_MASK	device/LPC54018.h	8598;"	d
SCT_START_STARTMSK_H_SHIFT	device/LPC54018.h	8599;"	d
SCT_START_STARTMSK_L	device/LPC54018.h	8597;"	d
SCT_START_STARTMSK_L_MASK	device/LPC54018.h	8595;"	d
SCT_START_STARTMSK_L_SHIFT	device/LPC54018.h	8596;"	d
SCT_STATE_STATE_H	device/LPC54018.h	8620;"	d
SCT_STATE_STATE_H_MASK	device/LPC54018.h	8618;"	d
SCT_STATE_STATE_H_SHIFT	device/LPC54018.h	8619;"	d
SCT_STATE_STATE_L	device/LPC54018.h	8617;"	d
SCT_STATE_STATE_L_MASK	device/LPC54018.h	8615;"	d
SCT_STATE_STATE_L_SHIFT	device/LPC54018.h	8616;"	d
SCT_STOP_STOPMSK_H	device/LPC54018.h	8590;"	d
SCT_STOP_STOPMSK_H_MASK	device/LPC54018.h	8588;"	d
SCT_STOP_STOPMSK_H_SHIFT	device/LPC54018.h	8589;"	d
SCT_STOP_STOPMSK_L	device/LPC54018.h	8587;"	d
SCT_STOP_STOPMSK_L_MASK	device/LPC54018.h	8585;"	d
SCT_STOP_STOPMSK_L_SHIFT	device/LPC54018.h	8586;"	d
SCT_Type	device/LPC54018.h	/^} SCT_Type;$/;"	t	typeref:struct:__anon172
SCnSCB	CMSIS/core_armv8mml.h	2036;"	d
SCnSCB	CMSIS/core_cm4.h	1560;"	d
SCnSCB_ACTLR_DISDEFWBUF_Msk	CMSIS/core_cm4.h	741;"	d
SCnSCB_ACTLR_DISDEFWBUF_Pos	CMSIS/core_cm4.h	740;"	d
SCnSCB_ACTLR_DISFOLD_Msk	CMSIS/core_cm4.h	738;"	d
SCnSCB_ACTLR_DISFOLD_Pos	CMSIS/core_cm4.h	737;"	d
SCnSCB_ACTLR_DISFPCA_Msk	CMSIS/core_cm4.h	735;"	d
SCnSCB_ACTLR_DISFPCA_Pos	CMSIS/core_cm4.h	734;"	d
SCnSCB_ACTLR_DISMCYCINT_Msk	CMSIS/core_cm4.h	744;"	d
SCnSCB_ACTLR_DISMCYCINT_Pos	CMSIS/core_cm4.h	743;"	d
SCnSCB_ACTLR_DISOOFP_Msk	CMSIS/core_cm4.h	732;"	d
SCnSCB_ACTLR_DISOOFP_Pos	CMSIS/core_cm4.h	731;"	d
SCnSCB_ICTR_INTLINESNUM_Msk	CMSIS/core_armv8mml.h	1016;"	d
SCnSCB_ICTR_INTLINESNUM_Msk	CMSIS/core_cm4.h	728;"	d
SCnSCB_ICTR_INTLINESNUM_Pos	CMSIS/core_armv8mml.h	1015;"	d
SCnSCB_ICTR_INTLINESNUM_Pos	CMSIS/core_cm4.h	727;"	d
SCnSCB_NS	CMSIS/core_armv8mml.h	2065;"	d
SCnSCB_Type	CMSIS/core_armv8mml.h	/^} SCnSCB_Type;$/;"	t	typeref:struct:__anon19
SCnSCB_Type	CMSIS/core_cm4.h	/^} SCnSCB_Type;$/;"	t	typeref:struct:__anon41
SDIF	device/LPC54018.h	9906;"	d
SDIF_BACKENDPWR_BACKENDPWR	device/LPC54018.h	9883;"	d
SDIF_BACKENDPWR_BACKENDPWR_MASK	device/LPC54018.h	9881;"	d
SDIF_BACKENDPWR_BACKENDPWR_SHIFT	device/LPC54018.h	9882;"	d
SDIF_BASE	device/LPC54018.h	9904;"	d
SDIF_BASE_ADDRS	device/LPC54018.h	9908;"	d
SDIF_BASE_PTRS	device/LPC54018.h	9910;"	d
SDIF_BLKSIZ_BLOCK_SIZE	device/LPC54018.h	9409;"	d
SDIF_BLKSIZ_BLOCK_SIZE_MASK	device/LPC54018.h	9407;"	d
SDIF_BLKSIZ_BLOCK_SIZE_SHIFT	device/LPC54018.h	9408;"	d
SDIF_BMOD_DE	device/LPC54018.h	9776;"	d
SDIF_BMOD_DE_MASK	device/LPC54018.h	9774;"	d
SDIF_BMOD_DE_SHIFT	device/LPC54018.h	9775;"	d
SDIF_BMOD_DSL	device/LPC54018.h	9773;"	d
SDIF_BMOD_DSL_MASK	device/LPC54018.h	9771;"	d
SDIF_BMOD_DSL_SHIFT	device/LPC54018.h	9772;"	d
SDIF_BMOD_FB	device/LPC54018.h	9770;"	d
SDIF_BMOD_FB_MASK	device/LPC54018.h	9768;"	d
SDIF_BMOD_FB_SHIFT	device/LPC54018.h	9769;"	d
SDIF_BMOD_PBL	device/LPC54018.h	9779;"	d
SDIF_BMOD_PBL_MASK	device/LPC54018.h	9777;"	d
SDIF_BMOD_PBL_SHIFT	device/LPC54018.h	9778;"	d
SDIF_BMOD_SWR	device/LPC54018.h	9767;"	d
SDIF_BMOD_SWR_MASK	device/LPC54018.h	9765;"	d
SDIF_BMOD_SWR_SHIFT	device/LPC54018.h	9766;"	d
SDIF_BUFADDR_HBA	device/LPC54018.h	9863;"	d
SDIF_BUFADDR_HBA_MASK	device/LPC54018.h	9861;"	d
SDIF_BUFADDR_HBA_SHIFT	device/LPC54018.h	9862;"	d
SDIF_BYTCNT_BYTE_COUNT	device/LPC54018.h	9416;"	d
SDIF_BYTCNT_BYTE_COUNT_MASK	device/LPC54018.h	9414;"	d
SDIF_BYTCNT_BYTE_COUNT_SHIFT	device/LPC54018.h	9415;"	d
SDIF_CARDTHRCTL_BSYCLRINTEN	device/LPC54018.h	9873;"	d
SDIF_CARDTHRCTL_BSYCLRINTEN_MASK	device/LPC54018.h	9871;"	d
SDIF_CARDTHRCTL_BSYCLRINTEN_SHIFT	device/LPC54018.h	9872;"	d
SDIF_CARDTHRCTL_CARDRDTHREN	device/LPC54018.h	9870;"	d
SDIF_CARDTHRCTL_CARDRDTHREN_MASK	device/LPC54018.h	9868;"	d
SDIF_CARDTHRCTL_CARDRDTHREN_SHIFT	device/LPC54018.h	9869;"	d
SDIF_CARDTHRCTL_CARDTHRESHOLD	device/LPC54018.h	9876;"	d
SDIF_CARDTHRCTL_CARDTHRESHOLD_MASK	device/LPC54018.h	9874;"	d
SDIF_CARDTHRCTL_CARDTHRESHOLD_SHIFT	device/LPC54018.h	9875;"	d
SDIF_CDETECT_CARD_DETECT	device/LPC54018.h	9725;"	d
SDIF_CDETECT_CARD_DETECT_MASK	device/LPC54018.h	9723;"	d
SDIF_CDETECT_CARD_DETECT_SHIFT	device/LPC54018.h	9724;"	d
SDIF_CLKDIV_CLK_DIVIDER0	device/LPC54018.h	9372;"	d
SDIF_CLKDIV_CLK_DIVIDER0_MASK	device/LPC54018.h	9370;"	d
SDIF_CLKDIV_CLK_DIVIDER0_SHIFT	device/LPC54018.h	9371;"	d
SDIF_CLKENA_CCLK_ENABLE	device/LPC54018.h	9379;"	d
SDIF_CLKENA_CCLK_ENABLE_MASK	device/LPC54018.h	9377;"	d
SDIF_CLKENA_CCLK_ENABLE_SHIFT	device/LPC54018.h	9378;"	d
SDIF_CLKENA_CCLK_LOW_POWER	device/LPC54018.h	9382;"	d
SDIF_CLKENA_CCLK_LOW_POWER_MASK	device/LPC54018.h	9380;"	d
SDIF_CLKENA_CCLK_LOW_POWER_SHIFT	device/LPC54018.h	9381;"	d
SDIF_CMDARG_CMD_ARG	device/LPC54018.h	9478;"	d
SDIF_CMDARG_CMD_ARG_MASK	device/LPC54018.h	9476;"	d
SDIF_CMDARG_CMD_ARG_SHIFT	device/LPC54018.h	9477;"	d
SDIF_CMD_BOOT_MODE	device/LPC54018.h	9536;"	d
SDIF_CMD_BOOT_MODE_MASK	device/LPC54018.h	9534;"	d
SDIF_CMD_BOOT_MODE_SHIFT	device/LPC54018.h	9535;"	d
SDIF_CMD_CCS_EXPECTED	device/LPC54018.h	9524;"	d
SDIF_CMD_CCS_EXPECTED_MASK	device/LPC54018.h	9522;"	d
SDIF_CMD_CCS_EXPECTED_SHIFT	device/LPC54018.h	9523;"	d
SDIF_CMD_CHECK_RESPONSE_CRC	device/LPC54018.h	9494;"	d
SDIF_CMD_CHECK_RESPONSE_CRC_MASK	device/LPC54018.h	9492;"	d
SDIF_CMD_CHECK_RESPONSE_CRC_SHIFT	device/LPC54018.h	9493;"	d
SDIF_CMD_CMD_INDEX	device/LPC54018.h	9485;"	d
SDIF_CMD_CMD_INDEX_MASK	device/LPC54018.h	9483;"	d
SDIF_CMD_CMD_INDEX_SHIFT	device/LPC54018.h	9484;"	d
SDIF_CMD_DATA_EXPECTED	device/LPC54018.h	9497;"	d
SDIF_CMD_DATA_EXPECTED_MASK	device/LPC54018.h	9495;"	d
SDIF_CMD_DATA_EXPECTED_SHIFT	device/LPC54018.h	9496;"	d
SDIF_CMD_DISABLE_BOOT	device/LPC54018.h	9533;"	d
SDIF_CMD_DISABLE_BOOT_MASK	device/LPC54018.h	9531;"	d
SDIF_CMD_DISABLE_BOOT_SHIFT	device/LPC54018.h	9532;"	d
SDIF_CMD_ENABLE_BOOT	device/LPC54018.h	9527;"	d
SDIF_CMD_ENABLE_BOOT_MASK	device/LPC54018.h	9525;"	d
SDIF_CMD_ENABLE_BOOT_SHIFT	device/LPC54018.h	9526;"	d
SDIF_CMD_EXPECT_BOOT_ACK	device/LPC54018.h	9530;"	d
SDIF_CMD_EXPECT_BOOT_ACK_MASK	device/LPC54018.h	9528;"	d
SDIF_CMD_EXPECT_BOOT_ACK_SHIFT	device/LPC54018.h	9529;"	d
SDIF_CMD_READ_CEATA_DEVICE	device/LPC54018.h	9521;"	d
SDIF_CMD_READ_CEATA_DEVICE_MASK	device/LPC54018.h	9519;"	d
SDIF_CMD_READ_CEATA_DEVICE_SHIFT	device/LPC54018.h	9520;"	d
SDIF_CMD_READ_WRITE	device/LPC54018.h	9500;"	d
SDIF_CMD_READ_WRITE_MASK	device/LPC54018.h	9498;"	d
SDIF_CMD_READ_WRITE_SHIFT	device/LPC54018.h	9499;"	d
SDIF_CMD_RESPONSE_EXPECT	device/LPC54018.h	9488;"	d
SDIF_CMD_RESPONSE_EXPECT_MASK	device/LPC54018.h	9486;"	d
SDIF_CMD_RESPONSE_EXPECT_SHIFT	device/LPC54018.h	9487;"	d
SDIF_CMD_RESPONSE_LENGTH	device/LPC54018.h	9491;"	d
SDIF_CMD_RESPONSE_LENGTH_MASK	device/LPC54018.h	9489;"	d
SDIF_CMD_RESPONSE_LENGTH_SHIFT	device/LPC54018.h	9490;"	d
SDIF_CMD_SEND_AUTO_STOP	device/LPC54018.h	9506;"	d
SDIF_CMD_SEND_AUTO_STOP_MASK	device/LPC54018.h	9504;"	d
SDIF_CMD_SEND_AUTO_STOP_SHIFT	device/LPC54018.h	9505;"	d
SDIF_CMD_SEND_INITIALIZATION	device/LPC54018.h	9515;"	d
SDIF_CMD_SEND_INITIALIZATION_MASK	device/LPC54018.h	9513;"	d
SDIF_CMD_SEND_INITIALIZATION_SHIFT	device/LPC54018.h	9514;"	d
SDIF_CMD_START_CMD	device/LPC54018.h	9545;"	d
SDIF_CMD_START_CMD_MASK	device/LPC54018.h	9543;"	d
SDIF_CMD_START_CMD_SHIFT	device/LPC54018.h	9544;"	d
SDIF_CMD_STOP_ABORT_CMD	device/LPC54018.h	9512;"	d
SDIF_CMD_STOP_ABORT_CMD_MASK	device/LPC54018.h	9510;"	d
SDIF_CMD_STOP_ABORT_CMD_SHIFT	device/LPC54018.h	9511;"	d
SDIF_CMD_TRANSFER_MODE	device/LPC54018.h	9503;"	d
SDIF_CMD_TRANSFER_MODE_MASK	device/LPC54018.h	9501;"	d
SDIF_CMD_TRANSFER_MODE_SHIFT	device/LPC54018.h	9502;"	d
SDIF_CMD_UPDATE_CLOCK_REGISTERS_ONLY	device/LPC54018.h	9518;"	d
SDIF_CMD_UPDATE_CLOCK_REGISTERS_ONLY_MASK	device/LPC54018.h	9516;"	d
SDIF_CMD_UPDATE_CLOCK_REGISTERS_ONLY_SHIFT	device/LPC54018.h	9517;"	d
SDIF_CMD_USE_HOLD_REG	device/LPC54018.h	9542;"	d
SDIF_CMD_USE_HOLD_REG_MASK	device/LPC54018.h	9540;"	d
SDIF_CMD_USE_HOLD_REG_SHIFT	device/LPC54018.h	9541;"	d
SDIF_CMD_VOLT_SWITCH	device/LPC54018.h	9539;"	d
SDIF_CMD_VOLT_SWITCH_MASK	device/LPC54018.h	9537;"	d
SDIF_CMD_VOLT_SWITCH_SHIFT	device/LPC54018.h	9538;"	d
SDIF_CMD_WAIT_PRVDATA_COMPLETE	device/LPC54018.h	9509;"	d
SDIF_CMD_WAIT_PRVDATA_COMPLETE_MASK	device/LPC54018.h	9507;"	d
SDIF_CMD_WAIT_PRVDATA_COMPLETE_SHIFT	device/LPC54018.h	9508;"	d
SDIF_CTRL_ABORT_READ_DATA	device/LPC54018.h	9337;"	d
SDIF_CTRL_ABORT_READ_DATA_MASK	device/LPC54018.h	9335;"	d
SDIF_CTRL_ABORT_READ_DATA_SHIFT	device/LPC54018.h	9336;"	d
SDIF_CTRL_CARD_VOLTAGE_A0	device/LPC54018.h	9349;"	d
SDIF_CTRL_CARD_VOLTAGE_A0_MASK	device/LPC54018.h	9347;"	d
SDIF_CTRL_CARD_VOLTAGE_A0_SHIFT	device/LPC54018.h	9348;"	d
SDIF_CTRL_CARD_VOLTAGE_A1	device/LPC54018.h	9352;"	d
SDIF_CTRL_CARD_VOLTAGE_A1_MASK	device/LPC54018.h	9350;"	d
SDIF_CTRL_CARD_VOLTAGE_A1_SHIFT	device/LPC54018.h	9351;"	d
SDIF_CTRL_CARD_VOLTAGE_A2	device/LPC54018.h	9355;"	d
SDIF_CTRL_CARD_VOLTAGE_A2_MASK	device/LPC54018.h	9353;"	d
SDIF_CTRL_CARD_VOLTAGE_A2_SHIFT	device/LPC54018.h	9354;"	d
SDIF_CTRL_CEATA_DEVICE_INTERRUPT_STATUS	device/LPC54018.h	9346;"	d
SDIF_CTRL_CEATA_DEVICE_INTERRUPT_STATUS_MASK	device/LPC54018.h	9344;"	d
SDIF_CTRL_CEATA_DEVICE_INTERRUPT_STATUS_SHIFT	device/LPC54018.h	9345;"	d
SDIF_CTRL_CONTROLLER_RESET	device/LPC54018.h	9319;"	d
SDIF_CTRL_CONTROLLER_RESET_MASK	device/LPC54018.h	9317;"	d
SDIF_CTRL_CONTROLLER_RESET_SHIFT	device/LPC54018.h	9318;"	d
SDIF_CTRL_DMA_RESET	device/LPC54018.h	9325;"	d
SDIF_CTRL_DMA_RESET_MASK	device/LPC54018.h	9323;"	d
SDIF_CTRL_DMA_RESET_SHIFT	device/LPC54018.h	9324;"	d
SDIF_CTRL_FIFO_RESET	device/LPC54018.h	9322;"	d
SDIF_CTRL_FIFO_RESET_MASK	device/LPC54018.h	9320;"	d
SDIF_CTRL_FIFO_RESET_SHIFT	device/LPC54018.h	9321;"	d
SDIF_CTRL_INT_ENABLE	device/LPC54018.h	9328;"	d
SDIF_CTRL_INT_ENABLE_MASK	device/LPC54018.h	9326;"	d
SDIF_CTRL_INT_ENABLE_SHIFT	device/LPC54018.h	9327;"	d
SDIF_CTRL_READ_WAIT	device/LPC54018.h	9331;"	d
SDIF_CTRL_READ_WAIT_MASK	device/LPC54018.h	9329;"	d
SDIF_CTRL_READ_WAIT_SHIFT	device/LPC54018.h	9330;"	d
SDIF_CTRL_SEND_AUTO_STOP_CCSD	device/LPC54018.h	9343;"	d
SDIF_CTRL_SEND_AUTO_STOP_CCSD_MASK	device/LPC54018.h	9341;"	d
SDIF_CTRL_SEND_AUTO_STOP_CCSD_SHIFT	device/LPC54018.h	9342;"	d
SDIF_CTRL_SEND_CCSD	device/LPC54018.h	9340;"	d
SDIF_CTRL_SEND_CCSD_MASK	device/LPC54018.h	9338;"	d
SDIF_CTRL_SEND_CCSD_SHIFT	device/LPC54018.h	9339;"	d
SDIF_CTRL_SEND_IRQ_RESPONSE	device/LPC54018.h	9334;"	d
SDIF_CTRL_SEND_IRQ_RESPONSE_MASK	device/LPC54018.h	9332;"	d
SDIF_CTRL_SEND_IRQ_RESPONSE_SHIFT	device/LPC54018.h	9333;"	d
SDIF_CTRL_USE_INTERNAL_DMAC	device/LPC54018.h	9358;"	d
SDIF_CTRL_USE_INTERNAL_DMAC_MASK	device/LPC54018.h	9356;"	d
SDIF_CTRL_USE_INTERNAL_DMAC_SHIFT	device/LPC54018.h	9357;"	d
SDIF_CTYPE_CARD_WIDTH0	device/LPC54018.h	9399;"	d
SDIF_CTYPE_CARD_WIDTH0_MASK	device/LPC54018.h	9397;"	d
SDIF_CTYPE_CARD_WIDTH0_SHIFT	device/LPC54018.h	9398;"	d
SDIF_CTYPE_CARD_WIDTH1	device/LPC54018.h	9402;"	d
SDIF_CTYPE_CARD_WIDTH1_MASK	device/LPC54018.h	9400;"	d
SDIF_CTYPE_CARD_WIDTH1_SHIFT	device/LPC54018.h	9401;"	d
SDIF_DBADDR_SDL	device/LPC54018.h	9793;"	d
SDIF_DBADDR_SDL_MASK	device/LPC54018.h	9791;"	d
SDIF_DBADDR_SDL_SHIFT	device/LPC54018.h	9792;"	d
SDIF_DEBNCE_DEBOUNCE_COUNT	device/LPC54018.h	9753;"	d
SDIF_DEBNCE_DEBOUNCE_COUNT_MASK	device/LPC54018.h	9751;"	d
SDIF_DEBNCE_DEBOUNCE_COUNT_SHIFT	device/LPC54018.h	9752;"	d
SDIF_DSCADDR_HDA	device/LPC54018.h	9856;"	d
SDIF_DSCADDR_HDA_MASK	device/LPC54018.h	9854;"	d
SDIF_DSCADDR_HDA_SHIFT	device/LPC54018.h	9855;"	d
SDIF_FIFOTH_DMA_MTS	device/LPC54018.h	9718;"	d
SDIF_FIFOTH_DMA_MTS_MASK	device/LPC54018.h	9716;"	d
SDIF_FIFOTH_DMA_MTS_SHIFT	device/LPC54018.h	9717;"	d
SDIF_FIFOTH_RX_WMARK	device/LPC54018.h	9715;"	d
SDIF_FIFOTH_RX_WMARK_MASK	device/LPC54018.h	9713;"	d
SDIF_FIFOTH_RX_WMARK_SHIFT	device/LPC54018.h	9714;"	d
SDIF_FIFOTH_TX_WMARK	device/LPC54018.h	9712;"	d
SDIF_FIFOTH_TX_WMARK_MASK	device/LPC54018.h	9710;"	d
SDIF_FIFOTH_TX_WMARK_SHIFT	device/LPC54018.h	9711;"	d
SDIF_FIFO_COUNT	device/LPC54018.h	9894;"	d
SDIF_FIFO_DATA	device/LPC54018.h	9890;"	d
SDIF_FIFO_DATA_MASK	device/LPC54018.h	9888;"	d
SDIF_FIFO_DATA_SHIFT	device/LPC54018.h	9889;"	d
SDIF_IDINTEN_AIS	device/LPC54018.h	9849;"	d
SDIF_IDINTEN_AIS_MASK	device/LPC54018.h	9847;"	d
SDIF_IDINTEN_AIS_SHIFT	device/LPC54018.h	9848;"	d
SDIF_IDINTEN_CES	device/LPC54018.h	9843;"	d
SDIF_IDINTEN_CES_MASK	device/LPC54018.h	9841;"	d
SDIF_IDINTEN_CES_SHIFT	device/LPC54018.h	9842;"	d
SDIF_IDINTEN_DU	device/LPC54018.h	9840;"	d
SDIF_IDINTEN_DU_MASK	device/LPC54018.h	9838;"	d
SDIF_IDINTEN_DU_SHIFT	device/LPC54018.h	9839;"	d
SDIF_IDINTEN_FBE	device/LPC54018.h	9837;"	d
SDIF_IDINTEN_FBE_MASK	device/LPC54018.h	9835;"	d
SDIF_IDINTEN_FBE_SHIFT	device/LPC54018.h	9836;"	d
SDIF_IDINTEN_NIS	device/LPC54018.h	9846;"	d
SDIF_IDINTEN_NIS_MASK	device/LPC54018.h	9844;"	d
SDIF_IDINTEN_NIS_SHIFT	device/LPC54018.h	9845;"	d
SDIF_IDINTEN_RI	device/LPC54018.h	9834;"	d
SDIF_IDINTEN_RI_MASK	device/LPC54018.h	9832;"	d
SDIF_IDINTEN_RI_SHIFT	device/LPC54018.h	9833;"	d
SDIF_IDINTEN_TI	device/LPC54018.h	9831;"	d
SDIF_IDINTEN_TI_MASK	device/LPC54018.h	9829;"	d
SDIF_IDINTEN_TI_SHIFT	device/LPC54018.h	9830;"	d
SDIF_IDSTS_AIS	device/LPC54018.h	9818;"	d
SDIF_IDSTS_AIS_MASK	device/LPC54018.h	9816;"	d
SDIF_IDSTS_AIS_SHIFT	device/LPC54018.h	9817;"	d
SDIF_IDSTS_CES	device/LPC54018.h	9812;"	d
SDIF_IDSTS_CES_MASK	device/LPC54018.h	9810;"	d
SDIF_IDSTS_CES_SHIFT	device/LPC54018.h	9811;"	d
SDIF_IDSTS_DU	device/LPC54018.h	9809;"	d
SDIF_IDSTS_DU_MASK	device/LPC54018.h	9807;"	d
SDIF_IDSTS_DU_SHIFT	device/LPC54018.h	9808;"	d
SDIF_IDSTS_EB	device/LPC54018.h	9821;"	d
SDIF_IDSTS_EB_MASK	device/LPC54018.h	9819;"	d
SDIF_IDSTS_EB_SHIFT	device/LPC54018.h	9820;"	d
SDIF_IDSTS_FBE	device/LPC54018.h	9806;"	d
SDIF_IDSTS_FBE_MASK	device/LPC54018.h	9804;"	d
SDIF_IDSTS_FBE_SHIFT	device/LPC54018.h	9805;"	d
SDIF_IDSTS_FSM	device/LPC54018.h	9824;"	d
SDIF_IDSTS_FSM_MASK	device/LPC54018.h	9822;"	d
SDIF_IDSTS_FSM_SHIFT	device/LPC54018.h	9823;"	d
SDIF_IDSTS_NIS	device/LPC54018.h	9815;"	d
SDIF_IDSTS_NIS_MASK	device/LPC54018.h	9813;"	d
SDIF_IDSTS_NIS_SHIFT	device/LPC54018.h	9814;"	d
SDIF_IDSTS_RI	device/LPC54018.h	9803;"	d
SDIF_IDSTS_RI_MASK	device/LPC54018.h	9801;"	d
SDIF_IDSTS_RI_SHIFT	device/LPC54018.h	9802;"	d
SDIF_IDSTS_TI	device/LPC54018.h	9800;"	d
SDIF_IDSTS_TI_MASK	device/LPC54018.h	9798;"	d
SDIF_IDSTS_TI_SHIFT	device/LPC54018.h	9799;"	d
SDIF_INTMASK_ACD	device/LPC54018.h	9465;"	d
SDIF_INTMASK_ACD_MASK	device/LPC54018.h	9463;"	d
SDIF_INTMASK_ACD_SHIFT	device/LPC54018.h	9464;"	d
SDIF_INTMASK_CDET	device/LPC54018.h	9423;"	d
SDIF_INTMASK_CDET_MASK	device/LPC54018.h	9421;"	d
SDIF_INTMASK_CDET_SHIFT	device/LPC54018.h	9422;"	d
SDIF_INTMASK_CDONE	device/LPC54018.h	9429;"	d
SDIF_INTMASK_CDONE_MASK	device/LPC54018.h	9427;"	d
SDIF_INTMASK_CDONE_SHIFT	device/LPC54018.h	9428;"	d
SDIF_INTMASK_DCRC	device/LPC54018.h	9444;"	d
SDIF_INTMASK_DCRC_MASK	device/LPC54018.h	9442;"	d
SDIF_INTMASK_DCRC_SHIFT	device/LPC54018.h	9443;"	d
SDIF_INTMASK_DRTO	device/LPC54018.h	9450;"	d
SDIF_INTMASK_DRTO_MASK	device/LPC54018.h	9448;"	d
SDIF_INTMASK_DRTO_SHIFT	device/LPC54018.h	9449;"	d
SDIF_INTMASK_DTO	device/LPC54018.h	9432;"	d
SDIF_INTMASK_DTO_MASK	device/LPC54018.h	9430;"	d
SDIF_INTMASK_DTO_SHIFT	device/LPC54018.h	9431;"	d
SDIF_INTMASK_EBE	device/LPC54018.h	9468;"	d
SDIF_INTMASK_EBE_MASK	device/LPC54018.h	9466;"	d
SDIF_INTMASK_EBE_SHIFT	device/LPC54018.h	9467;"	d
SDIF_INTMASK_FRUN	device/LPC54018.h	9456;"	d
SDIF_INTMASK_FRUN_MASK	device/LPC54018.h	9454;"	d
SDIF_INTMASK_FRUN_SHIFT	device/LPC54018.h	9455;"	d
SDIF_INTMASK_HLE	device/LPC54018.h	9459;"	d
SDIF_INTMASK_HLE_MASK	device/LPC54018.h	9457;"	d
SDIF_INTMASK_HLE_SHIFT	device/LPC54018.h	9458;"	d
SDIF_INTMASK_HTO	device/LPC54018.h	9453;"	d
SDIF_INTMASK_HTO_MASK	device/LPC54018.h	9451;"	d
SDIF_INTMASK_HTO_SHIFT	device/LPC54018.h	9452;"	d
SDIF_INTMASK_RCRC	device/LPC54018.h	9441;"	d
SDIF_INTMASK_RCRC_MASK	device/LPC54018.h	9439;"	d
SDIF_INTMASK_RCRC_SHIFT	device/LPC54018.h	9440;"	d
SDIF_INTMASK_RE	device/LPC54018.h	9426;"	d
SDIF_INTMASK_RE_MASK	device/LPC54018.h	9424;"	d
SDIF_INTMASK_RE_SHIFT	device/LPC54018.h	9425;"	d
SDIF_INTMASK_RTO	device/LPC54018.h	9447;"	d
SDIF_INTMASK_RTO_MASK	device/LPC54018.h	9445;"	d
SDIF_INTMASK_RTO_SHIFT	device/LPC54018.h	9446;"	d
SDIF_INTMASK_RXDR	device/LPC54018.h	9438;"	d
SDIF_INTMASK_RXDR_MASK	device/LPC54018.h	9436;"	d
SDIF_INTMASK_RXDR_SHIFT	device/LPC54018.h	9437;"	d
SDIF_INTMASK_SBE	device/LPC54018.h	9462;"	d
SDIF_INTMASK_SBE_MASK	device/LPC54018.h	9460;"	d
SDIF_INTMASK_SBE_SHIFT	device/LPC54018.h	9461;"	d
SDIF_INTMASK_SDIO_INT_MASK	device/LPC54018.h	9471;"	d
SDIF_INTMASK_SDIO_INT_MASK_MASK	device/LPC54018.h	9469;"	d
SDIF_INTMASK_SDIO_INT_MASK_SHIFT	device/LPC54018.h	9470;"	d
SDIF_INTMASK_TXDR	device/LPC54018.h	9435;"	d
SDIF_INTMASK_TXDR_MASK	device/LPC54018.h	9433;"	d
SDIF_INTMASK_TXDR_SHIFT	device/LPC54018.h	9434;"	d
SDIF_IRQS	device/LPC54018.h	9912;"	d
SDIF_MINTSTS_ACD	device/LPC54018.h	9604;"	d
SDIF_MINTSTS_ACD_MASK	device/LPC54018.h	9602;"	d
SDIF_MINTSTS_ACD_SHIFT	device/LPC54018.h	9603;"	d
SDIF_MINTSTS_CDET	device/LPC54018.h	9562;"	d
SDIF_MINTSTS_CDET_MASK	device/LPC54018.h	9560;"	d
SDIF_MINTSTS_CDET_SHIFT	device/LPC54018.h	9561;"	d
SDIF_MINTSTS_CDONE	device/LPC54018.h	9568;"	d
SDIF_MINTSTS_CDONE_MASK	device/LPC54018.h	9566;"	d
SDIF_MINTSTS_CDONE_SHIFT	device/LPC54018.h	9567;"	d
SDIF_MINTSTS_DCRC	device/LPC54018.h	9583;"	d
SDIF_MINTSTS_DCRC_MASK	device/LPC54018.h	9581;"	d
SDIF_MINTSTS_DCRC_SHIFT	device/LPC54018.h	9582;"	d
SDIF_MINTSTS_DRTO	device/LPC54018.h	9589;"	d
SDIF_MINTSTS_DRTO_MASK	device/LPC54018.h	9587;"	d
SDIF_MINTSTS_DRTO_SHIFT	device/LPC54018.h	9588;"	d
SDIF_MINTSTS_DTO	device/LPC54018.h	9571;"	d
SDIF_MINTSTS_DTO_MASK	device/LPC54018.h	9569;"	d
SDIF_MINTSTS_DTO_SHIFT	device/LPC54018.h	9570;"	d
SDIF_MINTSTS_EBE	device/LPC54018.h	9607;"	d
SDIF_MINTSTS_EBE_MASK	device/LPC54018.h	9605;"	d
SDIF_MINTSTS_EBE_SHIFT	device/LPC54018.h	9606;"	d
SDIF_MINTSTS_FRUN	device/LPC54018.h	9595;"	d
SDIF_MINTSTS_FRUN_MASK	device/LPC54018.h	9593;"	d
SDIF_MINTSTS_FRUN_SHIFT	device/LPC54018.h	9594;"	d
SDIF_MINTSTS_HLE	device/LPC54018.h	9598;"	d
SDIF_MINTSTS_HLE_MASK	device/LPC54018.h	9596;"	d
SDIF_MINTSTS_HLE_SHIFT	device/LPC54018.h	9597;"	d
SDIF_MINTSTS_HTO	device/LPC54018.h	9592;"	d
SDIF_MINTSTS_HTO_MASK	device/LPC54018.h	9590;"	d
SDIF_MINTSTS_HTO_SHIFT	device/LPC54018.h	9591;"	d
SDIF_MINTSTS_RCRC	device/LPC54018.h	9580;"	d
SDIF_MINTSTS_RCRC_MASK	device/LPC54018.h	9578;"	d
SDIF_MINTSTS_RCRC_SHIFT	device/LPC54018.h	9579;"	d
SDIF_MINTSTS_RE	device/LPC54018.h	9565;"	d
SDIF_MINTSTS_RE_MASK	device/LPC54018.h	9563;"	d
SDIF_MINTSTS_RE_SHIFT	device/LPC54018.h	9564;"	d
SDIF_MINTSTS_RTO	device/LPC54018.h	9586;"	d
SDIF_MINTSTS_RTO_MASK	device/LPC54018.h	9584;"	d
SDIF_MINTSTS_RTO_SHIFT	device/LPC54018.h	9585;"	d
SDIF_MINTSTS_RXDR	device/LPC54018.h	9577;"	d
SDIF_MINTSTS_RXDR_MASK	device/LPC54018.h	9575;"	d
SDIF_MINTSTS_RXDR_SHIFT	device/LPC54018.h	9576;"	d
SDIF_MINTSTS_SBE	device/LPC54018.h	9601;"	d
SDIF_MINTSTS_SBE_MASK	device/LPC54018.h	9599;"	d
SDIF_MINTSTS_SBE_SHIFT	device/LPC54018.h	9600;"	d
SDIF_MINTSTS_SDIO_INTERRUPT	device/LPC54018.h	9610;"	d
SDIF_MINTSTS_SDIO_INTERRUPT_MASK	device/LPC54018.h	9608;"	d
SDIF_MINTSTS_SDIO_INTERRUPT_SHIFT	device/LPC54018.h	9609;"	d
SDIF_MINTSTS_TXDR	device/LPC54018.h	9574;"	d
SDIF_MINTSTS_TXDR_MASK	device/LPC54018.h	9572;"	d
SDIF_MINTSTS_TXDR_SHIFT	device/LPC54018.h	9573;"	d
SDIF_PLDMND_PD	device/LPC54018.h	9786;"	d
SDIF_PLDMND_PD_MASK	device/LPC54018.h	9784;"	d
SDIF_PLDMND_PD_SHIFT	device/LPC54018.h	9785;"	d
SDIF_PWREN_POWER_ENABLE	device/LPC54018.h	9365;"	d
SDIF_PWREN_POWER_ENABLE_MASK	device/LPC54018.h	9363;"	d
SDIF_PWREN_POWER_ENABLE_SHIFT	device/LPC54018.h	9364;"	d
SDIF_RESP_COUNT	device/LPC54018.h	9556;"	d
SDIF_RESP_RESPONSE	device/LPC54018.h	9552;"	d
SDIF_RESP_RESPONSE_MASK	device/LPC54018.h	9550;"	d
SDIF_RESP_RESPONSE_SHIFT	device/LPC54018.h	9551;"	d
SDIF_RINTSTS_ACD	device/LPC54018.h	9659;"	d
SDIF_RINTSTS_ACD_MASK	device/LPC54018.h	9657;"	d
SDIF_RINTSTS_ACD_SHIFT	device/LPC54018.h	9658;"	d
SDIF_RINTSTS_CDET	device/LPC54018.h	9617;"	d
SDIF_RINTSTS_CDET_MASK	device/LPC54018.h	9615;"	d
SDIF_RINTSTS_CDET_SHIFT	device/LPC54018.h	9616;"	d
SDIF_RINTSTS_CDONE	device/LPC54018.h	9623;"	d
SDIF_RINTSTS_CDONE_MASK	device/LPC54018.h	9621;"	d
SDIF_RINTSTS_CDONE_SHIFT	device/LPC54018.h	9622;"	d
SDIF_RINTSTS_DCRC	device/LPC54018.h	9638;"	d
SDIF_RINTSTS_DCRC_MASK	device/LPC54018.h	9636;"	d
SDIF_RINTSTS_DCRC_SHIFT	device/LPC54018.h	9637;"	d
SDIF_RINTSTS_DRTO_BDS	device/LPC54018.h	9644;"	d
SDIF_RINTSTS_DRTO_BDS_MASK	device/LPC54018.h	9642;"	d
SDIF_RINTSTS_DRTO_BDS_SHIFT	device/LPC54018.h	9643;"	d
SDIF_RINTSTS_DTO	device/LPC54018.h	9626;"	d
SDIF_RINTSTS_DTO_MASK	device/LPC54018.h	9624;"	d
SDIF_RINTSTS_DTO_SHIFT	device/LPC54018.h	9625;"	d
SDIF_RINTSTS_EBE	device/LPC54018.h	9662;"	d
SDIF_RINTSTS_EBE_MASK	device/LPC54018.h	9660;"	d
SDIF_RINTSTS_EBE_SHIFT	device/LPC54018.h	9661;"	d
SDIF_RINTSTS_FRUN	device/LPC54018.h	9650;"	d
SDIF_RINTSTS_FRUN_MASK	device/LPC54018.h	9648;"	d
SDIF_RINTSTS_FRUN_SHIFT	device/LPC54018.h	9649;"	d
SDIF_RINTSTS_HLE	device/LPC54018.h	9653;"	d
SDIF_RINTSTS_HLE_MASK	device/LPC54018.h	9651;"	d
SDIF_RINTSTS_HLE_SHIFT	device/LPC54018.h	9652;"	d
SDIF_RINTSTS_HTO	device/LPC54018.h	9647;"	d
SDIF_RINTSTS_HTO_MASK	device/LPC54018.h	9645;"	d
SDIF_RINTSTS_HTO_SHIFT	device/LPC54018.h	9646;"	d
SDIF_RINTSTS_RCRC	device/LPC54018.h	9635;"	d
SDIF_RINTSTS_RCRC_MASK	device/LPC54018.h	9633;"	d
SDIF_RINTSTS_RCRC_SHIFT	device/LPC54018.h	9634;"	d
SDIF_RINTSTS_RE	device/LPC54018.h	9620;"	d
SDIF_RINTSTS_RE_MASK	device/LPC54018.h	9618;"	d
SDIF_RINTSTS_RE_SHIFT	device/LPC54018.h	9619;"	d
SDIF_RINTSTS_RTO_BAR	device/LPC54018.h	9641;"	d
SDIF_RINTSTS_RTO_BAR_MASK	device/LPC54018.h	9639;"	d
SDIF_RINTSTS_RTO_BAR_SHIFT	device/LPC54018.h	9640;"	d
SDIF_RINTSTS_RXDR	device/LPC54018.h	9632;"	d
SDIF_RINTSTS_RXDR_MASK	device/LPC54018.h	9630;"	d
SDIF_RINTSTS_RXDR_SHIFT	device/LPC54018.h	9631;"	d
SDIF_RINTSTS_SBE	device/LPC54018.h	9656;"	d
SDIF_RINTSTS_SBE_MASK	device/LPC54018.h	9654;"	d
SDIF_RINTSTS_SBE_SHIFT	device/LPC54018.h	9655;"	d
SDIF_RINTSTS_SDIO_INTERRUPT	device/LPC54018.h	9665;"	d
SDIF_RINTSTS_SDIO_INTERRUPT_MASK	device/LPC54018.h	9663;"	d
SDIF_RINTSTS_SDIO_INTERRUPT_SHIFT	device/LPC54018.h	9664;"	d
SDIF_RINTSTS_TXDR	device/LPC54018.h	9629;"	d
SDIF_RINTSTS_TXDR_MASK	device/LPC54018.h	9627;"	d
SDIF_RINTSTS_TXDR_SHIFT	device/LPC54018.h	9628;"	d
SDIF_RST_N_CARD_RESET	device/LPC54018.h	9760;"	d
SDIF_RST_N_CARD_RESET_MASK	device/LPC54018.h	9758;"	d
SDIF_RST_N_CARD_RESET_SHIFT	device/LPC54018.h	9759;"	d
SDIF_STATUS_CMDFSMSTATES	device/LPC54018.h	9684;"	d
SDIF_STATUS_CMDFSMSTATES_MASK	device/LPC54018.h	9682;"	d
SDIF_STATUS_CMDFSMSTATES_SHIFT	device/LPC54018.h	9683;"	d
SDIF_STATUS_DATA_3_STATUS	device/LPC54018.h	9687;"	d
SDIF_STATUS_DATA_3_STATUS_MASK	device/LPC54018.h	9685;"	d
SDIF_STATUS_DATA_3_STATUS_SHIFT	device/LPC54018.h	9686;"	d
SDIF_STATUS_DATA_BUSY	device/LPC54018.h	9690;"	d
SDIF_STATUS_DATA_BUSY_MASK	device/LPC54018.h	9688;"	d
SDIF_STATUS_DATA_BUSY_SHIFT	device/LPC54018.h	9689;"	d
SDIF_STATUS_DATA_STATE_MC_BUSY	device/LPC54018.h	9693;"	d
SDIF_STATUS_DATA_STATE_MC_BUSY_MASK	device/LPC54018.h	9691;"	d
SDIF_STATUS_DATA_STATE_MC_BUSY_SHIFT	device/LPC54018.h	9692;"	d
SDIF_STATUS_DMA_ACK	device/LPC54018.h	9702;"	d
SDIF_STATUS_DMA_ACK_MASK	device/LPC54018.h	9700;"	d
SDIF_STATUS_DMA_ACK_SHIFT	device/LPC54018.h	9701;"	d
SDIF_STATUS_DMA_REQ	device/LPC54018.h	9705;"	d
SDIF_STATUS_DMA_REQ_MASK	device/LPC54018.h	9703;"	d
SDIF_STATUS_DMA_REQ_SHIFT	device/LPC54018.h	9704;"	d
SDIF_STATUS_FIFO_COUNT	device/LPC54018.h	9699;"	d
SDIF_STATUS_FIFO_COUNT_MASK	device/LPC54018.h	9697;"	d
SDIF_STATUS_FIFO_COUNT_SHIFT	device/LPC54018.h	9698;"	d
SDIF_STATUS_FIFO_EMPTY	device/LPC54018.h	9678;"	d
SDIF_STATUS_FIFO_EMPTY_MASK	device/LPC54018.h	9676;"	d
SDIF_STATUS_FIFO_EMPTY_SHIFT	device/LPC54018.h	9677;"	d
SDIF_STATUS_FIFO_FULL	device/LPC54018.h	9681;"	d
SDIF_STATUS_FIFO_FULL_MASK	device/LPC54018.h	9679;"	d
SDIF_STATUS_FIFO_FULL_SHIFT	device/LPC54018.h	9680;"	d
SDIF_STATUS_FIFO_RX_WATERMARK	device/LPC54018.h	9672;"	d
SDIF_STATUS_FIFO_RX_WATERMARK_MASK	device/LPC54018.h	9670;"	d
SDIF_STATUS_FIFO_RX_WATERMARK_SHIFT	device/LPC54018.h	9671;"	d
SDIF_STATUS_FIFO_TX_WATERMARK	device/LPC54018.h	9675;"	d
SDIF_STATUS_FIFO_TX_WATERMARK_MASK	device/LPC54018.h	9673;"	d
SDIF_STATUS_FIFO_TX_WATERMARK_SHIFT	device/LPC54018.h	9674;"	d
SDIF_STATUS_RESPONSE_INDEX	device/LPC54018.h	9696;"	d
SDIF_STATUS_RESPONSE_INDEX_MASK	device/LPC54018.h	9694;"	d
SDIF_STATUS_RESPONSE_INDEX_SHIFT	device/LPC54018.h	9695;"	d
SDIF_TBBCNT_TRANS_FIFO_BYTE_COUNT	device/LPC54018.h	9746;"	d
SDIF_TBBCNT_TRANS_FIFO_BYTE_COUNT_MASK	device/LPC54018.h	9744;"	d
SDIF_TBBCNT_TRANS_FIFO_BYTE_COUNT_SHIFT	device/LPC54018.h	9745;"	d
SDIF_TCBCNT_TRANS_CARD_BYTE_COUNT	device/LPC54018.h	9739;"	d
SDIF_TCBCNT_TRANS_CARD_BYTE_COUNT_MASK	device/LPC54018.h	9737;"	d
SDIF_TCBCNT_TRANS_CARD_BYTE_COUNT_SHIFT	device/LPC54018.h	9738;"	d
SDIF_TMOUT_DATA_TIMEOUT	device/LPC54018.h	9392;"	d
SDIF_TMOUT_DATA_TIMEOUT_MASK	device/LPC54018.h	9390;"	d
SDIF_TMOUT_DATA_TIMEOUT_SHIFT	device/LPC54018.h	9391;"	d
SDIF_TMOUT_RESPONSE_TIMEOUT	device/LPC54018.h	9389;"	d
SDIF_TMOUT_RESPONSE_TIMEOUT_MASK	device/LPC54018.h	9387;"	d
SDIF_TMOUT_RESPONSE_TIMEOUT_SHIFT	device/LPC54018.h	9388;"	d
SDIF_Type	device/LPC54018.h	/^} SDIF_Type;$/;"	t	typeref:struct:__anon177
SDIF_WRTPRT_WRITE_PROTECT	device/LPC54018.h	9732;"	d
SDIF_WRTPRT_WRITE_PROTECT_MASK	device/LPC54018.h	9730;"	d
SDIF_WRTPRT_WRITE_PROTECT_SHIFT	device/LPC54018.h	9731;"	d
SDIOCLKCTRL	device/LPC54018.h	/^  __IO uint32_t SDIOCLKCTRL;                       \/**< SDIO CCLKIN phase and delay control, offset: 0x460 *\/$/;"	m	struct:__anon185
SDIOCLKDIV	device/LPC54018.h	/^  __IO uint32_t SDIOCLKDIV;                        \/**< SDIO clock divider, offset: 0x3BC *\/$/;"	m	struct:__anon185
SDIOCLKSEL	device/LPC54018.h	/^  __IO uint32_t SDIOCLKSEL;                        \/**< SDIO clock source select, offset: 0x2F8 *\/$/;"	m	struct:__anon185
SDIO_CLOCKS	drivers/fsl_clock.h	217;"	d
SDIO_IRQHandler	startup/startup_lpc54018.c	/^WEAK void SDIO_IRQHandler(void)$/;"	f
SDIO_IRQn	device/LPC54018.h	/^  SDIO_IRQn                    = 42,               \/**< SD\/MMC  *\/$/;"	e	enum:IRQn
SDIO_RST	drivers/fsl_reset.h	183;"	d
SDK_ALIGN	drivers/fsl_common.h	231;"	d
SDK_DEBUGCONSOLE	utilities/fsl_debug_console.h	48;"	d
SDK_DEBUGCONSOLE_UART	utilities/fsl_debug_console.h	55;"	d
SDK_DEVICE_MAXIMUM_CPU_CLOCK_FREQUENCY	drivers/fsl_clock.h	57;"	d
SDK_DelayAtLeastUs	drivers/fsl_clock.c	/^__attribute__((weak)) void SDK_DelayAtLeastUs(uint32_t delay_us)$/;"	f
SDK_Free	drivers/fsl_common.c	/^void SDK_Free(void *ptr)$/;"	f
SDK_L1DCACHE_ALIGN	drivers/fsl_common.h	234;"	d
SDK_L2CACHE_ALIGN	drivers/fsl_common.h	238;"	d
SDK_MEM_MAGIC_NUMBER	drivers/fsl_common.c	11;"	d	file:
SDK_Malloc	drivers/fsl_common.c	/^void *SDK_Malloc(size_t size, size_t alignbytes)$/;"	f
SDK_PRAGMA	drivers/fsl_common.h	228;"	d
SDK_SIZEALIGN	drivers/fsl_common.h	274;"	d
SDRAM_DEV_MEMORYMAP	board/board.c	42;"	d	file:
SDRAM_DEV_MEMORYMAP	board/board.c	59;"	d	file:
SDRAM_MODEREG_VALUE	board/board.c	41;"	d	file:
SDRAM_MODEREG_VALUE	board/board.c	58;"	d	file:
SDRAM_MRD_NCLK	board/board.c	39;"	d	file:
SDRAM_MRD_NCLK	board/board.c	56;"	d	file:
SDRAM_RAS_NCLK	board/board.c	40;"	d	file:
SDRAM_RAS_NCLK	board/board.c	57;"	d	file:
SDRAM_REFRESHPERIOD_NS	board/board.c	29;"	d	file:
SDRAM_REFRESHPERIOD_NS	board/board.c	46;"	d	file:
SDRAM_RFC_NS	board/board.c	36;"	d	file:
SDRAM_RFC_NS	board/board.c	53;"	d	file:
SDRAM_RRD_NS	board/board.c	38;"	d	file:
SDRAM_RRD_NS	board/board.c	55;"	d	file:
SDRAM_TAPR_NS	board/board.c	33;"	d	file:
SDRAM_TAPR_NS	board/board.c	50;"	d	file:
SDRAM_TRAS_NS	board/board.c	31;"	d	file:
SDRAM_TRAS_NS	board/board.c	48;"	d	file:
SDRAM_TRC_NS	board/board.c	35;"	d	file:
SDRAM_TRC_NS	board/board.c	52;"	d	file:
SDRAM_TRP_NS	board/board.c	30;"	d	file:
SDRAM_TRP_NS	board/board.c	47;"	d	file:
SDRAM_TSREX_NS	board/board.c	32;"	d	file:
SDRAM_TSREX_NS	board/board.c	49;"	d	file:
SDRAM_TWRDELT_NS	board/board.c	34;"	d	file:
SDRAM_TWRDELT_NS	board/board.c	51;"	d	file:
SDRAM_XSR_NS	board/board.c	37;"	d	file:
SDRAM_XSR_NS	board/board.c	54;"	d	file:
SECCHANNEL	device/LPC54018.h	/^  } SECCHANNEL[3];$/;"	m	struct:__anon161	typeref:struct:__anon161::__anon162
SEC_GPIO_INT0_IRQ0_DriverIRQHandler	drivers/fsl_pint.c	/^void SEC_GPIO_INT0_IRQ0_DriverIRQHandler(void)$/;"	f
SEC_GPIO_INT0_IRQ1_DriverIRQHandler	drivers/fsl_pint.c	/^void SEC_GPIO_INT0_IRQ1_DriverIRQHandler(void)$/;"	f
SEC_PINT_PIN_INT_COUNT	drivers/fsl_pint.h	34;"	d
SEED	device/LPC54018.h	/^  __IO uint32_t SEED;                              \/**< CRC seed register, offset: 0x4 *\/$/;"	m	struct:__anon143
SEGGER_BUFFER_DESC	emwin/emWin_header/SEGGER.h	/^} SEGGER_BUFFER_DESC;$/;"	t	typeref:struct:__anon201
SEGGER_CACHE_CONFIG	emwin/emWin_header/SEGGER.h	/^} SEGGER_CACHE_CONFIG;$/;"	t	typeref:struct:__anon202
SEGGER_COUNTOF	emwin/emWin_header/SEGGER.h	97;"	d
SEGGER_H	emwin/emWin_header/SEGGER.h	47;"	d
SEGGER_MAX	emwin/emWin_header/SEGGER.h	99;"	d
SEGGER_MIN	emwin/emWin_header/SEGGER.h	98;"	d
SEGGER_PRINTF_API	emwin/emWin_header/SEGGER.h	/^} SEGGER_PRINTF_API;$/;"	t	typeref:struct:__anon203
SEGGER_PRINTF_FLAG_ADJLEFT	emwin/emWin_header/SEGGER.h	112;"	d
SEGGER_PRINTF_FLAG_NEGATIVE	emwin/emWin_header/SEGGER.h	117;"	d
SEGGER_PRINTF_FLAG_PRECEED	emwin/emWin_header/SEGGER.h	115;"	d
SEGGER_PRINTF_FLAG_SIGNFORCE	emwin/emWin_header/SEGGER.h	113;"	d
SEGGER_PRINTF_FLAG_SIGNSPACE	emwin/emWin_header/SEGGER.h	114;"	d
SEGGER_PRINTF_FLAG_ZEROPAD	emwin/emWin_header/SEGGER.h	116;"	d
SEGGER_PRINTF_FORMATTER	emwin/emWin_header/SEGGER.h	/^typedef struct SEGGER_PRINTF_FORMATTER {$/;"	s
SEGGER_PRINTF_FORMATTER	emwin/emWin_header/SEGGER.h	/^} SEGGER_PRINTF_FORMATTER;$/;"	t	typeref:struct:SEGGER_PRINTF_FORMATTER
SEGGER_SNPRINTF_CONTEXT	emwin/emWin_header/SEGGER.h	/^typedef struct SEGGER_SNPRINTF_CONTEXT_struct SEGGER_SNPRINTF_CONTEXT;$/;"	t	typeref:struct:SEGGER_SNPRINTF_CONTEXT_struct
SEGGER_SNPRINTF_CONTEXT_struct	emwin/emWin_header/SEGGER.h	/^struct SEGGER_SNPRINTF_CONTEXT_struct {$/;"	s
SEGGER_USE_PARA	emwin/emWin_header/SEGGER.h	102;"	d
SEGGER_pFormatter	emwin/emWin_header/SEGGER.h	/^typedef void (*SEGGER_pFormatter)(SEGGER_BUFFER_DESC* pBufferDesc, SEGGER_SNPRINTF_CONTEXT* pContext, const SEGGER_PRINTF_API* pApi, va_list* pParamList, char Lead, int Width, int Precision);$/;"	t
SELECT_SEM_PTR	lwip/src/include/lwip/priv/sockets_priv.h	140;"	d
SELECT_SEM_PTR	lwip/src/include/lwip/priv/sockets_priv.h	143;"	d
SELECT_SEM_T	lwip/src/include/lwip/priv/sockets_priv.h	139;"	d
SELECT_SEM_T	lwip/src/include/lwip/priv/sockets_priv.h	142;"	d
SELWAIT_T	lwip/src/include/lwip/priv/sockets_priv.h	58;"	d
SEMAPHORE_H	amazon-freertos/include/semphr.h	29;"	d
SEND_PACKAGE_LEN	radio/radio.c	11;"	d	file:
SEQ_CTRL	device/LPC54018.h	/^  __IO uint32_t SEQ_CTRL[2];                       \/**< ADC Conversion Sequence-n control register: Controls triggering and channel selection for conversion sequence-n. Also specifies interrupt mode for sequence-n., array offset: 0x8, array step: 0x4 *\/$/;"	m	struct:__anon140
SEQ_GDAT	device/LPC54018.h	/^  __I  uint32_t SEQ_GDAT[2];                       \/**< ADC Sequence-n Global Data register. This register contains the result of the most recent ADC conversion performed under sequence-n., array offset: 0x10, array step: 0x4 *\/$/;"	m	struct:__anon140
SERIAL_EVENT_DATA_RECEIVED	component/serial_manager/serial_manager.c	49;"	d	file:
SERIAL_EVENT_DATA_SENT	component/serial_manager/serial_manager.c	50;"	d	file:
SERIAL_MANAGER_HANDLE_SIZE	component/serial_manager/serial_manager.h	128;"	d
SERIAL_MANAGER_HANDLE_SIZE	component/serial_manager/serial_manager.h	130;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	106;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	107;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	115;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	116;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	84;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	88;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	89;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	97;"	d
SERIAL_MANAGER_HANDLE_SIZE_TEMP	component/serial_manager/serial_manager.h	98;"	d
SERIAL_MANAGER_NON_BLOCKING_MODE	component/serial_manager/serial_manager.h	22;"	d
SERIAL_MANAGER_NON_BLOCKING_MODE	component/serial_manager/serial_manager.h	25;"	d
SERIAL_MANAGER_READ_HANDLE_SIZE	component/serial_manager/serial_manager.h	52;"	d
SERIAL_MANAGER_READ_HANDLE_SIZE	component/serial_manager/serial_manager.h	55;"	d
SERIAL_MANAGER_READ_TAG	component/serial_manager/serial_manager.c	53;"	d	file:
SERIAL_MANAGER_TASK_PRIORITY	component/serial_manager/serial_manager.h	134;"	d
SERIAL_MANAGER_TASK_STACK_SIZE	component/serial_manager/serial_manager.h	135;"	d
SERIAL_MANAGER_USE_COMMON_TASK	component/serial_manager/serial_manager.h	133;"	d
SERIAL_MANAGER_WRITE_HANDLE_SIZE	component/serial_manager/serial_manager.h	51;"	d
SERIAL_MANAGER_WRITE_HANDLE_SIZE	component/serial_manager/serial_manager.h	54;"	d
SERIAL_MANAGER_WRITE_TAG	component/serial_manager/serial_manager.c	52;"	d	file:
SERIAL_PORT_TYPE_SWO	component/serial_manager/serial_manager.h	41;"	d
SERIAL_PORT_TYPE_UART	component/serial_manager/serial_manager.h	31;"	d
SERIAL_PORT_TYPE_USBCDC	component/serial_manager/serial_manager.h	36;"	d
SERIAL_PORT_TYPE_USBCDC_VIRTUAL	component/serial_manager/serial_manager.h	46;"	d
SERIAL_PORT_UART_HANDLE_SIZE	component/serial_manager/serial_port_uart.h	22;"	d
SERIAL_PORT_UART_HANDLE_SIZE	component/serial_manager/serial_port_uart.h	24;"	d
SERIAL_PORT_UART_RECEIVE_DATA_LENGTH	component/serial_manager/serial_port_uart.c	29;"	d	file:
SET	device/LPC54018.h	/^    __IO uint32_t SET;                               \/**< SCT output 0 set register, array offset: 0x500, array step: 0x8 *\/$/;"	m	struct:__anon172::__anon176
SET	device/LPC54018.h	/^  __IO uint32_t SET[6];                            \/**< Write: Set register for port Read: output bits for port, array offset: 0x2200, array step: 0x4 *\/$/;"	m	struct:__anon159
SETTRIG	device/LPC54018.h	/^    __O  uint32_t SETTRIG;                           \/**< Set Trigger control bits for all DMA channels., array offset: 0x70, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
SETVALID	device/LPC54018.h	/^    __O  uint32_t SETVALID;                          \/**< Set ValidPending control bits for all DMA channels., array offset: 0x68, array step: 0x5C *\/$/;"	m	struct:__anon146::__anon147
SET_NONBLOCKING_CONNECT	lwip/src/api/api_msg.c	62;"	d	file:
SFAR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t SFAR;                   \/*!< Offset: 0x018 (R\/W)  Secure Fault Address Register *\/$/;"	m	struct:__anon28
SFPA	CMSIS/core_armv8mml.h	/^    uint32_t SFPA:1;                     \/*!< bit:      3  Secure floating-point active *\/$/;"	m	struct:__anon15::__anon16
SFSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t SFSR;                   \/*!< Offset: 0x014 (R\/W)  Secure Fault Status Register *\/$/;"	m	struct:__anon28
SHA0	device/LPC54018.h	10057;"	d
SHA0_BASE	device/LPC54018.h	10055;"	d
SHA0_CLOCKS	drivers/fsl_clock.h	262;"	d
SHA1_PAD_SIZE	lwip/src/include/netif/ppp/mppe.h	136;"	d
SHA1_SIGNATURE_SIZE	lwip/src/netif/ppp/chap_ms.c	100;"	d	file:
SHA1_SIGNATURE_SIZE	lwip/src/netif/ppp/mppe.c	39;"	d	file:
SHA_ALIAS_COUNT	device/LPC54018.h	10035;"	d
SHA_ALIAS_DATA	device/LPC54018.h	10031;"	d
SHA_ALIAS_DATA_MASK	device/LPC54018.h	10029;"	d
SHA_ALIAS_DATA_SHIFT	device/LPC54018.h	10030;"	d
SHA_BASE_ADDRS	device/LPC54018.h	10059;"	d
SHA_BASE_PTRS	device/LPC54018.h	10061;"	d
SHA_BLOCK_SIZE	drivers/fsl_sha.c	20;"	d	file:
SHA_CTRL_DMA	device/LPC54018.h	9961;"	d
SHA_CTRL_DMA_MASK	device/LPC54018.h	9959;"	d
SHA_CTRL_DMA_SHIFT	device/LPC54018.h	9960;"	d
SHA_CTRL_MODE	device/LPC54018.h	9955;"	d
SHA_CTRL_MODE_MASK	device/LPC54018.h	9953;"	d
SHA_CTRL_MODE_SHIFT	device/LPC54018.h	9954;"	d
SHA_CTRL_NEW	device/LPC54018.h	9958;"	d
SHA_CTRL_NEW_MASK	device/LPC54018.h	9956;"	d
SHA_CTRL_NEW_SHIFT	device/LPC54018.h	9957;"	d
SHA_CTX_SIZE	drivers/fsl_sha.h	37;"	d
SHA_ClkDeinit	drivers/fsl_sha.c	/^void SHA_ClkDeinit(SHA_Type *base)$/;"	f
SHA_ClkInit	drivers/fsl_sha.c	/^void SHA_ClkInit(SHA_Type *base)$/;"	f
SHA_DIGESTSIZE	lwip/src/netif/ppp/eap.c	61;"	d	file:
SHA_DIGEST_COUNT	device/LPC54018.h	10045;"	d
SHA_DIGEST_DIGEST	device/LPC54018.h	10041;"	d
SHA_DIGEST_DIGEST_MASK	device/LPC54018.h	10039;"	d
SHA_DIGEST_DIGEST_SHIFT	device/LPC54018.h	10040;"	d
SHA_Finish	drivers/fsl_sha.c	/^status_t SHA_Finish(SHA_Type *base, sha_ctx_t *ctx, uint8_t *output, size_t *outputSize)$/;"	f
SHA_INDATA_DATA	device/LPC54018.h	10024;"	d
SHA_INDATA_DATA_MASK	device/LPC54018.h	10022;"	d
SHA_INDATA_DATA_SHIFT	device/LPC54018.h	10023;"	d
SHA_INTENCLR_DIGEST	device/LPC54018.h	9997;"	d
SHA_INTENCLR_DIGEST_MASK	device/LPC54018.h	9995;"	d
SHA_INTENCLR_DIGEST_SHIFT	device/LPC54018.h	9996;"	d
SHA_INTENCLR_ERROR	device/LPC54018.h	10000;"	d
SHA_INTENCLR_ERROR_MASK	device/LPC54018.h	9998;"	d
SHA_INTENCLR_ERROR_SHIFT	device/LPC54018.h	9999;"	d
SHA_INTENCLR_WAITING	device/LPC54018.h	9994;"	d
SHA_INTENCLR_WAITING_MASK	device/LPC54018.h	9992;"	d
SHA_INTENCLR_WAITING_SHIFT	device/LPC54018.h	9993;"	d
SHA_INTENSET_DIGEST	device/LPC54018.h	9984;"	d
SHA_INTENSET_DIGEST_MASK	device/LPC54018.h	9982;"	d
SHA_INTENSET_DIGEST_SHIFT	device/LPC54018.h	9983;"	d
SHA_INTENSET_ERROR	device/LPC54018.h	9987;"	d
SHA_INTENSET_ERROR_MASK	device/LPC54018.h	9985;"	d
SHA_INTENSET_ERROR_SHIFT	device/LPC54018.h	9986;"	d
SHA_INTENSET_WAITING	device/LPC54018.h	9981;"	d
SHA_INTENSET_WAITING_MASK	device/LPC54018.h	9979;"	d
SHA_INTENSET_WAITING_SHIFT	device/LPC54018.h	9980;"	d
SHA_IRQHandler	startup/startup_lpc54018.c	/^WEAK void SHA_IRQHandler(void)$/;"	f
SHA_IRQn	device/LPC54018.h	/^  SHA_IRQn                     = 54,               \/**< SHA interrupt *\/$/;"	e	enum:IRQn
SHA_Init	drivers/fsl_sha.c	/^status_t SHA_Init(SHA_Type *base, sha_ctx_t *ctx, sha_algo_t algo)$/;"	f
SHA_MEMADDR_BASEADDR	device/LPC54018.h	10017;"	d
SHA_MEMADDR_BASEADDR_MASK	device/LPC54018.h	10015;"	d
SHA_MEMADDR_BASEADDR_SHIFT	device/LPC54018.h	10016;"	d
SHA_MEMCTRL_COUNT	device/LPC54018.h	10010;"	d
SHA_MEMCTRL_COUNT_MASK	device/LPC54018.h	10008;"	d
SHA_MEMCTRL_COUNT_SHIFT	device/LPC54018.h	10009;"	d
SHA_MEMCTRL_MASTER	device/LPC54018.h	10007;"	d
SHA_MEMCTRL_MASTER_MASK	device/LPC54018.h	10005;"	d
SHA_MEMCTRL_MASTER_SHIFT	device/LPC54018.h	10006;"	d
SHA_RST	drivers/fsl_reset.h	191;"	d
SHA_STATUS_DIGEST	device/LPC54018.h	9971;"	d
SHA_STATUS_DIGEST_MASK	device/LPC54018.h	9969;"	d
SHA_STATUS_DIGEST_SHIFT	device/LPC54018.h	9970;"	d
SHA_STATUS_ERROR	device/LPC54018.h	9974;"	d
SHA_STATUS_ERROR_MASK	device/LPC54018.h	9972;"	d
SHA_STATUS_ERROR_SHIFT	device/LPC54018.h	9973;"	d
SHA_STATUS_WAITING	device/LPC54018.h	9968;"	d
SHA_STATUS_WAITING_MASK	device/LPC54018.h	9966;"	d
SHA_STATUS_WAITING_SHIFT	device/LPC54018.h	9967;"	d
SHA_Type	device/LPC54018.h	/^} SHA_Type;$/;"	t	typeref:struct:__anon178
SHA_Update	drivers/fsl_sha.c	/^status_t SHA_Update(SHA_Type *base, sha_ctx_t *ctx, const uint8_t *message, size_t messageSize)$/;"	f
SHCSR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t SHCSR;                  \/*!< Offset: 0x024 (R\/W)  System Handler Control and State Register *\/$/;"	m	struct:__anon122
SHCSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t SHCSR;                  \/*!< Offset: 0x024 (R\/W)  System Handler Control and State Register *\/$/;"	m	struct:__anon18
SHCSR	CMSIS/core_cm4.h	/^  __IOM uint32_t SHCSR;                  \/*!< Offset: 0x024 (R\/W)  System Handler Control and State Register *\/$/;"	m	struct:__anon40
SHP	CMSIS/core_cm4.h	/^  __IOM uint8_t  SHP[12U];               \/*!< Offset: 0x018 (R\/W)  System Handlers Priority Registers (4-7, 8-11, 12-15) *\/$/;"	m	struct:__anon40
SHPR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t SHPR[2U];               \/*!< Offset: 0x01C (R\/W)  System Handlers Priority Registers. [0] is RESERVED *\/$/;"	m	struct:__anon122
SHPR	CMSIS/core_armv8mml.h	/^  __IOM uint8_t  SHPR[12U];              \/*!< Offset: 0x018 (R\/W)  System Handlers Priority Registers (4-7, 8-11, 12-15) *\/$/;"	m	struct:__anon18
SHUT_RD	lwip/src/include/lwip/sockets.h	460;"	d
SHUT_RDWR	lwip/src/include/lwip/sockets.h	462;"	d
SHUT_WR	lwip/src/include/lwip/sockets.h	461;"	d
SIDFC	device/LPC54018.h	/^  __IO uint32_t SIDFC;                             \/**< Standard ID Filter Configuration, offset: 0x84 *\/$/;"	m	struct:__anon142
SIENF	device/LPC54018.h	/^  __O  uint32_t SIENF;                             \/**< Pin interrupt active level or falling edge interrupt set register, offset: 0x14 *\/$/;"	m	struct:__anon169
SIENR	device/LPC54018.h	/^  __O  uint32_t SIENR;                             \/**< Pin interrupt level or rising edge interrupt set register, offset: 0x8 *\/$/;"	m	struct:__anon169
SIGN	source/common.c	16;"	d	file:
SIN_ZERO_LEN	lwip/src/include/lwip/sockets.h	76;"	d
SIOCATMARK	lwip/src/include/lwip/sockets.h	430;"	d
SIOCGHIWAT	lwip/src/include/lwip/sockets.h	427;"	d
SIOCGLOWAT	lwip/src/include/lwip/sockets.h	429;"	d
SIOCSHIWAT	lwip/src/include/lwip/sockets.h	426;"	d
SIOCSLOWAT	lwip/src/include/lwip/sockets.h	428;"	d
SIO_H	lwip/src/include/lwip/sio.h	36;"	d
SIXLOWPAN	lwip/src/Filelists.mk	/^SIXLOWPAN=$(LWIPDIR)\/netif\/lowpan6_common.c \\$/;"	m
SIZEOF_DNS_ANSWER	lwip/src/core/dns.c	207;"	d	file:
SIZEOF_DNS_ANSWER_ASSERT	lwip/src/core/dns.c	209;"	d	file:
SIZEOF_DNS_HDR	lwip/src/include/lwip/prot/dns.h	116;"	d
SIZEOF_DNS_QUERY	lwip/src/core/dns.c	195;"	d	file:
SIZEOF_ETHARP_HDR	lwip/src/include/lwip/prot/etharp.h	102;"	d
SIZEOF_ETH_HDR	lwip/src/include/lwip/prot/ethernet.h	89;"	d
SIZEOF_RDNSS_OPTION_BASE	lwip/src/include/lwip/prot/nd6.h	268;"	d
SIZEOF_STRUCT_MEM	lwip/src/core/mem.c	370;"	d	file:
SIZEOF_STRUCT_PBUF	lwip/src/core/pbuf.c	89;"	d	file:
SIZEOF_VLAN_HDR	lwip/src/include/lwip/prot/ethernet.h	107;"	d
SLEEPCNT	CMSIS/core_armv8mml.h	/^  __IOM uint32_t SLEEPCNT;               \/*!< Offset: 0x010 (R\/W)  Sleep Count Register *\/$/;"	m	struct:__anon23
SLEEPCNT	CMSIS/core_cm4.h	/^  __IOM uint32_t SLEEPCNT;               \/*!< Offset: 0x010 (R\/W)  Sleep Count Register *\/$/;"	m	struct:__anon45
SLIDER_CF_HORIZONTAL	emwin/emWin_header/SLIDER.h	74;"	d
SLIDER_CF_VERTICAL	emwin/emWin_header/SLIDER.h	75;"	d
SLIDER_FLAG_DRAW_FOCUS_RECT	emwin/emWin_header/SLIDER_Private.h	63;"	d
SLIDER_H	emwin/emWin_header/SLIDER.h	46;"	d
SLIDER_Handle	emwin/emWin_header/SLIDER.h	/^typedef WM_HMEM SLIDER_Handle;$/;"	t
SLIDER_ID	emwin/emWin_header/WIDGET.h	118;"	d
SLIDER_INIT_ID	emwin/emWin_header/SLIDER_Private.h	102;"	d
SLIDER_INIT_ID	emwin/emWin_header/SLIDER_Private.h	104;"	d
SLIDER_LOCK_H	emwin/emWin_header/SLIDER_Private.h	109;"	d
SLIDER_LOCK_H	emwin/emWin_header/SLIDER_Private.h	111;"	d
SLIDER_Obj	emwin/emWin_header/SLIDER_Private.h	/^} SLIDER_Obj;$/;"	t	typeref:struct:__anon378
SLIDER_PRIVATE_H	emwin/emWin_header/SLIDER_Private.h	46;"	d
SLIDER_PROPS	emwin/emWin_header/SLIDER_Private.h	/^} SLIDER_PROPS;$/;"	t	typeref:struct:__anon377
SLIDER_SKINFLEX_INFO	emwin/emWin_header/SLIDER.h	/^} SLIDER_SKINFLEX_INFO;$/;"	t	typeref:struct:__anon305
SLIDER_SKINFLEX_PI_PRESSED	emwin/emWin_header/SLIDER.h	81;"	d
SLIDER_SKINFLEX_PI_UNPRESSED	emwin/emWin_header/SLIDER.h	82;"	d
SLIDER_SKINFLEX_PROPS	emwin/emWin_header/SLIDER.h	/^} SLIDER_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon304
SLIDER_SKIN_FLEX	emwin/emWin_header/SLIDER.h	171;"	d
SLIDER_SKIN_PRIVATE	emwin/emWin_header/SLIDER_Private.h	/^} SLIDER_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon376
SLIDER_STATE_PRESSED	emwin/emWin_header/SLIDER.h	68;"	d
SLIDER_SUPPORT_TRANSPARENCY	emwin/emWin_header/SLIDER_Private.h	115;"	d
SLIPIF_THREAD_NAME	lwip/src/include/lwip/opt.h	1790;"	d
SLIPIF_THREAD_PRIO	lwip/src/include/lwip/opt.h	1808;"	d
SLIPIF_THREAD_STACKSIZE	lwip/src/include/lwip/opt.h	1799;"	d
SLIP_DEBUG	lwip/src/include/lwip/opt.h	3450;"	d
SLIP_END	lwip/src/netif/slipif.c	74;"	d	file:
SLIP_ESC	lwip/src/netif/slipif.c	75;"	d	file:
SLIP_ESC_END	lwip/src/netif/slipif.c	76;"	d	file:
SLIP_ESC_ESC	lwip/src/netif/slipif.c	77;"	d	file:
SLIP_MAX_SIZE	lwip/src/netif/slipif.c	81;"	d	file:
SLIP_RECV_ESCAPE	lwip/src/netif/slipif.c	/^  SLIP_RECV_ESCAPE$/;"	e	enum:slipif_recv_state	file:
SLIP_RECV_NORMAL	lwip/src/netif/slipif.c	/^  SLIP_RECV_NORMAL,$/;"	e	enum:slipif_recv_state	file:
SLIP_RX_FROM_ISR	lwip/src/include/netif/slipif.h	59;"	d
SLIP_RX_QUEUE	lwip/src/include/netif/slipif.h	67;"	d
SLIP_SIO_SPEED	lwip/src/netif/slipif.c	89;"	d	file:
SLIP_USE_RX_THREAD	lwip/src/include/netif/slipif.h	50;"	d
SLVADR	device/LPC54018.h	/^  __IO uint32_t SLVADR[4];                         \/**< Slave address register., array offset: 0x848, array step: 0x4 *\/$/;"	m	struct:__anon160
SLVCTL	device/LPC54018.h	/^  __IO uint32_t SLVCTL;                            \/**< Slave control register., offset: 0x840 *\/$/;"	m	struct:__anon160
SLVDAT	device/LPC54018.h	/^  __IO uint32_t SLVDAT;                            \/**< Combined Slave receiver and transmitter data register., offset: 0x844 *\/$/;"	m	struct:__anon160
SLVQUAL0	device/LPC54018.h	/^  __IO uint32_t SLVQUAL0;                          \/**< Slave Qualification for address 0., offset: 0x858 *\/$/;"	m	struct:__anon160
SMARTCARD0	device/LPC54018.h	10278;"	d
SMARTCARD0_BASE	device/LPC54018.h	10276;"	d
SMARTCARD0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void SMARTCARD0_IRQHandler(void)$/;"	f
SMARTCARD0_IRQn	device/LPC54018.h	/^  SMARTCARD0_IRQn              = 55,               \/**< Smart card 0 interrupt *\/$/;"	e	enum:IRQn
SMARTCARD1	device/LPC54018.h	10282;"	d
SMARTCARD1_BASE	device/LPC54018.h	10280;"	d
SMARTCARD1_IRQHandler	startup/startup_lpc54018.c	/^WEAK void SMARTCARD1_IRQHandler(void)$/;"	f
SMARTCARD1_IRQn	device/LPC54018.h	/^  SMARTCARD1_IRQn              = 56                \/**< Smart card 1 interrupt *\/$/;"	e	enum:IRQn
SMARTCARD_BASE_ADDRS	device/LPC54018.h	10284;"	d
SMARTCARD_BASE_PTRS	device/LPC54018.h	10286;"	d
SMARTCARD_CLOCKS	drivers/fsl_clock.h	267;"	d
SMARTCARD_DLL_DLLSB	device/LPC54018.h	10116;"	d
SMARTCARD_DLL_DLLSB_MASK	device/LPC54018.h	10114;"	d
SMARTCARD_DLL_DLLSB_SHIFT	device/LPC54018.h	10115;"	d
SMARTCARD_DLM_DLMSB	device/LPC54018.h	10137;"	d
SMARTCARD_DLM_DLMSB_MASK	device/LPC54018.h	10135;"	d
SMARTCARD_DLM_DLMSB_SHIFT	device/LPC54018.h	10136;"	d
SMARTCARD_FCR_DMAMODE	device/LPC54018.h	10166;"	d
SMARTCARD_FCR_DMAMODE_MASK	device/LPC54018.h	10164;"	d
SMARTCARD_FCR_DMAMODE_SHIFT	device/LPC54018.h	10165;"	d
SMARTCARD_FCR_FIFOEN	device/LPC54018.h	10157;"	d
SMARTCARD_FCR_FIFOEN_MASK	device/LPC54018.h	10155;"	d
SMARTCARD_FCR_FIFOEN_SHIFT	device/LPC54018.h	10156;"	d
SMARTCARD_FCR_RXFIFORES	device/LPC54018.h	10160;"	d
SMARTCARD_FCR_RXFIFORES_MASK	device/LPC54018.h	10158;"	d
SMARTCARD_FCR_RXFIFORES_SHIFT	device/LPC54018.h	10159;"	d
SMARTCARD_FCR_RXTRIGLVL	device/LPC54018.h	10169;"	d
SMARTCARD_FCR_RXTRIGLVL_MASK	device/LPC54018.h	10167;"	d
SMARTCARD_FCR_RXTRIGLVL_SHIFT	device/LPC54018.h	10168;"	d
SMARTCARD_FCR_TXFIFORES	device/LPC54018.h	10163;"	d
SMARTCARD_FCR_TXFIFORES_MASK	device/LPC54018.h	10161;"	d
SMARTCARD_FCR_TXFIFORES_SHIFT	device/LPC54018.h	10162;"	d
SMARTCARD_IER_RBRIE	device/LPC54018.h	10144;"	d
SMARTCARD_IER_RBRIE_MASK	device/LPC54018.h	10142;"	d
SMARTCARD_IER_RBRIE_SHIFT	device/LPC54018.h	10143;"	d
SMARTCARD_IER_RXIE	device/LPC54018.h	10150;"	d
SMARTCARD_IER_RXIE_MASK	device/LPC54018.h	10148;"	d
SMARTCARD_IER_RXIE_SHIFT	device/LPC54018.h	10149;"	d
SMARTCARD_IER_THREIE	device/LPC54018.h	10147;"	d
SMARTCARD_IER_THREIE_MASK	device/LPC54018.h	10145;"	d
SMARTCARD_IER_THREIE_SHIFT	device/LPC54018.h	10146;"	d
SMARTCARD_IIR_FIFOENABLE	device/LPC54018.h	10182;"	d
SMARTCARD_IIR_FIFOENABLE_MASK	device/LPC54018.h	10180;"	d
SMARTCARD_IIR_FIFOENABLE_SHIFT	device/LPC54018.h	10181;"	d
SMARTCARD_IIR_INTID	device/LPC54018.h	10179;"	d
SMARTCARD_IIR_INTID_MASK	device/LPC54018.h	10177;"	d
SMARTCARD_IIR_INTID_SHIFT	device/LPC54018.h	10178;"	d
SMARTCARD_IIR_INTSTATUS	device/LPC54018.h	10176;"	d
SMARTCARD_IIR_INTSTATUS_MASK	device/LPC54018.h	10174;"	d
SMARTCARD_IIR_INTSTATUS_SHIFT	device/LPC54018.h	10175;"	d
SMARTCARD_IRQS	device/LPC54018.h	10288;"	d
SMARTCARD_LCR_DLAB	device/LPC54018.h	10201;"	d
SMARTCARD_LCR_DLAB_MASK	device/LPC54018.h	10199;"	d
SMARTCARD_LCR_DLAB_SHIFT	device/LPC54018.h	10200;"	d
SMARTCARD_LCR_PE	device/LPC54018.h	10195;"	d
SMARTCARD_LCR_PE_MASK	device/LPC54018.h	10193;"	d
SMARTCARD_LCR_PE_SHIFT	device/LPC54018.h	10194;"	d
SMARTCARD_LCR_PS	device/LPC54018.h	10198;"	d
SMARTCARD_LCR_PS_MASK	device/LPC54018.h	10196;"	d
SMARTCARD_LCR_PS_SHIFT	device/LPC54018.h	10197;"	d
SMARTCARD_LCR_SBS	device/LPC54018.h	10192;"	d
SMARTCARD_LCR_SBS_MASK	device/LPC54018.h	10190;"	d
SMARTCARD_LCR_SBS_SHIFT	device/LPC54018.h	10191;"	d
SMARTCARD_LCR_WLS	device/LPC54018.h	10189;"	d
SMARTCARD_LCR_WLS_MASK	device/LPC54018.h	10187;"	d
SMARTCARD_LCR_WLS_SHIFT	device/LPC54018.h	10188;"	d
SMARTCARD_LSR_FE	device/LPC54018.h	10217;"	d
SMARTCARD_LSR_FE_MASK	device/LPC54018.h	10215;"	d
SMARTCARD_LSR_FE_SHIFT	device/LPC54018.h	10216;"	d
SMARTCARD_LSR_OE	device/LPC54018.h	10211;"	d
SMARTCARD_LSR_OE_MASK	device/LPC54018.h	10209;"	d
SMARTCARD_LSR_OE_SHIFT	device/LPC54018.h	10210;"	d
SMARTCARD_LSR_PE	device/LPC54018.h	10214;"	d
SMARTCARD_LSR_PE_MASK	device/LPC54018.h	10212;"	d
SMARTCARD_LSR_PE_SHIFT	device/LPC54018.h	10213;"	d
SMARTCARD_LSR_RDR	device/LPC54018.h	10208;"	d
SMARTCARD_LSR_RDR_MASK	device/LPC54018.h	10206;"	d
SMARTCARD_LSR_RDR_SHIFT	device/LPC54018.h	10207;"	d
SMARTCARD_LSR_RXFE	device/LPC54018.h	10226;"	d
SMARTCARD_LSR_RXFE_MASK	device/LPC54018.h	10224;"	d
SMARTCARD_LSR_RXFE_SHIFT	device/LPC54018.h	10225;"	d
SMARTCARD_LSR_TEMT	device/LPC54018.h	10223;"	d
SMARTCARD_LSR_TEMT_MASK	device/LPC54018.h	10221;"	d
SMARTCARD_LSR_TEMT_SHIFT	device/LPC54018.h	10222;"	d
SMARTCARD_LSR_THRE	device/LPC54018.h	10220;"	d
SMARTCARD_LSR_THRE_MASK	device/LPC54018.h	10218;"	d
SMARTCARD_LSR_THRE_SHIFT	device/LPC54018.h	10219;"	d
SMARTCARD_OSR_FDINT	device/LPC54018.h	10246;"	d
SMARTCARD_OSR_FDINT_MASK	device/LPC54018.h	10244;"	d
SMARTCARD_OSR_FDINT_SHIFT	device/LPC54018.h	10245;"	d
SMARTCARD_OSR_OSFRAC	device/LPC54018.h	10240;"	d
SMARTCARD_OSR_OSFRAC_MASK	device/LPC54018.h	10238;"	d
SMARTCARD_OSR_OSFRAC_SHIFT	device/LPC54018.h	10239;"	d
SMARTCARD_OSR_OSINT	device/LPC54018.h	10243;"	d
SMARTCARD_OSR_OSINT_MASK	device/LPC54018.h	10241;"	d
SMARTCARD_OSR_OSINT_SHIFT	device/LPC54018.h	10242;"	d
SMARTCARD_RBR_RBR	device/LPC54018.h	10123;"	d
SMARTCARD_RBR_RBR_MASK	device/LPC54018.h	10121;"	d
SMARTCARD_RBR_RBR_SHIFT	device/LPC54018.h	10122;"	d
SMARTCARD_SCICTRL_GUARDTIME	device/LPC54018.h	10265;"	d
SMARTCARD_SCICTRL_GUARDTIME_MASK	device/LPC54018.h	10263;"	d
SMARTCARD_SCICTRL_GUARDTIME_SHIFT	device/LPC54018.h	10264;"	d
SMARTCARD_SCICTRL_NACKDIS	device/LPC54018.h	10256;"	d
SMARTCARD_SCICTRL_NACKDIS_MASK	device/LPC54018.h	10254;"	d
SMARTCARD_SCICTRL_NACKDIS_SHIFT	device/LPC54018.h	10255;"	d
SMARTCARD_SCICTRL_PROTSEL	device/LPC54018.h	10259;"	d
SMARTCARD_SCICTRL_PROTSEL_MASK	device/LPC54018.h	10257;"	d
SMARTCARD_SCICTRL_PROTSEL_SHIFT	device/LPC54018.h	10258;"	d
SMARTCARD_SCICTRL_SCIEN	device/LPC54018.h	10253;"	d
SMARTCARD_SCICTRL_SCIEN_MASK	device/LPC54018.h	10251;"	d
SMARTCARD_SCICTRL_SCIEN_SHIFT	device/LPC54018.h	10252;"	d
SMARTCARD_SCICTRL_TXRETRY	device/LPC54018.h	10262;"	d
SMARTCARD_SCICTRL_TXRETRY_MASK	device/LPC54018.h	10260;"	d
SMARTCARD_SCICTRL_TXRETRY_SHIFT	device/LPC54018.h	10261;"	d
SMARTCARD_SCR_PAD	device/LPC54018.h	10233;"	d
SMARTCARD_SCR_PAD_MASK	device/LPC54018.h	10231;"	d
SMARTCARD_SCR_PAD_SHIFT	device/LPC54018.h	10232;"	d
SMARTCARD_THR_THR	device/LPC54018.h	10130;"	d
SMARTCARD_THR_THR_MASK	device/LPC54018.h	10128;"	d
SMARTCARD_THR_THR_SHIFT	device/LPC54018.h	10129;"	d
SMARTCARD_Type	device/LPC54018.h	/^} SMARTCARD_Type;$/;"	t	typeref:struct:__anon179
SMEMCPY	lwip/src/include/lwip/opt.h	145;"	d
SMTPFILES	lwip/src/Filelists.mk	/^SMTPFILES=$(LWIPDIR)\/apps\/smtp\/smtp.c$/;"	m
SND_WND_SCALE	lwip/src/include/lwip/tcp.h	138;"	d
SND_WND_SCALE	lwip/src/include/lwip/tcp.h	143;"	d
SNMPFILES	lwip/src/Filelists.mk	/^SNMPFILES=$(LWIPDIR)\/apps\/snmp\/snmp_asn1.c \\$/;"	m
SNTPFILES	lwip/src/Filelists.mk	/^SNTPFILES=$(LWIPDIR)\/apps\/sntp\/sntp.c$/;"	m
SOCKADDR4_TO_IP4ADDR_PORT	lwip/src/api/sockets.c	95;"	d	file:
SOCKADDR6_TO_IP6ADDR_PORT	lwip/src/api/sockets.c	108;"	d	file:
SOCKADDR_TO_IPADDR_PORT	lwip/src/api/sockets.c	132;"	d	file:
SOCKADDR_TO_IPADDR_PORT	lwip/src/api/sockets.c	141;"	d	file:
SOCKADDR_TO_IPADDR_PORT	lwip/src/api/sockets.c	150;"	d	file:
SOCKETS_DEBUG	lwip/src/include/lwip/opt.h	3295;"	d
SOCK_ADDR_TYPE_MATCH	lwip/src/api/sockets.c	123;"	d	file:
SOCK_ADDR_TYPE_MATCH	lwip/src/api/sockets.c	138;"	d	file:
SOCK_ADDR_TYPE_MATCH	lwip/src/api/sockets.c	147;"	d	file:
SOCK_ADDR_TYPE_MATCH_OR_UNSPEC	lwip/src/api/sockets.c	157;"	d	file:
SOCK_DGRAM	lwip/src/include/lwip/sockets.h	189;"	d
SOCK_RAW	lwip/src/include/lwip/sockets.h	190;"	d
SOCK_STREAM	lwip/src/include/lwip/sockets.h	188;"	d
SOF_BROADCAST	lwip/src/include/lwip/ip.h	101;"	d
SOF_INHERITED	lwip/src/include/lwip/ip.h	104;"	d
SOF_KEEPALIVE	lwip/src/include/lwip/ip.h	100;"	d
SOF_REUSEADDR	lwip/src/include/lwip/ip.h	99;"	d
SOL_SOCKET	lwip/src/include/lwip/sockets.h	234;"	d
SORT_TYPE	emwin/emWin_header/LISTVIEW_Private.h	63;"	d
SO_ACCEPTCONN	lwip/src/include/lwip/sockets.h	204;"	d
SO_BINDTODEVICE	lwip/src/include/lwip/sockets.h	221;"	d
SO_BROADCAST	lwip/src/include/lwip/sockets.h	197;"	d
SO_CONTIMEO	lwip/src/include/lwip/sockets.h	219;"	d
SO_DEBUG	lwip/src/include/lwip/sockets.h	203;"	d
SO_DONTLINGER	lwip/src/include/lwip/sockets.h	208;"	d
SO_DONTROUTE	lwip/src/include/lwip/sockets.h	205;"	d
SO_ERROR	lwip/src/include/lwip/sockets.h	217;"	d
SO_KEEPALIVE	lwip/src/include/lwip/sockets.h	196;"	d
SO_LINGER	lwip/src/include/lwip/sockets.h	207;"	d
SO_NO_CHECK	lwip/src/include/lwip/sockets.h	220;"	d
SO_OOBINLINE	lwip/src/include/lwip/sockets.h	209;"	d
SO_RCVBUF	lwip/src/include/lwip/sockets.h	212;"	d
SO_RCVLOWAT	lwip/src/include/lwip/sockets.h	214;"	d
SO_RCVTIMEO	lwip/src/include/lwip/sockets.h	216;"	d
SO_REUSE	lwip/src/include/lwip/opt.h	2040;"	d
SO_REUSEADDR	lwip/src/include/lwip/sockets.h	195;"	d
SO_REUSEPORT	lwip/src/include/lwip/sockets.h	210;"	d
SO_REUSE_RXTOALL	lwip/src/include/lwip/opt.h	2049;"	d
SO_SNDBUF	lwip/src/include/lwip/sockets.h	211;"	d
SO_SNDLOWAT	lwip/src/include/lwip/sockets.h	213;"	d
SO_SNDTIMEO	lwip/src/include/lwip/sockets.h	215;"	d
SO_TYPE	lwip/src/include/lwip/sockets.h	218;"	d
SO_USELOOPBACK	lwip/src/include/lwip/sockets.h	206;"	d
SPACE	source/common.c	18;"	d	file:
SPAGE_MAX_NUM_DUMMY_READS	emwin/emWin_header/GUIDRV_SPage_Private.h	61;"	d
SPECIAL	source/common.c	20;"	d	file:
SPECIALS_MASK	lwip/src/include/netif/ppp/vj.h	101;"	d
SPECIAL_D	lwip/src/include/netif/ppp/vj.h	100;"	d
SPECIAL_I	lwip/src/include/netif/ppp/vj.h	99;"	d
SPI0	device/LPC54018.h	10844;"	d
SPI0_BASE	device/LPC54018.h	10842;"	d
SPI0_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI0_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI0_DMADriverState = {$/;"	v	file:
SPI0_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI0_DMAGetCount(void)$/;"	f	file:
SPI0_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI0_DMAGetStatus(void)$/;"	f	file:
SPI0_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI0_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI0_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI0_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI0_DMAResource = {RTE_SPI0_DMA_TX_DMA_BASE, RTE_SPI0_DMA_TX_CH, RTE_SPI0_DMA_RX_DMA_BASE,$/;"	v
SPI0_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI0_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI0_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_DMAUninitialize(void)$/;"	f	file:
SPI0_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI0_DmaHandle;$/;"	v	file:
SPI0_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI0_DmaRxDataHandle;$/;"	v	file:
SPI0_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI0_DmaTxDataHandle;$/;"	v	file:
SPI0_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI0_Handle;$/;"	v	file:
SPI0_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI0_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI0_InterruptDriverState = {$/;"	v	file:
SPI0_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI0_InterruptGetCount(void)$/;"	f	file:
SPI0_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI0_InterruptGetStatus(void)$/;"	f	file:
SPI0_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI0_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI0_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI0_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI0_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI0_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI0_InterruptUninitialize(void)$/;"	f	file:
SPI0_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI0_Resource = {SPI0, 0, SPI0_GetFreq};$/;"	v
SPI1	device/LPC54018.h	10848;"	d
SPI10	device/LPC54018.h	10884;"	d
SPI10_BASE	device/LPC54018.h	10882;"	d
SPI1_BASE	device/LPC54018.h	10846;"	d
SPI1_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI1_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI1_DMADriverState = {$/;"	v	file:
SPI1_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI1_DMAGetCount(void)$/;"	f	file:
SPI1_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI1_DMAGetStatus(void)$/;"	f	file:
SPI1_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI1_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI1_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI1_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI1_DMAResource = {RTE_SPI1_DMA_TX_DMA_BASE, RTE_SPI1_DMA_TX_CH, RTE_SPI1_DMA_RX_DMA_BASE,$/;"	v
SPI1_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI1_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI1_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_DMAUninitialize(void)$/;"	f	file:
SPI1_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI1_DmaHandle;$/;"	v	file:
SPI1_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI1_DmaRxDataHandle;$/;"	v	file:
SPI1_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI1_DmaTxDataHandle;$/;"	v	file:
SPI1_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI1_Handle;$/;"	v	file:
SPI1_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI1_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI1_InterruptDriverState = {$/;"	v	file:
SPI1_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI1_InterruptGetCount(void)$/;"	f	file:
SPI1_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI1_InterruptGetStatus(void)$/;"	f	file:
SPI1_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI1_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI1_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI1_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI1_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI1_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI1_InterruptUninitialize(void)$/;"	f	file:
SPI1_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI1_Resource = {SPI1, 1, SPI1_GetFreq};$/;"	v
SPI2	device/LPC54018.h	10852;"	d
SPI2_BASE	device/LPC54018.h	10850;"	d
SPI2_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI2_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI2_DMADriverState = {$/;"	v	file:
SPI2_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI2_DMAGetCount(void)$/;"	f	file:
SPI2_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI2_DMAGetStatus(void)$/;"	f	file:
SPI2_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI2_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI2_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI2_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI2_DMAResource = {RTE_SPI2_DMA_TX_DMA_BASE, RTE_SPI2_DMA_TX_CH, RTE_SPI2_DMA_RX_DMA_BASE,$/;"	v
SPI2_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI2_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI2_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_DMAUninitialize(void)$/;"	f	file:
SPI2_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI2_DmaHandle;$/;"	v	file:
SPI2_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI2_DmaRxDataHandle;$/;"	v	file:
SPI2_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI2_DmaTxDataHandle;$/;"	v	file:
SPI2_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI2_Handle;$/;"	v	file:
SPI2_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI2_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI2_InterruptDriverState = {$/;"	v	file:
SPI2_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI2_InterruptGetCount(void)$/;"	f	file:
SPI2_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI2_InterruptGetStatus(void)$/;"	f	file:
SPI2_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI2_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI2_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI2_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI2_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI2_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI2_InterruptUninitialize(void)$/;"	f	file:
SPI2_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI2_Resource = {SPI2, 2, SPI2_GetFreq};$/;"	v
SPI3	device/LPC54018.h	10856;"	d
SPI3_BASE	device/LPC54018.h	10854;"	d
SPI3_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI3_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI3_DMADriverState = {$/;"	v	file:
SPI3_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI3_DMAGetCount(void)$/;"	f	file:
SPI3_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI3_DMAGetStatus(void)$/;"	f	file:
SPI3_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI3_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI3_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI3_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI3_DMAResource = {RTE_SPI3_DMA_TX_DMA_BASE, RTE_SPI3_DMA_TX_CH, RTE_SPI3_DMA_RX_DMA_BASE,$/;"	v
SPI3_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI3_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI3_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_DMAUninitialize(void)$/;"	f	file:
SPI3_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI3_DmaHandle;$/;"	v	file:
SPI3_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI3_DmaRxDataHandle;$/;"	v	file:
SPI3_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI3_DmaTxDataHandle;$/;"	v	file:
SPI3_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI3_Handle;$/;"	v	file:
SPI3_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI3_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI3_InterruptDriverState = {$/;"	v	file:
SPI3_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI3_InterruptGetCount(void)$/;"	f	file:
SPI3_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI3_InterruptGetStatus(void)$/;"	f	file:
SPI3_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI3_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI3_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI3_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI3_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI3_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI3_InterruptUninitialize(void)$/;"	f	file:
SPI3_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI3_Resource = {SPI3, 3, SPI3_GetFreq};$/;"	v
SPI4	device/LPC54018.h	10860;"	d
SPI4_BASE	device/LPC54018.h	10858;"	d
SPI4_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI4_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI4_DMADriverState = {$/;"	v	file:
SPI4_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI4_DMAGetCount(void)$/;"	f	file:
SPI4_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI4_DMAGetStatus(void)$/;"	f	file:
SPI4_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI4_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI4_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI4_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI4_DMAResource = {RTE_SPI4_DMA_TX_DMA_BASE, RTE_SPI4_DMA_TX_CH, RTE_SPI4_DMA_RX_DMA_BASE,$/;"	v
SPI4_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI4_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI4_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_DMAUninitialize(void)$/;"	f	file:
SPI4_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI4_DmaHandle;$/;"	v	file:
SPI4_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI4_DmaRxDataHandle;$/;"	v	file:
SPI4_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI4_DmaTxDataHandle;$/;"	v	file:
SPI4_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI4_Handle;$/;"	v	file:
SPI4_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI4_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI4_InterruptDriverState = {$/;"	v	file:
SPI4_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI4_InterruptGetCount(void)$/;"	f	file:
SPI4_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI4_InterruptGetStatus(void)$/;"	f	file:
SPI4_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI4_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI4_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI4_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI4_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI4_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI4_InterruptUninitialize(void)$/;"	f	file:
SPI4_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI4_Resource = {SPI4, 4, SPI4_GetFreq};$/;"	v
SPI5	device/LPC54018.h	10864;"	d
SPI5_BASE	device/LPC54018.h	10862;"	d
SPI5_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI5_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI5_DMADriverState = {$/;"	v	file:
SPI5_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI5_DMAGetCount(void)$/;"	f	file:
SPI5_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI5_DMAGetStatus(void)$/;"	f	file:
SPI5_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI5_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI5_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI5_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI5_DMAResource = {RTE_SPI5_DMA_TX_DMA_BASE, RTE_SPI5_DMA_TX_CH, RTE_SPI5_DMA_RX_DMA_BASE,$/;"	v
SPI5_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI5_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI5_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_DMAUninitialize(void)$/;"	f	file:
SPI5_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI5_DmaHandle;$/;"	v	file:
SPI5_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI5_DmaRxDataHandle;$/;"	v	file:
SPI5_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI5_DmaTxDataHandle;$/;"	v	file:
SPI5_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI5_Handle;$/;"	v	file:
SPI5_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI5_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI5_InterruptDriverState = {$/;"	v	file:
SPI5_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI5_InterruptGetCount(void)$/;"	f	file:
SPI5_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI5_InterruptGetStatus(void)$/;"	f	file:
SPI5_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI5_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI5_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI5_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI5_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI5_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI5_InterruptUninitialize(void)$/;"	f	file:
SPI5_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI5_Resource = {SPI5, 5, SPI5_GetFreq};$/;"	v
SPI6	device/LPC54018.h	10868;"	d
SPI6_BASE	device/LPC54018.h	10866;"	d
SPI6_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI6_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI6_DMADriverState = {$/;"	v	file:
SPI6_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI6_DMAGetCount(void)$/;"	f	file:
SPI6_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI6_DMAGetStatus(void)$/;"	f	file:
SPI6_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI6_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI6_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI6_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI6_DMAResource = {RTE_SPI6_DMA_TX_DMA_BASE, RTE_SPI6_DMA_TX_CH, RTE_SPI6_DMA_RX_DMA_BASE,$/;"	v
SPI6_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI6_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI6_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_DMAUninitialize(void)$/;"	f	file:
SPI6_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI6_DmaHandle;$/;"	v	file:
SPI6_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI6_DmaRxDataHandle;$/;"	v	file:
SPI6_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI6_DmaTxDataHandle;$/;"	v	file:
SPI6_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI6_Handle;$/;"	v	file:
SPI6_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI6_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI6_InterruptDriverState = {$/;"	v	file:
SPI6_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI6_InterruptGetCount(void)$/;"	f	file:
SPI6_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI6_InterruptGetStatus(void)$/;"	f	file:
SPI6_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI6_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI6_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI6_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI6_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI6_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI6_InterruptUninitialize(void)$/;"	f	file:
SPI6_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI6_Resource = {SPI6, 6, SPI6_GetFreq};$/;"	v
SPI7	device/LPC54018.h	10872;"	d
SPI7_BASE	device/LPC54018.h	10870;"	d
SPI7_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI7_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI7_DMADriverState = {$/;"	v	file:
SPI7_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI7_DMAGetCount(void)$/;"	f	file:
SPI7_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI7_DMAGetStatus(void)$/;"	f	file:
SPI7_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI7_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI7_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI7_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI7_DMAResource = {RTE_SPI7_DMA_TX_DMA_BASE, RTE_SPI7_DMA_TX_CH, RTE_SPI7_DMA_RX_DMA_BASE,$/;"	v
SPI7_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI7_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI7_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_DMAUninitialize(void)$/;"	f	file:
SPI7_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI7_DmaHandle;$/;"	v	file:
SPI7_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI7_DmaRxDataHandle;$/;"	v	file:
SPI7_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI7_DmaTxDataHandle;$/;"	v	file:
SPI7_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI7_Handle;$/;"	v	file:
SPI7_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI7_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI7_InterruptDriverState = {$/;"	v	file:
SPI7_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI7_InterruptGetCount(void)$/;"	f	file:
SPI7_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI7_InterruptGetStatus(void)$/;"	f	file:
SPI7_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI7_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI7_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI7_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI7_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI7_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI7_InterruptUninitialize(void)$/;"	f	file:
SPI7_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI7_Resource = {SPI7, 7, SPI7_GetFreq};$/;"	v
SPI8	device/LPC54018.h	10876;"	d
SPI8_BASE	device/LPC54018.h	10874;"	d
SPI8_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI8_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI8_DMADriverState = {$/;"	v	file:
SPI8_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI8_DMAGetCount(void)$/;"	f	file:
SPI8_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI8_DMAGetStatus(void)$/;"	f	file:
SPI8_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI8_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI8_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI8_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI8_DMAResource = {RTE_SPI8_DMA_TX_DMA_BASE, RTE_SPI8_DMA_TX_CH, RTE_SPI8_DMA_RX_DMA_BASE,$/;"	v
SPI8_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI8_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI8_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_DMAUninitialize(void)$/;"	f	file:
SPI8_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI8_DmaHandle;$/;"	v	file:
SPI8_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI8_DmaRxDataHandle;$/;"	v	file:
SPI8_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI8_DmaTxDataHandle;$/;"	v	file:
SPI8_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI8_Handle;$/;"	v	file:
SPI8_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI8_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI8_InterruptDriverState = {$/;"	v	file:
SPI8_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI8_InterruptGetCount(void)$/;"	f	file:
SPI8_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI8_InterruptGetStatus(void)$/;"	f	file:
SPI8_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI8_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI8_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI8_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI8_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI8_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI8_InterruptUninitialize(void)$/;"	f	file:
SPI8_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI8_Resource = {SPI8, 8, SPI8_GetFreq};$/;"	v
SPI9	device/LPC54018.h	10880;"	d
SPI9_BASE	device/LPC54018.h	10878;"	d
SPI9_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_DMAControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI9_DMADriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_driver_state_t SPI9_DMADriverState = {$/;"	v	file:
SPI9_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI9_DMAGetCount(void)$/;"	f	file:
SPI9_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI9_DMAGetStatus(void)$/;"	f	file:
SPI9_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_DMAInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI9_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_DMAPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI9_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_DMAReceive(void *data, uint32_t num)$/;"	f	file:
SPI9_DMAResource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_dma_resource_t SPI9_DMAResource = {RTE_SPI9_DMA_TX_DMA_BASE, RTE_SPI9_DMA_TX_CH, RTE_SPI9_DMA_RX_DMA_BASE,$/;"	v
SPI9_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_DMASend(const void *data, uint32_t num)$/;"	f	file:
SPI9_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_DMATransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI9_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_DMAUninitialize(void)$/;"	f	file:
SPI9_DeinitPins	board/pin_mux.c	/^void SPI9_DeinitPins(void)$/;"	f
SPI9_DmaHandle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_dma_handle_t SPI9_DmaHandle;$/;"	v	file:
SPI9_DmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI9_DmaRxDataHandle;$/;"	v	file:
SPI9_DmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^static dma_handle_t SPI9_DmaTxDataHandle;$/;"	v	file:
SPI9_Handle	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_handle_t SPI9_Handle;$/;"	v	file:
SPI9_InitPins	board/pin_mux.c	/^void SPI9_InitPins(void)$/;"	f
SPI9_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_InterruptControl(uint32_t control, uint32_t arg)$/;"	f	file:
SPI9_InterruptDriverState	drivers/fsl_spi_cmsis.c	/^static cmsis_spi_interrupt_driver_state_t SPI9_InterruptDriverState = {$/;"	v	file:
SPI9_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI9_InterruptGetCount(void)$/;"	f	file:
SPI9_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_STATUS SPI9_InterruptGetStatus(void)$/;"	f	file:
SPI9_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event)$/;"	f	file:
SPI9_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_InterruptPowerControl(ARM_POWER_STATE state)$/;"	f	file:
SPI9_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_InterruptReceive(void *data, uint32_t num)$/;"	f	file:
SPI9_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_InterruptSend(const void *data, uint32_t num)$/;"	f	file:
SPI9_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_InterruptTransfer(const void *data_out, void *data_in, uint32_t num)$/;"	f	file:
SPI9_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI9_InterruptUninitialize(void)$/;"	f	file:
SPI9_Resource	drivers/fsl_spi_cmsis.c	/^cmsis_spi_resource_t SPI9_Resource = {SPI9, 9, SPI9_GetFreq};$/;"	v
SPIFI0	device/LPC54018.h	11127;"	d
SPIFI0_BASE	device/LPC54018.h	11125;"	d
SPIFI0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void SPIFI0_IRQHandler(void)$/;"	f
SPIFI0_IRQn	device/LPC54018.h	/^  SPIFI0_IRQn                  = 39,               \/**< SPI flash interface *\/$/;"	e	enum:IRQn
SPIFICLKDIV	device/LPC54018.h	/^  __IO uint32_t SPIFICLKDIV;                       \/**< SPIFI clock divider, offset: 0x390 *\/$/;"	m	struct:__anon185
SPIFICLKSEL	device/LPC54018.h	/^  __IO uint32_t SPIFICLKSEL;                       \/**< SPIFI clock source select, offset: 0x2A0 *\/$/;"	m	struct:__anon185
SPIFI_ADDR_ADDRESS	device/LPC54018.h	11039;"	d
SPIFI_ADDR_ADDRESS_MASK	device/LPC54018.h	11037;"	d
SPIFI_ADDR_ADDRESS_SHIFT	device/LPC54018.h	11038;"	d
SPIFI_BASE_ADDRS	device/LPC54018.h	11129;"	d
SPIFI_BASE_PTRS	device/LPC54018.h	11131;"	d
SPIFI_CLIMIT_CLIMIT	device/LPC54018.h	11053;"	d
SPIFI_CLIMIT_CLIMIT_MASK	device/LPC54018.h	11051;"	d
SPIFI_CLIMIT_CLIMIT_SHIFT	device/LPC54018.h	11052;"	d
SPIFI_CLOCKS	drivers/fsl_clock.h	91;"	d
SPIFI_CMD_DATALEN	device/LPC54018.h	10994;"	d
SPIFI_CMD_DATALEN_MASK	device/LPC54018.h	10992;"	d
SPIFI_CMD_DATALEN_SHIFT	device/LPC54018.h	10993;"	d
SPIFI_CMD_DOUT	device/LPC54018.h	11004;"	d
SPIFI_CMD_DOUT_MASK	device/LPC54018.h	10998;"	d
SPIFI_CMD_DOUT_SHIFT	device/LPC54018.h	10999;"	d
SPIFI_CMD_FIELDFORM	device/LPC54018.h	11016;"	d
SPIFI_CMD_FIELDFORM_MASK	device/LPC54018.h	11008;"	d
SPIFI_CMD_FIELDFORM_SHIFT	device/LPC54018.h	11009;"	d
SPIFI_CMD_FRAMEFORM	device/LPC54018.h	11029;"	d
SPIFI_CMD_FRAMEFORM_MASK	device/LPC54018.h	11017;"	d
SPIFI_CMD_FRAMEFORM_SHIFT	device/LPC54018.h	11018;"	d
SPIFI_CMD_INTLEN	device/LPC54018.h	11007;"	d
SPIFI_CMD_INTLEN_MASK	device/LPC54018.h	11005;"	d
SPIFI_CMD_INTLEN_SHIFT	device/LPC54018.h	11006;"	d
SPIFI_CMD_OPCODE	device/LPC54018.h	11032;"	d
SPIFI_CMD_OPCODE_MASK	device/LPC54018.h	11030;"	d
SPIFI_CMD_OPCODE_SHIFT	device/LPC54018.h	11031;"	d
SPIFI_CMD_POLL	device/LPC54018.h	10997;"	d
SPIFI_CMD_POLL_MASK	device/LPC54018.h	10995;"	d
SPIFI_CMD_POLL_SHIFT	device/LPC54018.h	10996;"	d
SPIFI_CTRL_CSHIGH	device/LPC54018.h	10934;"	d
SPIFI_CTRL_CSHIGH_MASK	device/LPC54018.h	10932;"	d
SPIFI_CTRL_CSHIGH_SHIFT	device/LPC54018.h	10933;"	d
SPIFI_CTRL_DMAEN	device/LPC54018.h	10987;"	d
SPIFI_CTRL_DMAEN_MASK	device/LPC54018.h	10985;"	d
SPIFI_CTRL_DMAEN_SHIFT	device/LPC54018.h	10986;"	d
SPIFI_CTRL_DUAL	device/LPC54018.h	10966;"	d
SPIFI_CTRL_DUAL_MASK	device/LPC54018.h	10960;"	d
SPIFI_CTRL_DUAL_SHIFT	device/LPC54018.h	10961;"	d
SPIFI_CTRL_D_PRFTCH_DIS	device/LPC54018.h	10937;"	d
SPIFI_CTRL_D_PRFTCH_DIS_MASK	device/LPC54018.h	10935;"	d
SPIFI_CTRL_D_PRFTCH_DIS_SHIFT	device/LPC54018.h	10936;"	d
SPIFI_CTRL_FBCLK	device/LPC54018.h	10984;"	d
SPIFI_CTRL_FBCLK_MASK	device/LPC54018.h	10976;"	d
SPIFI_CTRL_FBCLK_SHIFT	device/LPC54018.h	10977;"	d
SPIFI_CTRL_INTEN	device/LPC54018.h	10940;"	d
SPIFI_CTRL_INTEN_MASK	device/LPC54018.h	10938;"	d
SPIFI_CTRL_INTEN_SHIFT	device/LPC54018.h	10939;"	d
SPIFI_CTRL_MODE3	device/LPC54018.h	10952;"	d
SPIFI_CTRL_MODE3_MASK	device/LPC54018.h	10941;"	d
SPIFI_CTRL_MODE3_SHIFT	device/LPC54018.h	10942;"	d
SPIFI_CTRL_PRFTCH_DIS	device/LPC54018.h	10959;"	d
SPIFI_CTRL_PRFTCH_DIS_MASK	device/LPC54018.h	10953;"	d
SPIFI_CTRL_PRFTCH_DIS_SHIFT	device/LPC54018.h	10954;"	d
SPIFI_CTRL_RFCLK	device/LPC54018.h	10975;"	d
SPIFI_CTRL_RFCLK_MASK	device/LPC54018.h	10967;"	d
SPIFI_CTRL_RFCLK_SHIFT	device/LPC54018.h	10968;"	d
SPIFI_CTRL_TIMEOUT	device/LPC54018.h	10931;"	d
SPIFI_CTRL_TIMEOUT_MASK	device/LPC54018.h	10929;"	d
SPIFI_CTRL_TIMEOUT_SHIFT	device/LPC54018.h	10930;"	d
SPIFI_DATA_DATA	device/LPC54018.h	11060;"	d
SPIFI_DATA_DATA_MASK	device/LPC54018.h	11058;"	d
SPIFI_DATA_DATA_SHIFT	device/LPC54018.h	11059;"	d
SPIFI_IDATA_IDATA	device/LPC54018.h	11046;"	d
SPIFI_IDATA_IDATA_MASK	device/LPC54018.h	11044;"	d
SPIFI_IDATA_IDATA_SHIFT	device/LPC54018.h	11045;"	d
SPIFI_IRQS	device/LPC54018.h	11133;"	d
SPIFI_MCMD_DOUT	device/LPC54018.h	11070;"	d
SPIFI_MCMD_DOUT_MASK	device/LPC54018.h	11068;"	d
SPIFI_MCMD_DOUT_SHIFT	device/LPC54018.h	11069;"	d
SPIFI_MCMD_FIELDFORM	device/LPC54018.h	11082;"	d
SPIFI_MCMD_FIELDFORM_MASK	device/LPC54018.h	11074;"	d
SPIFI_MCMD_FIELDFORM_SHIFT	device/LPC54018.h	11075;"	d
SPIFI_MCMD_FRAMEFORM	device/LPC54018.h	11095;"	d
SPIFI_MCMD_FRAMEFORM_MASK	device/LPC54018.h	11083;"	d
SPIFI_MCMD_FRAMEFORM_SHIFT	device/LPC54018.h	11084;"	d
SPIFI_MCMD_INTLEN	device/LPC54018.h	11073;"	d
SPIFI_MCMD_INTLEN_MASK	device/LPC54018.h	11071;"	d
SPIFI_MCMD_INTLEN_SHIFT	device/LPC54018.h	11072;"	d
SPIFI_MCMD_OPCODE	device/LPC54018.h	11098;"	d
SPIFI_MCMD_OPCODE_MASK	device/LPC54018.h	11096;"	d
SPIFI_MCMD_OPCODE_SHIFT	device/LPC54018.h	11097;"	d
SPIFI_MCMD_POLL	device/LPC54018.h	11067;"	d
SPIFI_MCMD_POLL_MASK	device/LPC54018.h	11065;"	d
SPIFI_MCMD_POLL_SHIFT	device/LPC54018.h	11066;"	d
SPIFI_RSTS	drivers/fsl_reset.h	195;"	d
SPIFI_STAT_CMD	device/LPC54018.h	11108;"	d
SPIFI_STAT_CMD_MASK	device/LPC54018.h	11106;"	d
SPIFI_STAT_CMD_SHIFT	device/LPC54018.h	11107;"	d
SPIFI_STAT_INTRQ	device/LPC54018.h	11114;"	d
SPIFI_STAT_INTRQ_MASK	device/LPC54018.h	11112;"	d
SPIFI_STAT_INTRQ_SHIFT	device/LPC54018.h	11113;"	d
SPIFI_STAT_MCINIT	device/LPC54018.h	11105;"	d
SPIFI_STAT_MCINIT_MASK	device/LPC54018.h	11103;"	d
SPIFI_STAT_MCINIT_SHIFT	device/LPC54018.h	11104;"	d
SPIFI_STAT_RESET	device/LPC54018.h	11111;"	d
SPIFI_STAT_RESET_MASK	device/LPC54018.h	11109;"	d
SPIFI_STAT_RESET_SHIFT	device/LPC54018.h	11110;"	d
SPIFI_Type	device/LPC54018.h	/^} SPIFI_Type;$/;"	t	typeref:struct:__anon184
SPINBOX_BUTTON_0	emwin/emWin_header/SPINBOX_Private.h	119;"	d
SPINBOX_BUTTON_1	emwin/emWin_header/SPINBOX_Private.h	120;"	d
SPINBOX_BUTTON_NONE	emwin/emWin_header/SPINBOX_Private.h	118;"	d
SPINBOX_CI_DISABLED	emwin/emWin_header/SPINBOX.h	88;"	d
SPINBOX_CI_ENABLED	emwin/emWin_header/SPINBOX.h	89;"	d
SPINBOX_CI_PRESSED	emwin/emWin_header/SPINBOX.h	90;"	d
SPINBOX_EDGE_CENTER	emwin/emWin_header/SPINBOX.h	75;"	d
SPINBOX_EDGE_LEFT	emwin/emWin_header/SPINBOX.h	74;"	d
SPINBOX_EDGE_RIGHT	emwin/emWin_header/SPINBOX.h	73;"	d
SPINBOX_EM_DEFAULT	emwin/emWin_header/SPINBOX.h	81;"	d
SPINBOX_EM_EDIT	emwin/emWin_header/SPINBOX.h	78;"	d
SPINBOX_EM_STEP	emwin/emWin_header/SPINBOX.h	77;"	d
SPINBOX_H	emwin/emWin_header/SPINBOX.h	46;"	d
SPINBOX_Handle	emwin/emWin_header/SPINBOX.h	/^typedef WM_HMEM SPINBOX_Handle;$/;"	t
SPINBOX_ID	emwin/emWin_header/WIDGET.h	124;"	d
SPINBOX_INIT_ID	emwin/emWin_header/SPINBOX_Private.h	106;"	d
SPINBOX_INIT_ID	emwin/emWin_header/SPINBOX_Private.h	108;"	d
SPINBOX_LOCK_H	emwin/emWin_header/SPINBOX_Private.h	113;"	d
SPINBOX_LOCK_H	emwin/emWin_header/SPINBOX_Private.h	115;"	d
SPINBOX_OBJ	emwin/emWin_header/SPINBOX_Private.h	/^} SPINBOX_OBJ;$/;"	t	typeref:struct:__anon322
SPINBOX_PRIVATE_H	emwin/emWin_header/SPINBOX_Private.h	46;"	d
SPINBOX_PROPS	emwin/emWin_header/SPINBOX_Private.h	/^} SPINBOX_PROPS;$/;"	t	typeref:struct:__anon321
SPINBOX_SKINFLEX_PI_DISABLED	emwin/emWin_header/SPINBOX.h	101;"	d
SPINBOX_SKINFLEX_PI_ENABLED	emwin/emWin_header/SPINBOX.h	100;"	d
SPINBOX_SKINFLEX_PI_FOCUSED	emwin/emWin_header/SPINBOX.h	99;"	d
SPINBOX_SKINFLEX_PI_PRESSED	emwin/emWin_header/SPINBOX.h	98;"	d
SPINBOX_SKINFLEX_PROPS	emwin/emWin_header/SPINBOX.h	/^} SPINBOX_SKINFLEX_PROPS;$/;"	t	typeref:struct:__anon381
SPINBOX_SKIN_FLEX	emwin/emWin_header/SPINBOX.h	96;"	d
SPINBOX_SKIN_FLEX_RADIUS	emwin/emWin_header/SPINBOX.h	102;"	d
SPINBOX_SKIN_PRIVATE	emwin/emWin_header/SPINBOX_Private.h	/^} SPINBOX_SKIN_PRIVATE;$/;"	t	typeref:struct:__anon320
SPINBOX_STATE_FOCUS	emwin/emWin_header/SPINBOX.h	71;"	d
SPINBOX_STATE_PRESSED	emwin/emWin_header/SPINBOX.h	70;"	d
SPINBOX_TIMER_ID	emwin/emWin_header/SPINBOX_Private.h	122;"	d
SPI_ASSERTNUM_SSEL	drivers/fsl_spi.h	42;"	d
SPI_BASE_ADDRS	device/LPC54018.h	10886;"	d
SPI_BASE_PTRS	device/LPC54018.h	10888;"	d
SPI_BYTES_TO_COUNT	drivers/fsl_spi.c	32;"	d	file:
SPI_CFG_CPHA	device/LPC54018.h	10373;"	d
SPI_CFG_CPHA_MASK	device/LPC54018.h	10365;"	d
SPI_CFG_CPHA_SHIFT	device/LPC54018.h	10366;"	d
SPI_CFG_CPOL	device/LPC54018.h	10380;"	d
SPI_CFG_CPOL_MASK	device/LPC54018.h	10374;"	d
SPI_CFG_CPOL_SHIFT	device/LPC54018.h	10375;"	d
SPI_CFG_ENABLE	device/LPC54018.h	10350;"	d
SPI_CFG_ENABLE_MASK	device/LPC54018.h	10344;"	d
SPI_CFG_ENABLE_SHIFT	device/LPC54018.h	10345;"	d
SPI_CFG_LOOP	device/LPC54018.h	10388;"	d
SPI_CFG_LOOP_MASK	device/LPC54018.h	10381;"	d
SPI_CFG_LOOP_SHIFT	device/LPC54018.h	10382;"	d
SPI_CFG_LSBF	device/LPC54018.h	10364;"	d
SPI_CFG_LSBF_MASK	device/LPC54018.h	10358;"	d
SPI_CFG_LSBF_SHIFT	device/LPC54018.h	10359;"	d
SPI_CFG_MASTER	device/LPC54018.h	10357;"	d
SPI_CFG_MASTER_MASK	device/LPC54018.h	10351;"	d
SPI_CFG_MASTER_SHIFT	device/LPC54018.h	10352;"	d
SPI_CFG_SPOL0	device/LPC54018.h	10395;"	d
SPI_CFG_SPOL0_MASK	device/LPC54018.h	10389;"	d
SPI_CFG_SPOL0_SHIFT	device/LPC54018.h	10390;"	d
SPI_CFG_SPOL1	device/LPC54018.h	10402;"	d
SPI_CFG_SPOL1_MASK	device/LPC54018.h	10396;"	d
SPI_CFG_SPOL1_SHIFT	device/LPC54018.h	10397;"	d
SPI_CFG_SPOL2	device/LPC54018.h	10409;"	d
SPI_CFG_SPOL2_MASK	device/LPC54018.h	10403;"	d
SPI_CFG_SPOL2_SHIFT	device/LPC54018.h	10404;"	d
SPI_CFG_SPOL3	device/LPC54018.h	10416;"	d
SPI_CFG_SPOL3_MASK	device/LPC54018.h	10410;"	d
SPI_CFG_SPOL3_SHIFT	device/LPC54018.h	10411;"	d
SPI_COUNT_TO_BYTES	drivers/fsl_spi.c	31;"	d	file:
SPI_CTRLMASK	drivers/fsl_spi.h	40;"	d
SPI_DATA	drivers/fsl_spi.h	39;"	d
SPI_DEASSERTNUM_SSEL	drivers/fsl_spi.h	43;"	d
SPI_DEASSERT_ALL	drivers/fsl_spi.h	44;"	d
SPI_DIV_DIVVAL	device/LPC54018.h	10496;"	d
SPI_DIV_DIVVAL_MASK	device/LPC54018.h	10494;"	d
SPI_DIV_DIVVAL_SHIFT	device/LPC54018.h	10495;"	d
SPI_DLY_FRAME_DELAY	device/LPC54018.h	10429;"	d
SPI_DLY_FRAME_DELAY_MASK	device/LPC54018.h	10427;"	d
SPI_DLY_FRAME_DELAY_SHIFT	device/LPC54018.h	10428;"	d
SPI_DLY_POST_DELAY	device/LPC54018.h	10426;"	d
SPI_DLY_POST_DELAY_MASK	device/LPC54018.h	10424;"	d
SPI_DLY_POST_DELAY_SHIFT	device/LPC54018.h	10425;"	d
SPI_DLY_PRE_DELAY	device/LPC54018.h	10423;"	d
SPI_DLY_PRE_DELAY_MASK	device/LPC54018.h	10421;"	d
SPI_DLY_PRE_DELAY_SHIFT	device/LPC54018.h	10422;"	d
SPI_DLY_TRANSFER_DELAY	device/LPC54018.h	10432;"	d
SPI_DLY_TRANSFER_DELAY_MASK	device/LPC54018.h	10430;"	d
SPI_DLY_TRANSFER_DELAY_SHIFT	device/LPC54018.h	10431;"	d
SPI_DMAControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_DMAControl(uint32_t control, uint32_t arg, cmsis_spi_dma_driver_state_t *spi)$/;"	f	file:
SPI_DMAGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI_DMAGetCount(cmsis_spi_dma_driver_state_t *spi)$/;"	f	file:
SPI_DMAGetStatus	drivers/fsl_spi_cmsis.c	/^ARM_SPI_STATUS SPI_DMAGetStatus(cmsis_spi_dma_driver_state_t *spi)$/;"	f
SPI_DMAInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_DMAInitialize(ARM_SPI_SignalEvent_t cb_event, cmsis_spi_dma_driver_state_t *spi)$/;"	f	file:
SPI_DMAPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_DMAPowerControl(ARM_POWER_STATE state, cmsis_spi_dma_driver_state_t *spi)$/;"	f	file:
SPI_DMAReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_DMAReceive(void *data, uint32_t num, cmsis_spi_dma_driver_state_t *spi)$/;"	f	file:
SPI_DMASend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_DMASend(const void *data, uint32_t num, cmsis_spi_dma_driver_state_t *spi)$/;"	f	file:
SPI_DMATransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_DMATransfer(const void *data_out, void *data_in, uint32_t num, cmsis_spi_dma_driver_state_t *spi)$/;"	f	file:
SPI_DMAUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_DMAUninitialize(cmsis_spi_dma_driver_state_t *spi)$/;"	f	file:
SPI_DUMMYDATA	drivers/fsl_spi.h	36;"	d
SPI_Deinit	drivers/fsl_spi.c	/^void SPI_Deinit(SPI_Type *base)$/;"	f
SPI_DisableInterrupts	drivers/fsl_spi.h	/^static inline void SPI_DisableInterrupts(SPI_Type *base, uint32_t irqs)$/;"	f
SPI_Enable	drivers/fsl_spi.h	/^static inline void SPI_Enable(SPI_Type *base, bool enable)$/;"	f
SPI_EnableInterrupts	drivers/fsl_spi.h	/^static inline void SPI_EnableInterrupts(SPI_Type *base, uint32_t irqs)$/;"	f
SPI_EnableRxDMA	drivers/fsl_spi.c	/^void SPI_EnableRxDMA(SPI_Type *base, bool enable)$/;"	f
SPI_EnableTxDMA	drivers/fsl_spi.c	/^void SPI_EnableTxDMA(SPI_Type *base, bool enable)$/;"	f
SPI_FIFOCFG_DMARX	device/LPC54018.h	10544;"	d
SPI_FIFOCFG_DMARX_MASK	device/LPC54018.h	10538;"	d
SPI_FIFOCFG_DMARX_SHIFT	device/LPC54018.h	10539;"	d
SPI_FIFOCFG_DMATX	device/LPC54018.h	10537;"	d
SPI_FIFOCFG_DMATX_MASK	device/LPC54018.h	10531;"	d
SPI_FIFOCFG_DMATX_SHIFT	device/LPC54018.h	10532;"	d
SPI_FIFOCFG_EMPTYRX	device/LPC54018.h	10574;"	d
SPI_FIFOCFG_EMPTYRX_MASK	device/LPC54018.h	10572;"	d
SPI_FIFOCFG_EMPTYRX_SHIFT	device/LPC54018.h	10573;"	d
SPI_FIFOCFG_EMPTYTX	device/LPC54018.h	10571;"	d
SPI_FIFOCFG_EMPTYTX_MASK	device/LPC54018.h	10569;"	d
SPI_FIFOCFG_EMPTYTX_SHIFT	device/LPC54018.h	10570;"	d
SPI_FIFOCFG_ENABLERX	device/LPC54018.h	10527;"	d
SPI_FIFOCFG_ENABLERX_MASK	device/LPC54018.h	10521;"	d
SPI_FIFOCFG_ENABLERX_SHIFT	device/LPC54018.h	10522;"	d
SPI_FIFOCFG_ENABLETX	device/LPC54018.h	10520;"	d
SPI_FIFOCFG_ENABLETX_MASK	device/LPC54018.h	10514;"	d
SPI_FIFOCFG_ENABLETX_SHIFT	device/LPC54018.h	10515;"	d
SPI_FIFOCFG_SIZE	device/LPC54018.h	10530;"	d
SPI_FIFOCFG_SIZE_MASK	device/LPC54018.h	10528;"	d
SPI_FIFOCFG_SIZE_SHIFT	device/LPC54018.h	10529;"	d
SPI_FIFOCFG_WAKERX	device/LPC54018.h	10568;"	d
SPI_FIFOCFG_WAKERX_MASK	device/LPC54018.h	10557;"	d
SPI_FIFOCFG_WAKERX_SHIFT	device/LPC54018.h	10558;"	d
SPI_FIFOCFG_WAKETX	device/LPC54018.h	10556;"	d
SPI_FIFOCFG_WAKETX_MASK	device/LPC54018.h	10545;"	d
SPI_FIFOCFG_WAKETX_SHIFT	device/LPC54018.h	10546;"	d
SPI_FIFOINTENCLR_RXERR	device/LPC54018.h	10677;"	d
SPI_FIFOINTENCLR_RXERR_MASK	device/LPC54018.h	10675;"	d
SPI_FIFOINTENCLR_RXERR_SHIFT	device/LPC54018.h	10676;"	d
SPI_FIFOINTENCLR_RXLVL	device/LPC54018.h	10683;"	d
SPI_FIFOINTENCLR_RXLVL_MASK	device/LPC54018.h	10681;"	d
SPI_FIFOINTENCLR_RXLVL_SHIFT	device/LPC54018.h	10682;"	d
SPI_FIFOINTENCLR_TXERR	device/LPC54018.h	10674;"	d
SPI_FIFOINTENCLR_TXERR_MASK	device/LPC54018.h	10672;"	d
SPI_FIFOINTENCLR_TXERR_SHIFT	device/LPC54018.h	10673;"	d
SPI_FIFOINTENCLR_TXLVL	device/LPC54018.h	10680;"	d
SPI_FIFOINTENCLR_TXLVL_MASK	device/LPC54018.h	10678;"	d
SPI_FIFOINTENCLR_TXLVL_SHIFT	device/LPC54018.h	10679;"	d
SPI_FIFOINTENSET_RXERR	device/LPC54018.h	10649;"	d
SPI_FIFOINTENSET_RXERR_MASK	device/LPC54018.h	10643;"	d
SPI_FIFOINTENSET_RXERR_SHIFT	device/LPC54018.h	10644;"	d
SPI_FIFOINTENSET_RXLVL	device/LPC54018.h	10667;"	d
SPI_FIFOINTENSET_RXLVL_MASK	device/LPC54018.h	10659;"	d
SPI_FIFOINTENSET_RXLVL_SHIFT	device/LPC54018.h	10660;"	d
SPI_FIFOINTENSET_TXERR	device/LPC54018.h	10642;"	d
SPI_FIFOINTENSET_TXERR_MASK	device/LPC54018.h	10636;"	d
SPI_FIFOINTENSET_TXERR_SHIFT	device/LPC54018.h	10637;"	d
SPI_FIFOINTENSET_TXLVL	device/LPC54018.h	10658;"	d
SPI_FIFOINTENSET_TXLVL_MASK	device/LPC54018.h	10650;"	d
SPI_FIFOINTENSET_TXLVL_SHIFT	device/LPC54018.h	10651;"	d
SPI_FIFOINTSTAT_PERINT	device/LPC54018.h	10702;"	d
SPI_FIFOINTSTAT_PERINT_MASK	device/LPC54018.h	10700;"	d
SPI_FIFOINTSTAT_PERINT_SHIFT	device/LPC54018.h	10701;"	d
SPI_FIFOINTSTAT_RXERR	device/LPC54018.h	10693;"	d
SPI_FIFOINTSTAT_RXERR_MASK	device/LPC54018.h	10691;"	d
SPI_FIFOINTSTAT_RXERR_SHIFT	device/LPC54018.h	10692;"	d
SPI_FIFOINTSTAT_RXLVL	device/LPC54018.h	10699;"	d
SPI_FIFOINTSTAT_RXLVL_MASK	device/LPC54018.h	10697;"	d
SPI_FIFOINTSTAT_RXLVL_SHIFT	device/LPC54018.h	10698;"	d
SPI_FIFOINTSTAT_TXERR	device/LPC54018.h	10690;"	d
SPI_FIFOINTSTAT_TXERR_MASK	device/LPC54018.h	10688;"	d
SPI_FIFOINTSTAT_TXERR_SHIFT	device/LPC54018.h	10689;"	d
SPI_FIFOINTSTAT_TXLVL	device/LPC54018.h	10696;"	d
SPI_FIFOINTSTAT_TXLVL_MASK	device/LPC54018.h	10694;"	d
SPI_FIFOINTSTAT_TXLVL_SHIFT	device/LPC54018.h	10695;"	d
SPI_FIFORDNOPOP_RXDATA	device/LPC54018.h	10800;"	d
SPI_FIFORDNOPOP_RXDATA_MASK	device/LPC54018.h	10798;"	d
SPI_FIFORDNOPOP_RXDATA_SHIFT	device/LPC54018.h	10799;"	d
SPI_FIFORDNOPOP_RXSSEL0_N	device/LPC54018.h	10803;"	d
SPI_FIFORDNOPOP_RXSSEL0_N_MASK	device/LPC54018.h	10801;"	d
SPI_FIFORDNOPOP_RXSSEL0_N_SHIFT	device/LPC54018.h	10802;"	d
SPI_FIFORDNOPOP_RXSSEL1_N	device/LPC54018.h	10806;"	d
SPI_FIFORDNOPOP_RXSSEL1_N_MASK	device/LPC54018.h	10804;"	d
SPI_FIFORDNOPOP_RXSSEL1_N_SHIFT	device/LPC54018.h	10805;"	d
SPI_FIFORDNOPOP_RXSSEL2_N	device/LPC54018.h	10809;"	d
SPI_FIFORDNOPOP_RXSSEL2_N_MASK	device/LPC54018.h	10807;"	d
SPI_FIFORDNOPOP_RXSSEL2_N_SHIFT	device/LPC54018.h	10808;"	d
SPI_FIFORDNOPOP_RXSSEL3_N	device/LPC54018.h	10812;"	d
SPI_FIFORDNOPOP_RXSSEL3_N_MASK	device/LPC54018.h	10810;"	d
SPI_FIFORDNOPOP_RXSSEL3_N_SHIFT	device/LPC54018.h	10811;"	d
SPI_FIFORDNOPOP_SOT	device/LPC54018.h	10815;"	d
SPI_FIFORDNOPOP_SOT_MASK	device/LPC54018.h	10813;"	d
SPI_FIFORDNOPOP_SOT_SHIFT	device/LPC54018.h	10814;"	d
SPI_FIFORD_RXDATA	device/LPC54018.h	10778;"	d
SPI_FIFORD_RXDATA_MASK	device/LPC54018.h	10776;"	d
SPI_FIFORD_RXDATA_SHIFT	device/LPC54018.h	10777;"	d
SPI_FIFORD_RXSSEL0_N	device/LPC54018.h	10781;"	d
SPI_FIFORD_RXSSEL0_N_MASK	device/LPC54018.h	10779;"	d
SPI_FIFORD_RXSSEL0_N_SHIFT	device/LPC54018.h	10780;"	d
SPI_FIFORD_RXSSEL1_N	device/LPC54018.h	10784;"	d
SPI_FIFORD_RXSSEL1_N_MASK	device/LPC54018.h	10782;"	d
SPI_FIFORD_RXSSEL1_N_SHIFT	device/LPC54018.h	10783;"	d
SPI_FIFORD_RXSSEL2_N	device/LPC54018.h	10787;"	d
SPI_FIFORD_RXSSEL2_N_MASK	device/LPC54018.h	10785;"	d
SPI_FIFORD_RXSSEL2_N_SHIFT	device/LPC54018.h	10786;"	d
SPI_FIFORD_RXSSEL3_N	device/LPC54018.h	10790;"	d
SPI_FIFORD_RXSSEL3_N_MASK	device/LPC54018.h	10788;"	d
SPI_FIFORD_RXSSEL3_N_SHIFT	device/LPC54018.h	10789;"	d
SPI_FIFORD_SOT	device/LPC54018.h	10793;"	d
SPI_FIFORD_SOT_MASK	device/LPC54018.h	10791;"	d
SPI_FIFORD_SOT_SHIFT	device/LPC54018.h	10792;"	d
SPI_FIFOSTAT_PERINT	device/LPC54018.h	10587;"	d
SPI_FIFOSTAT_PERINT_MASK	device/LPC54018.h	10585;"	d
SPI_FIFOSTAT_PERINT_SHIFT	device/LPC54018.h	10586;"	d
SPI_FIFOSTAT_RXERR	device/LPC54018.h	10584;"	d
SPI_FIFOSTAT_RXERR_MASK	device/LPC54018.h	10582;"	d
SPI_FIFOSTAT_RXERR_SHIFT	device/LPC54018.h	10583;"	d
SPI_FIFOSTAT_RXFULL	device/LPC54018.h	10599;"	d
SPI_FIFOSTAT_RXFULL_MASK	device/LPC54018.h	10597;"	d
SPI_FIFOSTAT_RXFULL_SHIFT	device/LPC54018.h	10598;"	d
SPI_FIFOSTAT_RXLVL	device/LPC54018.h	10605;"	d
SPI_FIFOSTAT_RXLVL_MASK	device/LPC54018.h	10603;"	d
SPI_FIFOSTAT_RXLVL_SHIFT	device/LPC54018.h	10604;"	d
SPI_FIFOSTAT_RXNOTEMPTY	device/LPC54018.h	10596;"	d
SPI_FIFOSTAT_RXNOTEMPTY_MASK	device/LPC54018.h	10594;"	d
SPI_FIFOSTAT_RXNOTEMPTY_SHIFT	device/LPC54018.h	10595;"	d
SPI_FIFOSTAT_TXEMPTY	device/LPC54018.h	10590;"	d
SPI_FIFOSTAT_TXEMPTY_MASK	device/LPC54018.h	10588;"	d
SPI_FIFOSTAT_TXEMPTY_SHIFT	device/LPC54018.h	10589;"	d
SPI_FIFOSTAT_TXERR	device/LPC54018.h	10581;"	d
SPI_FIFOSTAT_TXERR_MASK	device/LPC54018.h	10579;"	d
SPI_FIFOSTAT_TXERR_SHIFT	device/LPC54018.h	10580;"	d
SPI_FIFOSTAT_TXLVL	device/LPC54018.h	10602;"	d
SPI_FIFOSTAT_TXLVL_MASK	device/LPC54018.h	10600;"	d
SPI_FIFOSTAT_TXLVL_SHIFT	device/LPC54018.h	10601;"	d
SPI_FIFOSTAT_TXNOTFULL	device/LPC54018.h	10593;"	d
SPI_FIFOSTAT_TXNOTFULL_MASK	device/LPC54018.h	10591;"	d
SPI_FIFOSTAT_TXNOTFULL_SHIFT	device/LPC54018.h	10592;"	d
SPI_FIFOTRIG_RXLVL	device/LPC54018.h	10631;"	d
SPI_FIFOTRIG_RXLVLENA	device/LPC54018.h	10625;"	d
SPI_FIFOTRIG_RXLVLENA_MASK	device/LPC54018.h	10618;"	d
SPI_FIFOTRIG_RXLVLENA_SHIFT	device/LPC54018.h	10619;"	d
SPI_FIFOTRIG_RXLVL_GET	drivers/fsl_spi.h	49;"	d
SPI_FIFOTRIG_RXLVL_MASK	device/LPC54018.h	10629;"	d
SPI_FIFOTRIG_RXLVL_SHIFT	device/LPC54018.h	10630;"	d
SPI_FIFOTRIG_TXLVL	device/LPC54018.h	10628;"	d
SPI_FIFOTRIG_TXLVLENA	device/LPC54018.h	10617;"	d
SPI_FIFOTRIG_TXLVLENA_MASK	device/LPC54018.h	10610;"	d
SPI_FIFOTRIG_TXLVLENA_SHIFT	device/LPC54018.h	10611;"	d
SPI_FIFOTRIG_TXLVL_GET	drivers/fsl_spi.h	48;"	d
SPI_FIFOTRIG_TXLVL_MASK	device/LPC54018.h	10626;"	d
SPI_FIFOTRIG_TXLVL_SHIFT	device/LPC54018.h	10627;"	d
SPI_FIFOWR_EOF	device/LPC54018.h	10756;"	d
SPI_FIFOWR_EOF_MASK	device/LPC54018.h	10746;"	d
SPI_FIFOWR_EOF_SHIFT	device/LPC54018.h	10747;"	d
SPI_FIFOWR_EOT	device/LPC54018.h	10745;"	d
SPI_FIFOWR_EOT_MASK	device/LPC54018.h	10738;"	d
SPI_FIFOWR_EOT_SHIFT	device/LPC54018.h	10739;"	d
SPI_FIFOWR_FLAGS_MASK	drivers/fsl_spi.h	46;"	d
SPI_FIFOWR_LEN	device/LPC54018.h	10771;"	d
SPI_FIFOWR_LEN_MASK	device/LPC54018.h	10769;"	d
SPI_FIFOWR_LEN_SHIFT	device/LPC54018.h	10770;"	d
SPI_FIFOWR_RXIGNORE	device/LPC54018.h	10768;"	d
SPI_FIFOWR_RXIGNORE_MASK	device/LPC54018.h	10757;"	d
SPI_FIFOWR_RXIGNORE_SHIFT	device/LPC54018.h	10758;"	d
SPI_FIFOWR_TXDATA	device/LPC54018.h	10709;"	d
SPI_FIFOWR_TXDATA_MASK	device/LPC54018.h	10707;"	d
SPI_FIFOWR_TXDATA_SHIFT	device/LPC54018.h	10708;"	d
SPI_FIFOWR_TXSSEL0_N	device/LPC54018.h	10716;"	d
SPI_FIFOWR_TXSSEL0_N_MASK	device/LPC54018.h	10710;"	d
SPI_FIFOWR_TXSSEL0_N_SHIFT	device/LPC54018.h	10711;"	d
SPI_FIFOWR_TXSSEL1_N	device/LPC54018.h	10723;"	d
SPI_FIFOWR_TXSSEL1_N_MASK	device/LPC54018.h	10717;"	d
SPI_FIFOWR_TXSSEL1_N_SHIFT	device/LPC54018.h	10718;"	d
SPI_FIFOWR_TXSSEL2_N	device/LPC54018.h	10730;"	d
SPI_FIFOWR_TXSSEL2_N_MASK	device/LPC54018.h	10724;"	d
SPI_FIFOWR_TXSSEL2_N_SHIFT	device/LPC54018.h	10725;"	d
SPI_FIFOWR_TXSSEL3_N	device/LPC54018.h	10737;"	d
SPI_FIFOWR_TXSSEL3_N_MASK	device/LPC54018.h	10731;"	d
SPI_FIFOWR_TXSSEL3_N_SHIFT	device/LPC54018.h	10732;"	d
SPI_FIFO_DEPTH	drivers/fsl_spi.c	24;"	d	file:
SPI_FIFO_DEPTH	drivers/fsl_spi.c	26;"	d	file:
SPI_FLAG_CONFIGURED	drivers/fsl_spi_cmsis.h	74;"	d
SPI_FLAG_INIT	drivers/fsl_spi_cmsis.h	72;"	d
SPI_FLAG_MASTER	drivers/fsl_spi_cmsis.h	75;"	d
SPI_FLAG_POWER	drivers/fsl_spi_cmsis.h	73;"	d
SPI_FLAG_UNINIT	drivers/fsl_spi_cmsis.h	71;"	d
SPI_GetConfig	drivers/fsl_spi.c	/^void *SPI_GetConfig(SPI_Type *base)$/;"	f
SPI_GetInstance	drivers/fsl_spi.c	/^uint32_t SPI_GetInstance(SPI_Type *base)$/;"	f
SPI_GetStatusFlags	drivers/fsl_spi.h	/^static inline uint32_t SPI_GetStatusFlags(SPI_Type *base)$/;"	f
SPI_ID_APERTURE	device/LPC54018.h	10822;"	d
SPI_ID_APERTURE_MASK	device/LPC54018.h	10820;"	d
SPI_ID_APERTURE_SHIFT	device/LPC54018.h	10821;"	d
SPI_ID_ID	device/LPC54018.h	10831;"	d
SPI_ID_ID_MASK	device/LPC54018.h	10829;"	d
SPI_ID_ID_SHIFT	device/LPC54018.h	10830;"	d
SPI_ID_MAJOR_REV	device/LPC54018.h	10828;"	d
SPI_ID_MAJOR_REV_MASK	device/LPC54018.h	10826;"	d
SPI_ID_MAJOR_REV_SHIFT	device/LPC54018.h	10827;"	d
SPI_ID_MINOR_REV	device/LPC54018.h	10825;"	d
SPI_ID_MINOR_REV_MASK	device/LPC54018.h	10823;"	d
SPI_ID_MINOR_REV_SHIFT	device/LPC54018.h	10824;"	d
SPI_INTENCLR_MSTIDLE	device/LPC54018.h	10489;"	d
SPI_INTENCLR_MSTIDLE_MASK	device/LPC54018.h	10487;"	d
SPI_INTENCLR_MSTIDLE_SHIFT	device/LPC54018.h	10488;"	d
SPI_INTENCLR_SSAEN	device/LPC54018.h	10483;"	d
SPI_INTENCLR_SSAEN_MASK	device/LPC54018.h	10481;"	d
SPI_INTENCLR_SSAEN_SHIFT	device/LPC54018.h	10482;"	d
SPI_INTENCLR_SSDEN	device/LPC54018.h	10486;"	d
SPI_INTENCLR_SSDEN_MASK	device/LPC54018.h	10484;"	d
SPI_INTENCLR_SSDEN_SHIFT	device/LPC54018.h	10485;"	d
SPI_INTENSET_MSTIDLEEN	device/LPC54018.h	10476;"	d
SPI_INTENSET_MSTIDLEEN_MASK	device/LPC54018.h	10470;"	d
SPI_INTENSET_MSTIDLEEN_SHIFT	device/LPC54018.h	10471;"	d
SPI_INTENSET_SSAEN	device/LPC54018.h	10462;"	d
SPI_INTENSET_SSAEN_MASK	device/LPC54018.h	10456;"	d
SPI_INTENSET_SSAEN_SHIFT	device/LPC54018.h	10457;"	d
SPI_INTENSET_SSDEN	device/LPC54018.h	10469;"	d
SPI_INTENSET_SSDEN_MASK	device/LPC54018.h	10463;"	d
SPI_INTENSET_SSDEN_SHIFT	device/LPC54018.h	10464;"	d
SPI_INTSTAT_MSTIDLE	device/LPC54018.h	10509;"	d
SPI_INTSTAT_MSTIDLE_MASK	device/LPC54018.h	10507;"	d
SPI_INTSTAT_MSTIDLE_SHIFT	device/LPC54018.h	10508;"	d
SPI_INTSTAT_SSA	device/LPC54018.h	10503;"	d
SPI_INTSTAT_SSA_MASK	device/LPC54018.h	10501;"	d
SPI_INTSTAT_SSA_SHIFT	device/LPC54018.h	10502;"	d
SPI_INTSTAT_SSD	device/LPC54018.h	10506;"	d
SPI_INTSTAT_SSD_MASK	device/LPC54018.h	10504;"	d
SPI_INTSTAT_SSD_SHIFT	device/LPC54018.h	10505;"	d
SPI_IRQS	device/LPC54018.h	10890;"	d
SPI_InterruptControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_InterruptControl(uint32_t control, uint32_t arg, cmsis_spi_interrupt_driver_state_t *spi)$/;"	f	file:
SPI_InterruptGetCount	drivers/fsl_spi_cmsis.c	/^static uint32_t SPI_InterruptGetCount(cmsis_spi_interrupt_driver_state_t *spi)$/;"	f	file:
SPI_InterruptGetStatus	drivers/fsl_spi_cmsis.c	/^ARM_SPI_STATUS SPI_InterruptGetStatus(cmsis_spi_interrupt_driver_state_t *spi)$/;"	f
SPI_InterruptInitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_InterruptInitialize(ARM_SPI_SignalEvent_t cb_event, cmsis_spi_interrupt_driver_state_t *spi)$/;"	f	file:
SPI_InterruptPowerControl	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_InterruptPowerControl(ARM_POWER_STATE state, cmsis_spi_interrupt_driver_state_t *spi)$/;"	f	file:
SPI_InterruptReceive	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_InterruptReceive(void *data, uint32_t num, cmsis_spi_interrupt_driver_state_t *spi)$/;"	f	file:
SPI_InterruptSend	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_InterruptSend(const void *data, uint32_t num, cmsis_spi_interrupt_driver_state_t *spi)$/;"	f	file:
SPI_InterruptTransfer	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_InterruptTransfer(const void *data_out,$/;"	f	file:
SPI_InterruptUninitialize	drivers/fsl_spi_cmsis.c	/^static int32_t SPI_InterruptUninitialize(cmsis_spi_interrupt_driver_state_t *spi)$/;"	f	file:
SPI_MasterCommonControl	drivers/fsl_spi_cmsis.c	/^void SPI_MasterCommonControl(uint32_t control,$/;"	f
SPI_MasterGetDefaultConfig	drivers/fsl_spi.c	/^void SPI_MasterGetDefaultConfig(spi_master_config_t *config)$/;"	f
SPI_MasterHalfDuplexTransferBlocking	drivers/fsl_spi.c	/^status_t SPI_MasterHalfDuplexTransferBlocking(SPI_Type *base, spi_half_duplex_transfer_t *xfer)$/;"	f
SPI_MasterHalfDuplexTransferDMA	drivers/fsl_spi_dma.c	/^status_t SPI_MasterHalfDuplexTransferDMA(SPI_Type *base, spi_dma_handle_t *handle, spi_half_duplex_transfer_t *xfer)$/;"	f
SPI_MasterHalfDuplexTransferNonBlocking	drivers/fsl_spi.c	/^status_t SPI_MasterHalfDuplexTransferNonBlocking(SPI_Type *base,$/;"	f
SPI_MasterInit	drivers/fsl_spi.c	/^status_t SPI_MasterInit(SPI_Type *base, const spi_master_config_t *config, uint32_t srcClock_Hz)$/;"	f
SPI_MasterSetBaud	drivers/fsl_spi.c	/^status_t SPI_MasterSetBaud(SPI_Type *base, uint32_t baudrate_Bps, uint32_t srcClock_Hz)$/;"	f
SPI_MasterTransferAbort	drivers/fsl_spi.c	/^void SPI_MasterTransferAbort(SPI_Type *base, spi_master_handle_t *handle)$/;"	f
SPI_MasterTransferAbortDMA	drivers/fsl_spi_dma.c	/^void SPI_MasterTransferAbortDMA(SPI_Type *base, spi_dma_handle_t *handle)$/;"	f
SPI_MasterTransferBlocking	drivers/fsl_spi.c	/^status_t SPI_MasterTransferBlocking(SPI_Type *base, spi_transfer_t *xfer)$/;"	f
SPI_MasterTransferCreateHandle	drivers/fsl_spi.c	/^status_t SPI_MasterTransferCreateHandle(SPI_Type *base,$/;"	f
SPI_MasterTransferCreateHandleDMA	drivers/fsl_spi_dma.c	/^status_t SPI_MasterTransferCreateHandleDMA(SPI_Type *base,$/;"	f
SPI_MasterTransferDMA	drivers/fsl_spi_dma.c	/^status_t SPI_MasterTransferDMA(SPI_Type *base, spi_dma_handle_t *handle, spi_transfer_t *xfer)$/;"	f
SPI_MasterTransferGetCount	drivers/fsl_spi.c	/^status_t SPI_MasterTransferGetCount(SPI_Type *base, spi_master_handle_t *handle, size_t *count)$/;"	f
SPI_MasterTransferGetCountDMA	drivers/fsl_spi_dma.c	/^status_t SPI_MasterTransferGetCountDMA(SPI_Type *base, spi_dma_handle_t *handle, size_t *count)$/;"	f
SPI_MasterTransferHandleIRQ	drivers/fsl_spi.c	/^void SPI_MasterTransferHandleIRQ(SPI_Type *base, spi_master_handle_t *handle)$/;"	f
SPI_MasterTransferNonBlocking	drivers/fsl_spi.c	/^status_t SPI_MasterTransferNonBlocking(SPI_Type *base, spi_master_handle_t *handle, spi_transfer_t *xfer)$/;"	f
SPI_NVIC_PRIO	source/main.c	131;"	d	file:
SPI_RTOS_Callback	drivers/freertos/fsl_spi_freertos.c	/^static void SPI_RTOS_Callback(SPI_Type *base, spi_master_handle_t *drv_handle, status_t status, void *userData)$/;"	f	file:
SPI_RTOS_Deinit	drivers/freertos/fsl_spi_freertos.c	/^status_t SPI_RTOS_Deinit(spi_rtos_handle_t *handle)$/;"	f
SPI_RTOS_Init	drivers/freertos/fsl_spi_freertos.c	/^status_t SPI_RTOS_Init(spi_rtos_handle_t *handle,$/;"	f
SPI_RTOS_Transfer	drivers/freertos/fsl_spi_freertos.c	/^status_t SPI_RTOS_Transfer(spi_rtos_handle_t *handle, spi_transfer_t *transfer)$/;"	f
SPI_ReadData	drivers/fsl_spi.h	/^static inline uint32_t SPI_ReadData(SPI_Type *base)$/;"	f
SPI_RxDMACallback	drivers/fsl_spi_dma.c	/^static void SPI_RxDMACallback(dma_handle_t *handle, void *userData, bool transferDone, uint32_t intmode)$/;"	f	file:
SPI_SSELPOL_MASK	drivers/fsl_spi.c	33;"	d	file:
SPI_STAT_ENDTRANSFER	device/LPC54018.h	10448;"	d
SPI_STAT_ENDTRANSFER_MASK	device/LPC54018.h	10446;"	d
SPI_STAT_ENDTRANSFER_SHIFT	device/LPC54018.h	10447;"	d
SPI_STAT_MSTIDLE	device/LPC54018.h	10451;"	d
SPI_STAT_MSTIDLE_MASK	device/LPC54018.h	10449;"	d
SPI_STAT_MSTIDLE_SHIFT	device/LPC54018.h	10450;"	d
SPI_STAT_SSA	device/LPC54018.h	10439;"	d
SPI_STAT_SSA_MASK	device/LPC54018.h	10437;"	d
SPI_STAT_SSA_SHIFT	device/LPC54018.h	10438;"	d
SPI_STAT_SSD	device/LPC54018.h	10442;"	d
SPI_STAT_SSD_MASK	device/LPC54018.h	10440;"	d
SPI_STAT_SSD_SHIFT	device/LPC54018.h	10441;"	d
SPI_STAT_STALLED	device/LPC54018.h	10445;"	d
SPI_STAT_STALLED_MASK	device/LPC54018.h	10443;"	d
SPI_STAT_STALLED_SHIFT	device/LPC54018.h	10444;"	d
SPI_SetDummyData	drivers/fsl_spi.c	/^void SPI_SetDummyData(SPI_Type *base, uint8_t dummyData)$/;"	f
SPI_SetTransferDelay	drivers/fsl_spi.h	/^static inline void SPI_SetTransferDelay(SPI_Type *base, const spi_delay_config_t *config)$/;"	f
SPI_SetupDummy	drivers/fsl_spi_dma.c	/^static void SPI_SetupDummy(SPI_Type *base, spi_dma_txdummy_t *dummy, spi_transfer_t *xfer, spi_config_t *spi_config_p)$/;"	f	file:
SPI_SlaveCommonControl	drivers/fsl_spi_cmsis.c	/^void SPI_SlaveCommonControl(uint32_t control,$/;"	f
SPI_SlaveGetDefaultConfig	drivers/fsl_spi.c	/^void SPI_SlaveGetDefaultConfig(spi_slave_config_t *config)$/;"	f
SPI_SlaveInit	drivers/fsl_spi.c	/^status_t SPI_SlaveInit(SPI_Type *base, const spi_slave_config_t *config)$/;"	f
SPI_SlaveTransferAbort	drivers/fsl_spi.h	/^static inline void SPI_SlaveTransferAbort(SPI_Type *base, spi_slave_handle_t *handle)$/;"	f
SPI_SlaveTransferAbortDMA	drivers/fsl_spi_dma.h	/^static inline void SPI_SlaveTransferAbortDMA(SPI_Type *base, spi_dma_handle_t *handle)$/;"	f
SPI_SlaveTransferCreateHandle	drivers/fsl_spi.h	/^static inline status_t SPI_SlaveTransferCreateHandle(SPI_Type *base,$/;"	f
SPI_SlaveTransferCreateHandleDMA	drivers/fsl_spi_dma.h	/^static inline status_t SPI_SlaveTransferCreateHandleDMA(SPI_Type *base,$/;"	f
SPI_SlaveTransferDMA	drivers/fsl_spi_dma.h	/^static inline status_t SPI_SlaveTransferDMA(SPI_Type *base, spi_dma_handle_t *handle, spi_transfer_t *xfer)$/;"	f
SPI_SlaveTransferGetCount	drivers/fsl_spi.h	/^static inline status_t SPI_SlaveTransferGetCount(SPI_Type *base, spi_slave_handle_t *handle, size_t *count)$/;"	f
SPI_SlaveTransferGetCountDMA	drivers/fsl_spi_dma.h	/^static inline status_t SPI_SlaveTransferGetCountDMA(SPI_Type *base, spi_dma_handle_t *handle, size_t *count)$/;"	f
SPI_SlaveTransferHandleIRQ	drivers/fsl_spi.h	/^static inline void SPI_SlaveTransferHandleIRQ(SPI_Type *base, spi_slave_handle_t *handle)$/;"	f
SPI_SlaveTransferNonBlocking	drivers/fsl_spi.h	/^static inline status_t SPI_SlaveTransferNonBlocking(SPI_Type *base, spi_slave_handle_t *handle, spi_transfer_t *xfer)$/;"	f
SPI_TransferHandleIRQInternal	drivers/fsl_spi.c	/^static void SPI_TransferHandleIRQInternal(SPI_Type *base, spi_master_handle_t *handle)$/;"	f	file:
SPI_TxDMACallback	drivers/fsl_spi_dma.c	/^static void SPI_TxDMACallback(dma_handle_t *handle, void *userData, bool transferDone, uint32_t intmode)$/;"	f	file:
SPI_Type	device/LPC54018.h	/^} SPI_Type;$/;"	t	typeref:struct:__anon183
SPI_WriteData	drivers/fsl_spi.c	/^void SPI_WriteData(SPI_Type *base, uint16_t data, uint32_t configFlags)$/;"	f
SPIx_GetCapabilities	drivers/fsl_spi_cmsis.c	/^static ARM_SPI_CAPABILITIES SPIx_GetCapabilities(void)$/;"	f	file:
SPIx_GetVersion	drivers/fsl_spi_cmsis.c	/^static ARM_DRIVER_VERSION SPIx_GetVersion(void)$/;"	f	file:
SPPR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t SPPR;                   \/*!< Offset: 0x0F0 (R\/W)  Selected Pin Protocol Register *\/$/;"	m	struct:__anon125
SPPR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t SPPR;                   \/*!< Offset: 0x0F0 (R\/W)  Selected Pin Protocol Register *\/$/;"	m	struct:__anon24
SPPR	CMSIS/core_cm4.h	/^  __IOM uint32_t SPPR;                   \/*!< Offset: 0x0F0 (R\/W)  Selected Pin Protocol Register *\/$/;"	m	struct:__anon46
SPRITE_LOCK_H	emwin/emWin_header/GUI_SPRITE_Private.h	54;"	d
SPSEL	CMSIS/core_armv8mbl.h	/^    uint32_t SPSEL:1;                    \/*!< bit:      1  Stack-pointer select *\/$/;"	m	struct:__anon119::__anon120
SPSEL	CMSIS/core_armv8mml.h	/^    uint32_t SPSEL:1;                    \/*!< bit:      1  Stack-pointer select *\/$/;"	m	struct:__anon15::__anon16
SPSEL	CMSIS/core_cm4.h	/^    uint32_t SPSEL:1;                    \/*!< bit:      1  Stack to be used *\/$/;"	m	struct:__anon37::__anon38
SRAMBASE	device/LPC54018.h	/^  __IO uint32_t SRAMBASE;                          \/**< SRAM address of the channel configuration table., offset: 0x8 *\/$/;"	m	struct:__anon146
SRAM_CLOCKS	drivers/fsl_clock.h	71;"	d
SRPVAL_EBIT	lwip/src/include/netif/ppp/eap.h	77;"	d
SRP_PSEUDO_ID	lwip/src/include/netif/ppp/eap.h	79;"	d
SRP_PSEUDO_LEN	lwip/src/include/netif/ppp/eap.h	80;"	d
SSIZE_MAX	lwip/src/include/lwip/arch.h	203;"	d
SSPSR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t SSPSR;                  \/*!< Offset: 0x000 (R\/ )  Supported Parallel Port Size Register *\/$/;"	m	struct:__anon125
SSPSR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t SSPSR;                  \/*!< Offset: 0x000 (R\/ )  Supported Parallel Port Size Register *\/$/;"	m	struct:__anon24
SSPSR	CMSIS/core_cm4.h	/^  __IOM uint32_t SSPSR;                  \/*!< Offset: 0x000 (R\/ )  Supported Parallel Port Size Register *\/$/;"	m	struct:__anon46
STACK_MACROS_H	amazon-freertos/include/stack_macros.h	29;"	d
START	device/LPC54018.h	/^  __IO uint32_t START;                             \/**< SCT start event select register, offset: 0x14 *\/$/;"	m	struct:__anon172
STARTER	device/LPC54018.h	/^  __IO uint32_t STARTER[2];                        \/**< Start logic 0 wake-up enable register, array offset: 0x680, array step: 0x4 *\/$/;"	m	struct:__anon185
STARTERCLR	device/LPC54018.h	/^  __O  uint32_t STARTERCLR[2];                     \/**< Clear bits in STARTER0, array offset: 0x6C0, array step: 0x4 *\/$/;"	m	struct:__anon185
STARTERSET	device/LPC54018.h	/^  __O  uint32_t STARTERSET[2];                     \/**< Set bits in STARTER, array offset: 0x6A0, array step: 0x4 *\/$/;"	m	struct:__anon185
STARTUP	device/LPC54018.h	/^  __IO uint32_t STARTUP;                           \/**< ADC Startup register., offset: 0x6C *\/$/;"	m	struct:__anon140
STAT	device/LPC54018.h	/^    __IO uint32_t STAT;                              \/**< MRT Status register., array offset: 0xC, array step: 0x10 *\/$/;"	m	struct:__anon166::__anon167
STAT	device/LPC54018.h	/^  __IO uint32_t STAT;                              \/**< SPI Status. Some status flags can be cleared by writing a 1 to that bit position., offset: 0x408 *\/$/;"	m	struct:__anon183
STAT	device/LPC54018.h	/^  __IO uint32_t STAT;                              \/**< SPIFI status register, offset: 0x1C *\/$/;"	m	struct:__anon184
STAT	device/LPC54018.h	/^  __IO uint32_t STAT;                              \/**< Status register for Master, Slave, and Monitor functions., offset: 0x804 *\/$/;"	m	struct:__anon160
STAT	device/LPC54018.h	/^  __IO uint32_t STAT;                              \/**< Status register for the primary channel pair., offset: 0xC08 *\/$/;"	m	struct:__anon161
STAT	device/LPC54018.h	/^  __IO uint32_t STAT;                              \/**< Status register., offset: 0x4 *\/$/;"	m	struct:__anon191
STAT	device/LPC54018.h	/^  __IO uint32_t STAT;                              \/**< USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them., offset: 0x8 *\/$/;"	m	struct:__anon186
STATE	device/LPC54018.h	/^    __IO uint32_t STATE;                             \/**< SCT event state register 0, array offset: 0x300, array step: 0x8 *\/$/;"	m	struct:__anon172::__anon175
STATE	device/LPC54018.h	/^  __IO uint32_t STATE;                             \/**< SCT state register, offset: 0x44 *\/$/;"	m	struct:__anon172
STATIC	device/LPC54018.h	/^  } STATIC[4];$/;"	m	struct:__anon151	typeref:struct:__anon151::__anon153
STATICCONFIG	device/LPC54018.h	/^    __IO uint32_t STATICCONFIG;                      \/**< Configuration for EMC_CSx, array offset: 0x200, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon153
STATICEXTENDEDWAIT	device/LPC54018.h	/^  __IO uint32_t STATICEXTENDEDWAIT;                \/**< Time for long static memory read and write transfers, offset: 0x80 *\/$/;"	m	struct:__anon151
STATICWAITOEN	device/LPC54018.h	/^    __IO uint32_t STATICWAITOEN;                     \/**< Delay from EMC_CSx or address change, whichever is later, to output enable, array offset: 0x208, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon153
STATICWAITPAGE	device/LPC54018.h	/^    __IO uint32_t STATICWAITPAGE;                    \/**< Delay for asynchronous page mode sequential accesses for EMC_CSx, array offset: 0x210, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon153
STATICWAITRD	device/LPC54018.h	/^    __IO uint32_t STATICWAITRD;                      \/**< Delay from EMC_CSx to a read access, array offset: 0x20C, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon153
STATICWAITTURN	device/LPC54018.h	/^    __IO uint32_t STATICWAITTURN;                    \/**< Number of bus turnaround cycles EMC_CSx, array offset: 0x218, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon153
STATICWAITWEN	device/LPC54018.h	/^    __IO uint32_t STATICWAITWEN;                     \/**< Delay from EMC_CSx to write enable, array offset: 0x204, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon153
STATICWAITWR	device/LPC54018.h	/^    __IO uint32_t STATICWAITWR;                      \/**< Delay from EMC_CSx to a write access, array offset: 0x214, array step: 0x20 *\/$/;"	m	struct:__anon151::__anon153
STATS_DEC	lwip/src/include/lwip/stats.h	310;"	d
STATS_DEC	lwip/src/include/lwip/stats.h	320;"	d
STATS_GET	lwip/src/include/lwip/stats.h	316;"	d
STATS_INC	lwip/src/include/lwip/stats.h	309;"	d
STATS_INC	lwip/src/include/lwip/stats.h	319;"	d
STATS_INC_USED	lwip/src/include/lwip/stats.h	311;"	d
STATS_INC_USED	lwip/src/include/lwip/stats.h	321;"	d
STATUS	device/LPC54018.h	/^  __I  uint32_t STATUS;                            \/**< Provides EMC status information, offset: 0x4 *\/$/;"	m	struct:__anon151
STATUS	device/LPC54018.h	/^  __I  uint32_t STATUS;                            \/**< Status register, offset: 0x48 *\/$/;"	m	struct:__anon177
STATUS	device/LPC54018.h	/^  __IO uint32_t STATUS;                            \/**< Status register, offset: 0x4 *\/$/;"	m	struct:__anon178
STATUS_ABSTRACT_STATE	vcom/virtual_com.h	41;"	d
STAT_COUNTER	lwip/src/include/lwip/stats.h	56;"	d
STAT_COUNTER	lwip/src/include/lwip/stats.h	59;"	d
STAT_COUNTER_F	lwip/src/include/lwip/stats.h	57;"	d
STAT_COUNTER_F	lwip/src/include/lwip/stats.h	60;"	d
STI	usb/device/class/usb_device_video.h	/^            uint8_t STI : 1U; \/*!< Still Image. This bit, when set, identifies a video sample that belongs to a still$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
STICKCLKSEL	device/LPC54018.h	/^  __IO uint32_t STICKCLKSEL;                       \/**< Systick timer clock source selection, offset: 0x27C *\/$/;"	m	struct:__anon185
STIR	CMSIS/core_armv8mml.h	/^  __OM  uint32_t STIR;                   \/*!< Offset: 0x200 ( \/W)  Software Triggered Interrupt Register *\/$/;"	m	struct:__anon18
STIR	CMSIS/core_armv8mml.h	/^  __OM  uint32_t STIR;                   \/*!< Offset: 0xE00 ( \/W)  Software Trigger Interrupt Register *\/$/;"	m	struct:__anon17
STIR	CMSIS/core_cm4.h	/^  __OM  uint32_t STIR;                   \/*!< Offset: 0xE00 ( \/W)  Software Trigger Interrupt Register *\/$/;"	m	struct:__anon39
STOP	device/LPC54018.h	/^  __IO uint32_t STOP;                              \/**< SCT stop event select register, offset: 0x10 *\/$/;"	m	struct:__anon172
STREAM_BUFFER_H	amazon-freertos/include/stream_buffer.h	52;"	d
STRUCT_PACKED	usb/include/usb_misc.h	42;"	d
STRUCT_PACKED	usb/include/usb_misc.h	52;"	d
STRUCT_PACKED	usb/include/usb_misc.h	62;"	d
STRUCT_UNPACKED	usb/device/class/usb_device_audio.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_control_range_layout2_struct
STRUCT_UNPACKED	usb/device/class/usb_device_audio.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_control_range_layout3_struct
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_abort_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_clock_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_common_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_common_response
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_data_block_response
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_data_rate_and_clock_frequency_response
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_escape_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_escape_response
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_get_parameters_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_get_slot_status_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_hardware_error_notification
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_mechanical_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_notify_slot_chnage_notification
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_parameters_T0_response
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_parameters_T1_response
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_parameters_response
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_power_off_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_power_on_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_reset_parameters_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_secure_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_secure_pin_modification_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_secure_pin_operation_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_set_parameters_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_set_parameters_t0_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_set_parameters_t1_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_seucre_pin_verification_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_slot_status_response
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_t0_apdu_command
STRUCT_UNPACKED	usb/device/class/usb_device_ccid.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_ccid_transfer_block_command
STRUCT_UNPACKED	usb/device/class/usb_device_video.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_video_mjpeg_payload_header_struct
STRUCT_UNPACKED	usb/device/class/usb_device_video.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_video_probe_and_commit_controls_struct
STRUCT_UNPACKED	usb/device/class/usb_device_video.h	/^} STRUCT_UNPACKED;$/;"	v	typeref:struct:_usb_device_video_still_probe_and_commit_controls_struct
STRUCT_UNPACKED	usb/include/usb_misc.h	46;"	d
STRUCT_UNPACKED	usb/include/usb_misc.h	56;"	d
STRUCT_UNPACKED	usb/include/usb_misc.h	66;"	d
STR_LOG_ALERT	source/logging.h	26;"	d
STR_LOG_CRIT	source/logging.h	27;"	d
STR_LOG_DEBUG	source/logging.h	32;"	d
STR_LOG_EMERG	source/logging.h	25;"	d
STR_LOG_ERR	source/logging.h	28;"	d
STR_LOG_INFO	source/logging.h	31;"	d
STR_LOG_NOTICE	source/logging.h	30;"	d
STR_LOG_WARNING	source/logging.h	29;"	d
SUBDIRS	Debug/sources.mk	/^SUBDIRS := \\$/;"	m
SUM	device/LPC54018.h	/^    __I  uint32_t SUM;                               \/**< CRC checksum register, offset: 0x8 *\/$/;"	m	union:__anon143::__anon144
SVC_Handler	startup/startup_lpc54018.c	/^WEAK_AV void SVC_Handler(void)$/;"	f
SVCall_IRQn	device/LPC54018.h	/^  SVCall_IRQn                  = -5,               \/**< Cortex-M4 SV Call Interrupt *\/$/;"	e	enum:IRQn
SWAP	lwip/src/netif/ppp/polarssl/des.c	298;"	d	file:
SWAP2BYTE_CONST	usb/include/usb_misc.h	87;"	d
SWAP4BYTE_CONST	usb/include/usb_misc.h	88;"	d
SWAP_BYTES_IN_WORD	lwip/src/include/lwip/inet_chksum.h	47;"	d
SWIPELIST_BA_BOTTOM	emwin/emWin_header/SWIPELIST.h	109;"	d
SWIPELIST_BA_HCENTER	emwin/emWin_header/SWIPELIST.h	105;"	d
SWIPELIST_BA_LEFT	emwin/emWin_header/SWIPELIST.h	103;"	d
SWIPELIST_BA_RIGHT	emwin/emWin_header/SWIPELIST.h	104;"	d
SWIPELIST_BA_TOP	emwin/emWin_header/SWIPELIST.h	108;"	d
SWIPELIST_BA_VCENTER	emwin/emWin_header/SWIPELIST.h	107;"	d
SWIPELIST_BI_BOTTOM	emwin/emWin_header/SWIPELIST.h	75;"	d
SWIPELIST_BI_LEFT	emwin/emWin_header/SWIPELIST.h	72;"	d
SWIPELIST_BI_RIGHT	emwin/emWin_header/SWIPELIST.h	73;"	d
SWIPELIST_BI_TOP	emwin/emWin_header/SWIPELIST.h	74;"	d
SWIPELIST_CF_HORIZONTAL	emwin/emWin_header/SWIPELIST.h	65;"	d
SWIPELIST_CF_VERTICAL	emwin/emWin_header/SWIPELIST.h	66;"	d
SWIPELIST_CI_BK_ITEM_SEL	emwin/emWin_header/SWIPELIST.h	96;"	d
SWIPELIST_CI_BK_ITEM_UNSEL	emwin/emWin_header/SWIPELIST.h	95;"	d
SWIPELIST_CI_BK_SEP_ITEM	emwin/emWin_header/SWIPELIST.h	97;"	d
SWIPELIST_CI_ITEM_HEADER_SEL	emwin/emWin_header/SWIPELIST.h	90;"	d
SWIPELIST_CI_ITEM_HEADER_UNSEL	emwin/emWin_header/SWIPELIST.h	89;"	d
SWIPELIST_CI_ITEM_TEXT_SEL	emwin/emWin_header/SWIPELIST.h	92;"	d
SWIPELIST_CI_ITEM_TEXT_UNSEL	emwin/emWin_header/SWIPELIST.h	91;"	d
SWIPELIST_CI_SEP_ITEM_TEXT	emwin/emWin_header/SWIPELIST.h	93;"	d
SWIPELIST_FI_ITEM_HEADER	emwin/emWin_header/SWIPELIST.h	82;"	d
SWIPELIST_FI_ITEM_TEXT	emwin/emWin_header/SWIPELIST.h	83;"	d
SWIPELIST_FI_SEP_ITEM	emwin/emWin_header/SWIPELIST.h	81;"	d
SWIPELIST_H	emwin/emWin_header/SWIPELIST.h	46;"	d
SWIPELIST_Handle	emwin/emWin_header/SWIPELIST.h	/^typedef WM_HMEM SWIPELIST_Handle;$/;"	t
SWIPELIST_ID	emwin/emWin_header/WIDGET.h	119;"	d
SWIPELIST_INIT_ID	emwin/emWin_header/SWIPELIST_Private.h	113;"	d
SWIPELIST_INIT_ID	emwin/emWin_header/SWIPELIST_Private.h	115;"	d
SWIPELIST_ITEM	emwin/emWin_header/SWIPELIST_Private.h	/^} SWIPELIST_ITEM;$/;"	t	typeref:struct:__anon236
SWIPELIST_LOCK_H	emwin/emWin_header/SWIPELIST_Private.h	120;"	d
SWIPELIST_LOCK_H	emwin/emWin_header/SWIPELIST_Private.h	122;"	d
SWIPELIST_OBJ	emwin/emWin_header/SWIPELIST_Private.h	/^} SWIPELIST_OBJ;$/;"	t	typeref:struct:__anon238
SWIPELIST_PRIVATE_H	emwin/emWin_header/SWIPELIST_Private.h	46;"	d
SWIPELIST_PROPS	emwin/emWin_header/SWIPELIST_Private.h	/^} SWIPELIST_PROPS;$/;"	t	typeref:struct:__anon237
SWIPELIST_WIN	emwin/emWin_header/SWIPELIST_Private.h	/^} SWIPELIST_WIN;$/;"	t	typeref:struct:__anon235
SWITCH_USB_PSEL	drivers/fsl_clock.c	62;"	d	file:
SX1276	radio/sx1276.c	/^T_SX1276 SX1276;$/;"	v
SX1276_CADMode	radio/sx1276.c	/^void SX1276_CADMode(void)$/;"	f
SX1276_Fsk_FlushFifo	radio/sx1276-Fsk.c	/^void SX1276_Fsk_FlushFifo( void )$/;"	f
SX1276_Fsk_GetRxPacket	radio/sx1276-Fsk.c	/^INT8U SX1276_Fsk_GetRxPacket( INT8U *buffer )$/;"	f
SX1276_Fsk_Init	radio/sx1276-Fsk.c	/^void SX1276_Fsk_Init( void )$/;"	f
SX1276_Fsk_RxProcess	radio/sx1276-Fsk.c	/^INT8U SX1276_Fsk_RxProcess( void )$/;"	f
SX1276_Fsk_SendPacket_Var	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SendPacket_Var( INT8U *buffer, INT8U size )$/;"	f
SX1276_Fsk_SetAfcEn	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetAfcEn( AFC_EN afc_en )$/;"	f
SX1276_Fsk_SetCrcEn	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetCrcEn( FSK_CRC_EN fsk_crc_en )$/;"	f
SX1276_Fsk_SetDataMode	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetDataMode( DATA_MODE data_mode )$/;"	f
SX1276_Fsk_SetDataRate	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetDataRate( INT8U index )$/;"	f
SX1276_Fsk_SetMode	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetMode( FSK_CHIP_MODE fsk_chip_mode )$/;"	f
SX1276_Fsk_SetPacketFormat	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetPacketFormat( PKT_FORMAT pkt_cormat )$/;"	f
SX1276_Fsk_SetPayloadLength	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetPayloadLength( INT8U fsk_payload_tength )$/;"	f
SX1276_Fsk_SetPreambleLength	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetPreambleLength( INT16U fsk_preamble_length )$/;"	f
SX1276_Fsk_SetPreambleSize	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetPreambleSize( INT16U cnt )$/;"	f
SX1276_Fsk_SetRxBw	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetRxBw( INT8U rxbw )$/;"	f
SX1276_Fsk_SetRxBwExp	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetRxBwExp( INT8U rxbwexp )$/;"	f
SX1276_Fsk_SetRxBwMant	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetRxBwMant( INT8U rxbwmant )$/;"	f
SX1276_Fsk_SetSyncEn	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetSyncEn( SYNC_EN sync_en )$/;"	f
SX1276_Fsk_SetSyncSize	radio/sx1276-Fsk.c	/^void SX1276_Fsk_SetSyncSize( SYNC_SIZE sync_size )$/;"	f
SX1276_Fsk_StartRx	radio/sx1276-Fsk.c	/^void SX1276_Fsk_StartRx( void )$/;"	f
SX1276_Init	radio/sx1276.c	/^void SX1276_Init(RANGE_MODE mode)$/;"	f
SX1276_LoRa_GetRxPacket	radio/sx1276-lora.c	/^INT8U SX1276_LoRa_GetRxPacket(INT8U *buffer)$/;"	f
SX1276_LoRa_Init	radio/sx1276-lora.c	/^void SX1276_LoRa_Init(void)$/;"	f
SX1276_LoRa_RxProcess	radio/sx1276-lora.c	/^INT8U SX1276_LoRa_RxProcess(void)$/;"	f
SX1276_LoRa_SendDone	radio/sx1276-lora.c	/^void SX1276_LoRa_SendDone()$/;"	f
SX1276_LoRa_SendPacket	radio/sx1276-lora.c	/^void SX1276_LoRa_SendPacket(INT8U *buffer, INT8U size)$/;"	f
SX1276_LoRa_SetBW	radio/sx1276-lora.c	/^void SX1276_LoRa_SetBW(INT8U bw)$/;"	f
SX1276_LoRa_SetCRCEn	radio/sx1276-lora.c	/^void SX1276_LoRa_SetCRCEn(CRC_EN crc_en)$/;"	f
SX1276_LoRa_SetDataRate	radio/sx1276-lora.c	/^void SX1276_LoRa_SetDataRate(INT8U rate)$/;"	f
SX1276_LoRa_SetErrorCoding	radio/sx1276-lora.c	/^void SX1276_LoRa_SetErrorCoding(INT8U ec)$/;"	f
SX1276_LoRa_SetFreqHoppingPeriod	radio/sx1276-lora.c	/^void SX1276_LoRa_SetFreqHoppingPeriod(INT8U hopping_period)$/;"	f
SX1276_LoRa_SetImplicitHeaderEn	radio/sx1276-lora.c	/^void SX1276_LoRa_SetImplicitHeaderEn(IMPLICITHEADER_EN implicitheader_en)$/;"	f
SX1276_LoRa_SetLowDatarateOptimize	radio/sx1276-lora.c	/^void SX1276_LoRa_SetLowDatarateOptimize(LDOPTIMIZE_EN ldoptimize_en)$/;"	f
SX1276_LoRa_SetMode	radio/sx1276-lora.c	/^void SX1276_LoRa_SetMode(LORA_CHIP_MODE lora_chip_mode)$/;"	f
SX1276_LoRa_SetPayloadLength	radio/sx1276-lora.c	/^void SX1276_LoRa_SetPayloadLength(INT8U payload_tength)$/;"	f
SX1276_LoRa_SetReg	radio/sx1276-lora.c	/^void SX1276_LoRa_SetReg(ACCESS_REG access_reg)$/;"	f
SX1276_LoRa_SetSF6	radio/sx1276-lora.c	/^void SX1276_LoRa_SetSF6(void)$/;"	f
SX1276_LoRa_SetSpreadingFactor	radio/sx1276-lora.c	/^void SX1276_LoRa_SetSpreadingFactor(INT8U sf)$/;"	f
SX1276_LoRa_SetSymbTimeout	radio/sx1276-lora.c	/^void SX1276_LoRa_SetSymbTimeout(INT16U value)$/;"	f
SX1276_LoRa_StartRx	radio/sx1276-lora.c	/^void SX1276_LoRa_StartRx(void)$/;"	f
SX1276_Lora_SetPreambleSize	radio/sx1276-lora.c	/^void SX1276_Lora_SetPreambleSize(INT16U cnt)$/;"	f
SX1276_NSS_HIGH	radio/sx1276.h	18;"	d
SX1276_NSS_LOW	radio/sx1276.h	17;"	d
SX1276_Par_Error	radio/sx1276.c	/^void SX1276_Par_Error(uint8_t* file, uint32_t line)$/;"	f
SX1276_READ_DIO0	radio/sx1276.h	32;"	d
SX1276_READ_DIO1	radio/sx1276.h	33;"	d
SX1276_READ_DIO2	radio/sx1276.h	34;"	d
SX1276_READ_DIO3	radio/sx1276.h	35;"	d
SX1276_READ_DIO4	radio/sx1276.h	36;"	d
SX1276_RESET_HIGH	radio/sx1276.h	21;"	d
SX1276_RESET_LOW	radio/sx1276.h	20;"	d
SX1276_RX_CTRL_HIGH	radio/sx1276.h	30;"	d
SX1276_RX_CTRL_LOW	radio/sx1276.h	29;"	d
SX1276_ReadFifo	radio/sx1276.c	/^INT8U SX1276_ReadFifo(void)$/;"	f
SX1276_ReadFifoBuffer	radio/sx1276.c	/^void SX1276_ReadFifoBuffer(INT8U *buffer, INT8U size)$/;"	f
SX1276_ReadReg	radio/sx1276.c	/^INT8U SX1276_ReadReg(INT8U addr)$/;"	f
SX1276_ReceivePacket	radio/sx1276.c	/^INT8U SX1276_ReceivePacket(INT8U *buffer)$/;"	f
SX1276_Reset	radio/sx1276.c	/^void SX1276_Reset(void)$/;"	f
SX1276_SendPacket	radio/sx1276.c	/^void SX1276_SendPacket(INT8U *buffer, INT8U size)$/;"	f
SX1276_SetDatarate	radio/sx1276.c	/^void SX1276_SetDatarate(INT8U rate_index)$/;"	f
SX1276_SetFreq	radio/sx1276.c	/^void SX1276_SetFreq(INT8U FreqIndex)$/;"	f
SX1276_SetFskOok	radio/sx1276-Fsk.c	/^void SX1276_SetFskOok( TYPE type )$/;"	f
SX1276_SetMode	radio/sx1276.c	/^void SX1276_SetMode(RANGE_MODE range_mode)$/;"	f
SX1276_SetPARampTime	radio/sx1276.c	/^void SX1276_SetPARampTime(INT8U rametime)$/;"	f
SX1276_SetPower	radio/sx1276.c	/^void SX1276_SetPower(INT8U power, INT8U pin)$/;"	f
SX1276_SetPreambleSize	radio/sx1276.c	/^void SX1276_SetPreambleSize(INT16U preamble_cnt)$/;"	f
SX1276_SetRxMode	radio/sx1276.c	/^void SX1276_SetRxMode(void)$/;"	f
SX1276_SetSwitchRx	radio/sx1276.c	/^void SX1276_SetSwitchRx(void)$/;"	f
SX1276_SetSwitchTx	radio/sx1276.c	/^void SX1276_SetSwitchTx(void)$/;"	f
SX1276_SetSyncValue	radio/sx1276-Fsk.c	/^void SX1276_SetSyncValue( INT32U sync_value2, INT32U sync_value1 )$/;"	f
SX1276_SleepMode	radio/sx1276.c	/^void SX1276_SleepMode(void)$/;"	f
SX1276_TX_CTRL_HIGH	radio/sx1276.h	27;"	d
SX1276_TX_CTRL_LOW	radio/sx1276.h	26;"	d
SX1276_WriteBuffer	radio/sx1276.c	/^void SX1276_WriteBuffer(INT8U addr, INT8U *buffer, INT8U size)$/;"	f
SX1276_WriteFifo	radio/sx1276.c	/^void SX1276_WriteFifo(INT8U *buffer, INT8U size)$/;"	f
SX1276_WriteReg	radio/sx1276.c	/^void SX1276_WriteReg(INT8U addr, INT8U value)$/;"	f
SYNC_EN	radio/sx1276-Fsk.h	/^}SYNC_EN;$/;"	t	typeref:enum:__anon495
SYNC_OFF	radio/sx1276-Fsk.h	/^    SYNC_OFF                     =   0x00,       \/\/Disables the Sync word generation and detection$/;"	e	enum:__anon495
SYNC_ON	radio/sx1276-Fsk.h	/^    SYNC_ON                      =   0x01,       \/\/Enables the Sync word generation and detection$/;"	e	enum:__anon495
SYNC_SIZE	radio/sx1276-Fsk.h	/^}SYNC_SIZE;$/;"	t	typeref:enum:__anon496
SYNC_SIZE_1	radio/sx1276-Fsk.h	/^    SYNC_SIZE_1                 =   0x00,       \/\/1 sync byte$/;"	e	enum:__anon496
SYNC_SIZE_2	radio/sx1276-Fsk.h	/^	SYNC_SIZE_2                 =   0x01,       \/\/2 sync byte$/;"	e	enum:__anon496
SYNC_SIZE_3	radio/sx1276-Fsk.h	/^	SYNC_SIZE_3                 =   0x02,       \/\/3 sync byte$/;"	e	enum:__anon496
SYNC_SIZE_4	radio/sx1276-Fsk.h	/^	SYNC_SIZE_4                 =   0x03,       \/\/4 sync byte$/;"	e	enum:__anon496
SYNC_SIZE_5	radio/sx1276-Fsk.h	/^	SYNC_SIZE_5                 =   0x04,       \/\/5 sync byte$/;"	e	enum:__anon496
SYNC_SIZE_6	radio/sx1276-Fsk.h	/^	SYNC_SIZE_6                 =   0x05,       \/\/6 sync byte$/;"	e	enum:__anon496
SYNC_SIZE_7	radio/sx1276-Fsk.h	/^	SYNC_SIZE_7                 =   0x06,       \/\/7 sync byte$/;"	e	enum:__anon496
SYNC_SIZE_8	radio/sx1276-Fsk.h	/^	SYNC_SIZE_8                 =   0x07,       \/\/8 sync byte$/;"	e	enum:__anon496
SYN_RCVD	lwip/src/include/lwip/tcpbase.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	lwip/src/include/lwip/tcpbase.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYSCON	device/LPC54018.h	13315;"	d
SYSCON_ADCCLKDIV_DIV	device/LPC54018.h	12216;"	d
SYSCON_ADCCLKDIV_DIV_MASK	device/LPC54018.h	12214;"	d
SYSCON_ADCCLKDIV_DIV_SHIFT	device/LPC54018.h	12215;"	d
SYSCON_ADCCLKDIV_HALT	device/LPC54018.h	12222;"	d
SYSCON_ADCCLKDIV_HALT_MASK	device/LPC54018.h	12220;"	d
SYSCON_ADCCLKDIV_HALT_SHIFT	device/LPC54018.h	12221;"	d
SYSCON_ADCCLKDIV_REQFLAG	device/LPC54018.h	12225;"	d
SYSCON_ADCCLKDIV_REQFLAG_MASK	device/LPC54018.h	12223;"	d
SYSCON_ADCCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12224;"	d
SYSCON_ADCCLKDIV_RESET	device/LPC54018.h	12219;"	d
SYSCON_ADCCLKDIV_RESET_MASK	device/LPC54018.h	12217;"	d
SYSCON_ADCCLKDIV_RESET_SHIFT	device/LPC54018.h	12218;"	d
SYSCON_ADCCLKSEL_SEL	device/LPC54018.h	11912;"	d
SYSCON_ADCCLKSEL_SEL_MASK	device/LPC54018.h	11903;"	d
SYSCON_ADCCLKSEL_SEL_SHIFT	device/LPC54018.h	11904;"	d
SYSCON_AHBCLKCTRLCLR_CLK_CLR	device/LPC54018.h	11795;"	d
SYSCON_AHBCLKCTRLCLR_CLK_CLR_MASK	device/LPC54018.h	11793;"	d
SYSCON_AHBCLKCTRLCLR_CLK_CLR_SHIFT	device/LPC54018.h	11794;"	d
SYSCON_AHBCLKCTRLCLR_COUNT	device/LPC54018.h	11799;"	d
SYSCON_AHBCLKCTRLSET_CLK_SET	device/LPC54018.h	11785;"	d
SYSCON_AHBCLKCTRLSET_CLK_SET_MASK	device/LPC54018.h	11783;"	d
SYSCON_AHBCLKCTRLSET_CLK_SET_SHIFT	device/LPC54018.h	11784;"	d
SYSCON_AHBCLKCTRLSET_COUNT	device/LPC54018.h	11789;"	d
SYSCON_AHBCLKCTRL_ADC0	device/LPC54018.h	11772;"	d
SYSCON_AHBCLKCTRL_ADC0_MASK	device/LPC54018.h	11770;"	d
SYSCON_AHBCLKCTRL_ADC0_SHIFT	device/LPC54018.h	11771;"	d
SYSCON_AHBCLKCTRL_COUNT	device/LPC54018.h	11779;"	d
SYSCON_AHBCLKCTRL_CRC	device/LPC54018.h	11751;"	d
SYSCON_AHBCLKCTRL_CRC_MASK	device/LPC54018.h	11749;"	d
SYSCON_AHBCLKCTRL_CRC_SHIFT	device/LPC54018.h	11750;"	d
SYSCON_AHBCLKCTRL_CTIMER0	device/LPC54018.h	11769;"	d
SYSCON_AHBCLKCTRL_CTIMER0_MASK	device/LPC54018.h	11767;"	d
SYSCON_AHBCLKCTRL_CTIMER0_SHIFT	device/LPC54018.h	11768;"	d
SYSCON_AHBCLKCTRL_CTIMER1	device/LPC54018.h	11775;"	d
SYSCON_AHBCLKCTRL_CTIMER1_MASK	device/LPC54018.h	11773;"	d
SYSCON_AHBCLKCTRL_CTIMER1_SHIFT	device/LPC54018.h	11774;"	d
SYSCON_AHBCLKCTRL_CTIMER2	device/LPC54018.h	11757;"	d
SYSCON_AHBCLKCTRL_CTIMER2_MASK	device/LPC54018.h	11755;"	d
SYSCON_AHBCLKCTRL_CTIMER2_SHIFT	device/LPC54018.h	11756;"	d
SYSCON_AHBCLKCTRL_DMA	device/LPC54018.h	11745;"	d
SYSCON_AHBCLKCTRL_DMA_MASK	device/LPC54018.h	11743;"	d
SYSCON_AHBCLKCTRL_DMA_SHIFT	device/LPC54018.h	11744;"	d
SYSCON_AHBCLKCTRL_DMIC	device/LPC54018.h	11736;"	d
SYSCON_AHBCLKCTRL_DMIC_MASK	device/LPC54018.h	11734;"	d
SYSCON_AHBCLKCTRL_DMIC_SHIFT	device/LPC54018.h	11735;"	d
SYSCON_AHBCLKCTRL_EMC	device/LPC54018.h	11646;"	d
SYSCON_AHBCLKCTRL_EMC_MASK	device/LPC54018.h	11644;"	d
SYSCON_AHBCLKCTRL_EMC_SHIFT	device/LPC54018.h	11645;"	d
SYSCON_AHBCLKCTRL_ETH	device/LPC54018.h	11652;"	d
SYSCON_AHBCLKCTRL_ETH_MASK	device/LPC54018.h	11650;"	d
SYSCON_AHBCLKCTRL_ETH_SHIFT	device/LPC54018.h	11651;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM0	device/LPC54018.h	11670;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM0_MASK	device/LPC54018.h	11668;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM0_SHIFT	device/LPC54018.h	11669;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM1	device/LPC54018.h	11676;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM10	device/LPC54018.h	11754;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM10_MASK	device/LPC54018.h	11752;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM10_SHIFT	device/LPC54018.h	11753;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM1_MASK	device/LPC54018.h	11674;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM1_SHIFT	device/LPC54018.h	11675;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM2	device/LPC54018.h	11682;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM2_MASK	device/LPC54018.h	11680;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM2_SHIFT	device/LPC54018.h	11681;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM3	device/LPC54018.h	11691;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM3_MASK	device/LPC54018.h	11689;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM3_SHIFT	device/LPC54018.h	11690;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM4	device/LPC54018.h	11700;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM4_MASK	device/LPC54018.h	11698;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM4_SHIFT	device/LPC54018.h	11699;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM5	device/LPC54018.h	11709;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM5_MASK	device/LPC54018.h	11707;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM5_SHIFT	device/LPC54018.h	11708;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM6	device/LPC54018.h	11718;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM6_MASK	device/LPC54018.h	11716;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM6_SHIFT	device/LPC54018.h	11717;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM7	device/LPC54018.h	11727;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM7_MASK	device/LPC54018.h	11725;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM7_SHIFT	device/LPC54018.h	11726;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM8	device/LPC54018.h	11694;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM8_MASK	device/LPC54018.h	11692;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM8_SHIFT	device/LPC54018.h	11693;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM9	device/LPC54018.h	11703;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM9_MASK	device/LPC54018.h	11701;"	d
SYSCON_AHBCLKCTRL_FLEXCOMM9_SHIFT	device/LPC54018.h	11702;"	d
SYSCON_AHBCLKCTRL_GINT	device/LPC54018.h	11739;"	d
SYSCON_AHBCLKCTRL_GINT_MASK	device/LPC54018.h	11737;"	d
SYSCON_AHBCLKCTRL_GINT_SHIFT	device/LPC54018.h	11738;"	d
SYSCON_AHBCLKCTRL_GPIO0	device/LPC54018.h	11697;"	d
SYSCON_AHBCLKCTRL_GPIO0_MASK	device/LPC54018.h	11695;"	d
SYSCON_AHBCLKCTRL_GPIO0_SHIFT	device/LPC54018.h	11696;"	d
SYSCON_AHBCLKCTRL_GPIO1	device/LPC54018.h	11706;"	d
SYSCON_AHBCLKCTRL_GPIO1_MASK	device/LPC54018.h	11704;"	d
SYSCON_AHBCLKCTRL_GPIO1_SHIFT	device/LPC54018.h	11705;"	d
SYSCON_AHBCLKCTRL_GPIO2	device/LPC54018.h	11712;"	d
SYSCON_AHBCLKCTRL_GPIO2_MASK	device/LPC54018.h	11710;"	d
SYSCON_AHBCLKCTRL_GPIO2_SHIFT	device/LPC54018.h	11711;"	d
SYSCON_AHBCLKCTRL_GPIO3	device/LPC54018.h	11721;"	d
SYSCON_AHBCLKCTRL_GPIO3_MASK	device/LPC54018.h	11719;"	d
SYSCON_AHBCLKCTRL_GPIO3_SHIFT	device/LPC54018.h	11720;"	d
SYSCON_AHBCLKCTRL_GPIO4	device/LPC54018.h	11658;"	d
SYSCON_AHBCLKCTRL_GPIO4_MASK	device/LPC54018.h	11656;"	d
SYSCON_AHBCLKCTRL_GPIO4_SHIFT	device/LPC54018.h	11657;"	d
SYSCON_AHBCLKCTRL_GPIO5	device/LPC54018.h	11661;"	d
SYSCON_AHBCLKCTRL_GPIO5_MASK	device/LPC54018.h	11659;"	d
SYSCON_AHBCLKCTRL_GPIO5_SHIFT	device/LPC54018.h	11660;"	d
SYSCON_AHBCLKCTRL_INPUTMUX	device/LPC54018.h	11673;"	d
SYSCON_AHBCLKCTRL_INPUTMUX_MASK	device/LPC54018.h	11671;"	d
SYSCON_AHBCLKCTRL_INPUTMUX_SHIFT	device/LPC54018.h	11672;"	d
SYSCON_AHBCLKCTRL_IOCON	device/LPC54018.h	11685;"	d
SYSCON_AHBCLKCTRL_IOCON_MASK	device/LPC54018.h	11683;"	d
SYSCON_AHBCLKCTRL_IOCON_SHIFT	device/LPC54018.h	11684;"	d
SYSCON_AHBCLKCTRL_LCD	device/LPC54018.h	11619;"	d
SYSCON_AHBCLKCTRL_LCD_MASK	device/LPC54018.h	11617;"	d
SYSCON_AHBCLKCTRL_LCD_SHIFT	device/LPC54018.h	11618;"	d
SYSCON_AHBCLKCTRL_MCAN0	device/LPC54018.h	11649;"	d
SYSCON_AHBCLKCTRL_MCAN0_MASK	device/LPC54018.h	11647;"	d
SYSCON_AHBCLKCTRL_MCAN0_SHIFT	device/LPC54018.h	11648;"	d
SYSCON_AHBCLKCTRL_MCAN1	device/LPC54018.h	11655;"	d
SYSCON_AHBCLKCTRL_MCAN1_MASK	device/LPC54018.h	11653;"	d
SYSCON_AHBCLKCTRL_MCAN1_SHIFT	device/LPC54018.h	11654;"	d
SYSCON_AHBCLKCTRL_MRT	device/LPC54018.h	11610;"	d
SYSCON_AHBCLKCTRL_MRT_MASK	device/LPC54018.h	11608;"	d
SYSCON_AHBCLKCTRL_MRT_SHIFT	device/LPC54018.h	11609;"	d
SYSCON_AHBCLKCTRL_OTP	device/LPC54018.h	11679;"	d
SYSCON_AHBCLKCTRL_OTP_MASK	device/LPC54018.h	11677;"	d
SYSCON_AHBCLKCTRL_OTP_SHIFT	device/LPC54018.h	11678;"	d
SYSCON_AHBCLKCTRL_PINT	device/LPC54018.h	11730;"	d
SYSCON_AHBCLKCTRL_PINT_MASK	device/LPC54018.h	11728;"	d
SYSCON_AHBCLKCTRL_PINT_SHIFT	device/LPC54018.h	11729;"	d
SYSCON_AHBCLKCTRL_RIT	device/LPC54018.h	11613;"	d
SYSCON_AHBCLKCTRL_RIT_MASK	device/LPC54018.h	11611;"	d
SYSCON_AHBCLKCTRL_RIT_SHIFT	device/LPC54018.h	11612;"	d
SYSCON_AHBCLKCTRL_RNG	device/LPC54018.h	11688;"	d
SYSCON_AHBCLKCTRL_RNG_MASK	device/LPC54018.h	11686;"	d
SYSCON_AHBCLKCTRL_RNG_SHIFT	device/LPC54018.h	11687;"	d
SYSCON_AHBCLKCTRL_ROM	device/LPC54018.h	11616;"	d
SYSCON_AHBCLKCTRL_ROM_MASK	device/LPC54018.h	11614;"	d
SYSCON_AHBCLKCTRL_ROM_SHIFT	device/LPC54018.h	11615;"	d
SYSCON_AHBCLKCTRL_RTC	device/LPC54018.h	11763;"	d
SYSCON_AHBCLKCTRL_RTC_MASK	device/LPC54018.h	11761;"	d
SYSCON_AHBCLKCTRL_RTC_SHIFT	device/LPC54018.h	11762;"	d
SYSCON_AHBCLKCTRL_SC0	device/LPC54018.h	11742;"	d
SYSCON_AHBCLKCTRL_SC0_MASK	device/LPC54018.h	11740;"	d
SYSCON_AHBCLKCTRL_SC0_SHIFT	device/LPC54018.h	11741;"	d
SYSCON_AHBCLKCTRL_SC1	device/LPC54018.h	11748;"	d
SYSCON_AHBCLKCTRL_SC1_MASK	device/LPC54018.h	11746;"	d
SYSCON_AHBCLKCTRL_SC1_SHIFT	device/LPC54018.h	11747;"	d
SYSCON_AHBCLKCTRL_SCT0	device/LPC54018.h	11622;"	d
SYSCON_AHBCLKCTRL_SCT0_MASK	device/LPC54018.h	11620;"	d
SYSCON_AHBCLKCTRL_SCT0_SHIFT	device/LPC54018.h	11621;"	d
SYSCON_AHBCLKCTRL_SDIO	device/LPC54018.h	11625;"	d
SYSCON_AHBCLKCTRL_SDIO_MASK	device/LPC54018.h	11623;"	d
SYSCON_AHBCLKCTRL_SDIO_SHIFT	device/LPC54018.h	11624;"	d
SYSCON_AHBCLKCTRL_SHA	device/LPC54018.h	11733;"	d
SYSCON_AHBCLKCTRL_SHA_MASK	device/LPC54018.h	11731;"	d
SYSCON_AHBCLKCTRL_SHA_SHIFT	device/LPC54018.h	11732;"	d
SYSCON_AHBCLKCTRL_SPIFI	device/LPC54018.h	11664;"	d
SYSCON_AHBCLKCTRL_SPIFI_MASK	device/LPC54018.h	11662;"	d
SYSCON_AHBCLKCTRL_SPIFI_SHIFT	device/LPC54018.h	11663;"	d
SYSCON_AHBCLKCTRL_SRAM1	device/LPC54018.h	11628;"	d
SYSCON_AHBCLKCTRL_SRAM1_MASK	device/LPC54018.h	11626;"	d
SYSCON_AHBCLKCTRL_SRAM1_SHIFT	device/LPC54018.h	11627;"	d
SYSCON_AHBCLKCTRL_SRAM2	device/LPC54018.h	11631;"	d
SYSCON_AHBCLKCTRL_SRAM2_MASK	device/LPC54018.h	11629;"	d
SYSCON_AHBCLKCTRL_SRAM2_SHIFT	device/LPC54018.h	11630;"	d
SYSCON_AHBCLKCTRL_SRAM3	device/LPC54018.h	11637;"	d
SYSCON_AHBCLKCTRL_SRAM3_MASK	device/LPC54018.h	11635;"	d
SYSCON_AHBCLKCTRL_SRAM3_SHIFT	device/LPC54018.h	11636;"	d
SYSCON_AHBCLKCTRL_USB0D	device/LPC54018.h	11766;"	d
SYSCON_AHBCLKCTRL_USB0D_MASK	device/LPC54018.h	11764;"	d
SYSCON_AHBCLKCTRL_USB0D_SHIFT	device/LPC54018.h	11765;"	d
SYSCON_AHBCLKCTRL_USB0HMR	device/LPC54018.h	11715;"	d
SYSCON_AHBCLKCTRL_USB0HMR_MASK	device/LPC54018.h	11713;"	d
SYSCON_AHBCLKCTRL_USB0HMR_SHIFT	device/LPC54018.h	11714;"	d
SYSCON_AHBCLKCTRL_USB0HSL	device/LPC54018.h	11724;"	d
SYSCON_AHBCLKCTRL_USB0HSL_MASK	device/LPC54018.h	11722;"	d
SYSCON_AHBCLKCTRL_USB0HSL_SHIFT	device/LPC54018.h	11723;"	d
SYSCON_AHBCLKCTRL_USB1D	device/LPC54018.h	11640;"	d
SYSCON_AHBCLKCTRL_USB1D_MASK	device/LPC54018.h	11638;"	d
SYSCON_AHBCLKCTRL_USB1D_SHIFT	device/LPC54018.h	11639;"	d
SYSCON_AHBCLKCTRL_USB1H	device/LPC54018.h	11634;"	d
SYSCON_AHBCLKCTRL_USB1H_MASK	device/LPC54018.h	11632;"	d
SYSCON_AHBCLKCTRL_USB1H_SHIFT	device/LPC54018.h	11633;"	d
SYSCON_AHBCLKCTRL_USB1RAM	device/LPC54018.h	11643;"	d
SYSCON_AHBCLKCTRL_USB1RAM_MASK	device/LPC54018.h	11641;"	d
SYSCON_AHBCLKCTRL_USB1RAM_SHIFT	device/LPC54018.h	11642;"	d
SYSCON_AHBCLKCTRL_UTICK	device/LPC54018.h	11667;"	d
SYSCON_AHBCLKCTRL_UTICK_MASK	device/LPC54018.h	11665;"	d
SYSCON_AHBCLKCTRL_UTICK_SHIFT	device/LPC54018.h	11666;"	d
SYSCON_AHBCLKCTRL_WWDT	device/LPC54018.h	11760;"	d
SYSCON_AHBCLKCTRL_WWDT_MASK	device/LPC54018.h	11758;"	d
SYSCON_AHBCLKCTRL_WWDT_SHIFT	device/LPC54018.h	11759;"	d
SYSCON_AHBCLKDIV_DIV	device/LPC54018.h	12158;"	d
SYSCON_AHBCLKDIV_DIV_MASK	device/LPC54018.h	12156;"	d
SYSCON_AHBCLKDIV_DIV_SHIFT	device/LPC54018.h	12157;"	d
SYSCON_AHBCLKDIV_REQFLAG	device/LPC54018.h	12161;"	d
SYSCON_AHBCLKDIV_REQFLAG_MASK	device/LPC54018.h	12159;"	d
SYSCON_AHBCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12160;"	d
SYSCON_AHBMATPRIO_PRI_DCODE	device/LPC54018.h	11306;"	d
SYSCON_AHBMATPRIO_PRI_DCODE_MASK	device/LPC54018.h	11304;"	d
SYSCON_AHBMATPRIO_PRI_DCODE_SHIFT	device/LPC54018.h	11305;"	d
SYSCON_AHBMATPRIO_PRI_DMA	device/LPC54018.h	11312;"	d
SYSCON_AHBMATPRIO_PRI_DMA_MASK	device/LPC54018.h	11310;"	d
SYSCON_AHBMATPRIO_PRI_DMA_SHIFT	device/LPC54018.h	11311;"	d
SYSCON_AHBMATPRIO_PRI_ETH	device/LPC54018.h	11315;"	d
SYSCON_AHBMATPRIO_PRI_ETH_MASK	device/LPC54018.h	11313;"	d
SYSCON_AHBMATPRIO_PRI_ETH_SHIFT	device/LPC54018.h	11314;"	d
SYSCON_AHBMATPRIO_PRI_ICODE	device/LPC54018.h	11303;"	d
SYSCON_AHBMATPRIO_PRI_ICODE_MASK	device/LPC54018.h	11301;"	d
SYSCON_AHBMATPRIO_PRI_ICODE_SHIFT	device/LPC54018.h	11302;"	d
SYSCON_AHBMATPRIO_PRI_LCD	device/LPC54018.h	11318;"	d
SYSCON_AHBMATPRIO_PRI_LCD_MASK	device/LPC54018.h	11316;"	d
SYSCON_AHBMATPRIO_PRI_LCD_SHIFT	device/LPC54018.h	11317;"	d
SYSCON_AHBMATPRIO_PRI_MCAN1	device/LPC54018.h	11330;"	d
SYSCON_AHBMATPRIO_PRI_MCAN1_MASK	device/LPC54018.h	11328;"	d
SYSCON_AHBMATPRIO_PRI_MCAN1_SHIFT	device/LPC54018.h	11329;"	d
SYSCON_AHBMATPRIO_PRI_MCAN2	device/LPC54018.h	11333;"	d
SYSCON_AHBMATPRIO_PRI_MCAN2_MASK	device/LPC54018.h	11331;"	d
SYSCON_AHBMATPRIO_PRI_MCAN2_SHIFT	device/LPC54018.h	11332;"	d
SYSCON_AHBMATPRIO_PRI_SDIO	device/LPC54018.h	11327;"	d
SYSCON_AHBMATPRIO_PRI_SDIO_MASK	device/LPC54018.h	11325;"	d
SYSCON_AHBMATPRIO_PRI_SDIO_SHIFT	device/LPC54018.h	11326;"	d
SYSCON_AHBMATPRIO_PRI_SYS	device/LPC54018.h	11309;"	d
SYSCON_AHBMATPRIO_PRI_SYS_MASK	device/LPC54018.h	11307;"	d
SYSCON_AHBMATPRIO_PRI_SYS_SHIFT	device/LPC54018.h	11308;"	d
SYSCON_AHBMATPRIO_PRI_USB0	device/LPC54018.h	11321;"	d
SYSCON_AHBMATPRIO_PRI_USB0_MASK	device/LPC54018.h	11319;"	d
SYSCON_AHBMATPRIO_PRI_USB0_SHIFT	device/LPC54018.h	11320;"	d
SYSCON_AHBMATPRIO_PRI_USB1	device/LPC54018.h	11324;"	d
SYSCON_AHBMATPRIO_PRI_USB1_MASK	device/LPC54018.h	11322;"	d
SYSCON_AHBMATPRIO_PRI_USB1_SHIFT	device/LPC54018.h	11323;"	d
SYSCON_ARMTRACECLKDIV_DIV	device/LPC54018.h	12078;"	d
SYSCON_ARMTRACECLKDIV_DIV_MASK	device/LPC54018.h	12076;"	d
SYSCON_ARMTRACECLKDIV_DIV_SHIFT	device/LPC54018.h	12077;"	d
SYSCON_ARMTRACECLKDIV_HALT	device/LPC54018.h	12084;"	d
SYSCON_ARMTRACECLKDIV_HALT_MASK	device/LPC54018.h	12082;"	d
SYSCON_ARMTRACECLKDIV_HALT_SHIFT	device/LPC54018.h	12083;"	d
SYSCON_ARMTRACECLKDIV_REQFLAG	device/LPC54018.h	12087;"	d
SYSCON_ARMTRACECLKDIV_REQFLAG_MASK	device/LPC54018.h	12085;"	d
SYSCON_ARMTRACECLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12086;"	d
SYSCON_ARMTRACECLKDIV_RESET	device/LPC54018.h	12081;"	d
SYSCON_ARMTRACECLKDIV_RESET_MASK	device/LPC54018.h	12079;"	d
SYSCON_ARMTRACECLKDIV_RESET_SHIFT	device/LPC54018.h	12080;"	d
SYSCON_ASYNCAPBCTRL_ENABLE	device/LPC54018.h	11367;"	d
SYSCON_ASYNCAPBCTRL_ENABLE_MASK	device/LPC54018.h	11361;"	d
SYSCON_ASYNCAPBCTRL_ENABLE_SHIFT	device/LPC54018.h	11362;"	d
SYSCON_AUDPLLCLKSEL_SEL	device/LPC54018.h	11883;"	d
SYSCON_AUDPLLCLKSEL_SEL_MASK	device/LPC54018.h	11876;"	d
SYSCON_AUDPLLCLKSEL_SEL_SHIFT	device/LPC54018.h	11877;"	d
SYSCON_AUDPLLCTRL_BYPASS	device/LPC54018.h	12696;"	d
SYSCON_AUDPLLCTRL_BYPASS_MASK	device/LPC54018.h	12690;"	d
SYSCON_AUDPLLCTRL_BYPASS_SHIFT	device/LPC54018.h	12691;"	d
SYSCON_AUDPLLCTRL_DIRECTI	device/LPC54018.h	12702;"	d
SYSCON_AUDPLLCTRL_DIRECTI_MASK	device/LPC54018.h	12700;"	d
SYSCON_AUDPLLCTRL_DIRECTI_SHIFT	device/LPC54018.h	12701;"	d
SYSCON_AUDPLLCTRL_DIRECTO	device/LPC54018.h	12709;"	d
SYSCON_AUDPLLCTRL_DIRECTO_MASK	device/LPC54018.h	12703;"	d
SYSCON_AUDPLLCTRL_DIRECTO_SHIFT	device/LPC54018.h	12704;"	d
SYSCON_AUDPLLCTRL_SELI	device/LPC54018.h	12686;"	d
SYSCON_AUDPLLCTRL_SELI_MASK	device/LPC54018.h	12684;"	d
SYSCON_AUDPLLCTRL_SELI_SHIFT	device/LPC54018.h	12685;"	d
SYSCON_AUDPLLCTRL_SELP	device/LPC54018.h	12689;"	d
SYSCON_AUDPLLCTRL_SELP_MASK	device/LPC54018.h	12687;"	d
SYSCON_AUDPLLCTRL_SELP_SHIFT	device/LPC54018.h	12688;"	d
SYSCON_AUDPLLCTRL_SELR	device/LPC54018.h	12683;"	d
SYSCON_AUDPLLCTRL_SELR_MASK	device/LPC54018.h	12681;"	d
SYSCON_AUDPLLCTRL_SELR_SHIFT	device/LPC54018.h	12682;"	d
SYSCON_AUDPLLCTRL_UPLIMOFF	device/LPC54018.h	12699;"	d
SYSCON_AUDPLLCTRL_UPLIMOFF_MASK	device/LPC54018.h	12697;"	d
SYSCON_AUDPLLCTRL_UPLIMOFF_SHIFT	device/LPC54018.h	12698;"	d
SYSCON_AUDPLLFRAC_CTRL	device/LPC54018.h	12753;"	d
SYSCON_AUDPLLFRAC_CTRL_MASK	device/LPC54018.h	12751;"	d
SYSCON_AUDPLLFRAC_CTRL_SHIFT	device/LPC54018.h	12752;"	d
SYSCON_AUDPLLFRAC_REQ	device/LPC54018.h	12756;"	d
SYSCON_AUDPLLFRAC_REQ_MASK	device/LPC54018.h	12754;"	d
SYSCON_AUDPLLFRAC_REQ_SHIFT	device/LPC54018.h	12755;"	d
SYSCON_AUDPLLFRAC_SEL_EXT	device/LPC54018.h	12759;"	d
SYSCON_AUDPLLFRAC_SEL_EXT_MASK	device/LPC54018.h	12757;"	d
SYSCON_AUDPLLFRAC_SEL_EXT_SHIFT	device/LPC54018.h	12758;"	d
SYSCON_AUDPLLMDEC_MDEC	device/LPC54018.h	12743;"	d
SYSCON_AUDPLLMDEC_MDEC_MASK	device/LPC54018.h	12741;"	d
SYSCON_AUDPLLMDEC_MDEC_SHIFT	device/LPC54018.h	12742;"	d
SYSCON_AUDPLLMDEC_MREQ	device/LPC54018.h	12746;"	d
SYSCON_AUDPLLMDEC_MREQ_MASK	device/LPC54018.h	12744;"	d
SYSCON_AUDPLLMDEC_MREQ_SHIFT	device/LPC54018.h	12745;"	d
SYSCON_AUDPLLNDEC_NDEC	device/LPC54018.h	12723;"	d
SYSCON_AUDPLLNDEC_NDEC_MASK	device/LPC54018.h	12721;"	d
SYSCON_AUDPLLNDEC_NDEC_SHIFT	device/LPC54018.h	12722;"	d
SYSCON_AUDPLLNDEC_NREQ	device/LPC54018.h	12726;"	d
SYSCON_AUDPLLNDEC_NREQ_MASK	device/LPC54018.h	12724;"	d
SYSCON_AUDPLLNDEC_NREQ_SHIFT	device/LPC54018.h	12725;"	d
SYSCON_AUDPLLPDEC_PDEC	device/LPC54018.h	12733;"	d
SYSCON_AUDPLLPDEC_PDEC_MASK	device/LPC54018.h	12731;"	d
SYSCON_AUDPLLPDEC_PDEC_SHIFT	device/LPC54018.h	12732;"	d
SYSCON_AUDPLLPDEC_PREQ	device/LPC54018.h	12736;"	d
SYSCON_AUDPLLPDEC_PREQ_MASK	device/LPC54018.h	12734;"	d
SYSCON_AUDPLLPDEC_PREQ_SHIFT	device/LPC54018.h	12735;"	d
SYSCON_AUDPLLSTAT_LOCK	device/LPC54018.h	12716;"	d
SYSCON_AUDPLLSTAT_LOCK_MASK	device/LPC54018.h	12714;"	d
SYSCON_AUDPLLSTAT_LOCK_SHIFT	device/LPC54018.h	12715;"	d
SYSCON_AUTOCGOR_RAM0X	device/LPC54018.h	13230;"	d
SYSCON_AUTOCGOR_RAM0X_MASK	device/LPC54018.h	13228;"	d
SYSCON_AUTOCGOR_RAM0X_SHIFT	device/LPC54018.h	13229;"	d
SYSCON_AUTOCGOR_RAM1	device/LPC54018.h	13233;"	d
SYSCON_AUTOCGOR_RAM1_MASK	device/LPC54018.h	13231;"	d
SYSCON_AUTOCGOR_RAM1_SHIFT	device/LPC54018.h	13232;"	d
SYSCON_AUTOCGOR_RAM2	device/LPC54018.h	13236;"	d
SYSCON_AUTOCGOR_RAM2_MASK	device/LPC54018.h	13234;"	d
SYSCON_AUTOCGOR_RAM2_SHIFT	device/LPC54018.h	13235;"	d
SYSCON_AUTOCGOR_RAM3	device/LPC54018.h	13239;"	d
SYSCON_AUTOCGOR_RAM3_MASK	device/LPC54018.h	13237;"	d
SYSCON_AUTOCGOR_RAM3_SHIFT	device/LPC54018.h	13238;"	d
SYSCON_BASE	device/LPC54018.h	13313;"	d
SYSCON_BASE_ADDRS	device/LPC54018.h	13317;"	d
SYSCON_BASE_PTRS	device/LPC54018.h	13319;"	d
SYSCON_BODCTRL_BODINTENA	device/LPC54018.h	13296;"	d
SYSCON_BODCTRL_BODINTENA_MASK	device/LPC54018.h	13290;"	d
SYSCON_BODCTRL_BODINTENA_SHIFT	device/LPC54018.h	13291;"	d
SYSCON_BODCTRL_BODINTLEV	device/LPC54018.h	13289;"	d
SYSCON_BODCTRL_BODINTLEV_MASK	device/LPC54018.h	13281;"	d
SYSCON_BODCTRL_BODINTLEV_SHIFT	device/LPC54018.h	13282;"	d
SYSCON_BODCTRL_BODINTSTAT	device/LPC54018.h	13302;"	d
SYSCON_BODCTRL_BODINTSTAT_MASK	device/LPC54018.h	13300;"	d
SYSCON_BODCTRL_BODINTSTAT_SHIFT	device/LPC54018.h	13301;"	d
SYSCON_BODCTRL_BODRSTENA	device/LPC54018.h	13280;"	d
SYSCON_BODCTRL_BODRSTENA_MASK	device/LPC54018.h	13274;"	d
SYSCON_BODCTRL_BODRSTENA_SHIFT	device/LPC54018.h	13275;"	d
SYSCON_BODCTRL_BODRSTLEV	device/LPC54018.h	13273;"	d
SYSCON_BODCTRL_BODRSTLEV_MASK	device/LPC54018.h	13265;"	d
SYSCON_BODCTRL_BODRSTLEV_SHIFT	device/LPC54018.h	13266;"	d
SYSCON_BODCTRL_BODRSTSTAT	device/LPC54018.h	13299;"	d
SYSCON_BODCTRL_BODRSTSTAT_MASK	device/LPC54018.h	13297;"	d
SYSCON_BODCTRL_BODRSTSTAT_SHIFT	device/LPC54018.h	13298;"	d
SYSCON_CAN0CLKDIV_DIV	device/LPC54018.h	12094;"	d
SYSCON_CAN0CLKDIV_DIV_MASK	device/LPC54018.h	12092;"	d
SYSCON_CAN0CLKDIV_DIV_SHIFT	device/LPC54018.h	12093;"	d
SYSCON_CAN0CLKDIV_HALT	device/LPC54018.h	12100;"	d
SYSCON_CAN0CLKDIV_HALT_MASK	device/LPC54018.h	12098;"	d
SYSCON_CAN0CLKDIV_HALT_SHIFT	device/LPC54018.h	12099;"	d
SYSCON_CAN0CLKDIV_REQFLAG	device/LPC54018.h	12103;"	d
SYSCON_CAN0CLKDIV_REQFLAG_MASK	device/LPC54018.h	12101;"	d
SYSCON_CAN0CLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12102;"	d
SYSCON_CAN0CLKDIV_RESET	device/LPC54018.h	12097;"	d
SYSCON_CAN0CLKDIV_RESET_MASK	device/LPC54018.h	12095;"	d
SYSCON_CAN0CLKDIV_RESET_SHIFT	device/LPC54018.h	12096;"	d
SYSCON_CAN1CLKDIV_DIV	device/LPC54018.h	12110;"	d
SYSCON_CAN1CLKDIV_DIV_MASK	device/LPC54018.h	12108;"	d
SYSCON_CAN1CLKDIV_DIV_SHIFT	device/LPC54018.h	12109;"	d
SYSCON_CAN1CLKDIV_HALT	device/LPC54018.h	12116;"	d
SYSCON_CAN1CLKDIV_HALT_MASK	device/LPC54018.h	12114;"	d
SYSCON_CAN1CLKDIV_HALT_SHIFT	device/LPC54018.h	12115;"	d
SYSCON_CAN1CLKDIV_REQFLAG	device/LPC54018.h	12119;"	d
SYSCON_CAN1CLKDIV_REQFLAG_MASK	device/LPC54018.h	12117;"	d
SYSCON_CAN1CLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12118;"	d
SYSCON_CAN1CLKDIV_RESET	device/LPC54018.h	12113;"	d
SYSCON_CAN1CLKDIV_RESET_MASK	device/LPC54018.h	12111;"	d
SYSCON_CAN1CLKDIV_RESET_SHIFT	device/LPC54018.h	12112;"	d
SYSCON_CLKOUTDIV_DIV	device/LPC54018.h	12168;"	d
SYSCON_CLKOUTDIV_DIV_MASK	device/LPC54018.h	12166;"	d
SYSCON_CLKOUTDIV_DIV_SHIFT	device/LPC54018.h	12167;"	d
SYSCON_CLKOUTDIV_HALT	device/LPC54018.h	12174;"	d
SYSCON_CLKOUTDIV_HALT_MASK	device/LPC54018.h	12172;"	d
SYSCON_CLKOUTDIV_HALT_SHIFT	device/LPC54018.h	12173;"	d
SYSCON_CLKOUTDIV_REQFLAG	device/LPC54018.h	12177;"	d
SYSCON_CLKOUTDIV_REQFLAG_MASK	device/LPC54018.h	12175;"	d
SYSCON_CLKOUTDIV_REQFLAG_SHIFT	device/LPC54018.h	12176;"	d
SYSCON_CLKOUTDIV_RESET	device/LPC54018.h	12171;"	d
SYSCON_CLKOUTDIV_RESET_MASK	device/LPC54018.h	12169;"	d
SYSCON_CLKOUTDIV_RESET_SHIFT	device/LPC54018.h	12170;"	d
SYSCON_CLKOUTSELA_SEL	device/LPC54018.h	11858;"	d
SYSCON_CLKOUTSELA_SEL_MASK	device/LPC54018.h	11846;"	d
SYSCON_CLKOUTSELA_SEL_SHIFT	device/LPC54018.h	11847;"	d
SYSCON_DEVICE_ID0_PARTID	device/LPC54018.h	13253;"	d
SYSCON_DEVICE_ID0_PARTID_MASK	device/LPC54018.h	13251;"	d
SYSCON_DEVICE_ID0_PARTID_SHIFT	device/LPC54018.h	13252;"	d
SYSCON_DEVICE_ID1_REVID	device/LPC54018.h	13260;"	d
SYSCON_DEVICE_ID1_REVID_MASK	device/LPC54018.h	13258;"	d
SYSCON_DEVICE_ID1_REVID_SHIFT	device/LPC54018.h	13259;"	d
SYSCON_DMICCLKDIV_DIV	device/LPC54018.h	12274;"	d
SYSCON_DMICCLKDIV_DIV_MASK	device/LPC54018.h	12272;"	d
SYSCON_DMICCLKDIV_DIV_SHIFT	device/LPC54018.h	12273;"	d
SYSCON_DMICCLKDIV_HALT	device/LPC54018.h	12280;"	d
SYSCON_DMICCLKDIV_HALT_MASK	device/LPC54018.h	12278;"	d
SYSCON_DMICCLKDIV_HALT_SHIFT	device/LPC54018.h	12279;"	d
SYSCON_DMICCLKDIV_REQFLAG	device/LPC54018.h	12283;"	d
SYSCON_DMICCLKDIV_REQFLAG_MASK	device/LPC54018.h	12281;"	d
SYSCON_DMICCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12282;"	d
SYSCON_DMICCLKDIV_RESET	device/LPC54018.h	12277;"	d
SYSCON_DMICCLKDIV_RESET_MASK	device/LPC54018.h	12275;"	d
SYSCON_DMICCLKDIV_RESET_SHIFT	device/LPC54018.h	12276;"	d
SYSCON_DMICCLKSEL_SEL	device/LPC54018.h	12013;"	d
SYSCON_DMICCLKSEL_SEL_MASK	device/LPC54018.h	12002;"	d
SYSCON_DMICCLKSEL_SEL_SHIFT	device/LPC54018.h	12003;"	d
SYSCON_EMCCAL_CALVALUE	device/LPC54018.h	12471;"	d
SYSCON_EMCCAL_CALVALUE_MASK	device/LPC54018.h	12469;"	d
SYSCON_EMCCAL_CALVALUE_SHIFT	device/LPC54018.h	12470;"	d
SYSCON_EMCCAL_DONE	device/LPC54018.h	12477;"	d
SYSCON_EMCCAL_DONE_MASK	device/LPC54018.h	12475;"	d
SYSCON_EMCCAL_DONE_SHIFT	device/LPC54018.h	12476;"	d
SYSCON_EMCCAL_START	device/LPC54018.h	12474;"	d
SYSCON_EMCCAL_START_MASK	device/LPC54018.h	12472;"	d
SYSCON_EMCCAL_START_SHIFT	device/LPC54018.h	12473;"	d
SYSCON_EMCCLKDIV_DIV	device/LPC54018.h	12338;"	d
SYSCON_EMCCLKDIV_DIV_MASK	device/LPC54018.h	12336;"	d
SYSCON_EMCCLKDIV_DIV_SHIFT	device/LPC54018.h	12337;"	d
SYSCON_EMCCLKDIV_HALT	device/LPC54018.h	12344;"	d
SYSCON_EMCCLKDIV_HALT_MASK	device/LPC54018.h	12342;"	d
SYSCON_EMCCLKDIV_HALT_SHIFT	device/LPC54018.h	12343;"	d
SYSCON_EMCCLKDIV_REQFLAG	device/LPC54018.h	12347;"	d
SYSCON_EMCCLKDIV_REQFLAG_MASK	device/LPC54018.h	12345;"	d
SYSCON_EMCCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12346;"	d
SYSCON_EMCCLKDIV_RESET	device/LPC54018.h	12341;"	d
SYSCON_EMCCLKDIV_RESET_MASK	device/LPC54018.h	12339;"	d
SYSCON_EMCCLKDIV_RESET_SHIFT	device/LPC54018.h	12340;"	d
SYSCON_EMCDYCTRL_CMD_DELAY	device/LPC54018.h	12461;"	d
SYSCON_EMCDYCTRL_CMD_DELAY_MASK	device/LPC54018.h	12459;"	d
SYSCON_EMCDYCTRL_CMD_DELAY_SHIFT	device/LPC54018.h	12460;"	d
SYSCON_EMCDYCTRL_FBCLK_DELAY	device/LPC54018.h	12464;"	d
SYSCON_EMCDYCTRL_FBCLK_DELAY_MASK	device/LPC54018.h	12462;"	d
SYSCON_EMCDYCTRL_FBCLK_DELAY_SHIFT	device/LPC54018.h	12463;"	d
SYSCON_EMCSYSCTRL_EMCBC	device/LPC54018.h	12451;"	d
SYSCON_EMCSYSCTRL_EMCBC_MASK	device/LPC54018.h	12449;"	d
SYSCON_EMCSYSCTRL_EMCBC_SHIFT	device/LPC54018.h	12450;"	d
SYSCON_EMCSYSCTRL_EMCFBCLKINSEL	device/LPC54018.h	12454;"	d
SYSCON_EMCSYSCTRL_EMCFBCLKINSEL_MASK	device/LPC54018.h	12452;"	d
SYSCON_EMCSYSCTRL_EMCFBCLKINSEL_SHIFT	device/LPC54018.h	12453;"	d
SYSCON_EMCSYSCTRL_EMCRD	device/LPC54018.h	12448;"	d
SYSCON_EMCSYSCTRL_EMCRD_MASK	device/LPC54018.h	12446;"	d
SYSCON_EMCSYSCTRL_EMCRD_SHIFT	device/LPC54018.h	12447;"	d
SYSCON_EMCSYSCTRL_EMCSC	device/LPC54018.h	12445;"	d
SYSCON_EMCSYSCTRL_EMCSC_MASK	device/LPC54018.h	12443;"	d
SYSCON_EMCSYSCTRL_EMCSC_SHIFT	device/LPC54018.h	12444;"	d
SYSCON_ETHPHYSEL_PHY_SEL	device/LPC54018.h	12484;"	d
SYSCON_ETHPHYSEL_PHY_SEL_MASK	device/LPC54018.h	12482;"	d
SYSCON_ETHPHYSEL_PHY_SEL_SHIFT	device/LPC54018.h	12483;"	d
SYSCON_ETHSBDCTRL_SBD_CTRL	device/LPC54018.h	12491;"	d
SYSCON_ETHSBDCTRL_SBD_CTRL_MASK	device/LPC54018.h	12489;"	d
SYSCON_ETHSBDCTRL_SBD_CTRL_SHIFT	device/LPC54018.h	12490;"	d
SYSCON_FCLKSEL10_SEL	device/LPC54018.h	11971;"	d
SYSCON_FCLKSEL10_SEL_MASK	device/LPC54018.h	11961;"	d
SYSCON_FCLKSEL10_SEL_SHIFT	device/LPC54018.h	11962;"	d
SYSCON_FCLKSEL_COUNT	device/LPC54018.h	11957;"	d
SYSCON_FCLKSEL_SEL	device/LPC54018.h	11953;"	d
SYSCON_FCLKSEL_SEL_MASK	device/LPC54018.h	11943;"	d
SYSCON_FCLKSEL_SEL_SHIFT	device/LPC54018.h	11944;"	d
SYSCON_FREQMECTRL_CAPVAL	device/LPC54018.h	12399;"	d
SYSCON_FREQMECTRL_CAPVAL_MASK	device/LPC54018.h	12397;"	d
SYSCON_FREQMECTRL_CAPVAL_SHIFT	device/LPC54018.h	12398;"	d
SYSCON_FREQMECTRL_PROG	device/LPC54018.h	12402;"	d
SYSCON_FREQMECTRL_PROG_MASK	device/LPC54018.h	12400;"	d
SYSCON_FREQMECTRL_PROG_SHIFT	device/LPC54018.h	12401;"	d
SYSCON_FRGCLKSEL_SEL	device/LPC54018.h	11997;"	d
SYSCON_FRGCLKSEL_SEL_MASK	device/LPC54018.h	11988;"	d
SYSCON_FRGCLKSEL_SEL_SHIFT	device/LPC54018.h	11989;"	d
SYSCON_FRGCTRL_DIV	device/LPC54018.h	12264;"	d
SYSCON_FRGCTRL_DIV_MASK	device/LPC54018.h	12262;"	d
SYSCON_FRGCTRL_DIV_SHIFT	device/LPC54018.h	12263;"	d
SYSCON_FRGCTRL_MULT	device/LPC54018.h	12267;"	d
SYSCON_FRGCTRL_MULT_MASK	device/LPC54018.h	12265;"	d
SYSCON_FRGCTRL_MULT_SHIFT	device/LPC54018.h	12266;"	d
SYSCON_FROCTRL_FREQTRIM	device/LPC54018.h	12536;"	d
SYSCON_FROCTRL_FREQTRIM_MASK	device/LPC54018.h	12534;"	d
SYSCON_FROCTRL_FREQTRIM_SHIFT	device/LPC54018.h	12535;"	d
SYSCON_FROCTRL_HSPDCLK	device/LPC54018.h	12545;"	d
SYSCON_FROCTRL_HSPDCLK_MASK	device/LPC54018.h	12543;"	d
SYSCON_FROCTRL_HSPDCLK_SHIFT	device/LPC54018.h	12544;"	d
SYSCON_FROCTRL_SEL	device/LPC54018.h	12533;"	d
SYSCON_FROCTRL_SEL_MASK	device/LPC54018.h	12531;"	d
SYSCON_FROCTRL_SEL_SHIFT	device/LPC54018.h	12532;"	d
SYSCON_FROCTRL_USBCLKADJ	device/LPC54018.h	12539;"	d
SYSCON_FROCTRL_USBCLKADJ_MASK	device/LPC54018.h	12537;"	d
SYSCON_FROCTRL_USBCLKADJ_SHIFT	device/LPC54018.h	12538;"	d
SYSCON_FROCTRL_USBMODCHG	device/LPC54018.h	12542;"	d
SYSCON_FROCTRL_USBMODCHG_MASK	device/LPC54018.h	12540;"	d
SYSCON_FROCTRL_USBMODCHG_SHIFT	device/LPC54018.h	12541;"	d
SYSCON_FROHFDIV_DIV	device/LPC54018.h	12184;"	d
SYSCON_FROHFDIV_DIV_MASK	device/LPC54018.h	12182;"	d
SYSCON_FROHFDIV_DIV_SHIFT	device/LPC54018.h	12183;"	d
SYSCON_FROHFDIV_HALT	device/LPC54018.h	12190;"	d
SYSCON_FROHFDIV_HALT_MASK	device/LPC54018.h	12188;"	d
SYSCON_FROHFDIV_HALT_SHIFT	device/LPC54018.h	12189;"	d
SYSCON_FROHFDIV_REQFLAG	device/LPC54018.h	12193;"	d
SYSCON_FROHFDIV_REQFLAG_MASK	device/LPC54018.h	12191;"	d
SYSCON_FROHFDIV_REQFLAG_SHIFT	device/LPC54018.h	12192;"	d
SYSCON_FROHFDIV_RESET	device/LPC54018.h	12187;"	d
SYSCON_FROHFDIV_RESET_MASK	device/LPC54018.h	12185;"	d
SYSCON_FROHFDIV_RESET_SHIFT	device/LPC54018.h	12186;"	d
SYSCON_HWWAKE_FCWAKE	device/LPC54018.h	13217;"	d
SYSCON_HWWAKE_FCWAKE_MASK	device/LPC54018.h	13215;"	d
SYSCON_HWWAKE_FCWAKE_SHIFT	device/LPC54018.h	13216;"	d
SYSCON_HWWAKE_FORCEWAKE	device/LPC54018.h	13214;"	d
SYSCON_HWWAKE_FORCEWAKE_MASK	device/LPC54018.h	13212;"	d
SYSCON_HWWAKE_FORCEWAKE_SHIFT	device/LPC54018.h	13213;"	d
SYSCON_HWWAKE_WAKEDMA	device/LPC54018.h	13223;"	d
SYSCON_HWWAKE_WAKEDMA_MASK	device/LPC54018.h	13221;"	d
SYSCON_HWWAKE_WAKEDMA_SHIFT	device/LPC54018.h	13222;"	d
SYSCON_HWWAKE_WAKEDMIC	device/LPC54018.h	13220;"	d
SYSCON_HWWAKE_WAKEDMIC_MASK	device/LPC54018.h	13218;"	d
SYSCON_HWWAKE_WAKEDMIC_SHIFT	device/LPC54018.h	13219;"	d
SYSCON_JTAGIDCODE_JTAGID	device/LPC54018.h	13246;"	d
SYSCON_JTAGIDCODE_JTAGID_MASK	device/LPC54018.h	13244;"	d
SYSCON_JTAGIDCODE_JTAGID_SHIFT	device/LPC54018.h	13245;"	d
SYSCON_KEYMUXSEL_LOCK	device/LPC54018.h	12526;"	d
SYSCON_KEYMUXSEL_LOCK_MASK	device/LPC54018.h	12524;"	d
SYSCON_KEYMUXSEL_LOCK_SHIFT	device/LPC54018.h	12525;"	d
SYSCON_KEYMUXSEL_SEL	device/LPC54018.h	12523;"	d
SYSCON_KEYMUXSEL_SEL_MASK	device/LPC54018.h	12521;"	d
SYSCON_KEYMUXSEL_SEL_SHIFT	device/LPC54018.h	12522;"	d
SYSCON_LCDCLKDIV_DIV	device/LPC54018.h	12306;"	d
SYSCON_LCDCLKDIV_DIV_MASK	device/LPC54018.h	12304;"	d
SYSCON_LCDCLKDIV_DIV_SHIFT	device/LPC54018.h	12305;"	d
SYSCON_LCDCLKDIV_HALT	device/LPC54018.h	12312;"	d
SYSCON_LCDCLKDIV_HALT_MASK	device/LPC54018.h	12310;"	d
SYSCON_LCDCLKDIV_HALT_SHIFT	device/LPC54018.h	12311;"	d
SYSCON_LCDCLKDIV_REQFLAG	device/LPC54018.h	12315;"	d
SYSCON_LCDCLKDIV_REQFLAG_MASK	device/LPC54018.h	12313;"	d
SYSCON_LCDCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12314;"	d
SYSCON_LCDCLKDIV_RESET	device/LPC54018.h	12309;"	d
SYSCON_LCDCLKDIV_RESET_MASK	device/LPC54018.h	12307;"	d
SYSCON_LCDCLKDIV_RESET_SHIFT	device/LPC54018.h	12308;"	d
SYSCON_LCDCLKSEL_SEL	device/LPC54018.h	12040;"	d
SYSCON_LCDCLKSEL_SEL_MASK	device/LPC54018.h	12032;"	d
SYSCON_LCDCLKSEL_SEL_SHIFT	device/LPC54018.h	12033;"	d
SYSCON_MAINCLKSELA_SEL	device/LPC54018.h	11828;"	d
SYSCON_MAINCLKSELA_SEL_MASK	device/LPC54018.h	11820;"	d
SYSCON_MAINCLKSELA_SEL_SHIFT	device/LPC54018.h	11821;"	d
SYSCON_MAINCLKSELB_SEL	device/LPC54018.h	11841;"	d
SYSCON_MAINCLKSELB_SEL_MASK	device/LPC54018.h	11833;"	d
SYSCON_MAINCLKSELB_SEL_SHIFT	device/LPC54018.h	11834;"	d
SYSCON_MCLKCLKSEL_SEL	device/LPC54018.h	11983;"	d
SYSCON_MCLKCLKSEL_SEL_MASK	device/LPC54018.h	11976;"	d
SYSCON_MCLKCLKSEL_SEL_SHIFT	device/LPC54018.h	11977;"	d
SYSCON_MCLKDIV_DIV	device/LPC54018.h	12290;"	d
SYSCON_MCLKDIV_DIV_MASK	device/LPC54018.h	12288;"	d
SYSCON_MCLKDIV_DIV_SHIFT	device/LPC54018.h	12289;"	d
SYSCON_MCLKDIV_HALT	device/LPC54018.h	12296;"	d
SYSCON_MCLKDIV_HALT_MASK	device/LPC54018.h	12294;"	d
SYSCON_MCLKDIV_HALT_SHIFT	device/LPC54018.h	12295;"	d
SYSCON_MCLKDIV_REQFLAG	device/LPC54018.h	12299;"	d
SYSCON_MCLKDIV_REQFLAG_MASK	device/LPC54018.h	12297;"	d
SYSCON_MCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12298;"	d
SYSCON_MCLKDIV_RESET	device/LPC54018.h	12293;"	d
SYSCON_MCLKDIV_RESET_MASK	device/LPC54018.h	12291;"	d
SYSCON_MCLKDIV_RESET_SHIFT	device/LPC54018.h	12292;"	d
SYSCON_MCLKIO_DIR	device/LPC54018.h	12409;"	d
SYSCON_MCLKIO_DIR_MASK	device/LPC54018.h	12407;"	d
SYSCON_MCLKIO_DIR_SHIFT	device/LPC54018.h	12408;"	d
SYSCON_NMISRC_IRQM4	device/LPC54018.h	11353;"	d
SYSCON_NMISRC_IRQM4_MASK	device/LPC54018.h	11351;"	d
SYSCON_NMISRC_IRQM4_SHIFT	device/LPC54018.h	11352;"	d
SYSCON_NMISRC_NMIENM4	device/LPC54018.h	11356;"	d
SYSCON_NMISRC_NMIENM4_MASK	device/LPC54018.h	11354;"	d
SYSCON_NMISRC_NMIENM4_SHIFT	device/LPC54018.h	11355;"	d
SYSCON_PDRUNCFGCLR_COUNT	device/LPC54018.h	13088;"	d
SYSCON_PDRUNCFGCLR_PDEN_ADC0	device/LPC54018.h	13042;"	d
SYSCON_PDRUNCFGCLR_PDEN_ADC0_MASK	device/LPC54018.h	13040;"	d
SYSCON_PDRUNCFGCLR_PDEN_ADC0_SHIFT	device/LPC54018.h	13041;"	d
SYSCON_PDRUNCFGCLR_PDEN_AUD_PLL	device/LPC54018.h	13018;"	d
SYSCON_PDRUNCFGCLR_PDEN_AUD_PLL_MASK	device/LPC54018.h	13016;"	d
SYSCON_PDRUNCFGCLR_PDEN_AUD_PLL_SHIFT	device/LPC54018.h	13017;"	d
SYSCON_PDRUNCFGCLR_PDEN_BOD_INTR	device/LPC54018.h	13036;"	d
SYSCON_PDRUNCFGCLR_PDEN_BOD_INTR_MASK	device/LPC54018.h	13034;"	d
SYSCON_PDRUNCFGCLR_PDEN_BOD_INTR_SHIFT	device/LPC54018.h	13035;"	d
SYSCON_PDRUNCFGCLR_PDEN_BOD_RST	device/LPC54018.h	13030;"	d
SYSCON_PDRUNCFGCLR_PDEN_BOD_RST_MASK	device/LPC54018.h	13028;"	d
SYSCON_PDRUNCFGCLR_PDEN_BOD_RST_SHIFT	device/LPC54018.h	13029;"	d
SYSCON_PDRUNCFGCLR_PDEN_FRO	device/LPC54018.h	13024;"	d
SYSCON_PDRUNCFGCLR_PDEN_FRO_MASK	device/LPC54018.h	13022;"	d
SYSCON_PDRUNCFGCLR_PDEN_FRO_SHIFT	device/LPC54018.h	13023;"	d
SYSCON_PDRUNCFGCLR_PDEN_RNG	device/LPC54018.h	13033;"	d
SYSCON_PDRUNCFGCLR_PDEN_RNG_MASK	device/LPC54018.h	13031;"	d
SYSCON_PDRUNCFGCLR_PDEN_RNG_SHIFT	device/LPC54018.h	13032;"	d
SYSCON_PDRUNCFGCLR_PDEN_ROM	device/LPC54018.h	13057;"	d
SYSCON_PDRUNCFGCLR_PDEN_ROM_MASK	device/LPC54018.h	13055;"	d
SYSCON_PDRUNCFGCLR_PDEN_ROM_SHIFT	device/LPC54018.h	13056;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAM0	device/LPC54018.h	13048;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAM0_MASK	device/LPC54018.h	13046;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAM0_SHIFT	device/LPC54018.h	13047;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAM1_2_3	device/LPC54018.h	13051;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAM1_2_3_MASK	device/LPC54018.h	13049;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAM1_2_3_SHIFT	device/LPC54018.h	13050;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAMX	device/LPC54018.h	13045;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAMX_MASK	device/LPC54018.h	13043;"	d
SYSCON_PDRUNCFGCLR_PDEN_SRAMX_SHIFT	device/LPC54018.h	13044;"	d
SYSCON_PDRUNCFGCLR_PDEN_SYSOSC	device/LPC54018.h	13021;"	d
SYSCON_PDRUNCFGCLR_PDEN_SYSOSC_MASK	device/LPC54018.h	13019;"	d
SYSCON_PDRUNCFGCLR_PDEN_SYSOSC_SHIFT	device/LPC54018.h	13020;"	d
SYSCON_PDRUNCFGCLR_PDEN_SYS_PLL	device/LPC54018.h	13069;"	d
SYSCON_PDRUNCFGCLR_PDEN_SYS_PLL_MASK	device/LPC54018.h	13067;"	d
SYSCON_PDRUNCFGCLR_PDEN_SYS_PLL_SHIFT	device/LPC54018.h	13068;"	d
SYSCON_PDRUNCFGCLR_PDEN_TS	device/LPC54018.h	13027;"	d
SYSCON_PDRUNCFGCLR_PDEN_TS_MASK	device/LPC54018.h	13025;"	d
SYSCON_PDRUNCFGCLR_PDEN_TS_SHIFT	device/LPC54018.h	13026;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB0_PHY	device/LPC54018.h	13066;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB0_PHY_MASK	device/LPC54018.h	13064;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB0_PHY_SHIFT	device/LPC54018.h	13065;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB1_PHY	device/LPC54018.h	13012;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB1_PHY_MASK	device/LPC54018.h	13010;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB1_PHY_SHIFT	device/LPC54018.h	13011;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB1_PLL	device/LPC54018.h	13015;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB1_PLL_MASK	device/LPC54018.h	13013;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB1_PLL_SHIFT	device/LPC54018.h	13014;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB_RAM	device/LPC54018.h	13054;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB_RAM_MASK	device/LPC54018.h	13052;"	d
SYSCON_PDRUNCFGCLR_PDEN_USB_RAM_SHIFT	device/LPC54018.h	13053;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD2_ANA	device/LPC54018.h	13039;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD2_ANA_MASK	device/LPC54018.h	13037;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD2_ANA_SHIFT	device/LPC54018.h	13038;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD3	device/LPC54018.h	13075;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD3_MASK	device/LPC54018.h	13073;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD3_SHIFT	device/LPC54018.h	13074;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD4	device/LPC54018.h	13078;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD4_MASK	device/LPC54018.h	13076;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD4_SHIFT	device/LPC54018.h	13077;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD5	device/LPC54018.h	13081;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD5_MASK	device/LPC54018.h	13079;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD5_SHIFT	device/LPC54018.h	13080;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD6	device/LPC54018.h	13084;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD6_MASK	device/LPC54018.h	13082;"	d
SYSCON_PDRUNCFGCLR_PDEN_VD6_SHIFT	device/LPC54018.h	13083;"	d
SYSCON_PDRUNCFGCLR_PDEN_VDDA	device/LPC54018.h	13060;"	d
SYSCON_PDRUNCFGCLR_PDEN_VDDA_MASK	device/LPC54018.h	13058;"	d
SYSCON_PDRUNCFGCLR_PDEN_VDDA_SHIFT	device/LPC54018.h	13059;"	d
SYSCON_PDRUNCFGCLR_PDEN_VREFP	device/LPC54018.h	13072;"	d
SYSCON_PDRUNCFGCLR_PDEN_VREFP_MASK	device/LPC54018.h	13070;"	d
SYSCON_PDRUNCFGCLR_PDEN_VREFP_SHIFT	device/LPC54018.h	13071;"	d
SYSCON_PDRUNCFGCLR_PDEN_WDT_OSC	device/LPC54018.h	13063;"	d
SYSCON_PDRUNCFGCLR_PDEN_WDT_OSC_MASK	device/LPC54018.h	13061;"	d
SYSCON_PDRUNCFGCLR_PDEN_WDT_OSC_SHIFT	device/LPC54018.h	13062;"	d
SYSCON_PDRUNCFGSET_COUNT	device/LPC54018.h	13006;"	d
SYSCON_PDRUNCFGSET_PDEN_ADC0	device/LPC54018.h	12960;"	d
SYSCON_PDRUNCFGSET_PDEN_ADC0_MASK	device/LPC54018.h	12958;"	d
SYSCON_PDRUNCFGSET_PDEN_ADC0_SHIFT	device/LPC54018.h	12959;"	d
SYSCON_PDRUNCFGSET_PDEN_AUD_PLL	device/LPC54018.h	12936;"	d
SYSCON_PDRUNCFGSET_PDEN_AUD_PLL_MASK	device/LPC54018.h	12934;"	d
SYSCON_PDRUNCFGSET_PDEN_AUD_PLL_SHIFT	device/LPC54018.h	12935;"	d
SYSCON_PDRUNCFGSET_PDEN_BOD_INTR	device/LPC54018.h	12954;"	d
SYSCON_PDRUNCFGSET_PDEN_BOD_INTR_MASK	device/LPC54018.h	12952;"	d
SYSCON_PDRUNCFGSET_PDEN_BOD_INTR_SHIFT	device/LPC54018.h	12953;"	d
SYSCON_PDRUNCFGSET_PDEN_BOD_RST	device/LPC54018.h	12948;"	d
SYSCON_PDRUNCFGSET_PDEN_BOD_RST_MASK	device/LPC54018.h	12946;"	d
SYSCON_PDRUNCFGSET_PDEN_BOD_RST_SHIFT	device/LPC54018.h	12947;"	d
SYSCON_PDRUNCFGSET_PDEN_FRO	device/LPC54018.h	12942;"	d
SYSCON_PDRUNCFGSET_PDEN_FRO_MASK	device/LPC54018.h	12940;"	d
SYSCON_PDRUNCFGSET_PDEN_FRO_SHIFT	device/LPC54018.h	12941;"	d
SYSCON_PDRUNCFGSET_PDEN_RNG	device/LPC54018.h	12951;"	d
SYSCON_PDRUNCFGSET_PDEN_RNG_MASK	device/LPC54018.h	12949;"	d
SYSCON_PDRUNCFGSET_PDEN_RNG_SHIFT	device/LPC54018.h	12950;"	d
SYSCON_PDRUNCFGSET_PDEN_ROM	device/LPC54018.h	12975;"	d
SYSCON_PDRUNCFGSET_PDEN_ROM_MASK	device/LPC54018.h	12973;"	d
SYSCON_PDRUNCFGSET_PDEN_ROM_SHIFT	device/LPC54018.h	12974;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAM0	device/LPC54018.h	12966;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAM0_MASK	device/LPC54018.h	12964;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAM0_SHIFT	device/LPC54018.h	12965;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAM1_2_3	device/LPC54018.h	12969;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAM1_2_3_MASK	device/LPC54018.h	12967;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAM1_2_3_SHIFT	device/LPC54018.h	12968;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAMX	device/LPC54018.h	12963;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAMX_MASK	device/LPC54018.h	12961;"	d
SYSCON_PDRUNCFGSET_PDEN_SRAMX_SHIFT	device/LPC54018.h	12962;"	d
SYSCON_PDRUNCFGSET_PDEN_SYSOSC	device/LPC54018.h	12939;"	d
SYSCON_PDRUNCFGSET_PDEN_SYSOSC_MASK	device/LPC54018.h	12937;"	d
SYSCON_PDRUNCFGSET_PDEN_SYSOSC_SHIFT	device/LPC54018.h	12938;"	d
SYSCON_PDRUNCFGSET_PDEN_SYS_PLL	device/LPC54018.h	12987;"	d
SYSCON_PDRUNCFGSET_PDEN_SYS_PLL_MASK	device/LPC54018.h	12985;"	d
SYSCON_PDRUNCFGSET_PDEN_SYS_PLL_SHIFT	device/LPC54018.h	12986;"	d
SYSCON_PDRUNCFGSET_PDEN_TS	device/LPC54018.h	12945;"	d
SYSCON_PDRUNCFGSET_PDEN_TS_MASK	device/LPC54018.h	12943;"	d
SYSCON_PDRUNCFGSET_PDEN_TS_SHIFT	device/LPC54018.h	12944;"	d
SYSCON_PDRUNCFGSET_PDEN_USB0_PHY	device/LPC54018.h	12984;"	d
SYSCON_PDRUNCFGSET_PDEN_USB0_PHY_MASK	device/LPC54018.h	12982;"	d
SYSCON_PDRUNCFGSET_PDEN_USB0_PHY_SHIFT	device/LPC54018.h	12983;"	d
SYSCON_PDRUNCFGSET_PDEN_USB1_PHY	device/LPC54018.h	12930;"	d
SYSCON_PDRUNCFGSET_PDEN_USB1_PHY_MASK	device/LPC54018.h	12928;"	d
SYSCON_PDRUNCFGSET_PDEN_USB1_PHY_SHIFT	device/LPC54018.h	12929;"	d
SYSCON_PDRUNCFGSET_PDEN_USB1_PLL	device/LPC54018.h	12933;"	d
SYSCON_PDRUNCFGSET_PDEN_USB1_PLL_MASK	device/LPC54018.h	12931;"	d
SYSCON_PDRUNCFGSET_PDEN_USB1_PLL_SHIFT	device/LPC54018.h	12932;"	d
SYSCON_PDRUNCFGSET_PDEN_USB_RAM	device/LPC54018.h	12972;"	d
SYSCON_PDRUNCFGSET_PDEN_USB_RAM_MASK	device/LPC54018.h	12970;"	d
SYSCON_PDRUNCFGSET_PDEN_USB_RAM_SHIFT	device/LPC54018.h	12971;"	d
SYSCON_PDRUNCFGSET_PDEN_VD2_ANA	device/LPC54018.h	12957;"	d
SYSCON_PDRUNCFGSET_PDEN_VD2_ANA_MASK	device/LPC54018.h	12955;"	d
SYSCON_PDRUNCFGSET_PDEN_VD2_ANA_SHIFT	device/LPC54018.h	12956;"	d
SYSCON_PDRUNCFGSET_PDEN_VD3	device/LPC54018.h	12993;"	d
SYSCON_PDRUNCFGSET_PDEN_VD3_MASK	device/LPC54018.h	12991;"	d
SYSCON_PDRUNCFGSET_PDEN_VD3_SHIFT	device/LPC54018.h	12992;"	d
SYSCON_PDRUNCFGSET_PDEN_VD4	device/LPC54018.h	12996;"	d
SYSCON_PDRUNCFGSET_PDEN_VD4_MASK	device/LPC54018.h	12994;"	d
SYSCON_PDRUNCFGSET_PDEN_VD4_SHIFT	device/LPC54018.h	12995;"	d
SYSCON_PDRUNCFGSET_PDEN_VD5	device/LPC54018.h	12999;"	d
SYSCON_PDRUNCFGSET_PDEN_VD5_MASK	device/LPC54018.h	12997;"	d
SYSCON_PDRUNCFGSET_PDEN_VD5_SHIFT	device/LPC54018.h	12998;"	d
SYSCON_PDRUNCFGSET_PDEN_VD6	device/LPC54018.h	13002;"	d
SYSCON_PDRUNCFGSET_PDEN_VD6_MASK	device/LPC54018.h	13000;"	d
SYSCON_PDRUNCFGSET_PDEN_VD6_SHIFT	device/LPC54018.h	13001;"	d
SYSCON_PDRUNCFGSET_PDEN_VDDA	device/LPC54018.h	12978;"	d
SYSCON_PDRUNCFGSET_PDEN_VDDA_MASK	device/LPC54018.h	12976;"	d
SYSCON_PDRUNCFGSET_PDEN_VDDA_SHIFT	device/LPC54018.h	12977;"	d
SYSCON_PDRUNCFGSET_PDEN_VREFP	device/LPC54018.h	12990;"	d
SYSCON_PDRUNCFGSET_PDEN_VREFP_MASK	device/LPC54018.h	12988;"	d
SYSCON_PDRUNCFGSET_PDEN_VREFP_SHIFT	device/LPC54018.h	12989;"	d
SYSCON_PDRUNCFGSET_PDEN_WDT_OSC	device/LPC54018.h	12981;"	d
SYSCON_PDRUNCFGSET_PDEN_WDT_OSC_MASK	device/LPC54018.h	12979;"	d
SYSCON_PDRUNCFGSET_PDEN_WDT_OSC_SHIFT	device/LPC54018.h	12980;"	d
SYSCON_PDRUNCFG_COUNT	device/LPC54018.h	12924;"	d
SYSCON_PDRUNCFG_PDEN_ADC0	device/LPC54018.h	12878;"	d
SYSCON_PDRUNCFG_PDEN_ADC0_MASK	device/LPC54018.h	12876;"	d
SYSCON_PDRUNCFG_PDEN_ADC0_SHIFT	device/LPC54018.h	12877;"	d
SYSCON_PDRUNCFG_PDEN_AUD_PLL	device/LPC54018.h	12854;"	d
SYSCON_PDRUNCFG_PDEN_AUD_PLL_MASK	device/LPC54018.h	12852;"	d
SYSCON_PDRUNCFG_PDEN_AUD_PLL_SHIFT	device/LPC54018.h	12853;"	d
SYSCON_PDRUNCFG_PDEN_BOD_INTR	device/LPC54018.h	12872;"	d
SYSCON_PDRUNCFG_PDEN_BOD_INTR_MASK	device/LPC54018.h	12870;"	d
SYSCON_PDRUNCFG_PDEN_BOD_INTR_SHIFT	device/LPC54018.h	12871;"	d
SYSCON_PDRUNCFG_PDEN_BOD_RST	device/LPC54018.h	12866;"	d
SYSCON_PDRUNCFG_PDEN_BOD_RST_MASK	device/LPC54018.h	12864;"	d
SYSCON_PDRUNCFG_PDEN_BOD_RST_SHIFT	device/LPC54018.h	12865;"	d
SYSCON_PDRUNCFG_PDEN_FRO	device/LPC54018.h	12860;"	d
SYSCON_PDRUNCFG_PDEN_FRO_MASK	device/LPC54018.h	12858;"	d
SYSCON_PDRUNCFG_PDEN_FRO_SHIFT	device/LPC54018.h	12859;"	d
SYSCON_PDRUNCFG_PDEN_RNG	device/LPC54018.h	12869;"	d
SYSCON_PDRUNCFG_PDEN_RNG_MASK	device/LPC54018.h	12867;"	d
SYSCON_PDRUNCFG_PDEN_RNG_SHIFT	device/LPC54018.h	12868;"	d
SYSCON_PDRUNCFG_PDEN_ROM	device/LPC54018.h	12893;"	d
SYSCON_PDRUNCFG_PDEN_ROM_MASK	device/LPC54018.h	12891;"	d
SYSCON_PDRUNCFG_PDEN_ROM_SHIFT	device/LPC54018.h	12892;"	d
SYSCON_PDRUNCFG_PDEN_SRAM0	device/LPC54018.h	12884;"	d
SYSCON_PDRUNCFG_PDEN_SRAM0_MASK	device/LPC54018.h	12882;"	d
SYSCON_PDRUNCFG_PDEN_SRAM0_SHIFT	device/LPC54018.h	12883;"	d
SYSCON_PDRUNCFG_PDEN_SRAM1_2_3	device/LPC54018.h	12887;"	d
SYSCON_PDRUNCFG_PDEN_SRAM1_2_3_MASK	device/LPC54018.h	12885;"	d
SYSCON_PDRUNCFG_PDEN_SRAM1_2_3_SHIFT	device/LPC54018.h	12886;"	d
SYSCON_PDRUNCFG_PDEN_SRAMX	device/LPC54018.h	12881;"	d
SYSCON_PDRUNCFG_PDEN_SRAMX_MASK	device/LPC54018.h	12879;"	d
SYSCON_PDRUNCFG_PDEN_SRAMX_SHIFT	device/LPC54018.h	12880;"	d
SYSCON_PDRUNCFG_PDEN_SYSOSC	device/LPC54018.h	12857;"	d
SYSCON_PDRUNCFG_PDEN_SYSOSC_MASK	device/LPC54018.h	12855;"	d
SYSCON_PDRUNCFG_PDEN_SYSOSC_SHIFT	device/LPC54018.h	12856;"	d
SYSCON_PDRUNCFG_PDEN_SYS_PLL	device/LPC54018.h	12905;"	d
SYSCON_PDRUNCFG_PDEN_SYS_PLL_MASK	device/LPC54018.h	12903;"	d
SYSCON_PDRUNCFG_PDEN_SYS_PLL_SHIFT	device/LPC54018.h	12904;"	d
SYSCON_PDRUNCFG_PDEN_TS	device/LPC54018.h	12863;"	d
SYSCON_PDRUNCFG_PDEN_TS_MASK	device/LPC54018.h	12861;"	d
SYSCON_PDRUNCFG_PDEN_TS_SHIFT	device/LPC54018.h	12862;"	d
SYSCON_PDRUNCFG_PDEN_USB0_PHY	device/LPC54018.h	12902;"	d
SYSCON_PDRUNCFG_PDEN_USB0_PHY_MASK	device/LPC54018.h	12900;"	d
SYSCON_PDRUNCFG_PDEN_USB0_PHY_SHIFT	device/LPC54018.h	12901;"	d
SYSCON_PDRUNCFG_PDEN_USB1_PHY	device/LPC54018.h	12848;"	d
SYSCON_PDRUNCFG_PDEN_USB1_PHY_MASK	device/LPC54018.h	12846;"	d
SYSCON_PDRUNCFG_PDEN_USB1_PHY_SHIFT	device/LPC54018.h	12847;"	d
SYSCON_PDRUNCFG_PDEN_USB1_PLL	device/LPC54018.h	12851;"	d
SYSCON_PDRUNCFG_PDEN_USB1_PLL_MASK	device/LPC54018.h	12849;"	d
SYSCON_PDRUNCFG_PDEN_USB1_PLL_SHIFT	device/LPC54018.h	12850;"	d
SYSCON_PDRUNCFG_PDEN_USB_RAM	device/LPC54018.h	12890;"	d
SYSCON_PDRUNCFG_PDEN_USB_RAM_MASK	device/LPC54018.h	12888;"	d
SYSCON_PDRUNCFG_PDEN_USB_RAM_SHIFT	device/LPC54018.h	12889;"	d
SYSCON_PDRUNCFG_PDEN_VD2_ANA	device/LPC54018.h	12875;"	d
SYSCON_PDRUNCFG_PDEN_VD2_ANA_MASK	device/LPC54018.h	12873;"	d
SYSCON_PDRUNCFG_PDEN_VD2_ANA_SHIFT	device/LPC54018.h	12874;"	d
SYSCON_PDRUNCFG_PDEN_VD3	device/LPC54018.h	12911;"	d
SYSCON_PDRUNCFG_PDEN_VD3_MASK	device/LPC54018.h	12909;"	d
SYSCON_PDRUNCFG_PDEN_VD3_SHIFT	device/LPC54018.h	12910;"	d
SYSCON_PDRUNCFG_PDEN_VD4	device/LPC54018.h	12914;"	d
SYSCON_PDRUNCFG_PDEN_VD4_MASK	device/LPC54018.h	12912;"	d
SYSCON_PDRUNCFG_PDEN_VD4_SHIFT	device/LPC54018.h	12913;"	d
SYSCON_PDRUNCFG_PDEN_VD5	device/LPC54018.h	12917;"	d
SYSCON_PDRUNCFG_PDEN_VD5_MASK	device/LPC54018.h	12915;"	d
SYSCON_PDRUNCFG_PDEN_VD5_SHIFT	device/LPC54018.h	12916;"	d
SYSCON_PDRUNCFG_PDEN_VD6	device/LPC54018.h	12920;"	d
SYSCON_PDRUNCFG_PDEN_VD6_MASK	device/LPC54018.h	12918;"	d
SYSCON_PDRUNCFG_PDEN_VD6_SHIFT	device/LPC54018.h	12919;"	d
SYSCON_PDRUNCFG_PDEN_VDDA	device/LPC54018.h	12896;"	d
SYSCON_PDRUNCFG_PDEN_VDDA_MASK	device/LPC54018.h	12894;"	d
SYSCON_PDRUNCFG_PDEN_VDDA_SHIFT	device/LPC54018.h	12895;"	d
SYSCON_PDRUNCFG_PDEN_VREFP	device/LPC54018.h	12908;"	d
SYSCON_PDRUNCFG_PDEN_VREFP_MASK	device/LPC54018.h	12906;"	d
SYSCON_PDRUNCFG_PDEN_VREFP_SHIFT	device/LPC54018.h	12907;"	d
SYSCON_PDRUNCFG_PDEN_WDT_OSC	device/LPC54018.h	12899;"	d
SYSCON_PDRUNCFG_PDEN_WDT_OSC_MASK	device/LPC54018.h	12897;"	d
SYSCON_PDRUNCFG_PDEN_WDT_OSC_SHIFT	device/LPC54018.h	12898;"	d
SYSCON_PDSLEEPCFG_COUNT	device/LPC54018.h	12842;"	d
SYSCON_PDSLEEPCFG_PDEN_ADC0	device/LPC54018.h	12796;"	d
SYSCON_PDSLEEPCFG_PDEN_ADC0_MASK	device/LPC54018.h	12794;"	d
SYSCON_PDSLEEPCFG_PDEN_ADC0_SHIFT	device/LPC54018.h	12795;"	d
SYSCON_PDSLEEPCFG_PDEN_AUD_PLL	device/LPC54018.h	12772;"	d
SYSCON_PDSLEEPCFG_PDEN_AUD_PLL_MASK	device/LPC54018.h	12770;"	d
SYSCON_PDSLEEPCFG_PDEN_AUD_PLL_SHIFT	device/LPC54018.h	12771;"	d
SYSCON_PDSLEEPCFG_PDEN_BOD_INTR	device/LPC54018.h	12790;"	d
SYSCON_PDSLEEPCFG_PDEN_BOD_INTR_MASK	device/LPC54018.h	12788;"	d
SYSCON_PDSLEEPCFG_PDEN_BOD_INTR_SHIFT	device/LPC54018.h	12789;"	d
SYSCON_PDSLEEPCFG_PDEN_BOD_RST	device/LPC54018.h	12784;"	d
SYSCON_PDSLEEPCFG_PDEN_BOD_RST_MASK	device/LPC54018.h	12782;"	d
SYSCON_PDSLEEPCFG_PDEN_BOD_RST_SHIFT	device/LPC54018.h	12783;"	d
SYSCON_PDSLEEPCFG_PDEN_FRO	device/LPC54018.h	12778;"	d
SYSCON_PDSLEEPCFG_PDEN_FRO_MASK	device/LPC54018.h	12776;"	d
SYSCON_PDSLEEPCFG_PDEN_FRO_SHIFT	device/LPC54018.h	12777;"	d
SYSCON_PDSLEEPCFG_PDEN_RNG	device/LPC54018.h	12787;"	d
SYSCON_PDSLEEPCFG_PDEN_RNG_MASK	device/LPC54018.h	12785;"	d
SYSCON_PDSLEEPCFG_PDEN_RNG_SHIFT	device/LPC54018.h	12786;"	d
SYSCON_PDSLEEPCFG_PDEN_ROM	device/LPC54018.h	12811;"	d
SYSCON_PDSLEEPCFG_PDEN_ROM_MASK	device/LPC54018.h	12809;"	d
SYSCON_PDSLEEPCFG_PDEN_ROM_SHIFT	device/LPC54018.h	12810;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAM0	device/LPC54018.h	12802;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAM0_MASK	device/LPC54018.h	12800;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAM0_SHIFT	device/LPC54018.h	12801;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAM1_2_3	device/LPC54018.h	12805;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAM1_2_3_MASK	device/LPC54018.h	12803;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAM1_2_3_SHIFT	device/LPC54018.h	12804;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAMX	device/LPC54018.h	12799;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAMX_MASK	device/LPC54018.h	12797;"	d
SYSCON_PDSLEEPCFG_PDEN_SRAMX_SHIFT	device/LPC54018.h	12798;"	d
SYSCON_PDSLEEPCFG_PDEN_SYSOSC	device/LPC54018.h	12775;"	d
SYSCON_PDSLEEPCFG_PDEN_SYSOSC_MASK	device/LPC54018.h	12773;"	d
SYSCON_PDSLEEPCFG_PDEN_SYSOSC_SHIFT	device/LPC54018.h	12774;"	d
SYSCON_PDSLEEPCFG_PDEN_SYS_PLL	device/LPC54018.h	12823;"	d
SYSCON_PDSLEEPCFG_PDEN_SYS_PLL_MASK	device/LPC54018.h	12821;"	d
SYSCON_PDSLEEPCFG_PDEN_SYS_PLL_SHIFT	device/LPC54018.h	12822;"	d
SYSCON_PDSLEEPCFG_PDEN_TS	device/LPC54018.h	12781;"	d
SYSCON_PDSLEEPCFG_PDEN_TS_MASK	device/LPC54018.h	12779;"	d
SYSCON_PDSLEEPCFG_PDEN_TS_SHIFT	device/LPC54018.h	12780;"	d
SYSCON_PDSLEEPCFG_PDEN_USB0_PHY	device/LPC54018.h	12820;"	d
SYSCON_PDSLEEPCFG_PDEN_USB0_PHY_MASK	device/LPC54018.h	12818;"	d
SYSCON_PDSLEEPCFG_PDEN_USB0_PHY_SHIFT	device/LPC54018.h	12819;"	d
SYSCON_PDSLEEPCFG_PDEN_USB1_PHY	device/LPC54018.h	12766;"	d
SYSCON_PDSLEEPCFG_PDEN_USB1_PHY_MASK	device/LPC54018.h	12764;"	d
SYSCON_PDSLEEPCFG_PDEN_USB1_PHY_SHIFT	device/LPC54018.h	12765;"	d
SYSCON_PDSLEEPCFG_PDEN_USB1_PLL	device/LPC54018.h	12769;"	d
SYSCON_PDSLEEPCFG_PDEN_USB1_PLL_MASK	device/LPC54018.h	12767;"	d
SYSCON_PDSLEEPCFG_PDEN_USB1_PLL_SHIFT	device/LPC54018.h	12768;"	d
SYSCON_PDSLEEPCFG_PDEN_USB_RAM	device/LPC54018.h	12808;"	d
SYSCON_PDSLEEPCFG_PDEN_USB_RAM_MASK	device/LPC54018.h	12806;"	d
SYSCON_PDSLEEPCFG_PDEN_USB_RAM_SHIFT	device/LPC54018.h	12807;"	d
SYSCON_PDSLEEPCFG_PDEN_VD2_ANA	device/LPC54018.h	12793;"	d
SYSCON_PDSLEEPCFG_PDEN_VD2_ANA_MASK	device/LPC54018.h	12791;"	d
SYSCON_PDSLEEPCFG_PDEN_VD2_ANA_SHIFT	device/LPC54018.h	12792;"	d
SYSCON_PDSLEEPCFG_PDEN_VD3	device/LPC54018.h	12829;"	d
SYSCON_PDSLEEPCFG_PDEN_VD3_MASK	device/LPC54018.h	12827;"	d
SYSCON_PDSLEEPCFG_PDEN_VD3_SHIFT	device/LPC54018.h	12828;"	d
SYSCON_PDSLEEPCFG_PDEN_VD4	device/LPC54018.h	12832;"	d
SYSCON_PDSLEEPCFG_PDEN_VD4_MASK	device/LPC54018.h	12830;"	d
SYSCON_PDSLEEPCFG_PDEN_VD4_SHIFT	device/LPC54018.h	12831;"	d
SYSCON_PDSLEEPCFG_PDEN_VD5	device/LPC54018.h	12835;"	d
SYSCON_PDSLEEPCFG_PDEN_VD5_MASK	device/LPC54018.h	12833;"	d
SYSCON_PDSLEEPCFG_PDEN_VD5_SHIFT	device/LPC54018.h	12834;"	d
SYSCON_PDSLEEPCFG_PDEN_VD6	device/LPC54018.h	12838;"	d
SYSCON_PDSLEEPCFG_PDEN_VD6_MASK	device/LPC54018.h	12836;"	d
SYSCON_PDSLEEPCFG_PDEN_VD6_SHIFT	device/LPC54018.h	12837;"	d
SYSCON_PDSLEEPCFG_PDEN_VDDA	device/LPC54018.h	12814;"	d
SYSCON_PDSLEEPCFG_PDEN_VDDA_MASK	device/LPC54018.h	12812;"	d
SYSCON_PDSLEEPCFG_PDEN_VDDA_SHIFT	device/LPC54018.h	12813;"	d
SYSCON_PDSLEEPCFG_PDEN_VREFP	device/LPC54018.h	12826;"	d
SYSCON_PDSLEEPCFG_PDEN_VREFP_MASK	device/LPC54018.h	12824;"	d
SYSCON_PDSLEEPCFG_PDEN_VREFP_SHIFT	device/LPC54018.h	12825;"	d
SYSCON_PDSLEEPCFG_PDEN_WDT_OSC	device/LPC54018.h	12817;"	d
SYSCON_PDSLEEPCFG_PDEN_WDT_OSC_MASK	device/LPC54018.h	12815;"	d
SYSCON_PDSLEEPCFG_PDEN_WDT_OSC_SHIFT	device/LPC54018.h	12816;"	d
SYSCON_PIOPORCAP_COUNT	device/LPC54018.h	11378;"	d
SYSCON_PIOPORCAP_PIOPORCAP	device/LPC54018.h	11374;"	d
SYSCON_PIOPORCAP_PIOPORCAP_MASK	device/LPC54018.h	11372;"	d
SYSCON_PIOPORCAP_PIOPORCAP_SHIFT	device/LPC54018.h	11373;"	d
SYSCON_PIORESCAP_COUNT	device/LPC54018.h	11388;"	d
SYSCON_PIORESCAP_PIORESCAP	device/LPC54018.h	11384;"	d
SYSCON_PIORESCAP_PIORESCAP_MASK	device/LPC54018.h	11382;"	d
SYSCON_PIORESCAP_PIORESCAP_SHIFT	device/LPC54018.h	11383;"	d
SYSCON_PRESETCTRLCLR_COUNT	device/LPC54018.h	11565;"	d
SYSCON_PRESETCTRLCLR_RST_CLR	device/LPC54018.h	11561;"	d
SYSCON_PRESETCTRLCLR_RST_CLR_MASK	device/LPC54018.h	11559;"	d
SYSCON_PRESETCTRLCLR_RST_CLR_SHIFT	device/LPC54018.h	11560;"	d
SYSCON_PRESETCTRLSET_COUNT	device/LPC54018.h	11555;"	d
SYSCON_PRESETCTRLSET_RST_SET	device/LPC54018.h	11551;"	d
SYSCON_PRESETCTRLSET_RST_SET_MASK	device/LPC54018.h	11549;"	d
SYSCON_PRESETCTRLSET_RST_SET_SHIFT	device/LPC54018.h	11550;"	d
SYSCON_PRESETCTRL_ADC0_RST	device/LPC54018.h	11538;"	d
SYSCON_PRESETCTRL_ADC0_RST_MASK	device/LPC54018.h	11536;"	d
SYSCON_PRESETCTRL_ADC0_RST_SHIFT	device/LPC54018.h	11537;"	d
SYSCON_PRESETCTRL_COUNT	device/LPC54018.h	11545;"	d
SYSCON_PRESETCTRL_CRC_RST	device/LPC54018.h	11520;"	d
SYSCON_PRESETCTRL_CRC_RST_MASK	device/LPC54018.h	11518;"	d
SYSCON_PRESETCTRL_CRC_RST_SHIFT	device/LPC54018.h	11519;"	d
SYSCON_PRESETCTRL_CTIMER0_RST	device/LPC54018.h	11535;"	d
SYSCON_PRESETCTRL_CTIMER0_RST_MASK	device/LPC54018.h	11533;"	d
SYSCON_PRESETCTRL_CTIMER0_RST_SHIFT	device/LPC54018.h	11534;"	d
SYSCON_PRESETCTRL_CTIMER1_RST	device/LPC54018.h	11541;"	d
SYSCON_PRESETCTRL_CTIMER1_RST_MASK	device/LPC54018.h	11539;"	d
SYSCON_PRESETCTRL_CTIMER1_RST_SHIFT	device/LPC54018.h	11540;"	d
SYSCON_PRESETCTRL_CTIMER2_RST	device/LPC54018.h	11526;"	d
SYSCON_PRESETCTRL_CTIMER2_RST_MASK	device/LPC54018.h	11524;"	d
SYSCON_PRESETCTRL_CTIMER2_RST_SHIFT	device/LPC54018.h	11525;"	d
SYSCON_PRESETCTRL_DMA_RST	device/LPC54018.h	11514;"	d
SYSCON_PRESETCTRL_DMA_RST_MASK	device/LPC54018.h	11512;"	d
SYSCON_PRESETCTRL_DMA_RST_SHIFT	device/LPC54018.h	11513;"	d
SYSCON_PRESETCTRL_DMIC_RST	device/LPC54018.h	11505;"	d
SYSCON_PRESETCTRL_DMIC_RST_MASK	device/LPC54018.h	11503;"	d
SYSCON_PRESETCTRL_DMIC_RST_SHIFT	device/LPC54018.h	11504;"	d
SYSCON_PRESETCTRL_EMC_RESET	device/LPC54018.h	11415;"	d
SYSCON_PRESETCTRL_EMC_RESET_MASK	device/LPC54018.h	11413;"	d
SYSCON_PRESETCTRL_EMC_RESET_SHIFT	device/LPC54018.h	11414;"	d
SYSCON_PRESETCTRL_ETH_RST	device/LPC54018.h	11421;"	d
SYSCON_PRESETCTRL_ETH_RST_MASK	device/LPC54018.h	11419;"	d
SYSCON_PRESETCTRL_ETH_RST_SHIFT	device/LPC54018.h	11420;"	d
SYSCON_PRESETCTRL_FC0_RST	device/LPC54018.h	11439;"	d
SYSCON_PRESETCTRL_FC0_RST_MASK	device/LPC54018.h	11437;"	d
SYSCON_PRESETCTRL_FC0_RST_SHIFT	device/LPC54018.h	11438;"	d
SYSCON_PRESETCTRL_FC10_RST	device/LPC54018.h	11523;"	d
SYSCON_PRESETCTRL_FC10_RST_MASK	device/LPC54018.h	11521;"	d
SYSCON_PRESETCTRL_FC10_RST_SHIFT	device/LPC54018.h	11522;"	d
SYSCON_PRESETCTRL_FC1_RST	device/LPC54018.h	11445;"	d
SYSCON_PRESETCTRL_FC1_RST_MASK	device/LPC54018.h	11443;"	d
SYSCON_PRESETCTRL_FC1_RST_SHIFT	device/LPC54018.h	11444;"	d
SYSCON_PRESETCTRL_FC2_RST	device/LPC54018.h	11451;"	d
SYSCON_PRESETCTRL_FC2_RST_MASK	device/LPC54018.h	11449;"	d
SYSCON_PRESETCTRL_FC2_RST_SHIFT	device/LPC54018.h	11450;"	d
SYSCON_PRESETCTRL_FC3_RST	device/LPC54018.h	11460;"	d
SYSCON_PRESETCTRL_FC3_RST_MASK	device/LPC54018.h	11458;"	d
SYSCON_PRESETCTRL_FC3_RST_SHIFT	device/LPC54018.h	11459;"	d
SYSCON_PRESETCTRL_FC4_RST	device/LPC54018.h	11469;"	d
SYSCON_PRESETCTRL_FC4_RST_MASK	device/LPC54018.h	11467;"	d
SYSCON_PRESETCTRL_FC4_RST_SHIFT	device/LPC54018.h	11468;"	d
SYSCON_PRESETCTRL_FC5_RST	device/LPC54018.h	11478;"	d
SYSCON_PRESETCTRL_FC5_RST_MASK	device/LPC54018.h	11476;"	d
SYSCON_PRESETCTRL_FC5_RST_SHIFT	device/LPC54018.h	11477;"	d
SYSCON_PRESETCTRL_FC6_RST	device/LPC54018.h	11487;"	d
SYSCON_PRESETCTRL_FC6_RST_MASK	device/LPC54018.h	11485;"	d
SYSCON_PRESETCTRL_FC6_RST_SHIFT	device/LPC54018.h	11486;"	d
SYSCON_PRESETCTRL_FC7_RST	device/LPC54018.h	11496;"	d
SYSCON_PRESETCTRL_FC7_RST_MASK	device/LPC54018.h	11494;"	d
SYSCON_PRESETCTRL_FC7_RST_SHIFT	device/LPC54018.h	11495;"	d
SYSCON_PRESETCTRL_FC8_RST	device/LPC54018.h	11463;"	d
SYSCON_PRESETCTRL_FC8_RST_MASK	device/LPC54018.h	11461;"	d
SYSCON_PRESETCTRL_FC8_RST_SHIFT	device/LPC54018.h	11462;"	d
SYSCON_PRESETCTRL_FC9_RST	device/LPC54018.h	11472;"	d
SYSCON_PRESETCTRL_FC9_RST_MASK	device/LPC54018.h	11470;"	d
SYSCON_PRESETCTRL_FC9_RST_SHIFT	device/LPC54018.h	11471;"	d
SYSCON_PRESETCTRL_GINT_RST	device/LPC54018.h	11508;"	d
SYSCON_PRESETCTRL_GINT_RST_MASK	device/LPC54018.h	11506;"	d
SYSCON_PRESETCTRL_GINT_RST_SHIFT	device/LPC54018.h	11507;"	d
SYSCON_PRESETCTRL_GPIO0_RST	device/LPC54018.h	11466;"	d
SYSCON_PRESETCTRL_GPIO0_RST_MASK	device/LPC54018.h	11464;"	d
SYSCON_PRESETCTRL_GPIO0_RST_SHIFT	device/LPC54018.h	11465;"	d
SYSCON_PRESETCTRL_GPIO1_RST	device/LPC54018.h	11475;"	d
SYSCON_PRESETCTRL_GPIO1_RST_MASK	device/LPC54018.h	11473;"	d
SYSCON_PRESETCTRL_GPIO1_RST_SHIFT	device/LPC54018.h	11474;"	d
SYSCON_PRESETCTRL_GPIO2_RST	device/LPC54018.h	11481;"	d
SYSCON_PRESETCTRL_GPIO2_RST_MASK	device/LPC54018.h	11479;"	d
SYSCON_PRESETCTRL_GPIO2_RST_SHIFT	device/LPC54018.h	11480;"	d
SYSCON_PRESETCTRL_GPIO3_RST	device/LPC54018.h	11490;"	d
SYSCON_PRESETCTRL_GPIO3_RST_MASK	device/LPC54018.h	11488;"	d
SYSCON_PRESETCTRL_GPIO3_RST_SHIFT	device/LPC54018.h	11489;"	d
SYSCON_PRESETCTRL_GPIO4_RST	device/LPC54018.h	11427;"	d
SYSCON_PRESETCTRL_GPIO4_RST_MASK	device/LPC54018.h	11425;"	d
SYSCON_PRESETCTRL_GPIO4_RST_SHIFT	device/LPC54018.h	11426;"	d
SYSCON_PRESETCTRL_GPIO5_RST	device/LPC54018.h	11430;"	d
SYSCON_PRESETCTRL_GPIO5_RST_MASK	device/LPC54018.h	11428;"	d
SYSCON_PRESETCTRL_GPIO5_RST_SHIFT	device/LPC54018.h	11429;"	d
SYSCON_PRESETCTRL_IOCON_RST	device/LPC54018.h	11454;"	d
SYSCON_PRESETCTRL_IOCON_RST_MASK	device/LPC54018.h	11452;"	d
SYSCON_PRESETCTRL_IOCON_RST_SHIFT	device/LPC54018.h	11453;"	d
SYSCON_PRESETCTRL_LCD_RST	device/LPC54018.h	11397;"	d
SYSCON_PRESETCTRL_LCD_RST_MASK	device/LPC54018.h	11395;"	d
SYSCON_PRESETCTRL_LCD_RST_SHIFT	device/LPC54018.h	11396;"	d
SYSCON_PRESETCTRL_MCAN0_RST	device/LPC54018.h	11418;"	d
SYSCON_PRESETCTRL_MCAN0_RST_MASK	device/LPC54018.h	11416;"	d
SYSCON_PRESETCTRL_MCAN0_RST_SHIFT	device/LPC54018.h	11417;"	d
SYSCON_PRESETCTRL_MCAN1_RST	device/LPC54018.h	11424;"	d
SYSCON_PRESETCTRL_MCAN1_RST_MASK	device/LPC54018.h	11422;"	d
SYSCON_PRESETCTRL_MCAN1_RST_SHIFT	device/LPC54018.h	11423;"	d
SYSCON_PRESETCTRL_MRT_RST	device/LPC54018.h	11394;"	d
SYSCON_PRESETCTRL_MRT_RST_MASK	device/LPC54018.h	11392;"	d
SYSCON_PRESETCTRL_MRT_RST_SHIFT	device/LPC54018.h	11393;"	d
SYSCON_PRESETCTRL_MUX_RST	device/LPC54018.h	11442;"	d
SYSCON_PRESETCTRL_MUX_RST_MASK	device/LPC54018.h	11440;"	d
SYSCON_PRESETCTRL_MUX_RST_SHIFT	device/LPC54018.h	11441;"	d
SYSCON_PRESETCTRL_OTP_RST	device/LPC54018.h	11448;"	d
SYSCON_PRESETCTRL_OTP_RST_MASK	device/LPC54018.h	11446;"	d
SYSCON_PRESETCTRL_OTP_RST_SHIFT	device/LPC54018.h	11447;"	d
SYSCON_PRESETCTRL_PINT_RST	device/LPC54018.h	11499;"	d
SYSCON_PRESETCTRL_PINT_RST_MASK	device/LPC54018.h	11497;"	d
SYSCON_PRESETCTRL_PINT_RST_SHIFT	device/LPC54018.h	11498;"	d
SYSCON_PRESETCTRL_RNG_RST	device/LPC54018.h	11457;"	d
SYSCON_PRESETCTRL_RNG_RST_MASK	device/LPC54018.h	11455;"	d
SYSCON_PRESETCTRL_RNG_RST_SHIFT	device/LPC54018.h	11456;"	d
SYSCON_PRESETCTRL_SC0_RST	device/LPC54018.h	11511;"	d
SYSCON_PRESETCTRL_SC0_RST_MASK	device/LPC54018.h	11509;"	d
SYSCON_PRESETCTRL_SC0_RST_SHIFT	device/LPC54018.h	11510;"	d
SYSCON_PRESETCTRL_SC1_RST	device/LPC54018.h	11517;"	d
SYSCON_PRESETCTRL_SC1_RST_MASK	device/LPC54018.h	11515;"	d
SYSCON_PRESETCTRL_SC1_RST_SHIFT	device/LPC54018.h	11516;"	d
SYSCON_PRESETCTRL_SCT0_RST	device/LPC54018.h	11400;"	d
SYSCON_PRESETCTRL_SCT0_RST_MASK	device/LPC54018.h	11398;"	d
SYSCON_PRESETCTRL_SCT0_RST_SHIFT	device/LPC54018.h	11399;"	d
SYSCON_PRESETCTRL_SDIO_RST	device/LPC54018.h	11403;"	d
SYSCON_PRESETCTRL_SDIO_RST_MASK	device/LPC54018.h	11401;"	d
SYSCON_PRESETCTRL_SDIO_RST_SHIFT	device/LPC54018.h	11402;"	d
SYSCON_PRESETCTRL_SHA_RST	device/LPC54018.h	11502;"	d
SYSCON_PRESETCTRL_SHA_RST_MASK	device/LPC54018.h	11500;"	d
SYSCON_PRESETCTRL_SHA_RST_SHIFT	device/LPC54018.h	11501;"	d
SYSCON_PRESETCTRL_SPIFI_RST	device/LPC54018.h	11433;"	d
SYSCON_PRESETCTRL_SPIFI_RST_MASK	device/LPC54018.h	11431;"	d
SYSCON_PRESETCTRL_SPIFI_RST_SHIFT	device/LPC54018.h	11432;"	d
SYSCON_PRESETCTRL_USB0D_RST	device/LPC54018.h	11532;"	d
SYSCON_PRESETCTRL_USB0D_RST_MASK	device/LPC54018.h	11530;"	d
SYSCON_PRESETCTRL_USB0D_RST_SHIFT	device/LPC54018.h	11531;"	d
SYSCON_PRESETCTRL_USB0HMR_RST	device/LPC54018.h	11484;"	d
SYSCON_PRESETCTRL_USB0HMR_RST_MASK	device/LPC54018.h	11482;"	d
SYSCON_PRESETCTRL_USB0HMR_RST_SHIFT	device/LPC54018.h	11483;"	d
SYSCON_PRESETCTRL_USB0HSL_RST	device/LPC54018.h	11493;"	d
SYSCON_PRESETCTRL_USB0HSL_RST_MASK	device/LPC54018.h	11491;"	d
SYSCON_PRESETCTRL_USB0HSL_RST_SHIFT	device/LPC54018.h	11492;"	d
SYSCON_PRESETCTRL_USB1D_RST	device/LPC54018.h	11409;"	d
SYSCON_PRESETCTRL_USB1D_RST_MASK	device/LPC54018.h	11407;"	d
SYSCON_PRESETCTRL_USB1D_RST_SHIFT	device/LPC54018.h	11408;"	d
SYSCON_PRESETCTRL_USB1H_RST	device/LPC54018.h	11406;"	d
SYSCON_PRESETCTRL_USB1H_RST_MASK	device/LPC54018.h	11404;"	d
SYSCON_PRESETCTRL_USB1H_RST_SHIFT	device/LPC54018.h	11405;"	d
SYSCON_PRESETCTRL_USB1RAM_RST	device/LPC54018.h	11412;"	d
SYSCON_PRESETCTRL_USB1RAM_RST_MASK	device/LPC54018.h	11410;"	d
SYSCON_PRESETCTRL_USB1RAM_RST_SHIFT	device/LPC54018.h	11411;"	d
SYSCON_PRESETCTRL_UTICK_RST	device/LPC54018.h	11436;"	d
SYSCON_PRESETCTRL_UTICK_RST_MASK	device/LPC54018.h	11434;"	d
SYSCON_PRESETCTRL_UTICK_RST_SHIFT	device/LPC54018.h	11435;"	d
SYSCON_PRESETCTRL_WWDT_RST	device/LPC54018.h	11529;"	d
SYSCON_PRESETCTRL_WWDT_RST_MASK	device/LPC54018.h	11527;"	d
SYSCON_PRESETCTRL_WWDT_RST_SHIFT	device/LPC54018.h	11528;"	d
SYSCON_RSTn_t	drivers/fsl_reset.h	/^} SYSCON_RSTn_t;$/;"	t	typeref:enum:_SYSCON_RSTn
SYSCON_RTCOSCCTRL_EN	device/LPC54018.h	12569;"	d
SYSCON_RTCOSCCTRL_EN_MASK	device/LPC54018.h	12567;"	d
SYSCON_RTCOSCCTRL_EN_SHIFT	device/LPC54018.h	12568;"	d
SYSCON_SC0CLKDIV_DIV	device/LPC54018.h	12126;"	d
SYSCON_SC0CLKDIV_DIV_MASK	device/LPC54018.h	12124;"	d
SYSCON_SC0CLKDIV_DIV_SHIFT	device/LPC54018.h	12125;"	d
SYSCON_SC0CLKDIV_HALT	device/LPC54018.h	12132;"	d
SYSCON_SC0CLKDIV_HALT_MASK	device/LPC54018.h	12130;"	d
SYSCON_SC0CLKDIV_HALT_SHIFT	device/LPC54018.h	12131;"	d
SYSCON_SC0CLKDIV_REQFLAG	device/LPC54018.h	12135;"	d
SYSCON_SC0CLKDIV_REQFLAG_MASK	device/LPC54018.h	12133;"	d
SYSCON_SC0CLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12134;"	d
SYSCON_SC0CLKDIV_RESET	device/LPC54018.h	12129;"	d
SYSCON_SC0CLKDIV_RESET_MASK	device/LPC54018.h	12127;"	d
SYSCON_SC0CLKDIV_RESET_SHIFT	device/LPC54018.h	12128;"	d
SYSCON_SC1CLKDIV_DIV	device/LPC54018.h	12142;"	d
SYSCON_SC1CLKDIV_DIV_MASK	device/LPC54018.h	12140;"	d
SYSCON_SC1CLKDIV_DIV_SHIFT	device/LPC54018.h	12141;"	d
SYSCON_SC1CLKDIV_HALT	device/LPC54018.h	12148;"	d
SYSCON_SC1CLKDIV_HALT_MASK	device/LPC54018.h	12146;"	d
SYSCON_SC1CLKDIV_HALT_SHIFT	device/LPC54018.h	12147;"	d
SYSCON_SC1CLKDIV_REQFLAG	device/LPC54018.h	12151;"	d
SYSCON_SC1CLKDIV_REQFLAG_MASK	device/LPC54018.h	12149;"	d
SYSCON_SC1CLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12150;"	d
SYSCON_SC1CLKDIV_RESET	device/LPC54018.h	12145;"	d
SYSCON_SC1CLKDIV_RESET_MASK	device/LPC54018.h	12143;"	d
SYSCON_SC1CLKDIV_RESET_SHIFT	device/LPC54018.h	12144;"	d
SYSCON_SCTCLKDIV_DIV	device/LPC54018.h	12322;"	d
SYSCON_SCTCLKDIV_DIV_MASK	device/LPC54018.h	12320;"	d
SYSCON_SCTCLKDIV_DIV_SHIFT	device/LPC54018.h	12321;"	d
SYSCON_SCTCLKDIV_HALT	device/LPC54018.h	12328;"	d
SYSCON_SCTCLKDIV_HALT_MASK	device/LPC54018.h	12326;"	d
SYSCON_SCTCLKDIV_HALT_SHIFT	device/LPC54018.h	12327;"	d
SYSCON_SCTCLKDIV_REQFLAG	device/LPC54018.h	12331;"	d
SYSCON_SCTCLKDIV_REQFLAG_MASK	device/LPC54018.h	12329;"	d
SYSCON_SCTCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12330;"	d
SYSCON_SCTCLKDIV_RESET	device/LPC54018.h	12325;"	d
SYSCON_SCTCLKDIV_RESET_MASK	device/LPC54018.h	12323;"	d
SYSCON_SCTCLKDIV_RESET_SHIFT	device/LPC54018.h	12324;"	d
SYSCON_SCTCLKSEL_SEL	device/LPC54018.h	12027;"	d
SYSCON_SCTCLKSEL_SEL_MASK	device/LPC54018.h	12018;"	d
SYSCON_SCTCLKSEL_SEL_SHIFT	device/LPC54018.h	12019;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_DELAY	device/LPC54018.h	12507;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_DELAY_ACTIVE	device/LPC54018.h	12510;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_DELAY_ACTIVE_MASK	device/LPC54018.h	12508;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_DELAY_ACTIVE_SHIFT	device/LPC54018.h	12509;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_DELAY_MASK	device/LPC54018.h	12505;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_DELAY_SHIFT	device/LPC54018.h	12506;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_PHASE	device/LPC54018.h	12498;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_PHASE_MASK	device/LPC54018.h	12496;"	d
SYSCON_SDIOCLKCTRL_CCLK_DRV_PHASE_SHIFT	device/LPC54018.h	12497;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_DELAY	device/LPC54018.h	12513;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_DELAY_ACTIVE	device/LPC54018.h	12516;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_DELAY_ACTIVE_MASK	device/LPC54018.h	12514;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_DELAY_ACTIVE_SHIFT	device/LPC54018.h	12515;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_DELAY_MASK	device/LPC54018.h	12511;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_DELAY_SHIFT	device/LPC54018.h	12512;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_PHASE	device/LPC54018.h	12501;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_PHASE_MASK	device/LPC54018.h	12499;"	d
SYSCON_SDIOCLKCTRL_CCLK_SAMPLE_PHASE_SHIFT	device/LPC54018.h	12500;"	d
SYSCON_SDIOCLKCTRL_PHASE_ACTIVE	device/LPC54018.h	12504;"	d
SYSCON_SDIOCLKCTRL_PHASE_ACTIVE_MASK	device/LPC54018.h	12502;"	d
SYSCON_SDIOCLKCTRL_PHASE_ACTIVE_SHIFT	device/LPC54018.h	12503;"	d
SYSCON_SDIOCLKDIV_DIV	device/LPC54018.h	12354;"	d
SYSCON_SDIOCLKDIV_DIV_MASK	device/LPC54018.h	12352;"	d
SYSCON_SDIOCLKDIV_DIV_SHIFT	device/LPC54018.h	12353;"	d
SYSCON_SDIOCLKDIV_HALT	device/LPC54018.h	12360;"	d
SYSCON_SDIOCLKDIV_HALT_MASK	device/LPC54018.h	12358;"	d
SYSCON_SDIOCLKDIV_HALT_SHIFT	device/LPC54018.h	12359;"	d
SYSCON_SDIOCLKDIV_REQFLAG	device/LPC54018.h	12363;"	d
SYSCON_SDIOCLKDIV_REQFLAG_MASK	device/LPC54018.h	12361;"	d
SYSCON_SDIOCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12362;"	d
SYSCON_SDIOCLKDIV_RESET	device/LPC54018.h	12357;"	d
SYSCON_SDIOCLKDIV_RESET_MASK	device/LPC54018.h	12355;"	d
SYSCON_SDIOCLKDIV_RESET_SHIFT	device/LPC54018.h	12356;"	d
SYSCON_SDIOCLKSEL_SEL	device/LPC54018.h	12055;"	d
SYSCON_SDIOCLKSEL_SEL_MASK	device/LPC54018.h	12045;"	d
SYSCON_SDIOCLKSEL_SEL_SHIFT	device/LPC54018.h	12046;"	d
SYSCON_SPIFICLKDIV_DIV	device/LPC54018.h	12200;"	d
SYSCON_SPIFICLKDIV_DIV_MASK	device/LPC54018.h	12198;"	d
SYSCON_SPIFICLKDIV_DIV_SHIFT	device/LPC54018.h	12199;"	d
SYSCON_SPIFICLKDIV_HALT	device/LPC54018.h	12206;"	d
SYSCON_SPIFICLKDIV_HALT_MASK	device/LPC54018.h	12204;"	d
SYSCON_SPIFICLKDIV_HALT_SHIFT	device/LPC54018.h	12205;"	d
SYSCON_SPIFICLKDIV_REQFLAG	device/LPC54018.h	12209;"	d
SYSCON_SPIFICLKDIV_REQFLAG_MASK	device/LPC54018.h	12207;"	d
SYSCON_SPIFICLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12208;"	d
SYSCON_SPIFICLKDIV_RESET	device/LPC54018.h	12203;"	d
SYSCON_SPIFICLKDIV_RESET_MASK	device/LPC54018.h	12201;"	d
SYSCON_SPIFICLKDIV_RESET_SHIFT	device/LPC54018.h	12202;"	d
SYSCON_SPIFICLKSEL_SEL	device/LPC54018.h	11898;"	d
SYSCON_SPIFICLKSEL_SEL_MASK	device/LPC54018.h	11888;"	d
SYSCON_SPIFICLKSEL_SEL_SHIFT	device/LPC54018.h	11889;"	d
SYSCON_STARTERCLR_COUNT	device/LPC54018.h	13208;"	d
SYSCON_STARTERCLR_START_CLR	device/LPC54018.h	13204;"	d
SYSCON_STARTERCLR_START_CLR_MASK	device/LPC54018.h	13202;"	d
SYSCON_STARTERCLR_START_CLR_SHIFT	device/LPC54018.h	13203;"	d
SYSCON_STARTERSET_COUNT	device/LPC54018.h	13198;"	d
SYSCON_STARTERSET_START_SET	device/LPC54018.h	13194;"	d
SYSCON_STARTERSET_START_SET_MASK	device/LPC54018.h	13192;"	d
SYSCON_STARTERSET_START_SET_SHIFT	device/LPC54018.h	13193;"	d
SYSCON_STARTER_COUNT	device/LPC54018.h	13188;"	d
SYSCON_STARTER_DMA	device/LPC54018.h	13100;"	d
SYSCON_STARTER_DMA_MASK	device/LPC54018.h	13098;"	d
SYSCON_STARTER_DMA_SHIFT	device/LPC54018.h	13099;"	d
SYSCON_STARTER_DMIC	device/LPC54018.h	13169;"	d
SYSCON_STARTER_DMIC_MASK	device/LPC54018.h	13167;"	d
SYSCON_STARTER_DMIC_SHIFT	device/LPC54018.h	13168;"	d
SYSCON_STARTER_FLEXCOMM0	device/LPC54018.h	13139;"	d
SYSCON_STARTER_FLEXCOMM0_MASK	device/LPC54018.h	13137;"	d
SYSCON_STARTER_FLEXCOMM0_SHIFT	device/LPC54018.h	13138;"	d
SYSCON_STARTER_FLEXCOMM1	device/LPC54018.h	13142;"	d
SYSCON_STARTER_FLEXCOMM10	device/LPC54018.h	13184;"	d
SYSCON_STARTER_FLEXCOMM10_MASK	device/LPC54018.h	13182;"	d
SYSCON_STARTER_FLEXCOMM10_SHIFT	device/LPC54018.h	13183;"	d
SYSCON_STARTER_FLEXCOMM1_MASK	device/LPC54018.h	13140;"	d
SYSCON_STARTER_FLEXCOMM1_SHIFT	device/LPC54018.h	13141;"	d
SYSCON_STARTER_FLEXCOMM2	device/LPC54018.h	13148;"	d
SYSCON_STARTER_FLEXCOMM2_MASK	device/LPC54018.h	13146;"	d
SYSCON_STARTER_FLEXCOMM2_SHIFT	device/LPC54018.h	13147;"	d
SYSCON_STARTER_FLEXCOMM3	device/LPC54018.h	13154;"	d
SYSCON_STARTER_FLEXCOMM3_MASK	device/LPC54018.h	13152;"	d
SYSCON_STARTER_FLEXCOMM3_SHIFT	device/LPC54018.h	13153;"	d
SYSCON_STARTER_FLEXCOMM4	device/LPC54018.h	13157;"	d
SYSCON_STARTER_FLEXCOMM4_MASK	device/LPC54018.h	13155;"	d
SYSCON_STARTER_FLEXCOMM4_SHIFT	device/LPC54018.h	13156;"	d
SYSCON_STARTER_FLEXCOMM5	device/LPC54018.h	13160;"	d
SYSCON_STARTER_FLEXCOMM5_MASK	device/LPC54018.h	13158;"	d
SYSCON_STARTER_FLEXCOMM5_SHIFT	device/LPC54018.h	13159;"	d
SYSCON_STARTER_FLEXCOMM6	device/LPC54018.h	13163;"	d
SYSCON_STARTER_FLEXCOMM6_MASK	device/LPC54018.h	13161;"	d
SYSCON_STARTER_FLEXCOMM6_SHIFT	device/LPC54018.h	13162;"	d
SYSCON_STARTER_FLEXCOMM7	device/LPC54018.h	13166;"	d
SYSCON_STARTER_FLEXCOMM7_MASK	device/LPC54018.h	13164;"	d
SYSCON_STARTER_FLEXCOMM7_SHIFT	device/LPC54018.h	13165;"	d
SYSCON_STARTER_FLEXCOMM8	device/LPC54018.h	13130;"	d
SYSCON_STARTER_FLEXCOMM8_MASK	device/LPC54018.h	13128;"	d
SYSCON_STARTER_FLEXCOMM8_SHIFT	device/LPC54018.h	13129;"	d
SYSCON_STARTER_FLEXCOMM9	device/LPC54018.h	13136;"	d
SYSCON_STARTER_FLEXCOMM9_MASK	device/LPC54018.h	13134;"	d
SYSCON_STARTER_FLEXCOMM9_SHIFT	device/LPC54018.h	13135;"	d
SYSCON_STARTER_GINT0	device/LPC54018.h	13106;"	d
SYSCON_STARTER_GINT0_MASK	device/LPC54018.h	13104;"	d
SYSCON_STARTER_GINT0_SHIFT	device/LPC54018.h	13105;"	d
SYSCON_STARTER_GINT1	device/LPC54018.h	13112;"	d
SYSCON_STARTER_GINT1_MASK	device/LPC54018.h	13110;"	d
SYSCON_STARTER_GINT1_SHIFT	device/LPC54018.h	13111;"	d
SYSCON_STARTER_HWVAD	device/LPC54018.h	13172;"	d
SYSCON_STARTER_HWVAD_MASK	device/LPC54018.h	13170;"	d
SYSCON_STARTER_HWVAD_SHIFT	device/LPC54018.h	13171;"	d
SYSCON_STARTER_PINT4	device/LPC54018.h	13094;"	d
SYSCON_STARTER_PINT4_MASK	device/LPC54018.h	13092;"	d
SYSCON_STARTER_PINT4_SHIFT	device/LPC54018.h	13093;"	d
SYSCON_STARTER_PINT5	device/LPC54018.h	13103;"	d
SYSCON_STARTER_PINT5_MASK	device/LPC54018.h	13101;"	d
SYSCON_STARTER_PINT5_SHIFT	device/LPC54018.h	13102;"	d
SYSCON_STARTER_PINT6	device/LPC54018.h	13109;"	d
SYSCON_STARTER_PINT6_MASK	device/LPC54018.h	13107;"	d
SYSCON_STARTER_PINT6_SHIFT	device/LPC54018.h	13108;"	d
SYSCON_STARTER_PINT7	device/LPC54018.h	13115;"	d
SYSCON_STARTER_PINT7_MASK	device/LPC54018.h	13113;"	d
SYSCON_STARTER_PINT7_SHIFT	device/LPC54018.h	13114;"	d
SYSCON_STARTER_PIN_INT0	device/LPC54018.h	13118;"	d
SYSCON_STARTER_PIN_INT0_MASK	device/LPC54018.h	13116;"	d
SYSCON_STARTER_PIN_INT0_SHIFT	device/LPC54018.h	13117;"	d
SYSCON_STARTER_PIN_INT1	device/LPC54018.h	13121;"	d
SYSCON_STARTER_PIN_INT1_MASK	device/LPC54018.h	13119;"	d
SYSCON_STARTER_PIN_INT1_SHIFT	device/LPC54018.h	13120;"	d
SYSCON_STARTER_PIN_INT2	device/LPC54018.h	13124;"	d
SYSCON_STARTER_PIN_INT2_MASK	device/LPC54018.h	13122;"	d
SYSCON_STARTER_PIN_INT2_SHIFT	device/LPC54018.h	13123;"	d
SYSCON_STARTER_PIN_INT3	device/LPC54018.h	13127;"	d
SYSCON_STARTER_PIN_INT3_MASK	device/LPC54018.h	13125;"	d
SYSCON_STARTER_PIN_INT3_SHIFT	device/LPC54018.h	13126;"	d
SYSCON_STARTER_RTC	device/LPC54018.h	13181;"	d
SYSCON_STARTER_RTC_MASK	device/LPC54018.h	13179;"	d
SYSCON_STARTER_RTC_SHIFT	device/LPC54018.h	13180;"	d
SYSCON_STARTER_USB0	device/LPC54018.h	13178;"	d
SYSCON_STARTER_USB0_MASK	device/LPC54018.h	13176;"	d
SYSCON_STARTER_USB0_NEEDCLK	device/LPC54018.h	13175;"	d
SYSCON_STARTER_USB0_NEEDCLK_MASK	device/LPC54018.h	13173;"	d
SYSCON_STARTER_USB0_NEEDCLK_SHIFT	device/LPC54018.h	13174;"	d
SYSCON_STARTER_USB0_SHIFT	device/LPC54018.h	13177;"	d
SYSCON_STARTER_USB1	device/LPC54018.h	13145;"	d
SYSCON_STARTER_USB1_ACT	device/LPC54018.h	13151;"	d
SYSCON_STARTER_USB1_ACT_MASK	device/LPC54018.h	13149;"	d
SYSCON_STARTER_USB1_ACT_SHIFT	device/LPC54018.h	13150;"	d
SYSCON_STARTER_USB1_MASK	device/LPC54018.h	13143;"	d
SYSCON_STARTER_USB1_SHIFT	device/LPC54018.h	13144;"	d
SYSCON_STARTER_UTICK	device/LPC54018.h	13133;"	d
SYSCON_STARTER_UTICK_MASK	device/LPC54018.h	13131;"	d
SYSCON_STARTER_UTICK_SHIFT	device/LPC54018.h	13132;"	d
SYSCON_STARTER_WDT_BOD	device/LPC54018.h	13097;"	d
SYSCON_STARTER_WDT_BOD_MASK	device/LPC54018.h	13095;"	d
SYSCON_STARTER_WDT_BOD_SHIFT	device/LPC54018.h	13096;"	d
SYSCON_STICKCLKSEL_SEL	device/LPC54018.h	11815;"	d
SYSCON_STICKCLKSEL_SEL_MASK	device/LPC54018.h	11803;"	d
SYSCON_STICKCLKSEL_SEL_SHIFT	device/LPC54018.h	11804;"	d
SYSCON_SYSOSCCTRL_FREQRANGE	device/LPC54018.h	12552;"	d
SYSCON_SYSOSCCTRL_FREQRANGE_MASK	device/LPC54018.h	12550;"	d
SYSCON_SYSOSCCTRL_FREQRANGE_SHIFT	device/LPC54018.h	12551;"	d
SYSCON_SYSPLLCLKSEL_SEL	device/LPC54018.h	11871;"	d
SYSCON_SYSPLLCLKSEL_SEL_MASK	device/LPC54018.h	11863;"	d
SYSCON_SYSPLLCLKSEL_SEL_SHIFT	device/LPC54018.h	11864;"	d
SYSCON_SYSPLLCTRL_BYPASS	device/LPC54018.h	12626;"	d
SYSCON_SYSPLLCTRL_BYPASS_MASK	device/LPC54018.h	12620;"	d
SYSCON_SYSPLLCTRL_BYPASS_SHIFT	device/LPC54018.h	12621;"	d
SYSCON_SYSPLLCTRL_DIRECTI	device/LPC54018.h	12632;"	d
SYSCON_SYSPLLCTRL_DIRECTI_MASK	device/LPC54018.h	12630;"	d
SYSCON_SYSPLLCTRL_DIRECTI_SHIFT	device/LPC54018.h	12631;"	d
SYSCON_SYSPLLCTRL_DIRECTO	device/LPC54018.h	12639;"	d
SYSCON_SYSPLLCTRL_DIRECTO_MASK	device/LPC54018.h	12633;"	d
SYSCON_SYSPLLCTRL_DIRECTO_SHIFT	device/LPC54018.h	12634;"	d
SYSCON_SYSPLLCTRL_SELI	device/LPC54018.h	12616;"	d
SYSCON_SYSPLLCTRL_SELI_MASK	device/LPC54018.h	12614;"	d
SYSCON_SYSPLLCTRL_SELI_SHIFT	device/LPC54018.h	12615;"	d
SYSCON_SYSPLLCTRL_SELP	device/LPC54018.h	12619;"	d
SYSCON_SYSPLLCTRL_SELP_MASK	device/LPC54018.h	12617;"	d
SYSCON_SYSPLLCTRL_SELP_SHIFT	device/LPC54018.h	12618;"	d
SYSCON_SYSPLLCTRL_SELR	device/LPC54018.h	12613;"	d
SYSCON_SYSPLLCTRL_SELR_MASK	device/LPC54018.h	12611;"	d
SYSCON_SYSPLLCTRL_SELR_SHIFT	device/LPC54018.h	12612;"	d
SYSCON_SYSPLLCTRL_UPLIMOFF	device/LPC54018.h	12629;"	d
SYSCON_SYSPLLCTRL_UPLIMOFF_MASK	device/LPC54018.h	12627;"	d
SYSCON_SYSPLLCTRL_UPLIMOFF_SHIFT	device/LPC54018.h	12628;"	d
SYSCON_SYSPLLMDEC_MDEC	device/LPC54018.h	12673;"	d
SYSCON_SYSPLLMDEC_MDEC_MASK	device/LPC54018.h	12671;"	d
SYSCON_SYSPLLMDEC_MDEC_SHIFT	device/LPC54018.h	12672;"	d
SYSCON_SYSPLLMDEC_MREQ	device/LPC54018.h	12676;"	d
SYSCON_SYSPLLMDEC_MREQ_MASK	device/LPC54018.h	12674;"	d
SYSCON_SYSPLLMDEC_MREQ_SHIFT	device/LPC54018.h	12675;"	d
SYSCON_SYSPLLNDEC_NDEC	device/LPC54018.h	12653;"	d
SYSCON_SYSPLLNDEC_NDEC_MASK	device/LPC54018.h	12651;"	d
SYSCON_SYSPLLNDEC_NDEC_SHIFT	device/LPC54018.h	12652;"	d
SYSCON_SYSPLLNDEC_NREQ	device/LPC54018.h	12656;"	d
SYSCON_SYSPLLNDEC_NREQ_MASK	device/LPC54018.h	12654;"	d
SYSCON_SYSPLLNDEC_NREQ_SHIFT	device/LPC54018.h	12655;"	d
SYSCON_SYSPLLPDEC_PDEC	device/LPC54018.h	12663;"	d
SYSCON_SYSPLLPDEC_PDEC_MASK	device/LPC54018.h	12661;"	d
SYSCON_SYSPLLPDEC_PDEC_SHIFT	device/LPC54018.h	12662;"	d
SYSCON_SYSPLLPDEC_PREQ	device/LPC54018.h	12666;"	d
SYSCON_SYSPLLPDEC_PREQ_MASK	device/LPC54018.h	12664;"	d
SYSCON_SYSPLLPDEC_PREQ_SHIFT	device/LPC54018.h	12665;"	d
SYSCON_SYSPLLSTAT_LOCK	device/LPC54018.h	12646;"	d
SYSCON_SYSPLLSTAT_LOCK_MASK	device/LPC54018.h	12644;"	d
SYSCON_SYSPLLSTAT_LOCK_SHIFT	device/LPC54018.h	12645;"	d
SYSCON_SYSRSTSTAT_BOD	device/LPC54018.h	11596;"	d
SYSCON_SYSRSTSTAT_BOD_MASK	device/LPC54018.h	11590;"	d
SYSCON_SYSRSTSTAT_BOD_SHIFT	device/LPC54018.h	11591;"	d
SYSCON_SYSRSTSTAT_EXTRST	device/LPC54018.h	11582;"	d
SYSCON_SYSRSTSTAT_EXTRST_MASK	device/LPC54018.h	11576;"	d
SYSCON_SYSRSTSTAT_EXTRST_SHIFT	device/LPC54018.h	11577;"	d
SYSCON_SYSRSTSTAT_POR	device/LPC54018.h	11575;"	d
SYSCON_SYSRSTSTAT_POR_MASK	device/LPC54018.h	11569;"	d
SYSCON_SYSRSTSTAT_POR_SHIFT	device/LPC54018.h	11570;"	d
SYSCON_SYSRSTSTAT_SYSRST	device/LPC54018.h	11603;"	d
SYSCON_SYSRSTSTAT_SYSRST_MASK	device/LPC54018.h	11597;"	d
SYSCON_SYSRSTSTAT_SYSRST_SHIFT	device/LPC54018.h	11598;"	d
SYSCON_SYSRSTSTAT_WDT	device/LPC54018.h	11589;"	d
SYSCON_SYSRSTSTAT_WDT_MASK	device/LPC54018.h	11583;"	d
SYSCON_SYSRSTSTAT_WDT_SHIFT	device/LPC54018.h	11584;"	d
SYSCON_SYSTCKCAL_CAL	device/LPC54018.h	11340;"	d
SYSCON_SYSTCKCAL_CAL_MASK	device/LPC54018.h	11338;"	d
SYSCON_SYSTCKCAL_CAL_SHIFT	device/LPC54018.h	11339;"	d
SYSCON_SYSTCKCAL_NOREF	device/LPC54018.h	11346;"	d
SYSCON_SYSTCKCAL_NOREF_MASK	device/LPC54018.h	11344;"	d
SYSCON_SYSTCKCAL_NOREF_SHIFT	device/LPC54018.h	11345;"	d
SYSCON_SYSTCKCAL_SKEW	device/LPC54018.h	11343;"	d
SYSCON_SYSTCKCAL_SKEW_MASK	device/LPC54018.h	11341;"	d
SYSCON_SYSTCKCAL_SKEW_SHIFT	device/LPC54018.h	11342;"	d
SYSCON_SYSTICKCLKDIV_DIV	device/LPC54018.h	12062;"	d
SYSCON_SYSTICKCLKDIV_DIV_MASK	device/LPC54018.h	12060;"	d
SYSCON_SYSTICKCLKDIV_DIV_SHIFT	device/LPC54018.h	12061;"	d
SYSCON_SYSTICKCLKDIV_HALT	device/LPC54018.h	12068;"	d
SYSCON_SYSTICKCLKDIV_HALT_MASK	device/LPC54018.h	12066;"	d
SYSCON_SYSTICKCLKDIV_HALT_SHIFT	device/LPC54018.h	12067;"	d
SYSCON_SYSTICKCLKDIV_REQFLAG	device/LPC54018.h	12071;"	d
SYSCON_SYSTICKCLKDIV_REQFLAG_MASK	device/LPC54018.h	12069;"	d
SYSCON_SYSTICKCLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12070;"	d
SYSCON_SYSTICKCLKDIV_RESET	device/LPC54018.h	12065;"	d
SYSCON_SYSTICKCLKDIV_RESET_MASK	device/LPC54018.h	12063;"	d
SYSCON_SYSTICKCLKDIV_RESET_SHIFT	device/LPC54018.h	12064;"	d
SYSCON_Type	device/LPC54018.h	/^} SYSCON_Type;$/;"	t	typeref:struct:__anon185
SYSCON_USB0CLKCTRL_AP_FS_DEV_CLK	device/LPC54018.h	12370;"	d
SYSCON_USB0CLKCTRL_AP_FS_DEV_CLK_MASK	device/LPC54018.h	12368;"	d
SYSCON_USB0CLKCTRL_AP_FS_DEV_CLK_SHIFT	device/LPC54018.h	12369;"	d
SYSCON_USB0CLKCTRL_AP_FS_HOST_CLK	device/LPC54018.h	12376;"	d
SYSCON_USB0CLKCTRL_AP_FS_HOST_CLK_MASK	device/LPC54018.h	12374;"	d
SYSCON_USB0CLKCTRL_AP_FS_HOST_CLK_SHIFT	device/LPC54018.h	12375;"	d
SYSCON_USB0CLKCTRL_POL_FS_DEV_CLK	device/LPC54018.h	12373;"	d
SYSCON_USB0CLKCTRL_POL_FS_DEV_CLK_MASK	device/LPC54018.h	12371;"	d
SYSCON_USB0CLKCTRL_POL_FS_DEV_CLK_SHIFT	device/LPC54018.h	12372;"	d
SYSCON_USB0CLKCTRL_POL_FS_HOST_CLK	device/LPC54018.h	12379;"	d
SYSCON_USB0CLKCTRL_POL_FS_HOST_CLK_MASK	device/LPC54018.h	12377;"	d
SYSCON_USB0CLKCTRL_POL_FS_HOST_CLK_SHIFT	device/LPC54018.h	12378;"	d
SYSCON_USB0CLKCTRL_PU_DISABLE	device/LPC54018.h	12382;"	d
SYSCON_USB0CLKCTRL_PU_DISABLE_MASK	device/LPC54018.h	12380;"	d
SYSCON_USB0CLKCTRL_PU_DISABLE_SHIFT	device/LPC54018.h	12381;"	d
SYSCON_USB0CLKDIV_DIV	device/LPC54018.h	12232;"	d
SYSCON_USB0CLKDIV_DIV_MASK	device/LPC54018.h	12230;"	d
SYSCON_USB0CLKDIV_DIV_SHIFT	device/LPC54018.h	12231;"	d
SYSCON_USB0CLKDIV_HALT	device/LPC54018.h	12238;"	d
SYSCON_USB0CLKDIV_HALT_MASK	device/LPC54018.h	12236;"	d
SYSCON_USB0CLKDIV_HALT_SHIFT	device/LPC54018.h	12237;"	d
SYSCON_USB0CLKDIV_REQFLAG	device/LPC54018.h	12241;"	d
SYSCON_USB0CLKDIV_REQFLAG_MASK	device/LPC54018.h	12239;"	d
SYSCON_USB0CLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12240;"	d
SYSCON_USB0CLKDIV_RESET	device/LPC54018.h	12235;"	d
SYSCON_USB0CLKDIV_RESET_MASK	device/LPC54018.h	12233;"	d
SYSCON_USB0CLKDIV_RESET_SHIFT	device/LPC54018.h	12234;"	d
SYSCON_USB0CLKSEL_SEL	device/LPC54018.h	11925;"	d
SYSCON_USB0CLKSEL_SEL_MASK	device/LPC54018.h	11917;"	d
SYSCON_USB0CLKSEL_SEL_SHIFT	device/LPC54018.h	11918;"	d
SYSCON_USB0CLKSTAT_DEV_NEED_CLKST	device/LPC54018.h	12389;"	d
SYSCON_USB0CLKSTAT_DEV_NEED_CLKST_MASK	device/LPC54018.h	12387;"	d
SYSCON_USB0CLKSTAT_DEV_NEED_CLKST_SHIFT	device/LPC54018.h	12388;"	d
SYSCON_USB0CLKSTAT_HOST_NEED_CLKST	device/LPC54018.h	12392;"	d
SYSCON_USB0CLKSTAT_HOST_NEED_CLKST_MASK	device/LPC54018.h	12390;"	d
SYSCON_USB0CLKSTAT_HOST_NEED_CLKST_SHIFT	device/LPC54018.h	12391;"	d
SYSCON_USB1CLKCTRL_AP_FS_DEV_CLK	device/LPC54018.h	12416;"	d
SYSCON_USB1CLKCTRL_AP_FS_DEV_CLK_MASK	device/LPC54018.h	12414;"	d
SYSCON_USB1CLKCTRL_AP_FS_DEV_CLK_SHIFT	device/LPC54018.h	12415;"	d
SYSCON_USB1CLKCTRL_AP_FS_HOST_CLK	device/LPC54018.h	12422;"	d
SYSCON_USB1CLKCTRL_AP_FS_HOST_CLK_MASK	device/LPC54018.h	12420;"	d
SYSCON_USB1CLKCTRL_AP_FS_HOST_CLK_SHIFT	device/LPC54018.h	12421;"	d
SYSCON_USB1CLKCTRL_HS_DEV_WAKEUP_N	device/LPC54018.h	12428;"	d
SYSCON_USB1CLKCTRL_HS_DEV_WAKEUP_N_MASK	device/LPC54018.h	12426;"	d
SYSCON_USB1CLKCTRL_HS_DEV_WAKEUP_N_SHIFT	device/LPC54018.h	12427;"	d
SYSCON_USB1CLKCTRL_POL_FS_DEV_CLK	device/LPC54018.h	12419;"	d
SYSCON_USB1CLKCTRL_POL_FS_DEV_CLK_MASK	device/LPC54018.h	12417;"	d
SYSCON_USB1CLKCTRL_POL_FS_DEV_CLK_SHIFT	device/LPC54018.h	12418;"	d
SYSCON_USB1CLKCTRL_POL_FS_HOST_CLK	device/LPC54018.h	12425;"	d
SYSCON_USB1CLKCTRL_POL_FS_HOST_CLK_MASK	device/LPC54018.h	12423;"	d
SYSCON_USB1CLKCTRL_POL_FS_HOST_CLK_SHIFT	device/LPC54018.h	12424;"	d
SYSCON_USB1CLKDIV_DIV	device/LPC54018.h	12248;"	d
SYSCON_USB1CLKDIV_DIV_MASK	device/LPC54018.h	12246;"	d
SYSCON_USB1CLKDIV_DIV_SHIFT	device/LPC54018.h	12247;"	d
SYSCON_USB1CLKDIV_HALT	device/LPC54018.h	12254;"	d
SYSCON_USB1CLKDIV_HALT_MASK	device/LPC54018.h	12252;"	d
SYSCON_USB1CLKDIV_HALT_SHIFT	device/LPC54018.h	12253;"	d
SYSCON_USB1CLKDIV_REQFLAG	device/LPC54018.h	12257;"	d
SYSCON_USB1CLKDIV_REQFLAG_MASK	device/LPC54018.h	12255;"	d
SYSCON_USB1CLKDIV_REQFLAG_SHIFT	device/LPC54018.h	12256;"	d
SYSCON_USB1CLKDIV_RESET	device/LPC54018.h	12251;"	d
SYSCON_USB1CLKDIV_RESET_MASK	device/LPC54018.h	12249;"	d
SYSCON_USB1CLKDIV_RESET_SHIFT	device/LPC54018.h	12250;"	d
SYSCON_USB1CLKSEL_SEL	device/LPC54018.h	11938;"	d
SYSCON_USB1CLKSEL_SEL_MASK	device/LPC54018.h	11930;"	d
SYSCON_USB1CLKSEL_SEL_SHIFT	device/LPC54018.h	11931;"	d
SYSCON_USB1CLKSTAT_DEV_NEED_CLKST	device/LPC54018.h	12435;"	d
SYSCON_USB1CLKSTAT_DEV_NEED_CLKST_MASK	device/LPC54018.h	12433;"	d
SYSCON_USB1CLKSTAT_DEV_NEED_CLKST_SHIFT	device/LPC54018.h	12434;"	d
SYSCON_USB1CLKSTAT_HOST_NEED_CLKST	device/LPC54018.h	12438;"	d
SYSCON_USB1CLKSTAT_HOST_NEED_CLKST_MASK	device/LPC54018.h	12436;"	d
SYSCON_USB1CLKSTAT_HOST_NEED_CLKST_SHIFT	device/LPC54018.h	12437;"	d
SYSCON_USBPLLCTRL_BYPASS	device/LPC54018.h	12596;"	d
SYSCON_USBPLLCTRL_BYPASS_MASK	device/LPC54018.h	12590;"	d
SYSCON_USBPLLCTRL_BYPASS_SHIFT	device/LPC54018.h	12591;"	d
SYSCON_USBPLLCTRL_DIRECT	device/LPC54018.h	12589;"	d
SYSCON_USBPLLCTRL_DIRECT_MASK	device/LPC54018.h	12583;"	d
SYSCON_USBPLLCTRL_DIRECT_SHIFT	device/LPC54018.h	12584;"	d
SYSCON_USBPLLCTRL_FBSEL	device/LPC54018.h	12599;"	d
SYSCON_USBPLLCTRL_FBSEL_MASK	device/LPC54018.h	12597;"	d
SYSCON_USBPLLCTRL_FBSEL_SHIFT	device/LPC54018.h	12598;"	d
SYSCON_USBPLLCTRL_MSEL	device/LPC54018.h	12576;"	d
SYSCON_USBPLLCTRL_MSEL_MASK	device/LPC54018.h	12574;"	d
SYSCON_USBPLLCTRL_MSEL_SHIFT	device/LPC54018.h	12575;"	d
SYSCON_USBPLLCTRL_NSEL	device/LPC54018.h	12582;"	d
SYSCON_USBPLLCTRL_NSEL_MASK	device/LPC54018.h	12580;"	d
SYSCON_USBPLLCTRL_NSEL_SHIFT	device/LPC54018.h	12581;"	d
SYSCON_USBPLLCTRL_PSEL	device/LPC54018.h	12579;"	d
SYSCON_USBPLLCTRL_PSEL_MASK	device/LPC54018.h	12577;"	d
SYSCON_USBPLLCTRL_PSEL_SHIFT	device/LPC54018.h	12578;"	d
SYSCON_USBPLLSTAT_LOCK	device/LPC54018.h	12606;"	d
SYSCON_USBPLLSTAT_LOCK_MASK	device/LPC54018.h	12604;"	d
SYSCON_USBPLLSTAT_LOCK_SHIFT	device/LPC54018.h	12605;"	d
SYSCON_WDTOSCCTRL_DIVSEL	device/LPC54018.h	12559;"	d
SYSCON_WDTOSCCTRL_DIVSEL_MASK	device/LPC54018.h	12557;"	d
SYSCON_WDTOSCCTRL_DIVSEL_SHIFT	device/LPC54018.h	12558;"	d
SYSCON_WDTOSCCTRL_FREQSEL	device/LPC54018.h	12562;"	d
SYSCON_WDTOSCCTRL_FREQSEL_MASK	device/LPC54018.h	12560;"	d
SYSCON_WDTOSCCTRL_FREQSEL_SHIFT	device/LPC54018.h	12561;"	d
SYSDEBUG	lwip/src/include/netif/ppp/pppdebug.h	59;"	d
SYSDEBUG	lwip/src/include/netif/ppp/pppdebug.h	71;"	d
SYSOSCCTRL	device/LPC54018.h	/^  __IO uint32_t SYSOSCCTRL;                        \/**< System oscillator control, offset: 0x504 *\/$/;"	m	struct:__anon185
SYSPLLCLKSEL	device/LPC54018.h	/^  __IO uint32_t SYSPLLCLKSEL;                      \/**< PLL clock source select, offset: 0x290 *\/$/;"	m	struct:__anon185
SYSPLLCTRL	device/LPC54018.h	/^  __IO uint32_t SYSPLLCTRL;                        \/**< System PLL control, offset: 0x580 *\/$/;"	m	struct:__anon185
SYSPLLMDEC	device/LPC54018.h	/^  __IO uint32_t SYSPLLMDEC;                        \/**< System PLL M divider, offset: 0x590 *\/$/;"	m	struct:__anon185
SYSPLLNDEC	device/LPC54018.h	/^  __IO uint32_t SYSPLLNDEC;                        \/**< PLL N divider, offset: 0x588 *\/$/;"	m	struct:__anon185
SYSPLLPDEC	device/LPC54018.h	/^  __IO uint32_t SYSPLLPDEC;                        \/**< PLL P divider, offset: 0x58C *\/$/;"	m	struct:__anon185
SYSPLLSTAT	device/LPC54018.h	/^  __IO uint32_t SYSPLLSTAT;                        \/**< PLL status, offset: 0x584 *\/$/;"	m	struct:__anon185
SYSRSTSTAT	device/LPC54018.h	/^  __IO uint32_t SYSRSTSTAT;                        \/**< System reset status register, offset: 0x1F0 *\/$/;"	m	struct:__anon185
SYSTCKCAL	device/LPC54018.h	/^  __IO uint32_t SYSTCKCAL;                         \/**< System tick counter calibration, offset: 0x40 *\/$/;"	m	struct:__anon185
SYSTICKCLKDIV	device/LPC54018.h	/^  __IO uint32_t SYSTICKCLKDIV;                     \/**< SYSTICK clock divider, offset: 0x300 *\/$/;"	m	struct:__anon185
SYS_ARCH_DEC	lwip/src/include/lwip/sys.h	520;"	d
SYS_ARCH_DECL_PROTECT	lwip/src/include/lwip/sys.h	468;"	d
SYS_ARCH_DECL_PROTECT	lwip/src/include/lwip/sys.h	497;"	d
SYS_ARCH_GET	lwip/src/include/lwip/sys.h	529;"	d
SYS_ARCH_INC	lwip/src/include/lwip/sys.h	511;"	d
SYS_ARCH_LOCKED	lwip/src/include/lwip/sys.h	547;"	d
SYS_ARCH_PROTECT	lwip/src/include/lwip/sys.h	480;"	d
SYS_ARCH_PROTECT	lwip/src/include/lwip/sys.h	498;"	d
SYS_ARCH_SET	lwip/src/include/lwip/sys.h	538;"	d
SYS_ARCH_TIMEOUT	lwip/src/include/lwip/sys.h	87;"	d
SYS_ARCH_UNPROTECT	lwip/src/include/lwip/sys.h	491;"	d
SYS_ARCH_UNPROTECT	lwip/src/include/lwip/sys.h	499;"	d
SYS_DEBUG	lwip/src/include/lwip/opt.h	3358;"	d
SYS_DEFAULT_THREAD_STACK_DEPTH	lwip/port/arch/sys_arch.h	59;"	d
SYS_LIGHTWEIGHT_PROT	lwip/src/include/lwip/opt.h	213;"	d
SYS_LIGHTWEIGHT_PROT	source/lwipopts.h	25;"	d
SYS_MBOX_EMPTY	lwip/src/include/lwip/sys.h	92;"	d
SYS_MBOX_NULL	lwip/port/arch/sys_arch.h	57;"	d
SYS_SEM_NULL	lwip/port/arch/sys_arch.h	58;"	d
SYS_STATS	lwip/src/include/lwip/opt.h	2188;"	d
SYS_STATS	lwip/src/include/lwip/opt.h	2245;"	d
SYS_STATS_DEC	lwip/src/include/lwip/stats.h	414;"	d
SYS_STATS_DEC	lwip/src/include/lwip/stats.h	419;"	d
SYS_STATS_DISPLAY	lwip/src/include/lwip/stats.h	416;"	d
SYS_STATS_DISPLAY	lwip/src/include/lwip/stats.h	421;"	d
SYS_STATS_INC	lwip/src/include/lwip/stats.h	413;"	d
SYS_STATS_INC	lwip/src/include/lwip/stats.h	418;"	d
SYS_STATS_INC_USED	lwip/src/include/lwip/stats.h	415;"	d
SYS_STATS_INC_USED	lwip/src/include/lwip/stats.h	420;"	d
SYS_TIMEOUTS_SLEEPTIME_INFINITE	lwip/src/include/lwip/timeouts.h	62;"	d
SZT_F	lwip/src/include/lwip/arch.h	171;"	d
SZT_F	source/lwipopts.h	269;"	d
S_MUL	codec2/_kiss_fft_guts.h	67;"	d
S_MUL	codec2/_kiss_fft_guts.h	86;"	d
S_SRCS	Debug/sources.mk	/^S_SRCS := $/;"	m
S_UPPER_SRCS	Debug/sources.mk	/^S_UPPER_SRCS := $/;"	m
ScaleArray	emwin/emWin_header/GRAPH_Private.h	/^  GUI_ARRAY       ScaleArray;$/;"	m	struct:GRAPH_OBJ
ScanIgnoreWhiteSpace	utilities/fsl_str.c	/^static uint32_t ScanIgnoreWhiteSpace(const char **s)$/;"	f	file:
ScanType	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 ScanType;                  \/\/ Gray, Yh1v1, Yh1v2, Yh2v1, Yh2v2$/;"	m	struct:GUI_JPEG_DCONTEXT
ScrollPos	emwin/emWin_header/HEADER_Private.h	/^  int                 ScrollPos;$/;"	m	struct:__anon276
ScrollState	emwin/emWin_header/DROPDOWN_Private.h	/^  WM_SCROLL_STATE ScrollState;$/;"	m	struct:__anon360
ScrollState	emwin/emWin_header/MULTIPAGE_Private.h	/^  int                    ScrollState;$/;"	m	struct:MULTIPAGE_Obj
ScrollStateH	emwin/emWin_header/GRAPH_Private.h	/^  WM_SCROLL_STATE ScrollStateH;$/;"	m	struct:GRAPH_OBJ
ScrollStateH	emwin/emWin_header/ICONVIEW_Private.h	/^  WM_SCROLL_STATE         ScrollStateH;$/;"	m	struct:__anon219
ScrollStateH	emwin/emWin_header/LISTBOX_Private.h	/^  WM_SCROLL_STATE ScrollStateH;$/;"	m	struct:__anon313
ScrollStateH	emwin/emWin_header/LISTVIEW_Private.h	/^  WM_SCROLL_STATE              ScrollStateH;$/;"	m	struct:LISTVIEW_Obj
ScrollStateH	emwin/emWin_header/TREEVIEW_Private.h	/^  WM_SCROLL_STATE         ScrollStateH;$/;"	m	struct:__anon227
ScrollStateV	emwin/emWin_header/GRAPH_Private.h	/^  WM_SCROLL_STATE ScrollStateV;$/;"	m	struct:GRAPH_OBJ
ScrollStateV	emwin/emWin_header/ICONVIEW_Private.h	/^  WM_SCROLL_STATE         ScrollStateV;$/;"	m	struct:__anon219
ScrollStateV	emwin/emWin_header/LISTBOX_Private.h	/^  WM_SCROLL_STATE ScrollStateV;$/;"	m	struct:__anon313
ScrollStateV	emwin/emWin_header/LISTVIEW_Private.h	/^  WM_SCROLL_STATE              ScrollStateV;$/;"	m	struct:LISTVIEW_Obj
ScrollStateV	emwin/emWin_header/TREEVIEW_Private.h	/^  WM_SCROLL_STATE         ScrollStateV;$/;"	m	struct:__anon227
ScrollStepH	emwin/emWin_header/LISTBOX_Private.h	/^  U16              ScrollStepH;$/;"	m	struct:__anon312
ScrollStepH	emwin/emWin_header/LISTVIEW_Private.h	/^  U16                          ScrollStepH;$/;"	m	struct:__anon331
Scrollbar	emwin/emWin_header/MULTIPAGE_Private.h	/^  unsigned                  Scrollbar;$/;"	m	struct:__anon340
ScrollbarWidth	emwin/emWin_header/DROPDOWN_Private.h	/^  U8      ScrollbarWidth;$/;"	m	struct:__anon360
ScrollbarWidth	emwin/emWin_header/LISTBOX_Private.h	/^  U8  ScrollbarWidth;$/;"	m	struct:__anon313
Sel	emwin/emWin_header/CHOOSECOLOR.h	/^  int               Sel;$/;"	m	struct:__anon234
Sel	emwin/emWin_header/DROPDOWN_Private.h	/^  I16     Sel;        \/\/ Current selection$/;"	m	struct:__anon360
Sel	emwin/emWin_header/HEADER_Private.h	/^  int                 Sel;$/;"	m	struct:__anon276
Sel	emwin/emWin_header/ICONVIEW_Private.h	/^  int                     Sel;$/;"	m	struct:__anon219
Sel	emwin/emWin_header/LISTBOX_Private.h	/^  I16 Sel;                        \/* current selection *\/$/;"	m	struct:__anon313
Sel	emwin/emWin_header/LISTVIEW_Private.h	/^  int                          Sel;$/;"	m	struct:LISTVIEW_Obj
Sel	emwin/emWin_header/LISTWHEEL_Private.h	/^  int                     Sel;$/;"	m	struct:__anon353
Sel	emwin/emWin_header/MENU_Private.h	/^  int                 Sel;$/;"	m	struct:__anon319
Sel	emwin/emWin_header/MULTIPAGE.h	/^  int               Sel;$/;"	m	struct:__anon200
Sel	emwin/emWin_header/RADIO_Private.h	/^  I16 Sel;                   \/* current selection *\/$/;"	m	struct:__anon343
Sel	emwin/emWin_header/SWIPELIST_Private.h	/^  int                     Sel;$/;"	m	struct:__anon238
SelCol	emwin/emWin_header/LISTVIEW_Private.h	/^  int                          SelCol;$/;"	m	struct:LISTVIEW_Obj
SelLayer	emwin/emWin_header/GUI.h	/^  U8             SelLayer;$/;"	m	struct:GUI_CONTEXT
SelOld	emwin/emWin_header/CHOOSECOLOR.h	/^  int               SelOld;$/;"	m	struct:__anon234
SelSideBorderInc	emwin/emWin_header/MULTIPAGE.h	/^  U8  SelSideBorderInc;         \/\/ Number of pixels to add on both sides when drawing the selected item.$/;"	m	struct:__anon199
SelSize	emwin/emWin_header/EDIT_Private.h	/^  unsigned             SelSize;         \/\/ Number of selected characters$/;"	m	struct:EDIT_Obj_struct
SelTopBorderInc	emwin/emWin_header/MULTIPAGE.h	/^  U8  SelTopBorderInc;          \/\/ Number of pixels to add on top of selected items.$/;"	m	struct:__anon199
Selection	emwin/emWin_header/MULTIPAGE_Private.h	/^  unsigned               Selection;$/;"	m	struct:MULTIPAGE_Obj
SemaphoreData	amazon-freertos/freertos/queue.c	/^typedef struct SemaphoreData$/;"	s	file:
SemaphoreData_t	amazon-freertos/freertos/queue.c	/^} SemaphoreData_t;$/;"	t	typeref:struct:SemaphoreData	file:
SemaphoreHandle_t	amazon-freertos/include/semphr.h	/^typedef QueueHandle_t SemaphoreHandle_t;$/;"	t
Send	CMSIS_driver/Driver_SPI.h	/^  int32_t              (*Send)            (const void *data, uint32_t num);   \/\/\/< Pointer to \\ref ARM_SPI_Send : Start sending data to SPI Interface.$/;"	m	struct:_ARM_DRIVER_SPI
SepColor	emwin/emWin_header/SWIPELIST_Private.h	/^  GUI_COLOR      SepColor;$/;"	m	struct:__anon236
SepSize	emwin/emWin_header/SWIPELIST_Private.h	/^  int            SepSize;$/;"	m	struct:__anon236
SerialManager_AddTail	component/serial_manager/serial_manager.c	/^static void SerialManager_AddTail(list_t *queue, serial_manager_write_handle_t *node)$/;"	f	file:
SerialManager_CancelReading	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_CancelReading(serial_read_handle_t readHandle)$/;"	f
SerialManager_CancelWriting	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_CancelWriting(serial_write_handle_t writeHandle)$/;"	f
SerialManager_CloseReadHandle	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_CloseReadHandle(serial_read_handle_t readHandle)$/;"	f
SerialManager_CloseWriteHandle	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_CloseWriteHandle(serial_write_handle_t writeHandle)$/;"	f
SerialManager_Deinit	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_Deinit(serial_handle_t serialHandle)$/;"	f
SerialManager_EnterLowpower	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_EnterLowpower(serial_handle_t serialHandle)$/;"	f
SerialManager_ExitLowpower	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_ExitLowpower(serial_handle_t serialHandle)$/;"	f
SerialManager_Init	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_Init(serial_handle_t serialHandle, serial_manager_config_t *config)$/;"	f
SerialManager_InstallRxCallback	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_InstallRxCallback(serial_read_handle_t readHandle,$/;"	f
SerialManager_InstallTxCallback	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_InstallTxCallback(serial_write_handle_t writeHandle,$/;"	f
SerialManager_IsrFunction	component/serial_manager/serial_manager.c	/^static void SerialManager_IsrFunction(serial_manager_handle_t *handle)$/;"	f	file:
SerialManager_OpenReadHandle	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_OpenReadHandle(serial_handle_t serialHandle, serial_read_handle_t readHandle)$/;"	f
SerialManager_OpenWriteHandle	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_OpenWriteHandle(serial_handle_t serialHandle, serial_write_handle_t writeHandle)$/;"	f
SerialManager_Read	component/serial_manager/serial_manager.c	/^static serial_manager_status_t SerialManager_Read(serial_read_handle_t readHandle, uint8_t *buffer, uint32_t length)$/;"	f	file:
SerialManager_Read	component/serial_manager/serial_manager.c	/^static serial_manager_status_t SerialManager_Read(serial_read_handle_t readHandle,$/;"	f	file:
SerialManager_ReadBlocking	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_ReadBlocking(serial_read_handle_t readHandle, uint8_t *buffer, uint32_t length)$/;"	f
SerialManager_ReadNonBlocking	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_ReadNonBlocking(serial_read_handle_t readHandle, uint8_t *buffer, uint32_t length)$/;"	f
SerialManager_RemoveHead	component/serial_manager/serial_manager.c	/^static void SerialManager_RemoveHead(list_t *queue)$/;"	f	file:
SerialManager_RxCallback	component/serial_manager/serial_manager.c	/^static void SerialManager_RxCallback(void *callbackParam,$/;"	f	file:
SerialManager_StartReading	component/serial_manager/serial_manager.c	/^static serial_manager_status_t SerialManager_StartReading(serial_manager_handle_t *handle,$/;"	f	file:
SerialManager_StartWriting	component/serial_manager/serial_manager.c	/^static serial_manager_status_t SerialManager_StartWriting(serial_manager_handle_t *handle)$/;"	f	file:
SerialManager_StartWriting	component/serial_manager/serial_manager.c	/^static serial_manager_status_t SerialManager_StartWriting(serial_manager_handle_t *handle,$/;"	f	file:
SerialManager_Task	component/serial_manager/serial_manager.c	/^static void SerialManager_Task(void *param)$/;"	f	file:
SerialManager_TryRead	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_TryRead(serial_read_handle_t readHandle,$/;"	f
SerialManager_TxCallback	component/serial_manager/serial_manager.c	/^static void SerialManager_TxCallback(void *callbackParam,$/;"	f	file:
SerialManager_Write	component/serial_manager/serial_manager.c	/^static serial_manager_status_t SerialManager_Write(serial_write_handle_t writeHandle, uint8_t *buffer, uint32_t length)$/;"	f	file:
SerialManager_Write	component/serial_manager/serial_manager.c	/^static serial_manager_status_t SerialManager_Write(serial_write_handle_t writeHandle,$/;"	f	file:
SerialManager_WriteBlocking	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_WriteBlocking(serial_write_handle_t writeHandle, uint8_t *buffer, uint32_t length)$/;"	f
SerialManager_WriteNonBlocking	component/serial_manager/serial_manager.c	/^serial_manager_status_t SerialManager_WriteNonBlocking(serial_write_handle_t writeHandle,$/;"	f
Serial_UartCallback	component/serial_manager/serial_port_uart.c	/^static void Serial_UartCallback(hal_uart_handle_t handle, hal_uart_status_t status, void *userData)$/;"	f	file:
Serial_UartCancelWrite	component/serial_manager/serial_port_uart.c	/^serial_manager_status_t Serial_UartCancelWrite(serial_handle_t serialHandle)$/;"	f
Serial_UartDeinit	component/serial_manager/serial_port_uart.c	/^serial_manager_status_t Serial_UartDeinit(serial_handle_t serialHandle)$/;"	f
Serial_UartInit	component/serial_manager/serial_port_uart.c	/^serial_manager_status_t Serial_UartInit(serial_handle_t serialHandle, void *serialConfig)$/;"	f
Serial_UartInstallRxCallback	component/serial_manager/serial_port_uart.c	/^serial_manager_status_t Serial_UartInstallRxCallback(serial_handle_t serialHandle,$/;"	f
Serial_UartInstallTxCallback	component/serial_manager/serial_port_uart.c	/^serial_manager_status_t Serial_UartInstallTxCallback(serial_handle_t serialHandle,$/;"	f
Serial_UartIsrFunction	component/serial_manager/serial_port_uart.c	/^void Serial_UartIsrFunction(serial_handle_t serialHandle)$/;"	f
Serial_UartRead	component/serial_manager/serial_port_uart.c	/^serial_manager_status_t Serial_UartRead(serial_handle_t serialHandle, uint8_t *buffer, uint32_t length)$/;"	f
Serial_UartWrite	component/serial_manager/serial_port_uart.c	/^serial_manager_status_t Serial_UartWrite(serial_handle_t serialHandle, uint8_t *buffer, uint32_t length)$/;"	f
ServerIndex	emwin/emWin_header/GUI_VNC.h	/^  U16          ServerIndex;$/;"	m	struct:GUI_VNC_CONTEXT
SetBits	radio/MyTypeDef.h	35;"	d
SetCodeSize	emwin/emWin_header/GUI_GIF_Private.h	/^  int   SetCodeSize;$/;"	m	struct:__anon323
SetMasterKeys	lwip/src/netif/ppp/chap_ms.c	/^static void SetMasterKeys(ppp_pcb *pcb, const char *secret, int secret_len, u_char NTResponse[24], int IsServer) {$/;"	f	file:
Set_Start_Key	lwip/src/netif/ppp/chap_ms.c	/^static void Set_Start_Key(ppp_pcb *pcb, const u_char *rchallenge, const char *secret, int secret_len) {$/;"	f	file:
ShaftSize	emwin/emWin_header/SLIDER.h	/^  int ShaftSize;$/;"	m	struct:__anon304
Shift	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int Shift;$/;"	m	struct:DRIVER_CONTEXT
ShiftRight	codec2/pack.c	/^static const unsigned int	ShiftRight = 3;$/;"	v	file:
ShortsPerLine	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  int ShortsPerLine;$/;"	m	struct:DRIVER_CONTEXT
ShowGrid	emwin/emWin_header/GRAPH_Private.h	/^  U8              ShowGrid;$/;"	m	struct:GRAPH_OBJ
ShowGrid	emwin/emWin_header/LISTVIEW_Private.h	/^  int                          ShowGrid;$/;"	m	struct:LISTVIEW_Obj
Sint	CMSIS/arm_math.h	/^    arm_cfft_instance_f32 Sint;      \/**< Internal CFFT structure. *\/$/;"	m	struct:__anon82
Size	emwin/emWin_header/GUI.h	/^  int Size;     \/\/ Size of bitmap in pixels$/;"	m	struct:__anon396
Size	emwin/emWin_header/SLIDER.h	/^  int Size;$/;"	m	struct:__anon305
Size	emwin/emWin_header/SWIPELIST_Private.h	/^  int                     Size;$/;"	m	struct:__anon238
Size	emwin/emWin_header/SWIPELIST_Private.h	/^  int            Size;$/;"	m	struct:__anon236
SizeH	emwin/emWin_header/CHOOSEFILE.h	/^  U32               SizeH;                               \/\/ FileSize high word$/;"	m	struct:CHOOSEFILE_INFO
SizeL	emwin/emWin_header/CHOOSEFILE.h	/^  U32               SizeL;                               \/\/ FileSize low word$/;"	m	struct:CHOOSEFILE_INFO
SizeOfBuffer	emwin/emWin_header/GUI_VNC.h	/^  unsigned SizeOfBuffer;$/;"	m	struct:GUI_VNC_CONTEXT
SizeOfData	emwin/emWin_header/ICONVIEW_Private.h	/^  int                 SizeOfData;$/;"	m	struct:__anon220
SkinPrivate	emwin/emWin_header/BUTTON_Private.h	/^  BUTTON_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon401
SkinPrivate	emwin/emWin_header/CHECKBOX_Private.h	/^  CHECKBOX_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon205
SkinPrivate	emwin/emWin_header/DROPDOWN_Private.h	/^  DROPDOWN_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon359
SkinPrivate	emwin/emWin_header/FRAMEWIN_Private.h	/^  FRAMEWIN_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon279
SkinPrivate	emwin/emWin_header/HEADER_Private.h	/^  HEADER_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon275
SkinPrivate	emwin/emWin_header/MENU_Private.h	/^  MENU_SKIN_PRIVATE   SkinPrivate;$/;"	m	struct:__anon318
SkinPrivate	emwin/emWin_header/MULTIPAGE_Private.h	/^  MULTIPAGE_SKIN_PRIVATE    SkinPrivate;$/;"	m	struct:__anon340
SkinPrivate	emwin/emWin_header/PROGBAR_Private.h	/^  PROGBAR_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon423
SkinPrivate	emwin/emWin_header/RADIO_Private.h	/^  RADIO_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon342
SkinPrivate	emwin/emWin_header/SCROLLBAR_Private.h	/^  SCROLLBAR_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon348
SkinPrivate	emwin/emWin_header/SLIDER_Private.h	/^  SLIDER_SKIN_PRIVATE SkinPrivate;$/;"	m	struct:__anon377
SkinPrivate	emwin/emWin_header/SPINBOX_Private.h	/^  SPINBOX_SKIN_PRIVATE SkinPrivate;          \/\/ Structure containing a pointer to the used DrawSkin-function.$/;"	m	struct:__anon321
SkinProps	emwin/emWin_header/MULTIPAGE_Private.h	/^  MULTIPAGE_SKIN_PROPS   SkinProps;$/;"	m	struct:MULTIPAGE_Obj
SlaveReceive	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*SlaveReceive)   (                     uint8_t *data, uint32_t num);                    \/\/\/< Pointer to \\ref ARM_I2C_SlaveReceive : Start receiving data as I2C Slave.$/;"	m	struct:_ARM_DRIVER_I2C
SlaveTransmit	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*SlaveTransmit)  (               const uint8_t *data, uint32_t num);                    \/\/\/< Pointer to \\ref ARM_I2C_SlaveTransmit : Start transmitting data as I2C Slave.$/;"	m	struct:_ARM_DRIVER_I2C
Sn	codec2/codec2_internal.h	/^    float        *Sn;                      \/* [m_pitch] input speech                    *\/$/;"	m	struct:CODEC2
Sn16k	codec2/nlp.c	/^    float        *Sn16k;	     \/* Fs=16kHz input speech vector *\/$/;"	m	struct:__anon138	file:
Sn_	codec2/codec2_internal.h	/^    float        *Sn_;	                   \/* [2*n_samp] synthesised output speech      *\/$/;"	m	struct:CODEC2
Snap	emwin/emWin_header/KNOB_Private.h	/^  I32 Snap;          \/\/ Position where the knob snaps$/;"	m	struct:__anon326
SnapPosition	emwin/emWin_header/LISTWHEEL_Private.h	/^  int                     SnapPosition;     \/\/ Snap position in pixels$/;"	m	struct:__anon353
SnapX	emwin/emWin_header/WM.h	/^  int SnapX;$/;"	m	struct:__anon287
SnapY	emwin/emWin_header/WM.h	/^  int SnapY;$/;"	m	struct:__anon287
SortArrayNumItems	emwin/emWin_header/LISTVIEW_Private.h	/^  SORT_TYPE                    SortArrayNumItems;$/;"	m	struct:__anon336
SortIndex	emwin/emWin_header/LISTVIEW_Private.h	/^  int                          SortIndex;                                         \/\/ Column for sorting$/;"	m	struct:LISTVIEW_Obj
SpaceX	emwin/emWin_header/FRAMEWIN.h	/^  int SpaceX;$/;"	m	struct:__anon277
SpaceX	emwin/emWin_header/ICONVIEW_Private.h	/^  int              SpaceX, SpaceY;$/;"	m	struct:__anon218
SpaceY	emwin/emWin_header/ICONVIEW_Private.h	/^  int              SpaceX, SpaceY;$/;"	m	struct:__anon218
Spacing	emwin/emWin_header/CHECKBOX_Private.h	/^  U8                    Spacing;$/;"	m	struct:__anon205
Spacing	emwin/emWin_header/RADIO_Private.h	/^  U16 Spacing;$/;"	m	struct:__anon343
Specifier	emwin/emWin_header/SEGGER.h	/^  char                            Specifier;          \/\/ Format specifier.$/;"	m	struct:SEGGER_PRINTF_FORMATTER
SpectralEnd	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 SpectralEnd;                          \/\/ Spectral selection end$/;"	m	struct:GUI_JPEG_DCONTEXT
SpectralStart	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 SpectralStart;                        \/\/ Spectral selection start$/;"	m	struct:GUI_JPEG_DCONTEXT
SpiConfigToFifoWR	drivers/fsl_spi_dma.c	/^static void SpiConfigToFifoWR(spi_config_t *config, uint32_t *fifowr)$/;"	f	file:
StackType_t	amazon-freertos/freertos/portable/portmacro.h	/^typedef portSTACK_TYPE StackType_t;$/;"	t
StartOfFile	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8         StartOfFile;$/;"	m	struct:GUI_JPEG_DCONTEXT
State	emwin/emWin_header/GUI.h	/^  int State;$/;"	m	struct:__anon397
State	emwin/emWin_header/MULTIPAGE.h	/^  U16               State;$/;"	m	struct:__anon200
State	emwin/emWin_header/SCROLLBAR.h	/^  int State;$/;"	m	struct:__anon216
State	emwin/emWin_header/SCROLLBAR_Private.h	/^  int State;$/;"	m	struct:SCROLLBAR_OBJ
State	emwin/emWin_header/SPINBOX_Private.h	/^  U8                  State;       \/\/ Pressed state$/;"	m	struct:__anon322
State	emwin/emWin_header/WIDGET.h	/^  U16 State;$/;"	m	struct:__anon212
State	emwin/emWin_header/WM.h	/^  U8  State;$/;"	m	struct:__anon286
StatePrev	emwin/emWin_header/WM.h	/^  U8  StatePrev;$/;"	m	struct:__anon286
StaticEventGroup_t	amazon-freertos/include/FreeRTOS.h	/^} StaticEventGroup_t;$/;"	t	typeref:struct:xSTATIC_EVENT_GROUP
StaticListItem_t	amazon-freertos/include/FreeRTOS.h	/^typedef struct xSTATIC_LIST_ITEM StaticListItem_t;$/;"	t	typeref:struct:xSTATIC_LIST_ITEM
StaticList_t	amazon-freertos/include/FreeRTOS.h	/^} StaticList_t;$/;"	t	typeref:struct:xSTATIC_LIST
StaticMessageBuffer_t	amazon-freertos/include/FreeRTOS.h	/^typedef StaticStreamBuffer_t StaticMessageBuffer_t;$/;"	t
StaticMiniListItem_t	amazon-freertos/include/FreeRTOS.h	/^typedef struct xSTATIC_MINI_LIST_ITEM StaticMiniListItem_t;$/;"	t	typeref:struct:xSTATIC_MINI_LIST_ITEM
StaticQueue_t	amazon-freertos/include/FreeRTOS.h	/^} StaticQueue_t;$/;"	t	typeref:struct:xSTATIC_QUEUE
StaticSemaphore_t	amazon-freertos/include/FreeRTOS.h	/^typedef StaticQueue_t StaticSemaphore_t;$/;"	t
StaticStreamBuffer_t	amazon-freertos/include/FreeRTOS.h	/^} StaticStreamBuffer_t;$/;"	t	typeref:struct:xSTATIC_STREAM_BUFFER
StaticTask_t	amazon-freertos/include/FreeRTOS.h	/^} StaticTask_t;$/;"	t	typeref:struct:xSTATIC_TCB
StaticTimer_t	amazon-freertos/include/FreeRTOS.h	/^} StaticTimer_t;$/;"	t	typeref:struct:xSTATIC_TIMER
Status	emwin/emWin_header/LISTBOX_Private.h	/^  U8   Status;$/;"	m	struct:__anon311
Status	emwin/emWin_header/MULTIPAGE_Private.h	/^  U8      Status;$/;"	m	struct:__anon338
Status	emwin/emWin_header/WM.h	/^  U32      Status;$/;"	m	struct:WM_WINDOW_INFO
Status	emwin/emWin_header/WM.h	/^  U32 Status;           \/* Status flags *\/$/;"	m	struct:WM_Obj
StdText	lwip/src/netif/ppp/chap_ms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Step	emwin/emWin_header/SPINBOX_Private.h	/^  U16                  Step;                 \/\/ Value will be increased\/decreased by this amount when a button is clicked.$/;"	m	struct:__anon321
StopMotion	emwin/emWin_header/WM.h	/^  U8  StopMotion;$/;"	m	struct:__anon287
StrFormatPrintf	utilities/fsl_str.c	/^int StrFormatPrintf(const char *fmt, va_list ap, char *buf, printfCb cb)$/;"	f
StrFormatScanf	utilities/fsl_str.c	/^int StrFormatScanf(const char *line_ptr, char *format, va_list args_ptr)$/;"	f
StreamBufferDef_t	amazon-freertos/freertos/stream_buffer.c	/^typedef struct StreamBufferDef_t \/*lint !e9058 Style convention uses tag. *\/$/;"	s	file:
StreamBufferHandle_t	amazon-freertos/include/stream_buffer.h	/^typedef struct StreamBufferDef_t * StreamBufferHandle_t;$/;"	t	typeref:struct:StreamBufferDef_t
StreamBuffer_t	amazon-freertos/freertos/stream_buffer.c	/^} StreamBuffer_t;$/;"	t	typeref:struct:StreamBufferDef_t	file:
StrikeWidth	emwin/emWin_header/GUI.h	/^  U8         StrikeWidth;$/;"	m	struct:GUI_CONTEXT
SuccessiveHigh	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 SuccessiveHigh;                       \/\/ Successive approximation high$/;"	m	struct:GUI_JPEG_DCONTEXT
SuccessiveLow	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 SuccessiveLow;                        \/\/ Successive approximation low$/;"	m	struct:GUI_JPEG_DCONTEXT
SwapXY	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int SwapXY;$/;"	m	struct:DRIVER_CONTEXT
SwapXY	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int SwapXY;$/;"	m	struct:DRIVER_CONTEXT
Sx127x_Gpio_Init	source/main.c	/^static void Sx127x_Gpio_Init(void)$/;"	f	file:
Sx127x_Spi_Ctrl_Init	source/main.c	/^status_t Sx127x_Spi_Ctrl_Init(void)$/;"	f
SysTick	CMSIS/core_armv8mbl.h	1177;"	d
SysTick	CMSIS/core_armv8mml.h	2038;"	d
SysTick	CMSIS/core_cm4.h	1562;"	d
SysTick_BASE	CMSIS/core_armv8mbl.h	1171;"	d
SysTick_BASE	CMSIS/core_armv8mml.h	2032;"	d
SysTick_BASE	CMSIS/core_cm4.h	1556;"	d
SysTick_BASE_NS	CMSIS/core_armv8mbl.h	1196;"	d
SysTick_BASE_NS	CMSIS/core_armv8mml.h	2061;"	d
SysTick_CALIB_NOREF_Msk	CMSIS/core_armv8mbl.h	586;"	d
SysTick_CALIB_NOREF_Msk	CMSIS/core_armv8mml.h	1062;"	d
SysTick_CALIB_NOREF_Msk	CMSIS/core_cm4.h	790;"	d
SysTick_CALIB_NOREF_Pos	CMSIS/core_armv8mbl.h	585;"	d
SysTick_CALIB_NOREF_Pos	CMSIS/core_armv8mml.h	1061;"	d
SysTick_CALIB_NOREF_Pos	CMSIS/core_cm4.h	789;"	d
SysTick_CALIB_SKEW_Msk	CMSIS/core_armv8mbl.h	589;"	d
SysTick_CALIB_SKEW_Msk	CMSIS/core_armv8mml.h	1065;"	d
SysTick_CALIB_SKEW_Msk	CMSIS/core_cm4.h	793;"	d
SysTick_CALIB_SKEW_Pos	CMSIS/core_armv8mbl.h	588;"	d
SysTick_CALIB_SKEW_Pos	CMSIS/core_armv8mml.h	1064;"	d
SysTick_CALIB_SKEW_Pos	CMSIS/core_cm4.h	792;"	d
SysTick_CALIB_TENMS_Msk	CMSIS/core_armv8mbl.h	592;"	d
SysTick_CALIB_TENMS_Msk	CMSIS/core_armv8mml.h	1068;"	d
SysTick_CALIB_TENMS_Msk	CMSIS/core_cm4.h	796;"	d
SysTick_CALIB_TENMS_Pos	CMSIS/core_armv8mbl.h	591;"	d
SysTick_CALIB_TENMS_Pos	CMSIS/core_armv8mml.h	1067;"	d
SysTick_CALIB_TENMS_Pos	CMSIS/core_cm4.h	795;"	d
SysTick_CTRL_CLKSOURCE_Msk	CMSIS/core_armv8mbl.h	568;"	d
SysTick_CTRL_CLKSOURCE_Msk	CMSIS/core_armv8mml.h	1044;"	d
SysTick_CTRL_CLKSOURCE_Msk	CMSIS/core_cm4.h	772;"	d
SysTick_CTRL_CLKSOURCE_Pos	CMSIS/core_armv8mbl.h	567;"	d
SysTick_CTRL_CLKSOURCE_Pos	CMSIS/core_armv8mml.h	1043;"	d
SysTick_CTRL_CLKSOURCE_Pos	CMSIS/core_cm4.h	771;"	d
SysTick_CTRL_COUNTFLAG_Msk	CMSIS/core_armv8mbl.h	565;"	d
SysTick_CTRL_COUNTFLAG_Msk	CMSIS/core_armv8mml.h	1041;"	d
SysTick_CTRL_COUNTFLAG_Msk	CMSIS/core_cm4.h	769;"	d
SysTick_CTRL_COUNTFLAG_Pos	CMSIS/core_armv8mbl.h	564;"	d
SysTick_CTRL_COUNTFLAG_Pos	CMSIS/core_armv8mml.h	1040;"	d
SysTick_CTRL_COUNTFLAG_Pos	CMSIS/core_cm4.h	768;"	d
SysTick_CTRL_ENABLE_Msk	CMSIS/core_armv8mbl.h	574;"	d
SysTick_CTRL_ENABLE_Msk	CMSIS/core_armv8mml.h	1050;"	d
SysTick_CTRL_ENABLE_Msk	CMSIS/core_cm4.h	778;"	d
SysTick_CTRL_ENABLE_Pos	CMSIS/core_armv8mbl.h	573;"	d
SysTick_CTRL_ENABLE_Pos	CMSIS/core_armv8mml.h	1049;"	d
SysTick_CTRL_ENABLE_Pos	CMSIS/core_cm4.h	777;"	d
SysTick_CTRL_TICKINT_Msk	CMSIS/core_armv8mbl.h	571;"	d
SysTick_CTRL_TICKINT_Msk	CMSIS/core_armv8mml.h	1047;"	d
SysTick_CTRL_TICKINT_Msk	CMSIS/core_cm4.h	775;"	d
SysTick_CTRL_TICKINT_Pos	CMSIS/core_armv8mbl.h	570;"	d
SysTick_CTRL_TICKINT_Pos	CMSIS/core_armv8mml.h	1046;"	d
SysTick_CTRL_TICKINT_Pos	CMSIS/core_cm4.h	774;"	d
SysTick_Config	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)$/;"	f
SysTick_Config	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)$/;"	f
SysTick_Config	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)$/;"	f
SysTick_Handler	startup/startup_lpc54018.c	/^WEAK_AV void SysTick_Handler(void)$/;"	f
SysTick_IRQn	device/LPC54018.h	/^  SysTick_IRQn                 = -1,               \/**< Cortex-M4 System Tick Interrupt *\/$/;"	e	enum:IRQn
SysTick_LOAD_RELOAD_Msk	CMSIS/core_armv8mbl.h	578;"	d
SysTick_LOAD_RELOAD_Msk	CMSIS/core_armv8mml.h	1054;"	d
SysTick_LOAD_RELOAD_Msk	CMSIS/core_cm4.h	782;"	d
SysTick_LOAD_RELOAD_Pos	CMSIS/core_armv8mbl.h	577;"	d
SysTick_LOAD_RELOAD_Pos	CMSIS/core_armv8mml.h	1053;"	d
SysTick_LOAD_RELOAD_Pos	CMSIS/core_cm4.h	781;"	d
SysTick_NS	CMSIS/core_armv8mbl.h	1201;"	d
SysTick_NS	CMSIS/core_armv8mml.h	2067;"	d
SysTick_Type	CMSIS/core_armv8mbl.h	/^} SysTick_Type;$/;"	t	typeref:struct:__anon123
SysTick_Type	CMSIS/core_armv8mml.h	/^} SysTick_Type;$/;"	t	typeref:struct:__anon20
SysTick_Type	CMSIS/core_cm4.h	/^} SysTick_Type;$/;"	t	typeref:struct:__anon42
SysTick_VAL_CURRENT_Msk	CMSIS/core_armv8mbl.h	582;"	d
SysTick_VAL_CURRENT_Msk	CMSIS/core_armv8mml.h	1058;"	d
SysTick_VAL_CURRENT_Msk	CMSIS/core_cm4.h	786;"	d
SysTick_VAL_CURRENT_Pos	CMSIS/core_armv8mbl.h	581;"	d
SysTick_VAL_CURRENT_Pos	CMSIS/core_armv8mml.h	1057;"	d
SysTick_VAL_CURRENT_Pos	CMSIS/core_cm4.h	785;"	d
SystemCoreClock	device/system_LPC54018.c	/^uint32_t SystemCoreClock = DEFAULT_SYSTEM_CLOCK;$/;"	v
SystemCoreClockUpdate	device/system_LPC54018.c	/^void SystemCoreClockUpdate (void) {$/;"	f
SystemInit	device/system_LPC54018.c	/^void SystemInit (void) {$/;"	f
SystemInitHook	device/system_LPC54018.c	/^__attribute__ ((weak)) void SystemInitHook (void) {$/;"	f
T	CMSIS/core_armv8mbl.h	/^    uint32_t T:1;                        \/*!< bit:     24  Thumb bit        (read 0) *\/$/;"	m	struct:__anon117::__anon118
T	CMSIS/core_armv8mml.h	/^    uint32_t T:1;                        \/*!< bit:     24  Thumb bit        (read 0) *\/$/;"	m	struct:__anon13::__anon14
T	CMSIS/core_cm4.h	/^    uint32_t T:1;                        \/*!< bit:     24  Thumb bit *\/$/;"	m	struct:__anon35::__anon36
T	codec2/nlp.c	52;"	d	file:
TABLE_SPACING_Q15	CMSIS/arm_math.h	376;"	d
TABLE_SPACING_Q31	CMSIS/arm_math.h	375;"	d
TASK_AUDIO_PRIORITY	source/common.h	26;"	d
TASK_GUI_PRIORITY	source/common.h	27;"	d
TAU	codec2/ofdm_internal.h	45;"	d
TBBCNT	device/LPC54018.h	/^  __I  uint32_t TBBCNT;                            \/**< Transferred Host to BIU-FIFO Byte Count register, offset: 0x60 *\/$/;"	m	struct:__anon177
TC	device/LPC54018.h	/^  __IO uint32_t TC;                                \/**< Timer Counter, offset: 0x8 *\/$/;"	m	struct:__anon145
TC	device/LPC54018.h	/^  __IO uint32_t TC;                                \/**< Watchdog timer constant register. This 24-bit register determines the time-out value., offset: 0x4 *\/$/;"	m	struct:__anon192
TCBCNT	device/LPC54018.h	/^  __I  uint32_t TCBCNT;                            \/**< Transferred CIU Card Byte Count register, offset: 0x5C *\/$/;"	m	struct:__anon177
TCB_t	amazon-freertos/freertos/tasks.c	/^typedef tskTCB TCB_t;$/;"	t	file:
TCPH_FLAGS	lwip/src/include/lwip/prot/tcp.h	87;"	d
TCPH_FLAGS_SET	lwip/src/include/lwip/prot/tcp.h	90;"	d
TCPH_HDRLEN	lwip/src/include/lwip/prot/tcp.h	85;"	d
TCPH_HDRLEN_BYTES	lwip/src/include/lwip/prot/tcp.h	86;"	d
TCPH_HDRLEN_FLAGS_SET	lwip/src/include/lwip/prot/tcp.h	91;"	d
TCPH_HDRLEN_SET	lwip/src/include/lwip/prot/tcp.h	89;"	d
TCPH_SET_FLAG	lwip/src/include/lwip/prot/tcp.h	93;"	d
TCPH_UNSET_FLAG	lwip/src/include/lwip/prot/tcp.h	94;"	d
TCPIP_APIMSG_ACK	lwip/src/api/api_msg.c	90;"	d	file:
TCPIP_APIMSG_ACK	lwip/src/api/api_msg.c	92;"	d	file:
TCPIP_DEBUG	lwip/src/include/lwip/opt.h	3443;"	d
TCPIP_MBOX_FETCH	lwip/src/api/tcpip.c	72;"	d	file:
TCPIP_MBOX_FETCH	lwip/src/api/tcpip.c	75;"	d	file:
TCPIP_MBOX_SIZE	lwip/src/include/lwip/opt.h	1775;"	d
TCPIP_MBOX_SIZE	source/lwipopts.h	272;"	d
TCPIP_MSG_API	lwip/src/include/lwip/priv/tcpip_priv.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_API_CALL	lwip/src/include/lwip/priv/tcpip_priv.h	/^  TCPIP_MSG_API_CALL,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	lwip/src/include/lwip/priv/tcpip_priv.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK_STATIC	lwip/src/include/lwip/priv/tcpip_priv.h	/^  TCPIP_MSG_CALLBACK_STATIC$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	lwip/src/include/lwip/priv/tcpip_priv.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	lwip/src/include/lwip/priv/tcpip_priv.h	/^  TCPIP_MSG_TIMEOUT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_UNTIMEOUT	lwip/src/include/lwip/priv/tcpip_priv.h	/^  TCPIP_MSG_UNTIMEOUT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_VAR_ALLOC	lwip/src/api/tcpip.c	55;"	d	file:
TCPIP_MSG_VAR_DECLARE	lwip/src/api/tcpip.c	54;"	d	file:
TCPIP_MSG_VAR_FREE	lwip/src/api/tcpip.c	56;"	d	file:
TCPIP_MSG_VAR_REF	lwip/src/api/tcpip.c	53;"	d	file:
TCPIP_THREAD_NAME	lwip/src/include/lwip/opt.h	1748;"	d
TCPIP_THREAD_PRIO	lwip/src/include/lwip/opt.h	1766;"	d
TCPIP_THREAD_PRIO	source/lwipopts.h	274;"	d
TCPIP_THREAD_STACKSIZE	lwip/src/include/lwip/opt.h	1757;"	d
TCPIP_THREAD_STACKSIZE	source/lwipopts.h	273;"	d
TCPWND16	lwip/src/include/lwip/tcp.h	139;"	d
TCPWND16	lwip/src/include/lwip/tcp.h	144;"	d
TCPWNDSIZE_F	lwip/src/include/lwip/priv/tcp_priv.h	314;"	d
TCPWNDSIZE_F	lwip/src/include/lwip/priv/tcp_priv.h	319;"	d
TCPWND_CHECK16	lwip/src/include/lwip/priv/tcp_priv.h	316;"	d
TCPWND_CHECK16	lwip/src/include/lwip/priv/tcp_priv.h	321;"	d
TCPWND_MAX	lwip/src/include/lwip/priv/tcp_priv.h	315;"	d
TCPWND_MAX	lwip/src/include/lwip/priv/tcp_priv.h	320;"	d
TCPWND_MIN16	lwip/src/include/lwip/priv/tcp_priv.h	317;"	d
TCPWND_MIN16	lwip/src/include/lwip/priv/tcp_priv.h	322;"	d
TCP_ACK	lwip/src/include/lwip/prot/tcp.h	76;"	d
TCP_ALLFLAGS	lwip/src/include/lwip/tcp.h	207;"	d
TCP_BUILD_MSS_OPTION	lwip/src/include/lwip/priv/tcp_priv.h	311;"	d
TCP_CALCULATE_EFF_SEND_MSS	lwip/src/include/lwip/opt.h	1305;"	d
TCP_CHECKSUM_ON_COPY	lwip/src/include/lwip/priv/tcp_priv.h	250;"	d
TCP_CHECKSUM_ON_COPY_SANITY_CHECK	lwip/src/core/tcp_out.c	111;"	d	file:
TCP_CHECKSUM_ON_COPY_SANITY_CHECK_FAIL	lwip/src/core/tcp_out.c	116;"	d	file:
TCP_CWND_DEBUG	lwip/src/include/lwip/opt.h	3401;"	d
TCP_CWR	lwip/src/include/lwip/prot/tcp.h	79;"	d
TCP_DATA_COPY	lwip/src/core/tcp_out.c	104;"	d	file:
TCP_DATA_COPY	lwip/src/core/tcp_out.c	97;"	d	file:
TCP_DATA_COPY2	lwip/src/core/tcp_out.c	101;"	d	file:
TCP_DATA_COPY2	lwip/src/core/tcp_out.c	105;"	d	file:
TCP_DEBUG	lwip/src/include/lwip/opt.h	3372;"	d
TCP_DEBUG_PCB_LISTS	lwip/src/include/lwip/priv/tcp_priv.h	355;"	d
TCP_DEFAULT_LISTEN_BACKLOG	lwip/src/include/lwip/opt.h	1402;"	d
TCP_ECE	lwip/src/include/lwip/prot/tcp.h	78;"	d
TCP_ENSURE_LOCAL_PORT_RANGE	lwip/src/core/tcp.c	126;"	d	file:
TCP_EVENT_ACCEPT	lwip/src/include/lwip/priv/tcp_priv.h	166;"	d
TCP_EVENT_ACCEPT	lwip/src/include/lwip/priv/tcp_priv.h	187;"	d
TCP_EVENT_CLOSED	lwip/src/include/lwip/priv/tcp_priv.h	172;"	d
TCP_EVENT_CLOSED	lwip/src/include/lwip/priv/tcp_priv.h	210;"	d
TCP_EVENT_CONNECTED	lwip/src/include/lwip/priv/tcp_priv.h	174;"	d
TCP_EVENT_CONNECTED	lwip/src/include/lwip/priv/tcp_priv.h	219;"	d
TCP_EVENT_ERR	lwip/src/include/lwip/priv/tcp_priv.h	182;"	d
TCP_EVENT_ERR	lwip/src/include/lwip/priv/tcp_priv.h	233;"	d
TCP_EVENT_POLL	lwip/src/include/lwip/priv/tcp_priv.h	176;"	d
TCP_EVENT_POLL	lwip/src/include/lwip/priv/tcp_priv.h	226;"	d
TCP_EVENT_RECV	lwip/src/include/lwip/priv/tcp_priv.h	170;"	d
TCP_EVENT_RECV	lwip/src/include/lwip/priv/tcp_priv.h	201;"	d
TCP_EVENT_SENT	lwip/src/include/lwip/priv/tcp_priv.h	168;"	d
TCP_EVENT_SENT	lwip/src/include/lwip/priv/tcp_priv.h	194;"	d
TCP_FAST_INTERVAL	lwip/src/include/lwip/priv/tcp_priv.h	124;"	d
TCP_FIN	lwip/src/include/lwip/prot/tcp.h	72;"	d
TCP_FIN_WAIT_TIMEOUT	lwip/src/include/lwip/priv/tcp_priv.h	131;"	d
TCP_FLAGS	lwip/src/include/lwip/prot/tcp.h	81;"	d
TCP_FR_DEBUG	lwip/src/include/lwip/opt.h	3386;"	d
TCP_HDRLEN	lwip/src/netif/ppp/ipcp.c	2377;"	d	file:
TCP_HDRLEN	lwip/src/netif/ppp/ipv6cp.c	1501;"	d	file:
TCP_HLEN	lwip/src/include/lwip/prot/tcp.h	47;"	d
TCP_INPUT_DEBUG	lwip/src/include/lwip/opt.h	3379;"	d
TCP_KEEPALIVE	lwip/src/include/lwip/sockets.h	280;"	d
TCP_KEEPCNT	lwip/src/include/lwip/sockets.h	283;"	d
TCP_KEEPCNT_DEFAULT	lwip/src/include/lwip/priv/tcp_priv.h	150;"	d
TCP_KEEPIDLE	lwip/src/include/lwip/sockets.h	281;"	d
TCP_KEEPIDLE_DEFAULT	lwip/src/include/lwip/priv/tcp_priv.h	142;"	d
TCP_KEEPINTVL	lwip/src/include/lwip/sockets.h	282;"	d
TCP_KEEPINTVL_DEFAULT	lwip/src/include/lwip/priv/tcp_priv.h	146;"	d
TCP_KEEP_DUR	lwip/src/core/tcp.c	130;"	d	file:
TCP_KEEP_DUR	lwip/src/core/tcp.c	133;"	d	file:
TCP_KEEP_INTVL	lwip/src/core/tcp.c	131;"	d	file:
TCP_KEEP_INTVL	lwip/src/core/tcp.c	134;"	d	file:
TCP_LISTEN_BACKLOG	lwip/src/include/lwip/opt.h	1393;"	d
TCP_LISTEN_BACKLOG	source/lwipopts.h	158;"	d
TCP_LOCAL_PORT_RANGE_END	lwip/src/core/tcp.c	125;"	d	file:
TCP_LOCAL_PORT_RANGE_START	lwip/src/core/tcp.c	124;"	d	file:
TCP_MAXIDLE	lwip/src/include/lwip/priv/tcp_priv.h	153;"	d
TCP_MAXRTX	lwip/src/include/lwip/opt.h	1246;"	d
TCP_MAX_OPTION_BYTES	lwip/src/include/lwip/prot/tcp.h	83;"	d
TCP_MSL	lwip/src/include/lwip/priv/tcp_priv.h	137;"	d
TCP_MSS	lwip/src/include/lwip/opt.h	1293;"	d
TCP_MSS	source/lwipopts.h	137;"	d
TCP_NODELAY	lwip/src/include/lwip/sockets.h	279;"	d
TCP_OOSEQ_BYTES_LIMIT	lwip/src/include/lwip/opt.h	1360;"	d
TCP_OOSEQ_BYTES_LIMIT	lwip/src/include/lwip/opt.h	1362;"	d
TCP_OOSEQ_MAX_BYTES	lwip/src/include/lwip/opt.h	1349;"	d
TCP_OOSEQ_MAX_PBUFS	lwip/src/include/lwip/opt.h	1372;"	d
TCP_OOSEQ_PBUFS_LIMIT	lwip/src/include/lwip/opt.h	1383;"	d
TCP_OOSEQ_PBUFS_LIMIT	lwip/src/include/lwip/opt.h	1385;"	d
TCP_OOSEQ_TIMEOUT	lwip/src/include/lwip/priv/tcp_priv.h	134;"	d
TCP_OUTPUT_DEBUG	lwip/src/include/lwip/opt.h	3415;"	d
TCP_OVERSIZE	lwip/src/include/lwip/opt.h	1420;"	d
TCP_OVERSIZE_CALC_LENGTH	lwip/src/core/tcp_out.c	123;"	d	file:
TCP_OVERSIZE_DBGCHECK	lwip/src/include/lwip/priv/tcp_priv.h	244;"	d
TCP_OVERSIZE_DBGCHECK	lwip/src/include/lwip/priv/tcp_priv.h	246;"	d
TCP_PCB_COMMON	lwip/src/include/lwip/tcp.h	212;"	d
TCP_PCB_EXTARGS	lwip/src/include/lwip/tcp.h	201;"	d
TCP_PCB_EXTARGS	lwip/src/include/lwip/tcp.h	203;"	d
TCP_PCB_REMOVE_ACTIVE	lwip/src/include/lwip/priv/tcp_priv.h	432;"	d
TCP_PRIO_MAX	lwip/src/include/lwip/tcpbase.h	78;"	d
TCP_PRIO_MIN	lwip/src/include/lwip/tcpbase.h	76;"	d
TCP_PRIO_NORMAL	lwip/src/include/lwip/tcpbase.h	77;"	d
TCP_PSH	lwip/src/include/lwip/prot/tcp.h	75;"	d
TCP_PUSH_BIT	lwip/src/include/netif/ppp/vj.h	103;"	d
TCP_QLEN_DEBUG	lwip/src/include/lwip/opt.h	3429;"	d
TCP_QUEUE_OOSEQ	lwip/src/include/lwip/opt.h	1261;"	d
TCP_QUEUE_OOSEQ	source/lwipopts.h	132;"	d
TCP_RCV_SCALE	lwip/src/include/lwip/opt.h	1470;"	d
TCP_REG	lwip/src/include/lwip/priv/tcp_priv.h	358;"	d
TCP_REG	lwip/src/include/lwip/priv/tcp_priv.h	392;"	d
TCP_REG_ACTIVE	lwip/src/include/lwip/priv/tcp_priv.h	420;"	d
TCP_RMV	lwip/src/include/lwip/priv/tcp_priv.h	373;"	d
TCP_RMV	lwip/src/include/lwip/priv/tcp_priv.h	399;"	d
TCP_RMV_ACTIVE	lwip/src/include/lwip/priv/tcp_priv.h	426;"	d
TCP_RST	lwip/src/include/lwip/prot/tcp.h	74;"	d
TCP_RST_DEBUG	lwip/src/include/lwip/opt.h	3422;"	d
TCP_RTO_DEBUG	lwip/src/include/lwip/opt.h	3394;"	d
TCP_SEQ_BETWEEN	lwip/src/include/lwip/priv/tcp_priv.h	117;"	d
TCP_SEQ_GEQ	lwip/src/include/lwip/priv/tcp_priv.h	112;"	d
TCP_SEQ_GT	lwip/src/include/lwip/priv/tcp_priv.h	111;"	d
TCP_SEQ_LEQ	lwip/src/include/lwip/priv/tcp_priv.h	110;"	d
TCP_SEQ_LT	lwip/src/include/lwip/priv/tcp_priv.h	109;"	d
TCP_SLOW_INTERVAL	lwip/src/include/lwip/priv/tcp_priv.h	128;"	d
TCP_SNDLOWAT	lwip/src/include/lwip/opt.h	1331;"	d
TCP_SNDQUEUELEN_OVERFLOW	lwip/src/include/lwip/tcp.h	327;"	d
TCP_SNDQUEUELOWAT	lwip/src/include/lwip/opt.h	1340;"	d
TCP_SND_BUF	lwip/src/include/lwip/opt.h	1314;"	d
TCP_SND_BUF	source/lwipopts.h	142;"	d
TCP_SND_QUEUELEN	lwip/src/include/lwip/opt.h	1322;"	d
TCP_SND_QUEUELEN	source/lwipopts.h	148;"	d
TCP_STATE_IS_CLOSING	lwip/src/include/lwip/tcpbase.h	70;"	d
TCP_STATS	lwip/src/include/lwip/opt.h	2167;"	d
TCP_STATS	lwip/src/include/lwip/opt.h	2242;"	d
TCP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	326;"	d
TCP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	329;"	d
TCP_STATS_INC	lwip/src/include/lwip/stats.h	325;"	d
TCP_STATS_INC	lwip/src/include/lwip/stats.h	328;"	d
TCP_SYN	lwip/src/include/lwip/prot/tcp.h	73;"	d
TCP_SYNMAXRTX	lwip/src/include/lwip/opt.h	1253;"	d
TCP_SYN_RCVD_TIMEOUT	lwip/src/include/lwip/priv/tcp_priv.h	132;"	d
TCP_TCPLEN	lwip/src/include/lwip/priv/tcp_priv.h	155;"	d
TCP_TMR_INTERVAL	lwip/src/include/lwip/priv/tcp_priv.h	120;"	d
TCP_TTL	lwip/src/include/lwip/opt.h	1228;"	d
TCP_TTL	source/lwipopts.h	126;"	d
TCP_URG	lwip/src/include/lwip/prot/tcp.h	77;"	d
TCP_WND	lwip/src/include/lwip/opt.h	1239;"	d
TCP_WND	source/lwipopts.h	153;"	d
TCP_WND_DEBUG	lwip/src/include/lwip/opt.h	3408;"	d
TCP_WND_INC	lwip/src/include/lwip/tcp.h	148;"	d
TCP_WND_MAX	lwip/src/include/lwip/tcp.h	140;"	d
TCP_WND_MAX	lwip/src/include/lwip/tcp.h	145;"	d
TCP_WND_UPDATE_THRESHOLD	lwip/src/include/lwip/opt.h	1438;"	d
TCP_WRITE_FLAG_COPY	lwip/src/include/lwip/tcpbase.h	73;"	d
TCP_WRITE_FLAG_MORE	lwip/src/include/lwip/tcpbase.h	74;"	d
TCR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t TCR;                    \/*!< Offset: 0xE80 (R\/W)  ITM Trace Control Register *\/$/;"	m	struct:__anon21
TCR	CMSIS/core_cm4.h	/^  __IOM uint32_t TCR;                    \/*!< Offset: 0xE80 (R\/W)  ITM Trace Control Register *\/$/;"	m	struct:__anon43
TCR	device/LPC54018.h	/^  __IO uint32_t TCR;                               \/**< Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR., offset: 0x4 *\/$/;"	m	struct:__anon145
TDCR	device/LPC54018.h	/^  __IO uint32_t TDCR;                              \/**< Transmitter Delay Compensator Register, offset: 0x48 *\/$/;"	m	struct:__anon142
TER	CMSIS/core_armv8mml.h	/^  __IOM uint32_t TER;                    \/*!< Offset: 0xE00 (R\/W)  ITM Trace Enable Register *\/$/;"	m	struct:__anon21
TER	CMSIS/core_cm4.h	/^  __IOM uint32_t TER;                    \/*!< Offset: 0xE00 (R\/W)  ITM Trace Enable Register *\/$/;"	m	struct:__anon43
TERMACK	lwip/src/include/netif/ppp/fsm.h	71;"	d
TERMREQ	lwip/src/include/netif/ppp/fsm.h	70;"	d
TEST	device/LPC54018.h	/^  __IO uint32_t TEST;                              \/**< Test Register, offset: 0x10 *\/$/;"	m	struct:__anon142
TEST_TIMER_PERIOD_MS	radio/radio.c	9;"	d	file:
TEXT_CF_BOTTOM	emwin/emWin_header/TEXT.h	76;"	d
TEXT_CF_HCENTER	emwin/emWin_header/TEXT.h	72;"	d
TEXT_CF_LEFT	emwin/emWin_header/TEXT.h	70;"	d
TEXT_CF_RIGHT	emwin/emWin_header/TEXT.h	71;"	d
TEXT_CF_TOP	emwin/emWin_header/TEXT.h	75;"	d
TEXT_CF_VCENTER	emwin/emWin_header/TEXT.h	74;"	d
TEXT_H	emwin/emWin_header/TEXT.h	46;"	d
TEXT_Handle	emwin/emWin_header/TEXT.h	/^typedef WM_HMEM TEXT_Handle;$/;"	t
TEXT_ID	emwin/emWin_header/WIDGET.h	120;"	d
TEXT_INIT_ID	emwin/emWin_header/TEXT_Private.h	80;"	d
TEXT_INIT_ID	emwin/emWin_header/TEXT_Private.h	82;"	d
TEXT_LOCK_H	emwin/emWin_header/TEXT_Private.h	87;"	d
TEXT_LOCK_H	emwin/emWin_header/TEXT_Private.h	89;"	d
TEXT_OBJ	emwin/emWin_header/TEXT_Private.h	/^} TEXT_OBJ;$/;"	t	typeref:struct:__anon298
TEXT_PRIVATE_H	emwin/emWin_header/TEXT_Private.h	46;"	d
TEXT_PROPS	emwin/emWin_header/TEXT_Private.h	/^} TEXT_PROPS;$/;"	t	typeref:struct:__anon297
TFTPFILES	lwip/src/Filelists.mk	/^TFTPFILES=$(LWIPDIR)\/apps\/tftp\/tftp_server.c$/;"	m
TF_ACK_DELAY	lwip/src/include/lwip/tcp.h	252;"	d
TF_ACK_NOW	lwip/src/include/lwip/tcp.h	253;"	d
TF_BACKLOGPEND	lwip/src/include/lwip/tcp.h	264;"	d
TF_CLOSED	lwip/src/include/lwip/priv/tcp_priv.h	160;"	d
TF_CLOSEPEND	lwip/src/include/lwip/tcp.h	255;"	d
TF_FIN	lwip/src/include/lwip/tcp.h	257;"	d
TF_GOT_FIN	lwip/src/include/lwip/priv/tcp_priv.h	161;"	d
TF_INFR	lwip/src/include/lwip/tcp.h	254;"	d
TF_NAGLEMEMERR	lwip/src/include/lwip/tcp.h	259;"	d
TF_NODELAY	lwip/src/include/lwip/tcp.h	258;"	d
TF_RESET	lwip/src/include/lwip/priv/tcp_priv.h	159;"	d
TF_RTO	lwip/src/include/lwip/tcp.h	269;"	d
TF_RXCLOSED	lwip/src/include/lwip/tcp.h	256;"	d
TF_SACK	lwip/src/include/lwip/tcp.h	271;"	d
TF_SEG_DATA_CHECKSUMMED	lwip/src/include/lwip/priv/tcp_priv.h	269;"	d
TF_SEG_OPTS_MSS	lwip/src/include/lwip/priv/tcp_priv.h	267;"	d
TF_SEG_OPTS_SACK_PERM	lwip/src/include/lwip/priv/tcp_priv.h	272;"	d
TF_SEG_OPTS_TS	lwip/src/include/lwip/priv/tcp_priv.h	268;"	d
TF_SEG_OPTS_WND_SCALE	lwip/src/include/lwip/priv/tcp_priv.h	271;"	d
TF_TIMESTAMP	lwip/src/include/lwip/tcp.h	267;"	d
TF_WND_SCALE	lwip/src/include/lwip/tcp.h	261;"	d
THR	device/LPC54018.h	/^    __O  uint32_t THR;                               \/**< Transmit Holding Register, offset: 0x0 *\/$/;"	m	union:__anon179::__anon180
THR0_HIGH	device/LPC54018.h	/^  __IO uint32_t THR0_HIGH;                         \/**< ADC High Compare Threshold register 0: Contains the upper threshold level for automatic threshold comparison for any channels linked to threshold pair 0., offset: 0x58 *\/$/;"	m	struct:__anon140
THR0_LOW	device/LPC54018.h	/^  __IO uint32_t THR0_LOW;                          \/**< ADC Low Compare Threshold register 0: Contains the lower threshold level for automatic threshold comparison for any channels linked to threshold pair 0., offset: 0x50 *\/$/;"	m	struct:__anon140
THR1_HIGH	device/LPC54018.h	/^  __IO uint32_t THR1_HIGH;                         \/**< ADC High Compare Threshold register 1: Contains the upper threshold level for automatic threshold comparison for any channels linked to threshold pair 1., offset: 0x5C *\/$/;"	m	struct:__anon140
THR1_LOW	device/LPC54018.h	/^  __IO uint32_t THR1_LOW;                          \/**< ADC Low Compare Threshold register 1: Contains the lower threshold level for automatic threshold comparison for any channels linked to threshold pair 1., offset: 0x54 *\/$/;"	m	struct:__anon140
TH_FIN	lwip/src/netif/ppp/ipcp.c	2378;"	d	file:
TH_FIN	lwip/src/netif/ppp/ipv6cp.c	1502;"	d	file:
TICKS_TO_MSEC	osa/usb_osa_freertos.c	19;"	d	file:
TIMEOUT	device/LPC54018.h	/^  __IO uint32_t TIMEOUT;                           \/**< Time-out value register., offset: 0x810 *\/$/;"	m	struct:__anon160
TIMEOUT	lwip/src/include/netif/ppp/ppp_impl.h	535;"	d
TIMEOUTMS	lwip/src/include/netif/ppp/ppp_impl.h	536;"	d
TIMEOUT_PENDING	lwip/src/netif/ppp/chap-new.c	81;"	d	file:
TIMER	device/LPC54018.h	/^    __I  uint32_t TIMER;                             \/**< MRT Timer register. This register reads the value of the down-counter., array offset: 0x4, array step: 0x10 *\/$/;"	m	struct:__anon166::__anon167
TIMEREM	lwip/src/include/netif/ppp/lcp.h	92;"	d
TIMERS_DEBUG	lwip/src/include/lwip/opt.h	3365;"	d
TIMERS_H	amazon-freertos/include/timers.h	30;"	d
TIME_LESS_THAN	lwip/src/core/timeouts.c	73;"	d	file:
TIME_WAIT	lwip/src/include/lwip/tcpbase.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TIMH	device/LPC54018.h	/^  __IO uint32_t TIMH;                              \/**< Horizontal Timing Control register, offset: 0x0 *\/$/;"	m	struct:__anon165
TIMV	device/LPC54018.h	/^  __IO uint32_t TIMV;                              \/**< Vertical Timing Control register, offset: 0x4 *\/$/;"	m	struct:__anon165
TMOUT	device/LPC54018.h	/^  __IO uint32_t TMOUT;                             \/**< Time-out register, offset: 0x14 *\/$/;"	m	struct:__anon177
TOCC	device/LPC54018.h	/^  __IO uint32_t TOCC;                              \/**< Timeout Counter Configuration, offset: 0x28 *\/$/;"	m	struct:__anon142
TOCV	device/LPC54018.h	/^  __I  uint32_t TOCV;                              \/**< Timeout Counter Value, offset: 0x2C *\/$/;"	m	struct:__anon142
TOOLTIP_INFO	emwin/emWin_header/WM.h	/^} TOOLTIP_INFO;$/;"	t	typeref:struct:__anon293
TOUCH_X_ActivateX	emwin/emWin_header/GUI.h	2494;"	d
TOUCH_X_ActivateY	emwin/emWin_header/GUI.h	2495;"	d
TOUCH_X_Disable	emwin/emWin_header/GUI.h	2496;"	d
TOUCH_X_MeasureX	emwin/emWin_header/GUI.h	2497;"	d
TOUCH_X_MeasureY	emwin/emWin_header/GUI.h	2498;"	d
TPI	CMSIS/core_armv8mbl.h	1180;"	d
TPI	CMSIS/core_armv8mml.h	2042;"	d
TPI	CMSIS/core_cm4.h	1566;"	d
TPI_ACPR_PRESCALER_Msk	CMSIS/core_armv8mbl.h	752;"	d
TPI_ACPR_PRESCALER_Msk	CMSIS/core_armv8mml.h	1414;"	d
TPI_ACPR_PRESCALER_Msk	CMSIS/core_cm4.h	1091;"	d
TPI_ACPR_PRESCALER_Pos	CMSIS/core_armv8mbl.h	751;"	d
TPI_ACPR_PRESCALER_Pos	CMSIS/core_armv8mml.h	1413;"	d
TPI_ACPR_PRESCALER_Pos	CMSIS/core_cm4.h	1090;"	d
TPI_ACPR_SWOSCALER_Msk	CMSIS/core_cm4.h	1094;"	d
TPI_ACPR_SWOSCALER_Pos	CMSIS/core_cm4.h	1093;"	d
TPI_BASE	CMSIS/core_armv8mbl.h	1169;"	d
TPI_BASE	CMSIS/core_armv8mml.h	2030;"	d
TPI_BASE	CMSIS/core_cm4.h	1554;"	d
TPI_DEVID_AsynClkIn_Msk	CMSIS/core_armv8mbl.h	852;"	d
TPI_DEVID_AsynClkIn_Msk	CMSIS/core_armv8mml.h	1514;"	d
TPI_DEVID_AsynClkIn_Msk	CMSIS/core_cm4.h	1194;"	d
TPI_DEVID_AsynClkIn_Pos	CMSIS/core_armv8mbl.h	851;"	d
TPI_DEVID_AsynClkIn_Pos	CMSIS/core_armv8mml.h	1513;"	d
TPI_DEVID_AsynClkIn_Pos	CMSIS/core_cm4.h	1193;"	d
TPI_DEVID_MANCVALID_Msk	CMSIS/core_armv8mbl.h	843;"	d
TPI_DEVID_MANCVALID_Msk	CMSIS/core_armv8mml.h	1505;"	d
TPI_DEVID_MANCVALID_Msk	CMSIS/core_cm4.h	1185;"	d
TPI_DEVID_MANCVALID_Pos	CMSIS/core_armv8mbl.h	842;"	d
TPI_DEVID_MANCVALID_Pos	CMSIS/core_armv8mml.h	1504;"	d
TPI_DEVID_MANCVALID_Pos	CMSIS/core_cm4.h	1184;"	d
TPI_DEVID_MinBufSz_Msk	CMSIS/core_armv8mbl.h	849;"	d
TPI_DEVID_MinBufSz_Msk	CMSIS/core_armv8mml.h	1511;"	d
TPI_DEVID_MinBufSz_Msk	CMSIS/core_cm4.h	1191;"	d
TPI_DEVID_MinBufSz_Pos	CMSIS/core_armv8mbl.h	848;"	d
TPI_DEVID_MinBufSz_Pos	CMSIS/core_armv8mml.h	1510;"	d
TPI_DEVID_MinBufSz_Pos	CMSIS/core_cm4.h	1190;"	d
TPI_DEVID_NRZVALID_Msk	CMSIS/core_armv8mbl.h	840;"	d
TPI_DEVID_NRZVALID_Msk	CMSIS/core_armv8mml.h	1502;"	d
TPI_DEVID_NRZVALID_Msk	CMSIS/core_cm4.h	1182;"	d
TPI_DEVID_NRZVALID_Pos	CMSIS/core_armv8mbl.h	839;"	d
TPI_DEVID_NRZVALID_Pos	CMSIS/core_armv8mml.h	1501;"	d
TPI_DEVID_NRZVALID_Pos	CMSIS/core_cm4.h	1181;"	d
TPI_DEVID_NrTraceInput_Msk	CMSIS/core_armv8mbl.h	855;"	d
TPI_DEVID_NrTraceInput_Msk	CMSIS/core_armv8mml.h	1517;"	d
TPI_DEVID_NrTraceInput_Msk	CMSIS/core_cm4.h	1197;"	d
TPI_DEVID_NrTraceInput_Pos	CMSIS/core_armv8mbl.h	854;"	d
TPI_DEVID_NrTraceInput_Pos	CMSIS/core_armv8mml.h	1516;"	d
TPI_DEVID_NrTraceInput_Pos	CMSIS/core_cm4.h	1196;"	d
TPI_DEVID_PTINVALID_Msk	CMSIS/core_armv8mbl.h	846;"	d
TPI_DEVID_PTINVALID_Msk	CMSIS/core_armv8mml.h	1508;"	d
TPI_DEVID_PTINVALID_Msk	CMSIS/core_cm4.h	1188;"	d
TPI_DEVID_PTINVALID_Pos	CMSIS/core_armv8mbl.h	845;"	d
TPI_DEVID_PTINVALID_Pos	CMSIS/core_armv8mml.h	1507;"	d
TPI_DEVID_PTINVALID_Pos	CMSIS/core_cm4.h	1187;"	d
TPI_DEVTYPE_MajorType_Msk	CMSIS/core_armv8mbl.h	859;"	d
TPI_DEVTYPE_MajorType_Msk	CMSIS/core_armv8mml.h	1521;"	d
TPI_DEVTYPE_MajorType_Msk	CMSIS/core_cm4.h	1201;"	d
TPI_DEVTYPE_MajorType_Pos	CMSIS/core_armv8mbl.h	858;"	d
TPI_DEVTYPE_MajorType_Pos	CMSIS/core_armv8mml.h	1520;"	d
TPI_DEVTYPE_MajorType_Pos	CMSIS/core_cm4.h	1200;"	d
TPI_DEVTYPE_SubType_Msk	CMSIS/core_armv8mbl.h	862;"	d
TPI_DEVTYPE_SubType_Msk	CMSIS/core_armv8mml.h	1524;"	d
TPI_DEVTYPE_SubType_Msk	CMSIS/core_cm4.h	1204;"	d
TPI_DEVTYPE_SubType_Pos	CMSIS/core_armv8mbl.h	861;"	d
TPI_DEVTYPE_SubType_Pos	CMSIS/core_armv8mml.h	1523;"	d
TPI_DEVTYPE_SubType_Pos	CMSIS/core_cm4.h	1203;"	d
TPI_FFCR_EnFCont_Msk	CMSIS/core_armv8mbl.h	776;"	d
TPI_FFCR_EnFCont_Msk	CMSIS/core_armv8mml.h	1438;"	d
TPI_FFCR_EnFCont_Msk	CMSIS/core_cm4.h	1118;"	d
TPI_FFCR_EnFCont_Pos	CMSIS/core_armv8mbl.h	775;"	d
TPI_FFCR_EnFCont_Pos	CMSIS/core_armv8mml.h	1437;"	d
TPI_FFCR_EnFCont_Pos	CMSIS/core_cm4.h	1117;"	d
TPI_FFCR_TrigIn_Msk	CMSIS/core_armv8mbl.h	773;"	d
TPI_FFCR_TrigIn_Msk	CMSIS/core_armv8mml.h	1435;"	d
TPI_FFCR_TrigIn_Msk	CMSIS/core_cm4.h	1115;"	d
TPI_FFCR_TrigIn_Pos	CMSIS/core_armv8mbl.h	772;"	d
TPI_FFCR_TrigIn_Pos	CMSIS/core_armv8mml.h	1434;"	d
TPI_FFCR_TrigIn_Pos	CMSIS/core_cm4.h	1114;"	d
TPI_FFSR_FlInProg_Msk	CMSIS/core_armv8mbl.h	769;"	d
TPI_FFSR_FlInProg_Msk	CMSIS/core_armv8mml.h	1431;"	d
TPI_FFSR_FlInProg_Msk	CMSIS/core_cm4.h	1111;"	d
TPI_FFSR_FlInProg_Pos	CMSIS/core_armv8mbl.h	768;"	d
TPI_FFSR_FlInProg_Pos	CMSIS/core_armv8mml.h	1430;"	d
TPI_FFSR_FlInProg_Pos	CMSIS/core_cm4.h	1110;"	d
TPI_FFSR_FtNonStop_Msk	CMSIS/core_armv8mbl.h	760;"	d
TPI_FFSR_FtNonStop_Msk	CMSIS/core_armv8mml.h	1422;"	d
TPI_FFSR_FtNonStop_Msk	CMSIS/core_cm4.h	1102;"	d
TPI_FFSR_FtNonStop_Pos	CMSIS/core_armv8mbl.h	759;"	d
TPI_FFSR_FtNonStop_Pos	CMSIS/core_armv8mml.h	1421;"	d
TPI_FFSR_FtNonStop_Pos	CMSIS/core_cm4.h	1101;"	d
TPI_FFSR_FtStopped_Msk	CMSIS/core_armv8mbl.h	766;"	d
TPI_FFSR_FtStopped_Msk	CMSIS/core_armv8mml.h	1428;"	d
TPI_FFSR_FtStopped_Msk	CMSIS/core_cm4.h	1108;"	d
TPI_FFSR_FtStopped_Pos	CMSIS/core_armv8mbl.h	765;"	d
TPI_FFSR_FtStopped_Pos	CMSIS/core_armv8mml.h	1427;"	d
TPI_FFSR_FtStopped_Pos	CMSIS/core_cm4.h	1107;"	d
TPI_FFSR_TCPresent_Msk	CMSIS/core_armv8mbl.h	763;"	d
TPI_FFSR_TCPresent_Msk	CMSIS/core_armv8mml.h	1425;"	d
TPI_FFSR_TCPresent_Msk	CMSIS/core_cm4.h	1105;"	d
TPI_FFSR_TCPresent_Pos	CMSIS/core_armv8mbl.h	762;"	d
TPI_FFSR_TCPresent_Pos	CMSIS/core_armv8mml.h	1424;"	d
TPI_FFSR_TCPresent_Pos	CMSIS/core_cm4.h	1104;"	d
TPI_FIFO0_ETM0_Msk	CMSIS/core_armv8mbl.h	802;"	d
TPI_FIFO0_ETM0_Msk	CMSIS/core_armv8mml.h	1464;"	d
TPI_FIFO0_ETM0_Msk	CMSIS/core_cm4.h	1144;"	d
TPI_FIFO0_ETM0_Pos	CMSIS/core_armv8mbl.h	801;"	d
TPI_FIFO0_ETM0_Pos	CMSIS/core_armv8mml.h	1463;"	d
TPI_FIFO0_ETM0_Pos	CMSIS/core_cm4.h	1143;"	d
TPI_FIFO0_ETM1_Msk	CMSIS/core_armv8mbl.h	799;"	d
TPI_FIFO0_ETM1_Msk	CMSIS/core_armv8mml.h	1461;"	d
TPI_FIFO0_ETM1_Msk	CMSIS/core_cm4.h	1141;"	d
TPI_FIFO0_ETM1_Pos	CMSIS/core_armv8mbl.h	798;"	d
TPI_FIFO0_ETM1_Pos	CMSIS/core_armv8mml.h	1460;"	d
TPI_FIFO0_ETM1_Pos	CMSIS/core_cm4.h	1140;"	d
TPI_FIFO0_ETM2_Msk	CMSIS/core_armv8mbl.h	796;"	d
TPI_FIFO0_ETM2_Msk	CMSIS/core_armv8mml.h	1458;"	d
TPI_FIFO0_ETM2_Msk	CMSIS/core_cm4.h	1138;"	d
TPI_FIFO0_ETM2_Pos	CMSIS/core_armv8mbl.h	795;"	d
TPI_FIFO0_ETM2_Pos	CMSIS/core_armv8mml.h	1457;"	d
TPI_FIFO0_ETM2_Pos	CMSIS/core_cm4.h	1137;"	d
TPI_FIFO0_ETM_ATVALID_Msk	CMSIS/core_armv8mbl.h	790;"	d
TPI_FIFO0_ETM_ATVALID_Msk	CMSIS/core_armv8mml.h	1452;"	d
TPI_FIFO0_ETM_ATVALID_Msk	CMSIS/core_cm4.h	1132;"	d
TPI_FIFO0_ETM_ATVALID_Pos	CMSIS/core_armv8mbl.h	789;"	d
TPI_FIFO0_ETM_ATVALID_Pos	CMSIS/core_armv8mml.h	1451;"	d
TPI_FIFO0_ETM_ATVALID_Pos	CMSIS/core_cm4.h	1131;"	d
TPI_FIFO0_ETM_bytecount_Msk	CMSIS/core_armv8mbl.h	793;"	d
TPI_FIFO0_ETM_bytecount_Msk	CMSIS/core_armv8mml.h	1455;"	d
TPI_FIFO0_ETM_bytecount_Msk	CMSIS/core_cm4.h	1135;"	d
TPI_FIFO0_ETM_bytecount_Pos	CMSIS/core_armv8mbl.h	792;"	d
TPI_FIFO0_ETM_bytecount_Pos	CMSIS/core_armv8mml.h	1454;"	d
TPI_FIFO0_ETM_bytecount_Pos	CMSIS/core_cm4.h	1134;"	d
TPI_FIFO0_ITM_ATVALID_Msk	CMSIS/core_armv8mbl.h	784;"	d
TPI_FIFO0_ITM_ATVALID_Msk	CMSIS/core_armv8mml.h	1446;"	d
TPI_FIFO0_ITM_ATVALID_Msk	CMSIS/core_cm4.h	1126;"	d
TPI_FIFO0_ITM_ATVALID_Pos	CMSIS/core_armv8mbl.h	783;"	d
TPI_FIFO0_ITM_ATVALID_Pos	CMSIS/core_armv8mml.h	1445;"	d
TPI_FIFO0_ITM_ATVALID_Pos	CMSIS/core_cm4.h	1125;"	d
TPI_FIFO0_ITM_bytecount_Msk	CMSIS/core_armv8mbl.h	787;"	d
TPI_FIFO0_ITM_bytecount_Msk	CMSIS/core_armv8mml.h	1449;"	d
TPI_FIFO0_ITM_bytecount_Msk	CMSIS/core_cm4.h	1129;"	d
TPI_FIFO0_ITM_bytecount_Pos	CMSIS/core_armv8mbl.h	786;"	d
TPI_FIFO0_ITM_bytecount_Pos	CMSIS/core_armv8mml.h	1448;"	d
TPI_FIFO0_ITM_bytecount_Pos	CMSIS/core_cm4.h	1128;"	d
TPI_FIFO1_ETM_ATVALID_Msk	CMSIS/core_armv8mbl.h	816;"	d
TPI_FIFO1_ETM_ATVALID_Msk	CMSIS/core_armv8mml.h	1478;"	d
TPI_FIFO1_ETM_ATVALID_Msk	CMSIS/core_cm4.h	1158;"	d
TPI_FIFO1_ETM_ATVALID_Pos	CMSIS/core_armv8mbl.h	815;"	d
TPI_FIFO1_ETM_ATVALID_Pos	CMSIS/core_armv8mml.h	1477;"	d
TPI_FIFO1_ETM_ATVALID_Pos	CMSIS/core_cm4.h	1157;"	d
TPI_FIFO1_ETM_bytecount_Msk	CMSIS/core_armv8mbl.h	819;"	d
TPI_FIFO1_ETM_bytecount_Msk	CMSIS/core_armv8mml.h	1481;"	d
TPI_FIFO1_ETM_bytecount_Msk	CMSIS/core_cm4.h	1161;"	d
TPI_FIFO1_ETM_bytecount_Pos	CMSIS/core_armv8mbl.h	818;"	d
TPI_FIFO1_ETM_bytecount_Pos	CMSIS/core_armv8mml.h	1480;"	d
TPI_FIFO1_ETM_bytecount_Pos	CMSIS/core_cm4.h	1160;"	d
TPI_FIFO1_ITM0_Msk	CMSIS/core_armv8mbl.h	828;"	d
TPI_FIFO1_ITM0_Msk	CMSIS/core_armv8mml.h	1490;"	d
TPI_FIFO1_ITM0_Msk	CMSIS/core_cm4.h	1170;"	d
TPI_FIFO1_ITM0_Pos	CMSIS/core_armv8mbl.h	827;"	d
TPI_FIFO1_ITM0_Pos	CMSIS/core_armv8mml.h	1489;"	d
TPI_FIFO1_ITM0_Pos	CMSIS/core_cm4.h	1169;"	d
TPI_FIFO1_ITM1_Msk	CMSIS/core_armv8mbl.h	825;"	d
TPI_FIFO1_ITM1_Msk	CMSIS/core_armv8mml.h	1487;"	d
TPI_FIFO1_ITM1_Msk	CMSIS/core_cm4.h	1167;"	d
TPI_FIFO1_ITM1_Pos	CMSIS/core_armv8mbl.h	824;"	d
TPI_FIFO1_ITM1_Pos	CMSIS/core_armv8mml.h	1486;"	d
TPI_FIFO1_ITM1_Pos	CMSIS/core_cm4.h	1166;"	d
TPI_FIFO1_ITM2_Msk	CMSIS/core_armv8mbl.h	822;"	d
TPI_FIFO1_ITM2_Msk	CMSIS/core_armv8mml.h	1484;"	d
TPI_FIFO1_ITM2_Msk	CMSIS/core_cm4.h	1164;"	d
TPI_FIFO1_ITM2_Pos	CMSIS/core_armv8mbl.h	821;"	d
TPI_FIFO1_ITM2_Pos	CMSIS/core_armv8mml.h	1483;"	d
TPI_FIFO1_ITM2_Pos	CMSIS/core_cm4.h	1163;"	d
TPI_FIFO1_ITM_ATVALID_Msk	CMSIS/core_armv8mbl.h	810;"	d
TPI_FIFO1_ITM_ATVALID_Msk	CMSIS/core_armv8mml.h	1472;"	d
TPI_FIFO1_ITM_ATVALID_Msk	CMSIS/core_cm4.h	1152;"	d
TPI_FIFO1_ITM_ATVALID_Pos	CMSIS/core_armv8mbl.h	809;"	d
TPI_FIFO1_ITM_ATVALID_Pos	CMSIS/core_armv8mml.h	1471;"	d
TPI_FIFO1_ITM_ATVALID_Pos	CMSIS/core_cm4.h	1151;"	d
TPI_FIFO1_ITM_bytecount_Msk	CMSIS/core_armv8mbl.h	813;"	d
TPI_FIFO1_ITM_bytecount_Msk	CMSIS/core_armv8mml.h	1475;"	d
TPI_FIFO1_ITM_bytecount_Msk	CMSIS/core_cm4.h	1155;"	d
TPI_FIFO1_ITM_bytecount_Pos	CMSIS/core_armv8mbl.h	812;"	d
TPI_FIFO1_ITM_bytecount_Pos	CMSIS/core_armv8mml.h	1474;"	d
TPI_FIFO1_ITM_bytecount_Pos	CMSIS/core_cm4.h	1154;"	d
TPI_ITATBCTR0_ATREADY_Msk	CMSIS/core_armv8mbl.h	832;"	d
TPI_ITATBCTR0_ATREADY_Msk	CMSIS/core_armv8mml.h	1494;"	d
TPI_ITATBCTR0_ATREADY_Msk	CMSIS/core_cm4.h	1174;"	d
TPI_ITATBCTR0_ATREADY_Pos	CMSIS/core_armv8mbl.h	831;"	d
TPI_ITATBCTR0_ATREADY_Pos	CMSIS/core_armv8mml.h	1493;"	d
TPI_ITATBCTR0_ATREADY_Pos	CMSIS/core_cm4.h	1173;"	d
TPI_ITATBCTR2_ATREADY_Msk	CMSIS/core_armv8mbl.h	806;"	d
TPI_ITATBCTR2_ATREADY_Msk	CMSIS/core_armv8mml.h	1468;"	d
TPI_ITATBCTR2_ATREADY_Msk	CMSIS/core_cm4.h	1148;"	d
TPI_ITATBCTR2_ATREADY_Pos	CMSIS/core_armv8mbl.h	805;"	d
TPI_ITATBCTR2_ATREADY_Pos	CMSIS/core_armv8mml.h	1467;"	d
TPI_ITATBCTR2_ATREADY_Pos	CMSIS/core_cm4.h	1147;"	d
TPI_ITCTRL_Mode_Msk	CMSIS/core_armv8mbl.h	836;"	d
TPI_ITCTRL_Mode_Msk	CMSIS/core_armv8mml.h	1498;"	d
TPI_ITCTRL_Mode_Msk	CMSIS/core_cm4.h	1178;"	d
TPI_ITCTRL_Mode_Pos	CMSIS/core_armv8mbl.h	835;"	d
TPI_ITCTRL_Mode_Pos	CMSIS/core_armv8mml.h	1497;"	d
TPI_ITCTRL_Mode_Pos	CMSIS/core_cm4.h	1177;"	d
TPI_SPPR_TXMODE_Msk	CMSIS/core_armv8mbl.h	756;"	d
TPI_SPPR_TXMODE_Msk	CMSIS/core_armv8mml.h	1418;"	d
TPI_SPPR_TXMODE_Msk	CMSIS/core_cm4.h	1098;"	d
TPI_SPPR_TXMODE_Pos	CMSIS/core_armv8mbl.h	755;"	d
TPI_SPPR_TXMODE_Pos	CMSIS/core_armv8mml.h	1417;"	d
TPI_SPPR_TXMODE_Pos	CMSIS/core_cm4.h	1097;"	d
TPI_TRIGGER_TRIGGER_Msk	CMSIS/core_armv8mbl.h	780;"	d
TPI_TRIGGER_TRIGGER_Msk	CMSIS/core_armv8mml.h	1442;"	d
TPI_TRIGGER_TRIGGER_Msk	CMSIS/core_cm4.h	1122;"	d
TPI_TRIGGER_TRIGGER_Pos	CMSIS/core_armv8mbl.h	779;"	d
TPI_TRIGGER_TRIGGER_Pos	CMSIS/core_armv8mml.h	1441;"	d
TPI_TRIGGER_TRIGGER_Pos	CMSIS/core_cm4.h	1121;"	d
TPI_Type	CMSIS/core_armv8mbl.h	/^} TPI_Type;$/;"	t	typeref:struct:__anon125
TPI_Type	CMSIS/core_armv8mml.h	/^} TPI_Type;$/;"	t	typeref:struct:__anon24
TPI_Type	CMSIS/core_cm4.h	/^} TPI_Type;$/;"	t	typeref:struct:__anon46
TPR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t TPR;                    \/*!< Offset: 0xE40 (R\/W)  ITM Trace Privilege Register *\/$/;"	m	struct:__anon21
TPR	CMSIS/core_cm4.h	/^  __IOM uint32_t TPR;                    \/*!< Offset: 0xE40 (R\/W)  ITM Trace Privilege Register *\/$/;"	m	struct:__anon43
TREEVIEW_BI_CLOSED	emwin/emWin_header/TREEVIEW.h	75;"	d
TREEVIEW_BI_LEAF	emwin/emWin_header/TREEVIEW.h	77;"	d
TREEVIEW_BI_MINUS	emwin/emWin_header/TREEVIEW.h	79;"	d
TREEVIEW_BI_OPEN	emwin/emWin_header/TREEVIEW.h	76;"	d
TREEVIEW_BI_PLUS	emwin/emWin_header/TREEVIEW.h	78;"	d
TREEVIEW_BI_PM	emwin/emWin_header/TREEVIEW.h	80;"	d
TREEVIEW_CF_AUTOSCROLLBAR_H	emwin/emWin_header/TREEVIEW.h	67;"	d
TREEVIEW_CF_AUTOSCROLLBAR_V	emwin/emWin_header/TREEVIEW.h	68;"	d
TREEVIEW_CF_HIDELINES	emwin/emWin_header/TREEVIEW.h	65;"	d
TREEVIEW_CF_ROWSELECT	emwin/emWin_header/TREEVIEW.h	66;"	d
TREEVIEW_CI_DISABLED	emwin/emWin_header/TREEVIEW.h	85;"	d
TREEVIEW_CI_SEL	emwin/emWin_header/TREEVIEW.h	84;"	d
TREEVIEW_CI_UNSEL	emwin/emWin_header/TREEVIEW.h	83;"	d
TREEVIEW_COLORS_BK	emwin/emWin_header/TREEVIEW_Private.h	64;"	d
TREEVIEW_COLORS_LINE	emwin/emWin_header/TREEVIEW_Private.h	66;"	d
TREEVIEW_COLORS_TEXT	emwin/emWin_header/TREEVIEW_Private.h	65;"	d
TREEVIEW_GET_FIRST	emwin/emWin_header/TREEVIEW.h	93;"	d
TREEVIEW_GET_FIRST_CHILD	emwin/emWin_header/TREEVIEW.h	97;"	d
TREEVIEW_GET_LAST	emwin/emWin_header/TREEVIEW.h	94;"	d
TREEVIEW_GET_NEXT_SIBLING	emwin/emWin_header/TREEVIEW.h	95;"	d
TREEVIEW_GET_PARENT	emwin/emWin_header/TREEVIEW.h	98;"	d
TREEVIEW_GET_PREV_SIBLING	emwin/emWin_header/TREEVIEW.h	96;"	d
TREEVIEW_H	emwin/emWin_header/TREEVIEW.h	46;"	d
TREEVIEW_Handle	emwin/emWin_header/TREEVIEW.h	/^typedef WM_HMEM TREEVIEW_Handle;$/;"	t
TREEVIEW_ID	emwin/emWin_header/WIDGET.h	121;"	d
TREEVIEW_INIT_ID	emwin/emWin_header/TREEVIEW_Private.h	131;"	d
TREEVIEW_INIT_ID	emwin/emWin_header/TREEVIEW_Private.h	133;"	d
TREEVIEW_INSERT_ABOVE	emwin/emWin_header/TREEVIEW.h	88;"	d
TREEVIEW_INSERT_BELOW	emwin/emWin_header/TREEVIEW.h	89;"	d
TREEVIEW_INSERT_FIRST_CHILD	emwin/emWin_header/TREEVIEW.h	90;"	d
TREEVIEW_ITEM_DATA	emwin/emWin_header/TREEVIEW_Private.h	/^} TREEVIEW_ITEM_DATA;$/;"	t	typeref:struct:__anon224
TREEVIEW_ITEM_DRAW_INFO	emwin/emWin_header/TREEVIEW.h	/^} TREEVIEW_ITEM_DRAW_INFO;$/;"	t	typeref:struct:__anon372
TREEVIEW_ITEM_Handle	emwin/emWin_header/TREEVIEW.h	/^typedef WM_HMEM TREEVIEW_ITEM_Handle;$/;"	t
TREEVIEW_ITEM_INFO	emwin/emWin_header/TREEVIEW.h	/^} TREEVIEW_ITEM_INFO;$/;"	t	typeref:struct:__anon371
TREEVIEW_ITEM_OBJ	emwin/emWin_header/TREEVIEW_Private.h	/^} TREEVIEW_ITEM_OBJ;$/;"	t	typeref:struct:__anon225
TREEVIEW_ITEM_STATE_EXPANDED	emwin/emWin_header/TREEVIEW_Private.h	59;"	d
TREEVIEW_ITEM_STATE_ISLAST	emwin/emWin_header/TREEVIEW_Private.h	60;"	d
TREEVIEW_ITEM_TYPE_LEAF	emwin/emWin_header/TREEVIEW.h	101;"	d
TREEVIEW_ITEM_TYPE_NODE	emwin/emWin_header/TREEVIEW.h	102;"	d
TREEVIEW_LOCK_H	emwin/emWin_header/TREEVIEW_Private.h	138;"	d
TREEVIEW_LOCK_H	emwin/emWin_header/TREEVIEW_Private.h	140;"	d
TREEVIEW_OBJ	emwin/emWin_header/TREEVIEW_Private.h	/^} TREEVIEW_OBJ;$/;"	t	typeref:struct:__anon227
TREEVIEW_PRIVATE_H	emwin/emWin_header/TREEVIEW_Private.h	46;"	d
TREEVIEW_PROPS	emwin/emWin_header/TREEVIEW_Private.h	/^} TREEVIEW_PROPS;$/;"	t	typeref:struct:__anon226
TREEVIEW_SELMODE_ROW	emwin/emWin_header/TREEVIEW.h	105;"	d
TREEVIEW_SELMODE_TEXT	emwin/emWin_header/TREEVIEW.h	106;"	d
TREEVIEW_SF_AUTOSCROLLBAR_H	emwin/emWin_header/TREEVIEW.h	71;"	d
TREEVIEW_SF_AUTOSCROLLBAR_V	emwin/emWin_header/TREEVIEW.h	72;"	d
TREEVIEW_SF_HIDELINES	emwin/emWin_header/TREEVIEW.h	69;"	d
TREEVIEW_SF_ROWSELECT	emwin/emWin_header/TREEVIEW.h	70;"	d
TREEVIEW_STATE_HASLINES	emwin/emWin_header/TREEVIEW_Private.h	62;"	d
TRIGGER	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t TRIGGER;                \/*!< Offset: 0xEE8 (R\/ )  TRIGGER *\/$/;"	m	struct:__anon125
TRIGGER	CMSIS/core_armv8mml.h	/^  __IM  uint32_t TRIGGER;                \/*!< Offset: 0xEE8 (R\/ )  TRIGGER *\/$/;"	m	struct:__anon24
TRIGGER	CMSIS/core_cm4.h	/^  __IM  uint32_t TRIGGER;                \/*!< Offset: 0xEE8 (R\/ )  TRIGGER *\/$/;"	m	struct:__anon46
TRY_AGAIN	lwip/src/include/lwip/netdb.h	77;"	d
TSCC	device/LPC54018.h	/^  __IO uint32_t TSCC;                              \/**< Timestamp Counter Configuration, offset: 0x20 *\/$/;"	m	struct:__anon142
TSCV	device/LPC54018.h	/^  __I  uint32_t TSCV;                              \/**< Timestamp Counter Value, offset: 0x24 *\/$/;"	m	struct:__anon142
TV	device/LPC54018.h	/^  __I  uint32_t TV;                                \/**< Watchdog timer value register. This 24-bit register reads out the current value of the Watchdog timer., offset: 0xC *\/$/;"	m	struct:__anon192
TWO_PI	codec2/defines.h	45;"	d
TW_S	codec2/defines.h	40;"	d
TXBAR	device/LPC54018.h	/^  __IO uint32_t TXBAR;                             \/**< Tx Buffer Add Request, offset: 0xD0 *\/$/;"	m	struct:__anon142
TXBC	device/LPC54018.h	/^  __IO uint32_t TXBC;                              \/**< Tx Buffer Configuration, offset: 0xC0 *\/$/;"	m	struct:__anon142
TXBCF	device/LPC54018.h	/^  __I  uint32_t TXBCF;                             \/**< Tx Buffer Cancellation Finished, offset: 0xDC *\/$/;"	m	struct:__anon142
TXBCIE	device/LPC54018.h	/^  __IO uint32_t TXBCIE;                            \/**< Tx Buffer Cancellation Finished Interrupt Enable, offset: 0xE4 *\/$/;"	m	struct:__anon142
TXBCR	device/LPC54018.h	/^  __IO uint32_t TXBCR;                             \/**< Tx Buffer Cancellation Request, offset: 0xD4 *\/$/;"	m	struct:__anon142
TXBRP	device/LPC54018.h	/^  __I  uint32_t TXBRP;                             \/**< Tx Buffer Request Pending, offset: 0xCC *\/$/;"	m	struct:__anon142
TXBTIE	device/LPC54018.h	/^  __IO uint32_t TXBTIE;                            \/**< Tx Buffer Transmission Interrupt Enable, offset: 0xE0 *\/$/;"	m	struct:__anon142
TXBTO	device/LPC54018.h	/^  __I  uint32_t TXBTO;                             \/**< Tx Buffer Transmission Occurred, offset: 0xD8 *\/$/;"	m	struct:__anon142
TXCAL45DM	usb/phy/usb_phy.h	/^    uint8_t TXCAL45DM; \/* Decode to trim the nominal 45-Ohm series termination resistance to the USB_DM output pin *\/$/;"	m	struct:_usb_phy_config_struct
TXCAL45DP	usb/phy/usb_phy.h	/^    uint8_t TXCAL45DP; \/* Decode to trim the nominal 45-Ohm series termination resistance to the USB_DP output pin *\/$/;"	m	struct:_usb_phy_config_struct
TXCONTINUOUS_EN	radio/sx1276-LoRa.h	/^}TXCONTINUOUS_EN;$/;"	t	typeref:enum:__anon482
TXCONTINUOUS_OFF	radio/sx1276-LoRa.h	/^	TXCONTINUOUS_OFF           =   0x00,       \/\/Disables Tx continuous model$/;"	e	enum:__anon482
TXCONTINUOUS_ON	radio/sx1276-LoRa.h	/^	TXCONTINUOUS_ON            =   0x01,       \/\/Enables Tx continuous model$/;"	e	enum:__anon482
TXEFA	device/LPC54018.h	/^  __IO uint32_t TXEFA;                             \/**< Tx Event FIFO Acknowledge, offset: 0xF8 *\/$/;"	m	struct:__anon142
TXEFC	device/LPC54018.h	/^  __IO uint32_t TXEFC;                             \/**< Tx Event FIFO Configuration, offset: 0xF0 *\/$/;"	m	struct:__anon142
TXEFS	device/LPC54018.h	/^  __I  uint32_t TXEFS;                             \/**< Tx Event FIFO Status, offset: 0xF4 *\/$/;"	m	struct:__anon142
TXESC	device/LPC54018.h	/^  __IO uint32_t TXESC;                             \/**< Tx Buffer Element Size Configuration, offset: 0xC8 *\/$/;"	m	struct:__anon142
TXFQS	device/LPC54018.h	/^  __IO uint32_t TXFQS;                             \/**< Tx FIFO\/Queue Status, offset: 0xC4 *\/$/;"	m	struct:__anon142
TX_TIMER_PERIOD_MS	radio/radio.c	8;"	d	file:
TYPE	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t TYPE;                   \/*!< Offset: 0x000 (R\/ )  MPU Type Register *\/$/;"	m	struct:__anon126
TYPE	CMSIS/core_armv8mbl.h	/^  __IM  uint32_t TYPE;                   \/*!< Offset: 0x004 (R\/ )  SAU Type Register *\/$/;"	m	struct:__anon129
TYPE	CMSIS/core_armv8mml.h	/^  __IM  uint32_t TYPE;                   \/*!< Offset: 0x000 (R\/ )  MPU Type Register *\/$/;"	m	struct:__anon25
TYPE	CMSIS/core_armv8mml.h	/^  __IM  uint32_t TYPE;                   \/*!< Offset: 0x004 (R\/ )  SAU Type Register *\/$/;"	m	struct:__anon28
TYPE	CMSIS/core_cm4.h	/^  __IM  uint32_t TYPE;                   \/*!< Offset: 0x000 (R\/ )  MPU Type Register *\/$/;"	m	struct:__anon47
TYPE	radio/sx1276-Fsk.h	/^}TYPE;$/;"	t	typeref:enum:__anon490
TYPE_COMPRESSED_TCP	lwip/src/include/netif/ppp/vj.h	87;"	d
TYPE_ERROR	lwip/src/include/netif/ppp/vj.h	88;"	d
TYPE_FSK	radio/sx1276-Fsk.h	/^    TYPE_FSK                     =   0x00,       \/\/Fsk type$/;"	e	enum:__anon490
TYPE_IP	lwip/src/include/netif/ppp/vj.h	85;"	d
TYPE_OOK	radio/sx1276-Fsk.h	/^    TYPE_OOK                     =   0x01,       \/\/Ook type$/;"	e	enum:__anon490
TYPE_UNCOMPRESSED_TCP	lwip/src/include/netif/ppp/vj.h	86;"	d
TZ_NVIC_ClearPendingIRQ_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void TZ_NVIC_ClearPendingIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_ClearPendingIRQ_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void TZ_NVIC_ClearPendingIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_DisableIRQ_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void TZ_NVIC_DisableIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_DisableIRQ_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void TZ_NVIC_DisableIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_EnableIRQ_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void TZ_NVIC_EnableIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_EnableIRQ_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void TZ_NVIC_EnableIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_GetActive_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetActive_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_GetActive_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetActive_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_GetEnableIRQ_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetEnableIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_GetEnableIRQ_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetEnableIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_GetPendingIRQ_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetPendingIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_GetPendingIRQ_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetPendingIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_GetPriorityGrouping_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetPriorityGrouping_NS(void)$/;"	f
TZ_NVIC_GetPriority_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetPriority_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_GetPriority_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t TZ_NVIC_GetPriority_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_SetPendingIRQ_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void TZ_NVIC_SetPendingIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_SetPendingIRQ_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void TZ_NVIC_SetPendingIRQ_NS(IRQn_Type IRQn)$/;"	f
TZ_NVIC_SetPriorityGrouping_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void TZ_NVIC_SetPriorityGrouping_NS(uint32_t PriorityGroup)$/;"	f
TZ_NVIC_SetPriority_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void TZ_NVIC_SetPriority_NS(IRQn_Type IRQn, uint32_t priority)$/;"	f
TZ_NVIC_SetPriority_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void TZ_NVIC_SetPriority_NS(IRQn_Type IRQn, uint32_t priority)$/;"	f
TZ_SAU_Disable	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void TZ_SAU_Disable(void)$/;"	f
TZ_SAU_Disable	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void TZ_SAU_Disable(void)$/;"	f
TZ_SAU_Enable	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void TZ_SAU_Enable(void)$/;"	f
TZ_SAU_Enable	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void TZ_SAU_Enable(void)$/;"	f
TZ_SysTick_Config_NS	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t TZ_SysTick_Config_NS(uint32_t ticks)$/;"	f
TZ_SysTick_Config_NS	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t TZ_SysTick_Config_NS(uint32_t ticks)$/;"	f
T_GUI_MTOUCH_STOREEVENT	emwin/emWin_header/GUI_Type.h	/^typedef void (* T_GUI_MTOUCH_STOREEVENT)(GUI_MTOUCH_EVENT *, GUI_MTOUCH_INPUT * pInput);$/;"	t
T_ONINITHOOK	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^typedef void (* T_ONINITHOOK)(DRIVER_CONTEXT * pContext);$/;"	t
T_SX1276	radio/sx1276.h	/^}T_SX1276;$/;"	t	typeref:struct:__anon487
T_UINT32	CMSIS/cmsis_armclang.h	/^  struct __attribute__((packed)) T_UINT32 { uint32_t v; };$/;"	s
T_UINT32	CMSIS/cmsis_compiler.h	/^    @packed struct T_UINT32 { uint32_t v; };$/;"	s
T_UINT32	CMSIS/cmsis_compiler.h	/^    struct __attribute__((packed)) T_UINT32 { uint32_t v; };$/;"	s
T_UINT32	CMSIS/cmsis_compiler.h	/^    struct __packed__ T_UINT32 { uint32_t v; };$/;"	s
T_UINT32	CMSIS/cmsis_gcc.h	/^  struct __attribute__((packed)) T_UINT32 { uint32_t v; };$/;"	s
T_WM_EXEC_GESTURE	emwin/emWin_header/WM.h	/^typedef void (* T_WM_EXEC_GESTURE)(void);$/;"	t
TaskFunction_t	amazon-freertos/include/projdefs.h	/^typedef void (*TaskFunction_t)( void * );$/;"	t
TaskHandle_t	amazon-freertos/include/task.h	/^typedef struct tskTaskControlBlock* TaskHandle_t;$/;"	t	typeref:struct:tskTaskControlBlock
TaskHookFunction_t	amazon-freertos/include/task.h	/^typedef BaseType_t (*TaskHookFunction_t)( void * );$/;"	t
TaskParameters_t	amazon-freertos/include/task.h	/^} TaskParameters_t;$/;"	t	typeref:struct:xTASK_PARAMETERS
TaskStatus_t	amazon-freertos/include/task.h	/^} TaskStatus_t;$/;"	t	typeref:struct:xTASK_STATUS
TaskWork	source/common.h	/^} TaskWork;$/;"	t	typeref:struct:_TaskWork
TextAlign	emwin/emWin_header/FRAMEWIN_Private.h	/^  I16                   TextAlign;$/;"	m	struct:__anon279
TextAlign	emwin/emWin_header/GRAPH_Private.h	/^  int               TextAlign;$/;"	m	struct:GRAPH_SCALE_OBJ
TextAlign	emwin/emWin_header/GUI.h	/^  I16P TextMode, TextAlign;$/;"	m	struct:GUI_CONTEXT
TextAlign	emwin/emWin_header/ICONVIEW_Private.h	/^  int              TextAlign;$/;"	m	struct:__anon218
TextAlign	emwin/emWin_header/MULTIPAGE_Private.h	/^  unsigned                  TextAlign;$/;"	m	struct:__anon340
TextAlign	emwin/emWin_header/PROGBAR_Private.h	/^  I16 TextAlign;$/;"	m	struct:__anon424
TextAlign	emwin/emWin_header/SWIPELIST_Private.h	/^  int            TextAlign;$/;"	m	struct:__anon236
TextArray	emwin/emWin_header/RADIO_Private.h	/^  GUI_ARRAY TextArray;$/;"	m	struct:__anon343
TextArray	emwin/emWin_header/SWIPELIST_Private.h	/^  GUI_ARRAY      TextArray;$/;"	m	struct:__anon236
TextBorderSize	emwin/emWin_header/DROPDOWN_Private.h	/^  I16       TextBorderSize;$/;"	m	struct:__anon359
TextColor	emwin/emWin_header/CHECKBOX_Private.h	/^  GUI_COLOR             TextColor;$/;"	m	struct:__anon205
TextColor	emwin/emWin_header/GRAPH_Private.h	/^  GUI_COLOR        TextColor;$/;"	m	struct:__anon308
TextColor	emwin/emWin_header/HEADER_Private.h	/^  GUI_COLOR           TextColor;$/;"	m	struct:__anon275
TextColor	emwin/emWin_header/MENU.h	/^  GUI_COLOR TextColor;$/;"	m	struct:__anon230
TextColor	emwin/emWin_header/MULTIPAGE.h	/^  GUI_COLOR TextColor;$/;"	m	struct:__anon198
TextColor	emwin/emWin_header/RADIO_Private.h	/^  GUI_COLOR TextColor;$/;"	m	struct:__anon342
TextColor	emwin/emWin_header/TEXT_Private.h	/^  GUI_COLOR TextColor;$/;"	m	struct:__anon297
TextHeight	emwin/emWin_header/DROPDOWN_Private.h	/^  I16     TextHeight;$/;"	m	struct:__anon360
TextIndent	emwin/emWin_header/TREEVIEW_Private.h	/^  int TextIndent;$/;"	m	struct:__anon226
TextMode	emwin/emWin_header/GUI.h	/^  I16P TextMode, TextAlign;$/;"	m	struct:GUI_CONTEXT
TextSize	emwin/emWin_header/SWIPELIST_Private.h	/^  int            TextSize;$/;"	m	struct:__anon236
TextStyle	emwin/emWin_header/GUI.h	/^  U8             TextStyle;$/;"	m	struct:GUI_CONTEXT
TextWidth	emwin/emWin_header/MENU_Private.h	/^  int         TextWidth;$/;"	m	struct:__anon317
Threshold	emwin/emWin_header/SWIPELIST_Private.h	/^  int              Threshold;$/;"	m	struct:__anon237
ThumbSize	emwin/emWin_header/SCROLLBAR_Private.h	/^  int ThumbSize;$/;"	m	struct:__anon349
TickColor	emwin/emWin_header/SLIDER_Private.h	/^  GUI_COLOR           TickColor;$/;"	m	struct:__anon377
TickDist	emwin/emWin_header/GRAPH_Private.h	/^  unsigned          TickDist;$/;"	m	struct:GRAPH_SCALE_OBJ
TickSize	emwin/emWin_header/KNOB_Private.h	/^  I32 TickSize;      \/\/ Minimum movement range in 1\/10 of degree$/;"	m	struct:__anon326
TickSize	emwin/emWin_header/SLIDER.h	/^  int TickSize;$/;"	m	struct:__anon304
TickType_t	amazon-freertos/freertos/portable/portmacro.h	/^	typedef uint16_t TickType_t;$/;"	t
TickType_t	amazon-freertos/freertos/portable/portmacro.h	/^	typedef uint32_t TickType_t;$/;"	t
TickType_t	radio/sx1276.c	/^typedef uint32_t TickType_t;$/;"	t	file:
Time	emwin/emWin_header/GUI.h	/^  GUI_TIMER_TIME   Time;$/;"	m	struct:__anon399
TimeOut_t	amazon-freertos/include/task.h	/^} TimeOut_t;$/;"	t	typeref:struct:xTIME_OUT
TimeStamp	emwin/emWin_header/GUI_Type.h	/^  GUI_TIMER_TIME TimeStamp;$/;"	m	struct:__anon270
TimeTouched	emwin/emWin_header/LISTWHEEL_Private.h	/^  GUI_TIMER_TIME          TimeTouched;      \/\/ Time stamp of last touch event$/;"	m	struct:__anon353
TimeTouchedLast	emwin/emWin_header/LISTWHEEL_Private.h	/^  GUI_TIMER_TIME          TimeTouchedLast;  \/\/ Time of the last touch$/;"	m	struct:__anon353
TimerButton	emwin/emWin_header/SPINBOX_Private.h	/^  I8                  TimerButton;$/;"	m	struct:__anon322
TimerCallbackFunction_t	amazon-freertos/include/timers.h	/^typedef void (*TimerCallbackFunction_t)( TimerHandle_t xTimer );$/;"	t
TimerHandle_t	amazon-freertos/include/timers.h	/^typedef struct tmrTimerControl * TimerHandle_t;$/;"	t	typeref:struct:tmrTimerControl
TimerParameter_t	amazon-freertos/freertos/timers.c	/^} TimerParameter_t;$/;"	t	typeref:struct:tmrTimerParameters	file:
TimerPeriod	emwin/emWin_header/EDIT_Private.h	/^  int                  TimerPeriod;$/;"	m	struct:EDIT_Obj_struct
TimerPeriod	emwin/emWin_header/LISTWHEEL_Private.h	/^  GUI_TIMER_TIME          TimerPeriod;      \/\/ Period of timer events$/;"	m	struct:__anon353
TimerStep	emwin/emWin_header/SCROLLBAR_Private.h	/^  int TimerStep;$/;"	m	struct:SCROLLBAR_OBJ
Timer_Initial	radio/radio.c	/^void Timer_Initial()$/;"	f
Timer_t	amazon-freertos/freertos/timers.c	/^typedef xTIMER Timer_t;$/;"	t	file:
TitleHeight	emwin/emWin_header/FRAMEWIN_Private.h	/^  I16                   TitleHeight;$/;"	m	struct:__anon279
TitleHeight	emwin/emWin_header/FRAMEWIN_Private.h	/^  I16      TitleHeight;$/;"	m	struct:__anon281
TotalBytes	emwin/emWin_header/GUI.h	/^  U32 TotalBytes;$/;"	m	struct:__anon392
TotalLinesLeft	emwin/emWin_header/GUI_JPEG_Private.h	/^  int TotalLinesLeft; \/\/ Total number of lines left in image$/;"	m	struct:GUI_JPEG_DCONTEXT
TouchPos	emwin/emWin_header/LISTWHEEL_Private.h	/^  int                     TouchPos;         \/\/ Y-position of last touch event$/;"	m	struct:__anon353
TouchPos	emwin/emWin_header/SCROLLBAR_Private.h	/^  int TouchPos;$/;"	m	struct:SCROLLBAR_OBJ
Transfer	CMSIS_driver/Driver_SPI.h	/^  int32_t              (*Transfer)        (const void *data_out,$/;"	m	struct:_ARM_DRIVER_SPI
TransformationRequired	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 TransformationRequired;$/;"	m	struct:GUI_JPEG_DCONTEXT
Ts	codec2/fsk.h	/^    int Ts;                 \/* samples per symbol *\/$/;"	m	struct:FSK
TxTimerCallback	radio/radio.c	/^void TxTimerCallback(TimerHandle_t xTimer)$/;"	f
TxTimerHandle	radio/radio.c	/^TimerHandle_t TxTimerHandle = NULL;$/;"	v
U128	emwin/emWin_header/Global.h	70;"	d
U16	emwin/emWin_header/Global.h	55;"	d
U16P	emwin/emWin_header/LCD.h	67;"	d
U16_F	lwip/src/include/lwip/arch.h	153;"	d
U16_F	source/lwipopts.h	263;"	d
U32	emwin/emWin_header/Global.h	58;"	d
U32	emwin/emWin_header/Global.h	61;"	d
U32_F	lwip/src/include/lwip/arch.h	162;"	d
U32_F	source/lwipopts.h	266;"	d
U64	emwin/emWin_header/Global.h	69;"	d
U64	emwin/emWin_header/Global.h	82;"	d
U64_C	emwin/emWin_header/Global.h	74;"	d
U64_C	emwin/emWin_header/Global.h	76;"	d
U64_C	emwin/emWin_header/Global.h	84;"	d
U8	emwin/emWin_header/Global.h	53;"	d
U8_F	source/lwipopts.h	260;"	d
UART_ADAPTER_NON_BLOCKING_MODE	component/uart/uart.h	27;"	d
UART_ADAPTER_NON_BLOCKING_MODE	component/uart/uart.h	30;"	d
UART_ADAPTER_NON_BLOCKING_MODE	component/uart/uart.h	32;"	d
UART_BITMAP_SIZE	vcom/virtual_com.h	46;"	d
UART_THREAD_H_	radio/uart_thread.h	45;"	d
UBS_KHCI_BDT_KEEP	usb/device/source/khci/usb_device_khci.h	34;"	d
UBS_KHCI_BDT_NINC	usb/device/source/khci/usb_device_khci.h	35;"	d
UBaseType_t	amazon-freertos/freertos/portable/portmacro.h	/^typedef unsigned long UBaseType_t;$/;"	t
UDPLITE_RECV_CSCOV	lwip/src/include/lwip/sockets.h	299;"	d
UDPLITE_SEND_CSCOV	lwip/src/include/lwip/sockets.h	298;"	d
UDP_DEBUG	lwip/src/include/lwip/opt.h	3436;"	d
UDP_ENSURE_LOCAL_PORT_RANGE	lwip/src/core/udp.c	73;"	d	file:
UDP_FLAGS_CONNECTED	lwip/src/include/lwip/udp.h	58;"	d
UDP_FLAGS_MULTICAST_LOOP	lwip/src/include/lwip/udp.h	59;"	d
UDP_FLAGS_NOCHKSUM	lwip/src/include/lwip/udp.h	56;"	d
UDP_FLAGS_UDPLITE	lwip/src/include/lwip/udp.h	57;"	d
UDP_HLEN	lwip/src/include/lwip/prot/udp.h	46;"	d
UDP_HLEN_ALLOC	lwip/src/netif/lowpan6_common.c	787;"	d	file:
UDP_LOCAL_PORT_RANGE_END	lwip/src/core/udp.c	72;"	d	file:
UDP_LOCAL_PORT_RANGE_START	lwip/src/core/udp.c	71;"	d	file:
UDP_STATS	lwip/src/include/lwip/opt.h	2159;"	d
UDP_STATS	lwip/src/include/lwip/opt.h	2241;"	d
UDP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	334;"	d
UDP_STATS_DISPLAY	lwip/src/include/lwip/stats.h	337;"	d
UDP_STATS_INC	lwip/src/include/lwip/stats.h	333;"	d
UDP_STATS_INC	lwip/src/include/lwip/stats.h	336;"	d
UDP_TTL	lwip/src/include/lwip/opt.h	1194;"	d
UDP_TTL	source/lwipopts.h	180;"	d
UINT16_MAX	drivers/fsl_common.h	199;"	d
UINT32_MAX	drivers/fsl_common.h	203;"	d
UNLOCK_TCPIP_CORE	lwip/src/include/lwip/tcpip.h	59;"	d
UNLOCK_TCPIP_CORE	lwip/src/include/lwip/tcpip.h	63;"	d
UNTIMEOUT	lwip/src/include/netif/ppp/ppp_impl.h	537;"	d
UPAPCS_AUTHREQ	lwip/src/include/netif/ppp/upap.h	77;"	d
UPAPCS_BADAUTH	lwip/src/include/netif/ppp/upap.h	79;"	d
UPAPCS_CLOSED	lwip/src/include/netif/ppp/upap.h	75;"	d
UPAPCS_INITIAL	lwip/src/include/netif/ppp/upap.h	74;"	d
UPAPCS_OPEN	lwip/src/include/netif/ppp/upap.h	78;"	d
UPAPCS_PENDING	lwip/src/include/netif/ppp/upap.h	76;"	d
UPAPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	64;"	d
UPAPDEBUG	lwip/src/include/netif/ppp/pppdebug.h	76;"	d
UPAPSS_BADAUTH	lwip/src/include/netif/ppp/upap.h	89;"	d
UPAPSS_CLOSED	lwip/src/include/netif/ppp/upap.h	85;"	d
UPAPSS_INITIAL	lwip/src/include/netif/ppp/upap.h	84;"	d
UPAPSS_LISTEN	lwip/src/include/netif/ppp/upap.h	87;"	d
UPAPSS_OPEN	lwip/src/include/netif/ppp/upap.h	88;"	d
UPAPSS_PENDING	lwip/src/include/netif/ppp/upap.h	86;"	d
UPAP_AUTHACK	lwip/src/include/netif/ppp/upap.h	67;"	d
UPAP_AUTHNAK	lwip/src/include/netif/ppp/upap.h	68;"	d
UPAP_AUTHREQ	lwip/src/include/netif/ppp/upap.h	66;"	d
UPAP_DEFREQTIME	lwip/src/include/netif/ppp/ppp_opts.h	412;"	d
UPAP_DEFTIMEOUT	lwip/src/include/netif/ppp/ppp_opts.h	397;"	d
UPAP_DEFTRANSMITS	lwip/src/include/netif/ppp/ppp_opts.h	404;"	d
UPAP_H	lwip/src/include/netif/ppp/upap.h	49;"	d
UPAP_HEADERLEN	lwip/src/include/netif/ppp/upap.h	60;"	d
UPBASE	device/LPC54018.h	/^  __IO uint32_t UPBASE;                            \/**< Upper Panel Frame Base Address register, offset: 0x10 *\/$/;"	m	struct:__anon165
UPCURR	device/LPC54018.h	/^  __I  uint32_t UPCURR;                            \/**< Upper Panel Current Address Value register, offset: 0x2C *\/$/;"	m	struct:__anon165
USART0	device/LPC54018.h	13988;"	d
USART0_BASE	device/LPC54018.h	13986;"	d
USART0_RX_BUFFER_ENABLE	board/RTE_Device.h	38;"	d
USART1	device/LPC54018.h	13992;"	d
USART1_BASE	device/LPC54018.h	13990;"	d
USART1_RX_BUFFER_ENABLE	board/RTE_Device.h	39;"	d
USART2	device/LPC54018.h	13996;"	d
USART2_BASE	device/LPC54018.h	13994;"	d
USART2_RX_BUFFER_ENABLE	board/RTE_Device.h	40;"	d
USART3	device/LPC54018.h	14000;"	d
USART3_BASE	device/LPC54018.h	13998;"	d
USART3_RX_BUFFER_ENABLE	board/RTE_Device.h	41;"	d
USART4	device/LPC54018.h	14004;"	d
USART4_BASE	device/LPC54018.h	14002;"	d
USART4_RX_BUFFER_ENABLE	board/RTE_Device.h	42;"	d
USART5	device/LPC54018.h	14008;"	d
USART5_BASE	device/LPC54018.h	14006;"	d
USART5_RX_BUFFER_ENABLE	board/RTE_Device.h	43;"	d
USART6	device/LPC54018.h	14012;"	d
USART6_BASE	device/LPC54018.h	14010;"	d
USART6_RX_BUFFER_ENABLE	board/RTE_Device.h	44;"	d
USART7	device/LPC54018.h	14016;"	d
USART7_BASE	device/LPC54018.h	14014;"	d
USART7_RX_BUFFER_ENABLE	board/RTE_Device.h	45;"	d
USART8	device/LPC54018.h	14020;"	d
USART8_BASE	device/LPC54018.h	14018;"	d
USART8_RX_BUFFER_ENABLE	board/RTE_Device.h	46;"	d
USART9	device/LPC54018.h	14024;"	d
USART9_BASE	device/LPC54018.h	14022;"	d
USART9_RX_BUFFER_ENABLE	board/RTE_Device.h	47;"	d
USART_ADDR_ADDRESS	device/LPC54018.h	13727;"	d
USART_ADDR_ADDRESS_MASK	device/LPC54018.h	13725;"	d
USART_ADDR_ADDRESS_SHIFT	device/LPC54018.h	13726;"	d
USART_BASE_ADDRS	device/LPC54018.h	14026;"	d
USART_BASE_PTRS	device/LPC54018.h	14028;"	d
USART_BRG_BRGVAL	device/LPC54018.h	13682;"	d
USART_BRG_BRGVAL_MASK	device/LPC54018.h	13680;"	d
USART_BRG_BRGVAL_SHIFT	device/LPC54018.h	13681;"	d
USART_CFG_AUTOADDR	device/LPC54018.h	13483;"	d
USART_CFG_AUTOADDR_MASK	device/LPC54018.h	13475;"	d
USART_CFG_AUTOADDR_SHIFT	device/LPC54018.h	13476;"	d
USART_CFG_CLKPOL	device/LPC54018.h	13448;"	d
USART_CFG_CLKPOL_MASK	device/LPC54018.h	13442;"	d
USART_CFG_CLKPOL_SHIFT	device/LPC54018.h	13443;"	d
USART_CFG_CTSEN	device/LPC54018.h	13434;"	d
USART_CFG_CTSEN_MASK	device/LPC54018.h	13427;"	d
USART_CFG_CTSEN_SHIFT	device/LPC54018.h	13428;"	d
USART_CFG_DATALEN	device/LPC54018.h	13394;"	d
USART_CFG_DATALEN_MASK	device/LPC54018.h	13386;"	d
USART_CFG_DATALEN_SHIFT	device/LPC54018.h	13387;"	d
USART_CFG_ENABLE	device/LPC54018.h	13385;"	d
USART_CFG_ENABLE_MASK	device/LPC54018.h	13376;"	d
USART_CFG_ENABLE_SHIFT	device/LPC54018.h	13377;"	d
USART_CFG_LINMODE	device/LPC54018.h	13426;"	d
USART_CFG_LINMODE_MASK	device/LPC54018.h	13420;"	d
USART_CFG_LINMODE_SHIFT	device/LPC54018.h	13421;"	d
USART_CFG_LOOP	device/LPC54018.h	13465;"	d
USART_CFG_LOOP_MASK	device/LPC54018.h	13456;"	d
USART_CFG_LOOP_SHIFT	device/LPC54018.h	13457;"	d
USART_CFG_MODE32K	device/LPC54018.h	13419;"	d
USART_CFG_MODE32K_MASK	device/LPC54018.h	13413;"	d
USART_CFG_MODE32K_SHIFT	device/LPC54018.h	13414;"	d
USART_CFG_OEPOL	device/LPC54018.h	13497;"	d
USART_CFG_OEPOL_MASK	device/LPC54018.h	13491;"	d
USART_CFG_OEPOL_SHIFT	device/LPC54018.h	13492;"	d
USART_CFG_OESEL	device/LPC54018.h	13490;"	d
USART_CFG_OESEL_MASK	device/LPC54018.h	13484;"	d
USART_CFG_OESEL_SHIFT	device/LPC54018.h	13485;"	d
USART_CFG_OETA	device/LPC54018.h	13474;"	d
USART_CFG_OETA_MASK	device/LPC54018.h	13466;"	d
USART_CFG_OETA_SHIFT	device/LPC54018.h	13467;"	d
USART_CFG_PARITYSEL	device/LPC54018.h	13405;"	d
USART_CFG_PARITYSEL_MASK	device/LPC54018.h	13395;"	d
USART_CFG_PARITYSEL_SHIFT	device/LPC54018.h	13396;"	d
USART_CFG_RXPOL	device/LPC54018.h	13506;"	d
USART_CFG_RXPOL_MASK	device/LPC54018.h	13498;"	d
USART_CFG_RXPOL_SHIFT	device/LPC54018.h	13499;"	d
USART_CFG_STOPLEN	device/LPC54018.h	13412;"	d
USART_CFG_STOPLEN_MASK	device/LPC54018.h	13406;"	d
USART_CFG_STOPLEN_SHIFT	device/LPC54018.h	13407;"	d
USART_CFG_SYNCEN	device/LPC54018.h	13441;"	d
USART_CFG_SYNCEN_MASK	device/LPC54018.h	13435;"	d
USART_CFG_SYNCEN_SHIFT	device/LPC54018.h	13436;"	d
USART_CFG_SYNCMST	device/LPC54018.h	13455;"	d
USART_CFG_SYNCMST_MASK	device/LPC54018.h	13449;"	d
USART_CFG_SYNCMST_SHIFT	device/LPC54018.h	13450;"	d
USART_CFG_TXPOL	device/LPC54018.h	13515;"	d
USART_CFG_TXPOL_MASK	device/LPC54018.h	13507;"	d
USART_CFG_TXPOL_SHIFT	device/LPC54018.h	13508;"	d
USART_CTL_ADDRDET	device/LPC54018.h	13540;"	d
USART_CTL_ADDRDET_MASK	device/LPC54018.h	13530;"	d
USART_CTL_ADDRDET_SHIFT	device/LPC54018.h	13531;"	d
USART_CTL_AUTOBAUD	device/LPC54018.h	13573;"	d
USART_CTL_AUTOBAUD_MASK	device/LPC54018.h	13565;"	d
USART_CTL_AUTOBAUD_SHIFT	device/LPC54018.h	13566;"	d
USART_CTL_CC	device/LPC54018.h	13557;"	d
USART_CTL_CC_MASK	device/LPC54018.h	13549;"	d
USART_CTL_CC_SHIFT	device/LPC54018.h	13550;"	d
USART_CTL_CLRCCONRX	device/LPC54018.h	13564;"	d
USART_CTL_CLRCCONRX_MASK	device/LPC54018.h	13558;"	d
USART_CTL_CLRCCONRX_SHIFT	device/LPC54018.h	13559;"	d
USART_CTL_TXBRKEN	device/LPC54018.h	13529;"	d
USART_CTL_TXBRKEN_MASK	device/LPC54018.h	13520;"	d
USART_CTL_TXBRKEN_SHIFT	device/LPC54018.h	13521;"	d
USART_CTL_TXDIS	device/LPC54018.h	13548;"	d
USART_CTL_TXDIS_MASK	device/LPC54018.h	13541;"	d
USART_CTL_TXDIS_SHIFT	device/LPC54018.h	13542;"	d
USART_ClearStatusFlags	drivers/fsl_usart.h	/^static inline void USART_ClearStatusFlags(USART_Type *base, uint32_t mask)$/;"	f
USART_Deinit	drivers/fsl_usart.c	/^void USART_Deinit(USART_Type *base)$/;"	f
USART_DisableInterrupts	drivers/fsl_usart.h	/^static inline void USART_DisableInterrupts(USART_Type *base, uint32_t mask)$/;"	f
USART_EnableAutoClearSCLK	drivers/fsl_usart.h	/^static inline void USART_EnableAutoClearSCLK(USART_Type *base, bool enable)$/;"	f
USART_EnableCTS	drivers/fsl_usart.h	/^static inline void USART_EnableCTS(USART_Type *base, bool enable)$/;"	f
USART_EnableContinuousSCLK	drivers/fsl_usart.h	/^static inline void USART_EnableContinuousSCLK(USART_Type *base, bool enable)$/;"	f
USART_EnableInterrupts	drivers/fsl_usart.h	/^static inline void USART_EnableInterrupts(USART_Type *base, uint32_t mask)$/;"	f
USART_EnableRxDMA	drivers/fsl_usart.h	/^static inline void USART_EnableRxDMA(USART_Type *base, bool enable)$/;"	f
USART_EnableTxDMA	drivers/fsl_usart.h	/^static inline void USART_EnableTxDMA(USART_Type *base, bool enable)$/;"	f
USART_FIFOCFG_DMARX	device/LPC54018.h	13762;"	d
USART_FIFOCFG_DMARX_MASK	device/LPC54018.h	13756;"	d
USART_FIFOCFG_DMARX_SHIFT	device/LPC54018.h	13757;"	d
USART_FIFOCFG_DMATX	device/LPC54018.h	13755;"	d
USART_FIFOCFG_DMATX_MASK	device/LPC54018.h	13749;"	d
USART_FIFOCFG_DMATX_SHIFT	device/LPC54018.h	13750;"	d
USART_FIFOCFG_EMPTYRX	device/LPC54018.h	13792;"	d
USART_FIFOCFG_EMPTYRX_MASK	device/LPC54018.h	13790;"	d
USART_FIFOCFG_EMPTYRX_SHIFT	device/LPC54018.h	13791;"	d
USART_FIFOCFG_EMPTYTX	device/LPC54018.h	13789;"	d
USART_FIFOCFG_EMPTYTX_MASK	device/LPC54018.h	13787;"	d
USART_FIFOCFG_EMPTYTX_SHIFT	device/LPC54018.h	13788;"	d
USART_FIFOCFG_ENABLERX	device/LPC54018.h	13745;"	d
USART_FIFOCFG_ENABLERX_MASK	device/LPC54018.h	13739;"	d
USART_FIFOCFG_ENABLERX_SHIFT	device/LPC54018.h	13740;"	d
USART_FIFOCFG_ENABLETX	device/LPC54018.h	13738;"	d
USART_FIFOCFG_ENABLETX_MASK	device/LPC54018.h	13732;"	d
USART_FIFOCFG_ENABLETX_SHIFT	device/LPC54018.h	13733;"	d
USART_FIFOCFG_SIZE	device/LPC54018.h	13748;"	d
USART_FIFOCFG_SIZE_MASK	device/LPC54018.h	13746;"	d
USART_FIFOCFG_SIZE_SHIFT	device/LPC54018.h	13747;"	d
USART_FIFOCFG_WAKERX	device/LPC54018.h	13786;"	d
USART_FIFOCFG_WAKERX_MASK	device/LPC54018.h	13775;"	d
USART_FIFOCFG_WAKERX_SHIFT	device/LPC54018.h	13776;"	d
USART_FIFOCFG_WAKETX	device/LPC54018.h	13774;"	d
USART_FIFOCFG_WAKETX_MASK	device/LPC54018.h	13763;"	d
USART_FIFOCFG_WAKETX_SHIFT	device/LPC54018.h	13764;"	d
USART_FIFOINTENCLR_RXERR	device/LPC54018.h	13895;"	d
USART_FIFOINTENCLR_RXERR_MASK	device/LPC54018.h	13893;"	d
USART_FIFOINTENCLR_RXERR_SHIFT	device/LPC54018.h	13894;"	d
USART_FIFOINTENCLR_RXLVL	device/LPC54018.h	13901;"	d
USART_FIFOINTENCLR_RXLVL_MASK	device/LPC54018.h	13899;"	d
USART_FIFOINTENCLR_RXLVL_SHIFT	device/LPC54018.h	13900;"	d
USART_FIFOINTENCLR_TXERR	device/LPC54018.h	13892;"	d
USART_FIFOINTENCLR_TXERR_MASK	device/LPC54018.h	13890;"	d
USART_FIFOINTENCLR_TXERR_SHIFT	device/LPC54018.h	13891;"	d
USART_FIFOINTENCLR_TXLVL	device/LPC54018.h	13898;"	d
USART_FIFOINTENCLR_TXLVL_MASK	device/LPC54018.h	13896;"	d
USART_FIFOINTENCLR_TXLVL_SHIFT	device/LPC54018.h	13897;"	d
USART_FIFOINTENSET_RXERR	device/LPC54018.h	13867;"	d
USART_FIFOINTENSET_RXERR_MASK	device/LPC54018.h	13861;"	d
USART_FIFOINTENSET_RXERR_SHIFT	device/LPC54018.h	13862;"	d
USART_FIFOINTENSET_RXLVL	device/LPC54018.h	13885;"	d
USART_FIFOINTENSET_RXLVL_MASK	device/LPC54018.h	13877;"	d
USART_FIFOINTENSET_RXLVL_SHIFT	device/LPC54018.h	13878;"	d
USART_FIFOINTENSET_TXERR	device/LPC54018.h	13860;"	d
USART_FIFOINTENSET_TXERR_MASK	device/LPC54018.h	13854;"	d
USART_FIFOINTENSET_TXERR_SHIFT	device/LPC54018.h	13855;"	d
USART_FIFOINTENSET_TXLVL	device/LPC54018.h	13876;"	d
USART_FIFOINTENSET_TXLVL_MASK	device/LPC54018.h	13868;"	d
USART_FIFOINTENSET_TXLVL_SHIFT	device/LPC54018.h	13869;"	d
USART_FIFOINTSTAT_PERINT	device/LPC54018.h	13920;"	d
USART_FIFOINTSTAT_PERINT_MASK	device/LPC54018.h	13918;"	d
USART_FIFOINTSTAT_PERINT_SHIFT	device/LPC54018.h	13919;"	d
USART_FIFOINTSTAT_RXERR	device/LPC54018.h	13911;"	d
USART_FIFOINTSTAT_RXERR_MASK	device/LPC54018.h	13909;"	d
USART_FIFOINTSTAT_RXERR_SHIFT	device/LPC54018.h	13910;"	d
USART_FIFOINTSTAT_RXLVL	device/LPC54018.h	13917;"	d
USART_FIFOINTSTAT_RXLVL_MASK	device/LPC54018.h	13915;"	d
USART_FIFOINTSTAT_RXLVL_SHIFT	device/LPC54018.h	13916;"	d
USART_FIFOINTSTAT_TXERR	device/LPC54018.h	13908;"	d
USART_FIFOINTSTAT_TXERR_MASK	device/LPC54018.h	13906;"	d
USART_FIFOINTSTAT_TXERR_SHIFT	device/LPC54018.h	13907;"	d
USART_FIFOINTSTAT_TXLVL	device/LPC54018.h	13914;"	d
USART_FIFOINTSTAT_TXLVL_MASK	device/LPC54018.h	13912;"	d
USART_FIFOINTSTAT_TXLVL_SHIFT	device/LPC54018.h	13913;"	d
USART_FIFORDNOPOP_FRAMERR	device/LPC54018.h	13953;"	d
USART_FIFORDNOPOP_FRAMERR_MASK	device/LPC54018.h	13951;"	d
USART_FIFORDNOPOP_FRAMERR_SHIFT	device/LPC54018.h	13952;"	d
USART_FIFORDNOPOP_PARITYERR	device/LPC54018.h	13956;"	d
USART_FIFORDNOPOP_PARITYERR_MASK	device/LPC54018.h	13954;"	d
USART_FIFORDNOPOP_PARITYERR_SHIFT	device/LPC54018.h	13955;"	d
USART_FIFORDNOPOP_RXDATA	device/LPC54018.h	13950;"	d
USART_FIFORDNOPOP_RXDATA_MASK	device/LPC54018.h	13948;"	d
USART_FIFORDNOPOP_RXDATA_SHIFT	device/LPC54018.h	13949;"	d
USART_FIFORDNOPOP_RXNOISE	device/LPC54018.h	13959;"	d
USART_FIFORDNOPOP_RXNOISE_MASK	device/LPC54018.h	13957;"	d
USART_FIFORDNOPOP_RXNOISE_SHIFT	device/LPC54018.h	13958;"	d
USART_FIFORD_FRAMERR	device/LPC54018.h	13937;"	d
USART_FIFORD_FRAMERR_MASK	device/LPC54018.h	13935;"	d
USART_FIFORD_FRAMERR_SHIFT	device/LPC54018.h	13936;"	d
USART_FIFORD_PARITYERR	device/LPC54018.h	13940;"	d
USART_FIFORD_PARITYERR_MASK	device/LPC54018.h	13938;"	d
USART_FIFORD_PARITYERR_SHIFT	device/LPC54018.h	13939;"	d
USART_FIFORD_RXDATA	device/LPC54018.h	13934;"	d
USART_FIFORD_RXDATA_MASK	device/LPC54018.h	13932;"	d
USART_FIFORD_RXDATA_SHIFT	device/LPC54018.h	13933;"	d
USART_FIFORD_RXNOISE	device/LPC54018.h	13943;"	d
USART_FIFORD_RXNOISE_MASK	device/LPC54018.h	13941;"	d
USART_FIFORD_RXNOISE_SHIFT	device/LPC54018.h	13942;"	d
USART_FIFOSTAT_PERINT	device/LPC54018.h	13805;"	d
USART_FIFOSTAT_PERINT_MASK	device/LPC54018.h	13803;"	d
USART_FIFOSTAT_PERINT_SHIFT	device/LPC54018.h	13804;"	d
USART_FIFOSTAT_RXERR	device/LPC54018.h	13802;"	d
USART_FIFOSTAT_RXERR_MASK	device/LPC54018.h	13800;"	d
USART_FIFOSTAT_RXERR_SHIFT	device/LPC54018.h	13801;"	d
USART_FIFOSTAT_RXFULL	device/LPC54018.h	13817;"	d
USART_FIFOSTAT_RXFULL_MASK	device/LPC54018.h	13815;"	d
USART_FIFOSTAT_RXFULL_SHIFT	device/LPC54018.h	13816;"	d
USART_FIFOSTAT_RXLVL	device/LPC54018.h	13823;"	d
USART_FIFOSTAT_RXLVL_MASK	device/LPC54018.h	13821;"	d
USART_FIFOSTAT_RXLVL_SHIFT	device/LPC54018.h	13822;"	d
USART_FIFOSTAT_RXNOTEMPTY	device/LPC54018.h	13814;"	d
USART_FIFOSTAT_RXNOTEMPTY_MASK	device/LPC54018.h	13812;"	d
USART_FIFOSTAT_RXNOTEMPTY_SHIFT	device/LPC54018.h	13813;"	d
USART_FIFOSTAT_TXEMPTY	device/LPC54018.h	13808;"	d
USART_FIFOSTAT_TXEMPTY_MASK	device/LPC54018.h	13806;"	d
USART_FIFOSTAT_TXEMPTY_SHIFT	device/LPC54018.h	13807;"	d
USART_FIFOSTAT_TXERR	device/LPC54018.h	13799;"	d
USART_FIFOSTAT_TXERR_MASK	device/LPC54018.h	13797;"	d
USART_FIFOSTAT_TXERR_SHIFT	device/LPC54018.h	13798;"	d
USART_FIFOSTAT_TXLVL	device/LPC54018.h	13820;"	d
USART_FIFOSTAT_TXLVL_MASK	device/LPC54018.h	13818;"	d
USART_FIFOSTAT_TXLVL_SHIFT	device/LPC54018.h	13819;"	d
USART_FIFOSTAT_TXNOTFULL	device/LPC54018.h	13811;"	d
USART_FIFOSTAT_TXNOTFULL_MASK	device/LPC54018.h	13809;"	d
USART_FIFOSTAT_TXNOTFULL_SHIFT	device/LPC54018.h	13810;"	d
USART_FIFOTRIG_RXLVL	device/LPC54018.h	13849;"	d
USART_FIFOTRIG_RXLVLENA	device/LPC54018.h	13843;"	d
USART_FIFOTRIG_RXLVLENA_MASK	device/LPC54018.h	13836;"	d
USART_FIFOTRIG_RXLVLENA_SHIFT	device/LPC54018.h	13837;"	d
USART_FIFOTRIG_RXLVL_GET	drivers/fsl_usart.h	29;"	d
USART_FIFOTRIG_RXLVL_MASK	device/LPC54018.h	13847;"	d
USART_FIFOTRIG_RXLVL_SHIFT	device/LPC54018.h	13848;"	d
USART_FIFOTRIG_TXLVL	device/LPC54018.h	13846;"	d
USART_FIFOTRIG_TXLVLENA	device/LPC54018.h	13835;"	d
USART_FIFOTRIG_TXLVLENA_MASK	device/LPC54018.h	13828;"	d
USART_FIFOTRIG_TXLVLENA_SHIFT	device/LPC54018.h	13829;"	d
USART_FIFOTRIG_TXLVL_GET	drivers/fsl_usart.h	28;"	d
USART_FIFOTRIG_TXLVL_MASK	device/LPC54018.h	13844;"	d
USART_FIFOTRIG_TXLVL_SHIFT	device/LPC54018.h	13845;"	d
USART_FIFOWR_TXDATA	device/LPC54018.h	13927;"	d
USART_FIFOWR_TXDATA_MASK	device/LPC54018.h	13925;"	d
USART_FIFOWR_TXDATA_SHIFT	device/LPC54018.h	13926;"	d
USART_GetDefaultConfig	drivers/fsl_usart.c	/^void USART_GetDefaultConfig(usart_config_t *config)$/;"	f
USART_GetEnabledInterrupts	drivers/fsl_usart.h	/^static inline uint32_t USART_GetEnabledInterrupts(USART_Type *base)$/;"	f
USART_GetInstance	drivers/fsl_usart.c	/^uint32_t USART_GetInstance(USART_Type *base)$/;"	f
USART_GetStatusFlags	drivers/fsl_usart.h	/^static inline uint32_t USART_GetStatusFlags(USART_Type *base)$/;"	f
USART_ID_APERTURE	device/LPC54018.h	13966;"	d
USART_ID_APERTURE_MASK	device/LPC54018.h	13964;"	d
USART_ID_APERTURE_SHIFT	device/LPC54018.h	13965;"	d
USART_ID_ID	device/LPC54018.h	13975;"	d
USART_ID_ID_MASK	device/LPC54018.h	13973;"	d
USART_ID_ID_SHIFT	device/LPC54018.h	13974;"	d
USART_ID_MAJOR_REV	device/LPC54018.h	13972;"	d
USART_ID_MAJOR_REV_MASK	device/LPC54018.h	13970;"	d
USART_ID_MAJOR_REV_SHIFT	device/LPC54018.h	13971;"	d
USART_ID_MINOR_REV	device/LPC54018.h	13969;"	d
USART_ID_MINOR_REV_MASK	device/LPC54018.h	13967;"	d
USART_ID_MINOR_REV_SHIFT	device/LPC54018.h	13968;"	d
USART_INTENCLR_ABERRCLR	device/LPC54018.h	13675;"	d
USART_INTENCLR_ABERRCLR_MASK	device/LPC54018.h	13673;"	d
USART_INTENCLR_ABERRCLR_SHIFT	device/LPC54018.h	13674;"	d
USART_INTENCLR_DELTACTSCLR	device/LPC54018.h	13654;"	d
USART_INTENCLR_DELTACTSCLR_MASK	device/LPC54018.h	13652;"	d
USART_INTENCLR_DELTACTSCLR_SHIFT	device/LPC54018.h	13653;"	d
USART_INTENCLR_DELTARXBRKCLR	device/LPC54018.h	13660;"	d
USART_INTENCLR_DELTARXBRKCLR_MASK	device/LPC54018.h	13658;"	d
USART_INTENCLR_DELTARXBRKCLR_SHIFT	device/LPC54018.h	13659;"	d
USART_INTENCLR_FRAMERRCLR	device/LPC54018.h	13666;"	d
USART_INTENCLR_FRAMERRCLR_MASK	device/LPC54018.h	13664;"	d
USART_INTENCLR_FRAMERRCLR_SHIFT	device/LPC54018.h	13665;"	d
USART_INTENCLR_PARITYERRCLR	device/LPC54018.h	13669;"	d
USART_INTENCLR_PARITYERRCLR_MASK	device/LPC54018.h	13667;"	d
USART_INTENCLR_PARITYERRCLR_SHIFT	device/LPC54018.h	13668;"	d
USART_INTENCLR_RXNOISECLR	device/LPC54018.h	13672;"	d
USART_INTENCLR_RXNOISECLR_MASK	device/LPC54018.h	13670;"	d
USART_INTENCLR_RXNOISECLR_SHIFT	device/LPC54018.h	13671;"	d
USART_INTENCLR_STARTCLR	device/LPC54018.h	13663;"	d
USART_INTENCLR_STARTCLR_MASK	device/LPC54018.h	13661;"	d
USART_INTENCLR_STARTCLR_SHIFT	device/LPC54018.h	13662;"	d
USART_INTENCLR_TXDISCLR	device/LPC54018.h	13657;"	d
USART_INTENCLR_TXDISCLR_MASK	device/LPC54018.h	13655;"	d
USART_INTENCLR_TXDISCLR_SHIFT	device/LPC54018.h	13656;"	d
USART_INTENCLR_TXIDLECLR	device/LPC54018.h	13651;"	d
USART_INTENCLR_TXIDLECLR_MASK	device/LPC54018.h	13649;"	d
USART_INTENCLR_TXIDLECLR_SHIFT	device/LPC54018.h	13650;"	d
USART_INTENSET_ABERREN	device/LPC54018.h	13644;"	d
USART_INTENSET_ABERREN_MASK	device/LPC54018.h	13642;"	d
USART_INTENSET_ABERREN_SHIFT	device/LPC54018.h	13643;"	d
USART_INTENSET_DELTACTSEN	device/LPC54018.h	13623;"	d
USART_INTENSET_DELTACTSEN_MASK	device/LPC54018.h	13621;"	d
USART_INTENSET_DELTACTSEN_SHIFT	device/LPC54018.h	13622;"	d
USART_INTENSET_DELTARXBRKEN	device/LPC54018.h	13629;"	d
USART_INTENSET_DELTARXBRKEN_MASK	device/LPC54018.h	13627;"	d
USART_INTENSET_DELTARXBRKEN_SHIFT	device/LPC54018.h	13628;"	d
USART_INTENSET_FRAMERREN	device/LPC54018.h	13635;"	d
USART_INTENSET_FRAMERREN_MASK	device/LPC54018.h	13633;"	d
USART_INTENSET_FRAMERREN_SHIFT	device/LPC54018.h	13634;"	d
USART_INTENSET_PARITYERREN	device/LPC54018.h	13638;"	d
USART_INTENSET_PARITYERREN_MASK	device/LPC54018.h	13636;"	d
USART_INTENSET_PARITYERREN_SHIFT	device/LPC54018.h	13637;"	d
USART_INTENSET_RXNOISEEN	device/LPC54018.h	13641;"	d
USART_INTENSET_RXNOISEEN_MASK	device/LPC54018.h	13639;"	d
USART_INTENSET_RXNOISEEN_SHIFT	device/LPC54018.h	13640;"	d
USART_INTENSET_STARTEN	device/LPC54018.h	13632;"	d
USART_INTENSET_STARTEN_MASK	device/LPC54018.h	13630;"	d
USART_INTENSET_STARTEN_SHIFT	device/LPC54018.h	13631;"	d
USART_INTENSET_TXDISEN	device/LPC54018.h	13626;"	d
USART_INTENSET_TXDISEN_MASK	device/LPC54018.h	13624;"	d
USART_INTENSET_TXDISEN_SHIFT	device/LPC54018.h	13625;"	d
USART_INTENSET_TXIDLEEN	device/LPC54018.h	13620;"	d
USART_INTENSET_TXIDLEEN_MASK	device/LPC54018.h	13618;"	d
USART_INTENSET_TXIDLEEN_SHIFT	device/LPC54018.h	13619;"	d
USART_INTSTAT_ABERRINT	device/LPC54018.h	13713;"	d
USART_INTSTAT_ABERRINT_MASK	device/LPC54018.h	13711;"	d
USART_INTSTAT_ABERRINT_SHIFT	device/LPC54018.h	13712;"	d
USART_INTSTAT_DELTACTS	device/LPC54018.h	13692;"	d
USART_INTSTAT_DELTACTS_MASK	device/LPC54018.h	13690;"	d
USART_INTSTAT_DELTACTS_SHIFT	device/LPC54018.h	13691;"	d
USART_INTSTAT_DELTARXBRK	device/LPC54018.h	13698;"	d
USART_INTSTAT_DELTARXBRK_MASK	device/LPC54018.h	13696;"	d
USART_INTSTAT_DELTARXBRK_SHIFT	device/LPC54018.h	13697;"	d
USART_INTSTAT_FRAMERRINT	device/LPC54018.h	13704;"	d
USART_INTSTAT_FRAMERRINT_MASK	device/LPC54018.h	13702;"	d
USART_INTSTAT_FRAMERRINT_SHIFT	device/LPC54018.h	13703;"	d
USART_INTSTAT_PARITYERRINT	device/LPC54018.h	13707;"	d
USART_INTSTAT_PARITYERRINT_MASK	device/LPC54018.h	13705;"	d
USART_INTSTAT_PARITYERRINT_SHIFT	device/LPC54018.h	13706;"	d
USART_INTSTAT_RXNOISEINT	device/LPC54018.h	13710;"	d
USART_INTSTAT_RXNOISEINT_MASK	device/LPC54018.h	13708;"	d
USART_INTSTAT_RXNOISEINT_SHIFT	device/LPC54018.h	13709;"	d
USART_INTSTAT_START	device/LPC54018.h	13701;"	d
USART_INTSTAT_START_MASK	device/LPC54018.h	13699;"	d
USART_INTSTAT_START_SHIFT	device/LPC54018.h	13700;"	d
USART_INTSTAT_TXDISINT	device/LPC54018.h	13695;"	d
USART_INTSTAT_TXDISINT_MASK	device/LPC54018.h	13693;"	d
USART_INTSTAT_TXDISINT_SHIFT	device/LPC54018.h	13694;"	d
USART_INTSTAT_TXIDLE	device/LPC54018.h	13689;"	d
USART_INTSTAT_TXIDLE_MASK	device/LPC54018.h	13687;"	d
USART_INTSTAT_TXIDLE_SHIFT	device/LPC54018.h	13688;"	d
USART_IRQS	device/LPC54018.h	14030;"	d
USART_Init	drivers/fsl_usart.c	/^status_t USART_Init(USART_Type *base, const usart_config_t *config, uint32_t srcClock_Hz)$/;"	f
USART_OSR_OSRVAL	device/LPC54018.h	13720;"	d
USART_OSR_OSRVAL_MASK	device/LPC54018.h	13718;"	d
USART_OSR_OSRVAL_SHIFT	device/LPC54018.h	13719;"	d
USART_RX_BUFFER_LEN	board/RTE_Device.h	37;"	d
USART_ReadBlocking	drivers/fsl_usart.c	/^status_t USART_ReadBlocking(USART_Type *base, uint8_t *data, size_t length)$/;"	f
USART_ReadByte	drivers/fsl_usart.h	/^static inline uint8_t USART_ReadByte(USART_Type *base)$/;"	f
USART_STAT_ABERR	device/LPC54018.h	13613;"	d
USART_STAT_ABERR_MASK	device/LPC54018.h	13611;"	d
USART_STAT_ABERR_SHIFT	device/LPC54018.h	13612;"	d
USART_STAT_CTS	device/LPC54018.h	13586;"	d
USART_STAT_CTS_MASK	device/LPC54018.h	13584;"	d
USART_STAT_CTS_SHIFT	device/LPC54018.h	13585;"	d
USART_STAT_DELTACTS	device/LPC54018.h	13589;"	d
USART_STAT_DELTACTS_MASK	device/LPC54018.h	13587;"	d
USART_STAT_DELTACTS_SHIFT	device/LPC54018.h	13588;"	d
USART_STAT_DELTARXBRK	device/LPC54018.h	13598;"	d
USART_STAT_DELTARXBRK_MASK	device/LPC54018.h	13596;"	d
USART_STAT_DELTARXBRK_SHIFT	device/LPC54018.h	13597;"	d
USART_STAT_FRAMERRINT	device/LPC54018.h	13604;"	d
USART_STAT_FRAMERRINT_MASK	device/LPC54018.h	13602;"	d
USART_STAT_FRAMERRINT_SHIFT	device/LPC54018.h	13603;"	d
USART_STAT_PARITYERRINT	device/LPC54018.h	13607;"	d
USART_STAT_PARITYERRINT_MASK	device/LPC54018.h	13605;"	d
USART_STAT_PARITYERRINT_SHIFT	device/LPC54018.h	13606;"	d
USART_STAT_RXBRK	device/LPC54018.h	13595;"	d
USART_STAT_RXBRK_MASK	device/LPC54018.h	13593;"	d
USART_STAT_RXBRK_SHIFT	device/LPC54018.h	13594;"	d
USART_STAT_RXIDLE	device/LPC54018.h	13580;"	d
USART_STAT_RXIDLE_MASK	device/LPC54018.h	13578;"	d
USART_STAT_RXIDLE_SHIFT	device/LPC54018.h	13579;"	d
USART_STAT_RXNOISEINT	device/LPC54018.h	13610;"	d
USART_STAT_RXNOISEINT_MASK	device/LPC54018.h	13608;"	d
USART_STAT_RXNOISEINT_SHIFT	device/LPC54018.h	13609;"	d
USART_STAT_START	device/LPC54018.h	13601;"	d
USART_STAT_START_MASK	device/LPC54018.h	13599;"	d
USART_STAT_START_SHIFT	device/LPC54018.h	13600;"	d
USART_STAT_TXDISSTAT	device/LPC54018.h	13592;"	d
USART_STAT_TXDISSTAT_MASK	device/LPC54018.h	13590;"	d
USART_STAT_TXDISSTAT_SHIFT	device/LPC54018.h	13591;"	d
USART_STAT_TXIDLE	device/LPC54018.h	13583;"	d
USART_STAT_TXIDLE_MASK	device/LPC54018.h	13581;"	d
USART_STAT_TXIDLE_SHIFT	device/LPC54018.h	13582;"	d
USART_SetBaudRate	drivers/fsl_usart.c	/^status_t USART_SetBaudRate(USART_Type *base, uint32_t baudrate_Bps, uint32_t srcClock_Hz)$/;"	f
USART_TransferAbortReceive	drivers/fsl_usart.c	/^void USART_TransferAbortReceive(USART_Type *base, usart_handle_t *handle)$/;"	f
USART_TransferAbortSend	drivers/fsl_usart.c	/^void USART_TransferAbortSend(USART_Type *base, usart_handle_t *handle)$/;"	f
USART_TransferCreateHandle	drivers/fsl_usart.c	/^status_t USART_TransferCreateHandle(USART_Type *base,$/;"	f
USART_TransferGetReceiveCount	drivers/fsl_usart.c	/^status_t USART_TransferGetReceiveCount(USART_Type *base, usart_handle_t *handle, uint32_t *count)$/;"	f
USART_TransferGetRxRingBufferLength	drivers/fsl_usart.c	/^size_t USART_TransferGetRxRingBufferLength(usart_handle_t *handle)$/;"	f
USART_TransferGetSendCount	drivers/fsl_usart.c	/^status_t USART_TransferGetSendCount(USART_Type *base, usart_handle_t *handle, uint32_t *count)$/;"	f
USART_TransferHandleIRQ	drivers/fsl_usart.c	/^void USART_TransferHandleIRQ(USART_Type *base, usart_handle_t *handle)$/;"	f
USART_TransferIsRxRingBufferFull	drivers/fsl_usart.c	/^static bool USART_TransferIsRxRingBufferFull(usart_handle_t *handle)$/;"	f	file:
USART_TransferReceiveNonBlocking	drivers/fsl_usart.c	/^status_t USART_TransferReceiveNonBlocking(USART_Type *base,$/;"	f
USART_TransferSendNonBlocking	drivers/fsl_usart.c	/^status_t USART_TransferSendNonBlocking(USART_Type *base, usart_handle_t *handle, usart_transfer_t *xfer)$/;"	f
USART_TransferStartRingBuffer	drivers/fsl_usart.c	/^void USART_TransferStartRingBuffer(USART_Type *base, usart_handle_t *handle, uint8_t *ringBuffer, size_t ringBufferSize)$/;"	f
USART_TransferStopRingBuffer	drivers/fsl_usart.c	/^void USART_TransferStopRingBuffer(USART_Type *base, usart_handle_t *handle)$/;"	f
USART_Type	device/LPC54018.h	/^} USART_Type;$/;"	t	typeref:struct:__anon186
USART_WriteBlocking	drivers/fsl_usart.c	/^void USART_WriteBlocking(USART_Type *base, const uint8_t *data, size_t length)$/;"	f
USART_WriteByte	drivers/fsl_usart.h	/^static inline void USART_WriteByte(USART_Type *base, uint8_t data)$/;"	f
USB0	device/LPC54018.h	14316;"	d
USB0CLKCTRL	device/LPC54018.h	/^  __IO uint32_t USB0CLKCTRL;                       \/**< USB0 clock control, offset: 0x40C *\/$/;"	m	struct:__anon185
USB0CLKDIV	device/LPC54018.h	/^  __IO uint32_t USB0CLKDIV;                        \/**< USB0 clock divider, offset: 0x398 *\/$/;"	m	struct:__anon185
USB0CLKSEL	device/LPC54018.h	/^  __IO uint32_t USB0CLKSEL;                        \/**< USB0 clock source select, offset: 0x2A8 *\/$/;"	m	struct:__anon185
USB0CLKSTAT	device/LPC54018.h	/^  __IO uint32_t USB0CLKSTAT;                       \/**< USB0 clock status, offset: 0x410 *\/$/;"	m	struct:__anon185
USB0D_RST	drivers/fsl_reset.h	199;"	d
USB0HMR_RST	drivers/fsl_reset.h	203;"	d
USB0HSL_RST	drivers/fsl_reset.h	207;"	d
USB0_BASE	device/LPC54018.h	14314;"	d
USB0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void USB0_IRQHandler(void)$/;"	f
USB0_IRQHandler	vcom/composite.c	/^void USB0_IRQHandler(void)$/;"	f
USB0_IRQn	device/LPC54018.h	/^  USB0_IRQn                    = 28,               \/**< USB device *\/$/;"	e	enum:IRQn
USB0_NEEDCLK_IRQHandler	startup/startup_lpc54018.c	/^WEAK void USB0_NEEDCLK_IRQHandler(void)$/;"	f
USB0_NEEDCLK_IRQn	device/LPC54018.h	/^  USB0_NEEDCLK_IRQn            = 27,               \/**< USB Activity Wake-up Interrupt *\/$/;"	e	enum:IRQn
USB1CLKCTRL	device/LPC54018.h	/^  __IO uint32_t USB1CLKCTRL;                       \/**< USB1 clock control, offset: 0x424 *\/$/;"	m	struct:__anon185
USB1CLKDIV	device/LPC54018.h	/^  __IO uint32_t USB1CLKDIV;                        \/**< USB1 clock divider, offset: 0x39C *\/$/;"	m	struct:__anon185
USB1CLKSEL	device/LPC54018.h	/^  __IO uint32_t USB1CLKSEL;                        \/**< USB1 clock source select, offset: 0x2AC *\/$/;"	m	struct:__anon185
USB1CLKSTAT	device/LPC54018.h	/^  __IO uint32_t USB1CLKSTAT;                       \/**< USB1 clock status, offset: 0x428 *\/$/;"	m	struct:__anon185
USB1D_RST	drivers/fsl_reset.h	215;"	d
USB1H_RST	drivers/fsl_reset.h	211;"	d
USB1RAM_RST	drivers/fsl_reset.h	219;"	d
USB1_IRQHandler	startup/startup_lpc54018.c	/^WEAK void USB1_IRQHandler(void)$/;"	f
USB1_IRQHandler	vcom/composite.c	/^void USB1_IRQHandler(void)$/;"	f
USB1_IRQn	device/LPC54018.h	/^  USB1_IRQn                    = 47,               \/**< USB1 interrupt *\/$/;"	e	enum:IRQn
USB1_NEEDCLK_IRQHandler	startup/startup_lpc54018.c	/^WEAK void USB1_NEEDCLK_IRQHandler(void)$/;"	f
USB1_NEEDCLK_IRQn	device/LPC54018.h	/^  USB1_NEEDCLK_IRQn            = 48,               \/**< USB1 activity *\/$/;"	e	enum:IRQn
USBAcmRecv	vcom/virtual_com.c	/^int USBAcmRecv(uint32_t Instance, uint8_t *buffer, uint32_t size)$/;"	f
USBAcmSend	vcom/virtual_com.c	/^int  USBAcmSend(uint32_t Instance, uint8_t *buffer, uint32_t size)$/;"	f
USBCFG_AUDIO_CLASS_2_0	usb/device/class/usb_device_audio.h	23;"	d
USBCMD	device/LPC54018.h	/^  __IO uint32_t USBCMD;                            \/**< USB Command register, offset: 0x20 *\/$/;"	m	struct:__anon190
USBD_CLOCKS	drivers/fsl_clock.h	272;"	d
USBFSH	device/LPC54018.h	14736;"	d
USBFSH_BASE	device/LPC54018.h	14734;"	d
USBFSH_BASE_ADDRS	device/LPC54018.h	14738;"	d
USBFSH_BASE_PTRS	device/LPC54018.h	14740;"	d
USBFSH_HCBULKCURRENTED_BCED	device/LPC54018.h	14562;"	d
USBFSH_HCBULKCURRENTED_BCED_MASK	device/LPC54018.h	14560;"	d
USBFSH_HCBULKCURRENTED_BCED_SHIFT	device/LPC54018.h	14561;"	d
USBFSH_HCBULKHEADED_BHED	device/LPC54018.h	14555;"	d
USBFSH_HCBULKHEADED_BHED_MASK	device/LPC54018.h	14553;"	d
USBFSH_HCBULKHEADED_BHED_SHIFT	device/LPC54018.h	14554;"	d
USBFSH_HCCOMMANDSTATUS_BLF	device/LPC54018.h	14424;"	d
USBFSH_HCCOMMANDSTATUS_BLF_MASK	device/LPC54018.h	14422;"	d
USBFSH_HCCOMMANDSTATUS_BLF_SHIFT	device/LPC54018.h	14423;"	d
USBFSH_HCCOMMANDSTATUS_CLF	device/LPC54018.h	14421;"	d
USBFSH_HCCOMMANDSTATUS_CLF_MASK	device/LPC54018.h	14419;"	d
USBFSH_HCCOMMANDSTATUS_CLF_SHIFT	device/LPC54018.h	14420;"	d
USBFSH_HCCOMMANDSTATUS_HCR	device/LPC54018.h	14418;"	d
USBFSH_HCCOMMANDSTATUS_HCR_MASK	device/LPC54018.h	14416;"	d
USBFSH_HCCOMMANDSTATUS_HCR_SHIFT	device/LPC54018.h	14417;"	d
USBFSH_HCCOMMANDSTATUS_OCR	device/LPC54018.h	14427;"	d
USBFSH_HCCOMMANDSTATUS_OCR_MASK	device/LPC54018.h	14425;"	d
USBFSH_HCCOMMANDSTATUS_OCR_SHIFT	device/LPC54018.h	14426;"	d
USBFSH_HCCOMMANDSTATUS_SOC	device/LPC54018.h	14430;"	d
USBFSH_HCCOMMANDSTATUS_SOC_MASK	device/LPC54018.h	14428;"	d
USBFSH_HCCOMMANDSTATUS_SOC_SHIFT	device/LPC54018.h	14429;"	d
USBFSH_HCCONTROLCURRENTED_CCED	device/LPC54018.h	14548;"	d
USBFSH_HCCONTROLCURRENTED_CCED_MASK	device/LPC54018.h	14546;"	d
USBFSH_HCCONTROLCURRENTED_CCED_SHIFT	device/LPC54018.h	14547;"	d
USBFSH_HCCONTROLHEADED_CHED	device/LPC54018.h	14541;"	d
USBFSH_HCCONTROLHEADED_CHED_MASK	device/LPC54018.h	14539;"	d
USBFSH_HCCONTROLHEADED_CHED_SHIFT	device/LPC54018.h	14540;"	d
USBFSH_HCCONTROL_BLE	device/LPC54018.h	14399;"	d
USBFSH_HCCONTROL_BLE_MASK	device/LPC54018.h	14397;"	d
USBFSH_HCCONTROL_BLE_SHIFT	device/LPC54018.h	14398;"	d
USBFSH_HCCONTROL_CBSR	device/LPC54018.h	14387;"	d
USBFSH_HCCONTROL_CBSR_MASK	device/LPC54018.h	14385;"	d
USBFSH_HCCONTROL_CBSR_SHIFT	device/LPC54018.h	14386;"	d
USBFSH_HCCONTROL_CLE	device/LPC54018.h	14396;"	d
USBFSH_HCCONTROL_CLE_MASK	device/LPC54018.h	14394;"	d
USBFSH_HCCONTROL_CLE_SHIFT	device/LPC54018.h	14395;"	d
USBFSH_HCCONTROL_HCFS	device/LPC54018.h	14402;"	d
USBFSH_HCCONTROL_HCFS_MASK	device/LPC54018.h	14400;"	d
USBFSH_HCCONTROL_HCFS_SHIFT	device/LPC54018.h	14401;"	d
USBFSH_HCCONTROL_IE	device/LPC54018.h	14393;"	d
USBFSH_HCCONTROL_IE_MASK	device/LPC54018.h	14391;"	d
USBFSH_HCCONTROL_IE_SHIFT	device/LPC54018.h	14392;"	d
USBFSH_HCCONTROL_IR	device/LPC54018.h	14405;"	d
USBFSH_HCCONTROL_IR_MASK	device/LPC54018.h	14403;"	d
USBFSH_HCCONTROL_IR_SHIFT	device/LPC54018.h	14404;"	d
USBFSH_HCCONTROL_PLE	device/LPC54018.h	14390;"	d
USBFSH_HCCONTROL_PLE_MASK	device/LPC54018.h	14388;"	d
USBFSH_HCCONTROL_PLE_SHIFT	device/LPC54018.h	14389;"	d
USBFSH_HCCONTROL_RWC	device/LPC54018.h	14408;"	d
USBFSH_HCCONTROL_RWC_MASK	device/LPC54018.h	14406;"	d
USBFSH_HCCONTROL_RWC_SHIFT	device/LPC54018.h	14407;"	d
USBFSH_HCCONTROL_RWE	device/LPC54018.h	14411;"	d
USBFSH_HCCONTROL_RWE_MASK	device/LPC54018.h	14409;"	d
USBFSH_HCCONTROL_RWE_SHIFT	device/LPC54018.h	14410;"	d
USBFSH_HCDONEHEAD_DH	device/LPC54018.h	14569;"	d
USBFSH_HCDONEHEAD_DH_MASK	device/LPC54018.h	14567;"	d
USBFSH_HCDONEHEAD_DH_SHIFT	device/LPC54018.h	14568;"	d
USBFSH_HCFMINTERVAL_FI	device/LPC54018.h	14576;"	d
USBFSH_HCFMINTERVAL_FIT	device/LPC54018.h	14582;"	d
USBFSH_HCFMINTERVAL_FIT_MASK	device/LPC54018.h	14580;"	d
USBFSH_HCFMINTERVAL_FIT_SHIFT	device/LPC54018.h	14581;"	d
USBFSH_HCFMINTERVAL_FI_MASK	device/LPC54018.h	14574;"	d
USBFSH_HCFMINTERVAL_FI_SHIFT	device/LPC54018.h	14575;"	d
USBFSH_HCFMINTERVAL_FSMPS	device/LPC54018.h	14579;"	d
USBFSH_HCFMINTERVAL_FSMPS_MASK	device/LPC54018.h	14577;"	d
USBFSH_HCFMINTERVAL_FSMPS_SHIFT	device/LPC54018.h	14578;"	d
USBFSH_HCFMNUMBER_FN	device/LPC54018.h	14599;"	d
USBFSH_HCFMNUMBER_FN_MASK	device/LPC54018.h	14597;"	d
USBFSH_HCFMNUMBER_FN_SHIFT	device/LPC54018.h	14598;"	d
USBFSH_HCFMREMAINING_FR	device/LPC54018.h	14589;"	d
USBFSH_HCFMREMAINING_FRT	device/LPC54018.h	14592;"	d
USBFSH_HCFMREMAINING_FRT_MASK	device/LPC54018.h	14590;"	d
USBFSH_HCFMREMAINING_FRT_SHIFT	device/LPC54018.h	14591;"	d
USBFSH_HCFMREMAINING_FR_MASK	device/LPC54018.h	14587;"	d
USBFSH_HCFMREMAINING_FR_SHIFT	device/LPC54018.h	14588;"	d
USBFSH_HCHCCA_HCCA	device/LPC54018.h	14527;"	d
USBFSH_HCHCCA_HCCA_MASK	device/LPC54018.h	14525;"	d
USBFSH_HCHCCA_HCCA_SHIFT	device/LPC54018.h	14526;"	d
USBFSH_HCINTERRUPTDISABLE_FNO	device/LPC54018.h	14511;"	d
USBFSH_HCINTERRUPTDISABLE_FNO_MASK	device/LPC54018.h	14509;"	d
USBFSH_HCINTERRUPTDISABLE_FNO_SHIFT	device/LPC54018.h	14510;"	d
USBFSH_HCINTERRUPTDISABLE_MIE	device/LPC54018.h	14520;"	d
USBFSH_HCINTERRUPTDISABLE_MIE_MASK	device/LPC54018.h	14518;"	d
USBFSH_HCINTERRUPTDISABLE_MIE_SHIFT	device/LPC54018.h	14519;"	d
USBFSH_HCINTERRUPTDISABLE_OC	device/LPC54018.h	14517;"	d
USBFSH_HCINTERRUPTDISABLE_OC_MASK	device/LPC54018.h	14515;"	d
USBFSH_HCINTERRUPTDISABLE_OC_SHIFT	device/LPC54018.h	14516;"	d
USBFSH_HCINTERRUPTDISABLE_RD	device/LPC54018.h	14505;"	d
USBFSH_HCINTERRUPTDISABLE_RD_MASK	device/LPC54018.h	14503;"	d
USBFSH_HCINTERRUPTDISABLE_RD_SHIFT	device/LPC54018.h	14504;"	d
USBFSH_HCINTERRUPTDISABLE_RHSC	device/LPC54018.h	14514;"	d
USBFSH_HCINTERRUPTDISABLE_RHSC_MASK	device/LPC54018.h	14512;"	d
USBFSH_HCINTERRUPTDISABLE_RHSC_SHIFT	device/LPC54018.h	14513;"	d
USBFSH_HCINTERRUPTDISABLE_SF	device/LPC54018.h	14502;"	d
USBFSH_HCINTERRUPTDISABLE_SF_MASK	device/LPC54018.h	14500;"	d
USBFSH_HCINTERRUPTDISABLE_SF_SHIFT	device/LPC54018.h	14501;"	d
USBFSH_HCINTERRUPTDISABLE_SO	device/LPC54018.h	14496;"	d
USBFSH_HCINTERRUPTDISABLE_SO_MASK	device/LPC54018.h	14494;"	d
USBFSH_HCINTERRUPTDISABLE_SO_SHIFT	device/LPC54018.h	14495;"	d
USBFSH_HCINTERRUPTDISABLE_UE	device/LPC54018.h	14508;"	d
USBFSH_HCINTERRUPTDISABLE_UE_MASK	device/LPC54018.h	14506;"	d
USBFSH_HCINTERRUPTDISABLE_UE_SHIFT	device/LPC54018.h	14507;"	d
USBFSH_HCINTERRUPTDISABLE_WDH	device/LPC54018.h	14499;"	d
USBFSH_HCINTERRUPTDISABLE_WDH_MASK	device/LPC54018.h	14497;"	d
USBFSH_HCINTERRUPTDISABLE_WDH_SHIFT	device/LPC54018.h	14498;"	d
USBFSH_HCINTERRUPTENABLE_FNO	device/LPC54018.h	14480;"	d
USBFSH_HCINTERRUPTENABLE_FNO_MASK	device/LPC54018.h	14478;"	d
USBFSH_HCINTERRUPTENABLE_FNO_SHIFT	device/LPC54018.h	14479;"	d
USBFSH_HCINTERRUPTENABLE_MIE	device/LPC54018.h	14489;"	d
USBFSH_HCINTERRUPTENABLE_MIE_MASK	device/LPC54018.h	14487;"	d
USBFSH_HCINTERRUPTENABLE_MIE_SHIFT	device/LPC54018.h	14488;"	d
USBFSH_HCINTERRUPTENABLE_OC	device/LPC54018.h	14486;"	d
USBFSH_HCINTERRUPTENABLE_OC_MASK	device/LPC54018.h	14484;"	d
USBFSH_HCINTERRUPTENABLE_OC_SHIFT	device/LPC54018.h	14485;"	d
USBFSH_HCINTERRUPTENABLE_RD	device/LPC54018.h	14474;"	d
USBFSH_HCINTERRUPTENABLE_RD_MASK	device/LPC54018.h	14472;"	d
USBFSH_HCINTERRUPTENABLE_RD_SHIFT	device/LPC54018.h	14473;"	d
USBFSH_HCINTERRUPTENABLE_RHSC	device/LPC54018.h	14483;"	d
USBFSH_HCINTERRUPTENABLE_RHSC_MASK	device/LPC54018.h	14481;"	d
USBFSH_HCINTERRUPTENABLE_RHSC_SHIFT	device/LPC54018.h	14482;"	d
USBFSH_HCINTERRUPTENABLE_SF	device/LPC54018.h	14471;"	d
USBFSH_HCINTERRUPTENABLE_SF_MASK	device/LPC54018.h	14469;"	d
USBFSH_HCINTERRUPTENABLE_SF_SHIFT	device/LPC54018.h	14470;"	d
USBFSH_HCINTERRUPTENABLE_SO	device/LPC54018.h	14465;"	d
USBFSH_HCINTERRUPTENABLE_SO_MASK	device/LPC54018.h	14463;"	d
USBFSH_HCINTERRUPTENABLE_SO_SHIFT	device/LPC54018.h	14464;"	d
USBFSH_HCINTERRUPTENABLE_UE	device/LPC54018.h	14477;"	d
USBFSH_HCINTERRUPTENABLE_UE_MASK	device/LPC54018.h	14475;"	d
USBFSH_HCINTERRUPTENABLE_UE_SHIFT	device/LPC54018.h	14476;"	d
USBFSH_HCINTERRUPTENABLE_WDH	device/LPC54018.h	14468;"	d
USBFSH_HCINTERRUPTENABLE_WDH_MASK	device/LPC54018.h	14466;"	d
USBFSH_HCINTERRUPTENABLE_WDH_SHIFT	device/LPC54018.h	14467;"	d
USBFSH_HCINTERRUPTSTATUS_FNO	device/LPC54018.h	14452;"	d
USBFSH_HCINTERRUPTSTATUS_FNO_MASK	device/LPC54018.h	14450;"	d
USBFSH_HCINTERRUPTSTATUS_FNO_SHIFT	device/LPC54018.h	14451;"	d
USBFSH_HCINTERRUPTSTATUS_OC	device/LPC54018.h	14458;"	d
USBFSH_HCINTERRUPTSTATUS_OC_MASK	device/LPC54018.h	14456;"	d
USBFSH_HCINTERRUPTSTATUS_OC_SHIFT	device/LPC54018.h	14457;"	d
USBFSH_HCINTERRUPTSTATUS_RD	device/LPC54018.h	14446;"	d
USBFSH_HCINTERRUPTSTATUS_RD_MASK	device/LPC54018.h	14444;"	d
USBFSH_HCINTERRUPTSTATUS_RD_SHIFT	device/LPC54018.h	14445;"	d
USBFSH_HCINTERRUPTSTATUS_RHSC	device/LPC54018.h	14455;"	d
USBFSH_HCINTERRUPTSTATUS_RHSC_MASK	device/LPC54018.h	14453;"	d
USBFSH_HCINTERRUPTSTATUS_RHSC_SHIFT	device/LPC54018.h	14454;"	d
USBFSH_HCINTERRUPTSTATUS_SF	device/LPC54018.h	14443;"	d
USBFSH_HCINTERRUPTSTATUS_SF_MASK	device/LPC54018.h	14441;"	d
USBFSH_HCINTERRUPTSTATUS_SF_SHIFT	device/LPC54018.h	14442;"	d
USBFSH_HCINTERRUPTSTATUS_SO	device/LPC54018.h	14437;"	d
USBFSH_HCINTERRUPTSTATUS_SO_MASK	device/LPC54018.h	14435;"	d
USBFSH_HCINTERRUPTSTATUS_SO_SHIFT	device/LPC54018.h	14436;"	d
USBFSH_HCINTERRUPTSTATUS_UE	device/LPC54018.h	14449;"	d
USBFSH_HCINTERRUPTSTATUS_UE_MASK	device/LPC54018.h	14447;"	d
USBFSH_HCINTERRUPTSTATUS_UE_SHIFT	device/LPC54018.h	14448;"	d
USBFSH_HCINTERRUPTSTATUS_WDH	device/LPC54018.h	14440;"	d
USBFSH_HCINTERRUPTSTATUS_WDH_MASK	device/LPC54018.h	14438;"	d
USBFSH_HCINTERRUPTSTATUS_WDH_SHIFT	device/LPC54018.h	14439;"	d
USBFSH_HCLSTHRESHOLD_LST	device/LPC54018.h	14613;"	d
USBFSH_HCLSTHRESHOLD_LST_MASK	device/LPC54018.h	14611;"	d
USBFSH_HCLSTHRESHOLD_LST_SHIFT	device/LPC54018.h	14612;"	d
USBFSH_HCPERIODCURRENTED_PCED	device/LPC54018.h	14534;"	d
USBFSH_HCPERIODCURRENTED_PCED_MASK	device/LPC54018.h	14532;"	d
USBFSH_HCPERIODCURRENTED_PCED_SHIFT	device/LPC54018.h	14533;"	d
USBFSH_HCPERIODICSTART_PS	device/LPC54018.h	14606;"	d
USBFSH_HCPERIODICSTART_PS_MASK	device/LPC54018.h	14604;"	d
USBFSH_HCPERIODICSTART_PS_SHIFT	device/LPC54018.h	14605;"	d
USBFSH_HCREVISION_REV	device/LPC54018.h	14380;"	d
USBFSH_HCREVISION_REV_MASK	device/LPC54018.h	14378;"	d
USBFSH_HCREVISION_REV_SHIFT	device/LPC54018.h	14379;"	d
USBFSH_HCRHDESCRIPTORA_DT	device/LPC54018.h	14629;"	d
USBFSH_HCRHDESCRIPTORA_DT_MASK	device/LPC54018.h	14627;"	d
USBFSH_HCRHDESCRIPTORA_DT_SHIFT	device/LPC54018.h	14628;"	d
USBFSH_HCRHDESCRIPTORA_NDP	device/LPC54018.h	14620;"	d
USBFSH_HCRHDESCRIPTORA_NDP_MASK	device/LPC54018.h	14618;"	d
USBFSH_HCRHDESCRIPTORA_NDP_SHIFT	device/LPC54018.h	14619;"	d
USBFSH_HCRHDESCRIPTORA_NOCP	device/LPC54018.h	14635;"	d
USBFSH_HCRHDESCRIPTORA_NOCP_MASK	device/LPC54018.h	14633;"	d
USBFSH_HCRHDESCRIPTORA_NOCP_SHIFT	device/LPC54018.h	14634;"	d
USBFSH_HCRHDESCRIPTORA_NPS	device/LPC54018.h	14626;"	d
USBFSH_HCRHDESCRIPTORA_NPS_MASK	device/LPC54018.h	14624;"	d
USBFSH_HCRHDESCRIPTORA_NPS_SHIFT	device/LPC54018.h	14625;"	d
USBFSH_HCRHDESCRIPTORA_OCPM	device/LPC54018.h	14632;"	d
USBFSH_HCRHDESCRIPTORA_OCPM_MASK	device/LPC54018.h	14630;"	d
USBFSH_HCRHDESCRIPTORA_OCPM_SHIFT	device/LPC54018.h	14631;"	d
USBFSH_HCRHDESCRIPTORA_POTPGT	device/LPC54018.h	14638;"	d
USBFSH_HCRHDESCRIPTORA_POTPGT_MASK	device/LPC54018.h	14636;"	d
USBFSH_HCRHDESCRIPTORA_POTPGT_SHIFT	device/LPC54018.h	14637;"	d
USBFSH_HCRHDESCRIPTORA_PSM	device/LPC54018.h	14623;"	d
USBFSH_HCRHDESCRIPTORA_PSM_MASK	device/LPC54018.h	14621;"	d
USBFSH_HCRHDESCRIPTORA_PSM_SHIFT	device/LPC54018.h	14622;"	d
USBFSH_HCRHDESCRIPTORB_DR	device/LPC54018.h	14645;"	d
USBFSH_HCRHDESCRIPTORB_DR_MASK	device/LPC54018.h	14643;"	d
USBFSH_HCRHDESCRIPTORB_DR_SHIFT	device/LPC54018.h	14644;"	d
USBFSH_HCRHDESCRIPTORB_PPCM	device/LPC54018.h	14648;"	d
USBFSH_HCRHDESCRIPTORB_PPCM_MASK	device/LPC54018.h	14646;"	d
USBFSH_HCRHDESCRIPTORB_PPCM_SHIFT	device/LPC54018.h	14647;"	d
USBFSH_HCRHPORTSTATUS_CCS	device/LPC54018.h	14677;"	d
USBFSH_HCRHPORTSTATUS_CCS_MASK	device/LPC54018.h	14675;"	d
USBFSH_HCRHPORTSTATUS_CCS_SHIFT	device/LPC54018.h	14676;"	d
USBFSH_HCRHPORTSTATUS_CSC	device/LPC54018.h	14698;"	d
USBFSH_HCRHPORTSTATUS_CSC_MASK	device/LPC54018.h	14696;"	d
USBFSH_HCRHPORTSTATUS_CSC_SHIFT	device/LPC54018.h	14697;"	d
USBFSH_HCRHPORTSTATUS_LSDA	device/LPC54018.h	14695;"	d
USBFSH_HCRHPORTSTATUS_LSDA_MASK	device/LPC54018.h	14693;"	d
USBFSH_HCRHPORTSTATUS_LSDA_SHIFT	device/LPC54018.h	14694;"	d
USBFSH_HCRHPORTSTATUS_OCIC	device/LPC54018.h	14707;"	d
USBFSH_HCRHPORTSTATUS_OCIC_MASK	device/LPC54018.h	14705;"	d
USBFSH_HCRHPORTSTATUS_OCIC_SHIFT	device/LPC54018.h	14706;"	d
USBFSH_HCRHPORTSTATUS_PES	device/LPC54018.h	14680;"	d
USBFSH_HCRHPORTSTATUS_PESC	device/LPC54018.h	14701;"	d
USBFSH_HCRHPORTSTATUS_PESC_MASK	device/LPC54018.h	14699;"	d
USBFSH_HCRHPORTSTATUS_PESC_SHIFT	device/LPC54018.h	14700;"	d
USBFSH_HCRHPORTSTATUS_PES_MASK	device/LPC54018.h	14678;"	d
USBFSH_HCRHPORTSTATUS_PES_SHIFT	device/LPC54018.h	14679;"	d
USBFSH_HCRHPORTSTATUS_POCI	device/LPC54018.h	14686;"	d
USBFSH_HCRHPORTSTATUS_POCI_MASK	device/LPC54018.h	14684;"	d
USBFSH_HCRHPORTSTATUS_POCI_SHIFT	device/LPC54018.h	14685;"	d
USBFSH_HCRHPORTSTATUS_PPS	device/LPC54018.h	14692;"	d
USBFSH_HCRHPORTSTATUS_PPS_MASK	device/LPC54018.h	14690;"	d
USBFSH_HCRHPORTSTATUS_PPS_SHIFT	device/LPC54018.h	14691;"	d
USBFSH_HCRHPORTSTATUS_PRS	device/LPC54018.h	14689;"	d
USBFSH_HCRHPORTSTATUS_PRSC	device/LPC54018.h	14710;"	d
USBFSH_HCRHPORTSTATUS_PRSC_MASK	device/LPC54018.h	14708;"	d
USBFSH_HCRHPORTSTATUS_PRSC_SHIFT	device/LPC54018.h	14709;"	d
USBFSH_HCRHPORTSTATUS_PRS_MASK	device/LPC54018.h	14687;"	d
USBFSH_HCRHPORTSTATUS_PRS_SHIFT	device/LPC54018.h	14688;"	d
USBFSH_HCRHPORTSTATUS_PSS	device/LPC54018.h	14683;"	d
USBFSH_HCRHPORTSTATUS_PSSC	device/LPC54018.h	14704;"	d
USBFSH_HCRHPORTSTATUS_PSSC_MASK	device/LPC54018.h	14702;"	d
USBFSH_HCRHPORTSTATUS_PSSC_SHIFT	device/LPC54018.h	14703;"	d
USBFSH_HCRHPORTSTATUS_PSS_MASK	device/LPC54018.h	14681;"	d
USBFSH_HCRHPORTSTATUS_PSS_SHIFT	device/LPC54018.h	14682;"	d
USBFSH_HCRHSTATUS_CRWE	device/LPC54018.h	14670;"	d
USBFSH_HCRHSTATUS_CRWE_MASK	device/LPC54018.h	14668;"	d
USBFSH_HCRHSTATUS_CRWE_SHIFT	device/LPC54018.h	14669;"	d
USBFSH_HCRHSTATUS_DRWE	device/LPC54018.h	14661;"	d
USBFSH_HCRHSTATUS_DRWE_MASK	device/LPC54018.h	14659;"	d
USBFSH_HCRHSTATUS_DRWE_SHIFT	device/LPC54018.h	14660;"	d
USBFSH_HCRHSTATUS_LPS	device/LPC54018.h	14655;"	d
USBFSH_HCRHSTATUS_LPSC	device/LPC54018.h	14664;"	d
USBFSH_HCRHSTATUS_LPSC_MASK	device/LPC54018.h	14662;"	d
USBFSH_HCRHSTATUS_LPSC_SHIFT	device/LPC54018.h	14663;"	d
USBFSH_HCRHSTATUS_LPS_MASK	device/LPC54018.h	14653;"	d
USBFSH_HCRHSTATUS_LPS_SHIFT	device/LPC54018.h	14654;"	d
USBFSH_HCRHSTATUS_OCI	device/LPC54018.h	14658;"	d
USBFSH_HCRHSTATUS_OCIC	device/LPC54018.h	14667;"	d
USBFSH_HCRHSTATUS_OCIC_MASK	device/LPC54018.h	14665;"	d
USBFSH_HCRHSTATUS_OCIC_SHIFT	device/LPC54018.h	14666;"	d
USBFSH_HCRHSTATUS_OCI_MASK	device/LPC54018.h	14656;"	d
USBFSH_HCRHSTATUS_OCI_SHIFT	device/LPC54018.h	14657;"	d
USBFSH_IRQS	device/LPC54018.h	14742;"	d
USBFSH_NEEDCLK_IRQS	device/LPC54018.h	14743;"	d
USBFSH_PORTMODE_DEV_ENABLE	device/LPC54018.h	14723;"	d
USBFSH_PORTMODE_DEV_ENABLE_MASK	device/LPC54018.h	14721;"	d
USBFSH_PORTMODE_DEV_ENABLE_SHIFT	device/LPC54018.h	14722;"	d
USBFSH_PORTMODE_ID	device/LPC54018.h	14717;"	d
USBFSH_PORTMODE_ID_EN	device/LPC54018.h	14720;"	d
USBFSH_PORTMODE_ID_EN_MASK	device/LPC54018.h	14718;"	d
USBFSH_PORTMODE_ID_EN_SHIFT	device/LPC54018.h	14719;"	d
USBFSH_PORTMODE_ID_MASK	device/LPC54018.h	14715;"	d
USBFSH_PORTMODE_ID_SHIFT	device/LPC54018.h	14716;"	d
USBFSH_Type	device/LPC54018.h	/^} USBFSH_Type;$/;"	t	typeref:struct:__anon188
USBHMR0_CLOCKS	drivers/fsl_clock.h	252;"	d
USBHSD	device/LPC54018.h	15005;"	d
USBHSD_BASE	device/LPC54018.h	15003;"	d
USBHSD_BASE_ADDRS	device/LPC54018.h	15007;"	d
USBHSD_BASE_PTRS	device/LPC54018.h	15009;"	d
USBHSD_DATABUFSTART_DA_BUF	device/LPC54018.h	14879;"	d
USBHSD_DATABUFSTART_DA_BUF_MASK	device/LPC54018.h	14877;"	d
USBHSD_DATABUFSTART_DA_BUF_SHIFT	device/LPC54018.h	14878;"	d
USBHSD_DEVCMDSTAT_DCON	device/LPC54018.h	14819;"	d
USBHSD_DEVCMDSTAT_DCON_C	device/LPC54018.h	14834;"	d
USBHSD_DEVCMDSTAT_DCON_C_MASK	device/LPC54018.h	14832;"	d
USBHSD_DEVCMDSTAT_DCON_C_SHIFT	device/LPC54018.h	14833;"	d
USBHSD_DEVCMDSTAT_DCON_MASK	device/LPC54018.h	14817;"	d
USBHSD_DEVCMDSTAT_DCON_SHIFT	device/LPC54018.h	14818;"	d
USBHSD_DEVCMDSTAT_DEV_ADDR	device/LPC54018.h	14789;"	d
USBHSD_DEVCMDSTAT_DEV_ADDR_MASK	device/LPC54018.h	14787;"	d
USBHSD_DEVCMDSTAT_DEV_ADDR_SHIFT	device/LPC54018.h	14788;"	d
USBHSD_DEVCMDSTAT_DEV_EN	device/LPC54018.h	14792;"	d
USBHSD_DEVCMDSTAT_DEV_EN_MASK	device/LPC54018.h	14790;"	d
USBHSD_DEVCMDSTAT_DEV_EN_SHIFT	device/LPC54018.h	14791;"	d
USBHSD_DEVCMDSTAT_DRES_C	device/LPC54018.h	14840;"	d
USBHSD_DEVCMDSTAT_DRES_C_MASK	device/LPC54018.h	14838;"	d
USBHSD_DEVCMDSTAT_DRES_C_SHIFT	device/LPC54018.h	14839;"	d
USBHSD_DEVCMDSTAT_DSUS	device/LPC54018.h	14822;"	d
USBHSD_DEVCMDSTAT_DSUS_C	device/LPC54018.h	14837;"	d
USBHSD_DEVCMDSTAT_DSUS_C_MASK	device/LPC54018.h	14835;"	d
USBHSD_DEVCMDSTAT_DSUS_C_SHIFT	device/LPC54018.h	14836;"	d
USBHSD_DEVCMDSTAT_DSUS_MASK	device/LPC54018.h	14820;"	d
USBHSD_DEVCMDSTAT_DSUS_SHIFT	device/LPC54018.h	14821;"	d
USBHSD_DEVCMDSTAT_FORCE_NEEDCLK	device/LPC54018.h	14798;"	d
USBHSD_DEVCMDSTAT_FORCE_NEEDCLK_MASK	device/LPC54018.h	14796;"	d
USBHSD_DEVCMDSTAT_FORCE_NEEDCLK_SHIFT	device/LPC54018.h	14797;"	d
USBHSD_DEVCMDSTAT_FORCE_VBUS	device/LPC54018.h	14801;"	d
USBHSD_DEVCMDSTAT_FORCE_VBUS_MASK	device/LPC54018.h	14799;"	d
USBHSD_DEVCMDSTAT_FORCE_VBUS_SHIFT	device/LPC54018.h	14800;"	d
USBHSD_DEVCMDSTAT_INTONNAK_AI	device/LPC54018.h	14810;"	d
USBHSD_DEVCMDSTAT_INTONNAK_AI_MASK	device/LPC54018.h	14808;"	d
USBHSD_DEVCMDSTAT_INTONNAK_AI_SHIFT	device/LPC54018.h	14809;"	d
USBHSD_DEVCMDSTAT_INTONNAK_AO	device/LPC54018.h	14807;"	d
USBHSD_DEVCMDSTAT_INTONNAK_AO_MASK	device/LPC54018.h	14805;"	d
USBHSD_DEVCMDSTAT_INTONNAK_AO_SHIFT	device/LPC54018.h	14806;"	d
USBHSD_DEVCMDSTAT_INTONNAK_CI	device/LPC54018.h	14816;"	d
USBHSD_DEVCMDSTAT_INTONNAK_CI_MASK	device/LPC54018.h	14814;"	d
USBHSD_DEVCMDSTAT_INTONNAK_CI_SHIFT	device/LPC54018.h	14815;"	d
USBHSD_DEVCMDSTAT_INTONNAK_CO	device/LPC54018.h	14813;"	d
USBHSD_DEVCMDSTAT_INTONNAK_CO_MASK	device/LPC54018.h	14811;"	d
USBHSD_DEVCMDSTAT_INTONNAK_CO_SHIFT	device/LPC54018.h	14812;"	d
USBHSD_DEVCMDSTAT_LPM_REWP	device/LPC54018.h	14828;"	d
USBHSD_DEVCMDSTAT_LPM_REWP_MASK	device/LPC54018.h	14826;"	d
USBHSD_DEVCMDSTAT_LPM_REWP_SHIFT	device/LPC54018.h	14827;"	d
USBHSD_DEVCMDSTAT_LPM_SUP	device/LPC54018.h	14804;"	d
USBHSD_DEVCMDSTAT_LPM_SUP_MASK	device/LPC54018.h	14802;"	d
USBHSD_DEVCMDSTAT_LPM_SUP_SHIFT	device/LPC54018.h	14803;"	d
USBHSD_DEVCMDSTAT_LPM_SUS	device/LPC54018.h	14825;"	d
USBHSD_DEVCMDSTAT_LPM_SUS_MASK	device/LPC54018.h	14823;"	d
USBHSD_DEVCMDSTAT_LPM_SUS_SHIFT	device/LPC54018.h	14824;"	d
USBHSD_DEVCMDSTAT_PHY_TEST_MODE	device/LPC54018.h	14846;"	d
USBHSD_DEVCMDSTAT_PHY_TEST_MODE_MASK	device/LPC54018.h	14844;"	d
USBHSD_DEVCMDSTAT_PHY_TEST_MODE_SHIFT	device/LPC54018.h	14845;"	d
USBHSD_DEVCMDSTAT_SETUP	device/LPC54018.h	14795;"	d
USBHSD_DEVCMDSTAT_SETUP_MASK	device/LPC54018.h	14793;"	d
USBHSD_DEVCMDSTAT_SETUP_SHIFT	device/LPC54018.h	14794;"	d
USBHSD_DEVCMDSTAT_Speed	device/LPC54018.h	14831;"	d
USBHSD_DEVCMDSTAT_Speed_MASK	device/LPC54018.h	14829;"	d
USBHSD_DEVCMDSTAT_Speed_SHIFT	device/LPC54018.h	14830;"	d
USBHSD_DEVCMDSTAT_VBUS_DEBOUNCED	device/LPC54018.h	14843;"	d
USBHSD_DEVCMDSTAT_VBUS_DEBOUNCED_MASK	device/LPC54018.h	14841;"	d
USBHSD_DEVCMDSTAT_VBUS_DEBOUNCED_SHIFT	device/LPC54018.h	14842;"	d
USBHSD_EPBUFCFG_BUF_SB	device/LPC54018.h	14913;"	d
USBHSD_EPBUFCFG_BUF_SB_MASK	device/LPC54018.h	14911;"	d
USBHSD_EPBUFCFG_BUF_SB_SHIFT	device/LPC54018.h	14912;"	d
USBHSD_EPINUSE_BUF	device/LPC54018.h	14906;"	d
USBHSD_EPINUSE_BUF_MASK	device/LPC54018.h	14904;"	d
USBHSD_EPINUSE_BUF_SHIFT	device/LPC54018.h	14905;"	d
USBHSD_EPLISTSTART_EP_LIST_FIXED	device/LPC54018.h	14872;"	d
USBHSD_EPLISTSTART_EP_LIST_FIXED_MASK	device/LPC54018.h	14870;"	d
USBHSD_EPLISTSTART_EP_LIST_FIXED_SHIFT	device/LPC54018.h	14871;"	d
USBHSD_EPLISTSTART_EP_LIST_PRG	device/LPC54018.h	14869;"	d
USBHSD_EPLISTSTART_EP_LIST_PRG_MASK	device/LPC54018.h	14867;"	d
USBHSD_EPLISTSTART_EP_LIST_PRG_SHIFT	device/LPC54018.h	14868;"	d
USBHSD_EPSKIP_SKIP	device/LPC54018.h	14899;"	d
USBHSD_EPSKIP_SKIP_MASK	device/LPC54018.h	14897;"	d
USBHSD_EPSKIP_SKIP_SHIFT	device/LPC54018.h	14898;"	d
USBHSD_EPTOGGLE_TOGGLE	device/LPC54018.h	14992;"	d
USBHSD_EPTOGGLE_TOGGLE_MASK	device/LPC54018.h	14990;"	d
USBHSD_EPTOGGLE_TOGGLE_SHIFT	device/LPC54018.h	14991;"	d
USBHSD_INFO_ERR_CODE	device/LPC54018.h	14856;"	d
USBHSD_INFO_ERR_CODE_MASK	device/LPC54018.h	14854;"	d
USBHSD_INFO_ERR_CODE_SHIFT	device/LPC54018.h	14855;"	d
USBHSD_INFO_FRAME_NR	device/LPC54018.h	14853;"	d
USBHSD_INFO_FRAME_NR_MASK	device/LPC54018.h	14851;"	d
USBHSD_INFO_FRAME_NR_SHIFT	device/LPC54018.h	14852;"	d
USBHSD_INFO_Majrev	device/LPC54018.h	14862;"	d
USBHSD_INFO_Majrev_MASK	device/LPC54018.h	14860;"	d
USBHSD_INFO_Majrev_SHIFT	device/LPC54018.h	14861;"	d
USBHSD_INFO_Minrev	device/LPC54018.h	14859;"	d
USBHSD_INFO_Minrev_MASK	device/LPC54018.h	14857;"	d
USBHSD_INFO_Minrev_SHIFT	device/LPC54018.h	14858;"	d
USBHSD_INTEN_DEV_INT_EN	device/LPC54018.h	14972;"	d
USBHSD_INTEN_DEV_INT_EN_MASK	device/LPC54018.h	14970;"	d
USBHSD_INTEN_DEV_INT_EN_SHIFT	device/LPC54018.h	14971;"	d
USBHSD_INTEN_EP_INT_EN	device/LPC54018.h	14966;"	d
USBHSD_INTEN_EP_INT_EN_MASK	device/LPC54018.h	14964;"	d
USBHSD_INTEN_EP_INT_EN_SHIFT	device/LPC54018.h	14965;"	d
USBHSD_INTEN_FRAME_INT_EN	device/LPC54018.h	14969;"	d
USBHSD_INTEN_FRAME_INT_EN_MASK	device/LPC54018.h	14967;"	d
USBHSD_INTEN_FRAME_INT_EN_SHIFT	device/LPC54018.h	14968;"	d
USBHSD_INTSETSTAT_DEV_SET_INT	device/LPC54018.h	14985;"	d
USBHSD_INTSETSTAT_DEV_SET_INT_MASK	device/LPC54018.h	14983;"	d
USBHSD_INTSETSTAT_DEV_SET_INT_SHIFT	device/LPC54018.h	14984;"	d
USBHSD_INTSETSTAT_EP_SET_INT	device/LPC54018.h	14979;"	d
USBHSD_INTSETSTAT_EP_SET_INT_MASK	device/LPC54018.h	14977;"	d
USBHSD_INTSETSTAT_EP_SET_INT_SHIFT	device/LPC54018.h	14978;"	d
USBHSD_INTSETSTAT_FRAME_SET_INT	device/LPC54018.h	14982;"	d
USBHSD_INTSETSTAT_FRAME_SET_INT_MASK	device/LPC54018.h	14980;"	d
USBHSD_INTSETSTAT_FRAME_SET_INT_SHIFT	device/LPC54018.h	14981;"	d
USBHSD_INTSTAT_DEV_INT	device/LPC54018.h	14959;"	d
USBHSD_INTSTAT_DEV_INT_MASK	device/LPC54018.h	14957;"	d
USBHSD_INTSTAT_DEV_INT_SHIFT	device/LPC54018.h	14958;"	d
USBHSD_INTSTAT_EP0IN	device/LPC54018.h	14923;"	d
USBHSD_INTSTAT_EP0IN_MASK	device/LPC54018.h	14921;"	d
USBHSD_INTSTAT_EP0IN_SHIFT	device/LPC54018.h	14922;"	d
USBHSD_INTSTAT_EP0OUT	device/LPC54018.h	14920;"	d
USBHSD_INTSTAT_EP0OUT_MASK	device/LPC54018.h	14918;"	d
USBHSD_INTSTAT_EP0OUT_SHIFT	device/LPC54018.h	14919;"	d
USBHSD_INTSTAT_EP1IN	device/LPC54018.h	14929;"	d
USBHSD_INTSTAT_EP1IN_MASK	device/LPC54018.h	14927;"	d
USBHSD_INTSTAT_EP1IN_SHIFT	device/LPC54018.h	14928;"	d
USBHSD_INTSTAT_EP1OUT	device/LPC54018.h	14926;"	d
USBHSD_INTSTAT_EP1OUT_MASK	device/LPC54018.h	14924;"	d
USBHSD_INTSTAT_EP1OUT_SHIFT	device/LPC54018.h	14925;"	d
USBHSD_INTSTAT_EP2IN	device/LPC54018.h	14935;"	d
USBHSD_INTSTAT_EP2IN_MASK	device/LPC54018.h	14933;"	d
USBHSD_INTSTAT_EP2IN_SHIFT	device/LPC54018.h	14934;"	d
USBHSD_INTSTAT_EP2OUT	device/LPC54018.h	14932;"	d
USBHSD_INTSTAT_EP2OUT_MASK	device/LPC54018.h	14930;"	d
USBHSD_INTSTAT_EP2OUT_SHIFT	device/LPC54018.h	14931;"	d
USBHSD_INTSTAT_EP3IN	device/LPC54018.h	14941;"	d
USBHSD_INTSTAT_EP3IN_MASK	device/LPC54018.h	14939;"	d
USBHSD_INTSTAT_EP3IN_SHIFT	device/LPC54018.h	14940;"	d
USBHSD_INTSTAT_EP3OUT	device/LPC54018.h	14938;"	d
USBHSD_INTSTAT_EP3OUT_MASK	device/LPC54018.h	14936;"	d
USBHSD_INTSTAT_EP3OUT_SHIFT	device/LPC54018.h	14937;"	d
USBHSD_INTSTAT_EP4IN	device/LPC54018.h	14947;"	d
USBHSD_INTSTAT_EP4IN_MASK	device/LPC54018.h	14945;"	d
USBHSD_INTSTAT_EP4IN_SHIFT	device/LPC54018.h	14946;"	d
USBHSD_INTSTAT_EP4OUT	device/LPC54018.h	14944;"	d
USBHSD_INTSTAT_EP4OUT_MASK	device/LPC54018.h	14942;"	d
USBHSD_INTSTAT_EP4OUT_SHIFT	device/LPC54018.h	14943;"	d
USBHSD_INTSTAT_EP5IN	device/LPC54018.h	14953;"	d
USBHSD_INTSTAT_EP5IN_MASK	device/LPC54018.h	14951;"	d
USBHSD_INTSTAT_EP5IN_SHIFT	device/LPC54018.h	14952;"	d
USBHSD_INTSTAT_EP5OUT	device/LPC54018.h	14950;"	d
USBHSD_INTSTAT_EP5OUT_MASK	device/LPC54018.h	14948;"	d
USBHSD_INTSTAT_EP5OUT_SHIFT	device/LPC54018.h	14949;"	d
USBHSD_INTSTAT_FRAME_INT	device/LPC54018.h	14956;"	d
USBHSD_INTSTAT_FRAME_INT_MASK	device/LPC54018.h	14954;"	d
USBHSD_INTSTAT_FRAME_INT_SHIFT	device/LPC54018.h	14955;"	d
USBHSD_IRQS	device/LPC54018.h	15011;"	d
USBHSD_LPM_DATA_PENDING	device/LPC54018.h	14892;"	d
USBHSD_LPM_DATA_PENDING_MASK	device/LPC54018.h	14890;"	d
USBHSD_LPM_DATA_PENDING_SHIFT	device/LPC54018.h	14891;"	d
USBHSD_LPM_HIRD_HW	device/LPC54018.h	14886;"	d
USBHSD_LPM_HIRD_HW_MASK	device/LPC54018.h	14884;"	d
USBHSD_LPM_HIRD_HW_SHIFT	device/LPC54018.h	14885;"	d
USBHSD_LPM_HIRD_SW	device/LPC54018.h	14889;"	d
USBHSD_LPM_HIRD_SW_MASK	device/LPC54018.h	14887;"	d
USBHSD_LPM_HIRD_SW_SHIFT	device/LPC54018.h	14888;"	d
USBHSD_NEEDCLK_IRQS	device/LPC54018.h	15012;"	d
USBHSD_Type	device/LPC54018.h	/^} USBHSD_Type;$/;"	t	typeref:struct:__anon189
USBHSH	device/LPC54018.h	15353;"	d
USBHSH_ATL_PTD_BASE_ADDR_ATL_BASE	device/LPC54018.h	15109;"	d
USBHSH_ATL_PTD_BASE_ADDR_ATL_BASE_MASK	device/LPC54018.h	15107;"	d
USBHSH_ATL_PTD_BASE_ADDR_ATL_BASE_SHIFT	device/LPC54018.h	15108;"	d
USBHSH_ATL_PTD_BASE_ADDR_ATL_CUR	device/LPC54018.h	15106;"	d
USBHSH_ATL_PTD_BASE_ADDR_ATL_CUR_MASK	device/LPC54018.h	15104;"	d
USBHSH_ATL_PTD_BASE_ADDR_ATL_CUR_SHIFT	device/LPC54018.h	15105;"	d
USBHSH_ATL_PTD_DONE_MAP_ATL_DONE	device/LPC54018.h	15273;"	d
USBHSH_ATL_PTD_DONE_MAP_ATL_DONE_MASK	device/LPC54018.h	15271;"	d
USBHSH_ATL_PTD_DONE_MAP_ATL_DONE_SHIFT	device/LPC54018.h	15272;"	d
USBHSH_ATL_PTD_SKIP_MAP_ATL_SKIP	device/LPC54018.h	15280;"	d
USBHSH_ATL_PTD_SKIP_MAP_ATL_SKIP_MASK	device/LPC54018.h	15278;"	d
USBHSH_ATL_PTD_SKIP_MAP_ATL_SKIP_SHIFT	device/LPC54018.h	15279;"	d
USBHSH_BASE	device/LPC54018.h	15351;"	d
USBHSH_BASE_ADDRS	device/LPC54018.h	15355;"	d
USBHSH_BASE_PTRS	device/LPC54018.h	15357;"	d
USBHSH_CAPLENGTH_CHIPID_CAPLENGTH	device/LPC54018.h	15066;"	d
USBHSH_CAPLENGTH_CHIPID_CAPLENGTH_MASK	device/LPC54018.h	15064;"	d
USBHSH_CAPLENGTH_CHIPID_CAPLENGTH_SHIFT	device/LPC54018.h	15065;"	d
USBHSH_CAPLENGTH_CHIPID_CHIPID	device/LPC54018.h	15069;"	d
USBHSH_CAPLENGTH_CHIPID_CHIPID_MASK	device/LPC54018.h	15067;"	d
USBHSH_CAPLENGTH_CHIPID_CHIPID_SHIFT	device/LPC54018.h	15068;"	d
USBHSH_DATA_PAYLOAD_BASE_ADDR_DAT_BASE	device/LPC54018.h	15136;"	d
USBHSH_DATA_PAYLOAD_BASE_ADDR_DAT_BASE_MASK	device/LPC54018.h	15134;"	d
USBHSH_DATA_PAYLOAD_BASE_ADDR_DAT_BASE_SHIFT	device/LPC54018.h	15135;"	d
USBHSH_FLADJ_FRINDEX_FLADJ	device/LPC54018.h	15096;"	d
USBHSH_FLADJ_FRINDEX_FLADJ_MASK	device/LPC54018.h	15094;"	d
USBHSH_FLADJ_FRINDEX_FLADJ_SHIFT	device/LPC54018.h	15095;"	d
USBHSH_FLADJ_FRINDEX_FRINDEX	device/LPC54018.h	15099;"	d
USBHSH_FLADJ_FRINDEX_FRINDEX_MASK	device/LPC54018.h	15097;"	d
USBHSH_FLADJ_FRINDEX_FRINDEX_SHIFT	device/LPC54018.h	15098;"	d
USBHSH_HCCPARAMS_LPMC	device/LPC54018.h	15089;"	d
USBHSH_HCCPARAMS_LPMC_MASK	device/LPC54018.h	15087;"	d
USBHSH_HCCPARAMS_LPMC_SHIFT	device/LPC54018.h	15088;"	d
USBHSH_HCSPARAMS_N_PORTS	device/LPC54018.h	15076;"	d
USBHSH_HCSPARAMS_N_PORTS_MASK	device/LPC54018.h	15074;"	d
USBHSH_HCSPARAMS_N_PORTS_SHIFT	device/LPC54018.h	15075;"	d
USBHSH_HCSPARAMS_PPC	device/LPC54018.h	15079;"	d
USBHSH_HCSPARAMS_PPC_MASK	device/LPC54018.h	15077;"	d
USBHSH_HCSPARAMS_PPC_SHIFT	device/LPC54018.h	15078;"	d
USBHSH_HCSPARAMS_P_INDICATOR	device/LPC54018.h	15082;"	d
USBHSH_HCSPARAMS_P_INDICATOR_MASK	device/LPC54018.h	15080;"	d
USBHSH_HCSPARAMS_P_INDICATOR_SHIFT	device/LPC54018.h	15081;"	d
USBHSH_INT_PTD_BASE_ADDR_INT_BASE	device/LPC54018.h	15129;"	d
USBHSH_INT_PTD_BASE_ADDR_INT_BASE_MASK	device/LPC54018.h	15127;"	d
USBHSH_INT_PTD_BASE_ADDR_INT_BASE_SHIFT	device/LPC54018.h	15128;"	d
USBHSH_INT_PTD_BASE_ADDR_INT_FIRST	device/LPC54018.h	15126;"	d
USBHSH_INT_PTD_BASE_ADDR_INT_FIRST_MASK	device/LPC54018.h	15124;"	d
USBHSH_INT_PTD_BASE_ADDR_INT_FIRST_SHIFT	device/LPC54018.h	15125;"	d
USBHSH_INT_PTD_DONE_MAP_INT_DONE	device/LPC54018.h	15301;"	d
USBHSH_INT_PTD_DONE_MAP_INT_DONE_MASK	device/LPC54018.h	15299;"	d
USBHSH_INT_PTD_DONE_MAP_INT_DONE_SHIFT	device/LPC54018.h	15300;"	d
USBHSH_INT_PTD_SKIP_MAP_INT_SKIP	device/LPC54018.h	15308;"	d
USBHSH_INT_PTD_SKIP_MAP_INT_SKIP_MASK	device/LPC54018.h	15306;"	d
USBHSH_INT_PTD_SKIP_MAP_INT_SKIP_SHIFT	device/LPC54018.h	15307;"	d
USBHSH_IRQS	device/LPC54018.h	15359;"	d
USBHSH_ISO_PTD_BASE_ADDR_ISO_BASE	device/LPC54018.h	15119;"	d
USBHSH_ISO_PTD_BASE_ADDR_ISO_BASE_MASK	device/LPC54018.h	15117;"	d
USBHSH_ISO_PTD_BASE_ADDR_ISO_BASE_SHIFT	device/LPC54018.h	15118;"	d
USBHSH_ISO_PTD_BASE_ADDR_ISO_FIRST	device/LPC54018.h	15116;"	d
USBHSH_ISO_PTD_BASE_ADDR_ISO_FIRST_MASK	device/LPC54018.h	15114;"	d
USBHSH_ISO_PTD_BASE_ADDR_ISO_FIRST_SHIFT	device/LPC54018.h	15115;"	d
USBHSH_ISO_PTD_DONE_MAP_ISO_DONE	device/LPC54018.h	15287;"	d
USBHSH_ISO_PTD_DONE_MAP_ISO_DONE_MASK	device/LPC54018.h	15285;"	d
USBHSH_ISO_PTD_DONE_MAP_ISO_DONE_SHIFT	device/LPC54018.h	15286;"	d
USBHSH_ISO_PTD_SKIP_MAP_ISO_SKIP	device/LPC54018.h	15294;"	d
USBHSH_ISO_PTD_SKIP_MAP_ISO_SKIP_MASK	device/LPC54018.h	15292;"	d
USBHSH_ISO_PTD_SKIP_MAP_ISO_SKIP_SHIFT	device/LPC54018.h	15293;"	d
USBHSH_LASTPTD_ATL_LAST	device/LPC54018.h	15315;"	d
USBHSH_LASTPTD_ATL_LAST_MASK	device/LPC54018.h	15313;"	d
USBHSH_LASTPTD_ATL_LAST_SHIFT	device/LPC54018.h	15314;"	d
USBHSH_LASTPTD_INT_LAST	device/LPC54018.h	15321;"	d
USBHSH_LASTPTD_INT_LAST_MASK	device/LPC54018.h	15319;"	d
USBHSH_LASTPTD_INT_LAST_SHIFT	device/LPC54018.h	15320;"	d
USBHSH_LASTPTD_ISO_LAST	device/LPC54018.h	15318;"	d
USBHSH_LASTPTD_ISO_LAST_MASK	device/LPC54018.h	15316;"	d
USBHSH_LASTPTD_ISO_LAST_SHIFT	device/LPC54018.h	15317;"	d
USBHSH_NEEDCLK_IRQS	device/LPC54018.h	15360;"	d
USBHSH_PORTMODE_DEV_ENABLE	device/LPC54018.h	15334;"	d
USBHSH_PORTMODE_DEV_ENABLE_MASK	device/LPC54018.h	15332;"	d
USBHSH_PORTMODE_DEV_ENABLE_SHIFT	device/LPC54018.h	15333;"	d
USBHSH_PORTMODE_ID0	device/LPC54018.h	15328;"	d
USBHSH_PORTMODE_ID0_EN	device/LPC54018.h	15331;"	d
USBHSH_PORTMODE_ID0_EN_MASK	device/LPC54018.h	15329;"	d
USBHSH_PORTMODE_ID0_EN_SHIFT	device/LPC54018.h	15330;"	d
USBHSH_PORTMODE_ID0_MASK	device/LPC54018.h	15326;"	d
USBHSH_PORTMODE_ID0_SHIFT	device/LPC54018.h	15327;"	d
USBHSH_PORTMODE_SW_CTRL_PDCOM	device/LPC54018.h	15337;"	d
USBHSH_PORTMODE_SW_CTRL_PDCOM_MASK	device/LPC54018.h	15335;"	d
USBHSH_PORTMODE_SW_CTRL_PDCOM_SHIFT	device/LPC54018.h	15336;"	d
USBHSH_PORTMODE_SW_PDCOM	device/LPC54018.h	15340;"	d
USBHSH_PORTMODE_SW_PDCOM_MASK	device/LPC54018.h	15338;"	d
USBHSH_PORTMODE_SW_PDCOM_SHIFT	device/LPC54018.h	15339;"	d
USBHSH_PORTSC1_CCS	device/LPC54018.h	15215;"	d
USBHSH_PORTSC1_CCS_MASK	device/LPC54018.h	15213;"	d
USBHSH_PORTSC1_CCS_SHIFT	device/LPC54018.h	15214;"	d
USBHSH_PORTSC1_CSC	device/LPC54018.h	15218;"	d
USBHSH_PORTSC1_CSC_MASK	device/LPC54018.h	15216;"	d
USBHSH_PORTSC1_CSC_SHIFT	device/LPC54018.h	15217;"	d
USBHSH_PORTSC1_DEV_ADD	device/LPC54018.h	15266;"	d
USBHSH_PORTSC1_DEV_ADD_MASK	device/LPC54018.h	15264;"	d
USBHSH_PORTSC1_DEV_ADD_SHIFT	device/LPC54018.h	15265;"	d
USBHSH_PORTSC1_FPR	device/LPC54018.h	15233;"	d
USBHSH_PORTSC1_FPR_MASK	device/LPC54018.h	15231;"	d
USBHSH_PORTSC1_FPR_SHIFT	device/LPC54018.h	15232;"	d
USBHSH_PORTSC1_LS	device/LPC54018.h	15245;"	d
USBHSH_PORTSC1_LS_MASK	device/LPC54018.h	15243;"	d
USBHSH_PORTSC1_LS_SHIFT	device/LPC54018.h	15244;"	d
USBHSH_PORTSC1_OCA	device/LPC54018.h	15227;"	d
USBHSH_PORTSC1_OCA_MASK	device/LPC54018.h	15225;"	d
USBHSH_PORTSC1_OCA_SHIFT	device/LPC54018.h	15226;"	d
USBHSH_PORTSC1_OCC	device/LPC54018.h	15230;"	d
USBHSH_PORTSC1_OCC_MASK	device/LPC54018.h	15228;"	d
USBHSH_PORTSC1_OCC_SHIFT	device/LPC54018.h	15229;"	d
USBHSH_PORTSC1_PED	device/LPC54018.h	15221;"	d
USBHSH_PORTSC1_PEDC	device/LPC54018.h	15224;"	d
USBHSH_PORTSC1_PEDC_MASK	device/LPC54018.h	15222;"	d
USBHSH_PORTSC1_PEDC_SHIFT	device/LPC54018.h	15223;"	d
USBHSH_PORTSC1_PED_MASK	device/LPC54018.h	15219;"	d
USBHSH_PORTSC1_PED_SHIFT	device/LPC54018.h	15220;"	d
USBHSH_PORTSC1_PIC	device/LPC54018.h	15251;"	d
USBHSH_PORTSC1_PIC_MASK	device/LPC54018.h	15249;"	d
USBHSH_PORTSC1_PIC_SHIFT	device/LPC54018.h	15250;"	d
USBHSH_PORTSC1_PP	device/LPC54018.h	15248;"	d
USBHSH_PORTSC1_PP_MASK	device/LPC54018.h	15246;"	d
USBHSH_PORTSC1_PP_SHIFT	device/LPC54018.h	15247;"	d
USBHSH_PORTSC1_PR	device/LPC54018.h	15239;"	d
USBHSH_PORTSC1_PR_MASK	device/LPC54018.h	15237;"	d
USBHSH_PORTSC1_PR_SHIFT	device/LPC54018.h	15238;"	d
USBHSH_PORTSC1_PSPD	device/LPC54018.h	15257;"	d
USBHSH_PORTSC1_PSPD_MASK	device/LPC54018.h	15255;"	d
USBHSH_PORTSC1_PSPD_SHIFT	device/LPC54018.h	15256;"	d
USBHSH_PORTSC1_PTC	device/LPC54018.h	15254;"	d
USBHSH_PORTSC1_PTC_MASK	device/LPC54018.h	15252;"	d
USBHSH_PORTSC1_PTC_SHIFT	device/LPC54018.h	15253;"	d
USBHSH_PORTSC1_SUSP	device/LPC54018.h	15236;"	d
USBHSH_PORTSC1_SUSP_MASK	device/LPC54018.h	15234;"	d
USBHSH_PORTSC1_SUSP_SHIFT	device/LPC54018.h	15235;"	d
USBHSH_PORTSC1_SUS_L1	device/LPC54018.h	15242;"	d
USBHSH_PORTSC1_SUS_L1_MASK	device/LPC54018.h	15240;"	d
USBHSH_PORTSC1_SUS_L1_SHIFT	device/LPC54018.h	15241;"	d
USBHSH_PORTSC1_SUS_STAT	device/LPC54018.h	15263;"	d
USBHSH_PORTSC1_SUS_STAT_MASK	device/LPC54018.h	15261;"	d
USBHSH_PORTSC1_SUS_STAT_SHIFT	device/LPC54018.h	15262;"	d
USBHSH_PORTSC1_WOO	device/LPC54018.h	15260;"	d
USBHSH_PORTSC1_WOO_MASK	device/LPC54018.h	15258;"	d
USBHSH_PORTSC1_WOO_SHIFT	device/LPC54018.h	15259;"	d
USBHSH_Type	device/LPC54018.h	/^} USBHSH_Type;$/;"	t	typeref:struct:__anon190
USBHSH_USBCMD_ATL_EN	device/LPC54018.h	15155;"	d
USBHSH_USBCMD_ATL_EN_MASK	device/LPC54018.h	15153;"	d
USBHSH_USBCMD_ATL_EN_SHIFT	device/LPC54018.h	15154;"	d
USBHSH_USBCMD_FLS	device/LPC54018.h	15149;"	d
USBHSH_USBCMD_FLS_MASK	device/LPC54018.h	15147;"	d
USBHSH_USBCMD_FLS_SHIFT	device/LPC54018.h	15148;"	d
USBHSH_USBCMD_HCRESET	device/LPC54018.h	15146;"	d
USBHSH_USBCMD_HCRESET_MASK	device/LPC54018.h	15144;"	d
USBHSH_USBCMD_HCRESET_SHIFT	device/LPC54018.h	15145;"	d
USBHSH_USBCMD_HIRD	device/LPC54018.h	15164;"	d
USBHSH_USBCMD_HIRD_MASK	device/LPC54018.h	15162;"	d
USBHSH_USBCMD_HIRD_SHIFT	device/LPC54018.h	15163;"	d
USBHSH_USBCMD_INT_EN	device/LPC54018.h	15161;"	d
USBHSH_USBCMD_INT_EN_MASK	device/LPC54018.h	15159;"	d
USBHSH_USBCMD_INT_EN_SHIFT	device/LPC54018.h	15160;"	d
USBHSH_USBCMD_ISO_EN	device/LPC54018.h	15158;"	d
USBHSH_USBCMD_ISO_EN_MASK	device/LPC54018.h	15156;"	d
USBHSH_USBCMD_ISO_EN_SHIFT	device/LPC54018.h	15157;"	d
USBHSH_USBCMD_LHCR	device/LPC54018.h	15152;"	d
USBHSH_USBCMD_LHCR_MASK	device/LPC54018.h	15150;"	d
USBHSH_USBCMD_LHCR_SHIFT	device/LPC54018.h	15151;"	d
USBHSH_USBCMD_RS	device/LPC54018.h	15143;"	d
USBHSH_USBCMD_RS_MASK	device/LPC54018.h	15141;"	d
USBHSH_USBCMD_RS_SHIFT	device/LPC54018.h	15142;"	d
USBHSH_USBINTR_ATL_IRQ_E	device/LPC54018.h	15199;"	d
USBHSH_USBINTR_ATL_IRQ_E_MASK	device/LPC54018.h	15197;"	d
USBHSH_USBINTR_ATL_IRQ_E_SHIFT	device/LPC54018.h	15198;"	d
USBHSH_USBINTR_FLRE	device/LPC54018.h	15196;"	d
USBHSH_USBINTR_FLRE_MASK	device/LPC54018.h	15194;"	d
USBHSH_USBINTR_FLRE_SHIFT	device/LPC54018.h	15195;"	d
USBHSH_USBINTR_INT_IRQ_E	device/LPC54018.h	15205;"	d
USBHSH_USBINTR_INT_IRQ_E_MASK	device/LPC54018.h	15203;"	d
USBHSH_USBINTR_INT_IRQ_E_SHIFT	device/LPC54018.h	15204;"	d
USBHSH_USBINTR_ISO_IRQ_E	device/LPC54018.h	15202;"	d
USBHSH_USBINTR_ISO_IRQ_E_MASK	device/LPC54018.h	15200;"	d
USBHSH_USBINTR_ISO_IRQ_E_SHIFT	device/LPC54018.h	15201;"	d
USBHSH_USBINTR_PCDE	device/LPC54018.h	15193;"	d
USBHSH_USBINTR_PCDE_MASK	device/LPC54018.h	15191;"	d
USBHSH_USBINTR_PCDE_SHIFT	device/LPC54018.h	15192;"	d
USBHSH_USBINTR_SOF_E	device/LPC54018.h	15208;"	d
USBHSH_USBINTR_SOF_E_MASK	device/LPC54018.h	15206;"	d
USBHSH_USBINTR_SOF_E_SHIFT	device/LPC54018.h	15207;"	d
USBHSH_USBSTS_ATL_IRQ	device/LPC54018.h	15177;"	d
USBHSH_USBSTS_ATL_IRQ_MASK	device/LPC54018.h	15175;"	d
USBHSH_USBSTS_ATL_IRQ_SHIFT	device/LPC54018.h	15176;"	d
USBHSH_USBSTS_FLR	device/LPC54018.h	15174;"	d
USBHSH_USBSTS_FLR_MASK	device/LPC54018.h	15172;"	d
USBHSH_USBSTS_FLR_SHIFT	device/LPC54018.h	15173;"	d
USBHSH_USBSTS_INT_IRQ	device/LPC54018.h	15183;"	d
USBHSH_USBSTS_INT_IRQ_MASK	device/LPC54018.h	15181;"	d
USBHSH_USBSTS_INT_IRQ_SHIFT	device/LPC54018.h	15182;"	d
USBHSH_USBSTS_ISO_IRQ	device/LPC54018.h	15180;"	d
USBHSH_USBSTS_ISO_IRQ_MASK	device/LPC54018.h	15178;"	d
USBHSH_USBSTS_ISO_IRQ_SHIFT	device/LPC54018.h	15179;"	d
USBHSH_USBSTS_PCD	device/LPC54018.h	15171;"	d
USBHSH_USBSTS_PCD_MASK	device/LPC54018.h	15169;"	d
USBHSH_USBSTS_PCD_SHIFT	device/LPC54018.h	15170;"	d
USBHSH_USBSTS_SOF_IRQ	device/LPC54018.h	15186;"	d
USBHSH_USBSTS_SOF_IRQ_MASK	device/LPC54018.h	15184;"	d
USBHSH_USBSTS_SOF_IRQ_SHIFT	device/LPC54018.h	15185;"	d
USBHSL0_CLOCKS	drivers/fsl_clock.h	257;"	d
USBH_CLOCKS	drivers/fsl_clock.h	277;"	d
USBINTR	device/LPC54018.h	/^  __IO uint32_t USBINTR;                           \/**< USB Interrupt Enable register, offset: 0x28 *\/$/;"	m	struct:__anon190
USBPLLCTRL	device/LPC54018.h	/^  __IO uint32_t USBPLLCTRL;                        \/**< USB PLL control, offset: 0x51C *\/$/;"	m	struct:__anon185
USBPLLSTAT	device/LPC54018.h	/^  __IO uint32_t USBPLLSTAT;                        \/**< USB PLL status, offset: 0x520 *\/$/;"	m	struct:__anon185
USBRAM_CLOCKS	drivers/fsl_clock.h	222;"	d
USBSTS	device/LPC54018.h	/^  __IO uint32_t USBSTS;                            \/**< USB Interrupt Status register, offset: 0x24 *\/$/;"	m	struct:__anon190
USB_ALIGN_PRAGMA	usb/include/usb_misc.h	288;"	d
USB_ASSIGN_MACRO_VALUE_ADDRESS_LONG_BY_BYTE	usb/include/usb_misc.h	105;"	d
USB_ASSIGN_MACRO_VALUE_ADDRESS_SHORT_BY_BYTE	usb/include/usb_misc.h	113;"	d
USB_ASSIGN_VALUE_ADDRESS_LONG_BY_BYTE	usb/include/usb_misc.h	91;"	d
USB_ASSIGN_VALUE_ADDRESS_SHORT_BY_BYTE	usb/include/usb_misc.h	99;"	d
USB_BASE_ADDRS	device/LPC54018.h	14318;"	d
USB_BASE_PTRS	device/LPC54018.h	14320;"	d
USB_BDT	usb/include/usb_misc.h	363;"	d
USB_BIG_ENDIAN	osa/usb_osa.h	22;"	d
USB_CACHE_LINESIZE	usb/include/usb_misc.h	336;"	d
USB_CDC_ABSTRACT_CONTROL_FUNC_DESC	vcom/usb_device_descriptor.h	60;"	d
USB_CDC_ABSTRACT_CONTROL_MODEL	vcom/usb_device_descriptor.h	19;"	d
USB_CDC_ACM_ENTER_CRITICAL	usb/device/class/usb_device_cdc_acm.c	25;"	d	file:
USB_CDC_ACM_EXIT_CRITICAL	usb/device/class/usb_device_cdc_acm.c	29;"	d	file:
USB_CDC_ATM_NETWORKING_CONTROL_MODEL	vcom/usb_device_descriptor.h	24;"	d
USB_CDC_ATM_NETWORKING_FUNC_DESC	vcom/usb_device_descriptor.h	74;"	d
USB_CDC_AT_250_PROTOCOL	vcom/usb_device_descriptor.h	33;"	d
USB_CDC_AT_3GPP_27_007	vcom/usb_device_descriptor.h	37;"	d
USB_CDC_AT_GSM_7_07	vcom/usb_device_descriptor.h	36;"	d
USB_CDC_AT_PCCA_101_ANNEX_O	vcom/usb_device_descriptor.h	35;"	d
USB_CDC_AT_PCCA_101_PROTOCOL	vcom/usb_device_descriptor.h	34;"	d
USB_CDC_AT_TIA_CDMA	vcom/usb_device_descriptor.h	38;"	d
USB_CDC_CALL_MANAGEMENT_FUNC_DESC	vcom/usb_device_descriptor.h	59;"	d
USB_CDC_CAPI_COMMANDS	vcom/usb_device_descriptor.h	53;"	d
USB_CDC_CAPI_CONTROL_FUNC_DESC	vcom/usb_device_descriptor.h	72;"	d
USB_CDC_CAPI_CONTROL_MOPDEL	vcom/usb_device_descriptor.h	22;"	d
USB_CDC_COMMAND_SET_DETAIL_FUNC_DESC	vcom/usb_device_descriptor.h	81;"	d
USB_CDC_COMMAND_SET_FUNC_DESC	vcom/usb_device_descriptor.h	80;"	d
USB_CDC_COUNTRY_SELECT_FUNC_DESC	vcom/usb_device_descriptor.h	65;"	d
USB_CDC_DATA_COMPRESSION_V42BIS	vcom/usb_device_descriptor.h	50;"	d
USB_CDC_DATA_LINK_Q921_PROTOCOL	vcom/usb_device_descriptor.h	49;"	d
USB_CDC_DATA_LINK_Q931_PROTOCOL	vcom/usb_device_descriptor.h	48;"	d
USB_CDC_DEVICE_MANAGEMENT	vcom/usb_device_descriptor.h	26;"	d
USB_CDC_DEVICE_MANAGEMENT_FUNC_DESC	vcom/usb_device_descriptor.h	78;"	d
USB_CDC_DIRECT_LINE_CONTROL_MODEL	vcom/usb_device_descriptor.h	18;"	d
USB_CDC_DIRECT_LINE_FUNC_DESC	vcom/usb_device_descriptor.h	61;"	d
USB_CDC_ETHERNET_EMULATION_MODEL	vcom/usb_device_descriptor.h	29;"	d
USB_CDC_ETHERNET_EMULATION_PROTOCOL	vcom/usb_device_descriptor.h	39;"	d
USB_CDC_ETHERNET_NETWORKING_CONTROL_MODEL	vcom/usb_device_descriptor.h	23;"	d
USB_CDC_ETHERNET_NETWORKING_FUNC_DESC	vcom/usb_device_descriptor.h	73;"	d
USB_CDC_EURO_ISDN_PROTOCOL	vcom/usb_device_descriptor.h	51;"	d
USB_CDC_EXTENSION_UNIT_FUNC_DESC	vcom/usb_device_descriptor.h	70;"	d
USB_CDC_EXTERNAL_PROTOCOL	vcom/usb_device_descriptor.h	40;"	d
USB_CDC_HDLC_PROTOCOL	vcom/usb_device_descriptor.h	45;"	d
USB_CDC_HEADER_FUNC_DESC	vcom/usb_device_descriptor.h	58;"	d
USB_CDC_HOST_BASED_DRIVER	vcom/usb_device_descriptor.h	54;"	d
USB_CDC_MANAGEMENT_PROTOCOL	vcom/usb_device_descriptor.h	47;"	d
USB_CDC_MDLM_DETAIL_FUNC_DESC	vcom/usb_device_descriptor.h	77;"	d
USB_CDC_MOBILE_DIRECT_LINE_FUNC_DESC	vcom/usb_device_descriptor.h	76;"	d
USB_CDC_MOBILE_DIRECT_LINE_MODEL	vcom/usb_device_descriptor.h	27;"	d
USB_CDC_MULTI_CHANNEL_CONTROL_MODEL	vcom/usb_device_descriptor.h	21;"	d
USB_CDC_MULTI_CHANNEL_FUNC_DESC	vcom/usb_device_descriptor.h	71;"	d
USB_CDC_NETWORK_CHANNEL_FUNC_DESC	vcom/usb_device_descriptor.h	68;"	d
USB_CDC_NO_CLASS_SPECIFIC_PROTOCOL	vcom/usb_device_descriptor.h	32;"	d
USB_CDC_OBEX	vcom/usb_device_descriptor.h	28;"	d
USB_CDC_OBEX_FUNC_DESC	vcom/usb_device_descriptor.h	79;"	d
USB_CDC_OBEX_SERVICE_ID_FUNC_DESC	vcom/usb_device_descriptor.h	83;"	d
USB_CDC_PROTOCOL_UNIT_FUNC_DESC	vcom/usb_device_descriptor.h	69;"	d
USB_CDC_PYHSICAL_INTERFACE_PROTOCOL	vcom/usb_device_descriptor.h	44;"	d
USB_CDC_RATE_ADAPTION_ISDN_V24	vcom/usb_device_descriptor.h	52;"	d
USB_CDC_RNDIS_MUTEX_LOCK	usb/device/class/usb_device_cdc_rndis.c	24;"	d	file:
USB_CDC_RNDIS_MUTEX_LOCK	usb/device/class/usb_device_cdc_rndis.c	29;"	d	file:
USB_CDC_RNDIS_MUTEX_UNLOCK	usb/device/class/usb_device_cdc_rndis.c	27;"	d	file:
USB_CDC_RNDIS_MUTEX_UNLOCK	usb/device/class/usb_device_cdc_rndis.c	30;"	d	file:
USB_CDC_TELEPHONE_CONTROL_FUNC_DESC	vcom/usb_device_descriptor.h	82;"	d
USB_CDC_TELEPHONE_CONTROL_MODEL	vcom/usb_device_descriptor.h	20;"	d
USB_CDC_TELEPHONE_MODES_FUNC_DESC	vcom/usb_device_descriptor.h	66;"	d
USB_CDC_TELEPHONE_REPORT_FUNC_DESC	vcom/usb_device_descriptor.h	63;"	d
USB_CDC_TELEPHONE_RINGER_FUNC_DESC	vcom/usb_device_descriptor.h	62;"	d
USB_CDC_TERMINAL_FUNC_DESC	vcom/usb_device_descriptor.h	67;"	d
USB_CDC_TRANSPARENT_PROTOCOL	vcom/usb_device_descriptor.h	46;"	d
USB_CDC_UNION_FUNC_DESC	vcom/usb_device_descriptor.h	64;"	d
USB_CDC_UNIT_FUNCTIONAL	vcom/usb_device_descriptor.h	55;"	d
USB_CDC_VCOM_CIC_CLASS	vcom/usb_device_descriptor.h	108;"	d
USB_CDC_VCOM_CIC_ENDPOINT_COUNT	vcom/usb_device_descriptor.h	121;"	d
USB_CDC_VCOM_CIC_ENDPOINT_COUNT_2	vcom/usb_device_descriptor.h	122;"	d
USB_CDC_VCOM_CIC_INTERFACE_INDEX	vcom/usb_device_descriptor.h	117;"	d
USB_CDC_VCOM_CIC_INTERFACE_INDEX_2	vcom/usb_device_descriptor.h	119;"	d
USB_CDC_VCOM_CIC_INTERRUPT_IN_ENDPOINT	vcom/usb_device_descriptor.h	123;"	d
USB_CDC_VCOM_CIC_INTERRUPT_IN_ENDPOINT_2	vcom/usb_device_descriptor.h	124;"	d
USB_CDC_VCOM_CIC_PROTOCOL	vcom/usb_device_descriptor.h	110;"	d
USB_CDC_VCOM_CIC_SUBCLASS	vcom/usb_device_descriptor.h	109;"	d
USB_CDC_VCOM_DIC_BULK_IN_ENDPOINT	vcom/usb_device_descriptor.h	127;"	d
USB_CDC_VCOM_DIC_BULK_IN_ENDPOINT_2	vcom/usb_device_descriptor.h	129;"	d
USB_CDC_VCOM_DIC_BULK_OUT_ENDPOINT	vcom/usb_device_descriptor.h	128;"	d
USB_CDC_VCOM_DIC_BULK_OUT_ENDPOINT_2	vcom/usb_device_descriptor.h	130;"	d
USB_CDC_VCOM_DIC_CLASS	vcom/usb_device_descriptor.h	111;"	d
USB_CDC_VCOM_DIC_ENDPOINT_COUNT	vcom/usb_device_descriptor.h	125;"	d
USB_CDC_VCOM_DIC_ENDPOINT_COUNT_2	vcom/usb_device_descriptor.h	126;"	d
USB_CDC_VCOM_DIC_INTERFACE_INDEX	vcom/usb_device_descriptor.h	118;"	d
USB_CDC_VCOM_DIC_INTERFACE_INDEX_2	vcom/usb_device_descriptor.h	120;"	d
USB_CDC_VCOM_DIC_PROTOCOL	vcom/usb_device_descriptor.h	113;"	d
USB_CDC_VCOM_DIC_SUBCLASS	vcom/usb_device_descriptor.h	112;"	d
USB_CDC_VCOM_INTERFACE_COUNT	vcom/usb_device_descriptor.h	115;"	d
USB_CDC_VCOM_INTERFACE_COUNT_2	vcom/usb_device_descriptor.h	116;"	d
USB_CDC_VCOM_REPORT_DESCRIPTOR_LENGTH	vcom/usb_device_descriptor.h	87;"	d
USB_CDC_VENDOR_SPECIFIC	vcom/usb_device_descriptor.h	41;"	d
USB_CDC_WIRELESS_CONTROL_FUNC_DESC	vcom/usb_device_descriptor.h	75;"	d
USB_CDC_WIRELESS_HANDSET_CONTROL_MODEL	vcom/usb_device_descriptor.h	25;"	d
USB_COMPOSITE_CONFIGURE_INDEX	vcom/usb_device_descriptor.h	99;"	d
USB_CONFIGURE_SIZE	usb/device/source/usb_device_ch9.h	29;"	d
USB_CONTROLLER_DATA	usb/include/usb_misc.h	369;"	d
USB_CONTROL_ENDPOINT	usb/device/include/usb_device.h	76;"	d
USB_CONTROL_MAX_PACKET_SIZE	usb/device/include/usb_device.h	78;"	d
USB_DATABUFSTART_DA_BUF	device/LPC54018.h	14196;"	d
USB_DATABUFSTART_DA_BUF_MASK	device/LPC54018.h	14194;"	d
USB_DATABUFSTART_DA_BUF_SHIFT	device/LPC54018.h	14195;"	d
USB_DATA_ALIGN	usb/include/usb_misc.h	351;"	d
USB_DATA_ALIGN_SIZE	usb/include/usb_misc.h	356;"	d
USB_DATA_ALIGN_SIZE_MULTIPLE	usb/include/usb_misc.h	358;"	d
USB_DESCRIPTOR_CONFIGURE_ATTRIBUTE_D7_MASK	usb/include/usb_spec.h	129;"	d
USB_DESCRIPTOR_CONFIGURE_ATTRIBUTE_D7_SHIFT	usb/include/usb_spec.h	130;"	d
USB_DESCRIPTOR_CONFIGURE_ATTRIBUTE_REMOTE_WAKEUP_MASK	usb/include/usb_spec.h	135;"	d
USB_DESCRIPTOR_CONFIGURE_ATTRIBUTE_REMOTE_WAKEUP_SHIFT	usb/include/usb_spec.h	136;"	d
USB_DESCRIPTOR_CONFIGURE_ATTRIBUTE_SELF_POWERED_MASK	usb/include/usb_spec.h	132;"	d
USB_DESCRIPTOR_CONFIGURE_ATTRIBUTE_SELF_POWERED_SHIFT	usb/include/usb_spec.h	133;"	d
USB_DESCRIPTOR_DEVICE_CAPABILITY_USB20_EXTENSION_BESL_MASK	usb/include/usb_spec.h	175;"	d
USB_DESCRIPTOR_DEVICE_CAPABILITY_USB20_EXTENSION_BESL_SHIFT	usb/include/usb_spec.h	176;"	d
USB_DESCRIPTOR_DEVICE_CAPABILITY_USB20_EXTENSION_LPM_MASK	usb/include/usb_spec.h	173;"	d
USB_DESCRIPTOR_DEVICE_CAPABILITY_USB20_EXTENSION_LPM_SHIFT	usb/include/usb_spec.h	174;"	d
USB_DESCRIPTOR_ENDPOINT_ADDRESS_DIRECTION_IN	usb/include/usb_spec.h	142;"	d
USB_DESCRIPTOR_ENDPOINT_ADDRESS_DIRECTION_MASK	usb/include/usb_spec.h	139;"	d
USB_DESCRIPTOR_ENDPOINT_ADDRESS_DIRECTION_OUT	usb/include/usb_spec.h	141;"	d
USB_DESCRIPTOR_ENDPOINT_ADDRESS_DIRECTION_SHIFT	usb/include/usb_spec.h	140;"	d
USB_DESCRIPTOR_ENDPOINT_ADDRESS_NUMBER_MASK	usb/include/usb_spec.h	144;"	d
USB_DESCRIPTOR_ENDPOINT_ADDRESS_NUMBER_SHFIT	usb/include/usb_spec.h	145;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_NUMBER_SHFIT	usb/include/usb_spec.h	148;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_SYNC_TYPE_ADAPTIVE	usb/include/usb_spec.h	154;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_SYNC_TYPE_ASYNC	usb/include/usb_spec.h	153;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_SYNC_TYPE_MASK	usb/include/usb_spec.h	150;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_SYNC_TYPE_NO_SYNC	usb/include/usb_spec.h	152;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_SYNC_TYPE_SHFIT	usb/include/usb_spec.h	151;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_SYNC_TYPE_SYNC	usb/include/usb_spec.h	155;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_TYPE_MASK	usb/include/usb_spec.h	147;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_USAGE_TYPE_DATA_ENDPOINT	usb/include/usb_spec.h	159;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_USAGE_TYPE_FEEDBACK_ENDPOINT	usb/include/usb_spec.h	160;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_USAGE_TYPE_IMPLICIT_FEEDBACK_DATA_ENDPOINT	usb/include/usb_spec.h	161;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_USAGE_TYPE_MASK	usb/include/usb_spec.h	157;"	d
USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_USAGE_TYPE_SHFIT	usb/include/usb_spec.h	158;"	d
USB_DESCRIPTOR_ENDPOINT_MAXPACKETSIZE_MULT_TRANSACTIONS_MASK	usb/include/usb_spec.h	164;"	d
USB_DESCRIPTOR_ENDPOINT_MAXPACKETSIZE_MULT_TRANSACTIONS_SHFIT	usb/include/usb_spec.h	165;"	d
USB_DESCRIPTOR_ENDPOINT_MAXPACKETSIZE_SIZE_MASK	usb/include/usb_spec.h	163;"	d
USB_DESCRIPTOR_LENGTH_BOS_DESCRIPTOR	usb/include/usb_spec.h	50;"	d
USB_DESCRIPTOR_LENGTH_CDC_ABSTRACT	vcom/usb_device_descriptor.h	91;"	d
USB_DESCRIPTOR_LENGTH_CDC_CALL_MANAG	vcom/usb_device_descriptor.h	90;"	d
USB_DESCRIPTOR_LENGTH_CDC_HEADER_FUNC	vcom/usb_device_descriptor.h	89;"	d
USB_DESCRIPTOR_LENGTH_CDC_UNION_FUNC	vcom/usb_device_descriptor.h	92;"	d
USB_DESCRIPTOR_LENGTH_CONFIGURATION_ALL	vcom/usb_device_descriptor.h	86;"	d
USB_DESCRIPTOR_LENGTH_CONFIGURE	usb/include/usb_spec.h	44;"	d
USB_DESCRIPTOR_LENGTH_DEVICE	usb/include/usb_spec.h	43;"	d
USB_DESCRIPTOR_LENGTH_DEVICE_CAPABILITY_SUPERSPEED	usb/include/usb_spec.h	52;"	d
USB_DESCRIPTOR_LENGTH_DEVICE_CAPABILITY_USB20_EXTENSION	usb/include/usb_spec.h	51;"	d
USB_DESCRIPTOR_LENGTH_DEVICE_QUALITIER	usb/include/usb_spec.h	48;"	d
USB_DESCRIPTOR_LENGTH_ENDPOINT	usb/include/usb_spec.h	46;"	d
USB_DESCRIPTOR_LENGTH_ENDPOINT_COMPANION	usb/include/usb_spec.h	47;"	d
USB_DESCRIPTOR_LENGTH_INTERFACE	usb/include/usb_spec.h	45;"	d
USB_DESCRIPTOR_LENGTH_OTG_DESCRIPTOR	usb/include/usb_spec.h	49;"	d
USB_DESCRIPTOR_LENGTH_STRING0	vcom/usb_device_descriptor.h	152;"	d
USB_DESCRIPTOR_LENGTH_STRING1	vcom/usb_device_descriptor.h	153;"	d
USB_DESCRIPTOR_LENGTH_STRING2	vcom/usb_device_descriptor.h	154;"	d
USB_DESCRIPTOR_LENGTH_STRING3	vcom/usb_device_descriptor.h	155;"	d
USB_DESCRIPTOR_LENGTH_STRING4	vcom/usb_device_descriptor.h	156;"	d
USB_DESCRIPTOR_OTG_ATTRIBUTES_ADP_MASK	usb/include/usb_spec.h	170;"	d
USB_DESCRIPTOR_OTG_ATTRIBUTES_HNP_MASK	usb/include/usb_spec.h	169;"	d
USB_DESCRIPTOR_OTG_ATTRIBUTES_SRP_MASK	usb/include/usb_spec.h	168;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_CONTROL_CLOCK_MULTIPLIER_UNIT	usb/device/class/usb_device_audio.h	153;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_CONTROL_CLOCK_SELECTOR_UNIT	usb/device/class/usb_device_audio.h	152;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_CONTROL_CLOCK_SOURCE_UNIT	usb/device/class/usb_device_audio.h	151;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_CONTROL_FEATURE_UNIT	usb/device/class/usb_device_audio.h	45;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_CONTROL_HEADER	usb/device/class/usb_device_audio.h	42;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_CONTROL_INPUT_TERMINAL	usb/device/class/usb_device_audio.h	43;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_CONTROL_OUTPUT_TERMINAL	usb/device/class/usb_device_audio.h	44;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_CONTROL_SAMPLE_RATE_CONVERTER_UNIT	usb/device/class/usb_device_audio.h	154;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_STREAMING_FORMAT_TYPE	usb/device/class/usb_device_audio.h	49;"	d
USB_DESCRIPTOR_SUBTYPE_AUDIO_STREAMING_GENERAL	usb/device/class/usb_device_audio.h	48;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_EP_ENDPOINT	usb/device/class/usb_device_video.h	82;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_EP_GENERAL	usb/device/class/usb_device_video.h	81;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_EP_INTERRUPT	usb/device/class/usb_device_video.h	83;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_EP_UNDEFINED	usb/device/class/usb_device_video.h	80;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VC_DESCRIPTOR_UNDEFINED	usb/device/class/usb_device_video.h	48;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VC_ENCODING_UNIT	usb/device/class/usb_device_video.h	55;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VC_EXTENSION_UNIT	usb/device/class/usb_device_video.h	54;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VC_HEADER	usb/device/class/usb_device_video.h	49;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VC_INPUT_TERMINAL	usb/device/class/usb_device_video.h	50;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VC_OUTPUT_TERMINAL	usb/device/class/usb_device_video.h	51;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VC_PROCESSING_UNIT	usb/device/class/usb_device_video.h	53;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VC_SELECTOR_UNIT	usb/device/class/usb_device_video.h	52;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_COLORFORMAT	usb/device/class/usb_device_video.h	68;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_DV	usb/device/class/usb_device_video.h	67;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_FRAME_BASED	usb/device/class/usb_device_video.h	69;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_H264	usb/device/class/usb_device_video.h	72;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_H264_SIMULCAST	usb/device/class/usb_device_video.h	74;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_MJPEG	usb/device/class/usb_device_video.h	64;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_MPEG2TS	usb/device/class/usb_device_video.h	66;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_STREAM_BASED	usb/device/class/usb_device_video.h	71;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_UNCOMPRESSED	usb/device/class/usb_device_video.h	62;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_VP8	usb/device/class/usb_device_video.h	75;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FORMAT_VP8_SIMULCAST	usb/device/class/usb_device_video.h	77;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FRAME_FRAME_BASED	usb/device/class/usb_device_video.h	70;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FRAME_H264	usb/device/class/usb_device_video.h	73;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FRAME_MJPEG	usb/device/class/usb_device_video.h	65;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FRAME_UNCOMPRESSED	usb/device/class/usb_device_video.h	63;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_FRAME_VP8	usb/device/class/usb_device_video.h	76;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_INPUT_HEADER	usb/device/class/usb_device_video.h	59;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_OUTPUT_HEADER	usb/device/class/usb_device_video.h	60;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_STILL_IMAGE_FRAME	usb/device/class/usb_device_video.h	61;"	d
USB_DESCRIPTOR_SUBTYPE_VIDEO_VS_UNDEFINED	usb/device/class/usb_device_video.h	58;"	d
USB_DESCRIPTOR_TYPE_AUDIO_CS_INTERFACE	usb/device/class/usb_device_audio.h	39;"	d
USB_DESCRIPTOR_TYPE_BOS	usb/include/usb_spec.h	70;"	d
USB_DESCRIPTOR_TYPE_CDC_CS_ENDPOINT	vcom/usb_device_descriptor.h	159;"	d
USB_DESCRIPTOR_TYPE_CDC_CS_INTERFACE	vcom/usb_device_descriptor.h	158;"	d
USB_DESCRIPTOR_TYPE_CONFIGURE	usb/include/usb_spec.h	61;"	d
USB_DESCRIPTOR_TYPE_DEVICE	usb/include/usb_spec.h	60;"	d
USB_DESCRIPTOR_TYPE_DEVICE_CAPABILITY	usb/include/usb_spec.h	71;"	d
USB_DESCRIPTOR_TYPE_DEVICE_CAPABILITY_SUPERSPEED	usb/include/usb_spec.h	57;"	d
USB_DESCRIPTOR_TYPE_DEVICE_CAPABILITY_USB20_EXTENSION	usb/include/usb_spec.h	56;"	d
USB_DESCRIPTOR_TYPE_DEVICE_CAPABILITY_WIRELESS	usb/include/usb_spec.h	55;"	d
USB_DESCRIPTOR_TYPE_DEVICE_QUALITIER	usb/include/usb_spec.h	65;"	d
USB_DESCRIPTOR_TYPE_ENDPOINT	usb/include/usb_spec.h	64;"	d
USB_DESCRIPTOR_TYPE_ENDPOINT_COMPANION	usb/include/usb_spec.h	77;"	d
USB_DESCRIPTOR_TYPE_HID	usb/include/usb_spec.h	73;"	d
USB_DESCRIPTOR_TYPE_HID_PHYSICAL	usb/include/usb_spec.h	75;"	d
USB_DESCRIPTOR_TYPE_HID_REPORT	usb/include/usb_spec.h	74;"	d
USB_DESCRIPTOR_TYPE_INTERFAACE_POWER	usb/include/usb_spec.h	67;"	d
USB_DESCRIPTOR_TYPE_INTERFACE	usb/include/usb_spec.h	63;"	d
USB_DESCRIPTOR_TYPE_INTERFACE_ASSOCIATION	usb/include/usb_spec.h	69;"	d
USB_DESCRIPTOR_TYPE_OTG	usb/include/usb_spec.h	68;"	d
USB_DESCRIPTOR_TYPE_OTHER_SPEED_CONFIGURATION	usb/include/usb_spec.h	66;"	d
USB_DESCRIPTOR_TYPE_STRING	usb/include/usb_spec.h	62;"	d
USB_DESCRIPTOR_TYPE_VIDEO_CS_CONFIGURATION	usb/device/class/usb_device_video.h	42;"	d
USB_DESCRIPTOR_TYPE_VIDEO_CS_DEVICE	usb/device/class/usb_device_video.h	41;"	d
USB_DESCRIPTOR_TYPE_VIDEO_CS_ENDPOINT	usb/device/class/usb_device_video.h	45;"	d
USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE	usb/device/class/usb_device_video.h	44;"	d
USB_DESCRIPTOR_TYPE_VIDEO_CS_STRING	usb/device/class/usb_device_video.h	43;"	d
USB_DESCRIPTOR_TYPE_VIDEO_CS_UNDEFINED	usb/device/class/usb_device_video.h	40;"	d
USB_DEVCMDSTAT_DCON	device/LPC54018.h	14127;"	d
USB_DEVCMDSTAT_DCON_C	device/LPC54018.h	14139;"	d
USB_DEVCMDSTAT_DCON_C_MASK	device/LPC54018.h	14137;"	d
USB_DEVCMDSTAT_DCON_C_SHIFT	device/LPC54018.h	14138;"	d
USB_DEVCMDSTAT_DCON_MASK	device/LPC54018.h	14125;"	d
USB_DEVCMDSTAT_DCON_SHIFT	device/LPC54018.h	14126;"	d
USB_DEVCMDSTAT_DEV_ADDR	device/LPC54018.h	14076;"	d
USB_DEVCMDSTAT_DEV_ADDR_MASK	device/LPC54018.h	14074;"	d
USB_DEVCMDSTAT_DEV_ADDR_SHIFT	device/LPC54018.h	14075;"	d
USB_DEVCMDSTAT_DEV_EN	device/LPC54018.h	14079;"	d
USB_DEVCMDSTAT_DEV_EN_MASK	device/LPC54018.h	14077;"	d
USB_DEVCMDSTAT_DEV_EN_SHIFT	device/LPC54018.h	14078;"	d
USB_DEVCMDSTAT_DRES_C	device/LPC54018.h	14145;"	d
USB_DEVCMDSTAT_DRES_C_MASK	device/LPC54018.h	14143;"	d
USB_DEVCMDSTAT_DRES_C_SHIFT	device/LPC54018.h	14144;"	d
USB_DEVCMDSTAT_DSUS	device/LPC54018.h	14130;"	d
USB_DEVCMDSTAT_DSUS_C	device/LPC54018.h	14142;"	d
USB_DEVCMDSTAT_DSUS_C_MASK	device/LPC54018.h	14140;"	d
USB_DEVCMDSTAT_DSUS_C_SHIFT	device/LPC54018.h	14141;"	d
USB_DEVCMDSTAT_DSUS_MASK	device/LPC54018.h	14128;"	d
USB_DEVCMDSTAT_DSUS_SHIFT	device/LPC54018.h	14129;"	d
USB_DEVCMDSTAT_FORCE_NEEDCLK	device/LPC54018.h	14089;"	d
USB_DEVCMDSTAT_FORCE_NEEDCLK_MASK	device/LPC54018.h	14083;"	d
USB_DEVCMDSTAT_FORCE_NEEDCLK_SHIFT	device/LPC54018.h	14084;"	d
USB_DEVCMDSTAT_INTONNAK_AI	device/LPC54018.h	14110;"	d
USB_DEVCMDSTAT_INTONNAK_AI_MASK	device/LPC54018.h	14104;"	d
USB_DEVCMDSTAT_INTONNAK_AI_SHIFT	device/LPC54018.h	14105;"	d
USB_DEVCMDSTAT_INTONNAK_AO	device/LPC54018.h	14103;"	d
USB_DEVCMDSTAT_INTONNAK_AO_MASK	device/LPC54018.h	14097;"	d
USB_DEVCMDSTAT_INTONNAK_AO_SHIFT	device/LPC54018.h	14098;"	d
USB_DEVCMDSTAT_INTONNAK_CI	device/LPC54018.h	14124;"	d
USB_DEVCMDSTAT_INTONNAK_CI_MASK	device/LPC54018.h	14118;"	d
USB_DEVCMDSTAT_INTONNAK_CI_SHIFT	device/LPC54018.h	14119;"	d
USB_DEVCMDSTAT_INTONNAK_CO	device/LPC54018.h	14117;"	d
USB_DEVCMDSTAT_INTONNAK_CO_MASK	device/LPC54018.h	14111;"	d
USB_DEVCMDSTAT_INTONNAK_CO_SHIFT	device/LPC54018.h	14112;"	d
USB_DEVCMDSTAT_LPM_REWP	device/LPC54018.h	14136;"	d
USB_DEVCMDSTAT_LPM_REWP_MASK	device/LPC54018.h	14134;"	d
USB_DEVCMDSTAT_LPM_REWP_SHIFT	device/LPC54018.h	14135;"	d
USB_DEVCMDSTAT_LPM_SUP	device/LPC54018.h	14096;"	d
USB_DEVCMDSTAT_LPM_SUP_MASK	device/LPC54018.h	14090;"	d
USB_DEVCMDSTAT_LPM_SUP_SHIFT	device/LPC54018.h	14091;"	d
USB_DEVCMDSTAT_LPM_SUS	device/LPC54018.h	14133;"	d
USB_DEVCMDSTAT_LPM_SUS_MASK	device/LPC54018.h	14131;"	d
USB_DEVCMDSTAT_LPM_SUS_SHIFT	device/LPC54018.h	14132;"	d
USB_DEVCMDSTAT_SETUP	device/LPC54018.h	14082;"	d
USB_DEVCMDSTAT_SETUP_MASK	device/LPC54018.h	14080;"	d
USB_DEVCMDSTAT_SETUP_SHIFT	device/LPC54018.h	14081;"	d
USB_DEVCMDSTAT_VBUSDEBOUNCED	device/LPC54018.h	14148;"	d
USB_DEVCMDSTAT_VBUSDEBOUNCED_MASK	device/LPC54018.h	14146;"	d
USB_DEVCMDSTAT_VBUSDEBOUNCED_SHIFT	device/LPC54018.h	14147;"	d
USB_DEVICE_AUDIO_AUTOMATIC_GAIN_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	187;"	d
USB_DEVICE_AUDIO_BASS_BOOST_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	189;"	d
USB_DEVICE_AUDIO_BASS_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	183;"	d
USB_DEVICE_AUDIO_CONTROL_SUBCLASS	usb/device/class/usb_device_audio.h	36;"	d
USB_DEVICE_AUDIO_COPY_PROTECT_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	178;"	d
USB_DEVICE_AUDIO_CS_CLOCK_VALID_CONTROL	usb/device/class/usb_device_audio.h	158;"	d
USB_DEVICE_AUDIO_CS_CONTROL_UNDEFINED	usb/device/class/usb_device_audio.h	156;"	d
USB_DEVICE_AUDIO_CS_SAM_FREQ_CONTROL	usb/device/class/usb_device_audio.h	157;"	d
USB_DEVICE_AUDIO_DELAY_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	188;"	d
USB_DEVICE_AUDIO_FU_MUTE_CONTROL	usb/device/class/usb_device_audio.h	161;"	d
USB_DEVICE_AUDIO_FU_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	162;"	d
USB_DEVICE_AUDIO_GET_CUR_AUTOMATIC_GAIN_CONTROL	usb/device/class/usb_device_audio.h	58;"	d
USB_DEVICE_AUDIO_GET_CUR_BASS_BOOST_CONTROL	usb/device/class/usb_device_audio.h	60;"	d
USB_DEVICE_AUDIO_GET_CUR_BASS_CONTROL	usb/device/class/usb_device_audio.h	54;"	d
USB_DEVICE_AUDIO_GET_CUR_CLOCK_VALID_CONTROL	usb/device/class/usb_device_audio.h	142;"	d
USB_DEVICE_AUDIO_GET_CUR_DELAY_CONTROL	usb/device/class/usb_device_audio.h	59;"	d
USB_DEVICE_AUDIO_GET_CUR_GRAPHIC_EQUALIZER_CONTROL	usb/device/class/usb_device_audio.h	57;"	d
USB_DEVICE_AUDIO_GET_CUR_LOUDNESS_CONTROL	usb/device/class/usb_device_audio.h	61;"	d
USB_DEVICE_AUDIO_GET_CUR_MID_CONTROL	usb/device/class/usb_device_audio.h	55;"	d
USB_DEVICE_AUDIO_GET_CUR_MUTE_CONTROL	usb/device/class/usb_device_audio.h	52;"	d
USB_DEVICE_AUDIO_GET_CUR_MUTE_CONTROL_AUDIO20	usb/device/class/usb_device_audio.h	143;"	d
USB_DEVICE_AUDIO_GET_CUR_SAMPLING_FREQ_CONTROL	usb/device/class/usb_device_audio.h	125;"	d
USB_DEVICE_AUDIO_GET_CUR_SAM_FREQ_CONTROL	usb/device/class/usb_device_audio.h	140;"	d
USB_DEVICE_AUDIO_GET_CUR_TREBLE_CONTROL	usb/device/class/usb_device_audio.h	56;"	d
USB_DEVICE_AUDIO_GET_CUR_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	53;"	d
USB_DEVICE_AUDIO_GET_CUR_VOLUME_CONTROL_AUDIO20	usb/device/class/usb_device_audio.h	145;"	d
USB_DEVICE_AUDIO_GET_CUR_VOLUME_REQUEST	usb/device/class/usb_device_audio.h	172;"	d
USB_DEVICE_AUDIO_GET_MAX_BASS_CONTROL	usb/device/class/usb_device_audio.h	73;"	d
USB_DEVICE_AUDIO_GET_MAX_DELAY_CONTROL	usb/device/class/usb_device_audio.h	77;"	d
USB_DEVICE_AUDIO_GET_MAX_GRAPHIC_EQUALIZER_CONTROL	usb/device/class/usb_device_audio.h	76;"	d
USB_DEVICE_AUDIO_GET_MAX_MID_CONTROL	usb/device/class/usb_device_audio.h	74;"	d
USB_DEVICE_AUDIO_GET_MAX_SAMPLING_FREQ_CONTROL	usb/device/class/usb_device_audio.h	127;"	d
USB_DEVICE_AUDIO_GET_MAX_TREBLE_CONTROL	usb/device/class/usb_device_audio.h	75;"	d
USB_DEVICE_AUDIO_GET_MAX_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	72;"	d
USB_DEVICE_AUDIO_GET_MAX_VOLUME_REQUEST	usb/device/class/usb_device_audio.h	174;"	d
USB_DEVICE_AUDIO_GET_MIN_BASS_CONTROL	usb/device/class/usb_device_audio.h	65;"	d
USB_DEVICE_AUDIO_GET_MIN_DELAY_CONTROL	usb/device/class/usb_device_audio.h	69;"	d
USB_DEVICE_AUDIO_GET_MIN_GRAPHIC_EQUALIZER_CONTROL	usb/device/class/usb_device_audio.h	68;"	d
USB_DEVICE_AUDIO_GET_MIN_MID_CONTROL	usb/device/class/usb_device_audio.h	66;"	d
USB_DEVICE_AUDIO_GET_MIN_SAMPLING_FREQ_CONTROL	usb/device/class/usb_device_audio.h	126;"	d
USB_DEVICE_AUDIO_GET_MIN_TREBLE_CONTROL	usb/device/class/usb_device_audio.h	67;"	d
USB_DEVICE_AUDIO_GET_MIN_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	64;"	d
USB_DEVICE_AUDIO_GET_MIN_VOLUME_REQUEST	usb/device/class/usb_device_audio.h	173;"	d
USB_DEVICE_AUDIO_GET_RANGE_SAM_FREQ_CONTROL	usb/device/class/usb_device_audio.h	141;"	d
USB_DEVICE_AUDIO_GET_RANGE_VOLUME_CONTROL_AUDIO20	usb/device/class/usb_device_audio.h	146;"	d
USB_DEVICE_AUDIO_GET_REQUEST_ENDPOINT	usb/device/class/usb_device_audio.h	207;"	d
USB_DEVICE_AUDIO_GET_REQUEST_INTERFACE	usb/device/class/usb_device_audio.h	206;"	d
USB_DEVICE_AUDIO_GET_RES_BASS_CONTROL	usb/device/class/usb_device_audio.h	81;"	d
USB_DEVICE_AUDIO_GET_RES_DELAY_CONTROL	usb/device/class/usb_device_audio.h	85;"	d
USB_DEVICE_AUDIO_GET_RES_GRAPHIC_EQUALIZER_CONTROL	usb/device/class/usb_device_audio.h	84;"	d
USB_DEVICE_AUDIO_GET_RES_MID_CONTROL	usb/device/class/usb_device_audio.h	82;"	d
USB_DEVICE_AUDIO_GET_RES_SAMPLING_FREQ_CONTROL	usb/device/class/usb_device_audio.h	128;"	d
USB_DEVICE_AUDIO_GET_RES_TREBLE_CONTROL	usb/device/class/usb_device_audio.h	83;"	d
USB_DEVICE_AUDIO_GET_RES_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	80;"	d
USB_DEVICE_AUDIO_GET_RES_VOLUME_REQUEST	usb/device/class/usb_device_audio.h	175;"	d
USB_DEVICE_AUDIO_GRAPHIC_EQUALIZER_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	186;"	d
USB_DEVICE_AUDIO_LOUDNESS_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	190;"	d
USB_DEVICE_AUDIO_MID_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	184;"	d
USB_DEVICE_AUDIO_MUTE_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	181;"	d
USB_DEVICE_AUDIO_PITCH_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	194;"	d
USB_DEVICE_AUDIO_REQUEST_CUR	usb/device/class/usb_device_audio.h	159;"	d
USB_DEVICE_AUDIO_REQUEST_RANGE	usb/device/class/usb_device_audio.h	160;"	d
USB_DEVICE_AUDIO_SAMPLING_FREQ_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	193;"	d
USB_DEVICE_AUDIO_SET_CUR_AUTOMATIC_GAIN_CONTROL	usb/device/class/usb_device_audio.h	94;"	d
USB_DEVICE_AUDIO_SET_CUR_BASS_BOOST_CONTROL	usb/device/class/usb_device_audio.h	96;"	d
USB_DEVICE_AUDIO_SET_CUR_BASS_CONTROL	usb/device/class/usb_device_audio.h	90;"	d
USB_DEVICE_AUDIO_SET_CUR_CLOCK_VALID_CONTROL	usb/device/class/usb_device_audio.h	139;"	d
USB_DEVICE_AUDIO_SET_CUR_DELAY_CONTROL	usb/device/class/usb_device_audio.h	95;"	d
USB_DEVICE_AUDIO_SET_CUR_GRAPHIC_EQUALIZER_CONTROL	usb/device/class/usb_device_audio.h	93;"	d
USB_DEVICE_AUDIO_SET_CUR_LOUDNESS_CONTROL	usb/device/class/usb_device_audio.h	97;"	d
USB_DEVICE_AUDIO_SET_CUR_MID_CONTROL	usb/device/class/usb_device_audio.h	91;"	d
USB_DEVICE_AUDIO_SET_CUR_MUTE_CONTROL	usb/device/class/usb_device_audio.h	88;"	d
USB_DEVICE_AUDIO_SET_CUR_MUTE_CONTROL_AUDIO20	usb/device/class/usb_device_audio.h	144;"	d
USB_DEVICE_AUDIO_SET_CUR_PITCH_CONTROL	usb/device/class/usb_device_audio.h	98;"	d
USB_DEVICE_AUDIO_SET_CUR_SAMPLING_FREQ_CONTROL	usb/device/class/usb_device_audio.h	131;"	d
USB_DEVICE_AUDIO_SET_CUR_SAM_FREQ_CONTROL	usb/device/class/usb_device_audio.h	138;"	d
USB_DEVICE_AUDIO_SET_CUR_TREBLE_CONTROL	usb/device/class/usb_device_audio.h	92;"	d
USB_DEVICE_AUDIO_SET_CUR_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	89;"	d
USB_DEVICE_AUDIO_SET_CUR_VOLUME_CONTROL_AUDIO20	usb/device/class/usb_device_audio.h	147;"	d
USB_DEVICE_AUDIO_SET_CUR_VOLUME_REQUEST	usb/device/class/usb_device_audio.h	167;"	d
USB_DEVICE_AUDIO_SET_MAX_BASS_CONTROL	usb/device/class/usb_device_audio.h	110;"	d
USB_DEVICE_AUDIO_SET_MAX_DELAY_CONTROL	usb/device/class/usb_device_audio.h	114;"	d
USB_DEVICE_AUDIO_SET_MAX_GRAPHIC_EQUALIZER_CONTROL	usb/device/class/usb_device_audio.h	113;"	d
USB_DEVICE_AUDIO_SET_MAX_MID_CONTROL	usb/device/class/usb_device_audio.h	111;"	d
USB_DEVICE_AUDIO_SET_MAX_SAMPLING_FREQ_CONTROL	usb/device/class/usb_device_audio.h	133;"	d
USB_DEVICE_AUDIO_SET_MAX_TREBLE_CONTROL	usb/device/class/usb_device_audio.h	112;"	d
USB_DEVICE_AUDIO_SET_MAX_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	109;"	d
USB_DEVICE_AUDIO_SET_MAX_VOLUME_REQUEST	usb/device/class/usb_device_audio.h	169;"	d
USB_DEVICE_AUDIO_SET_MIN_BASS_CONTROL	usb/device/class/usb_device_audio.h	102;"	d
USB_DEVICE_AUDIO_SET_MIN_DELAY_CONTROL	usb/device/class/usb_device_audio.h	106;"	d
USB_DEVICE_AUDIO_SET_MIN_GRAPHIC_EQUALIZER_CONTROL	usb/device/class/usb_device_audio.h	105;"	d
USB_DEVICE_AUDIO_SET_MIN_MID_CONTROL	usb/device/class/usb_device_audio.h	103;"	d
USB_DEVICE_AUDIO_SET_MIN_SAMPLING_FREQ_CONTROL	usb/device/class/usb_device_audio.h	132;"	d
USB_DEVICE_AUDIO_SET_MIN_TREBLE_CONTROL	usb/device/class/usb_device_audio.h	104;"	d
USB_DEVICE_AUDIO_SET_MIN_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	101;"	d
USB_DEVICE_AUDIO_SET_MIN_VOLUME_REQUEST	usb/device/class/usb_device_audio.h	168;"	d
USB_DEVICE_AUDIO_SET_REQUEST_ENDPOINT	usb/device/class/usb_device_audio.h	203;"	d
USB_DEVICE_AUDIO_SET_REQUEST_INTERFACE	usb/device/class/usb_device_audio.h	202;"	d
USB_DEVICE_AUDIO_SET_RES_BASS_CONTROL	usb/device/class/usb_device_audio.h	118;"	d
USB_DEVICE_AUDIO_SET_RES_DELAY_CONTROL	usb/device/class/usb_device_audio.h	122;"	d
USB_DEVICE_AUDIO_SET_RES_GRAPHIC_EQUALIZER_CONTROL	usb/device/class/usb_device_audio.h	121;"	d
USB_DEVICE_AUDIO_SET_RES_MID_CONTROL	usb/device/class/usb_device_audio.h	119;"	d
USB_DEVICE_AUDIO_SET_RES_SAMPLING_FREQ_CONTROL	usb/device/class/usb_device_audio.h	134;"	d
USB_DEVICE_AUDIO_SET_RES_TREBLE_CONTROL	usb/device/class/usb_device_audio.h	120;"	d
USB_DEVICE_AUDIO_SET_RES_VOLUME_CONTROL	usb/device/class/usb_device_audio.h	117;"	d
USB_DEVICE_AUDIO_SET_RES_VOLUME_REQUEST	usb/device/class/usb_device_audio.h	170;"	d
USB_DEVICE_AUDIO_STREAM_SUBCLASS	usb/device/class/usb_device_audio.h	35;"	d
USB_DEVICE_AUDIO_TREBLE_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	185;"	d
USB_DEVICE_AUDIO_VOLUME_CONTROL_SELECTOR	usb/device/class/usb_device_audio.h	182;"	d
USB_DEVICE_CCID_ABORT	usb/device/class/usb_device_ccid.h	93;"	d
USB_DEVICE_CCID_BUFFER_4BYTE_ALIGN	usb/device/class/usb_device_ccid.h	890;"	d
USB_DEVICE_CCID_CLASS_CODE	usb/device/class/usb_device_ccid.h	36;"	d
USB_DEVICE_CCID_CLCOK_STATUS_CLOCK_RUNNING	usb/device/class/usb_device_ccid.h	116;"	d
USB_DEVICE_CCID_CLCOK_STATUS_CLOCK_STOPPED_IN_H	usb/device/class/usb_device_ccid.h	118;"	d
USB_DEVICE_CCID_CLCOK_STATUS_CLOCK_STOPPED_IN_L	usb/device/class/usb_device_ccid.h	117;"	d
USB_DEVICE_CCID_CLCOK_STATUS_CLOCK_STOPPED_UNKNOWN	usb/device/class/usb_device_ccid.h	119;"	d
USB_DEVICE_CCID_COMMAND_HEADER_LENGTH	usb/device/class/usb_device_ccid.h	181;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_AUTO_ACTIVE_ON_INSERTING	usb/device/class/usb_device_ccid.h	71;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_AUTO_BAUD_RATE_CHANGE	usb/device/class/usb_device_ccid.h	74;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_AUTO_CONFIG_BASED_ON_ATR	usb/device/class/usb_device_ccid.h	70;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_AUTO_FREQUENCY_CHANGE	usb/device/class/usb_device_ccid.h	73;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_AUTO_IFSD_EXCHANGE_AS_FIRST	usb/device/class/usb_device_ccid.h	79;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_AUTO_NEGOTIATION	usb/device/class/usb_device_ccid.h	75;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_AUTO_PPS	usb/device/class/usb_device_ccid.h	76;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_AUTO_VOLTAGE_SELECTION	usb/device/class/usb_device_ccid.h	72;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_CAN_SET_IN_STOP_MODE	usb/device/class/usb_device_ccid.h	77;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_NAD_VLAUE	usb/device/class/usb_device_ccid.h	78;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_NO	usb/device/class/usb_device_ccid.h	69;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_SHORT_APDU_LEVEL_EXCHANGES	usb/device/class/usb_device_ccid.h	81;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_SHORT_EXTENDED_APDU_LEVEL_EXCHANGES	usb/device/class/usb_device_ccid.h	82;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_SUPPORT_SUPPEND	usb/device/class/usb_device_ccid.h	83;"	d
USB_DEVICE_CCID_DESCRIPTOR_FEATURES_BM_TPDU_LEVEL_EXCHANGES	usb/device/class/usb_device_ccid.h	80;"	d
USB_DEVICE_CCID_DESCRIPTOR_LENGTH	usb/device/class/usb_device_ccid.h	48;"	d
USB_DEVICE_CCID_DESCRIPTOR_MECHANICAL_BM_ACCEPT	usb/device/class/usb_device_ccid.h	63;"	d
USB_DEVICE_CCID_DESCRIPTOR_MECHANICAL_BM_CAPTURE	usb/device/class/usb_device_ccid.h	65;"	d
USB_DEVICE_CCID_DESCRIPTOR_MECHANICAL_BM_EJECTION	usb/device/class/usb_device_ccid.h	64;"	d
USB_DEVICE_CCID_DESCRIPTOR_MECHANICAL_BM_LOCK_UNLCOK	usb/device/class/usb_device_ccid.h	66;"	d
USB_DEVICE_CCID_DESCRIPTOR_MECHANICAL_BM_NO	usb/device/class/usb_device_ccid.h	62;"	d
USB_DEVICE_CCID_DESCRIPTOR_PIN_SUPPORT_BM_MODIFICATION_SUPPORTED	usb/device/class/usb_device_ccid.h	88;"	d
USB_DEVICE_CCID_DESCRIPTOR_PIN_SUPPORT_BM_NO	usb/device/class/usb_device_ccid.h	86;"	d
USB_DEVICE_CCID_DESCRIPTOR_PIN_SUPPORT_BM_VERIFICATION_SUPPORTED	usb/device/class/usb_device_ccid.h	87;"	d
USB_DEVICE_CCID_DESCRIPTOR_PROTOCOLS_BM_T0	usb/device/class/usb_device_ccid.h	58;"	d
USB_DEVICE_CCID_DESCRIPTOR_PROTOCOLS_BM_T1	usb/device/class/usb_device_ccid.h	59;"	d
USB_DEVICE_CCID_DESCRIPTOR_TYPE	usb/device/class/usb_device_ccid.h	50;"	d
USB_DEVICE_CCID_DESCRIPTOR_VOLTAGE_SUPPORT_BM_1V8	usb/device/class/usb_device_ccid.h	55;"	d
USB_DEVICE_CCID_DESCRIPTOR_VOLTAGE_SUPPORT_BM_3V	usb/device/class/usb_device_ccid.h	54;"	d
USB_DEVICE_CCID_DESCRIPTOR_VOLTAGE_SUPPORT_BM_5V	usb/device/class/usb_device_ccid.h	53;"	d
USB_DEVICE_CCID_GET_CLOCK_FREQUENCIES	usb/device/class/usb_device_ccid.h	94;"	d
USB_DEVICE_CCID_GET_DATA_RATES	usb/device/class/usb_device_ccid.h	95;"	d
USB_DEVICE_CCID_PC_TO_RDR_ABORT	usb/device/class/usb_device_ccid.h	110;"	d
USB_DEVICE_CCID_PC_TO_RDR_ESCAPE	usb/device/class/usb_device_ccid.h	105;"	d
USB_DEVICE_CCID_PC_TO_RDR_GETPARAMETERS	usb/device/class/usb_device_ccid.h	102;"	d
USB_DEVICE_CCID_PC_TO_RDR_GETSLOTSTATUS	usb/device/class/usb_device_ccid.h	100;"	d
USB_DEVICE_CCID_PC_TO_RDR_ICCCLOCK	usb/device/class/usb_device_ccid.h	106;"	d
USB_DEVICE_CCID_PC_TO_RDR_ICCPOWEROFF	usb/device/class/usb_device_ccid.h	99;"	d
USB_DEVICE_CCID_PC_TO_RDR_ICCPOWERON	usb/device/class/usb_device_ccid.h	98;"	d
USB_DEVICE_CCID_PC_TO_RDR_MECHANICAL	usb/device/class/usb_device_ccid.h	109;"	d
USB_DEVICE_CCID_PC_TO_RDR_RESETPARAMETERS	usb/device/class/usb_device_ccid.h	103;"	d
USB_DEVICE_CCID_PC_TO_RDR_SECURE	usb/device/class/usb_device_ccid.h	108;"	d
USB_DEVICE_CCID_PC_TO_RDR_SETDATARATEANDCLOCKFREQUENCY	usb/device/class/usb_device_ccid.h	111;"	d
USB_DEVICE_CCID_PC_TO_RDR_SETPARAMETERS	usb/device/class/usb_device_ccid.h	104;"	d
USB_DEVICE_CCID_PC_TO_RDR_T0APDU	usb/device/class/usb_device_ccid.h	107;"	d
USB_DEVICE_CCID_PC_TO_RDR_XFRBLOCK	usb/device/class/usb_device_ccid.h	101;"	d
USB_DEVICE_CCID_PROTOCOL_CODE	usb/device/class/usb_device_ccid.h	40;"	d
USB_DEVICE_CCID_PROTOCOL_NUMBER_T0	usb/device/class/usb_device_ccid.h	121;"	d
USB_DEVICE_CCID_PROTOCOL_NUMBER_T1	usb/device/class/usb_device_ccid.h	122;"	d
USB_DEVICE_CCID_RDR_TO_PC_DATABLOCK	usb/device/class/usb_device_ccid.h	114;"	d
USB_DEVICE_CCID_RDR_TO_PC_DATARATEANDCLOCKFREQUENCY	usb/device/class/usb_device_ccid.h	124;"	d
USB_DEVICE_CCID_RDR_TO_PC_ESCAPE	usb/device/class/usb_device_ccid.h	123;"	d
USB_DEVICE_CCID_RDR_TO_PC_HARDWAREERROR	usb/device/class/usb_device_ccid.h	128;"	d
USB_DEVICE_CCID_RDR_TO_PC_NOTIFYSLOTCHANGE	usb/device/class/usb_device_ccid.h	127;"	d
USB_DEVICE_CCID_RDR_TO_PC_PARAMETERS	usb/device/class/usb_device_ccid.h	120;"	d
USB_DEVICE_CCID_RDR_TO_PC_SLOTSTATUS	usb/device/class/usb_device_ccid.h	115;"	d
USB_DEVICE_CCID_RESPONSE_HEADER_LENGTH	usb/device/class/usb_device_ccid.h	183;"	d
USB_DEVICE_CCID_SLOT_ERROR_BAD_ATR_TCK	usb/device/class/usb_device_ccid.h	152;"	d
USB_DEVICE_CCID_SLOT_ERROR_BAD_ATR_TS	usb/device/class/usb_device_ccid.h	151;"	d
USB_DEVICE_CCID_SLOT_ERROR_BAD_LENGTH	usb/device/class/usb_device_ccid.h	133;"	d
USB_DEVICE_CCID_SLOT_ERROR_BAD_LEVEL_PARAMETER	usb/device/class/usb_device_ccid.h	137;"	d
USB_DEVICE_CCID_SLOT_ERROR_BUSY_WITH_AUTO_SEQUENCE	usb/device/class/usb_device_ccid.h	157;"	d
USB_DEVICE_CCID_SLOT_ERROR_CLOCK_STOP_INVALID	usb/device/class/usb_device_ccid.h	142;"	d
USB_DEVICE_CCID_SLOT_ERROR_CMD_ABORTED	usb/device/class/usb_device_ccid.h	146;"	d
USB_DEVICE_CCID_SLOT_ERROR_CMD_NOT_ABORTED	usb/device/class/usb_device_ccid.h	162;"	d
USB_DEVICE_CCID_SLOT_ERROR_CMD_SLOT_BUSY	usb/device/class/usb_device_ccid.h	160;"	d
USB_DEVICE_CCID_SLOT_ERROR_COMMAND_NOT_SUPPORTED	usb/device/class/usb_device_ccid.h	132;"	d
USB_DEVICE_CCID_SLOT_ERROR_DEACTIVATED_PROCTOCL	usb/device/class/usb_device_ccid.h	156;"	d
USB_DEVICE_CCID_SLOT_ERROR_FI_DI_INVALID	usb/device/class/usb_device_ccid.h	138;"	d
USB_DEVICE_CCID_SLOT_ERROR_GUARD_TIME_NOT_SUPPORTED	usb/device/class/usb_device_ccid.h	140;"	d
USB_DEVICE_CCID_SLOT_ERROR_HW_ERROR	usb/device/class/usb_device_ccid.h	150;"	d
USB_DEVICE_CCID_SLOT_ERROR_ICC_CLASS_NOT_SUPPORTED	usb/device/class/usb_device_ccid.h	154;"	d
USB_DEVICE_CCID_SLOT_ERROR_ICC_MUTE	usb/device/class/usb_device_ccid.h	147;"	d
USB_DEVICE_CCID_SLOT_ERROR_ICC_PROTOCOL_NOT_SUPPORTED	usb/device/class/usb_device_ccid.h	153;"	d
USB_DEVICE_CCID_SLOT_ERROR_IFSC_SIZE_INVALID	usb/device/class/usb_device_ccid.h	143;"	d
USB_DEVICE_CCID_SLOT_ERROR_INVALID_TCCKTS_PARAMETER	usb/device/class/usb_device_ccid.h	139;"	d
USB_DEVICE_CCID_SLOT_ERROR_NAD_VALUE_INVALID	usb/device/class/usb_device_ccid.h	144;"	d
USB_DEVICE_CCID_SLOT_ERROR_PIN_CANCELLED	usb/device/class/usb_device_ccid.h	159;"	d
USB_DEVICE_CCID_SLOT_ERROR_PIN_TIMEOUT	usb/device/class/usb_device_ccid.h	158;"	d
USB_DEVICE_CCID_SLOT_ERROR_POWER_SELECT	usb/device/class/usb_device_ccid.h	135;"	d
USB_DEVICE_CCID_SLOT_ERROR_PROCEDURE_BYTE_CONFICT	usb/device/class/usb_device_ccid.h	155;"	d
USB_DEVICE_CCID_SLOT_ERROR_PROTOCOL_INVALID	usb/device/class/usb_device_ccid.h	136;"	d
USB_DEVICE_CCID_SLOT_ERROR_SLOT_NOT_EXIST	usb/device/class/usb_device_ccid.h	134;"	d
USB_DEVICE_CCID_SLOT_ERROR_XFR_OVERRUN	usb/device/class/usb_device_ccid.h	149;"	d
USB_DEVICE_CCID_SLOT_ERROR_XFR_PARITY_ERROR	usb/device/class/usb_device_ccid.h	148;"	d
USB_DEVICE_CCID_SLOT_ERROR_xWI_INVALID	usb/device/class/usb_device_ccid.h	141;"	d
USB_DEVICE_CCID_SLOT_STATUS_COMMAND_STATUS_FAILED	usb/device/class/usb_device_ccid.h	177;"	d
USB_DEVICE_CCID_SLOT_STATUS_COMMAND_STATUS_MASK	usb/device/class/usb_device_ccid.h	168;"	d
USB_DEVICE_CCID_SLOT_STATUS_COMMAND_STATUS_PROCESSED_NO_ERROR	usb/device/class/usb_device_ccid.h	176;"	d
USB_DEVICE_CCID_SLOT_STATUS_COMMAND_STATUS_SHIFT	usb/device/class/usb_device_ccid.h	167;"	d
USB_DEVICE_CCID_SLOT_STATUS_COMMAND_STATUS_TIME_EXTENSION_REQUESTED	usb/device/class/usb_device_ccid.h	178;"	d
USB_DEVICE_CCID_SLOT_STATUS_ICC_NOT_PRESENT	usb/device/class/usb_device_ccid.h	173;"	d
USB_DEVICE_CCID_SLOT_STATUS_ICC_PRESENT_ACTIVE	usb/device/class/usb_device_ccid.h	171;"	d
USB_DEVICE_CCID_SLOT_STATUS_ICC_PRESENT_INACTIVE	usb/device/class/usb_device_ccid.h	172;"	d
USB_DEVICE_CCID_SLOT_STATUS_ICC_STATUS_MASK	usb/device/class/usb_device_ccid.h	166;"	d
USB_DEVICE_CCID_SLOT_STATUS_ICC_STATUS_SHIFT	usb/device/class/usb_device_ccid.h	165;"	d
USB_DEVICE_CCID_SUBCLASS_CODE	usb/device/class/usb_device_ccid.h	38;"	d
USB_DEVICE_CDC_CONTROL_SIG_BITMAP_CARRIER_ACTIVATION	usb/device/class/usb_device_cdc_acm.h	84;"	d
USB_DEVICE_CDC_CONTROL_SIG_BITMAP_DTE_PRESENCE	usb/device/class/usb_device_cdc_acm.h	86;"	d
USB_DEVICE_CDC_FEATURE_ABSTRACT_STATE	usb/device/class/usb_device_cdc_acm.h	81;"	d
USB_DEVICE_CDC_FEATURE_COUNTRY_SETTING	usb/device/class/usb_device_cdc_acm.h	82;"	d
USB_DEVICE_CDC_NOTIF_AUX_JACK_HOOK_STATE	usb/device/class/usb_device_cdc_acm.h	73;"	d
USB_DEVICE_CDC_NOTIF_CALL_STATE_CHANGE	usb/device/class/usb_device_cdc_acm.h	76;"	d
USB_DEVICE_CDC_NOTIF_CONNECTION_SPEED_CHANGE	usb/device/class/usb_device_cdc_acm.h	78;"	d
USB_DEVICE_CDC_NOTIF_LINE_STATE_CHANGE	usb/device/class/usb_device_cdc_acm.h	77;"	d
USB_DEVICE_CDC_NOTIF_NETWORK_CONNECTION	usb/device/class/usb_device_cdc_acm.h	71;"	d
USB_DEVICE_CDC_NOTIF_RESPONSE_AVAIL	usb/device/class/usb_device_cdc_acm.h	72;"	d
USB_DEVICE_CDC_NOTIF_RING_DETECT	usb/device/class/usb_device_cdc_acm.h	74;"	d
USB_DEVICE_CDC_NOTIF_SERIAL_STATE	usb/device/class/usb_device_cdc_acm.h	75;"	d
USB_DEVICE_CDC_REQUEST_CLEAR_COMM_FEATURE	usb/device/class/usb_device_cdc_acm.h	29;"	d
USB_DEVICE_CDC_REQUEST_CLEAR_UNIT_PARAMETER	usb/device/class/usb_device_cdc_acm.h	50;"	d
USB_DEVICE_CDC_REQUEST_DIAL_DIGITS	usb/device/class/usb_device_cdc_acm.h	47;"	d
USB_DEVICE_CDC_REQUEST_GET_ATM_DEVICE_STATISTICS	usb/device/class/usb_device_cdc_acm.h	63;"	d
USB_DEVICE_CDC_REQUEST_GET_ATM_VC_STATISTICS	usb/device/class/usb_device_cdc_acm.h	66;"	d
USB_DEVICE_CDC_REQUEST_GET_COMM_FEATURE	usb/device/class/usb_device_cdc_acm.h	28;"	d
USB_DEVICE_CDC_REQUEST_GET_ENCAPSULATED_RESPONSE	usb/device/class/usb_device_cdc_acm.h	25;"	d
USB_DEVICE_CDC_REQUEST_GET_ETHERNET_POW_PATTER_FILTER	usb/device/class/usb_device_cdc_acm.h	56;"	d
USB_DEVICE_CDC_REQUEST_GET_ETHERNET_STATISTIC	usb/device/class/usb_device_cdc_acm.h	60;"	d
USB_DEVICE_CDC_REQUEST_GET_LINE_CODING	usb/device/class/usb_device_cdc_acm.h	37;"	d
USB_DEVICE_CDC_REQUEST_GET_LINE_PARAMS	usb/device/class/usb_device_cdc_acm.h	46;"	d
USB_DEVICE_CDC_REQUEST_GET_OPERATION_PARAM	usb/device/class/usb_device_cdc_acm.h	44;"	d
USB_DEVICE_CDC_REQUEST_GET_RINGER_PARAMS	usb/device/class/usb_device_cdc_acm.h	42;"	d
USB_DEVICE_CDC_REQUEST_GET_UNIT_PARAMETER	usb/device/class/usb_device_cdc_acm.h	49;"	d
USB_DEVICE_CDC_REQUEST_MDLM_SPECIFIC_REQUESTS_MASK	usb/device/class/usb_device_cdc_acm.h	68;"	d
USB_DEVICE_CDC_REQUEST_PULSE_SETUP	usb/device/class/usb_device_cdc_acm.h	32;"	d
USB_DEVICE_CDC_REQUEST_RING_AUX_JACK	usb/device/class/usb_device_cdc_acm.h	35;"	d
USB_DEVICE_CDC_REQUEST_SEND_BREAK	usb/device/class/usb_device_cdc_acm.h	40;"	d
USB_DEVICE_CDC_REQUEST_SEND_ENCAPSULATED_COMMAND	usb/device/class/usb_device_cdc_acm.h	23;"	d
USB_DEVICE_CDC_REQUEST_SEND_PULSE	usb/device/class/usb_device_cdc_acm.h	33;"	d
USB_DEVICE_CDC_REQUEST_SET_ATM_DATA_FORMAT	usb/device/class/usb_device_cdc_acm.h	62;"	d
USB_DEVICE_CDC_REQUEST_SET_ATM_DEFAULT_VC	usb/device/class/usb_device_cdc_acm.h	65;"	d
USB_DEVICE_CDC_REQUEST_SET_AUX_LINE_STATE	usb/device/class/usb_device_cdc_acm.h	30;"	d
USB_DEVICE_CDC_REQUEST_SET_COMM_FEATURE	usb/device/class/usb_device_cdc_acm.h	27;"	d
USB_DEVICE_CDC_REQUEST_SET_CONTROL_LINE_STATE	usb/device/class/usb_device_cdc_acm.h	38;"	d
USB_DEVICE_CDC_REQUEST_SET_ETHERNET_MULTICAST_FILTERS	usb/device/class/usb_device_cdc_acm.h	52;"	d
USB_DEVICE_CDC_REQUEST_SET_ETHERNET_PACKET_FILTER	usb/device/class/usb_device_cdc_acm.h	58;"	d
USB_DEVICE_CDC_REQUEST_SET_ETHERNET_POW_PATTER_FILTER	usb/device/class/usb_device_cdc_acm.h	54;"	d
USB_DEVICE_CDC_REQUEST_SET_HOOK_STATE	usb/device/class/usb_device_cdc_acm.h	31;"	d
USB_DEVICE_CDC_REQUEST_SET_LINE_CODING	usb/device/class/usb_device_cdc_acm.h	36;"	d
USB_DEVICE_CDC_REQUEST_SET_LINE_PARAMS	usb/device/class/usb_device_cdc_acm.h	45;"	d
USB_DEVICE_CDC_REQUEST_SET_OPERATION_PARAM	usb/device/class/usb_device_cdc_acm.h	43;"	d
USB_DEVICE_CDC_REQUEST_SET_PULSE_TIME	usb/device/class/usb_device_cdc_acm.h	34;"	d
USB_DEVICE_CDC_REQUEST_SET_RINGER_PARAMS	usb/device/class/usb_device_cdc_acm.h	41;"	d
USB_DEVICE_CDC_REQUEST_SET_UNIT_PARAMETER	usb/device/class/usb_device_cdc_acm.h	48;"	d
USB_DEVICE_CDC_UART_STATE_BREAK	usb/device/class/usb_device_cdc_acm.h	90;"	d
USB_DEVICE_CDC_UART_STATE_FRAMING	usb/device/class/usb_device_cdc_acm.h	92;"	d
USB_DEVICE_CDC_UART_STATE_OVERRUN	usb/device/class/usb_device_cdc_acm.h	94;"	d
USB_DEVICE_CDC_UART_STATE_PARITY	usb/device/class/usb_device_cdc_acm.h	93;"	d
USB_DEVICE_CDC_UART_STATE_RING_SIGNAL	usb/device/class/usb_device_cdc_acm.h	91;"	d
USB_DEVICE_CDC_UART_STATE_RX_CARRIER	usb/device/class/usb_device_cdc_acm.h	88;"	d
USB_DEVICE_CDC_UART_STATE_TX_CARRIER	usb/device/class/usb_device_cdc_acm.h	89;"	d
USB_DEVICE_CLASS	vcom/usb_device_descriptor.h	162;"	d
USB_DEVICE_CONFIGURATION_COUNT	vcom/usb_device_descriptor.h	94;"	d
USB_DEVICE_CONFIG_AUDIO	vcom/usb_device_config.h	57;"	d
USB_DEVICE_CONFIG_AUDIO_CLASS_CODE	usb/device/class/usb_device_audio.h	32;"	d
USB_DEVICE_CONFIG_BUFFER_PROPERTY_CACHEABLE	vcom/usb_device_config.h	136;"	d
USB_DEVICE_CONFIG_CCID	vcom/usb_device_config.h	66;"	d
USB_DEVICE_CONFIG_CCID_MAX_MESSAGE_LENGTH	usb/device/class/usb_device_ccid.h	31;"	d
USB_DEVICE_CONFIG_CCID_SLOT_MAX	usb/device/class/usb_device_ccid.h	27;"	d
USB_DEVICE_CONFIG_CCID_TRANSFER_COUNT	usb/device/class/usb_device_ccid.h	29;"	d
USB_DEVICE_CONFIG_CDC_ACM	vcom/usb_device_config.h	51;"	d
USB_DEVICE_CONFIG_CDC_ACM_MAX_INSTANCE	usb/device/class/usb_device_cdc_acm.h	19;"	d
USB_DEVICE_CONFIG_CDC_COMM_CLASS_CODE	usb/device/class/usb_device_cdc_acm.h	20;"	d
USB_DEVICE_CONFIG_CDC_DATA_CLASS_CODE	usb/device/class/usb_device_cdc_acm.h	21;"	d
USB_DEVICE_CONFIG_CDC_RNDIS_MAX_INSTANCE	usb/device/class/usb_device_cdc_rndis.h	19;"	d
USB_DEVICE_CONFIG_COMPLIANCE_TEST	vcom/usb_device_config.h	96;"	d
USB_DEVICE_CONFIG_CV_TEST	vcom/usb_device_config.h	103;"	d
USB_DEVICE_CONFIG_CV_TEST	vcom/usb_device_config.h	109;"	d
USB_DEVICE_CONFIG_CV_TEST	vcom/usb_device_config.h	92;"	d
USB_DEVICE_CONFIG_DETACH_ENABLE	vcom/usb_device_config.h	153;"	d
USB_DEVICE_CONFIG_DFU	vcom/usb_device_config.h	72;"	d
USB_DEVICE_CONFIG_EHCI	vcom/usb_device_config.h	28;"	d
USB_DEVICE_CONFIG_EHCI_ERROR_HANDLING	vcom/usb_device_config.h	125;"	d
USB_DEVICE_CONFIG_EHCI_ID_PIN_DETECT	vcom/usb_device_config.h	128;"	d
USB_DEVICE_CONFIG_EHCI_MAX_DTD	vcom/usb_device_config.h	123;"	d
USB_DEVICE_CONFIG_ENDPOINTS	vcom/usb_device_config.h	80;"	d
USB_DEVICE_CONFIG_HID	vcom/usb_device_config.h	48;"	d
USB_DEVICE_CONFIG_HID_CLASS_CODE	usb/device/class/usb_device_hid.h	22;"	d
USB_DEVICE_CONFIG_KEEP_ALIVE_MODE	vcom/usb_device_config.h	132;"	d
USB_DEVICE_CONFIG_KHCI	vcom/usb_device_config.h	25;"	d
USB_DEVICE_CONFIG_KHCI_DMA_ALIGN_BUFFER_LENGTH	vcom/usb_device_config.h	116;"	d
USB_DEVICE_CONFIG_KHCI_ERROR_HANDLING	vcom/usb_device_config.h	118;"	d
USB_DEVICE_CONFIG_LOW_POWER_MODE	vcom/usb_device_config.h	139;"	d
USB_DEVICE_CONFIG_LPCIP3511FS	vcom/usb_device_config.h	31;"	d
USB_DEVICE_CONFIG_LPCIP3511HS	vcom/usb_device_config.h	34;"	d
USB_DEVICE_CONFIG_LPM_L1	vcom/usb_device_config.h	146;"	d
USB_DEVICE_CONFIG_MAX_MESSAGES	vcom/usb_device_config.h	86;"	d
USB_DEVICE_CONFIG_MSC	vcom/usb_device_config.h	54;"	d
USB_DEVICE_CONFIG_MSC_CLASS_CODE	usb/device/class/usb_device_msc.h	21;"	d
USB_DEVICE_CONFIG_MSC_IMPLEMENTING_DISK_DRIVE	usb/device/class/usb_device_msc.h	19;"	d
USB_DEVICE_CONFIG_MSC_SUPPORT_DISK_LOCKING_MECHANISM	usb/device/class/usb_device_msc.h	18;"	d
USB_DEVICE_CONFIG_NUM	vcom/usb_device_config.h	37;"	d
USB_DEVICE_CONFIG_PHDC	vcom/usb_device_config.h	60;"	d
USB_DEVICE_CONFIG_PHDC_CLASS_CODE	usb/device/class/usb_device_phdc.h	22;"	d
USB_DEVICE_CONFIG_PRINTER	vcom/usb_device_config.h	69;"	d
USB_DEVICE_CONFIG_PRINTER_CLASS_CODE	usb/device/class/usb_device_printer.h	22;"	d
USB_DEVICE_CONFIG_REMOTE_WAKEUP	vcom/usb_device_config.h	143;"	d
USB_DEVICE_CONFIG_REMOTE_WAKEUP	vcom/usb_device_config.h	149;"	d
USB_DEVICE_CONFIG_SELF_POWER	vcom/usb_device_config.h	77;"	d
USB_DEVICE_CONFIG_USB20_TEST_MODE	vcom/usb_device_config.h	101;"	d
USB_DEVICE_CONFIG_USB20_TEST_MODE	vcom/usb_device_config.h	106;"	d
USB_DEVICE_CONFIG_USB20_TEST_MODE	vcom/usb_device_config.h	89;"	d
USB_DEVICE_CONFIG_USE_TASK	vcom/usb_device_config.h	83;"	d
USB_DEVICE_CONFIG_VIDEO	vcom/usb_device_config.h	63;"	d
USB_DEVICE_DCD_DBNC_MSEC	usb/device/class/usb_device_hid.h	44;"	d
USB_DEVICE_DCD_SEQ_INIT_TIME	usb/device/class/usb_device_hid.h	42;"	d
USB_DEVICE_DCD_TIME_DM_SRC_ON	usb/device/class/usb_device_hid.h	50;"	d
USB_DEVICE_DCD_TIME_WAIT_AFTER_PRI_DETECTION	usb/device/class/usb_device_hid.h	48;"	d
USB_DEVICE_DCD_VDPSRC_ON_MSEC	usb/device/class/usb_device_hid.h	46;"	d
USB_DEVICE_DEMO_BCD_VERSION	vcom/usb_device_descriptor.h	15;"	d
USB_DEVICE_ECHI_DTD_IOC_MASK	usb/device/source/ehci/usb_device_ehci.h	52;"	d
USB_DEVICE_ECHI_DTD_MULTIO_MASK	usb/device/source/ehci/usb_device_ehci.h	53;"	d
USB_DEVICE_ECHI_DTD_PAGE_BLOCK	usb/device/source/ehci/usb_device_ehci.h	49;"	d
USB_DEVICE_ECHI_DTD_PAGE_MASK	usb/device/source/ehci/usb_device_ehci.h	47;"	d
USB_DEVICE_ECHI_DTD_PAGE_OFFSET_MASK	usb/device/source/ehci/usb_device_ehci.h	48;"	d
USB_DEVICE_ECHI_DTD_POINTER_MASK	usb/device/source/ehci/usb_device_ehci.h	45;"	d
USB_DEVICE_ECHI_DTD_STATUS_ACTIVE	usb/device/source/ehci/usb_device_ehci.h	56;"	d
USB_DEVICE_ECHI_DTD_STATUS_DATA_BUFFER_ERROR	usb/device/source/ehci/usb_device_ehci.h	58;"	d
USB_DEVICE_ECHI_DTD_STATUS_HALTED	usb/device/source/ehci/usb_device_ehci.h	57;"	d
USB_DEVICE_ECHI_DTD_STATUS_MASK	usb/device/source/ehci/usb_device_ehci.h	54;"	d
USB_DEVICE_ECHI_DTD_STATUS_TRANSACTION_ERROR	usb/device/source/ehci/usb_device_ehci.h	59;"	d
USB_DEVICE_ECHI_DTD_TERMINATE_MASK	usb/device/source/ehci/usb_device_ehci.h	46;"	d
USB_DEVICE_ECHI_DTD_TOTAL_BYTES	usb/device/source/ehci/usb_device_ehci.h	51;"	d
USB_DEVICE_ECHI_DTD_TOTAL_BYTES_MASK	usb/device/source/ehci/usb_device_ehci.h	50;"	d
USB_DEVICE_EHCI_DTD_STATUS_ERROR_MASK	usb/device/source/ehci/usb_device_ehci.h	55;"	d
USB_DEVICE_EHCI_QH_IOS_MASK	usb/device/source/ehci/usb_device_ehci.h	42;"	d
USB_DEVICE_EHCI_QH_MAX_PACKET_SIZE	usb/device/source/ehci/usb_device_ehci.h	41;"	d
USB_DEVICE_EHCI_QH_MAX_PACKET_SIZE_MASK	usb/device/source/ehci/usb_device_ehci.h	40;"	d
USB_DEVICE_EHCI_QH_MULT_MASK	usb/device/source/ehci/usb_device_ehci.h	38;"	d
USB_DEVICE_EHCI_QH_POINTER_MASK	usb/device/source/ehci/usb_device_ehci.h	37;"	d
USB_DEVICE_EHCI_QH_ZLT_MASK	usb/device/source/ehci/usb_device_ehci.h	39;"	d
USB_DEVICE_HID_REQUEST_GET_IDLE	usb/device/class/usb_device_hid.h	30;"	d
USB_DEVICE_HID_REQUEST_GET_PROTOCOL	usb/device/class/usb_device_hid.h	32;"	d
USB_DEVICE_HID_REQUEST_GET_REPORT	usb/device/class/usb_device_hid.h	25;"	d
USB_DEVICE_HID_REQUEST_GET_REPORT_TYPE_FEATURE	usb/device/class/usb_device_hid.h	28;"	d
USB_DEVICE_HID_REQUEST_GET_REPORT_TYPE_INPUT	usb/device/class/usb_device_hid.h	26;"	d
USB_DEVICE_HID_REQUEST_GET_REPORT_TYPE_OUPUT	usb/device/class/usb_device_hid.h	27;"	d
USB_DEVICE_HID_REQUEST_SET_IDLE	usb/device/class/usb_device_hid.h	36;"	d
USB_DEVICE_HID_REQUEST_SET_PROTOCOL	usb/device/class/usb_device_hid.h	38;"	d
USB_DEVICE_HID_REQUEST_SET_REPORT	usb/device/class/usb_device_hid.h	34;"	d
USB_DEVICE_INTERRUPT_PRIORITY	vcom/composite.h	28;"	d
USB_DEVICE_INTERRUPT_PRIORITY	vcom/virtual_com.h	31;"	d
USB_DEVICE_IP3511_ALL_IP_SUPPORT_RESERVED_BUFFER	usb/device/source/lpcip3511/usb_device_lpcip3511.c	191;"	d	file:
USB_DEVICE_IP3511_ALL_IP_SUPPORT_RESERVED_BUFFER	usb/device/source/lpcip3511/usb_device_lpcip3511.c	193;"	d	file:
USB_DEVICE_IP3511_ALL_IP_SUPPORT_RESERVED_BUFFER	usb/device/source/lpcip3511/usb_device_lpcip3511.c	195;"	d	file:
USB_DEVICE_IP3511_ALL_IP_SUPPORT_RESERVED_BUFFER	usb/device/source/lpcip3511/usb_device_lpcip3511.c	197;"	d	file:
USB_DEVICE_IP3511_ALL_IP_SUPPORT_RESERVED_BUFFER	usb/device/source/lpcip3511/usb_device_lpcip3511.c	201;"	d	file:
USB_DEVICE_IP3511_BITS_FOR_RESERVED_BUFFER	usb/device/source/lpcip3511/usb_device_lpcip3511.h	27;"	d
USB_DEVICE_IP3511_DOUBLE_BUFFER_ENABLE	usb/device/source/lpcip3511/usb_device_lpcip3511.h	32;"	d
USB_DEVICE_IP3511_ENDPOINTS_NUM	usb/device/source/lpcip3511/usb_device_lpcip3511.h	35;"	d
USB_DEVICE_IP3511_ENDPOINTS_NUM	usb/device/source/lpcip3511/usb_device_lpcip3511.h	38;"	d
USB_DEVICE_IP3511_ENDPOINT_RESERVED_BUFFER_SIZE	usb/device/source/lpcip3511/usb_device_lpcip3511.h	25;"	d
USB_DEVICE_IP3511_NEED_CHECK_BUFFER	usb/device/source/lpcip3511/usb_device_lpcip3511.c	1309;"	d	file:
USB_DEVICE_IP3511_RESERVED_BUFFER_FOR_COPY	usb/device/source/lpcip3511/usb_device_lpcip3511.h	29;"	d
USB_DEVICE_LANGUAGE_COUNT	vcom/usb_device_descriptor.h	96;"	d
USB_DEVICE_MAX_FS_ISO_MAX_PACKET_SIZE	usb/device/source/khci/usb_device_khci.h	22;"	d
USB_DEVICE_MAX_FS_NONE_ISO_MAX_PACKET_SIZE	usb/device/source/khci/usb_device_khci.h	25;"	d
USB_DEVICE_MAX_HS_BULK_MAX_PACKET_SIZE	usb/device/source/ehci/usb_device_ehci.h	29;"	d
USB_DEVICE_MAX_HS_CONTROL_MAX_PACKET_SIZE	usb/device/source/ehci/usb_device_ehci.h	32;"	d
USB_DEVICE_MAX_HS_INTERUPT_MAX_PACKET_SIZE	usb/device/source/ehci/usb_device_ehci.h	26;"	d
USB_DEVICE_MAX_HS_ISO_MAX_PACKET_SIZE	usb/device/source/ehci/usb_device_ehci.h	23;"	d
USB_DEVICE_MAX_POWER	vcom/usb_device_descriptor.h	166;"	d
USB_DEVICE_MAX_TRANSFER_PRIME_TIMES	usb/device/source/ehci/usb_device_ehci.h	34;"	d
USB_DEVICE_MSC_BULK_ONLY_MASS_STORAGE_RESET	usb/device/class/usb_device_msc.h	24;"	d
USB_DEVICE_MSC_CBW_DIRECTION_BIT	usb/device/class/usb_device_msc.h	33;"	d
USB_DEVICE_MSC_CBW_DIRECTION_SHIFT	usb/device/class/usb_device_msc.h	34;"	d
USB_DEVICE_MSC_CBW_LENGTH	usb/device/class/usb_device_msc.h	36;"	d
USB_DEVICE_MSC_COMMAND_FAILED	usb/device/class/usb_device_msc.h	41;"	d
USB_DEVICE_MSC_COMMAND_PASSED	usb/device/class/usb_device_msc.h	40;"	d
USB_DEVICE_MSC_CSW_LENGTH	usb/device/class/usb_device_msc.h	38;"	d
USB_DEVICE_MSC_DCBWSIGNATURE	usb/device/class/usb_device_msc.h	29;"	d
USB_DEVICE_MSC_DCSWSIGNATURE	usb/device/class/usb_device_msc.h	31;"	d
USB_DEVICE_MSC_FORMAT_UNIT_COMMAND	usb/device/class/usb_device_msc.h	52;"	d
USB_DEVICE_MSC_GET_MAX_LUN	usb/device/class/usb_device_msc.h	26;"	d
USB_DEVICE_MSC_INQUIRY_COMMAND	usb/device/class/usb_device_msc.h	44;"	d
USB_DEVICE_MSC_MAX_LUN	usb/device/class/usb_device_msc.h	68;"	d
USB_DEVICE_MSC_MAX_RECV_TRANSFER_LENGTH	usb/device/class/usb_device_msc.h	65;"	d
USB_DEVICE_MSC_MAX_SEND_TRANSFER_LENGTH	usb/device/class/usb_device_msc.h	66;"	d
USB_DEVICE_MSC_MODE_SELECT_10_COMMAND	usb/device/class/usb_device_msc.h	58;"	d
USB_DEVICE_MSC_MODE_SELECT_6_COMMAND	usb/device/class/usb_device_msc.h	59;"	d
USB_DEVICE_MSC_MODE_SENSE_10_COMMAND	usb/device/class/usb_device_msc.h	56;"	d
USB_DEVICE_MSC_MODE_SENSE_6_COMMAND	usb/device/class/usb_device_msc.h	57;"	d
USB_DEVICE_MSC_PHASE_ERROR	usb/device/class/usb_device_msc.h	42;"	d
USB_DEVICE_MSC_PREVENT_ALLOW_MEDIUM_REM_COMMAND	usb/device/class/usb_device_msc.h	51;"	d
USB_DEVICE_MSC_READ_10_COMMAND	usb/device/class/usb_device_msc.h	45;"	d
USB_DEVICE_MSC_READ_12_COMMAND	usb/device/class/usb_device_msc.h	46;"	d
USB_DEVICE_MSC_READ_CAPACITY_10_COMMAND	usb/device/class/usb_device_msc.h	53;"	d
USB_DEVICE_MSC_READ_CAPACITY_16_COMMAND	usb/device/class/usb_device_msc.h	54;"	d
USB_DEVICE_MSC_READ_FORMAT_CAPACITIES_COMMAND	usb/device/class/usb_device_msc.h	55;"	d
USB_DEVICE_MSC_REQUEST_SENSE_COMMAND	usb/device/class/usb_device_msc.h	47;"	d
USB_DEVICE_MSC_SEND_DIAGNOSTIC_COMMAND	usb/device/class/usb_device_msc.h	60;"	d
USB_DEVICE_MSC_STALL_IN_CBW	usb/device/class/usb_device_msc.h	/^    USB_DEVICE_MSC_STALL_IN_CBW = 1U, \/*!< Stall in CBW*\/$/;"	e	enum:__anon500
USB_DEVICE_MSC_STALL_IN_CSW	usb/device/class/usb_device_msc.h	/^    USB_DEVICE_MSC_STALL_IN_CSW,      \/*!< Stall in CSW*\/$/;"	e	enum:__anon500
USB_DEVICE_MSC_STALL_IN_DATA	usb/device/class/usb_device_msc.h	/^    USB_DEVICE_MSC_STALL_IN_DATA,     \/*!< Stall in data transfer*\/$/;"	e	enum:__anon500
USB_DEVICE_MSC_START_STOP_UNIT_COMMAND	usb/device/class/usb_device_msc.h	62;"	d
USB_DEVICE_MSC_TEST_UNIT_READY_COMMAND	usb/device/class/usb_device_msc.h	48;"	d
USB_DEVICE_MSC_UFI_ABORTED_COMMAND	usb/device/class/usb_device_msc_ufi.h	46;"	d
USB_DEVICE_MSC_UFI_ADDITIONAL_LENGTH	usb/device/class/usb_device_msc_ufi.h	106;"	d
USB_DEVICE_MSC_UFI_BLANK_CHECK	usb/device/class/usb_device_msc_ufi.h	41;"	d
USB_DEVICE_MSC_UFI_DATA_PROTECT	usb/device/class/usb_device_msc_ufi.h	37;"	d
USB_DEVICE_MSC_UFI_FORMATTED_MEDIA	usb/device/class/usb_device_msc_ufi.h	78;"	d
USB_DEVICE_MSC_UFI_HARDWARE_ERROR	usb/device/class/usb_device_msc_ufi.h	29;"	d
USB_DEVICE_MSC_UFI_ILLEGAL_REQUEST	usb/device/class/usb_device_msc_ufi.h	32;"	d
USB_DEVICE_MSC_UFI_INQUIRY_ALLOCATION_LENGTH	usb/device/class/usb_device_msc_ufi.h	85;"	d
USB_DEVICE_MSC_UFI_INVALID_COMMAND_OPCODE	usb/device/class/usb_device_msc_ufi.h	54;"	d
USB_DEVICE_MSC_UFI_INVALID_FIELD_IN_COMMAND_PKT	usb/device/class/usb_device_msc_ufi.h	62;"	d
USB_DEVICE_MSC_UFI_LBA_OUT_OF_RANGE	usb/device/class/usb_device_msc_ufi.h	64;"	d
USB_DEVICE_MSC_UFI_LOAD_EJECT_START_MASK	usb/device/class/usb_device_msc_ufi.h	75;"	d
USB_DEVICE_MSC_UFI_MEDIUM_ERROR	usb/device/class/usb_device_msc_ufi.h	26;"	d
USB_DEVICE_MSC_UFI_MISCOMPARE	usb/device/class/usb_device_msc_ufi.h	51;"	d
USB_DEVICE_MSC_UFI_NOT_READY	usb/device/class/usb_device_msc_ufi.h	22;"	d
USB_DEVICE_MSC_UFI_NO_CARTRIDGE_IN_DRIVE	usb/device/class/usb_device_msc_ufi.h	82;"	d
USB_DEVICE_MSC_UFI_NO_SENSE	usb/device/class/usb_device_msc_ufi.h	17;"	d
USB_DEVICE_MSC_UFI_PERIPHERAL_DEVICE_TYPE	usb/device/class/usb_device_msc_ufi.h	100;"	d
USB_DEVICE_MSC_UFI_PERIPHERAL_QUALIFIER	usb/device/class/usb_device_msc_ufi.h	94;"	d
USB_DEVICE_MSC_UFI_PERIPHERAL_QUALIFIER_SHIFT	usb/device/class/usb_device_msc_ufi.h	96;"	d
USB_DEVICE_MSC_UFI_PREVENT_ALLOW_REMOVAL_MASK	usb/device/class/usb_device_msc_ufi.h	73;"	d
USB_DEVICE_MSC_UFI_READ_CAPACITY16_DATA_LENGTH	usb/device/class/usb_device_msc_ufi.h	91;"	d
USB_DEVICE_MSC_UFI_READ_CAPACITY_DATA_LENGTH	usb/device/class/usb_device_msc_ufi.h	89;"	d
USB_DEVICE_MSC_UFI_RECOVERED_ERROR	usb/device/class/usb_device_msc_ufi.h	20;"	d
USB_DEVICE_MSC_UFI_REMOVABLE_MEDIUM_BIT	usb/device/class/usb_device_msc_ufi.h	102;"	d
USB_DEVICE_MSC_UFI_REMOVABLE_MEDIUM_BIT_SHIFT	usb/device/class/usb_device_msc_ufi.h	104;"	d
USB_DEVICE_MSC_UFI_REQ_SENSE_ADDITIONAL_SENSE_LEN	usb/device/class/usb_device_msc_ufi.h	70;"	d
USB_DEVICE_MSC_UFI_REQ_SENSE_DATA_LENGTH	usb/device/class/usb_device_msc_ufi.h	87;"	d
USB_DEVICE_MSC_UFI_REQ_SENSE_VALID_ERROR_CODE	usb/device/class/usb_device_msc_ufi.h	67;"	d
USB_DEVICE_MSC_UFI_UNFORMATTED_MEDIA	usb/device/class/usb_device_msc_ufi.h	80;"	d
USB_DEVICE_MSC_UFI_UNIT_ATTENTION	usb/device/class/usb_device_msc_ufi.h	34;"	d
USB_DEVICE_MSC_UFI_UNKNOWN_ERROR	usb/device/class/usb_device_msc_ufi.h	60;"	d
USB_DEVICE_MSC_UFI_UNRECOVERED_READ_ERROR	usb/device/class/usb_device_msc_ufi.h	58;"	d
USB_DEVICE_MSC_UFI_VENDOR_SPECIFIC_ERROR	usb/device/class/usb_device_msc_ufi.h	43;"	d
USB_DEVICE_MSC_UFI_VERSIONS	usb/device/class/usb_device_msc_ufi.h	98;"	d
USB_DEVICE_MSC_UFI_VOLUME_OVERFLOW	usb/device/class/usb_device_msc_ufi.h	49;"	d
USB_DEVICE_MSC_UFI_WRITE_FAULT	usb/device/class/usb_device_msc_ufi.h	56;"	d
USB_DEVICE_MSC_VERIFY_COMMAND	usb/device/class/usb_device_msc.h	61;"	d
USB_DEVICE_MSC_WRITE_10_COMMAND	usb/device/class/usb_device_msc.h	49;"	d
USB_DEVICE_MSC_WRITE_12_COMMAND	usb/device/class/usb_device_msc.h	50;"	d
USB_DEVICE_PHDC_REQUEST_CLEAR_FEATURE	usb/device/class/usb_device_phdc.h	26;"	d
USB_DEVICE_PHDC_REQUEST_GET_STATUS	usb/device/class/usb_device_phdc.h	28;"	d
USB_DEVICE_PHDC_REQUEST_SET_FEATURE	usb/device/class/usb_device_phdc.h	24;"	d
USB_DEVICE_PRINTER_GET_DEVICE_ID	usb/device/class/usb_device_printer.h	25;"	d
USB_DEVICE_PRINTER_GET_PORT_STATUS	usb/device/class/usb_device_printer.h	27;"	d
USB_DEVICE_PRINTER_PORT_STATUS_DEFAULT_VALUE	usb/device/class/usb_device_printer.h	38;"	d
USB_DEVICE_PRINTER_PORT_STATUS_NOT_ERROR_MASK	usb/device/class/usb_device_printer.h	36;"	d
USB_DEVICE_PRINTER_PORT_STATUS_PAPER_EMPTRY_MASK	usb/device/class/usb_device_printer.h	32;"	d
USB_DEVICE_PRINTER_PORT_STATUS_SELECT_MASK	usb/device/class/usb_device_printer.h	34;"	d
USB_DEVICE_PRINTER_SOFT_RESET	usb/device/class/usb_device_printer.h	29;"	d
USB_DEVICE_PROTOCOL	vcom/usb_device_descriptor.h	164;"	d
USB_DEVICE_SPECIFIC_BCD_VERSION	vcom/usb_device_descriptor.h	14;"	d
USB_DEVICE_STATUS_SIZE	usb/device/source/usb_device_ch9.h	20;"	d
USB_DEVICE_STRING_COUNT	vcom/usb_device_descriptor.h	95;"	d
USB_DEVICE_SUBCLASS	vcom/usb_device_descriptor.h	163;"	d
USB_DEVICE_VIDEO_CC_VIDEO	usb/device/class/usb_device_video.h	27;"	d
USB_DEVICE_VIDEO_CT_AE_MODE_CONTROL	usb/device/class/usb_device_video.h	117;"	d
USB_DEVICE_VIDEO_CT_AE_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	118;"	d
USB_DEVICE_VIDEO_CT_CONTROL_UNDEFINED	usb/device/class/usb_device_video.h	115;"	d
USB_DEVICE_VIDEO_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	119;"	d
USB_DEVICE_VIDEO_CT_EXPOSURE_TIME_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	120;"	d
USB_DEVICE_VIDEO_CT_FOCUS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	121;"	d
USB_DEVICE_VIDEO_CT_FOCUS_AUTO_CONTROL	usb/device/class/usb_device_video.h	123;"	d
USB_DEVICE_VIDEO_CT_FOCUS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	122;"	d
USB_DEVICE_VIDEO_CT_FOCUS_SIMPLE_CONTROL	usb/device/class/usb_device_video.h	133;"	d
USB_DEVICE_VIDEO_CT_IRIS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	124;"	d
USB_DEVICE_VIDEO_CT_IRIS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	125;"	d
USB_DEVICE_VIDEO_CT_PANTILT_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	128;"	d
USB_DEVICE_VIDEO_CT_PANTILT_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	129;"	d
USB_DEVICE_VIDEO_CT_PRIVACY_CONTROL	usb/device/class/usb_device_video.h	132;"	d
USB_DEVICE_VIDEO_CT_REGION_OF_INTEREST_CONTROL	usb/device/class/usb_device_video.h	135;"	d
USB_DEVICE_VIDEO_CT_ROLL_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	130;"	d
USB_DEVICE_VIDEO_CT_ROLL_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	131;"	d
USB_DEVICE_VIDEO_CT_SCANNING_MODE_CONTROL	usb/device/class/usb_device_video.h	116;"	d
USB_DEVICE_VIDEO_CT_WINDOW_CONTROL	usb/device/class/usb_device_video.h	134;"	d
USB_DEVICE_VIDEO_CT_ZOOM_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	126;"	d
USB_DEVICE_VIDEO_CT_ZOOM_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	127;"	d
USB_DEVICE_VIDEO_ET_COMPONENT_CONNECTOR	usb/device/class/usb_device_video.h	222;"	d
USB_DEVICE_VIDEO_ET_COMPOSITE_CONNECTOR	usb/device/class/usb_device_video.h	220;"	d
USB_DEVICE_VIDEO_ET_SVIDEO_CONNECTOR	usb/device/class/usb_device_video.h	221;"	d
USB_DEVICE_VIDEO_ET_VENDOR_SPECIFIC	usb/device/class/usb_device_video.h	219;"	d
USB_DEVICE_VIDEO_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	167;"	d
USB_DEVICE_VIDEO_EU_CONTROL_UNDEFINED	usb/device/class/usb_device_video.h	160;"	d
USB_DEVICE_VIDEO_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	168;"	d
USB_DEVICE_VIDEO_EU_ERROR_RESILIENCY_CONTROL	usb/device/class/usb_device_video.h	180;"	d
USB_DEVICE_VIDEO_EU_LEVEL_IDC_LIMIT_CONTROL	usb/device/class/usb_device_video.h	175;"	d
USB_DEVICE_VIDEO_EU_LTR_BUFFER_	usb/device/class/usb_device_video.h	172;"	d
USB_DEVICE_VIDEO_EU_LTR_PICTURE_CONTROL	usb/device/class/usb_device_video.h	173;"	d
USB_DEVICE_VIDEO_EU_LTR_VALIDATION_CONTROL	usb/device/class/usb_device_video.h	174;"	d
USB_DEVICE_VIDEO_EU_MIN_FRAME_INTERVAL_CONTROL	usb/device/class/usb_device_video.h	164;"	d
USB_DEVICE_VIDEO_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	169;"	d
USB_DEVICE_VIDEO_EU_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	178;"	d
USB_DEVICE_VIDEO_EU_PROFILE_TOOLSET_CONTROL	usb/device/class/usb_device_video.h	162;"	d
USB_DEVICE_VIDEO_EU_QP_RANGE_CONTROL	usb/device/class/usb_device_video.h	177;"	d
USB_DEVICE_VIDEO_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	170;"	d
USB_DEVICE_VIDEO_EU_RATE_CONTROL_MODE_CONTROL	usb/device/class/usb_device_video.h	166;"	d
USB_DEVICE_VIDEO_EU_SEI_PAYLOADTYPE_CONTROL	usb/device/class/usb_device_video.h	176;"	d
USB_DEVICE_VIDEO_EU_SELECT_LAYER_CONTROL	usb/device/class/usb_device_video.h	161;"	d
USB_DEVICE_VIDEO_EU_SLICE_MODE_CONTROL	usb/device/class/usb_device_video.h	165;"	d
USB_DEVICE_VIDEO_EU_START_OR_STOP_LAYER_CONTROL	usb/device/class/usb_device_video.h	179;"	d
USB_DEVICE_VIDEO_EU_SYNC_REF_FRAME_CONTROL	usb/device/class/usb_device_video.h	171;"	d
USB_DEVICE_VIDEO_EU_VIDEO_RESOLUTION_CONTROL	usb/device/class/usb_device_video.h	163;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_AE_MODE_CONTROL	usb/device/class/usb_device_video.h	279;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_AE_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	280;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_DIGITAL_WINDOW_CONTROL	usb/device/class/usb_device_video.h	297;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	281;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_EXPOSURE_TIME_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	282;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_FOCUS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	283;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_FOCUS_AUTO_CONTROL	usb/device/class/usb_device_video.h	285;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_FOCUS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	284;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_FOCUS_SIMPLE_CONTROL	usb/device/class/usb_device_video.h	296;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_IRIS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	286;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_IRIS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	287;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_PANTILT_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	290;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_PANTILT_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	291;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_PRIVACY_CONTROL	usb/device/class/usb_device_video.h	294;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_REGION_OF_INTEREST_CONTROL	usb/device/class/usb_device_video.h	298;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_ROLL_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	292;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_ROLL_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	293;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_SCANNING_MODE_CONTROL	usb/device/class/usb_device_video.h	278;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_ZOOM_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	288;"	d
USB_DEVICE_VIDEO_GET_CUR_CT_ZOOM_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	289;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	318;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	319;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_ERROR_RESILIENCY_CONTROL	usb/device/class/usb_device_video.h	331;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_LEVEL_IDC_LIMIT_CONTROL	usb/device/class/usb_device_video.h	326;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_LTR_BUFFER_CONTROL	usb/device/class/usb_device_video.h	323;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_LTR_PICTURE_CONTROL	usb/device/class/usb_device_video.h	324;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_LTR_VALIDATION_CONTROL	usb/device/class/usb_device_video.h	325;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_MIN_FRAME_INTERVAL_CONTROL	usb/device/class/usb_device_video.h	315;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	320;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	329;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_PROFILE_TOOLSET_CONTROL	usb/device/class/usb_device_video.h	313;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_QP_RANGE_CONTROL	usb/device/class/usb_device_video.h	328;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	321;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_RATE_CONTROL_MODE_CONTROL	usb/device/class/usb_device_video.h	317;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_SEI_PAYLOADTYPE_CONTROL	usb/device/class/usb_device_video.h	327;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_SELECT_LAYER_CONTROL	usb/device/class/usb_device_video.h	312;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_SLICE_MODE_CONTROL	usb/device/class/usb_device_video.h	316;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_START_OR_STOP_LAYER_CONTROL	usb/device/class/usb_device_video.h	330;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_SYNC_REF_FRAME_CONTROL	usb/device/class/usb_device_video.h	322;"	d
USB_DEVICE_VIDEO_GET_CUR_EU_VIDEO_RESOLUTION_CONTROL	usb/device/class/usb_device_video.h	314;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_ANALOG_LOCK_STATUS_CONTROL	usb/device/class/usb_device_video.h	273;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_ANALOG_VIDEO_STANDARD_CONTROL	usb/device/class/usb_device_video.h	272;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_BACKLIGHT_COMPENSATION_CONTROL	usb/device/class/usb_device_video.h	256;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_BRIGHTNESS_CONTROL	usb/device/class/usb_device_video.h	257;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_CONTRACT_CONTROL	usb/device/class/usb_device_video.h	258;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_CONTRAST_AUTO_CONTROL	usb/device/class/usb_device_video.h	275;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_DIGITAL_MULTIPLIER_CONTROL	usb/device/class/usb_device_video.h	269;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	usb/device/class/usb_device_video.h	270;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_GAIN_CONTROL	usb/device/class/usb_device_video.h	259;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_GAMMA_CONTROL	usb/device/class/usb_device_video.h	264;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_HUE_AUTO_CONTROL	usb/device/class/usb_device_video.h	271;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_HUE_CONTROL	usb/device/class/usb_device_video.h	261;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_POWER_LINE_FREQUENCY_CONTROL	usb/device/class/usb_device_video.h	260;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_SATURATION_CONTROL	usb/device/class/usb_device_video.h	262;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_SHARRNESS_CONTROL	usb/device/class/usb_device_video.h	263;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL	usb/device/class/usb_device_video.h	268;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_WHITE_BALANCE_COMPONENT_CONTROL	usb/device/class/usb_device_video.h	267;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL	usb/device/class/usb_device_video.h	266;"	d
USB_DEVICE_VIDEO_GET_CUR_PU_WHITE_BALANCE_TEMPERATURE_CONTROL	usb/device/class/usb_device_video.h	265;"	d
USB_DEVICE_VIDEO_GET_CUR_VC_ERROR_CODE_CONTROL	usb/device/class/usb_device_video.h	254;"	d
USB_DEVICE_VIDEO_GET_CUR_VC_POWER_MODE_CONTROL	usb/device/class/usb_device_video.h	253;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_COMMIT_CONTROL	usb/device/class/usb_device_video.h	302;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_GENERATE_KEY_FRAME_CONTROL	usb/device/class/usb_device_video.h	307;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	301;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_STILL_COMMIT_CONTROL	usb/device/class/usb_device_video.h	304;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_STILL_IMAGE_TRIGGER_CONTROL	usb/device/class/usb_device_video.h	305;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	303;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_STREAM_ERROR_CODE_CONTROL	usb/device/class/usb_device_video.h	306;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_SYNCH_DELAY_CONTROL	usb/device/class/usb_device_video.h	309;"	d
USB_DEVICE_VIDEO_GET_CUR_VS_UPDATE_FRAME_SEGMENT_CONTROL	usb/device/class/usb_device_video.h	308;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_AE_MODE_CONTROL	usb/device/class/usb_device_video.h	596;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_DIGITAL_WINDOW_CONTROL	usb/device/class/usb_device_video.h	610;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	597;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_FOCUS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	598;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_FOCUS_AUTO_CONTROL	usb/device/class/usb_device_video.h	600;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_FOCUS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	599;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_FOCUS_SIMPLE_CONTROL	usb/device/class/usb_device_video.h	609;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_IRIS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	601;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_PANTILT_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	604;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_PANTILT_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	605;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_REGION_OF_INTEREST_CONTROL	usb/device/class/usb_device_video.h	611;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_ROLL_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	606;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_ROLL_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	607;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_ZOOM_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	602;"	d
USB_DEVICE_VIDEO_GET_DEF_CT_ZOOM_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	603;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	625;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	626;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_ERROR_RESILIENCY_CONTROL	usb/device/class/usb_device_video.h	635;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_LEVEL_IDC_LIMIT_CONTROL	usb/device/class/usb_device_video.h	632;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_LTR_BUFFER_CONTROL	usb/device/class/usb_device_video.h	629;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_LTR_PICTURE_CONTROL	usb/device/class/usb_device_video.h	630;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_LTR_VALIDATION_CONTROL	usb/device/class/usb_device_video.h	631;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_MIN_FRAME_INTERVAL_CONTROL	usb/device/class/usb_device_video.h	622;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	627;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_PROFILE_TOOLSET_CONTROL	usb/device/class/usb_device_video.h	620;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_QP_RANGE_CONTROL	usb/device/class/usb_device_video.h	634;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	628;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_RATE_CONTROL_MODE_CONTROL	usb/device/class/usb_device_video.h	624;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_SEI_PAYLOADTYPE_CONTROL	usb/device/class/usb_device_video.h	633;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_SLICE_MODE_CONTROL	usb/device/class/usb_device_video.h	623;"	d
USB_DEVICE_VIDEO_GET_DEF_EU_VIDEO_RESOLUTION_CONTROL	usb/device/class/usb_device_video.h	621;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_BACKLIGHT_COMPENSATION_CONTROL	usb/device/class/usb_device_video.h	576;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_BRIGHTNESS_CONTROL	usb/device/class/usb_device_video.h	577;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_CONTRACT_CONTROL	usb/device/class/usb_device_video.h	578;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_CONTRAST_AUTO_CONTROL	usb/device/class/usb_device_video.h	593;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_DIGITAL_MULTIPLIER_CONTROL	usb/device/class/usb_device_video.h	589;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	usb/device/class/usb_device_video.h	590;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_GAIN_CONTROL	usb/device/class/usb_device_video.h	579;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_GAMMA_CONTROL	usb/device/class/usb_device_video.h	584;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_HUE_AUTO_CONTROL	usb/device/class/usb_device_video.h	591;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_HUE_CONTROL	usb/device/class/usb_device_video.h	581;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_POWER_LINE_FREQUENCY_CONTROL	usb/device/class/usb_device_video.h	580;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_SATURATION_CONTROL	usb/device/class/usb_device_video.h	582;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_SHARRNESS_CONTROL	usb/device/class/usb_device_video.h	583;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL	usb/device/class/usb_device_video.h	588;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_WHITE_BALANCE_COMPONENT_CONTROL	usb/device/class/usb_device_video.h	587;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL	usb/device/class/usb_device_video.h	586;"	d
USB_DEVICE_VIDEO_GET_DEF_PU_WHITE_BALANCE_TEMPERATURE_CONTROL	usb/device/class/usb_device_video.h	585;"	d
USB_DEVICE_VIDEO_GET_DEF_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	614;"	d
USB_DEVICE_VIDEO_GET_DEF_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	615;"	d
USB_DEVICE_VIDEO_GET_DEF_VS_SYNCH_DELAY_CONTROL	usb/device/class/usb_device_video.h	617;"	d
USB_DEVICE_VIDEO_GET_DEF_VS_UPDATE_FRAME_SEGMENT_CONTROL	usb/device/class/usb_device_video.h	616;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_AE_MODE_CONTROL	usb/device/class/usb_device_video.h	524;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_AE_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	525;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	526;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_EXPOSURE_TIME_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	527;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_FOCUS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	528;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_FOCUS_AUTO_CONTROL	usb/device/class/usb_device_video.h	530;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_FOCUS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	529;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_FOCUS_SIMPLE_CONTROL	usb/device/class/usb_device_video.h	541;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_IRIS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	531;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_IRIS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	532;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_PANTILT_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	535;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_PANTILT_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	536;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_PRIVACY_CONTROL	usb/device/class/usb_device_video.h	539;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_ROLL_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	537;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_ROLL_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	538;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_SCANNING_MODE_CONTROL	usb/device/class/usb_device_video.h	523;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_ZOOM_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	533;"	d
USB_DEVICE_VIDEO_GET_INFO_CT_ZOOM_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	534;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	561;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	562;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_LTR_BUFFER_CONTROL	usb/device/class/usb_device_video.h	566;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_LTR_PICTURE_CONTROL	usb/device/class/usb_device_video.h	567;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_LTR_VALIDATION_CONTROL	usb/device/class/usb_device_video.h	568;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_MIN_FRAME_INTERVAL_CONTROL	usb/device/class/usb_device_video.h	558;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	563;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	571;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_PROFILE_TOOLSET_CONTROL	usb/device/class/usb_device_video.h	556;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_QP_RANGE_CONTROL	usb/device/class/usb_device_video.h	570;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	564;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_RATE_CONTROL_MODE_CONTROL	usb/device/class/usb_device_video.h	560;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_SEI_PAYLOADTYPE_CONTROL	usb/device/class/usb_device_video.h	569;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_SELECT_LAYER_CONTROL	usb/device/class/usb_device_video.h	555;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_SLICE_MODE_CONTROL	usb/device/class/usb_device_video.h	559;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_START_OR_STOP_LAYER_CONTROL	usb/device/class/usb_device_video.h	572;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_SYNC_REF_FRAME_CONTROL	usb/device/class/usb_device_video.h	565;"	d
USB_DEVICE_VIDEO_GET_INFO_EU_VIDEO_RESOLUTION_CONTROL	usb/device/class/usb_device_video.h	557;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_ANALOG_LOCK_STATUS_CONTROL	usb/device/class/usb_device_video.h	518;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_ANALOG_VIDEO_STANDARD_CONTROL	usb/device/class/usb_device_video.h	517;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_BACKLIGHT_COMPENSATION_CONTROL	usb/device/class/usb_device_video.h	501;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_BRIGHTNESS_CONTROL	usb/device/class/usb_device_video.h	502;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_CONTRACT_CONTROL	usb/device/class/usb_device_video.h	503;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_CONTRAST_AUTO_CONTROL	usb/device/class/usb_device_video.h	520;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_DIGITAL_MULTIPLIER_CONTROL	usb/device/class/usb_device_video.h	514;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	usb/device/class/usb_device_video.h	515;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_GAIN_CONTROL	usb/device/class/usb_device_video.h	504;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_GAMMA_CONTROL	usb/device/class/usb_device_video.h	509;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_HUE_AUTO_CONTROL	usb/device/class/usb_device_video.h	516;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_HUE_CONTROL	usb/device/class/usb_device_video.h	506;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_POWER_LINE_FREQUENCY_CONTROL	usb/device/class/usb_device_video.h	505;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_SATURATION_CONTROL	usb/device/class/usb_device_video.h	507;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_SHARRNESS_CONTROL	usb/device/class/usb_device_video.h	508;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL	usb/device/class/usb_device_video.h	513;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_WHITE_BALANCE_COMPONENT_CONTROL	usb/device/class/usb_device_video.h	512;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL	usb/device/class/usb_device_video.h	511;"	d
USB_DEVICE_VIDEO_GET_INFO_PU_WHITE_BALANCE_TEMPERATURE_CONTROL	usb/device/class/usb_device_video.h	510;"	d
USB_DEVICE_VIDEO_GET_INFO_VC_ERROR_CODE_CONTROL	usb/device/class/usb_device_video.h	499;"	d
USB_DEVICE_VIDEO_GET_INFO_VC_POWER_MODE_CONTROL	usb/device/class/usb_device_video.h	498;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_COMMIT_CONTROL	usb/device/class/usb_device_video.h	545;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_GENERATE_KEY_FRAME_CONTROL	usb/device/class/usb_device_video.h	550;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	544;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_STILL_COMMIT_CONTROL	usb/device/class/usb_device_video.h	547;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_STILL_IMAGE_TRIGGER_CONTROL	usb/device/class/usb_device_video.h	548;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	546;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_STREAM_ERROR_CODE_CONTROL	usb/device/class/usb_device_video.h	549;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_SYNCH_DELAY_CONTROL	usb/device/class/usb_device_video.h	552;"	d
USB_DEVICE_VIDEO_GET_INFO_VS_UPDATE_FRAME_SEGMENT_CONTROL	usb/device/class/usb_device_video.h	551;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	484;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	485;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_LTR_BUFFER_CONTROL	usb/device/class/usb_device_video.h	489;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_LTR_PICTURE_CONTROL	usb/device/class/usb_device_video.h	490;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_LTR_VALIDATION_CONTROL	usb/device/class/usb_device_video.h	491;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_MIN_FRAME_INTERVAL_CONTROL	usb/device/class/usb_device_video.h	481;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	486;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	493;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_PROFILE_TOOLSET_CONTROL	usb/device/class/usb_device_video.h	479;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_QP_RANGE_CONTROL	usb/device/class/usb_device_video.h	492;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	487;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_RATE_CONTROL_MODE_CONTROL	usb/device/class/usb_device_video.h	483;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_SELECT_LAYER_CONTROL	usb/device/class/usb_device_video.h	478;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_SLICE_MODE_CONTROL	usb/device/class/usb_device_video.h	482;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_START_OR_STOP_LAYER_CONTROL	usb/device/class/usb_device_video.h	494;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_SYNC_REF_FRAME_CONTROL	usb/device/class/usb_device_video.h	488;"	d
USB_DEVICE_VIDEO_GET_LEN_EU_VIDEO_RESOLUTION_CONTROL	usb/device/class/usb_device_video.h	480;"	d
USB_DEVICE_VIDEO_GET_LEN_VS_COMMIT_CONTROL	usb/device/class/usb_device_video.h	473;"	d
USB_DEVICE_VIDEO_GET_LEN_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	472;"	d
USB_DEVICE_VIDEO_GET_LEN_VS_STILL_COMMIT_CONTROL	usb/device/class/usb_device_video.h	475;"	d
USB_DEVICE_VIDEO_GET_LEN_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	474;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_DIGITAL_WINDOW_CONTROL	usb/device/class/usb_device_video.h	407;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	396;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_FOCUS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	397;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_FOCUS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	398;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_IRIS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	399;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_PANTILT_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	402;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_PANTILT_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	403;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_REGION_OF_INTEREST_CONTROL	usb/device/class/usb_device_video.h	408;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_ROLL_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	404;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_ROLL_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	405;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_ZOOM_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	400;"	d
USB_DEVICE_VIDEO_GET_MAX_CT_ZOOM_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	401;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	420;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	421;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_LEVEL_IDC_LIMIT_CONTROL	usb/device/class/usb_device_video.h	426;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_LTR_BUFFER_CONTROL	usb/device/class/usb_device_video.h	425;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_MIN_FRAME_INTERVAL_CONTROL	usb/device/class/usb_device_video.h	418;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	422;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_QP_RANGE_CONTROL	usb/device/class/usb_device_video.h	428;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	423;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_SEI_PAYLOADTYPE_CONTROL	usb/device/class/usb_device_video.h	427;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_SLICE_MODE_CONTROL	usb/device/class/usb_device_video.h	419;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_SYNC_REF_FRAME_CONTROL	usb/device/class/usb_device_video.h	424;"	d
USB_DEVICE_VIDEO_GET_MAX_EU_VIDEO_RESOLUTION_CONTROL	usb/device/class/usb_device_video.h	417;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_BACKLIGHT_COMPENSATION_CONTROL	usb/device/class/usb_device_video.h	383;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_BRIGHTNESS_CONTROL	usb/device/class/usb_device_video.h	384;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_CONTRACT_CONTROL	usb/device/class/usb_device_video.h	385;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_DIGITAL_MULTIPLIER_CONTROL	usb/device/class/usb_device_video.h	393;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	usb/device/class/usb_device_video.h	394;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_GAIN_CONTROL	usb/device/class/usb_device_video.h	386;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_GAMMA_CONTROL	usb/device/class/usb_device_video.h	390;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_HUE_CONTROL	usb/device/class/usb_device_video.h	387;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_SATURATION_CONTROL	usb/device/class/usb_device_video.h	388;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_SHARRNESS_CONTROL	usb/device/class/usb_device_video.h	389;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_WHITE_BALANCE_COMPONENT_CONTROL	usb/device/class/usb_device_video.h	392;"	d
USB_DEVICE_VIDEO_GET_MAX_PU_WHITE_BALANCE_TEMPERATURE_CONTROL	usb/device/class/usb_device_video.h	391;"	d
USB_DEVICE_VIDEO_GET_MAX_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	411;"	d
USB_DEVICE_VIDEO_GET_MAX_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	412;"	d
USB_DEVICE_VIDEO_GET_MAX_VS_SYNCH_DELAY_CONTROL	usb/device/class/usb_device_video.h	414;"	d
USB_DEVICE_VIDEO_GET_MAX_VS_UPDATE_FRAME_SEGMENT_CONTROL	usb/device/class/usb_device_video.h	413;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_DIGITAL_WINDOW_CONTROL	usb/device/class/usb_device_video.h	359;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	348;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_FOCUS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	349;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_FOCUS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	350;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_IRIS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	351;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_PANTILT_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	354;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_PANTILT_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	355;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_REGION_OF_INTEREST_CONTROL	usb/device/class/usb_device_video.h	360;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_ROLL_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	356;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_ROLL_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	357;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_ZOOM_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	352;"	d
USB_DEVICE_VIDEO_GET_MIN_CT_ZOOM_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	353;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	372;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	373;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_LEVEL_IDC_LIMIT_CONTROL	usb/device/class/usb_device_video.h	377;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_MIN_FRAME_INTERVAL_CONTROL	usb/device/class/usb_device_video.h	370;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	374;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_QP_RANGE_CONTROL	usb/device/class/usb_device_video.h	379;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	375;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_SEI_PAYLOADTYPE_CONTROL	usb/device/class/usb_device_video.h	378;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_SLICE_MODE_CONTROL	usb/device/class/usb_device_video.h	371;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_SYNC_REF_FRAME_CONTROL	usb/device/class/usb_device_video.h	376;"	d
USB_DEVICE_VIDEO_GET_MIN_EU_VIDEO_RESOLUTION_CONTROL	usb/device/class/usb_device_video.h	369;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_BACKLIGHT_COMPENSATION_CONTROL	usb/device/class/usb_device_video.h	335;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_BRIGHTNESS_CONTROL	usb/device/class/usb_device_video.h	336;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_CONTRACT_CONTROL	usb/device/class/usb_device_video.h	337;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_DIGITAL_MULTIPLIER_CONTROL	usb/device/class/usb_device_video.h	345;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	usb/device/class/usb_device_video.h	346;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_GAIN_CONTROL	usb/device/class/usb_device_video.h	338;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_GAMMA_CONTROL	usb/device/class/usb_device_video.h	342;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_HUE_CONTROL	usb/device/class/usb_device_video.h	339;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_SATURATION_CONTROL	usb/device/class/usb_device_video.h	340;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_SHARRNESS_CONTROL	usb/device/class/usb_device_video.h	341;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_WHITE_BALANCE_COMPONENT_CONTROL	usb/device/class/usb_device_video.h	344;"	d
USB_DEVICE_VIDEO_GET_MIN_PU_WHITE_BALANCE_TEMPERATURE_CONTROL	usb/device/class/usb_device_video.h	343;"	d
USB_DEVICE_VIDEO_GET_MIN_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	363;"	d
USB_DEVICE_VIDEO_GET_MIN_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	364;"	d
USB_DEVICE_VIDEO_GET_MIN_VS_SYNCH_DELAY_CONTROL	usb/device/class/usb_device_video.h	366;"	d
USB_DEVICE_VIDEO_GET_MIN_VS_UPDATE_FRAME_SEGMENT_CONTROL	usb/device/class/usb_device_video.h	365;"	d
USB_DEVICE_VIDEO_GET_REQUEST_ENDPOINT	usb/device/class/usb_device_video.h	237;"	d
USB_DEVICE_VIDEO_GET_REQUEST_INTERFACE	usb/device/class/usb_device_video.h	236;"	d
USB_DEVICE_VIDEO_GET_RES_CT_AE_MODE_CONTROL	usb/device/class/usb_device_video.h	445;"	d
USB_DEVICE_VIDEO_GET_RES_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	446;"	d
USB_DEVICE_VIDEO_GET_RES_CT_FOCUS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	447;"	d
USB_DEVICE_VIDEO_GET_RES_CT_FOCUS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	448;"	d
USB_DEVICE_VIDEO_GET_RES_CT_IRIS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	449;"	d
USB_DEVICE_VIDEO_GET_RES_CT_PANTILT_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	452;"	d
USB_DEVICE_VIDEO_GET_RES_CT_PANTILT_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	453;"	d
USB_DEVICE_VIDEO_GET_RES_CT_ROLL_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	454;"	d
USB_DEVICE_VIDEO_GET_RES_CT_ROLL_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	455;"	d
USB_DEVICE_VIDEO_GET_RES_CT_ZOOM_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	450;"	d
USB_DEVICE_VIDEO_GET_RES_CT_ZOOM_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	451;"	d
USB_DEVICE_VIDEO_GET_RES_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	463;"	d
USB_DEVICE_VIDEO_GET_RES_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	464;"	d
USB_DEVICE_VIDEO_GET_RES_EU_ERROR_RESILIENCY_CONTROL	usb/device/class/usb_device_video.h	467;"	d
USB_DEVICE_VIDEO_GET_RES_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	465;"	d
USB_DEVICE_VIDEO_GET_RES_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	466;"	d
USB_DEVICE_VIDEO_GET_RES_PU_BACKLIGHT_COMPENSATION_CONTROL	usb/device/class/usb_device_video.h	432;"	d
USB_DEVICE_VIDEO_GET_RES_PU_BRIGHTNESS_CONTROL	usb/device/class/usb_device_video.h	433;"	d
USB_DEVICE_VIDEO_GET_RES_PU_CONTRACT_CONTROL	usb/device/class/usb_device_video.h	434;"	d
USB_DEVICE_VIDEO_GET_RES_PU_DIGITAL_MULTIPLIER_CONTROL	usb/device/class/usb_device_video.h	442;"	d
USB_DEVICE_VIDEO_GET_RES_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	usb/device/class/usb_device_video.h	443;"	d
USB_DEVICE_VIDEO_GET_RES_PU_GAIN_CONTROL	usb/device/class/usb_device_video.h	435;"	d
USB_DEVICE_VIDEO_GET_RES_PU_GAMMA_CONTROL	usb/device/class/usb_device_video.h	439;"	d
USB_DEVICE_VIDEO_GET_RES_PU_HUE_CONTROL	usb/device/class/usb_device_video.h	436;"	d
USB_DEVICE_VIDEO_GET_RES_PU_SATURATION_CONTROL	usb/device/class/usb_device_video.h	437;"	d
USB_DEVICE_VIDEO_GET_RES_PU_SHARRNESS_CONTROL	usb/device/class/usb_device_video.h	438;"	d
USB_DEVICE_VIDEO_GET_RES_PU_WHITE_BALANCE_COMPONENT_CONTROL	usb/device/class/usb_device_video.h	441;"	d
USB_DEVICE_VIDEO_GET_RES_PU_WHITE_BALANCE_TEMPERATURE_CONTROL	usb/device/class/usb_device_video.h	440;"	d
USB_DEVICE_VIDEO_GET_RES_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	457;"	d
USB_DEVICE_VIDEO_GET_RES_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	458;"	d
USB_DEVICE_VIDEO_GET_RES_VS_SYNCH_DELAY_CONTROL	usb/device/class/usb_device_video.h	460;"	d
USB_DEVICE_VIDEO_GET_RES_VS_UPDATE_FRAME_SEGMENT_CONTROL	usb/device/class/usb_device_video.h	459;"	d
USB_DEVICE_VIDEO_ITT_CAMERA	usb/device/class/usb_device_video.h	210;"	d
USB_DEVICE_VIDEO_ITT_MEDIA_TRANSPORT_INPUT	usb/device/class/usb_device_video.h	211;"	d
USB_DEVICE_VIDEO_ITT_VENDOR_SPECIFIC	usb/device/class/usb_device_video.h	209;"	d
USB_DEVICE_VIDEO_OTT_DISPLAY	usb/device/class/usb_device_video.h	215;"	d
USB_DEVICE_VIDEO_OTT_MEDIA_TRANSPORT_OUTPUT	usb/device/class/usb_device_video.h	216;"	d
USB_DEVICE_VIDEO_OTT_VENDOR_SPECIFIC	usb/device/class/usb_device_video.h	214;"	d
USB_DEVICE_VIDEO_PC_PROTOCOL_15	usb/device/class/usb_device_video.h	37;"	d
USB_DEVICE_VIDEO_PC_PROTOCOL_UNDEFINED	usb/device/class/usb_device_video.h	36;"	d
USB_DEVICE_VIDEO_PU_ANALOG_LOCK_STATUS_CONTROL	usb/device/class/usb_device_video.h	156;"	d
USB_DEVICE_VIDEO_PU_ANALOG_VIDEO_STANDARD_CONTROL	usb/device/class/usb_device_video.h	155;"	d
USB_DEVICE_VIDEO_PU_BACKLIGHT_COMPENSATION_CONTROL	usb/device/class/usb_device_video.h	139;"	d
USB_DEVICE_VIDEO_PU_BRIGHTNESS_CONTROL	usb/device/class/usb_device_video.h	140;"	d
USB_DEVICE_VIDEO_PU_CONTRAST_AUTO_CONTROL	usb/device/class/usb_device_video.h	157;"	d
USB_DEVICE_VIDEO_PU_CONTRAST_CONTROL	usb/device/class/usb_device_video.h	141;"	d
USB_DEVICE_VIDEO_PU_CONTROL_UNDEFINED	usb/device/class/usb_device_video.h	138;"	d
USB_DEVICE_VIDEO_PU_DIGITAL_MULTIPLIER_CONTROL	usb/device/class/usb_device_video.h	152;"	d
USB_DEVICE_VIDEO_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	usb/device/class/usb_device_video.h	153;"	d
USB_DEVICE_VIDEO_PU_GAIN_CONTROL	usb/device/class/usb_device_video.h	142;"	d
USB_DEVICE_VIDEO_PU_GAMMA_CONTROL	usb/device/class/usb_device_video.h	147;"	d
USB_DEVICE_VIDEO_PU_HUE_AUTO_CONTROL	usb/device/class/usb_device_video.h	154;"	d
USB_DEVICE_VIDEO_PU_HUE_CONTROL	usb/device/class/usb_device_video.h	144;"	d
USB_DEVICE_VIDEO_PU_POWER_LINE_FREQUENCY_CONTROL	usb/device/class/usb_device_video.h	143;"	d
USB_DEVICE_VIDEO_PU_SATURATION_CONTROL	usb/device/class/usb_device_video.h	145;"	d
USB_DEVICE_VIDEO_PU_SHARPNESS_CONTROL	usb/device/class/usb_device_video.h	146;"	d
USB_DEVICE_VIDEO_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL	usb/device/class/usb_device_video.h	151;"	d
USB_DEVICE_VIDEO_PU_WHITE_BALANCE_COMPONENT_CONTROL	usb/device/class/usb_device_video.h	150;"	d
USB_DEVICE_VIDEO_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL	usb/device/class/usb_device_video.h	149;"	d
USB_DEVICE_VIDEO_PU_WHITE_BALANCE_TEMPERATURE_CONTROL	usb/device/class/usb_device_video.h	148;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_CUR	usb/device/class/usb_device_video.h	89;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_CUR_ALL	usb/device/class/usb_device_video.h	96;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_DEF	usb/device/class/usb_device_video.h	95;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_DEF_ALL	usb/device/class/usb_device_video.h	100;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_INFO	usb/device/class/usb_device_video.h	94;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_LEN	usb/device/class/usb_device_video.h	93;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_MAX	usb/device/class/usb_device_video.h	91;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_MAX_ALL	usb/device/class/usb_device_video.h	98;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_MIN	usb/device/class/usb_device_video.h	90;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_MIN_ALL	usb/device/class/usb_device_video.h	97;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_RES	usb/device/class/usb_device_video.h	92;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_GET_RES_ALL	usb/device/class/usb_device_video.h	99;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_SET_CUR	usb/device/class/usb_device_video.h	87;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_SET_CUR_ALL	usb/device/class/usb_device_video.h	88;"	d
USB_DEVICE_VIDEO_REQUEST_CODE_UNDEFINED	usb/device/class/usb_device_video.h	86;"	d
USB_DEVICE_VIDEO_SC_UNDEFINED	usb/device/class/usb_device_video.h	30;"	d
USB_DEVICE_VIDEO_SC_VIDEOCONTROL	usb/device/class/usb_device_video.h	31;"	d
USB_DEVICE_VIDEO_SC_VIDEOSTREAMING	usb/device/class/usb_device_video.h	32;"	d
USB_DEVICE_VIDEO_SC_VIDEO_INTERFACE_COLLECTION	usb/device/class/usb_device_video.h	33;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_AE_MODE_CONTROL	usb/device/class/usb_device_video.h	662;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_AE_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	663;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_DIGITAL_WINDOW_CONTROL	usb/device/class/usb_device_video.h	680;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	664;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_EXPOSURE_TIME_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	665;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_FOCUS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	666;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_FOCUS_AUTO_CONTROL	usb/device/class/usb_device_video.h	668;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_FOCUS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	667;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_FOCUS_SIMPLE_CONTROL	usb/device/class/usb_device_video.h	679;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_IRIS_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	669;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_IRIS_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	670;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_PANTILT_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	673;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_PANTILT_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	674;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_PRIVACY_CONTROL	usb/device/class/usb_device_video.h	677;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_REGION_OF_INTEREST_CONTROL	usb/device/class/usb_device_video.h	681;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_ROLL_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	675;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_ROLL_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	676;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_SCANNING_MODE_CONTROL	usb/device/class/usb_device_video.h	661;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_ZOOM_ABSOLUTE_CONTROL	usb/device/class/usb_device_video.h	671;"	d
USB_DEVICE_VIDEO_SET_CUR_CT_ZOOM_RELATIVE_CONTROL	usb/device/class/usb_device_video.h	672;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_AVERAGE_BITRATE_CONTROL	usb/device/class/usb_device_video.h	701;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_CPB_SIZE_CONTROL	usb/device/class/usb_device_video.h	702;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_ERROR_RESILIENCY_CONTROL	usb/device/class/usb_device_video.h	714;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_LEVEL_IDC_LIMIT_CONTROL	usb/device/class/usb_device_video.h	709;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_LTR_BUFFER_CONTROL	usb/device/class/usb_device_video.h	706;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_LTR_PICTURE_CONTROL	usb/device/class/usb_device_video.h	707;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_LTR_VALIDATION_CONTROL	usb/device/class/usb_device_video.h	708;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_MIN_FRAME_INTERVAL_CONTROL	usb/device/class/usb_device_video.h	698;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_PEAK_BIT_RATE_CONTROL	usb/device/class/usb_device_video.h	703;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_PRIORITY_CONTROL	usb/device/class/usb_device_video.h	712;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_PROFILE_TOOLSET_CONTROL	usb/device/class/usb_device_video.h	696;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_QP_RANGE_CONTROL	usb/device/class/usb_device_video.h	711;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_QUANTIZATION_PARAMS_CONTROL	usb/device/class/usb_device_video.h	704;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_RATE_CONTROL_MODE_CONTROL	usb/device/class/usb_device_video.h	700;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_SEI_PAYLOADTYPE_CONTROL	usb/device/class/usb_device_video.h	710;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_SELECT_LAYER_CONTROL	usb/device/class/usb_device_video.h	695;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_SLICE_MODE_CONTROL	usb/device/class/usb_device_video.h	699;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_START_OR_STOP_LAYER_CONTROL	usb/device/class/usb_device_video.h	713;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_SYNC_REF_FRAME_CONTROL	usb/device/class/usb_device_video.h	705;"	d
USB_DEVICE_VIDEO_SET_CUR_EU_VIDEO_RESOLUTION_CONTROL	usb/device/class/usb_device_video.h	697;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_BACKLIGHT_COMPENSATION_CONTROL	usb/device/class/usb_device_video.h	641;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_BRIGHTNESS_CONTROL	usb/device/class/usb_device_video.h	642;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_CONTRACT_CONTROL	usb/device/class/usb_device_video.h	643;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_CONTRAST_AUTO_CONTROL	usb/device/class/usb_device_video.h	658;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_DIGITAL_MULTIPLIER_CONTROL	usb/device/class/usb_device_video.h	654;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_DIGITAL_MULTIPLIER_LIMIT_CONTROL	usb/device/class/usb_device_video.h	655;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_GAIN_CONTROL	usb/device/class/usb_device_video.h	644;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_GAMMA_CONTROL	usb/device/class/usb_device_video.h	649;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_HUE_AUTO_CONTROL	usb/device/class/usb_device_video.h	656;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_HUE_CONTROL	usb/device/class/usb_device_video.h	646;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_POWER_LINE_FREQUENCY_CONTROL	usb/device/class/usb_device_video.h	645;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_SATURATION_CONTROL	usb/device/class/usb_device_video.h	647;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_SHARRNESS_CONTROL	usb/device/class/usb_device_video.h	648;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL	usb/device/class/usb_device_video.h	653;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_WHITE_BALANCE_COMPONENT_CONTROL	usb/device/class/usb_device_video.h	652;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL	usb/device/class/usb_device_video.h	651;"	d
USB_DEVICE_VIDEO_SET_CUR_PU_WHITE_BALANCE_TEMPERATURE_CONTROL	usb/device/class/usb_device_video.h	650;"	d
USB_DEVICE_VIDEO_SET_CUR_VC_POWER_MODE_CONTROL	usb/device/class/usb_device_video.h	639;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_COMMIT_CONTROL	usb/device/class/usb_device_video.h	685;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_GENERATE_KEY_FRAME_CONTROL	usb/device/class/usb_device_video.h	690;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	684;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_STILL_COMMIT_CONTROL	usb/device/class/usb_device_video.h	687;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_STILL_IMAGE_TRIGGER_CONTROL	usb/device/class/usb_device_video.h	688;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	686;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_STREAM_ERROR_CODE_CONTROL	usb/device/class/usb_device_video.h	689;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_SYNCH_DELAY_CONTROL	usb/device/class/usb_device_video.h	692;"	d
USB_DEVICE_VIDEO_SET_CUR_VS_UPDATE_FRAME_SEGMENT_CONTROL	usb/device/class/usb_device_video.h	691;"	d
USB_DEVICE_VIDEO_SET_REQUEST_ENDPOINT	usb/device/class/usb_device_video.h	233;"	d
USB_DEVICE_VIDEO_SET_REQUEST_INTERFACE	usb/device/class/usb_device_video.h	232;"	d
USB_DEVICE_VIDEO_STILL_IMAGE_TRIGGER_ABORT_STILL_IMAGE_TRANSMISSION	usb/device/class/usb_device_video.h	245;"	d
USB_DEVICE_VIDEO_STILL_IMAGE_TRIGGER_NORMAL_OPERATION	usb/device/class/usb_device_video.h	242;"	d
USB_DEVICE_VIDEO_STILL_IMAGE_TRIGGER_TRANSMIT_STILL_IMAGE	usb/device/class/usb_device_video.h	243;"	d
USB_DEVICE_VIDEO_STILL_IMAGE_TRIGGER_TRANSMIT_STILL_IMAGE_VS_DEDICATED_BULK_PIPE	usb/device/class/usb_device_video.h	244;"	d
USB_DEVICE_VIDEO_SU_CONTROL_UNDEFINED	usb/device/class/usb_device_video.h	111;"	d
USB_DEVICE_VIDEO_SU_INPUT_SELECT_CONTROL	usb/device/class/usb_device_video.h	112;"	d
USB_DEVICE_VIDEO_TE_CONTROL_UNDEFINED	usb/device/class/usb_device_video.h	108;"	d
USB_DEVICE_VIDEO_TT_STREAMING	usb/device/class/usb_device_video.h	206;"	d
USB_DEVICE_VIDEO_TT_VENDOR_SPECIFIC	usb/device/class/usb_device_video.h	205;"	d
USB_DEVICE_VIDEO_VC_CONTROL_UNDEFINED	usb/device/class/usb_device_video.h	103;"	d
USB_DEVICE_VIDEO_VC_REQUEST_ERROR_CODE_CONTROL	usb/device/class/usb_device_video.h	105;"	d
USB_DEVICE_VIDEO_VC_VIDEO_POWER_MODE_CONTROL	usb/device/class/usb_device_video.h	104;"	d
USB_DEVICE_VIDEO_VS_COMMIT_CONTROL	usb/device/class/usb_device_video.h	188;"	d
USB_DEVICE_VIDEO_VS_CONTROL_UNDEFINED	usb/device/class/usb_device_video.h	186;"	d
USB_DEVICE_VIDEO_VS_GENERATE_KEY_FRAME_CONTROL	usb/device/class/usb_device_video.h	193;"	d
USB_DEVICE_VIDEO_VS_PROBE_CONTROL	usb/device/class/usb_device_video.h	187;"	d
USB_DEVICE_VIDEO_VS_STILL_COMMIT_CONTROL	usb/device/class/usb_device_video.h	190;"	d
USB_DEVICE_VIDEO_VS_STILL_IMAGE_TRIGGER_CONTROL	usb/device/class/usb_device_video.h	191;"	d
USB_DEVICE_VIDEO_VS_STILL_PROBE_CONTROL	usb/device/class/usb_device_video.h	189;"	d
USB_DEVICE_VIDEO_VS_STREAM_ERROR_CODE_CONTROL	usb/device/class/usb_device_video.h	192;"	d
USB_DEVICE_VIDEO_VS_SYNCH_DELAY_CONTROL	usb/device/class/usb_device_video.h	195;"	d
USB_DEVICE_VIDEO_VS_UPDATE_FRAME_SEGMENT_CONTROL	usb/device/class/usb_device_video.h	194;"	d
USB_DEVICE_VIDEO_XU_CONTROL_UNDEFINED	usb/device/class/usb_device_video.h	183;"	d
USB_DMA_DATA_INIT_SUB	usb/include/usb_misc.h	368;"	d
USB_DMA_DATA_NONCACHEABLE	usb/include/usb_misc.h	419;"	d
USB_DMA_DATA_NONINIT_SUB	usb/include/usb_misc.h	367;"	d
USB_DMA_INIT_DATA_ALIGN	usb/include/usb_misc.h	415;"	d
USB_DMA_NONINIT_DATA_ALIGN	usb/include/usb_misc.h	414;"	d
USB_DeviceAllocateHandle	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceAllocateHandle(uint8_t controllerId, usb_device_struct_t **handle)$/;"	f	file:
USB_DeviceApplicationInit	vcom/composite.c	/^void USB_DeviceApplicationInit(void)$/;"	f
USB_DeviceAttachNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceAttachNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceAudioAllocateHandle	usb/device/class/usb_device_audio.c	/^static usb_status_t USB_DeviceAudioAllocateHandle(usb_device_audio_struct_t **handle)$/;"	f	file:
USB_DeviceAudioControlEndpointsDeinit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioControlEndpointsDeinit(usb_device_audio_struct_t *audioHandle)$/;"	f
USB_DeviceAudioControlEndpointsInit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioControlEndpointsInit(usb_device_audio_struct_t *audioHandle)$/;"	f
USB_DeviceAudioDeinit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioDeinit(class_handle_t handle)$/;"	f
USB_DeviceAudioEvent	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioEvent(void *handle, uint32_t event, void *param)$/;"	f
USB_DeviceAudioFreeHandle	usb/device/class/usb_device_audio.c	/^static usb_status_t USB_DeviceAudioFreeHandle(usb_device_audio_struct_t *handle)$/;"	f	file:
USB_DeviceAudioGetControlTerminal	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioGetControlTerminal(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioGetCurAudioFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioGetCurAudioFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioGetFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioGetFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioGetMaxAudioFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioGetMaxAudioFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioGetMinAudioFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioGetMinAudioFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioGetRequestEndpoint	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioGetRequestEndpoint(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioGetRequestInterface	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioGetRequestInterface(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioGetResAudioFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioGetResAudioFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioInit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioInit(uint8_t controllerId, usb_device_class_config_struct_t *config, class_handle_t *handle)$/;"	f
USB_DeviceAudioInterruptIn	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioInterruptIn(usb_device_handle handle,$/;"	f
USB_DeviceAudioIsochronousIn	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioIsochronousIn(usb_device_handle handle,$/;"	f
USB_DeviceAudioIsochronousOut	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioIsochronousOut(usb_device_handle handle,$/;"	f
USB_DeviceAudioRecv	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioRecv(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceAudioSend	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSend(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceAudioSetControlTerminal	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSetControlTerminal(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioSetCurAudioFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSetCurAudioFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioSetFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSetFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioSetMaxAudioFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSetMaxAudioFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioSetMinAudioFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSetMinAudioFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioSetRequestEndpoint	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSetRequestEndpoint(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioSetRequestInterface	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSetRequestInterface(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioSetResAudioFeatureUnit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioSetResAudioFeatureUnit(usb_device_audio_struct_t *audioHandle,$/;"	f
USB_DeviceAudioStreamEndpointsDeinit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioStreamEndpointsDeinit(usb_device_audio_struct_t *audioHandle)$/;"	f
USB_DeviceAudioStreamEndpointsInit	usb/device/class/usb_device_audio.c	/^usb_status_t USB_DeviceAudioStreamEndpointsInit(usb_device_audio_struct_t *audioHandle)$/;"	f
USB_DeviceCallback	vcom/composite.c	/^usb_status_t USB_DeviceCallback(usb_device_handle handle, uint32_t event, void *param)$/;"	f
USB_DeviceCancel	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceCancel(usb_device_handle handle, uint8_t endpointAddress)$/;"	f
USB_DeviceCcidAddTransfer	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidAddTransfer(usb_device_ccid_transfer_struct_t **transfer_queue,$/;"	f	file:
USB_DeviceCcidAllocateHandle	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidAllocateHandle(usb_device_ccid_struct_t **handle)$/;"	f	file:
USB_DeviceCcidBulkIn	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidBulkIn(usb_device_handle deviceHandle,$/;"	f	file:
USB_DeviceCcidBulkOut	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidBulkOut(usb_device_handle deviceHandle,$/;"	f	file:
USB_DeviceCcidDeinit	usb/device/class/usb_device_ccid.c	/^usb_status_t USB_DeviceCcidDeinit(class_handle_t handle)$/;"	f
USB_DeviceCcidEndpointsDeinit	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidEndpointsDeinit(usb_device_ccid_struct_t *ccidHandle)$/;"	f	file:
USB_DeviceCcidEndpointsInit	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidEndpointsInit(usb_device_ccid_struct_t *ccidHandle)$/;"	f	file:
USB_DeviceCcidEvent	usb/device/class/usb_device_ccid.c	/^usb_status_t USB_DeviceCcidEvent(void *handle, uint32_t event, void *param)$/;"	f
USB_DeviceCcidFreeHandle	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidFreeHandle(usb_device_ccid_struct_t *handle)$/;"	f	file:
USB_DeviceCcidInit	usb/device/class/usb_device_ccid.c	/^usb_status_t USB_DeviceCcidInit(uint8_t controllerId, usb_device_class_config_struct_t *config, class_handle_t *handle)$/;"	f
USB_DeviceCcidInterruptIn	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidInterruptIn(usb_device_handle deviceHandle,$/;"	f	file:
USB_DeviceCcidNotifyHardwareError	usb/device/class/usb_device_ccid.c	/^usb_status_t USB_DeviceCcidNotifyHardwareError(class_handle_t handle,$/;"	f
USB_DeviceCcidNotifySlotChange	usb/device/class/usb_device_ccid.c	/^usb_status_t USB_DeviceCcidNotifySlotChange(class_handle_t handle, uint8_t slot, usb_device_ccid_slot_state_t state)$/;"	f
USB_DeviceCcidRemoveTransfer	usb/device/class/usb_device_ccid.c	/^static usb_status_t USB_DeviceCcidRemoveTransfer(usb_device_ccid_transfer_struct_t **transfer_queue,$/;"	f	file:
USB_DeviceCdcAcmAllocateHandle	usb/device/class/usb_device_cdc_acm.c	/^static usb_status_t USB_DeviceCdcAcmAllocateHandle(usb_device_cdc_acm_struct_t **handle)$/;"	f	file:
USB_DeviceCdcAcmBulkIn	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmBulkIn(usb_device_handle handle,$/;"	f
USB_DeviceCdcAcmBulkOut	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmBulkOut(usb_device_handle handle,$/;"	f
USB_DeviceCdcAcmDeinit	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmDeinit(class_handle_t handle)$/;"	f
USB_DeviceCdcAcmEndpointsDeinit	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmEndpointsDeinit(usb_device_cdc_acm_struct_t *cdcAcmHandle)$/;"	f
USB_DeviceCdcAcmEndpointsInit	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmEndpointsInit(usb_device_cdc_acm_struct_t *cdcAcmHandle)$/;"	f
USB_DeviceCdcAcmEvent	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmEvent(void *handle, uint32_t event, void *param)$/;"	f
USB_DeviceCdcAcmFreeHandle	usb/device/class/usb_device_cdc_acm.c	/^static usb_status_t USB_DeviceCdcAcmFreeHandle(usb_device_cdc_acm_struct_t *handle)$/;"	f	file:
USB_DeviceCdcAcmInit	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmInit(uint8_t controllerId,$/;"	f
USB_DeviceCdcAcmInterruptIn	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmInterruptIn(usb_device_handle handle,$/;"	f
USB_DeviceCdcAcmRecv	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmRecv(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceCdcAcmSend	usb/device/class/usb_device_cdc_acm.c	/^usb_status_t USB_DeviceCdcAcmSend(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceCdcRndisAllocateHandle	usb/device/class/usb_device_cdc_rndis.c	/^static usb_status_t USB_DeviceCdcRndisAllocateHandle(usb_device_cdc_rndis_struct_t **handle)$/;"	f	file:
USB_DeviceCdcRndisDeinit	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisDeinit(usb_device_cdc_rndis_struct_t *handle)$/;"	f
USB_DeviceCdcRndisFreeHandle	usb/device/class/usb_device_cdc_rndis.c	/^static usb_status_t USB_DeviceCdcRndisFreeHandle(usb_device_cdc_rndis_struct_t *handle)$/;"	f	file:
USB_DeviceCdcRndisHaltCommand	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisHaltCommand(usb_device_cdc_rndis_struct_t *handle)$/;"	f
USB_DeviceCdcRndisIndicateStatusCommand	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisIndicateStatusCommand(usb_device_cdc_rndis_struct_t *handle,$/;"	f
USB_DeviceCdcRndisInit	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisInit(class_handle_t classHandle,$/;"	f
USB_DeviceCdcRndisInitializeCommand	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisInitializeCommand(usb_device_cdc_rndis_struct_t *handle,$/;"	f
USB_DeviceCdcRndisKeepaliveCommand	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisKeepaliveCommand(usb_device_cdc_rndis_struct_t *handle, uint8_t **message, uint32_t *len)$/;"	f
USB_DeviceCdcRndisMessageGet	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisMessageGet(usb_device_cdc_rndis_struct_t *handle, uint8_t **message, uint32_t *len)$/;"	f
USB_DeviceCdcRndisMessageSet	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisMessageSet(usb_device_cdc_rndis_struct_t *handle, uint8_t **message, uint32_t *len)$/;"	f
USB_DeviceCdcRndisQueryCommand	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisQueryCommand(usb_device_cdc_rndis_struct_t *handle, uint8_t **message, uint32_t *len)$/;"	f
USB_DeviceCdcRndisResetCommand	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisResetCommand(usb_device_cdc_rndis_struct_t *handle, uint8_t **message, uint32_t *len)$/;"	f
USB_DeviceCdcRndisResponseAvailable	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisResponseAvailable(usb_device_cdc_rndis_struct_t *handle)$/;"	f
USB_DeviceCdcRndisSetCommand	usb/device/class/usb_device_cdc_rndis.c	/^usb_status_t USB_DeviceCdcRndisSetCommand(usb_device_cdc_rndis_struct_t *handle, uint8_t **message, uint32_t *len)$/;"	f
USB_DeviceCdcVcomCallback	vcom/virtual_com.c	/^usb_status_t USB_DeviceCdcVcomCallback(class_handle_t handle, uint32_t event, void *param)$/;"	f
USB_DeviceCdcVcomInit	vcom/virtual_com.c	/^usb_status_t USB_DeviceCdcVcomInit(usb_device_composite_struct_t *deviceComposite)$/;"	f
USB_DeviceCdcVcomSetConfigure	vcom/virtual_com.c	/^usb_status_t USB_DeviceCdcVcomSetConfigure(class_handle_t handle, uint8_t configure)$/;"	f
USB_DeviceCdcVcomTask	vcom/virtual_com.c	/^void USB_DeviceCdcVcomTask(void)$/;"	f
USB_DeviceCh9GetConfiguration	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9GetConfiguration(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceCh9GetDescriptor	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9GetDescriptor(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceCh9GetInterface	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9GetInterface(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceCh9GetStatus	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9GetStatus(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceCh9SetAddress	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9SetAddress(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceCh9SetClearFeature	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9SetClearFeature(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceCh9SetConfiguration	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9SetConfiguration(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceCh9SetInterface	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9SetInterface(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceCh9SynchFrame	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceCh9SynchFrame(usb_device_common_class_struct_t *classHandle,$/;"	f	file:
USB_DeviceClassAllocateHandle	usb/device/class/usb_device_class.c	/^static usb_status_t USB_DeviceClassAllocateHandle(uint8_t controllerId, usb_device_common_class_struct_t **handle)$/;"	f	file:
USB_DeviceClassCallback	usb/device/class/usb_device_class.c	/^usb_status_t USB_DeviceClassCallback(usb_device_handle handle, uint32_t event, void *param)$/;"	f
USB_DeviceClassDeinit	usb/device/class/usb_device_class.c	/^usb_status_t USB_DeviceClassDeinit(uint8_t controllerId \/*!< [IN] Controller ID *\/$/;"	f
USB_DeviceClassEvent	usb/device/class/usb_device_class.c	/^usb_status_t USB_DeviceClassEvent(usb_device_handle handle, usb_device_class_event_t event, void *param)$/;"	f
USB_DeviceClassFreeHandle	usb/device/class/usb_device_class.c	/^static usb_status_t USB_DeviceClassFreeHandle(uint8_t controllerId)$/;"	f	file:
USB_DeviceClassGetDeviceHandle	usb/device/class/usb_device_class.c	/^usb_status_t USB_DeviceClassGetDeviceHandle(uint8_t controllerId, usb_device_handle *handle)$/;"	f
USB_DeviceClassGetHandleByControllerId	usb/device/class/usb_device_class.c	/^static usb_status_t USB_DeviceClassGetHandleByControllerId(uint8_t controllerId,$/;"	f	file:
USB_DeviceClassGetHandleByDeviceHandle	usb/device/class/usb_device_class.c	/^static usb_status_t USB_DeviceClassGetHandleByDeviceHandle(usb_device_handle deviceHandle,$/;"	f	file:
USB_DeviceClassGetSpeed	usb/device/class/usb_device_class.c	/^usb_status_t USB_DeviceClassGetSpeed(uint8_t controllerId, \/*!< [IN] Controller ID *\/$/;"	f
USB_DeviceClassInit	usb/device/class/usb_device_class.c	/^usb_status_t USB_DeviceClassInit($/;"	f
USB_DeviceClockInit	vcom/composite.c	/^void USB_DeviceClockInit(void)$/;"	f
USB_DeviceControl	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceControl(usb_device_handle handle, usb_device_control_type_t type, void *param)$/;"	f	file:
USB_DeviceControlCallback	usb/device/source/usb_device_ch9.c	/^usb_status_t USB_DeviceControlCallback(usb_device_handle handle,$/;"	f
USB_DeviceControlCallbackFeedback	usb/device/source/usb_device_ch9.c	/^static usb_status_t USB_DeviceControlCallbackFeedback(usb_device_handle handle,$/;"	f	file:
USB_DeviceControlPipeInit	usb/device/source/usb_device_ch9.c	/^usb_status_t USB_DeviceControlPipeInit(usb_device_handle handle, void *param)$/;"	f
USB_DeviceDcdChargingHostDetectNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceDcdChargingHostDetectNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceDcdChargingPortDetectNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceDcdChargingPortDetectNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceDcdDedicatedChargerDetectNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceDcdDedicatedChargerDetectNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceDcdDeinitModule	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceDcdDeinitModule(usb_device_handle handle)$/;"	f
USB_DeviceDcdHSIsrFunction	usb/device/source/ehci/usb_device_ehci.c	/^void USB_DeviceDcdHSIsrFunction(void *deviceHandle)$/;"	f
USB_DeviceDcdInitModule	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceDcdInitModule(usb_device_handle handle, void *time_param)$/;"	f
USB_DeviceDcdIsrFunction	usb/device/source/khci/usb_device_khci.c	/^void USB_DeviceDcdIsrFunction(void *deviceHandle)$/;"	f
USB_DeviceDcdSDPDetectNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceDcdSDPDetectNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceDcdTimeOutNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceDcdTimeOutNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceDcdUnknownPortTypeNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceDcdUnknownPortTypeNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceDeinit	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceDeinit(usb_device_handle handle)$/;"	f
USB_DeviceDeinitEndpoint	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceDeinitEndpoint(usb_device_handle handle, uint8_t endpointAddress)$/;"	f
USB_DeviceDetachNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceDetachNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceEhciCancel	usb/device/source/ehci/usb_device_ehci.c	/^usb_status_t USB_DeviceEhciCancel(usb_device_controller_handle ehciHandle, uint8_t ep)$/;"	f
USB_DeviceEhciCancelControlPipe	usb/device/source/ehci/usb_device_ehci.c	/^static void USB_DeviceEhciCancelControlPipe(usb_device_ehci_state_struct_t *ehciState,$/;"	f	file:
USB_DeviceEhciControl	usb/device/source/ehci/usb_device_ehci.c	/^usb_status_t USB_DeviceEhciControl(usb_device_controller_handle ehciHandle, usb_device_control_type_t type, void *param)$/;"	f
USB_DeviceEhciDeinit	usb/device/source/ehci/usb_device_ehci.c	/^usb_status_t USB_DeviceEhciDeinit(usb_device_controller_handle ehciHandle)$/;"	f
USB_DeviceEhciEndpointDeinit	usb/device/source/ehci/usb_device_ehci.c	/^static usb_status_t USB_DeviceEhciEndpointDeinit(usb_device_ehci_state_struct_t *ehciState, uint8_t ep)$/;"	f	file:
USB_DeviceEhciEndpointInit	usb/device/source/ehci/usb_device_ehci.c	/^static usb_status_t USB_DeviceEhciEndpointInit(usb_device_ehci_state_struct_t *ehciState,$/;"	f	file:
USB_DeviceEhciEndpointStall	usb/device/source/ehci/usb_device_ehci.c	/^static usb_status_t USB_DeviceEhciEndpointStall(usb_device_ehci_state_struct_t *ehciState, uint8_t ep)$/;"	f	file:
USB_DeviceEhciEndpointUnstall	usb/device/source/ehci/usb_device_ehci.c	/^static usb_status_t USB_DeviceEhciEndpointUnstall(usb_device_ehci_state_struct_t *ehciState, uint8_t ep)$/;"	f	file:
USB_DeviceEhciFillSetupBuffer	usb/device/source/ehci/usb_device_ehci.c	/^static void USB_DeviceEhciFillSetupBuffer(usb_device_ehci_state_struct_t *ehciState, uint8_t ep)$/;"	f	file:
USB_DeviceEhciInit	usb/device/source/ehci/usb_device_ehci.c	/^usb_status_t USB_DeviceEhciInit(uint8_t controllerId,$/;"	f
USB_DeviceEhciInterruptPortChange	usb/device/source/ehci/usb_device_ehci.c	/^static void USB_DeviceEhciInterruptPortChange(usb_device_ehci_state_struct_t *ehciState)$/;"	f	file:
USB_DeviceEhciInterruptReset	usb/device/source/ehci/usb_device_ehci.c	/^static void USB_DeviceEhciInterruptReset(usb_device_ehci_state_struct_t *ehciState)$/;"	f	file:
USB_DeviceEhciInterruptSof	usb/device/source/ehci/usb_device_ehci.c	/^static void USB_DeviceEhciInterruptSof(usb_device_ehci_state_struct_t *ehciState)$/;"	f	file:
USB_DeviceEhciInterruptSuspend	usb/device/source/ehci/usb_device_ehci.c	/^static void USB_DeviceEhciInterruptSuspend(usb_device_ehci_state_struct_t *ehciState)$/;"	f	file:
USB_DeviceEhciInterruptTokenDone	usb/device/source/ehci/usb_device_ehci.c	/^static void USB_DeviceEhciInterruptTokenDone(usb_device_ehci_state_struct_t *ehciState)$/;"	f	file:
USB_DeviceEhciIsrFunction	usb/device/source/ehci/usb_device_ehci.c	/^void USB_DeviceEhciIsrFunction(void *deviceHandle)$/;"	f
USB_DeviceEhciRecv	usb/device/source/ehci/usb_device_ehci.c	/^usb_status_t USB_DeviceEhciRecv(usb_device_controller_handle ehciHandle,$/;"	f
USB_DeviceEhciSend	usb/device/source/ehci/usb_device_ehci.c	/^usb_status_t USB_DeviceEhciSend(usb_device_controller_handle ehciHandle,$/;"	f
USB_DeviceEhciSetDefaultState	usb/device/source/ehci/usb_device_ehci.c	/^static void USB_DeviceEhciSetDefaultState(usb_device_ehci_state_struct_t *ehciState)$/;"	f	file:
USB_DeviceEhciTaskFunction	usb/device/include/usb_device.h	521;"	d
USB_DeviceEhciTransfer	usb/device/source/ehci/usb_device_ehci.c	/^static usb_status_t USB_DeviceEhciTransfer(usb_device_ehci_state_struct_t *ehciState,$/;"	f	file:
USB_DeviceErrorNotification	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceErrorNotification(usb_device_struct_t *handle, usb_device_callback_message_struct_t *message)$/;"	f
USB_DeviceFreeHandle	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceFreeHandle(usb_device_struct_t *handle)$/;"	f	file:
USB_DeviceGetConfigurationDescriptor	vcom/usb_device_descriptor.c	/^usb_status_t USB_DeviceGetConfigurationDescriptor($/;"	f
USB_DeviceGetControllerInterface	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceGetControllerInterface($/;"	f	file:
USB_DeviceGetDeviceDescriptor	vcom/usb_device_descriptor.c	/^usb_status_t USB_DeviceGetDeviceDescriptor(usb_device_handle handle,$/;"	f
USB_DeviceGetDeviceQualifierDescriptor	vcom/usb_device_descriptor.c	/^usb_status_t USB_DeviceGetDeviceQualifierDescriptor($/;"	f
USB_DeviceGetRemoteWakeUp	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceGetRemoteWakeUp(usb_device_struct_t *handle, uint8_t **flag)$/;"	f
USB_DeviceGetStatus	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceGetStatus(usb_device_handle handle, usb_device_status_t type, void *param)$/;"	f
USB_DeviceGetStringDescriptor	vcom/usb_device_descriptor.c	/^usb_status_t USB_DeviceGetStringDescriptor(usb_device_handle handle,$/;"	f
USB_DeviceGetVersion	usb/device/source/usb_device_dci.c	/^void USB_DeviceGetVersion(uint32_t *version)$/;"	f
USB_DeviceHidAllocateHandle	usb/device/class/usb_device_hid.c	/^static usb_status_t USB_DeviceHidAllocateHandle(usb_device_hid_struct_t **handle)$/;"	f	file:
USB_DeviceHidDeinit	usb/device/class/usb_device_hid.c	/^usb_status_t USB_DeviceHidDeinit(class_handle_t handle)$/;"	f
USB_DeviceHidEndpointsDeinit	usb/device/class/usb_device_hid.c	/^static usb_status_t USB_DeviceHidEndpointsDeinit(usb_device_hid_struct_t *hidHandle)$/;"	f	file:
USB_DeviceHidEndpointsInit	usb/device/class/usb_device_hid.c	/^static usb_status_t USB_DeviceHidEndpointsInit(usb_device_hid_struct_t *hidHandle)$/;"	f	file:
USB_DeviceHidEvent	usb/device/class/usb_device_hid.c	/^usb_status_t USB_DeviceHidEvent(void *handle, uint32_t event, void *param)$/;"	f
USB_DeviceHidFreeHandle	usb/device/class/usb_device_hid.c	/^static usb_status_t USB_DeviceHidFreeHandle(usb_device_hid_struct_t *handle)$/;"	f	file:
USB_DeviceHidInit	usb/device/class/usb_device_hid.c	/^usb_status_t USB_DeviceHidInit(uint8_t controllerId, usb_device_class_config_struct_t *config, class_handle_t *handle)$/;"	f
USB_DeviceHidInterruptIn	usb/device/class/usb_device_hid.c	/^static usb_status_t USB_DeviceHidInterruptIn(usb_device_handle handle,$/;"	f	file:
USB_DeviceHidInterruptOut	usb/device/class/usb_device_hid.c	/^static usb_status_t USB_DeviceHidInterruptOut(usb_device_handle handle,$/;"	f	file:
USB_DeviceHidRecv	usb/device/class/usb_device_hid.c	/^usb_status_t USB_DeviceHidRecv(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceHidSend	usb/device/class/usb_device_hid.c	/^usb_status_t USB_DeviceHidSend(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceInit	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceInit(uint8_t controllerId, usb_device_callback_t deviceCallback, usb_device_handle *handle)$/;"	f
USB_DeviceInitEndpoint	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceInitEndpoint(usb_device_handle handle,$/;"	f
USB_DeviceIsrEnable	vcom/composite.c	/^void USB_DeviceIsrEnable(void)$/;"	f
USB_DeviceKhciCancel	usb/device/source/khci/usb_device_khci.c	/^usb_status_t USB_DeviceKhciCancel(usb_device_controller_handle khciHandle, uint8_t ep)$/;"	f
USB_DeviceKhciControl	usb/device/source/khci/usb_device_khci.c	/^usb_status_t USB_DeviceKhciControl(usb_device_controller_handle khciHandle, usb_device_control_type_t type, void *param)$/;"	f
USB_DeviceKhciDeinit	usb/device/source/khci/usb_device_khci.c	/^usb_status_t USB_DeviceKhciDeinit(usb_device_controller_handle khciHandle)$/;"	f
USB_DeviceKhciEndpointDeinit	usb/device/source/khci/usb_device_khci.c	/^static usb_status_t USB_DeviceKhciEndpointDeinit(usb_device_khci_state_struct_t *khciState, uint8_t ep)$/;"	f	file:
USB_DeviceKhciEndpointInit	usb/device/source/khci/usb_device_khci.c	/^static usb_status_t USB_DeviceKhciEndpointInit(usb_device_khci_state_struct_t *khciState,$/;"	f	file:
USB_DeviceKhciEndpointStall	usb/device/source/khci/usb_device_khci.c	/^static usb_status_t USB_DeviceKhciEndpointStall(usb_device_khci_state_struct_t *khciState, uint8_t ep)$/;"	f	file:
USB_DeviceKhciEndpointTransfer	usb/device/source/khci/usb_device_khci.c	/^static usb_status_t USB_DeviceKhciEndpointTransfer($/;"	f	file:
USB_DeviceKhciEndpointUnstall	usb/device/source/khci/usb_device_khci.c	/^static usb_status_t USB_DeviceKhciEndpointUnstall(usb_device_khci_state_struct_t *khciState, uint8_t ep)$/;"	f	file:
USB_DeviceKhciInit	usb/device/source/khci/usb_device_khci.c	/^usb_status_t USB_DeviceKhciInit(uint8_t controllerId,$/;"	f
USB_DeviceKhciInterruptError	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciInterruptError(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciInterruptReset	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciInterruptReset(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciInterruptResume	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciInterruptResume(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciInterruptSleep	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciInterruptSleep(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciInterruptStall	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciInterruptStall(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciInterruptTokenDone	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciInterruptTokenDone(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciInterruptVbusFalling	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciInterruptVbusFalling(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciInterruptVbusRising	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciInterruptVbusRising(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciIsrFunction	usb/device/source/khci/usb_device_khci.c	/^void USB_DeviceKhciIsrFunction(void *deviceHandle)$/;"	f
USB_DeviceKhciPrimeNextSetup	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciPrimeNextSetup(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciRecv	usb/device/source/khci/usb_device_khci.c	/^usb_status_t USB_DeviceKhciRecv(usb_device_controller_handle khciHandle,$/;"	f
USB_DeviceKhciSend	usb/device/source/khci/usb_device_khci.c	/^usb_status_t USB_DeviceKhciSend(usb_device_controller_handle khciHandle,$/;"	f
USB_DeviceKhciSetDefaultState	usb/device/source/khci/usb_device_khci.c	/^static void USB_DeviceKhciSetDefaultState(usb_device_khci_state_struct_t *khciState)$/;"	f	file:
USB_DeviceKhciTaskFunction	usb/device/include/usb_device.h	508;"	d
USB_DeviceLpc3511IpCancel	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^usb_status_t USB_DeviceLpc3511IpCancel(usb_device_controller_handle controllerHandle, uint8_t ep)$/;"	f
USB_DeviceLpc3511IpControl	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^usb_status_t USB_DeviceLpc3511IpControl(usb_device_controller_handle controllerHandle,$/;"	f
USB_DeviceLpc3511IpDeinit	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^usb_status_t USB_DeviceLpc3511IpDeinit(usb_device_controller_handle controllerHandle)$/;"	f
USB_DeviceLpc3511IpEndpointDeinit	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpEndpointDeinit(usb_device_lpc3511ip_state_struct_t *lpc3511IpState, uint8_t ep)$/;"	f	file:
USB_DeviceLpc3511IpEndpointInit	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpEndpointInit(usb_device_lpc3511ip_state_struct_t *lpc3511IpState,$/;"	f	file:
USB_DeviceLpc3511IpEndpointPrime	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpEndpointPrime(usb_device_lpc3511ip_state_struct_t *lpc3511IpState,$/;"	f	file:
USB_DeviceLpc3511IpEndpointStall	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpEndpointStall(usb_device_lpc3511ip_state_struct_t *lpc3511IpState, uint8_t ep)$/;"	f	file:
USB_DeviceLpc3511IpEndpointUnstall	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpEndpointUnstall(usb_device_lpc3511ip_state_struct_t *lpc3511IpState, uint8_t ep)$/;"	f	file:
USB_DeviceLpc3511IpGetActualBufferAndPrime	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpGetActualBufferAndPrime(usb_device_lpc3511ip_state_struct_t *lpc3511IpState,$/;"	f	file:
USB_DeviceLpc3511IpGetEndpointStateStruct	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_device_lpc3511ip_endpoint_state_struct_t *USB_DeviceLpc3511IpGetEndpointStateStruct($/;"	f	file:
USB_DeviceLpc3511IpInit	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^usb_status_t USB_DeviceLpc3511IpInit(uint8_t controllerId,$/;"	f
USB_DeviceLpc3511IpInterruptDetach	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static void USB_DeviceLpc3511IpInterruptDetach(usb_device_lpc3511ip_state_struct_t *lpc3511IpState)$/;"	f	file:
USB_DeviceLpc3511IpInterruptLPMSleep	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpInterruptLPMSleep(usb_device_lpc3511ip_state_struct_t *lpc3511IpState)$/;"	f	file:
USB_DeviceLpc3511IpInterruptReset	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static void USB_DeviceLpc3511IpInterruptReset(usb_device_lpc3511ip_state_struct_t *lpc3511IpState)$/;"	f	file:
USB_DeviceLpc3511IpInterruptResume	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpInterruptResume(usb_device_lpc3511ip_state_struct_t *lpc3511IpState)$/;"	f	file:
USB_DeviceLpc3511IpInterruptSuspend	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpInterruptSuspend(usb_device_lpc3511ip_state_struct_t *lpc3511IpState)$/;"	f	file:
USB_DeviceLpc3511IpInterruptToken	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static void USB_DeviceLpc3511IpInterruptToken(usb_device_lpc3511ip_state_struct_t *lpc3511IpState,$/;"	f	file:
USB_DeviceLpc3511IpRecv	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^usb_status_t USB_DeviceLpc3511IpRecv(usb_device_controller_handle controllerHandle,$/;"	f
USB_DeviceLpc3511IpSend	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^usb_status_t USB_DeviceLpc3511IpSend(usb_device_controller_handle controllerHandle,$/;"	f
USB_DeviceLpc3511IpSetDefaultState	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static void USB_DeviceLpc3511IpSetDefaultState(usb_device_lpc3511ip_state_struct_t *lpc3511IpState)$/;"	f	file:
USB_DeviceLpc3511IpTokenUpdate	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static uint32_t USB_DeviceLpc3511IpTokenUpdate(usb_device_lpc3511ip_state_struct_t *lpc3511IpState,$/;"	f	file:
USB_DeviceLpc3511IpTransaction	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static usb_status_t USB_DeviceLpc3511IpTransaction(usb_device_lpc3511ip_state_struct_t *lpc3511IpState,$/;"	f	file:
USB_DeviceLpcIp3511IsrFunction	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^void USB_DeviceLpcIp3511IsrFunction(void *deviceHandle)$/;"	f
USB_DeviceLpcIp3511MallocMaxPacketBuffer	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static uint8_t *USB_DeviceLpcIp3511MallocMaxPacketBuffer(usb_device_lpc3511ip_state_struct_t *lpc3511IpState,$/;"	f	file:
USB_DeviceLpcIp3511MaxPacketNeedCopy	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static inline uint8_t USB_DeviceLpcIp3511MaxPacketNeedCopy(usb_device_lpc3511ip_state_struct_t *lpc3511IpState)$/;"	f	file:
USB_DeviceLpcIp3511ReleaseMaxPacketBuffer	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^static void USB_DeviceLpcIp3511ReleaseMaxPacketBuffer(usb_device_lpc3511ip_state_struct_t *lpc3511IpState,$/;"	f	file:
USB_DeviceLpcIp3511TaskFunction	usb/device/include/usb_device.h	545;"	d
USB_DeviceMscAllocateHandle	usb/device/class/usb_device_msc.c	/^static usb_status_t USB_DeviceMscAllocateHandle(usb_device_msc_struct_t **handle)$/;"	f	file:
USB_DeviceMscBulkIn	usb/device/class/usb_device_msc.c	/^static usb_status_t USB_DeviceMscBulkIn(usb_device_handle handle,$/;"	f	file:
USB_DeviceMscBulkOut	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscBulkOut(usb_device_handle handle,$/;"	f
USB_DeviceMscDeinit	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscDeinit(class_handle_t handle)$/;"	f
USB_DeviceMscEndpointsDeinit	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscEndpointsDeinit(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscEndpointsInit	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscEndpointsInit(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscEvent	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscEvent(void *handle, uint32_t event, void *param)$/;"	f
USB_DeviceMscEvent_t	usb/device/class/usb_device_msc.h	/^} USB_DeviceMscEvent_t;$/;"	t	typeref:enum:__anon501
USB_DeviceMscFreeHandle	usb/device/class/usb_device_msc.c	/^static usb_status_t USB_DeviceMscFreeHandle(usb_device_msc_struct_t *handle)$/;"	f	file:
USB_DeviceMscInit	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscInit(uint8_t controllerId, usb_device_class_config_struct_t *config, class_handle_t *handle)$/;"	f
USB_DeviceMscLbaTransfer	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscLbaTransfer(usb_device_msc_struct_t *mscHandle,$/;"	f
USB_DeviceMscProcessUfiCommand	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscProcessUfiCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscRecv	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscRecv(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscSend	usb/device/class/usb_device_msc.c	/^usb_status_t USB_DeviceMscSend(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiFormatUnitCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiFormatUnitCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiInquiryCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiInquiryCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiModeSelectCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiModeSelectCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiModeSenseCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiModeSenseCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiPreventAllowMediumCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiPreventAllowMediumCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiReadCapacityCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiReadCapacityCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiReadCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiReadCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiReadFormatCapacityCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t   USB_DeviceMscUfiReadFormatCapacityCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiRequestSenseCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiRequestSenseCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiSendDiagnosticCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiSendDiagnosticCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiStartStopUnitCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiStartStopUnitCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiTestUnitReadyCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiTestUnitReadyCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiThirteenCasesCheck	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiThirteenCasesCheck(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiUnsupportCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiUnsupportCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiVerifyCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiVerifyCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceMscUfiWriteCommand	usb/device/class/usb_device_msc_ufi.c	/^usb_status_t USB_DeviceMscUfiWriteCommand(usb_device_msc_struct_t *mscHandle)$/;"	f
USB_DeviceNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceNotification(usb_device_struct_t *handle, usb_device_callback_message_struct_t *message)$/;"	f	file:
USB_DeviceNotificationTrigger	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceNotificationTrigger(void *handle, void *msg)$/;"	f
USB_DevicePhdcAllocateHandle	usb/device/class/usb_device_phdc.c	/^static usb_status_t USB_DevicePhdcAllocateHandle(usb_device_phdc_struct_t **handle)$/;"	f	file:
USB_DevicePhdcBulkInCallback	usb/device/class/usb_device_phdc.c	/^static usb_status_t USB_DevicePhdcBulkInCallback(usb_device_handle handle,$/;"	f	file:
USB_DevicePhdcBulkOutCallback	usb/device/class/usb_device_phdc.c	/^static usb_status_t USB_DevicePhdcBulkOutCallback(usb_device_handle handle,$/;"	f	file:
USB_DevicePhdcDeinit	usb/device/class/usb_device_phdc.c	/^usb_status_t USB_DevicePhdcDeinit(class_handle_t handle)$/;"	f
USB_DevicePhdcEndpointsDeinit	usb/device/class/usb_device_phdc.c	/^static usb_status_t USB_DevicePhdcEndpointsDeinit(usb_device_phdc_struct_t *phdcHandle)$/;"	f	file:
USB_DevicePhdcEndpointsInit	usb/device/class/usb_device_phdc.c	/^static usb_status_t USB_DevicePhdcEndpointsInit(usb_device_phdc_struct_t *phdcHandle)$/;"	f	file:
USB_DevicePhdcEvent	usb/device/class/usb_device_phdc.c	/^usb_status_t USB_DevicePhdcEvent(void *handle, uint32_t event, void *param)$/;"	f
USB_DevicePhdcFreeHandle	usb/device/class/usb_device_phdc.c	/^static usb_status_t USB_DevicePhdcFreeHandle(usb_device_phdc_struct_t *handle)$/;"	f	file:
USB_DevicePhdcInit	usb/device/class/usb_device_phdc.c	/^usb_status_t USB_DevicePhdcInit(uint8_t controllerId, usb_device_class_config_struct_t *config, class_handle_t *handle)$/;"	f
USB_DevicePhdcInterruptInCallback	usb/device/class/usb_device_phdc.c	/^static usb_status_t USB_DevicePhdcInterruptInCallback(usb_device_handle handle,$/;"	f	file:
USB_DevicePhdcRecv	usb/device/class/usb_device_phdc.c	/^usb_status_t USB_DevicePhdcRecv(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DevicePhdcSend	usb/device/class/usb_device_phdc.c	/^usb_status_t USB_DevicePhdcSend(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DevicePrinterAllocateHandle	usb/device/class/usb_device_printer.c	/^static usb_status_t USB_DevicePrinterAllocateHandle(usb_device_printer_struct_t **printerHandle)$/;"	f	file:
USB_DevicePrinterBulkInCallback	usb/device/class/usb_device_printer.c	/^static usb_status_t USB_DevicePrinterBulkInCallback(usb_device_handle handle,$/;"	f	file:
USB_DevicePrinterBulkOutCallback	usb/device/class/usb_device_printer.c	/^static usb_status_t USB_DevicePrinterBulkOutCallback(usb_device_handle handle,$/;"	f	file:
USB_DevicePrinterDeinit	usb/device/class/usb_device_printer.c	/^usb_status_t USB_DevicePrinterDeinit(class_handle_t handle)$/;"	f
USB_DevicePrinterEndpointsDeinit	usb/device/class/usb_device_printer.c	/^static usb_status_t USB_DevicePrinterEndpointsDeinit(usb_device_printer_struct_t *printerHandle)$/;"	f	file:
USB_DevicePrinterEndpointsInit	usb/device/class/usb_device_printer.c	/^static usb_status_t USB_DevicePrinterEndpointsInit(usb_device_printer_struct_t *printerHandle)$/;"	f	file:
USB_DevicePrinterEvent	usb/device/class/usb_device_printer.c	/^usb_status_t USB_DevicePrinterEvent(void *handle, uint32_t event, void *param)$/;"	f
USB_DevicePrinterFreeHandle	usb/device/class/usb_device_printer.c	/^static usb_status_t USB_DevicePrinterFreeHandle(usb_device_printer_struct_t *printerHandle)$/;"	f	file:
USB_DevicePrinterInit	usb/device/class/usb_device_printer.c	/^usb_status_t USB_DevicePrinterInit(uint8_t controllerId,$/;"	f
USB_DevicePrinterRecv	usb/device/class/usb_device_printer.c	/^usb_status_t USB_DevicePrinterRecv(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DevicePrinterSend	usb/device/class/usb_device_printer.c	/^usb_status_t USB_DevicePrinterSend(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceRecvRequest	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceRecvRequest(usb_device_handle handle, uint8_t endpointAddress, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceResetNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceResetNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceResumeNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceResumeNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceRun	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceRun(usb_device_handle handle)$/;"	f
USB_DeviceSendRequest	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceSendRequest(usb_device_handle handle, uint8_t endpointAddress, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceSetSpeed	vcom/usb_device_descriptor.c	/^usb_status_t USB_DeviceSetSpeed(usb_device_handle handle, uint8_t speed)$/;"	f
USB_DeviceSetStatus	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceSetStatus(usb_device_handle handle, usb_device_status_t type, void *param)$/;"	f
USB_DeviceSleepNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceSleepNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceStallEndpoint	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceStallEndpoint(usb_device_handle handle, uint8_t endpointAddress)$/;"	f
USB_DeviceStop	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceStop(usb_device_handle handle)$/;"	f
USB_DeviceSuspendNotification	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceSuspendNotification(usb_device_struct_t *handle,$/;"	f	file:
USB_DeviceTask	vcom/composite.c	/^void USB_DeviceTask(void *handle)$/;"	f
USB_DeviceTaskFn	vcom/composite.c	/^void USB_DeviceTaskFn(void *deviceHandle)$/;"	f
USB_DeviceTaskFunction	usb/device/source/usb_device_dci.c	/^void USB_DeviceTaskFunction(void *deviceHandle)$/;"	f
USB_DeviceTransfer	usb/device/source/usb_device_dci.c	/^static usb_status_t USB_DeviceTransfer(usb_device_handle handle,$/;"	f	file:
USB_DeviceUnstallEndpoint	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceUnstallEndpoint(usb_device_handle handle, uint8_t endpointAddress)$/;"	f
USB_DeviceUpdateHwTick	usb/device/source/usb_device_dci.c	/^usb_status_t USB_DeviceUpdateHwTick(usb_device_handle handle, uint64_t tick)$/;"	f
USB_DeviceVideoAllocateHandle	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoAllocateHandle(usb_device_video_struct_t **handle)$/;"	f	file:
USB_DeviceVideoControlEndpointsDeinit	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoControlEndpointsDeinit(usb_device_video_struct_t *videoHandle)$/;"	f	file:
USB_DeviceVideoControlEndpointsInit	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoControlEndpointsInit(usb_device_video_struct_t *videoHandle)$/;"	f	file:
USB_DeviceVideoControlIn	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoControlIn(usb_device_handle handle,$/;"	f	file:
USB_DeviceVideoDeinit	usb/device/class/usb_device_video.c	/^usb_status_t USB_DeviceVideoDeinit(class_handle_t handle)$/;"	f
USB_DeviceVideoEvent	usb/device/class/usb_device_video.c	/^usb_status_t USB_DeviceVideoEvent(void *handle, uint32_t event, void *param)$/;"	f
USB_DeviceVideoFreeHandle	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoFreeHandle(usb_device_video_struct_t *handle)$/;"	f	file:
USB_DeviceVideoInit	usb/device/class/usb_device_video.c	/^usb_status_t USB_DeviceVideoInit(uint8_t controllerId, usb_device_class_config_struct_t *config, class_handle_t *handle)$/;"	f
USB_DeviceVideoRecv	usb/device/class/usb_device_video.c	/^usb_status_t USB_DeviceVideoRecv(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceVideoSend	usb/device/class/usb_device_video.c	/^usb_status_t USB_DeviceVideoSend(class_handle_t handle, uint8_t ep, uint8_t *buffer, uint32_t length)$/;"	f
USB_DeviceVideoStreamEndpointsDeinit	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoStreamEndpointsDeinit(usb_device_video_struct_t *videoHandle)$/;"	f	file:
USB_DeviceVideoStreamEndpointsInit	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoStreamEndpointsInit(usb_device_video_struct_t *videoHandle)$/;"	f	file:
USB_DeviceVideoStreamIn	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoStreamIn(usb_device_handle handle,$/;"	f	file:
USB_DeviceVideoStreamOut	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoStreamOut(usb_device_handle handle,$/;"	f	file:
USB_DeviceVideoVcCameraTerminalRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVcCameraTerminalRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVcInterfaceRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVcInterfaceRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVcPowerModeControl	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVcPowerModeControl(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVcProcessingUnitRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVcProcessingUnitRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVcRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVcRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVsCommitRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVsCommitRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVsProbeRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVsProbeRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVsRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVsRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVsStillCommitRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVsStillCommitRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVsStillImageTriggerRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVsStillImageTriggerRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_DeviceVideoVsStillProbeRequest	usb/device/class/usb_device_video.c	/^static usb_status_t USB_DeviceVideoVsStillProbeRequest(usb_device_video_struct_t *videoHandle,$/;"	f	file:
USB_ENDPOINT_BULK	usb/include/usb_spec.h	35;"	d
USB_ENDPOINT_CONTROL	usb/include/usb_spec.h	33;"	d
USB_ENDPOINT_INTERRUPT	usb/include/usb_spec.h	36;"	d
USB_ENDPOINT_ISOCHRONOUS	usb/include/usb_spec.h	34;"	d
USB_ENDPOINT_NUMBER_MASK	usb/device/include/usb_device.h	87;"	d
USB_ENDPOINT_STATUS_SIZE	usb/device/source/usb_device_ch9.h	26;"	d
USB_EPBUFCFG_BUF_SB	device/LPC54018.h	14230;"	d
USB_EPBUFCFG_BUF_SB_MASK	device/LPC54018.h	14228;"	d
USB_EPBUFCFG_BUF_SB_SHIFT	device/LPC54018.h	14229;"	d
USB_EPINUSE_BUF	device/LPC54018.h	14223;"	d
USB_EPINUSE_BUF_MASK	device/LPC54018.h	14221;"	d
USB_EPINUSE_BUF_SHIFT	device/LPC54018.h	14222;"	d
USB_EPLISTSTART_EP_LIST	device/LPC54018.h	14189;"	d
USB_EPLISTSTART_EP_LIST_MASK	device/LPC54018.h	14187;"	d
USB_EPLISTSTART_EP_LIST_SHIFT	device/LPC54018.h	14188;"	d
USB_EPSKIP_SKIP	device/LPC54018.h	14216;"	d
USB_EPSKIP_SKIP_MASK	device/LPC54018.h	14214;"	d
USB_EPSKIP_SKIP_SHIFT	device/LPC54018.h	14215;"	d
USB_EPTOGGLE_TOGGLE	device/LPC54018.h	14303;"	d
USB_EPTOGGLE_TOGGLE_MASK	device/LPC54018.h	14301;"	d
USB_EPTOGGLE_TOGGLE_SHIFT	device/LPC54018.h	14302;"	d
USB_EhciGetValidEhciState	usb/device/source/ehci/usb_device_ehci.c	/^void *USB_EhciGetValidEhciState(uint8_t *instanceIndex)$/;"	f
USB_EhciLowPowerPhyInit	usb/phy/usb_phy.c	/^uint32_t USB_EhciLowPowerPhyInit(uint8_t controllerId, uint32_t freq, usb_phy_config_struct_t *phyConfig)$/;"	f
USB_EhciNCGetBase	usb/device/source/ehci/usb_device_ehci.c	/^void *USB_EhciNCGetBase(uint8_t controllerId)$/;"	f
USB_EhciPhyDeinit	usb/phy/usb_phy.c	/^void USB_EhciPhyDeinit(uint8_t controllerId)$/;"	f
USB_EhciPhyGetBase	usb/phy/usb_phy.c	/^void *USB_EhciPhyGetBase(uint8_t controllerId)$/;"	f
USB_EhciPhyInit	usb/phy/usb_phy.c	/^uint32_t USB_EhciPhyInit(uint8_t controllerId, uint32_t freq, usb_phy_config_struct_t *phyConfig)$/;"	f
USB_EhcihostPhyDisconnectDetectCmd	usb/phy/usb_phy.c	/^void USB_EhcihostPhyDisconnectDetectCmd(uint8_t controllerId, uint8_t enable)$/;"	f
USB_GET_STATUS_DEVICE_MASK	usb/device/source/usb_device_ch9.h	36;"	d
USB_GET_STATUS_ENDPOINT_MASK	usb/device/source/usb_device_ch9.h	42;"	d
USB_GET_STATUS_INTERFACE_MASK	usb/device/source/usb_device_ch9.h	39;"	d
USB_GLOBAL	usb/include/usb_misc.h	362;"	d
USB_GLOBAL_DEDICATED_RAM	usb/include/usb_misc.h	425;"	d
USB_IAD_DESC_SIZE	vcom/usb_device_descriptor.h	88;"	d
USB_IN	usb/include/usb_spec.h	40;"	d
USB_INFO_ERR_CODE	device/LPC54018.h	14176;"	d
USB_INFO_ERR_CODE_MASK	device/LPC54018.h	14156;"	d
USB_INFO_ERR_CODE_SHIFT	device/LPC54018.h	14157;"	d
USB_INFO_FRAME_NR	device/LPC54018.h	14155;"	d
USB_INFO_FRAME_NR_MASK	device/LPC54018.h	14153;"	d
USB_INFO_FRAME_NR_SHIFT	device/LPC54018.h	14154;"	d
USB_INFO_MAJREV	device/LPC54018.h	14182;"	d
USB_INFO_MAJREV_MASK	device/LPC54018.h	14180;"	d
USB_INFO_MAJREV_SHIFT	device/LPC54018.h	14181;"	d
USB_INFO_MINREV	device/LPC54018.h	14179;"	d
USB_INFO_MINREV_MASK	device/LPC54018.h	14177;"	d
USB_INFO_MINREV_SHIFT	device/LPC54018.h	14178;"	d
USB_INTEN_DEV_INT_EN	device/LPC54018.h	14283;"	d
USB_INTEN_DEV_INT_EN_MASK	device/LPC54018.h	14281;"	d
USB_INTEN_DEV_INT_EN_SHIFT	device/LPC54018.h	14282;"	d
USB_INTEN_EP_INT_EN	device/LPC54018.h	14277;"	d
USB_INTEN_EP_INT_EN_MASK	device/LPC54018.h	14275;"	d
USB_INTEN_EP_INT_EN_SHIFT	device/LPC54018.h	14276;"	d
USB_INTEN_FRAME_INT_EN	device/LPC54018.h	14280;"	d
USB_INTEN_FRAME_INT_EN_MASK	device/LPC54018.h	14278;"	d
USB_INTEN_FRAME_INT_EN_SHIFT	device/LPC54018.h	14279;"	d
USB_INTERFACE_COUNT	vcom/usb_device_descriptor.h	97;"	d
USB_INTERFACE_SIZE	usb/device/source/usb_device_ch9.h	33;"	d
USB_INTERFACE_STATUS_SIZE	usb/device/source/usb_device_ch9.h	23;"	d
USB_INTSETSTAT_DEV_SET_INT	device/LPC54018.h	14296;"	d
USB_INTSETSTAT_DEV_SET_INT_MASK	device/LPC54018.h	14294;"	d
USB_INTSETSTAT_DEV_SET_INT_SHIFT	device/LPC54018.h	14295;"	d
USB_INTSETSTAT_EP_SET_INT	device/LPC54018.h	14290;"	d
USB_INTSETSTAT_EP_SET_INT_MASK	device/LPC54018.h	14288;"	d
USB_INTSETSTAT_EP_SET_INT_SHIFT	device/LPC54018.h	14289;"	d
USB_INTSETSTAT_FRAME_SET_INT	device/LPC54018.h	14293;"	d
USB_INTSETSTAT_FRAME_SET_INT_MASK	device/LPC54018.h	14291;"	d
USB_INTSETSTAT_FRAME_SET_INT_SHIFT	device/LPC54018.h	14292;"	d
USB_INTSTAT_DEV_INT	device/LPC54018.h	14270;"	d
USB_INTSTAT_DEV_INT_MASK	device/LPC54018.h	14268;"	d
USB_INTSTAT_DEV_INT_SHIFT	device/LPC54018.h	14269;"	d
USB_INTSTAT_EP0IN	device/LPC54018.h	14240;"	d
USB_INTSTAT_EP0IN_MASK	device/LPC54018.h	14238;"	d
USB_INTSTAT_EP0IN_SHIFT	device/LPC54018.h	14239;"	d
USB_INTSTAT_EP0OUT	device/LPC54018.h	14237;"	d
USB_INTSTAT_EP0OUT_MASK	device/LPC54018.h	14235;"	d
USB_INTSTAT_EP0OUT_SHIFT	device/LPC54018.h	14236;"	d
USB_INTSTAT_EP1IN	device/LPC54018.h	14246;"	d
USB_INTSTAT_EP1IN_MASK	device/LPC54018.h	14244;"	d
USB_INTSTAT_EP1IN_SHIFT	device/LPC54018.h	14245;"	d
USB_INTSTAT_EP1OUT	device/LPC54018.h	14243;"	d
USB_INTSTAT_EP1OUT_MASK	device/LPC54018.h	14241;"	d
USB_INTSTAT_EP1OUT_SHIFT	device/LPC54018.h	14242;"	d
USB_INTSTAT_EP2IN	device/LPC54018.h	14252;"	d
USB_INTSTAT_EP2IN_MASK	device/LPC54018.h	14250;"	d
USB_INTSTAT_EP2IN_SHIFT	device/LPC54018.h	14251;"	d
USB_INTSTAT_EP2OUT	device/LPC54018.h	14249;"	d
USB_INTSTAT_EP2OUT_MASK	device/LPC54018.h	14247;"	d
USB_INTSTAT_EP2OUT_SHIFT	device/LPC54018.h	14248;"	d
USB_INTSTAT_EP3IN	device/LPC54018.h	14258;"	d
USB_INTSTAT_EP3IN_MASK	device/LPC54018.h	14256;"	d
USB_INTSTAT_EP3IN_SHIFT	device/LPC54018.h	14257;"	d
USB_INTSTAT_EP3OUT	device/LPC54018.h	14255;"	d
USB_INTSTAT_EP3OUT_MASK	device/LPC54018.h	14253;"	d
USB_INTSTAT_EP3OUT_SHIFT	device/LPC54018.h	14254;"	d
USB_INTSTAT_EP4IN	device/LPC54018.h	14264;"	d
USB_INTSTAT_EP4IN_MASK	device/LPC54018.h	14262;"	d
USB_INTSTAT_EP4IN_SHIFT	device/LPC54018.h	14263;"	d
USB_INTSTAT_EP4OUT	device/LPC54018.h	14261;"	d
USB_INTSTAT_EP4OUT_MASK	device/LPC54018.h	14259;"	d
USB_INTSTAT_EP4OUT_SHIFT	device/LPC54018.h	14260;"	d
USB_INTSTAT_FRAME_INT	device/LPC54018.h	14267;"	d
USB_INTSTAT_FRAME_INT_MASK	device/LPC54018.h	14265;"	d
USB_INTSTAT_FRAME_INT_SHIFT	device/LPC54018.h	14266;"	d
USB_IRQS	device/LPC54018.h	14322;"	d
USB_KHCI_BDT_BC	usb/device/source/khci/usb_device_khci.h	33;"	d
USB_KHCI_BDT_DATA01	usb/device/source/khci/usb_device_khci.h	32;"	d
USB_KHCI_BDT_DEVICE_IN_TOKEN	usb/device/source/khci/usb_device_khci.h	28;"	d
USB_KHCI_BDT_DEVICE_OUT_TOKEN	usb/device/source/khci/usb_device_khci.h	27;"	d
USB_KHCI_BDT_DEVICE_SETUP_TOKEN	usb/device/source/khci/usb_device_khci.h	29;"	d
USB_KHCI_BDT_DTS	usb/device/source/khci/usb_device_khci.h	36;"	d
USB_KHCI_BDT_GET_ADDRESS	usb/device/source/khci/usb_device_khci.h	63;"	d
USB_KHCI_BDT_GET_CONTROL	usb/device/source/khci/usb_device_khci.h	69;"	d
USB_KHCI_BDT_OWN	usb/device/source/khci/usb_device_khci.h	31;"	d
USB_KHCI_BDT_SET_ADDRESS	usb/device/source/khci/usb_device_khci.h	52;"	d
USB_KHCI_BDT_SET_CONTROL	usb/device/source/khci/usb_device_khci.h	58;"	d
USB_KHCI_BDT_STALL	usb/device/source/khci/usb_device_khci.h	37;"	d
USB_LINK_DMA_INIT_DATA	usb/include/usb_misc.h	294;"	d
USB_LINK_DMA_NONINIT_DATA	usb/include/usb_misc.h	300;"	d
USB_LINK_NONCACHE_NONINIT_DATA	usb/include/usb_misc.h	301;"	d
USB_LINK_SECTION_PART	usb/include/usb_misc.h	293;"	d
USB_LINK_USB_BDT	usb/include/usb_misc.h	296;"	d
USB_LINK_USB_BDT_BSS	usb/include/usb_misc.h	298;"	d
USB_LINK_USB_GLOBAL	usb/include/usb_misc.h	295;"	d
USB_LINK_USB_GLOBAL_BSS	usb/include/usb_misc.h	297;"	d
USB_LITTLE_ENDIAN	osa/usb_osa.h	24;"	d
USB_LONG_FROM_BIG_ENDIAN	usb/include/usb_misc.h	129;"	d
USB_LONG_FROM_BIG_ENDIAN	usb/include/usb_misc.h	201;"	d
USB_LONG_FROM_BIG_ENDIAN_ADDRESS	usb/include/usb_misc.h	151;"	d
USB_LONG_FROM_BIG_ENDIAN_ADDRESS	usb/include/usb_misc.h	223;"	d
USB_LONG_FROM_LITTLE_ENDIAN	usb/include/usb_misc.h	124;"	d
USB_LONG_FROM_LITTLE_ENDIAN	usb/include/usb_misc.h	196;"	d
USB_LONG_FROM_LITTLE_ENDIAN_ADDRESS	usb/include/usb_misc.h	139;"	d
USB_LONG_FROM_LITTLE_ENDIAN_ADDRESS	usb/include/usb_misc.h	211;"	d
USB_LONG_FROM_LITTLE_ENDIAN_DATA	usb/include/usb_misc.h	179;"	d
USB_LONG_FROM_LITTLE_ENDIAN_DATA	usb/include/usb_misc.h	251;"	d
USB_LONG_GET_BYTE0	usb/include/usb_misc.h	74;"	d
USB_LONG_GET_BYTE1	usb/include/usb_misc.h	75;"	d
USB_LONG_GET_BYTE2	usb/include/usb_misc.h	76;"	d
USB_LONG_GET_BYTE3	usb/include/usb_misc.h	77;"	d
USB_LONG_TO_BIG_ENDIAN	usb/include/usb_misc.h	127;"	d
USB_LONG_TO_BIG_ENDIAN	usb/include/usb_misc.h	199;"	d
USB_LONG_TO_BIG_ENDIAN_ADDRESS	usb/include/usb_misc.h	143;"	d
USB_LONG_TO_BIG_ENDIAN_ADDRESS	usb/include/usb_misc.h	215;"	d
USB_LONG_TO_LITTLE_ENDIAN	usb/include/usb_misc.h	122;"	d
USB_LONG_TO_LITTLE_ENDIAN	usb/include/usb_misc.h	194;"	d
USB_LONG_TO_LITTLE_ENDIAN_ADDRESS	usb/include/usb_misc.h	131;"	d
USB_LONG_TO_LITTLE_ENDIAN_ADDRESS	usb/include/usb_misc.h	203;"	d
USB_LONG_TO_LITTLE_ENDIAN_DATA	usb/include/usb_misc.h	171;"	d
USB_LONG_TO_LITTLE_ENDIAN_DATA	usb/include/usb_misc.h	243;"	d
USB_LPC3511IPFS_ENDPOINT_BUFFER_ADDRESS_OFFSET_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	89;"	d	file:
USB_LPC3511IPFS_ENDPOINT_BUFFER_NBYTES_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	91;"	d	file:
USB_LPC3511IPFS_ENDPOINT_BUFFER_NBYTES_SHIFT	usb/device/source/lpcip3511/usb_device_lpcip3511.c	90;"	d	file:
USB_LPC3511IPHS_ENDPOINT_BUFFER_ADDRESS_OFFSET_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	86;"	d	file:
USB_LPC3511IPHS_ENDPOINT_BUFFER_NBYTES_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	88;"	d	file:
USB_LPC3511IPHS_ENDPOINT_BUFFER_NBYTES_SHIFT	usb/device/source/lpcip3511/usb_device_lpcip3511.c	87;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DCON_C_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	47;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DCON_C_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	74;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DCON_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	33;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DCON_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	59;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DEV_ADDR_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	41;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DEV_ADDR_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	68;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DEV_EN_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	34;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DEV_EN_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	60;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DRES_C_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	45;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DRES_C_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	72;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DSUS_C_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	46;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DSUS_C_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	73;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DSUS_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	42;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_DSUS_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	69;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_FORCE_NEEDCLK_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	36;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_FORCE_NEEDCLK_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	62;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_INTERRUPT_WC_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	102;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_INTONNAK_AI_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	25;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_INTONNAK_AI_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	53;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_INTONNAK_AO_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	24;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_INTONNAK_AO_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	52;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_REWP_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	27;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_REWP_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	55;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_REWP_SHIFT	usb/device/source/lpcip3511/usb_device_lpcip3511.c	28;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_REWP_SHIFT	usb/device/source/lpcip3511/usb_device_lpcip3511.c	56;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_SUP_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	35;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_SUP_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	61;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_SUP_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	63;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_SUS_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	37;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_LPM_SUS_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	64;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_SETUP_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	44;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_SETUP_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	71;"	d	file:
USB_LPC3511IP_DEVCMDSTAT_Speed_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	30;"	d	file:
USB_LPC3511IP_ENDPOINT_ACTIVE_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	99;"	d	file:
USB_LPC3511IP_ENDPOINT_CONFIGURE_BITS_SHIFT	usb/device/source/lpcip3511/usb_device_lpcip3511.c	100;"	d	file:
USB_LPC3511IP_ENDPOINT_DES_INDEX	usb/device/source/lpcip3511/usb_device_lpcip3511.c	130;"	d	file:
USB_LPC3511IP_ENDPOINT_DISABLE_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	98;"	d	file:
USB_LPC3511IP_ENDPOINT_ENDPOINT_TYPE_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	93;"	d	file:
USB_LPC3511IP_ENDPOINT_RFTV_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	94;"	d	file:
USB_LPC3511IP_ENDPOINT_SET_ENDPOINT	usb/device/source/lpcip3511/usb_device_lpcip3511.c	110;"	d	file:
USB_LPC3511IP_ENDPOINT_SET_ENDPOINT	usb/device/source/lpcip3511/usb_device_lpcip3511.c	122;"	d	file:
USB_LPC3511IP_ENDPOINT_SET_ENDPOINT_AND	usb/device/source/lpcip3511/usb_device_lpcip3511.c	104;"	d	file:
USB_LPC3511IP_ENDPOINT_STALL_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	96;"	d	file:
USB_LPC3511IP_ENDPOINT_STALL_SHIFT	usb/device/source/lpcip3511/usb_device_lpcip3511.c	97;"	d	file:
USB_LPC3511IP_ENDPOINT_TOGGLE_RESET_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	95;"	d	file:
USB_LPC3511IP_GET_MULTIPLE_OF_64	usb/device/source/lpcip3511/usb_device_lpcip3511.c	134;"	d	file:
USB_LPC3511IP_INFO_ERR_CODE_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	43;"	d	file:
USB_LPC3511IP_INFO_ERR_CODE_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	70;"	d	file:
USB_LPC3511IP_INTSTAT_DEV_INT_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	21;"	d	file:
USB_LPC3511IP_INTSTAT_DEV_INT_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	49;"	d	file:
USB_LPC3511IP_INTSTAT_FRAME_INT_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	22;"	d	file:
USB_LPC3511IP_INTSTAT_FRAME_INT_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	50;"	d	file:
USB_LPC3511IP_MAX_PHY_ENDPOINT_MASK	usb/device/source/lpcip3511/usb_device_lpcip3511.c	83;"	d	file:
USB_LPC3511IP_Type	usb/device/source/lpcip3511/usb_device_lpcip3511.h	34;"	d
USB_LPC3511IP_Type	usb/device/source/lpcip3511/usb_device_lpcip3511.h	37;"	d
USB_LPC3511IP_USB_LPM_HIRD_SW	usb/device/source/lpcip3511/usb_device_lpcip3511.c	39;"	d	file:
USB_LPC3511IP_USB_LPM_HIRD_SW	usb/device/source/lpcip3511/usb_device_lpcip3511.c	66;"	d	file:
USB_LPM_DATA_PENDING	device/LPC54018.h	14209;"	d
USB_LPM_DATA_PENDING_MASK	device/LPC54018.h	14207;"	d
USB_LPM_DATA_PENDING_SHIFT	device/LPC54018.h	14208;"	d
USB_LPM_HIRD_HW	device/LPC54018.h	14203;"	d
USB_LPM_HIRD_HW_MASK	device/LPC54018.h	14201;"	d
USB_LPM_HIRD_HW_SHIFT	device/LPC54018.h	14202;"	d
USB_LPM_HIRD_SW	device/LPC54018.h	14206;"	d
USB_LPM_HIRD_SW_MASK	device/LPC54018.h	14204;"	d
USB_LPM_HIRD_SW_SHIFT	device/LPC54018.h	14205;"	d
USB_MAKE_VERSION	usb/include/usb.h	37;"	d
USB_MEM32_ALIGN	usb/include/usb_misc.h	83;"	d
USB_MEM4_ALIGN	usb/include/usb_misc.h	82;"	d
USB_MEM4_ALIGN_MASK	usb/include/usb_misc.h	79;"	d
USB_MEM64_ALIGN	usb/include/usb_misc.h	84;"	d
USB_MSC_DISK_CLASS	vcom/usb_device_descriptor.h	101;"	d
USB_MSC_DISK_PROTOCOL	vcom/usb_device_descriptor.h	105;"	d
USB_MSC_DISK_SUBCLASS	vcom/usb_device_descriptor.h	103;"	d
USB_MVALMAX	drivers/fsl_clock.c	25;"	d	file:
USB_NEEDCLK_IRQS	device/LPC54018.h	14323;"	d
USB_NVALMAX	drivers/fsl_clock.c	23;"	d	file:
USB_OSA_ENTER_CRITICAL	osa/usb_osa_freertos.h	71;"	d
USB_OSA_EXIT_CRITICAL	osa/usb_osa_freertos.h	72;"	d
USB_OSA_FREERTOS_EVENT_COUNT	osa/usb_osa_freertos.c	23;"	d	file:
USB_OSA_FREERTOS_MSGQ_COUNT	osa/usb_osa_freertos.c	26;"	d	file:
USB_OSA_FREERTOS_MSG_COUNT	osa/usb_osa_freertos.c	27;"	d	file:
USB_OSA_FREERTOS_MSG_SIZE	osa/usb_osa_freertos.c	28;"	d	file:
USB_OSA_FREERTOS_MUTEX_COUNT	osa/usb_osa_freertos.c	25;"	d	file:
USB_OSA_FREERTOS_SEM_COUNT	osa/usb_osa_freertos.c	24;"	d	file:
USB_OSA_SR_ALLOC	osa/usb_osa_freertos.h	70;"	d
USB_OUT	usb/include/usb_spec.h	39;"	d
USB_OsaEnterCritical	osa/usb_osa_freertos.c	/^void USB_OsaEnterCritical(uint8_t *sr)$/;"	f
USB_OsaEventCheck	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaEventCheck(usb_osa_event_handle handle, uint32_t bitMask, uint32_t *bitSet)$/;"	f
USB_OsaEventClear	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaEventClear(usb_osa_event_handle handle, uint32_t bitMask)$/;"	f
USB_OsaEventCreate	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaEventCreate(usb_osa_event_handle *handle, uint32_t flag)$/;"	f
USB_OsaEventDestroy	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaEventDestroy(usb_osa_event_handle handle)$/;"	f
USB_OsaEventSet	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaEventSet(usb_osa_event_handle handle, uint32_t bitMask)$/;"	f
USB_OsaEventWait	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaEventWait($/;"	f
USB_OsaExitCritical	osa/usb_osa_freertos.c	/^void USB_OsaExitCritical(uint8_t sr)$/;"	f
USB_OsaMemoryAllocate	osa/usb_osa_freertos.c	/^void *USB_OsaMemoryAllocate(uint32_t length)$/;"	f
USB_OsaMemoryFree	osa/usb_osa_freertos.c	/^void USB_OsaMemoryFree(void *p)$/;"	f
USB_OsaMsgqCheck	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMsgqCheck(usb_osa_msgq_handle handle, void *msg)$/;"	f
USB_OsaMsgqCreate	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMsgqCreate(usb_osa_msgq_handle *handle, uint32_t count, uint32_t size)$/;"	f
USB_OsaMsgqDestroy	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMsgqDestroy(usb_osa_msgq_handle handle)$/;"	f
USB_OsaMsgqRecv	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMsgqRecv(usb_osa_msgq_handle handle, void *msg, uint32_t timeout)$/;"	f
USB_OsaMsgqSend	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMsgqSend(usb_osa_msgq_handle handle, void *msg)$/;"	f
USB_OsaMutexCreate	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMutexCreate(usb_osa_mutex_handle *handle)$/;"	f
USB_OsaMutexDestroy	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMutexDestroy(usb_osa_mutex_handle handle)$/;"	f
USB_OsaMutexLock	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMutexLock(usb_osa_mutex_handle handle)$/;"	f
USB_OsaMutexUnlock	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaMutexUnlock(usb_osa_mutex_handle handle)$/;"	f
USB_OsaSemCreate	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaSemCreate(usb_osa_sem_handle *handle, uint32_t count)$/;"	f
USB_OsaSemDestroy	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaSemDestroy(usb_osa_sem_handle handle)$/;"	f
USB_OsaSemPost	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaSemPost(usb_osa_sem_handle handle)$/;"	f
USB_OsaSemWait	osa/usb_osa_freertos.c	/^usb_osa_status_t USB_OsaSemWait(usb_osa_sem_handle handle, uint32_t timeout)$/;"	f
USB_PLL_LOWER_IN_LIMIT	drivers/fsl_clock.c	52;"	d	file:
USB_PLL_MAX_CCO_FREQ_MHZ	drivers/fsl_clock.c	51;"	d	file:
USB_PLL_MAX_N_DIV	drivers/fsl_clock.c	28;"	d	file:
USB_PLL_MIN_CCO_FREQ_MHZ	drivers/fsl_clock.c	50;"	d	file:
USB_PLL_MSEL_VAL_M	drivers/fsl_clock.c	55;"	d	file:
USB_PLL_MSEL_VAL_P	drivers/fsl_clock.c	54;"	d	file:
USB_PLL_MSEL_VAL_SET	drivers/fsl_clock.c	76;"	d	file:
USB_PLL_NSEL_VAL_M	drivers/fsl_clock.c	59;"	d	file:
USB_PLL_NSEL_VAL_P	drivers/fsl_clock.c	58;"	d	file:
USB_PLL_NSEL_VAL_SET	drivers/fsl_clock.c	72;"	d	file:
USB_PLL_PSEL_VAL_M	drivers/fsl_clock.c	57;"	d	file:
USB_PLL_PSEL_VAL_P	drivers/fsl_clock.c	56;"	d	file:
USB_PLL_PSEL_VAL_SET	drivers/fsl_clock.c	74;"	d	file:
USB_PVALMAX	drivers/fsl_clock.c	24;"	d	file:
USB_RAM_ADDRESS_ALIGNMENT	usb/include/usb_misc.h	291;"	d
USB_REQUEST_STANDARD_CLEAR_FEATURE	usb/include/usb_spec.h	100;"	d
USB_REQUEST_STANDARD_FEATURE_SELECTOR_A_ALT_HNP_SUPPORT	usb/include/usb_spec.h	126;"	d
USB_REQUEST_STANDARD_FEATURE_SELECTOR_A_HNP_SUPPORT	usb/include/usb_spec.h	125;"	d
USB_REQUEST_STANDARD_FEATURE_SELECTOR_B_HNP_ENABLE	usb/include/usb_spec.h	124;"	d
USB_REQUEST_STANDARD_FEATURE_SELECTOR_DEVICE_REMOTE_WAKEUP	usb/include/usb_spec.h	122;"	d
USB_REQUEST_STANDARD_FEATURE_SELECTOR_DEVICE_TEST_MODE	usb/include/usb_spec.h	123;"	d
USB_REQUEST_STANDARD_FEATURE_SELECTOR_ENDPOINT_HALT	usb/include/usb_spec.h	121;"	d
USB_REQUEST_STANDARD_GET_CONFIGURATION	usb/include/usb_spec.h	105;"	d
USB_REQUEST_STANDARD_GET_DESCRIPTOR	usb/include/usb_spec.h	103;"	d
USB_REQUEST_STANDARD_GET_INTERFACE	usb/include/usb_spec.h	107;"	d
USB_REQUEST_STANDARD_GET_STATUS	usb/include/usb_spec.h	99;"	d
USB_REQUEST_STANDARD_GET_STATUS_DEVICE_REMOTE_WARKUP_SHIFT	usb/include/usb_spec.h	113;"	d
USB_REQUEST_STANDARD_GET_STATUS_DEVICE_SELF_POWERED_SHIFT	usb/include/usb_spec.h	112;"	d
USB_REQUEST_STANDARD_GET_STATUS_ENDPOINT_HALT_MASK	usb/include/usb_spec.h	115;"	d
USB_REQUEST_STANDARD_GET_STATUS_ENDPOINT_HALT_SHIFT	usb/include/usb_spec.h	116;"	d
USB_REQUEST_STANDARD_GET_STATUS_OTG_STATUS_SELECTOR	usb/include/usb_spec.h	118;"	d
USB_REQUEST_STANDARD_SET_ADDRESS	usb/include/usb_spec.h	102;"	d
USB_REQUEST_STANDARD_SET_CONFIGURATION	usb/include/usb_spec.h	106;"	d
USB_REQUEST_STANDARD_SET_DESCRIPTOR	usb/include/usb_spec.h	104;"	d
USB_REQUEST_STANDARD_SET_FEATURE	usb/include/usb_spec.h	101;"	d
USB_REQUEST_STANDARD_SET_INTERFACE	usb/include/usb_spec.h	108;"	d
USB_REQUEST_STANDARD_SYNCH_FRAME	usb/include/usb_spec.h	109;"	d
USB_REQUEST_TYPE_DIR_IN	usb/include/usb_spec.h	83;"	d
USB_REQUEST_TYPE_DIR_MASK	usb/include/usb_spec.h	80;"	d
USB_REQUEST_TYPE_DIR_OUT	usb/include/usb_spec.h	82;"	d
USB_REQUEST_TYPE_DIR_SHIFT	usb/include/usb_spec.h	81;"	d
USB_REQUEST_TYPE_RECIPIENT_DEVICE	usb/include/usb_spec.h	93;"	d
USB_REQUEST_TYPE_RECIPIENT_ENDPOINT	usb/include/usb_spec.h	95;"	d
USB_REQUEST_TYPE_RECIPIENT_INTERFACE	usb/include/usb_spec.h	94;"	d
USB_REQUEST_TYPE_RECIPIENT_MASK	usb/include/usb_spec.h	91;"	d
USB_REQUEST_TYPE_RECIPIENT_OTHER	usb/include/usb_spec.h	96;"	d
USB_REQUEST_TYPE_RECIPIENT_SHIFT	usb/include/usb_spec.h	92;"	d
USB_REQUEST_TYPE_TYPE_CLASS	usb/include/usb_spec.h	88;"	d
USB_REQUEST_TYPE_TYPE_MASK	usb/include/usb_spec.h	85;"	d
USB_REQUEST_TYPE_TYPE_SHIFT	usb/include/usb_spec.h	86;"	d
USB_REQUEST_TYPE_TYPE_STANDARD	usb/include/usb_spec.h	87;"	d
USB_REQUEST_TYPE_TYPE_VENDOR	usb/include/usb_spec.h	89;"	d
USB_SETUP_PACKET_SIZE	usb/device/include/usb_device.h	85;"	d
USB_SHORT_FROM_BIG_ENDIAN	usb/include/usb_misc.h	128;"	d
USB_SHORT_FROM_BIG_ENDIAN	usb/include/usb_misc.h	200;"	d
USB_SHORT_FROM_BIG_ENDIAN_ADDRESS	usb/include/usb_misc.h	169;"	d
USB_SHORT_FROM_BIG_ENDIAN_ADDRESS	usb/include/usb_misc.h	241;"	d
USB_SHORT_FROM_LITTLE_ENDIAN	usb/include/usb_misc.h	123;"	d
USB_SHORT_FROM_LITTLE_ENDIAN	usb/include/usb_misc.h	195;"	d
USB_SHORT_FROM_LITTLE_ENDIAN_ADDRESS	usb/include/usb_misc.h	161;"	d
USB_SHORT_FROM_LITTLE_ENDIAN_ADDRESS	usb/include/usb_misc.h	233;"	d
USB_SHORT_FROM_LITTLE_ENDIAN_DATA	usb/include/usb_misc.h	189;"	d
USB_SHORT_FROM_LITTLE_ENDIAN_DATA	usb/include/usb_misc.h	261;"	d
USB_SHORT_GET_HIGH	usb/include/usb_misc.h	72;"	d
USB_SHORT_GET_LOW	usb/include/usb_misc.h	71;"	d
USB_SHORT_TO_BIG_ENDIAN	usb/include/usb_misc.h	126;"	d
USB_SHORT_TO_BIG_ENDIAN	usb/include/usb_misc.h	198;"	d
USB_SHORT_TO_BIG_ENDIAN_ADDRESS	usb/include/usb_misc.h	163;"	d
USB_SHORT_TO_BIG_ENDIAN_ADDRESS	usb/include/usb_misc.h	235;"	d
USB_SHORT_TO_LITTLE_ENDIAN	usb/include/usb_misc.h	121;"	d
USB_SHORT_TO_LITTLE_ENDIAN	usb/include/usb_misc.h	193;"	d
USB_SHORT_TO_LITTLE_ENDIAN_ADDRESS	usb/include/usb_misc.h	155;"	d
USB_SHORT_TO_LITTLE_ENDIAN_ADDRESS	usb/include/usb_misc.h	227;"	d
USB_SHORT_TO_LITTLE_ENDIAN_DATA	usb/include/usb_misc.h	183;"	d
USB_SHORT_TO_LITTLE_ENDIAN_DATA	usb/include/usb_misc.h	255;"	d
USB_SPEED_FULL	usb/include/usb_spec.h	17;"	d
USB_SPEED_HIGH	usb/include/usb_spec.h	19;"	d
USB_SPEED_LOW	usb/include/usb_spec.h	18;"	d
USB_SPEED_SUPER	usb/include/usb_spec.h	20;"	d
USB_STACK_BM	osa/usb_osa.h	76;"	d
USB_STACK_COMPONENT_VERSION	usb/include/usb.h	42;"	d
USB_STACK_DEDICATED_RAM_TYPE_BDT	usb/include/usb_misc.h	280;"	d
USB_STACK_DEDICATED_RAM_TYPE_BDT_GLOBAL	usb/include/usb_misc.h	279;"	d
USB_STACK_FREERTOS	osa/usb_osa.h	81;"	d
USB_STACK_UCOSII	osa/usb_osa.h	86;"	d
USB_STACK_UCOSIII	osa/usb_osa.h	91;"	d
USB_STACK_VERSION_BUGFIX	usb/include/usb.h	34;"	d
USB_STACK_VERSION_MAJOR	usb/include/usb.h	30;"	d
USB_STACK_VERSION_MINOR	usb/include/usb.h	32;"	d
USB_Type	device/LPC54018.h	/^} USB_Type;$/;"	t	typeref:struct:__anon187
USB_UNINITIALIZED_VAL_32	usb/device/include/usb_device.h	90;"	d
USB_WEAK_FUN	usb/include/usb_misc.h	285;"	d
USB_WEAK_VAR	usb/include/usb_misc.h	284;"	d
USE2FS	device/LPC54018.h	/^  __IO uint32_t USE2FS;                            \/**< Use 2FS register, offset: 0xF10 *\/$/;"	m	struct:__anon149
USEC_TO_COUNT	drivers/fsl_common.h	210;"	d
USER0	device/LPC54018.h	/^  __I  uint32_t USER0;                             \/**< User application specific options., offset: 0x38 *\/$/;"	m	struct:__anon168
USER1	device/LPC54018.h	/^  __I  uint32_t USER1;                             \/**< User application specific options., offset: 0x3C *\/$/;"	m	struct:__anon168
USER_OBJS	Debug/objects.mk	/^USER_OBJS :=$/;"	m
USE_HANN_TABLE	codec2/fsk.c	49;"	d	file:
USE_HANN_TABLE	codec2/fsk.c	62;"	d	file:
USE_KISS_FFT	codec2/codec2_fft.h	22;"	d
UTICK0	device/LPC54018.h	15481;"	d
UTICK0_BASE	device/LPC54018.h	15479;"	d
UTICK0_IRQHandler	startup/startup_lpc54018.c	/^WEAK void UTICK0_IRQHandler(void)$/;"	f
UTICK0_IRQn	device/LPC54018.h	/^  UTICK0_IRQn                  = 8,                \/**< Micro-tick Timer *\/$/;"	e	enum:IRQn
UTICK_BASE_ADDRS	device/LPC54018.h	15483;"	d
UTICK_BASE_PTRS	device/LPC54018.h	15485;"	d
UTICK_CAPCLR_CAPCLR0	device/LPC54018.h	15446;"	d
UTICK_CAPCLR_CAPCLR0_MASK	device/LPC54018.h	15444;"	d
UTICK_CAPCLR_CAPCLR0_SHIFT	device/LPC54018.h	15445;"	d
UTICK_CAPCLR_CAPCLR1	device/LPC54018.h	15449;"	d
UTICK_CAPCLR_CAPCLR1_MASK	device/LPC54018.h	15447;"	d
UTICK_CAPCLR_CAPCLR1_SHIFT	device/LPC54018.h	15448;"	d
UTICK_CAPCLR_CAPCLR2	device/LPC54018.h	15452;"	d
UTICK_CAPCLR_CAPCLR2_MASK	device/LPC54018.h	15450;"	d
UTICK_CAPCLR_CAPCLR2_SHIFT	device/LPC54018.h	15451;"	d
UTICK_CAPCLR_CAPCLR3	device/LPC54018.h	15455;"	d
UTICK_CAPCLR_CAPCLR3_MASK	device/LPC54018.h	15453;"	d
UTICK_CAPCLR_CAPCLR3_SHIFT	device/LPC54018.h	15454;"	d
UTICK_CAP_CAP_VALUE	device/LPC54018.h	15462;"	d
UTICK_CAP_CAP_VALUE_MASK	device/LPC54018.h	15460;"	d
UTICK_CAP_CAP_VALUE_SHIFT	device/LPC54018.h	15461;"	d
UTICK_CAP_COUNT	device/LPC54018.h	15469;"	d
UTICK_CAP_VALID	device/LPC54018.h	15465;"	d
UTICK_CAP_VALID_MASK	device/LPC54018.h	15463;"	d
UTICK_CAP_VALID_SHIFT	device/LPC54018.h	15464;"	d
UTICK_CFG_CAPEN0	device/LPC54018.h	15418;"	d
UTICK_CFG_CAPEN0_MASK	device/LPC54018.h	15416;"	d
UTICK_CFG_CAPEN0_SHIFT	device/LPC54018.h	15417;"	d
UTICK_CFG_CAPEN1	device/LPC54018.h	15421;"	d
UTICK_CFG_CAPEN1_MASK	device/LPC54018.h	15419;"	d
UTICK_CFG_CAPEN1_SHIFT	device/LPC54018.h	15420;"	d
UTICK_CFG_CAPEN2	device/LPC54018.h	15424;"	d
UTICK_CFG_CAPEN2_MASK	device/LPC54018.h	15422;"	d
UTICK_CFG_CAPEN2_SHIFT	device/LPC54018.h	15423;"	d
UTICK_CFG_CAPEN3	device/LPC54018.h	15427;"	d
UTICK_CFG_CAPEN3_MASK	device/LPC54018.h	15425;"	d
UTICK_CFG_CAPEN3_SHIFT	device/LPC54018.h	15426;"	d
UTICK_CFG_CAPPOL0	device/LPC54018.h	15430;"	d
UTICK_CFG_CAPPOL0_MASK	device/LPC54018.h	15428;"	d
UTICK_CFG_CAPPOL0_SHIFT	device/LPC54018.h	15429;"	d
UTICK_CFG_CAPPOL1	device/LPC54018.h	15433;"	d
UTICK_CFG_CAPPOL1_MASK	device/LPC54018.h	15431;"	d
UTICK_CFG_CAPPOL1_SHIFT	device/LPC54018.h	15432;"	d
UTICK_CFG_CAPPOL2	device/LPC54018.h	15436;"	d
UTICK_CFG_CAPPOL2_MASK	device/LPC54018.h	15434;"	d
UTICK_CFG_CAPPOL2_SHIFT	device/LPC54018.h	15435;"	d
UTICK_CFG_CAPPOL3	device/LPC54018.h	15439;"	d
UTICK_CFG_CAPPOL3_MASK	device/LPC54018.h	15437;"	d
UTICK_CFG_CAPPOL3_SHIFT	device/LPC54018.h	15438;"	d
UTICK_CLOCKS	drivers/fsl_clock.h	166;"	d
UTICK_CTRL_DELAYVAL	device/LPC54018.h	15398;"	d
UTICK_CTRL_DELAYVAL_MASK	device/LPC54018.h	15396;"	d
UTICK_CTRL_DELAYVAL_SHIFT	device/LPC54018.h	15397;"	d
UTICK_CTRL_REPEAT	device/LPC54018.h	15401;"	d
UTICK_CTRL_REPEAT_MASK	device/LPC54018.h	15399;"	d
UTICK_CTRL_REPEAT_SHIFT	device/LPC54018.h	15400;"	d
UTICK_IRQS	device/LPC54018.h	15487;"	d
UTICK_RSTS	drivers/fsl_reset.h	223;"	d
UTICK_STAT_ACTIVE	device/LPC54018.h	15411;"	d
UTICK_STAT_ACTIVE_MASK	device/LPC54018.h	15409;"	d
UTICK_STAT_ACTIVE_SHIFT	device/LPC54018.h	15410;"	d
UTICK_STAT_INTR	device/LPC54018.h	15408;"	d
UTICK_STAT_INTR_MASK	device/LPC54018.h	15406;"	d
UTICK_STAT_INTR_SHIFT	device/LPC54018.h	15407;"	d
UTICK_Type	device/LPC54018.h	/^} UTICK_Type;$/;"	t	typeref:struct:__anon191
Uninitialize	CMSIS_driver/Driver_I2C.h	/^  int32_t              (*Uninitialize)   (void);                                                                \/\/\/< Pointer to \\ref ARM_I2C_Uninitialize : De-initialize I2C Interface.$/;"	m	struct:_ARM_DRIVER_I2C
Uninitialize	CMSIS_driver/Driver_SPI.h	/^  int32_t              (*Uninitialize)    (void);                             \/\/\/< Pointer to \\ref ARM_SPI_Uninitialize : De-initialize SPI Interface.$/;"	m	struct:_ARM_DRIVER_SPI
UsageFault_Handler	startup/startup_lpc54018.c	/^WEAK_AV void UsageFault_Handler(void)$/;"	f
UsageFault_IRQn	device/LPC54018.h	/^  UsageFault_IRQn              = -10,              \/**< Cortex-M4 Usage Fault Interrupt *\/$/;"	e	enum:IRQn
UseCache	emwin/emWin_header/GUIDRV_S1D15G00.h	/^  int UseCache;$/;"	m	struct:__anon228
UseCache	emwin/emWin_header/GUIDRV_SLin.h	/^  int UseCache;$/;"	m	struct:__anon223
UseCache	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int UseCache;$/;"	m	struct:DRIVER_CONTEXT
UseCache	emwin/emWin_header/GUIDRV_SSD1926.h	/^  int UseCache;$/;"	m	struct:__anon302
UseCache	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int UseCache;$/;"	m	struct:DRIVER_CONTEXT
UseCnt	emwin/emWin_header/GUI_Private.h	/^  I16 UseCnt;$/;"	m	struct:GUI_Usage
UseDualScan	emwin/emWin_header/GUIDRV_SLin.h	/^  U8  UseDualScan; \/\/ Used for T6963$/;"	m	struct:__anon223
UseDualScan	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  U8  UseDualScan; \/\/ Used by T6963$/;"	m	struct:DRIVER_CONTEXT
UseLayer	emwin/emWin_header/GUIDRV_S1D13748.h	/^  int UseLayer;$/;"	m	struct:__anon375
UseLayer	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int UseLayer;$/;"	m	struct:DRIVER_CONTEXT
UseLayer	emwin/emWin_header/GUIDRV_S1D13781.h	/^  int UseLayer;$/;"	m	struct:__anon282
UseLayer	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int UseLayer;$/;"	m	struct:DRIVER_CONTEXT
UseMirror	emwin/emWin_header/GUIDRV_SLin.h	/^  int UseMirror;   \/\/ Only used for SSD1848$/;"	m	struct:__anon223
UseMirror	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int UseMirror;   \/\/ Used by SSD1848$/;"	m	struct:DRIVER_CONTEXT
UsedBytes	emwin/emWin_header/GUI.h	/^  U32 UsedBytes;$/;"	m	struct:__anon392
UserAlpha	emwin/emWin_header/GUI.h	/^  U32 UserAlpha;$/;"	m	struct:__anon395
UserData	emwin/emWin_header/ICONVIEW_Private.h	/^  U32                 UserData;$/;"	m	struct:__anon220
UserData	emwin/emWin_header/LISTVIEW_Private.h	/^  U32                          UserData;$/;"	m	struct:__anon334
UserData	emwin/emWin_header/SWIPELIST_Private.h	/^  U32            UserData;$/;"	m	struct:__anon236
UserData	emwin/emWin_header/TREEVIEW_Private.h	/^  U32                  UserData;$/;"	m	struct:__anon225
UserId	emwin/emWin_header/WM.h	/^  int      UserId;$/;"	m	struct:__anon292
V	CMSIS/core_armv8mbl.h	/^    uint32_t V:1;                        \/*!< bit:     28  Overflow condition code flag *\/$/;"	m	struct:__anon113::__anon114
V	CMSIS/core_armv8mbl.h	/^    uint32_t V:1;                        \/*!< bit:     28  Overflow condition code flag *\/$/;"	m	struct:__anon117::__anon118
V	CMSIS/core_armv8mml.h	/^    uint32_t V:1;                        \/*!< bit:     28  Overflow condition code flag *\/$/;"	m	struct:__anon13::__anon14
V	CMSIS/core_armv8mml.h	/^    uint32_t V:1;                        \/*!< bit:     28  Overflow condition code flag *\/$/;"	m	struct:__anon9::__anon10
V	CMSIS/core_cm4.h	/^    uint32_t V:1;                        \/*!< bit:     28  Overflow condition code flag *\/$/;"	m	struct:__anon31::__anon32
V	CMSIS/core_cm4.h	/^    uint32_t V:1;                        \/*!< bit:     28  Overflow condition code flag *\/$/;"	m	struct:__anon35::__anon36
VAL	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t VAL;                    \/*!< Offset: 0x008 (R\/W)  SysTick Current Value Register *\/$/;"	m	struct:__anon123
VAL	CMSIS/core_armv8mml.h	/^  __IOM uint32_t VAL;                    \/*!< Offset: 0x008 (R\/W)  SysTick Current Value Register *\/$/;"	m	struct:__anon20
VAL	CMSIS/core_cm4.h	/^  __IOM uint32_t VAL;                    \/*!< Offset: 0x008 (R\/W)  SysTick Current Value Register *\/$/;"	m	struct:__anon42
VALIDID	lwip/src/netif/ppp/ipv6cp.c	346;"	d	file:
VARICODE_DEC	codec2/varicode.h	/^struct VARICODE_DEC {$/;"	s
VARICODE_MAX_BITS	codec2/varicode.h	30;"	d
VENDOR_INFO_SIZE	usb/device/class/usb_device_cdc_rndis.c	34;"	d	file:
VJF_TOSS	lwip/src/include/netif/ppp/vj.h	155;"	d
VJ_H	lwip/src/include/netif/ppp/vj.h	29;"	d
VJ_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	309;"	d
VJ_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	313;"	d
VJ_SUPPORT	lwip/src/include/netif/ppp/ppp_opts.h	314;"	d
VLAN_ID	lwip/src/include/lwip/prot/ethernet.h	108;"	d
VTOR	CMSIS/core_armv8mbl.h	/^  __IOM uint32_t VTOR;                   \/*!< Offset: 0x008 (R\/W)  Vector Table Offset Register *\/$/;"	m	struct:__anon122
VTOR	CMSIS/core_armv8mml.h	/^  __IOM uint32_t VTOR;                   \/*!< Offset: 0x008 (R\/W)  Vector Table Offset Register *\/$/;"	m	struct:__anon18
VTOR	CMSIS/core_cm4.h	/^  __IOM uint32_t VTOR;                   \/*!< Offset: 0x008 (R\/W)  Vector Table Offset Register *\/$/;"	m	struct:__anon40
V_THRESH	codec2/defines.h	50;"	d
Value	emwin/emWin_header/KNOB_Private.h	/^  I32 Value;$/;"	m	struct:__anon327
Velocity	emwin/emWin_header/LISTWHEEL_Private.h	/^  int                     Velocity;         \/\/ Motion in pixels$/;"	m	struct:__anon353
Version	emwin/emWin_header/GUI.h	/^  int Version;  \/\/ Version according to QR code documentation$/;"	m	struct:__anon396
Visible	emwin/emWin_header/GUI.h	/^  int Visible;$/;"	m	struct:__anon386
W	codec2/codec2_internal.h	/^    COMP          W[FFT_ENC];	           \/* DFT of w[]                                *\/$/;"	m	struct:CODEC2
W	codec2/ofdm_internal.h	/^    complex float W[OFDM_NC + 2][OFDM_M];$/;"	m	struct:OFDM
W	device/LPC54018.h	/^  __IO uint32_t W[6][32];                          \/**< Word pin registers for all port 0 and 1 GPIO pins, array offset: 0x1000, array step: index*0x80, index2*0x4 *\/$/;"	m	struct:__anon159
W9812G6JB6I	board/board.c	26;"	d	file:
WAKE	device/LPC54018.h	/^  __IO uint32_t WAKE;                              \/**< High-resolution\/wake-up timer control register, offset: 0xC *\/$/;"	m	struct:__anon171
WARNINT	device/LPC54018.h	/^  __IO uint32_t WARNINT;                           \/**< Watchdog Warning Interrupt compare value., offset: 0x14 *\/$/;"	m	struct:__anon192
WDTOSCCTRL	device/LPC54018.h	/^  __IO uint32_t WDTOSCCTRL;                        \/**< Watchdog oscillator control, offset: 0x508 *\/$/;"	m	struct:__anon185
WDT_BOD_IRQHandler	startup/startup_lpc54018.c	/^WEAK void WDT_BOD_IRQHandler(void)$/;"	f
WDT_BOD_IRQn	device/LPC54018.h	/^  WDT_BOD_IRQn                 = 0,                \/**< Windowed watchdog timer, Brownout detect *\/$/;"	e	enum:IRQn
WEAK	startup/startup_lpc54018.c	32;"	d	file:
WEAK_AV	startup/startup_lpc54018.c	33;"	d	file:
WIDEBAND_MAP	codec2/c2wideband.h	/^} WIDEBAND_MAP;$/;"	t	typeref:struct:__anon133
WIDGET	emwin/emWin_header/WIDGET.h	/^} WIDGET;$/;"	t	typeref:struct:__anon212
WIDGET_CF_VERTICAL	emwin/emWin_header/WIDGET.h	229;"	d
WIDGET_CREATE	emwin/emWin_header/WIDGET.h	/^typedef void WIDGET_CREATE        (WM_HWIN hObj);$/;"	t
WIDGET_DRAW_BACKGROUND	emwin/emWin_header/WIDGET.h	213;"	d
WIDGET_DRAW_ITEM_FUNC	emwin/emWin_header/WIDGET.h	/^typedef int  WIDGET_DRAW_ITEM_FUNC(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo);$/;"	t
WIDGET_DRAW_OVERLAY	emwin/emWin_header/WIDGET.h	215;"	d
WIDGET_EFFECT	emwin/emWin_header/WIDGET.h	/^} WIDGET_EFFECT;$/;"	t	typeref:struct:__anon211
WIDGET_EnableStreamAuto	emwin/emWin_header/WIDGET.h	389;"	d
WIDGET_H	emwin/emWin_header/WIDGET.h	46;"	d
WIDGET_ITEM_APPLY_PROPS	emwin/emWin_header/WIDGET.h	211;"	d
WIDGET_ITEM_CREATE	emwin/emWin_header/WIDGET.h	182;"	d
WIDGET_ITEM_DRAW	emwin/emWin_header/WIDGET.h	183;"	d
WIDGET_ITEM_DRAW_ARROW	emwin/emWin_header/WIDGET.h	184;"	d
WIDGET_ITEM_DRAW_ARROW_L	emwin/emWin_header/WIDGET.h	185;"	d
WIDGET_ITEM_DRAW_ARROW_R	emwin/emWin_header/WIDGET.h	186;"	d
WIDGET_ITEM_DRAW_BACKGROUND	emwin/emWin_header/WIDGET.h	187;"	d
WIDGET_ITEM_DRAW_BITMAP	emwin/emWin_header/WIDGET.h	188;"	d
WIDGET_ITEM_DRAW_BUTTON	emwin/emWin_header/WIDGET.h	189;"	d
WIDGET_ITEM_DRAW_BUTTON_L	emwin/emWin_header/WIDGET.h	190;"	d
WIDGET_ITEM_DRAW_BUTTON_R	emwin/emWin_header/WIDGET.h	191;"	d
WIDGET_ITEM_DRAW_FOCUS	emwin/emWin_header/WIDGET.h	192;"	d
WIDGET_ITEM_DRAW_FRAME	emwin/emWin_header/WIDGET.h	193;"	d
WIDGET_ITEM_DRAW_INFO	emwin/emWin_header/WIDGET.h	/^} WIDGET_ITEM_DRAW_INFO;$/;"	t	typeref:struct:__anon209
WIDGET_ITEM_DRAW_OVERLAP	emwin/emWin_header/WIDGET.h	194;"	d
WIDGET_ITEM_DRAW_OVERLAY	emwin/emWin_header/WIDGET.h	195;"	d
WIDGET_ITEM_DRAW_SEP	emwin/emWin_header/WIDGET.h	196;"	d
WIDGET_ITEM_DRAW_SHAFT	emwin/emWin_header/WIDGET.h	197;"	d
WIDGET_ITEM_DRAW_SHAFT_L	emwin/emWin_header/WIDGET.h	198;"	d
WIDGET_ITEM_DRAW_SHAFT_R	emwin/emWin_header/WIDGET.h	199;"	d
WIDGET_ITEM_DRAW_TEXT	emwin/emWin_header/WIDGET.h	200;"	d
WIDGET_ITEM_DRAW_THUMB	emwin/emWin_header/WIDGET.h	201;"	d
WIDGET_ITEM_DRAW_TICKS	emwin/emWin_header/WIDGET.h	202;"	d
WIDGET_ITEM_GET_BORDERSIZE_B	emwin/emWin_header/WIDGET.h	203;"	d
WIDGET_ITEM_GET_BORDERSIZE_L	emwin/emWin_header/WIDGET.h	204;"	d
WIDGET_ITEM_GET_BORDERSIZE_R	emwin/emWin_header/WIDGET.h	205;"	d
WIDGET_ITEM_GET_BORDERSIZE_T	emwin/emWin_header/WIDGET.h	206;"	d
WIDGET_ITEM_GET_BUTTONSIZE	emwin/emWin_header/WIDGET.h	207;"	d
WIDGET_ITEM_GET_RADIUS	emwin/emWin_header/WIDGET.h	210;"	d
WIDGET_ITEM_GET_XSIZE	emwin/emWin_header/WIDGET.h	208;"	d
WIDGET_ITEM_GET_YSIZE	emwin/emWin_header/WIDGET.h	209;"	d
WIDGET_LOCK	emwin/emWin_header/WIDGET.h	128;"	d
WIDGET_PAINT	emwin/emWin_header/WIDGET.h	/^typedef void WIDGET_PAINT         (WM_HWIN hObj);$/;"	t
WIDGET_SKIN	emwin/emWin_header/WIDGET.h	/^} WIDGET_SKIN;$/;"	t	typeref:struct:__anon210
WIDGET_STATE_FOCUS	emwin/emWin_header/WIDGET.h	168;"	d
WIDGET_STATE_FOCUSABLE	emwin/emWin_header/WIDGET.h	170;"	d
WIDGET_STATE_FOCUSSABLE	emwin/emWin_header/WIDGET.h	176;"	d
WIDGET_STATE_USER0	emwin/emWin_header/WIDGET.h	172;"	d
WIDGET_STATE_USER1	emwin/emWin_header/WIDGET.h	173;"	d
WIDGET_STATE_USER2	emwin/emWin_header/WIDGET.h	174;"	d
WIDGET_STATE_VERTICAL	emwin/emWin_header/WIDGET.h	169;"	d
WIDGET_SetDefaultEffect_3D	emwin/emWin_header/WIDGET.h	391;"	d
WIDGET_SetDefaultEffect_3D1L	emwin/emWin_header/WIDGET.h	392;"	d
WIDGET_SetDefaultEffect_3D2L	emwin/emWin_header/WIDGET.h	393;"	d
WIDGET_SetDefaultEffect_None	emwin/emWin_header/WIDGET.h	394;"	d
WIDGET_SetDefaultEffect_Simple	emwin/emWin_header/WIDGET.h	395;"	d
WIDGET_USE_FLEX_SKIN	emwin/emWin_header/WIDGET.h	140;"	d
WIDGET_USE_FLEX_SKIN	emwin/emWin_header/WIDGET.h	142;"	d
WIDGET_USE_PARENT_EFFECT	emwin/emWin_header/WIDGET.h	136;"	d
WIDGET_USE_SCHEME_LARGE	emwin/emWin_header/WIDGET.h	148;"	d
WIDGET_USE_SCHEME_LARGE	emwin/emWin_header/WIDGET.h	157;"	d
WIDGET_USE_SCHEME_MEDIUM	emwin/emWin_header/WIDGET.h	147;"	d
WIDGET_USE_SCHEME_MEDIUM	emwin/emWin_header/WIDGET.h	154;"	d
WIDGET_USE_SCHEME_SMALL	emwin/emWin_header/WIDGET.h	146;"	d
WIDGET_USE_SCHEME_SMALL	emwin/emWin_header/WIDGET.h	151;"	d
WINDOW	device/LPC54018.h	/^  __IO uint32_t WINDOW;                            \/**< Watchdog Window compare value., offset: 0x18 *\/$/;"	m	struct:__anon192
WINDOW_ID	emwin/emWin_header/WIDGET.h	126;"	d
WINDOW_OBJ	emwin/emWin_header/WINDOW_Private.h	/^} WINDOW_OBJ;$/;"	t	typeref:struct:__anon310
WINDOW_PRIVATE_H	emwin/emWin_header/WINDOW_Private.h	46;"	d
WM8904_ADC_DIGITAL_VOLUME_LEFT	codec/fsl_wm8904.h	69;"	d
WM8904_ADC_DIGITAL_VOLUME_RIGHT	codec/fsl_wm8904.h	70;"	d
WM8904_ANALOG_ADC_0	codec/fsl_wm8904.h	39;"	d
WM8904_ANALOG_HP_0	codec/fsl_wm8904.h	61;"	d
WM8904_ANALOG_LEFT_IN_0	codec/fsl_wm8904.h	53;"	d
WM8904_ANALOG_LEFT_IN_1	codec/fsl_wm8904.h	55;"	d
WM8904_ANALOG_OUT12_ZC	codec/fsl_wm8904.h	59;"	d
WM8904_ANALOG_OUT1_LEFT	codec/fsl_wm8904.h	57;"	d
WM8904_ANALOG_OUT1_RIGHT	codec/fsl_wm8904.h	58;"	d
WM8904_ANALOG_OUT2_LEFT	codec/fsl_wm8904.h	71;"	d
WM8904_ANALOG_OUT2_RIGHT	codec/fsl_wm8904.h	72;"	d
WM8904_ANALOG_RIGHT_IN_0	codec/fsl_wm8904.h	54;"	d
WM8904_ANALOG_RIGHT_IN_1	codec/fsl_wm8904.h	56;"	d
WM8904_AUDIO_IF_0	codec/fsl_wm8904.h	47;"	d
WM8904_AUDIO_IF_1	codec/fsl_wm8904.h	48;"	d
WM8904_AUDIO_IF_2	codec/fsl_wm8904.h	49;"	d
WM8904_AUDIO_IF_3	codec/fsl_wm8904.h	50;"	d
WM8904_CHRG_PUMP_0	codec/fsl_wm8904.h	62;"	d
WM8904_CLK_RATES_0	codec/fsl_wm8904.h	44;"	d
WM8904_CLK_RATES_1	codec/fsl_wm8904.h	45;"	d
WM8904_CLK_RATES_2	codec/fsl_wm8904.h	46;"	d
WM8904_CLS_W_0	codec/fsl_wm8904.h	63;"	d
WM8904_CheckAudioFormat	codec/fsl_wm8904.c	/^status_t WM8904_CheckAudioFormat(wm8904_handle_t *handle, wm8904_audio_format_t *format, uint32_t mclkFreq)$/;"	f
WM8904_DAC_DIGITAL_VOLUME_LEFT	codec/fsl_wm8904.h	67;"	d
WM8904_DAC_DIGITAL_VOLUME_RIGHT	codec/fsl_wm8904.h	68;"	d
WM8904_DAC_DIG_0	codec/fsl_wm8904.h	52;"	d
WM8904_DAC_DIG_1	codec/fsl_wm8904.h	51;"	d
WM8904_DC_SERVO_0	codec/fsl_wm8904.h	60;"	d
WM8904_DEBUG_REGISTER	codec/fsl_wm8904.h	34;"	d
WM8904_Deinit	codec/fsl_wm8904.c	/^status_t WM8904_Deinit(wm8904_handle_t *handle)$/;"	f
WM8904_EnableADCTDMMode	codec/fsl_wm8904.c	/^status_t WM8904_EnableADCTDMMode(wm8904_handle_t *handle, wm8904_timeslot_t timeSlot)$/;"	f
WM8904_EnableDACTDMMode	codec/fsl_wm8904.c	/^status_t WM8904_EnableDACTDMMode(wm8904_handle_t *handle, wm8904_timeslot_t timeSlot)$/;"	f
WM8904_GetDefaultConfig	codec/fsl_wm8904.c	/^void WM8904_GetDefaultConfig(wm8904_config_t *config)$/;"	f
WM8904_HANDLE_SIZE	codec/fsl_wm8904.h	30;"	d
WM8904_I2C_ADDRESS	codec/fsl_wm8904.h	75;"	d
WM8904_I2C_BITRATE	codec/fsl_wm8904.h	78;"	d
WM8904_Init	codec/fsl_wm8904.c	/^status_t WM8904_Init(wm8904_handle_t *handle, wm8904_config_t *wm8904Config)$/;"	f
WM8904_MAP_DAC_ADC_VOLUME	codec/fsl_wm8904.c	17;"	d	file:
WM8904_MAP_HEADPHONE_LINEOUT_VOLUME	codec/fsl_wm8904.c	19;"	d	file:
WM8904_MAP_PGA_VOLUME	codec/fsl_wm8904.c	18;"	d	file:
WM8904_ModifyRegister	codec/fsl_wm8904.c	/^status_t WM8904_ModifyRegister(wm8904_handle_t *handle, uint8_t reg, uint16_t mask, uint16_t value)$/;"	f
WM8904_POWER_MGMT_0	codec/fsl_wm8904.h	40;"	d
WM8904_POWER_MGMT_2	codec/fsl_wm8904.h	41;"	d
WM8904_POWER_MGMT_3	codec/fsl_wm8904.h	42;"	d
WM8904_POWER_MGMT_6	codec/fsl_wm8904.h	43;"	d
WM8904_PrintRegisters	codec/fsl_wm8904.c	/^status_t WM8904_PrintRegisters(wm8904_handle_t *handle)$/;"	f
WM8904_RESET	codec/fsl_wm8904.h	38;"	d
WM8904_ReadRegister	codec/fsl_wm8904.c	/^status_t WM8904_ReadRegister(wm8904_handle_t *handle, uint8_t reg, uint16_t *value)$/;"	f
WM8904_SWAP_UINT16_BYTE_SEQUENCE	codec/fsl_wm8904.c	20;"	d	file:
WM8904_SelectLRCPolarity	codec/fsl_wm8904.c	/^status_t WM8904_SelectLRCPolarity(wm8904_handle_t *handle, uint32_t polarity)$/;"	f
WM8904_SetAudioFormat	codec/fsl_wm8904.c	/^status_t WM8904_SetAudioFormat(wm8904_handle_t *handle, uint32_t sysclk, uint32_t sampleRate, uint32_t bitWidth)$/;"	f
WM8904_SetChannelMute	codec/fsl_wm8904.c	/^status_t WM8904_SetChannelMute(wm8904_handle_t *handle, uint32_t channel, bool isMute)$/;"	f
WM8904_SetChannelVolume	codec/fsl_wm8904.c	/^status_t WM8904_SetChannelVolume(wm8904_handle_t *handle, uint32_t channel, uint32_t volume)$/;"	f
WM8904_SetMasterSlave	codec/fsl_wm8904.c	/^status_t WM8904_SetMasterSlave(wm8904_handle_t *handle, bool master)$/;"	f
WM8904_SetModulePower	codec/fsl_wm8904.c	/^status_t WM8904_SetModulePower(wm8904_handle_t *handle, wm8904_module_t module, bool isEnabled)$/;"	f
WM8904_SetMute	codec/fsl_wm8904.c	/^status_t WM8904_SetMute(wm8904_handle_t *handle, bool muteLeft, bool muteRight)$/;"	f
WM8904_SetPlay	codec/fsl_wm8904.c	/^status_t WM8904_SetPlay(wm8904_handle_t *handle, uint32_t playSource)$/;"	f
WM8904_SetProtocol	codec/fsl_wm8904.c	/^status_t WM8904_SetProtocol(wm8904_handle_t *handle, wm8904_protocol_t protocol)$/;"	f
WM8904_SetRecord	codec/fsl_wm8904.c	/^status_t WM8904_SetRecord(wm8904_handle_t *handle, uint32_t recordSource)$/;"	f
WM8904_SetRecordChannel	codec/fsl_wm8904.c	/^status_t WM8904_SetRecordChannel(wm8904_handle_t *handle, uint32_t leftRecordChannel, uint32_t rightRecordChannel)$/;"	f
WM8904_SetVolume	codec/fsl_wm8904.c	/^status_t WM8904_SetVolume(wm8904_handle_t *handle, uint16_t volumeLeft, uint16_t volumeRight)$/;"	f
WM8904_UpdateFormat	codec/fsl_wm8904.c	/^static status_t WM8904_UpdateFormat(wm8904_handle_t *handle, wm8904_audio_format_t *format)$/;"	f	file:
WM8904_WRT_SEQUENCER_0	codec/fsl_wm8904.h	64;"	d
WM8904_WRT_SEQUENCER_3	codec/fsl_wm8904.h	65;"	d
WM8904_WRT_SEQUENCER_4	codec/fsl_wm8904.h	66;"	d
WM8904_WaitOnWriteSequencer	codec/fsl_wm8904.c	/^static status_t WM8904_WaitOnWriteSequencer(wm8904_handle_t *handle)$/;"	f	file:
WM8904_WriteRegister	codec/fsl_wm8904.c	/^status_t WM8904_WriteRegister(wm8904_handle_t *handle, uint8_t reg, uint16_t value)$/;"	f
WM_ADDORG	emwin/emWin_header/WM_GUI.h	68;"	d
WM_ADDORGX	emwin/emWin_header/WM_GUI.h	66;"	d
WM_ADDORGX_AA	emwin/emWin_header/WM_GUI.h	69;"	d
WM_ADDORGY	emwin/emWin_header/WM_GUI.h	67;"	d
WM_ADDORGY_AA	emwin/emWin_header/WM_GUI.h	70;"	d
WM_ADDORG_AA	emwin/emWin_header/WM_GUI.h	71;"	d
WM_ASSERT	emwin/emWin_header/WM.h	90;"	d
WM_ASSERT_NOT_IN_PAINT	emwin/emWin_header/WM_Intern.h	92;"	d
WM_ASSERT_NOT_IN_PAINT	emwin/emWin_header/WM_Intern.h	96;"	d
WM_CALLBACK	emwin/emWin_header/WM.h	/^typedef void WM_CALLBACK( WM_MESSAGE * pMsg);$/;"	t
WM_CAPTURE_RELEASED	emwin/emWin_header/WM.h	244;"	d
WM_CF_ACTIVATE	emwin/emWin_header/WM.h	362;"	d
WM_CF_ANCHOR_BOTTOM	emwin/emWin_header/WM.h	368;"	d
WM_CF_ANCHOR_LEFT	emwin/emWin_header/WM.h	369;"	d
WM_CF_ANCHOR_RIGHT	emwin/emWin_header/WM.h	367;"	d
WM_CF_ANCHOR_TOP	emwin/emWin_header/WM.h	370;"	d
WM_CF_BGND	emwin/emWin_header/WM.h	364;"	d
WM_CF_CONST_OUTLINE	emwin/emWin_header/WM.h	372;"	d
WM_CF_DISABLED	emwin/emWin_header/WM.h	359;"	d
WM_CF_FGND	emwin/emWin_header/WM.h	363;"	d
WM_CF_GESTURE	emwin/emWin_header/WM.h	386;"	d
WM_CF_HASTRANS	emwin/emWin_header/WM.h	353;"	d
WM_CF_HIDE	emwin/emWin_header/WM.h	355;"	d
WM_CF_LATE_CLIP	emwin/emWin_header/WM.h	375;"	d
WM_CF_MEMDEV	emwin/emWin_header/WM.h	357;"	d
WM_CF_MEMDEV_ON_REDRAW	emwin/emWin_header/WM.h	376;"	d
WM_CF_MOTION_R	emwin/emWin_header/WM.h	390;"	d
WM_CF_MOTION_X	emwin/emWin_header/WM.h	383;"	d
WM_CF_MOTION_Y	emwin/emWin_header/WM.h	384;"	d
WM_CF_SHOW	emwin/emWin_header/WM.h	356;"	d
WM_CF_STATIC	emwin/emWin_header/WM.h	381;"	d
WM_CF_STAYONTOP	emwin/emWin_header/WM.h	358;"	d
WM_CF_ZOOM	emwin/emWin_header/WM.h	388;"	d
WM_COMPATIBLE_MODE	emwin/emWin_header/WM.h	99;"	d
WM_CREATE	emwin/emWin_header/WM.h	220;"	d
WM_CRITICAL_HANDLE	emwin/emWin_header/WM_Intern.h	/^typedef struct WM_CRITICAL_HANDLE {$/;"	s
WM_CRITICAL_HANDLE	emwin/emWin_header/WM_Intern.h	/^} WM_CRITICAL_HANDLE;$/;"	t	typeref:struct:WM_CRITICAL_HANDLE
WM_DELETE	emwin/emWin_header/WM.h	225;"	d
WM_DIALOG_STATUS	emwin/emWin_header/WM.h	/^} WM_DIALOG_STATUS;$/;"	t	typeref:struct:__anon285
WM_ExecIdle	emwin/emWin_header/WM.h	761;"	d
WM_ExecIdle1	emwin/emWin_header/WM.h	762;"	d
WM_GESTURE	emwin/emWin_header/WM.h	286;"	d
WM_GESTURE_INFO	emwin/emWin_header/WM.h	/^} WM_GESTURE_INFO;$/;"	t	typeref:struct:__anon289
WM_GET_ACCEPT_FOCUS	emwin/emWin_header/WM.h	249;"	d
WM_GET_BKCOLOR	emwin/emWin_header/WM.h	254;"	d
WM_GET_CLIENT_WINDOW	emwin/emWin_header/WM.h	243;"	d
WM_GET_ID	emwin/emWin_header/WM.h	241;"	d
WM_GET_INSIDE_RECT	emwin/emWin_header/WM.h	240;"	d
WM_GET_RADIOGROUP	emwin/emWin_header/WM.h	269;"	d
WM_GET_SCROLL_STATE	emwin/emWin_header/WM.h	255;"	d
WM_GET_WINDOW_ID	emwin/emWin_header/WM.h	278;"	d
WM_GF_BEGIN	emwin/emWin_header/WM.h	207;"	d
WM_GF_DTAP	emwin/emWin_header/WM.h	212;"	d
WM_GF_END	emwin/emWin_header/WM.h	208;"	d
WM_GF_PAN	emwin/emWin_header/WM.h	209;"	d
WM_GF_ROTATE	emwin/emWin_header/WM.h	211;"	d
WM_GF_ZOOM	emwin/emWin_header/WM.h	210;"	d
WM_GUI_H	emwin/emWin_header/WM_GUI.h	46;"	d
WM_GetBackgroundWindow	emwin/emWin_header/WM.h	773;"	d
WM_GetFocussedWindow	emwin/emWin_header/WM.h	498;"	d
WM_GetForegroundWindow	emwin/emWin_header/WM.h	774;"	d
WM_GetKey	emwin/emWin_header/WM.h	758;"	d
WM_GetWinOrgX	emwin/emWin_header/WM.h	766;"	d
WM_GetWinOrgY	emwin/emWin_header/WM.h	767;"	d
WM_GetWinRect	emwin/emWin_header/WM.h	765;"	d
WM_GetWinSizeX	emwin/emWin_header/WM.h	768;"	d
WM_GetWinSizeY	emwin/emWin_header/WM.h	769;"	d
WM_GetXSize	emwin/emWin_header/WM.h	770;"	d
WM_GetYSize	emwin/emWin_header/WM.h	771;"	d
WM_H	emwin/emWin_header/WM.h	46;"	d
WM_H2P	emwin/emWin_header/WM_Intern.h	88;"	d
WM_HANDLE_DIALOG_STATUS	emwin/emWin_header/WM.h	268;"	d
WM_HBKWIN	emwin/emWin_header/WM.h	342;"	d
WM_HMEM	emwin/emWin_header/WM.h	334;"	d
WM_HMEM_NULL	emwin/emWin_header/WM.h	335;"	d
WM_HTIMER	emwin/emWin_header/WM.h	336;"	d
WM_HWIN	emwin/emWin_header/WM.h	332;"	d
WM_HWIN_NULL	emwin/emWin_header/WM.h	333;"	d
WM_HideWin	emwin/emWin_header/WM.h	756;"	d
WM_INIT_DIALOG	emwin/emWin_header/WM.h	246;"	d
WM_INTERN_H	emwin/emWin_header/WM_Intern.h	46;"	d
WM_ITERATE_END	emwin/emWin_header/WM_GUI.h	62;"	d
WM_ITERATE_START	emwin/emWin_header/WM_GUI.h	57;"	d
WM_Invalidate	emwin/emWin_header/WM.h	764;"	d
WM_IsActive	emwin/emWin_header/GUI.h	/^    U8 WM_IsActive;$/;"	m	struct:GUI_CONTEXT
WM_IsFocussable	emwin/emWin_header/WM.h	499;"	d
WM_KEY	emwin/emWin_header/WM.h	229;"	d
WM_KEY_INFO	emwin/emWin_header/WM.h	/^} WM_KEY_INFO;$/;"	t	typeref:struct:__anon283
WM_LOCK	emwin/emWin_header/WM.h	119;"	d
WM_LOCK_H	emwin/emWin_header/WM.h	122;"	d
WM_MENU	emwin/emWin_header/WM.h	271;"	d
WM_MESSAGE	emwin/emWin_header/WM.h	/^struct WM_MESSAGE {$/;"	s
WM_MESSAGE	emwin/emWin_header/WM.h	/^typedef struct WM_MESSAGE WM_MESSAGE;$/;"	t	typeref:struct:WM_MESSAGE
WM_MOTION	emwin/emWin_header/WM.h	276;"	d
WM_MOTION_GETCONTEXT	emwin/emWin_header/WM.h	299;"	d
WM_MOTION_GETPOS	emwin/emWin_header/WM.h	298;"	d
WM_MOTION_INFO	emwin/emWin_header/WM.h	/^} WM_MOTION_INFO;$/;"	t	typeref:struct:__anon287
WM_MOTION_INIT	emwin/emWin_header/WM.h	296;"	d
WM_MOTION_MANAGE_BY_WINDOW	emwin/emWin_header/WM.h	305;"	d
WM_MOTION_MOVE	emwin/emWin_header/WM.h	297;"	d
WM_MOUSEOVER	emwin/emWin_header/WM.h	234;"	d
WM_MOUSEOVER_END	emwin/emWin_header/WM.h	235;"	d
WM_MOVE	emwin/emWin_header/WM.h	221;"	d
WM_MOVE_INFO	emwin/emWin_header/WM.h	/^} WM_MOVE_INFO;$/;"	t	typeref:struct:__anon290
WM_NOTIFICATION_CHILD_DELETED	emwin/emWin_header/WM.h	320;"	d
WM_NOTIFICATION_CLICKED	emwin/emWin_header/WM.h	314;"	d
WM_NOTIFICATION_GOT_FOCUS	emwin/emWin_header/WM.h	321;"	d
WM_NOTIFICATION_LOST_FOCUS	emwin/emWin_header/WM.h	322;"	d
WM_NOTIFICATION_MOVED_OUT	emwin/emWin_header/WM.h	316;"	d
WM_NOTIFICATION_RELEASED	emwin/emWin_header/WM.h	315;"	d
WM_NOTIFICATION_SCROLLBAR_ADDED	emwin/emWin_header/WM.h	319;"	d
WM_NOTIFICATION_SCROLL_CHANGED	emwin/emWin_header/WM.h	323;"	d
WM_NOTIFICATION_SEL_CHANGED	emwin/emWin_header/WM.h	317;"	d
WM_NOTIFICATION_USER	emwin/emWin_header/WM.h	326;"	d
WM_NOTIFICATION_VALUE_CHANGED	emwin/emWin_header/WM.h	318;"	d
WM_NOTIFICATION_WIDGET	emwin/emWin_header/WM.h	325;"	d
WM_NOTIFY_CHILD_HAS_FOCUS	emwin/emWin_header/WM.h	250;"	d
WM_NOTIFY_CHILD_HAS_FOCUS_INFO	emwin/emWin_header/WM_Intern.h	/^} WM_NOTIFY_CHILD_HAS_FOCUS_INFO;$/;"	t	typeref:struct:__anon366
WM_NOTIFY_CLIENTCHANGE	emwin/emWin_header/WM.h	259;"	d
WM_NOTIFY_ENABLE	emwin/emWin_header/WM.h	265;"	d
WM_NOTIFY_OWNER_KEY	emwin/emWin_header/WM.h	252;"	d
WM_NOTIFY_PARENT	emwin/emWin_header/WM.h	260;"	d
WM_NOTIFY_PARENT_REFLECTION	emwin/emWin_header/WM.h	261;"	d
WM_NOTIFY_VIS_CHANGED	emwin/emWin_header/WM.h	266;"	d
WM_Obj	emwin/emWin_header/WM.h	/^struct WM_Obj {$/;"	s
WM_Obj	emwin/emWin_header/WM.h	/^typedef struct WM_Obj     WM_Obj;$/;"	t	typeref:struct:WM_Obj
WM_PAINT	emwin/emWin_header/WM.h	231;"	d
WM_PID_STATE_CHANGED	emwin/emWin_header/WM.h	238;"	d
WM_PID_STATE_CHANGED_INFO	emwin/emWin_header/WM.h	/^} WM_PID_STATE_CHANGED_INFO;$/;"	t	typeref:struct:__anon286
WM_POST_BANDING	emwin/emWin_header/WM.h	281;"	d
WM_POST_PAINT	emwin/emWin_header/WM.h	274;"	d
WM_PRE_BANDING	emwin/emWin_header/WM.h	280;"	d
WM_PRE_PAINT	emwin/emWin_header/WM.h	273;"	d
WM_SCREENSIZE_CHANGED	emwin/emWin_header/WM.h	272;"	d
WM_SCROLL_STATE	emwin/emWin_header/WM.h	/^} WM_SCROLL_STATE;$/;"	t	typeref:struct:__anon284
WM_SET_CALLBACK	emwin/emWin_header/WM.h	284;"	d
WM_SET_FOCUS	emwin/emWin_header/WM.h	248;"	d
WM_SET_ID	emwin/emWin_header/WM.h	242;"	d
WM_SET_SCROLL_STATE	emwin/emWin_header/WM.h	257;"	d
WM_SF_ANCHOR_BOTTOM	emwin/emWin_header/WM_Intern.h	80;"	d
WM_SF_ANCHOR_LEFT	emwin/emWin_header/WM_Intern.h	81;"	d
WM_SF_ANCHOR_RIGHT	emwin/emWin_header/WM_Intern.h	79;"	d
WM_SF_ANCHOR_TOP	emwin/emWin_header/WM_Intern.h	82;"	d
WM_SF_CONST_OUTLINE	emwin/emWin_header/WM_Intern.h	86;"	d
WM_SF_DELETE	emwin/emWin_header/WM.h	379;"	d
WM_SF_DISABLED	emwin/emWin_header/WM_Intern.h	74;"	d
WM_SF_HASTRANS	emwin/emWin_header/WM_Intern.h	71;"	d
WM_SF_INVALID	emwin/emWin_header/WM_Intern.h	84;"	d
WM_SF_INVALID_DRAW	emwin/emWin_header/WM.h	378;"	d
WM_SF_ISVIS	emwin/emWin_header/WM_Intern.h	75;"	d
WM_SF_LATE_CLIP	emwin/emWin_header/WM_Intern.h	78;"	d
WM_SF_MEMDEV	emwin/emWin_header/WM_Intern.h	72;"	d
WM_SF_MEMDEV_ON_REDRAW	emwin/emWin_header/WM_Intern.h	73;"	d
WM_SF_STAYONTOP	emwin/emWin_header/WM_Intern.h	77;"	d
WM_SIZE	emwin/emWin_header/WM.h	223;"	d
WM_SUBORG	emwin/emWin_header/WM_GUI.h	74;"	d
WM_SUBORGX	emwin/emWin_header/WM_GUI.h	72;"	d
WM_SUBORGY	emwin/emWin_header/WM_GUI.h	73;"	d
WM_SUPPORT_CPP	emwin/emWin_header/WM.h	109;"	d
WM_SUPPORT_CPP	emwin/emWin_header/WM.h	111;"	d
WM_SUPPORT_DIAG	emwin/emWin_header/WM.h	72;"	d
WM_SUPPORT_DIAG	emwin/emWin_header/WM.h	74;"	d
WM_SUPPORT_NOTIFY_VIS_CHANGED	emwin/emWin_header/WM.h	104;"	d
WM_SUPPORT_STATIC_MEMDEV	emwin/emWin_header/WM.h	60;"	d
WM_SUPPORT_TOUCH	emwin/emWin_header/WM.h	94;"	d
WM_SUPPORT_TRANSPARENCY	emwin/emWin_header/WM.h	65;"	d
WM_SelWin	emwin/emWin_header/WM.h	772;"	d
WM_SetBkWindowColor	emwin/emWin_header/WM.h	781;"	d
WM_SetForegroundWindow	emwin/emWin_header/WM.h	775;"	d
WM_SetUserClipArea	emwin/emWin_header/WM.h	776;"	d
WM_ShowWin	emwin/emWin_header/WM.h	757;"	d
WM_Start	emwin/emWin_header/WM.h	779;"	d
WM_Stop	emwin/emWin_header/WM.h	780;"	d
WM_TIMER	emwin/emWin_header/WM.h	288;"	d
WM_TIMER_OBJ	emwin/emWin_header/WM.h	/^} WM_TIMER_OBJ;$/;"	t	typeref:struct:__anon292
WM_TOOLTIP_CI_BK	emwin/emWin_header/WM.h	569;"	d
WM_TOOLTIP_CI_FRAME	emwin/emWin_header/WM.h	570;"	d
WM_TOOLTIP_CI_TEXT	emwin/emWin_header/WM.h	571;"	d
WM_TOOLTIP_HANDLE	emwin/emWin_header/WM.h	/^typedef WM_HMEM WM_TOOLTIP_HANDLE;$/;"	t
WM_TOOLTIP_PI_FIRST	emwin/emWin_header/WM.h	565;"	d
WM_TOOLTIP_PI_NEXT	emwin/emWin_header/WM.h	567;"	d
WM_TOOLTIP_PI_SHOW	emwin/emWin_header/WM.h	566;"	d
WM_TOUCH	emwin/emWin_header/WM.h	227;"	d
WM_TOUCH_CHILD	emwin/emWin_header/WM.h	228;"	d
WM_UNATTACHED	emwin/emWin_header/WM.h	343;"	d
WM_UNLOCK	emwin/emWin_header/WM.h	120;"	d
WM_USER	emwin/emWin_header/WM.h	290;"	d
WM_USER_DATA	emwin/emWin_header/WM.h	283;"	d
WM_WIDGET	emwin/emWin_header/WM.h	289;"	d
WM_WIDGET_SET_EFFECT	emwin/emWin_header/WIDGET.h	222;"	d
WM_WINDOW_INFO	emwin/emWin_header/WM.h	/^struct WM_WINDOW_INFO {$/;"	s
WM_WINDOW_INFO	emwin/emWin_header/WM.h	/^typedef struct WM_WINDOW_INFO WM_WINDOW_INFO;$/;"	t	typeref:struct:WM_WINDOW_INFO
WM_WaitKey	emwin/emWin_header/WM.h	759;"	d
WM_ZOOM_INFO	emwin/emWin_header/WM.h	/^} WM_ZOOM_INFO;$/;"	t	typeref:struct:__anon288
WM__FirstWin	emwin/emWin_header/WM_Intern.h	/^GUI_EXTERN WM_HWIN WM__FirstWin;$/;"	v
WM__InvalidLayerMask	emwin/emWin_header/WM_Intern.h	/^  GUI_EXTERN U32                       WM__InvalidLayerMask;$/;"	v
WM__InvalidateDrawAndDescs	emwin/emWin_header/WM_Intern.h	236;"	d
WM__NumInvalidWindows	emwin/emWin_header/WM_Intern.h	/^GUI_EXTERN U16     WM__NumInvalidWindows;$/;"	v
WM__NumWindows	emwin/emWin_header/WM_Intern.h	/^GUI_EXTERN U16     WM__NumWindows;$/;"	v
WM__TOUCHED_LAYER	emwin/emWin_header/WM_Intern.h	155;"	d
WM__TOUCHED_LAYER	emwin/emWin_header/WM_Intern.h	157;"	d
WM__TouchedLayer	emwin/emWin_header/WM_Intern.h	/^  GUI_EXTERN unsigned                  WM__TouchedLayer;$/;"	v
WM__aBkColor	emwin/emWin_header/WM_Intern.h	/^GUI_EXTERN GUI_COLOR WM__aBkColor[GUI_NUM_LAYERS];$/;"	v
WM__ahDesktopWin	emwin/emWin_header/WM_Intern.h	/^GUI_EXTERN WM_HWIN   WM__ahDesktopWin[GUI_NUM_LAYERS];$/;"	v
WM__pFirstCriticalHandle	emwin/emWin_header/WM_Intern.h	/^GUI_EXTERN WM_CRITICAL_HANDLE * WM__pFirstCriticalHandle;$/;"	v
WM__pUserClipRect	emwin/emWin_header/GUI.h	/^    const GUI_RECT * WM__pUserClipRect;$/;"	m	struct:GUI_CONTEXT
WM_pfHandlePID	emwin/emWin_header/GUI_Private.h	/^GUI_EXTERN           WM_tfHandlePID * WM_pfHandlePID;$/;"	v
WM_tfForEach	emwin/emWin_header/WM.h	/^typedef void WM_tfForEach(WM_HWIN hWin, void * pData);$/;"	t
WM_tfHandlePID	emwin/emWin_header/GUI_Private.h	/^typedef int  WM_tfHandlePID(void);$/;"	t
WM_tfInvalidateDrawFunc	emwin/emWin_header/WM.h	/^typedef void (* WM_tfInvalidateDrawFunc)(WM_HWIN hWin);$/;"	t
WM_tfInvalidateParent	emwin/emWin_header/WM.h	/^typedef void (* WM_tfInvalidateParent)  (const GUI_RECT * pInvalidRect, WM_HWIN hParent, WM_HWIN hStop);$/;"	t
WM_tfPaint1Func	emwin/emWin_header/WM.h	/^typedef void (* WM_tfPaint1Func)        (WM_HWIN hWin);$/;"	t
WM_tfPollPID	emwin/emWin_header/WM.h	/^typedef void WM_tfPollPID(void);$/;"	t
WORK_SEC	source/common.h	39;"	d
WO_BITS	codec2/quantise.h	32;"	d
WO_DT_BITS	codec2/quantise.h	34;"	d
WO_E_BITS	codec2/quantise.h	51;"	d
WO_LEVELS	codec2/quantise.h	33;"	d
WRITE_DELAYED	lwip/src/api/api_msg.c	77;"	d	file:
WRITE_DELAYED	lwip/src/api/api_msg.c	80;"	d	file:
WRITE_DELAYED_PARAM	lwip/src/api/api_msg.c	78;"	d	file:
WRITE_DELAYED_PARAM	lwip/src/api/api_msg.c	81;"	d	file:
WRITE_MEM08P	emwin/emWin_header/GUIDRV_Lin_Private.h	129;"	d
WRITE_MEM16	emwin/emWin_header/GUIDRV_Lin_Private.h	111;"	d
WRITE_MEM16P	emwin/emWin_header/GUIDRV_Lin_Private.h	132;"	d
WRITE_MEM32	emwin/emWin_header/GUIDRV_Lin_Private.h	114;"	d
WRITE_MEM32P	emwin/emWin_header/GUIDRV_Lin_Private.h	135;"	d
WRTPRT	device/LPC54018.h	/^  __I  uint32_t WRTPRT;                            \/**< Write Protect register, offset: 0x54 *\/$/;"	m	struct:__anon177
WR_DATA	device/LPC54018.h	/^    __O  uint32_t WR_DATA;                           \/**< CRC data register, offset: 0x8 *\/$/;"	m	union:__anon143::__anon144
WWDT	device/LPC54018.h	15603;"	d
WWDT_BASE	device/LPC54018.h	15601;"	d
WWDT_BASE_ADDRS	device/LPC54018.h	15605;"	d
WWDT_BASE_PTRS	device/LPC54018.h	15607;"	d
WWDT_CLOCKS	drivers/fsl_clock.h	131;"	d
WWDT_FEED_FEED	device/LPC54018.h	15569;"	d
WWDT_FEED_FEED_MASK	device/LPC54018.h	15567;"	d
WWDT_FEED_FEED_SHIFT	device/LPC54018.h	15568;"	d
WWDT_IRQS	device/LPC54018.h	15609;"	d
WWDT_MOD_LOCK	device/LPC54018.h	15555;"	d
WWDT_MOD_LOCK_MASK	device/LPC54018.h	15553;"	d
WWDT_MOD_LOCK_SHIFT	device/LPC54018.h	15554;"	d
WWDT_MOD_WDEN	device/LPC54018.h	15532;"	d
WWDT_MOD_WDEN_MASK	device/LPC54018.h	15525;"	d
WWDT_MOD_WDEN_SHIFT	device/LPC54018.h	15526;"	d
WWDT_MOD_WDINT	device/LPC54018.h	15545;"	d
WWDT_MOD_WDINT_MASK	device/LPC54018.h	15543;"	d
WWDT_MOD_WDINT_SHIFT	device/LPC54018.h	15544;"	d
WWDT_MOD_WDPROTECT	device/LPC54018.h	15552;"	d
WWDT_MOD_WDPROTECT_MASK	device/LPC54018.h	15546;"	d
WWDT_MOD_WDPROTECT_SHIFT	device/LPC54018.h	15547;"	d
WWDT_MOD_WDRESET	device/LPC54018.h	15539;"	d
WWDT_MOD_WDRESET_MASK	device/LPC54018.h	15533;"	d
WWDT_MOD_WDRESET_SHIFT	device/LPC54018.h	15534;"	d
WWDT_MOD_WDTOF	device/LPC54018.h	15542;"	d
WWDT_MOD_WDTOF_MASK	device/LPC54018.h	15540;"	d
WWDT_MOD_WDTOF_SHIFT	device/LPC54018.h	15541;"	d
WWDT_RSTS	drivers/fsl_reset.h	227;"	d
WWDT_TC_COUNT	device/LPC54018.h	15562;"	d
WWDT_TC_COUNT_MASK	device/LPC54018.h	15560;"	d
WWDT_TC_COUNT_SHIFT	device/LPC54018.h	15561;"	d
WWDT_TV_COUNT	device/LPC54018.h	15576;"	d
WWDT_TV_COUNT_MASK	device/LPC54018.h	15574;"	d
WWDT_TV_COUNT_SHIFT	device/LPC54018.h	15575;"	d
WWDT_Type	device/LPC54018.h	/^} WWDT_Type;$/;"	t	typeref:struct:__anon192
WWDT_WARNINT_WARNINT	device/LPC54018.h	15583;"	d
WWDT_WARNINT_WARNINT_MASK	device/LPC54018.h	15581;"	d
WWDT_WARNINT_WARNINT_SHIFT	device/LPC54018.h	15582;"	d
WWDT_WINDOW_WINDOW	device/LPC54018.h	15590;"	d
WWDT_WINDOW_WINDOW_MASK	device/LPC54018.h	15588;"	d
WWDT_WINDOW_WINDOW_SHIFT	device/LPC54018.h	15589;"	d
WaitUntilVNDP	emwin/emWin_header/GUIDRV_S1D13781.h	/^  int WaitUntilVNDP;$/;"	m	struct:__anon282
WaitUntilVNDP	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int WaitUntilVNDP;$/;"	m	struct:DRIVER_CONTEXT
Widget	emwin/emWin_header/BUTTON_Private.h	/^  WIDGET Widget;$/;"	m	struct:__anon402
Widget	emwin/emWin_header/CHECKBOX_Private.h	/^  WIDGET              Widget;$/;"	m	struct:__anon206
Widget	emwin/emWin_header/DROPDOWN_Private.h	/^  WIDGET  Widget;$/;"	m	struct:__anon360
Widget	emwin/emWin_header/EDIT_Private.h	/^  WIDGET               Widget;$/;"	m	struct:EDIT_Obj_struct
Widget	emwin/emWin_header/FRAMEWIN_Private.h	/^  WIDGET                  Widget;$/;"	m	struct:__anon280
Widget	emwin/emWin_header/GRAPH_Private.h	/^  WIDGET          Widget;$/;"	m	struct:GRAPH_OBJ
Widget	emwin/emWin_header/HEADER_Private.h	/^  WIDGET              Widget;$/;"	m	struct:__anon276
Widget	emwin/emWin_header/ICONVIEW_Private.h	/^  WIDGET                  Widget;$/;"	m	struct:__anon219
Widget	emwin/emWin_header/IMAGE_Private.h	/^  WIDGET              Widget;$/;"	m	struct:__anon315
Widget	emwin/emWin_header/KNOB_Private.h	/^  WIDGET Widget;$/;"	m	struct:__anon327
Widget	emwin/emWin_header/LISTBOX_Private.h	/^  WIDGET Widget;$/;"	m	struct:__anon313
Widget	emwin/emWin_header/LISTVIEW_Private.h	/^  WIDGET                       Widget;$/;"	m	struct:LISTVIEW_Obj
Widget	emwin/emWin_header/LISTWHEEL_Private.h	/^  WIDGET                  Widget;$/;"	m	struct:__anon353
Widget	emwin/emWin_header/MENU_Private.h	/^  WIDGET              Widget;$/;"	m	struct:__anon319
Widget	emwin/emWin_header/MULTIPAGE_Private.h	/^  WIDGET                 Widget;$/;"	m	struct:MULTIPAGE_Obj
Widget	emwin/emWin_header/PROGBAR_Private.h	/^  WIDGET Widget;$/;"	m	struct:__anon424
Widget	emwin/emWin_header/RADIO_Private.h	/^  WIDGET Widget;$/;"	m	struct:__anon343
Widget	emwin/emWin_header/SCROLLBAR_Private.h	/^  WIDGET Widget;$/;"	m	struct:SCROLLBAR_OBJ
Widget	emwin/emWin_header/SLIDER_Private.h	/^  WIDGET              Widget;$/;"	m	struct:__anon378
Widget	emwin/emWin_header/SPINBOX_Private.h	/^  WIDGET              Widget;$/;"	m	struct:__anon322
Widget	emwin/emWin_header/SWIPELIST_Private.h	/^  WIDGET                  Widget;$/;"	m	struct:__anon238
Widget	emwin/emWin_header/TEXT_Private.h	/^  WIDGET Widget;$/;"	m	struct:__anon298
Widget	emwin/emWin_header/TREEVIEW_Private.h	/^  WIDGET                  Widget;$/;"	m	struct:__anon227
Widget	emwin/emWin_header/WINDOW_Private.h	/^  WIDGET Widget;$/;"	m	struct:__anon310
Width	emwin/emWin_header/GUI.h	/^  int Width;    \/\/ Number of 'Modules'$/;"	m	struct:__anon396
Width	emwin/emWin_header/HEADER_Private.h	/^  int     Width;$/;"	m	struct:__anon273
Width	emwin/emWin_header/MENU_Private.h	/^  int                 Width;$/;"	m	struct:__anon319
Width	emwin/emWin_header/SLIDER.h	/^  int Width;$/;"	m	struct:__anon305
Width	emwin/emWin_header/SLIDER_Private.h	/^  I16                 Width;$/;"	m	struct:__anon378
Win	emwin/emWin_header/WIDGET.h	/^  WM_Obj      Win;$/;"	m	struct:__anon212
WinArray	emwin/emWin_header/SWIPELIST_Private.h	/^  GUI_ARRAY      WinArray;$/;"	m	struct:__anon236
Wo	codec2/defines.h	/^    float Wo;		  \/* fundamental frequency estimate in radians  *\/$/;"	m	struct:__anon135
Wo_left	codec2/codec2_internal.h	/^    float          Wo_left;$/;"	m	struct:CODEC2
Wo_max	codec2/defines.h	/^    float Wo_max;  $/;"	m	struct:__anon134
Wo_min	codec2/defines.h	/^    float Wo_min;        $/;"	m	struct:__anon134
WordSize	codec2/pack.c	/^static const unsigned int	WordSize = 8;$/;"	v	file:
WrapMode	emwin/emWin_header/ICONVIEW_Private.h	/^  GUI_WRAPMODE     WrapMode;$/;"	m	struct:__anon218
WrapMode	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_WRAPMODE                 WrapMode;$/;"	m	struct:__anon331
WrapMode	emwin/emWin_header/TEXT_Private.h	/^  GUI_WRAPMODE WrapMode;$/;"	m	struct:__anon297
WriteBufferSize	emwin/emWin_header/GUIDRV_S1D13748.h	/^  int WriteBufferSize;$/;"	m	struct:__anon375
WriteBufferSize	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int WriteBufferSize;$/;"	m	struct:DRIVER_CONTEXT
WriteBufferSize	emwin/emWin_header/GUIDRV_S1D13781.h	/^  int WriteBufferSize;$/;"	m	struct:__anon282
WriteBufferSize	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int WriteBufferSize;$/;"	m	struct:DRIVER_CONTEXT
WriteBufferSizeNew	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int WriteBufferSizeNew;$/;"	m	struct:DRIVER_CONTEXT
X16_F	lwip/src/include/lwip/arch.h	159;"	d
X16_F	source/lwipopts.h	265;"	d
X32_F	lwip/src/include/lwip/arch.h	168;"	d
X32_F	source/lwipopts.h	268;"	d
X8_F	lwip/src/include/lwip/arch.h	150;"	d
X8_F	source/lwipopts.h	262;"	d
XDist	emwin/emWin_header/GUI_Type.h	/^  U16 XDist;        \/* Number of pixels for increment cursor in X *\/$/;"	m	struct:__anon264
XDist	emwin/emWin_header/GUI_Type.h	/^  U16 XDist;        \/* Number of pixels for increment cursor in X *\/$/;"	m	struct:__anon265
XDist	emwin/emWin_header/GUI_Type.h	/^  U8                         XDist;$/;"	m	struct:__anon257
XDist	emwin/emWin_header/GUI_Type.h	/^  U8 XDist;$/;"	m	struct:__anon255
XDist	emwin/emWin_header/GUI_Type.h	/^  U8 XDist;$/;"	m	struct:__anon256
XFERCFG	device/LPC54018.h	/^    __IO uint32_t XFERCFG;                           \/**< Transfer configuration register for DMA channel ., array offset: 0x408, array step: 0x10 *\/$/;"	m	struct:__anon146::__anon148
XIDAM	device/LPC54018.h	/^  __IO uint32_t XIDAM;                             \/**< Extended ID AND Mask, offset: 0x90 *\/$/;"	m	struct:__anon142
XIDFC	device/LPC54018.h	/^  __IO uint32_t XIDFC;                             \/**< Extended ID Filter Configuration, offset: 0x88 *\/$/;"	m	struct:__anon142
XMag	emwin/emWin_header/GUI_Type.h	/^  U8 XMag;$/;"	m	struct:GUI_FONT
XOff	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int XOff;$/;"	m	struct:DRIVER_CONTEXT
XOff	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int XOff;$/;"	m	struct:DRIVER_CONTEXT
XOff	emwin/emWin_header/GUI_Type.h	/^  I16 XOff;         \/* Display offset of bitmap data in X *\/$/;"	m	struct:__anon265
XOff	emwin/emWin_header/PROGBAR_Private.h	/^  I16 XOff, YOff;$/;"	m	struct:__anon424
XPos	emwin/emWin_header/GUI_GIF_Private.h	/^  int XPos;$/;"	m	struct:__anon324
XPos	emwin/emWin_header/GUI_Type.h	/^  I8 XPos;$/;"	m	struct:__anon256
XSize	emwin/emWin_header/GUI.h	/^  int XSize;$/;"	m	struct:__anon387
XSize	emwin/emWin_header/GUI_GIF_Private.h	/^  int XSize;$/;"	m	struct:__anon324
XSize	emwin/emWin_header/GUI_Private.h	/^  I16P                   x0, y0, XSize, YSize;$/;"	m	struct:__anon295
XSize	emwin/emWin_header/GUI_Private.h	/^  I16P x0, y0, XSize, YSize;$/;"	m	struct:GUI_Usage
XSize	emwin/emWin_header/GUI_Type.h	/^  U16 XSize;        \/* Size of bitmap data in X *\/$/;"	m	struct:__anon264
XSize	emwin/emWin_header/GUI_Type.h	/^  U16 XSize;        \/* Size of bitmap data in X *\/$/;"	m	struct:__anon265
XSize	emwin/emWin_header/GUI_Type.h	/^  U16 XSize;$/;"	m	struct:__anon244
XSize	emwin/emWin_header/GUI_Type.h	/^  U16P XSize;$/;"	m	struct:__anon243
XSize	emwin/emWin_header/GUI_Type.h	/^  U8                         XSize;$/;"	m	struct:__anon257
XSize	emwin/emWin_header/GUI_Type.h	/^  U8 XSize;$/;"	m	struct:__anon255
XSize	emwin/emWin_header/GUI_Type.h	/^  U8 XSize;$/;"	m	struct:__anon256
XSize	emwin/emWin_header/GUI_Type.h	/^  int XSize;$/;"	m	struct:__anon246
XSizeCursor	emwin/emWin_header/EDIT_Private.h	/^  U8                   XSizeCursor;     \/\/ Size of cursor when working in insert mode$/;"	m	struct:EDIT_Obj_struct
XXXXXXXX	emwin/emWin_header/GUI.h	2487;"	d
XXXXXXX_	emwin/emWin_header/GUI.h	2486;"	d
XXXXXX_X	emwin/emWin_header/GUI.h	2485;"	d
XXXXXX__	emwin/emWin_header/GUI.h	2484;"	d
XXXXX_XX	emwin/emWin_header/GUI.h	2483;"	d
XXXXX_X_	emwin/emWin_header/GUI.h	2482;"	d
XXXXX__X	emwin/emWin_header/GUI.h	2481;"	d
XXXXX___	emwin/emWin_header/GUI.h	2480;"	d
XXXX_XXX	emwin/emWin_header/GUI.h	2479;"	d
XXXX_XX_	emwin/emWin_header/GUI.h	2478;"	d
XXXX_X_X	emwin/emWin_header/GUI.h	2477;"	d
XXXX_X__	emwin/emWin_header/GUI.h	2476;"	d
XXXX__XX	emwin/emWin_header/GUI.h	2475;"	d
XXXX__X_	emwin/emWin_header/GUI.h	2474;"	d
XXXX___X	emwin/emWin_header/GUI.h	2473;"	d
XXXX____	emwin/emWin_header/GUI.h	2472;"	d
XXX_XXXX	emwin/emWin_header/GUI.h	2471;"	d
XXX_XXX_	emwin/emWin_header/GUI.h	2470;"	d
XXX_XX_X	emwin/emWin_header/GUI.h	2469;"	d
XXX_XX__	emwin/emWin_header/GUI.h	2468;"	d
XXX_X_XX	emwin/emWin_header/GUI.h	2467;"	d
XXX_X_X_	emwin/emWin_header/GUI.h	2466;"	d
XXX_X__X	emwin/emWin_header/GUI.h	2465;"	d
XXX_X___	emwin/emWin_header/GUI.h	2464;"	d
XXX__XXX	emwin/emWin_header/GUI.h	2463;"	d
XXX__XX_	emwin/emWin_header/GUI.h	2462;"	d
XXX__X_X	emwin/emWin_header/GUI.h	2461;"	d
XXX__X__	emwin/emWin_header/GUI.h	2460;"	d
XXX___XX	emwin/emWin_header/GUI.h	2459;"	d
XXX___X_	emwin/emWin_header/GUI.h	2458;"	d
XXX____X	emwin/emWin_header/GUI.h	2457;"	d
XXX_____	emwin/emWin_header/GUI.h	2456;"	d
XX_XXXXX	emwin/emWin_header/GUI.h	2455;"	d
XX_XXXX_	emwin/emWin_header/GUI.h	2454;"	d
XX_XXX_X	emwin/emWin_header/GUI.h	2453;"	d
XX_XXX__	emwin/emWin_header/GUI.h	2452;"	d
XX_XX_XX	emwin/emWin_header/GUI.h	2451;"	d
XX_XX_X_	emwin/emWin_header/GUI.h	2450;"	d
XX_XX__X	emwin/emWin_header/GUI.h	2449;"	d
XX_XX___	emwin/emWin_header/GUI.h	2448;"	d
XX_X_XXX	emwin/emWin_header/GUI.h	2447;"	d
XX_X_XX_	emwin/emWin_header/GUI.h	2446;"	d
XX_X_X_X	emwin/emWin_header/GUI.h	2445;"	d
XX_X_X__	emwin/emWin_header/GUI.h	2444;"	d
XX_X__XX	emwin/emWin_header/GUI.h	2443;"	d
XX_X__X_	emwin/emWin_header/GUI.h	2442;"	d
XX_X___X	emwin/emWin_header/GUI.h	2441;"	d
XX_X____	emwin/emWin_header/GUI.h	2440;"	d
XX__XXXX	emwin/emWin_header/GUI.h	2439;"	d
XX__XXX_	emwin/emWin_header/GUI.h	2438;"	d
XX__XX_X	emwin/emWin_header/GUI.h	2437;"	d
XX__XX__	emwin/emWin_header/GUI.h	2436;"	d
XX__X_XX	emwin/emWin_header/GUI.h	2435;"	d
XX__X_X_	emwin/emWin_header/GUI.h	2434;"	d
XX__X__X	emwin/emWin_header/GUI.h	2433;"	d
XX__X___	emwin/emWin_header/GUI.h	2432;"	d
XX___XXX	emwin/emWin_header/GUI.h	2431;"	d
XX___XX_	emwin/emWin_header/GUI.h	2430;"	d
XX___X_X	emwin/emWin_header/GUI.h	2429;"	d
XX___X__	emwin/emWin_header/GUI.h	2428;"	d
XX____XX	emwin/emWin_header/GUI.h	2427;"	d
XX____X_	emwin/emWin_header/GUI.h	2426;"	d
XX_____X	emwin/emWin_header/GUI.h	2425;"	d
XX______	emwin/emWin_header/GUI.h	2424;"	d
XY2PTR	emwin/emWin_header/GUI_SetOrientationCX.h	53;"	d
X_XXXXXX	emwin/emWin_header/GUI.h	2423;"	d
X_XXXXX_	emwin/emWin_header/GUI.h	2422;"	d
X_XXXX_X	emwin/emWin_header/GUI.h	2421;"	d
X_XXXX__	emwin/emWin_header/GUI.h	2420;"	d
X_XXX_XX	emwin/emWin_header/GUI.h	2419;"	d
X_XXX_X_	emwin/emWin_header/GUI.h	2418;"	d
X_XXX__X	emwin/emWin_header/GUI.h	2417;"	d
X_XXX___	emwin/emWin_header/GUI.h	2416;"	d
X_XX_XXX	emwin/emWin_header/GUI.h	2415;"	d
X_XX_XX_	emwin/emWin_header/GUI.h	2414;"	d
X_XX_X_X	emwin/emWin_header/GUI.h	2413;"	d
X_XX_X__	emwin/emWin_header/GUI.h	2412;"	d
X_XX__XX	emwin/emWin_header/GUI.h	2411;"	d
X_XX__X_	emwin/emWin_header/GUI.h	2410;"	d
X_XX___X	emwin/emWin_header/GUI.h	2409;"	d
X_XX____	emwin/emWin_header/GUI.h	2408;"	d
X_X_XXXX	emwin/emWin_header/GUI.h	2407;"	d
X_X_XXX_	emwin/emWin_header/GUI.h	2406;"	d
X_X_XX_X	emwin/emWin_header/GUI.h	2405;"	d
X_X_XX__	emwin/emWin_header/GUI.h	2404;"	d
X_X_X_XX	emwin/emWin_header/GUI.h	2403;"	d
X_X_X_X_	emwin/emWin_header/GUI.h	2402;"	d
X_X_X__X	emwin/emWin_header/GUI.h	2401;"	d
X_X_X___	emwin/emWin_header/GUI.h	2400;"	d
X_X__XXX	emwin/emWin_header/GUI.h	2399;"	d
X_X__XX_	emwin/emWin_header/GUI.h	2398;"	d
X_X__X_X	emwin/emWin_header/GUI.h	2397;"	d
X_X__X__	emwin/emWin_header/GUI.h	2396;"	d
X_X___XX	emwin/emWin_header/GUI.h	2395;"	d
X_X___X_	emwin/emWin_header/GUI.h	2394;"	d
X_X____X	emwin/emWin_header/GUI.h	2393;"	d
X_X_____	emwin/emWin_header/GUI.h	2392;"	d
X__XXXXX	emwin/emWin_header/GUI.h	2391;"	d
X__XXXX_	emwin/emWin_header/GUI.h	2390;"	d
X__XXX_X	emwin/emWin_header/GUI.h	2389;"	d
X__XXX__	emwin/emWin_header/GUI.h	2388;"	d
X__XX_XX	emwin/emWin_header/GUI.h	2387;"	d
X__XX_X_	emwin/emWin_header/GUI.h	2386;"	d
X__XX__X	emwin/emWin_header/GUI.h	2385;"	d
X__XX___	emwin/emWin_header/GUI.h	2384;"	d
X__X_XXX	emwin/emWin_header/GUI.h	2383;"	d
X__X_XX_	emwin/emWin_header/GUI.h	2382;"	d
X__X_X_X	emwin/emWin_header/GUI.h	2381;"	d
X__X_X__	emwin/emWin_header/GUI.h	2380;"	d
X__X__XX	emwin/emWin_header/GUI.h	2379;"	d
X__X__X_	emwin/emWin_header/GUI.h	2378;"	d
X__X___X	emwin/emWin_header/GUI.h	2377;"	d
X__X____	emwin/emWin_header/GUI.h	2376;"	d
X___XXXX	emwin/emWin_header/GUI.h	2375;"	d
X___XXX_	emwin/emWin_header/GUI.h	2374;"	d
X___XX_X	emwin/emWin_header/GUI.h	2373;"	d
X___XX__	emwin/emWin_header/GUI.h	2372;"	d
X___X_XX	emwin/emWin_header/GUI.h	2371;"	d
X___X_X_	emwin/emWin_header/GUI.h	2370;"	d
X___X__X	emwin/emWin_header/GUI.h	2369;"	d
X___X___	emwin/emWin_header/GUI.h	2368;"	d
X____XXX	emwin/emWin_header/GUI.h	2367;"	d
X____XX_	emwin/emWin_header/GUI.h	2366;"	d
X____X_X	emwin/emWin_header/GUI.h	2365;"	d
X____X__	emwin/emWin_header/GUI.h	2364;"	d
X_____XX	emwin/emWin_header/GUI.h	2363;"	d
X_____X_	emwin/emWin_header/GUI.h	2362;"	d
X______X	emwin/emWin_header/GUI.h	2361;"	d
X_______	emwin/emWin_header/GUI.h	2360;"	d
XferToFifoWR	drivers/fsl_spi_dma.c	/^static void XferToFifoWR(spi_transfer_t *xfer, uint32_t *fifowr)$/;"	f	file:
YDist	emwin/emWin_header/GUI_Type.h	/^  U16 YDist;        \/* Space of font Y *\/$/;"	m	struct:__anon262
YDist	emwin/emWin_header/GUI_Type.h	/^  U8 YDist;$/;"	m	struct:GUI_FONT
YH1V1	emwin/emWin_header/GUI_JPEG_Private.h	73;"	d
YH1V2	emwin/emWin_header/GUI_JPEG_Private.h	75;"	d
YH2V1	emwin/emWin_header/GUI_JPEG_Private.h	74;"	d
YH2V2	emwin/emWin_header/GUI_JPEG_Private.h	76;"	d
YMag	emwin/emWin_header/GUI_Type.h	/^  U8 YMag;$/;"	m	struct:GUI_FONT
YOff	emwin/emWin_header/GUI_Type.h	/^  I16 YOff;         \/* Display offset of bitmap data in Y *\/$/;"	m	struct:__anon265
YOff	emwin/emWin_header/PROGBAR_Private.h	/^  I16 XOff, YOff;$/;"	m	struct:__anon424
YPos	emwin/emWin_header/GUI_GIF_Private.h	/^  int YPos;$/;"	m	struct:__anon324
YPos	emwin/emWin_header/GUI_Type.h	/^  I8 YPos;$/;"	m	struct:__anon256
YSize	emwin/emWin_header/GUI.h	/^  int YSize;$/;"	m	struct:__anon387
YSize	emwin/emWin_header/GUI_GIF_Private.h	/^  int YSize;$/;"	m	struct:__anon324
YSize	emwin/emWin_header/GUI_Private.h	/^  I16P                   x0, y0, XSize, YSize;$/;"	m	struct:__anon295
YSize	emwin/emWin_header/GUI_Private.h	/^  I16P x0, y0, XSize, YSize;$/;"	m	struct:GUI_Usage
YSize	emwin/emWin_header/GUI_Type.h	/^  U16 YSize;        \/* Height of font *\/$/;"	m	struct:__anon262
YSize	emwin/emWin_header/GUI_Type.h	/^  U16 YSize;        \/* Size of bitmap data in X *\/$/;"	m	struct:__anon265
YSize	emwin/emWin_header/GUI_Type.h	/^  U16 YSize;$/;"	m	struct:__anon244
YSize	emwin/emWin_header/GUI_Type.h	/^  U16P YSize;$/;"	m	struct:__anon243
YSize	emwin/emWin_header/GUI_Type.h	/^  U8 YSize;$/;"	m	struct:GUI_FONT
YSize	emwin/emWin_header/GUI_Type.h	/^  U8 YSize;$/;"	m	struct:__anon256
YSize	emwin/emWin_header/GUI_Type.h	/^  int YSize;$/;"	m	struct:__anon246
Year	emwin/emWin_header/CALENDAR.h	/^  int Year;$/;"	m	struct:__anon240
Z	CMSIS/core_armv8mbl.h	/^    uint32_t Z:1;                        \/*!< bit:     30  Zero condition code flag *\/$/;"	m	struct:__anon113::__anon114
Z	CMSIS/core_armv8mbl.h	/^    uint32_t Z:1;                        \/*!< bit:     30  Zero condition code flag *\/$/;"	m	struct:__anon117::__anon118
Z	CMSIS/core_armv8mml.h	/^    uint32_t Z:1;                        \/*!< bit:     30  Zero condition code flag *\/$/;"	m	struct:__anon13::__anon14
Z	CMSIS/core_armv8mml.h	/^    uint32_t Z:1;                        \/*!< bit:     30  Zero condition code flag *\/$/;"	m	struct:__anon9::__anon10
Z	CMSIS/core_cm4.h	/^    uint32_t Z:1;                        \/*!< bit:     30  Zero condition code flag *\/$/;"	m	struct:__anon31::__anon32
Z	CMSIS/core_cm4.h	/^    uint32_t Z:1;                        \/*!< bit:     30  Zero condition code flag *\/$/;"	m	struct:__anon35::__anon36
ZEPIF_DEFAULT_UDP_PORT	lwip/src/include/netif/zepif.h	54;"	d
ZEPIF_LOOPBACK	lwip/src/netif/zepif.c	61;"	d	file:
ZEP_MAX_DATA_LEN	lwip/src/netif/zepif.c	64;"	d	file:
ZEROPAD	source/common.c	15;"	d	file:
_ARM_COMMON_TABLES_H	CMSIS/arm_common_tables.h	30;"	d
_ARM_CONST_STRUCTS_H	CMSIS/arm_const_structs.h	31;"	d
_ARM_DRIVER_I2C	CMSIS_driver/Driver_I2C.h	/^typedef struct _ARM_DRIVER_I2C {$/;"	s
_ARM_DRIVER_SPI	CMSIS_driver/Driver_SPI.h	/^typedef struct _ARM_DRIVER_SPI {$/;"	s
_ARM_DRIVER_VERSION	CMSIS_driver/Driver_Common.h	/^typedef struct _ARM_DRIVER_VERSION {$/;"	s
_ARM_I2C_CAPABILITIES	CMSIS_driver/Driver_I2C.h	/^typedef struct _ARM_I2C_CAPABILITIES {$/;"	s
_ARM_I2C_STATUS	CMSIS_driver/Driver_I2C.h	/^typedef volatile struct _ARM_I2C_STATUS {$/;"	s
_ARM_MATH_H	CMSIS/arm_math.h	290;"	d
_ARM_POWER_STATE	CMSIS_driver/Driver_Common.h	/^typedef enum _ARM_POWER_STATE {$/;"	g
_ARM_SPI_CAPABILITIES	CMSIS_driver/Driver_SPI.h	/^typedef struct _ARM_SPI_CAPABILITIES {$/;"	s
_ARM_SPI_STATUS	CMSIS_driver/Driver_SPI.h	/^typedef volatile struct _ARM_SPI_STATUS {$/;"	s
_BIT_SHIFT	CMSIS/core_armv8mbl.h	1271;"	d
_BOARD_H_	board/board.h	11;"	d
_CLOCK_CONFIG_H_	board/clock_config.h	15;"	d
_CopyBuffer	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _CopyBuffer(GUI_DEVICE * pDevice, int IndexSrc, int IndexDst) {$/;"	f
_DrawBitLine16BPP	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawBitLine16BPP(GUI_DEVICE * pDevice, int x, int y, U16 const * p, int xsize) {$/;"	f
_DrawBitLine1BPP	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawBitLine1BPP(GUI_DEVICE * pDevice, unsigned x, unsigned y, U8 const * p, int Diff, int xsize, const LCD_PIXELINDEX * pTrans) {$/;"	f
_DrawBitLine2BPP	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawBitLine2BPP(GUI_DEVICE * pDevice, int x, int y, U8 const * p, int Diff, int xsize, const LCD_PIXELINDEX * pTrans) {$/;"	f
_DrawBitLine32BPP	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawBitLine32BPP(GUI_DEVICE * pDevice, int x, int y, U32 const * p, int xsize) {$/;"	f
_DrawBitLine4BPP	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawBitLine4BPP(GUI_DEVICE * pDevice, int x, int y, U8 const * p, int Diff, int xsize, const LCD_PIXELINDEX * pTrans) {$/;"	f
_DrawBitLine8BPP	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawBitLine8BPP(GUI_DEVICE * pDevice, int x, int y, U8 const * p, int xsize, const LCD_PIXELINDEX * pTrans) {$/;"	f
_DrawBitmap_CX	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawBitmap_CX(GUI_DEVICE * pDevice, int x0, int y0,$/;"	f
_DrawHLine_CX	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawHLine_CX(GUI_DEVICE * pDevice, int x0, int y, int x1) {$/;"	f
_DrawVLine_CX	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _DrawVLine_CX(GUI_DEVICE * pDevice, int x, int y0, int y1) {$/;"	f
_EMWIN_SUPPORT_H_	emwin/emwin_support.h	10;"	d
_FLD2VAL	CMSIS/core_armv8mbl.h	1154;"	d
_FLD2VAL	CMSIS/core_armv8mml.h	2014;"	d
_FLD2VAL	CMSIS/core_cm4.h	1538;"	d
_FSL_CLOCK_H_	drivers/fsl_clock.h	11;"	d
_FSL_CODEC_ADAPTER_H_	codec/fsl_codec_adapter.h	10;"	d
_FSL_CODEC_COMMON_H_	codec/fsl_codec_common.h	10;"	d
_FSL_CODEC_I2C_H_	codec/fsl_codec_i2c.h	10;"	d
_FSL_COMMON_H_	drivers/fsl_common.h	10;"	d
_FSL_CTIMER_H_	drivers/fsl_ctimer.h	9;"	d
_FSL_DEBUGCONSOLE_H_	utilities/fsl_debug_console.h	23;"	d
_FSL_DEBUG_CONSOLE_CONF_H_	utilities/fsl_debug_console_conf.h	9;"	d
_FSL_DMA_H_	drivers/fsl_dma.h	10;"	d
_FSL_DMIC_DMA_H_	drivers/fsl_dmic_dma.h	9;"	d
_FSL_DMIC_H_	drivers/fsl_dmic.h	10;"	d
_FSL_EMC_H_	drivers/fsl_emc.h	9;"	d
_FSL_ENET_H_	drivers/fsl_enet.h	9;"	d
_FSL_FLEXCOMM_H_	drivers/fsl_flexcomm.h	9;"	d
_FSL_I2C_CMSIS_H_	drivers/fsl_i2c_cmsis.h	22;"	d
_FSL_I2C_DMA_H_	drivers/fsl_i2c_dma.h	9;"	d
_FSL_I2C_H_	drivers/fsl_i2c.h	9;"	d
_FSL_I2S_DMA_H_	drivers/fsl_i2s_dma.h	9;"	d
_FSL_I2S_H_	drivers/fsl_i2s.h	9;"	d
_FSL_INPUTMUX_CONNECTIONS_	drivers/fsl_inputmux_connections.h	11;"	d
_FSL_INPUTMUX_H_	drivers/fsl_inputmux.h	10;"	d
_FSL_IOCON_H_	drivers/fsl_iocon.h	10;"	d
_FSL_PHY_H_	board/fsl_phy.h	9;"	d
_FSL_PINT_H_	drivers/fsl_pint.h	10;"	d
_FSL_POWER_H_	drivers/fsl_power.h	10;"	d
_FSL_RESET_H_	drivers/fsl_reset.h	11;"	d
_FSL_RNG_DRIVER_H_	drivers/fsl_rng.h	9;"	d
_FSL_SCTIMER_H_	drivers/fsl_sctimer.h	9;"	d
_FSL_SHA_H_	drivers/fsl_sha.h	9;"	d
_FSL_SPI_CMSIS_H_	drivers/fsl_spi_cmsis.h	22;"	d
_FSL_SPI_DMA_H_	drivers/fsl_spi_dma.h	9;"	d
_FSL_SPI_H_	drivers/fsl_spi.h	9;"	d
_FSL_STR_H	utilities/fsl_str.h	11;"	d
_FSL_USART_H_	drivers/fsl_usart.h	9;"	d
_FSL_WM8904_H_	codec/fsl_wm8904.h	10;"	d
_FillRectOpt16	emwin/emWin_header/GUIDRV_Lin_Opt_16.h	/^static void _FillRectOpt16(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1) {$/;"	f
_FillRectOpt24	emwin/emWin_header/GUIDRV_Lin_Opt_24.h	/^static void _FillRectOpt24(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1) {$/;"	f
_FillRectOpt32	emwin/emWin_header/GUIDRV_Lin_Opt_32.h	/^static void _FillRectOpt32(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1) {$/;"	f
_FillRectOpt8	emwin/emWin_header/GUIDRV_Lin_Opt_8.h	/^static void _FillRectOpt8(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1) {$/;"	f
_FillRect_CX	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _FillRect_CX(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1) {$/;"	f
_GENERIC_LIST_H_	component/lists/generic_list.h	10;"	d
_GetPixelIndex_CX	emwin/emWin_header/GUI_SetOrientationCX.h	/^static LCD_PIXELINDEX _GetPixelIndex_CX(GUI_DEVICE * pDevice, int x, int y) {$/;"	f
_GetPos	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _GetPos(GUI_DEVICE * pDevice, int * pxPos, int * pyPos) {$/;"	f
_GetRect	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _GetRect(GUI_DEVICE * pDevice, LCD_RECT * pRect) {$/;"	f
_IO	lwip/src/include/lwip/sockets.h	410;"	d
_IOR	lwip/src/include/lwip/sockets.h	412;"	d
_IOW	lwip/src/include/lwip/sockets.h	414;"	d
_IP_IDX	CMSIS/core_armv8mbl.h	1273;"	d
_Init	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static int  _Init(GUI_DEVICE * pDevice) {$/;"	f
_InitOnce	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static int _InitOnce(GUI_DEVICE * pDevice) {$/;"	f
_LPC54018_FEATURES_H_	device/LPC54018_features.h	33;"	d
_LPC54018_H_	device/LPC54018.h	51;"	d
_LPC_GPIO_H_	drivers/fsl_gpio.h	10;"	d
_MYTYPEDEF_H_	radio/MyTypeDef.h	9;"	d
_Off	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _Off (GUI_DEVICE * pDevice) {$/;"	f
_On	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _On (GUI_DEVICE * pDevice) {$/;"	f
_PIN_MUX_H_	board/pin_mux.h	11;"	d
_SHP_IDX	CMSIS/core_armv8mbl.h	1272;"	d
_SIMD32_OFFSET	CMSIS/arm_math.h	487;"	d
_SYSCON_RSTn	drivers/fsl_reset.h	/^typedef enum _SYSCON_RSTn$/;"	g
_SYSTEM_LPC54018_H_	device/system_LPC54018.h	54;"	d
_SetAlpha	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetAlpha(GUI_DEVICE * pDevice, int Alpha) {$/;"	f
_SetAlphaMode	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetAlphaMode(GUI_DEVICE * pDevice, int AlphaMode) {$/;"	f
_SetChroma	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetChroma(GUI_DEVICE * pDevice, LCD_COLOR ChromaMin, LCD_COLOR ChromaMax) {$/;"	f
_SetChromaMode	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetChromaMode(GUI_DEVICE * pDevice, int ChromaMode) {$/;"	f
_SetOrg	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetOrg(GUI_DEVICE * pDevice, int x, int y) {$/;"	f
_SetPixelIndex_CX	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _SetPixelIndex_CX(GUI_DEVICE * pDevice, int x, int y, LCD_PIXELINDEX PixelIndex) {$/;"	f
_SetPos	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetPos(GUI_DEVICE * pDevice, int xPos, int yPos) {$/;"	f
_SetSize	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetSize(GUI_DEVICE * pDevice, int xSize, int ySize) {$/;"	f
_SetVRAMAddr	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetVRAMAddr(GUI_DEVICE * pDevice, void * pVRAM) {$/;"	f
_SetVRAM_BufferPTR	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetVRAM_BufferPTR(GUI_DEVICE * pDevice, void ** pBufferPTR) {$/;"	f
_SetVSize	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetVSize(GUI_DEVICE * pDevice, int xSize, int ySize) {$/;"	f
_SetVis	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _SetVis(GUI_DEVICE * pDevice, int OnOff) {$/;"	f
_ShowBuffer	emwin/emWin_header/GUIDRV_Lin_Private.h	/^static void _ShowBuffer(GUI_DEVICE * pDevice, int Index) {$/;"	f
_Sort	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _Sort(int * p0, int * p1) {$/;"	f
_TIMER_H_	component/timer/timer.h	10;"	d
_TaskWork	source/common.h	/^typedef struct _TaskWork {$/;"	s
_USB_CDC_VCOM_H_	vcom/virtual_com.h	8;"	d
_USB_DEVICE_CDC_ACM_H_	usb/device/class/usb_device_cdc_acm.h	9;"	d
_USB_DEVICE_CDC_RNDIS_H_	usb/device/class/usb_device_cdc_rndis.h	9;"	d
_USB_DEVICE_COMPOSITE_H_	vcom/composite.h	9;"	d
_USB_DEVICE_CONFIG_H_	vcom/usb_device_config.h	9;"	d
_USB_DEVICE_DESCRIPTOR_H_	vcom/usb_device_descriptor.h	9;"	d
_USB_DEVICE_PHDC_H_	usb/device/class/usb_device_phdc.h	10;"	d
_USB_MSC_UFI_H	usb/device/class/usb_device_msc_ufi.h	10;"	d
_VAL2FLD	CMSIS/core_armv8mbl.h	1146;"	d
_VAL2FLD	CMSIS/core_armv8mml.h	2006;"	d
_VAL2FLD	CMSIS/core_cm4.h	1530;"	d
_XXXXXXX	emwin/emWin_header/GUI.h	2359;"	d
_XXXXXX_	emwin/emWin_header/GUI.h	2358;"	d
_XXXXX_X	emwin/emWin_header/GUI.h	2357;"	d
_XXXXX__	emwin/emWin_header/GUI.h	2356;"	d
_XXXX_XX	emwin/emWin_header/GUI.h	2355;"	d
_XXXX_X_	emwin/emWin_header/GUI.h	2354;"	d
_XXXX__X	emwin/emWin_header/GUI.h	2353;"	d
_XXXX___	emwin/emWin_header/GUI.h	2352;"	d
_XXX_XXX	emwin/emWin_header/GUI.h	2351;"	d
_XXX_XX_	emwin/emWin_header/GUI.h	2350;"	d
_XXX_X_X	emwin/emWin_header/GUI.h	2349;"	d
_XXX_X__	emwin/emWin_header/GUI.h	2348;"	d
_XXX__XX	emwin/emWin_header/GUI.h	2347;"	d
_XXX__X_	emwin/emWin_header/GUI.h	2346;"	d
_XXX___X	emwin/emWin_header/GUI.h	2345;"	d
_XXX____	emwin/emWin_header/GUI.h	2344;"	d
_XX_XXXX	emwin/emWin_header/GUI.h	2343;"	d
_XX_XXX_	emwin/emWin_header/GUI.h	2342;"	d
_XX_XX_X	emwin/emWin_header/GUI.h	2341;"	d
_XX_XX__	emwin/emWin_header/GUI.h	2340;"	d
_XX_X_XX	emwin/emWin_header/GUI.h	2339;"	d
_XX_X_X_	emwin/emWin_header/GUI.h	2338;"	d
_XX_X__X	emwin/emWin_header/GUI.h	2337;"	d
_XX_X___	emwin/emWin_header/GUI.h	2336;"	d
_XX__XXX	emwin/emWin_header/GUI.h	2335;"	d
_XX__XX_	emwin/emWin_header/GUI.h	2334;"	d
_XX__X_X	emwin/emWin_header/GUI.h	2333;"	d
_XX__X__	emwin/emWin_header/GUI.h	2332;"	d
_XX___XX	emwin/emWin_header/GUI.h	2331;"	d
_XX___X_	emwin/emWin_header/GUI.h	2330;"	d
_XX____X	emwin/emWin_header/GUI.h	2329;"	d
_XX_____	emwin/emWin_header/GUI.h	2328;"	d
_X_XXXXX	emwin/emWin_header/GUI.h	2327;"	d
_X_XXXX_	emwin/emWin_header/GUI.h	2326;"	d
_X_XXX_X	emwin/emWin_header/GUI.h	2325;"	d
_X_XXX__	emwin/emWin_header/GUI.h	2324;"	d
_X_XX_XX	emwin/emWin_header/GUI.h	2323;"	d
_X_XX_X_	emwin/emWin_header/GUI.h	2322;"	d
_X_XX__X	emwin/emWin_header/GUI.h	2321;"	d
_X_XX___	emwin/emWin_header/GUI.h	2320;"	d
_X_X_XXX	emwin/emWin_header/GUI.h	2319;"	d
_X_X_XX_	emwin/emWin_header/GUI.h	2318;"	d
_X_X_X_X	emwin/emWin_header/GUI.h	2317;"	d
_X_X_X__	emwin/emWin_header/GUI.h	2316;"	d
_X_X__XX	emwin/emWin_header/GUI.h	2315;"	d
_X_X__X_	emwin/emWin_header/GUI.h	2314;"	d
_X_X___X	emwin/emWin_header/GUI.h	2313;"	d
_X_X____	emwin/emWin_header/GUI.h	2312;"	d
_X__XXXX	emwin/emWin_header/GUI.h	2311;"	d
_X__XXX_	emwin/emWin_header/GUI.h	2310;"	d
_X__XX_X	emwin/emWin_header/GUI.h	2309;"	d
_X__XX__	emwin/emWin_header/GUI.h	2308;"	d
_X__X_XX	emwin/emWin_header/GUI.h	2307;"	d
_X__X_X_	emwin/emWin_header/GUI.h	2306;"	d
_X__X__X	emwin/emWin_header/GUI.h	2305;"	d
_X__X___	emwin/emWin_header/GUI.h	2304;"	d
_X___XXX	emwin/emWin_header/GUI.h	2303;"	d
_X___XX_	emwin/emWin_header/GUI.h	2302;"	d
_X___X_X	emwin/emWin_header/GUI.h	2301;"	d
_X___X__	emwin/emWin_header/GUI.h	2300;"	d
_X____XX	emwin/emWin_header/GUI.h	2299;"	d
_X____X_	emwin/emWin_header/GUI.h	2298;"	d
_X_____X	emwin/emWin_header/GUI.h	2297;"	d
_X______	emwin/emWin_header/GUI.h	2296;"	d
_XorPixel_CX	emwin/emWin_header/GUI_SetOrientationCX.h	/^static void _XorPixel_CX(GUI_DEVICE * pDevice, int x, int y) {$/;"	f
__ALIGNED	CMSIS/cmsis_armcc.h	98;"	d
__ALIGNED	CMSIS/cmsis_armclang.h	108;"	d
__ALIGNED	CMSIS/cmsis_compiler.h	115;"	d
__ALIGNED	CMSIS/cmsis_compiler.h	184;"	d
__ALIGNED	CMSIS/cmsis_compiler.h	252;"	d
__ALIGNED	CMSIS/cmsis_gcc.h	111;"	d
__ALIGNED	CMSIS/cmsis_iccarm.h	45;"	d
__ALIGNED	CMSIS/cmsis_iccarm.h	48;"	d
__ALIGNED	CMSIS/cmsis_iccarm.h	51;"	d
__ARCH_SYS_ARCH_H__	lwip/port/arch/sys_arch.h	42;"	d
__ARM_ARCH_6M__	CMSIS/cmsis_armcc.h	36;"	d
__ARM_ARCH_6M__	CMSIS/cmsis_iccarm.h	67;"	d
__ARM_ARCH_6M__	CMSIS/cmsis_iccarm.h	82;"	d
__ARM_ARCH_7EM__	CMSIS/cmsis_armcc.h	44;"	d
__ARM_ARCH_7EM__	CMSIS/cmsis_iccarm.h	70;"	d
__ARM_ARCH_7EM__	CMSIS/cmsis_iccarm.h	86;"	d
__ARM_ARCH_7M__	CMSIS/cmsis_armcc.h	40;"	d
__ARM_ARCH_7M__	CMSIS/cmsis_iccarm.h	72;"	d
__ARM_ARCH_7M__	CMSIS/cmsis_iccarm.h	84;"	d
__ARM_ARCH_8M_BASE__	CMSIS/cmsis_iccarm.h	64;"	d
__ARM_ARCH_8M_BASE__	CMSIS/cmsis_iccarm.h	88;"	d
__ARM_ARCH_8M_MAIN__	CMSIS/cmsis_iccarm.h	62;"	d
__ARM_ARCH_8M_MAIN__	CMSIS/cmsis_iccarm.h	90;"	d
__ARM_ARCH_8M_MAIN__	CMSIS/cmsis_iccarm.h	92;"	d
__ARMv8MBL_CMSIS_VERSION	CMSIS/core_armv8mbl.h	68;"	d
__ARMv8MBL_CMSIS_VERSION_MAIN	CMSIS/core_armv8mbl.h	66;"	d
__ARMv8MBL_CMSIS_VERSION_SUB	CMSIS/core_armv8mbl.h	67;"	d
__ARMv8MBL_REV	CMSIS/core_armv8mbl.h	136;"	d
__ARMv8MML_CMSIS_VERSION	CMSIS/core_armv8mml.h	68;"	d
__ARMv8MML_CMSIS_VERSION_MAIN	CMSIS/core_armv8mml.h	66;"	d
__ARMv8MML_CMSIS_VERSION_SUB	CMSIS/core_armv8mml.h	67;"	d
__ARMv8MML_REV	CMSIS/core_armv8mml.h	227;"	d
__ASM	CMSIS/cmsis_armcc.h	53;"	d
__ASM	CMSIS/cmsis_armclang.h	38;"	d
__ASM	CMSIS/cmsis_compiler.h	134;"	d
__ASM	CMSIS/cmsis_compiler.h	199;"	d
__ASM	CMSIS/cmsis_compiler.h	65;"	d
__ASM	CMSIS/cmsis_gcc.h	41;"	d
__ASM	CMSIS/cmsis_iccarm.h	110;"	d
__BKPT	CMSIS/cmsis_armcc.h	508;"	d
__BKPT	CMSIS/cmsis_armclang.h	902;"	d
__BKPT	CMSIS/cmsis_gcc.h	975;"	d
__BKPT	CMSIS/cmsis_iccarm.h	743;"	d
__C2FSK_H	codec2/fsk.h	30;"	d
__CC_H__	lwip/port/arch/cc.h	42;"	d
__CLREX	CMSIS/cmsis_armcc.h	639;"	d
__CLREX	CMSIS/cmsis_armclang.h	990;"	d
__CLREX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __CLREX(void)$/;"	f
__CLREX	CMSIS/cmsis_iccarm.h	351;"	d
__CLZ	CMSIS/cmsis_armcc.h	545;"	d
__CLZ	CMSIS/cmsis_armclang.h	919;"	d
__CLZ	CMSIS/cmsis_gcc.h	1014;"	d
__CLZ	CMSIS/cmsis_iccarm.h	/^    __STATIC_INLINE uint8_t __CLZ(uint32_t data)$/;"	f
__CLZ	CMSIS/cmsis_iccarm.h	245;"	d
__CLZ	CMSIS/cmsis_iccarm.h	350;"	d
__CLZ	CMSIS/cmsis_iccarm.h	459;"	d
__CLZ	CMSIS/cmsis_iccarm.h	481;"	d
__CM4_CMSIS_VERSION	CMSIS/core_cm4.h	68;"	d
__CM4_CMSIS_VERSION_MAIN	CMSIS/core_cm4.h	66;"	d
__CM4_CMSIS_VERSION_SUB	CMSIS/core_cm4.h	67;"	d
__CM4_REV	CMSIS/core_cm4.h	183;"	d
__CMSIS_ARMCC_H	CMSIS/cmsis_armcc.h	26;"	d
__CMSIS_ARMCLANG_H	CMSIS/cmsis_armclang.h	28;"	d
__CMSIS_COMPILER_H	CMSIS/cmsis_compiler.h	26;"	d
__CMSIS_GCC_H	CMSIS/cmsis_gcc.h	26;"	d
__CMSIS_GCC_OUT_REG	CMSIS/cmsis_armclang.h	791;"	d
__CMSIS_GCC_OUT_REG	CMSIS/cmsis_armclang.h	794;"	d
__CMSIS_GCC_OUT_REG	CMSIS/cmsis_gcc.h	826;"	d
__CMSIS_GCC_OUT_REG	CMSIS/cmsis_gcc.h	830;"	d
__CMSIS_GCC_RW_REG	CMSIS/cmsis_gcc.h	827;"	d
__CMSIS_GCC_RW_REG	CMSIS/cmsis_gcc.h	831;"	d
__CMSIS_GCC_USE_REG	CMSIS/cmsis_armclang.h	792;"	d
__CMSIS_GCC_USE_REG	CMSIS/cmsis_armclang.h	795;"	d
__CMSIS_GCC_USE_REG	CMSIS/cmsis_gcc.h	828;"	d
__CMSIS_GCC_USE_REG	CMSIS/cmsis_gcc.h	832;"	d
__CMSIS_GENERIC	CMSIS/arm_math.h	316;"	d
__CMSIS_GENERIC	CMSIS/arm_math.h	347;"	d
__CMSIS_ICCARM_H__	CMSIS/cmsis_iccarm.h	27;"	d
__CMSIS_VERSION_H	CMSIS/cmsis_version.h	32;"	d
__CM_CMSIS_VERSION	CMSIS/cmsis_version.h	37;"	d
__CM_CMSIS_VERSION_MAIN	CMSIS/cmsis_version.h	35;"	d
__CM_CMSIS_VERSION_SUB	CMSIS/cmsis_version.h	36;"	d
__CODEC2_COHPSK__	codec2/codec2_cohpsk.h	29;"	d
__CODEC2_INTERNAL__	codec2/codec2_internal.h	30;"	d
__CODEC2__	codec2/codec2.h	34;"	d
__COMP_PRIM__	codec2/comp_prim.h	29;"	d
__COMP__	codec2/comp.h	29;"	d
__CORE_ARMV8MBL_H_DEPENDANT	CMSIS/core_armv8mbl.h	127;"	d
__CORE_ARMV8MBL_H_GENERIC	CMSIS/core_armv8mbl.h	32;"	d
__CORE_ARMV8MML_H_DEPENDANT	CMSIS/core_armv8mml.h	218;"	d
__CORE_ARMV8MML_H_GENERIC	CMSIS/core_armv8mml.h	32;"	d
__CORE_CM4_H_DEPENDANT	CMSIS/core_cm4.h	174;"	d
__CORE_CM4_H_GENERIC	CMSIS/core_cm4.h	32;"	d
__CORTEX_M	CMSIS/core_armv8mbl.h	71;"	d
__CORTEX_M	CMSIS/core_armv8mml.h	71;"	d
__CORTEX_M	CMSIS/core_cm4.h	71;"	d
__DEFINES__	codec2/defines.h	29;"	d
__DMB	CMSIS/cmsis_armcc.h	445;"	d
__DMB	CMSIS/cmsis_armclang.h	847;"	d
__DMB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __DMB(void)$/;"	f
__DMB	CMSIS/cmsis_iccarm.h	353;"	d
__DSB	CMSIS/cmsis_armcc.h	434;"	d
__DSB	CMSIS/cmsis_armclang.h	839;"	d
__DSB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __DSB(void)$/;"	f
__DSB	CMSIS/cmsis_iccarm.h	354;"	d
__DSP_PRESENT	CMSIS/core_armv8mml.h	247;"	d
__DSP_USED	CMSIS/core_armv8mml.h	113;"	d
__DSP_USED	CMSIS/core_armv8mml.h	116;"	d
__DSP_USED	CMSIS/core_armv8mml.h	119;"	d
__DSP_USED	CMSIS/core_armv8mml.h	136;"	d
__DSP_USED	CMSIS/core_armv8mml.h	139;"	d
__DSP_USED	CMSIS/core_armv8mml.h	142;"	d
__DSP_USED	CMSIS/core_armv8mml.h	159;"	d
__DSP_USED	CMSIS/core_armv8mml.h	162;"	d
__DSP_USED	CMSIS/core_armv8mml.h	165;"	d
__DSP_USED	CMSIS/core_armv8mml.h	90;"	d
__DSP_USED	CMSIS/core_armv8mml.h	93;"	d
__DSP_USED	CMSIS/core_armv8mml.h	96;"	d
__DUMP__	codec2/dump.h	27;"	d
__ETM_PRESENT	CMSIS/core_armv8mbl.h	171;"	d
__FDMDV__	codec2/codec2_fdmdv.h	39;"	d
__FILE	utilities/fsl_debug_console.c	/^struct __FILE$/;"	s	file:
__FORCEINLINE	CMSIS/cmsis_iccarm.h	161;"	d
__FPU_PRESENT	CMSIS/core_armv8mbl.h	141;"	d
__FPU_PRESENT	CMSIS/core_armv8mml.h	232;"	d
__FPU_PRESENT	CMSIS/core_cm4.h	188;"	d
__FPU_PRESENT	device/LPC54018.h	164;"	d
__FPU_USED	CMSIS/core_armv8mbl.h	76;"	d
__FPU_USED	CMSIS/core_armv8mml.h	102;"	d
__FPU_USED	CMSIS/core_armv8mml.h	105;"	d
__FPU_USED	CMSIS/core_armv8mml.h	108;"	d
__FPU_USED	CMSIS/core_armv8mml.h	125;"	d
__FPU_USED	CMSIS/core_armv8mml.h	128;"	d
__FPU_USED	CMSIS/core_armv8mml.h	131;"	d
__FPU_USED	CMSIS/core_armv8mml.h	148;"	d
__FPU_USED	CMSIS/core_armv8mml.h	151;"	d
__FPU_USED	CMSIS/core_armv8mml.h	154;"	d
__FPU_USED	CMSIS/core_armv8mml.h	171;"	d
__FPU_USED	CMSIS/core_armv8mml.h	174;"	d
__FPU_USED	CMSIS/core_armv8mml.h	177;"	d
__FPU_USED	CMSIS/core_armv8mml.h	183;"	d
__FPU_USED	CMSIS/core_armv8mml.h	186;"	d
__FPU_USED	CMSIS/core_armv8mml.h	189;"	d
__FPU_USED	CMSIS/core_armv8mml.h	195;"	d
__FPU_USED	CMSIS/core_armv8mml.h	198;"	d
__FPU_USED	CMSIS/core_armv8mml.h	201;"	d
__FPU_USED	CMSIS/core_armv8mml.h	79;"	d
__FPU_USED	CMSIS/core_armv8mml.h	82;"	d
__FPU_USED	CMSIS/core_armv8mml.h	85;"	d
__FPU_USED	CMSIS/core_cm4.h	103;"	d
__FPU_USED	CMSIS/core_cm4.h	106;"	d
__FPU_USED	CMSIS/core_cm4.h	109;"	d
__FPU_USED	CMSIS/core_cm4.h	115;"	d
__FPU_USED	CMSIS/core_cm4.h	118;"	d
__FPU_USED	CMSIS/core_cm4.h	121;"	d
__FPU_USED	CMSIS/core_cm4.h	127;"	d
__FPU_USED	CMSIS/core_cm4.h	130;"	d
__FPU_USED	CMSIS/core_cm4.h	133;"	d
__FPU_USED	CMSIS/core_cm4.h	139;"	d
__FPU_USED	CMSIS/core_cm4.h	142;"	d
__FPU_USED	CMSIS/core_cm4.h	145;"	d
__FPU_USED	CMSIS/core_cm4.h	151;"	d
__FPU_USED	CMSIS/core_cm4.h	154;"	d
__FPU_USED	CMSIS/core_cm4.h	157;"	d
__FPU_USED	CMSIS/core_cm4.h	79;"	d
__FPU_USED	CMSIS/core_cm4.h	82;"	d
__FPU_USED	CMSIS/core_cm4.h	85;"	d
__FPU_USED	CMSIS/core_cm4.h	91;"	d
__FPU_USED	CMSIS/core_cm4.h	94;"	d
__FPU_USED	CMSIS/core_cm4.h	97;"	d
__FSL_DEVICE_REGISTERS_H__	device/fsl_device_registers.h	10;"	d
__FSL_I2C_FREERTOS_H__	drivers/freertos/fsl_i2c_freertos.h	9;"	d
__FSL_SPI_FREERTOS_H__	drivers/freertos/fsl_spi_freertos.h	9;"	d
__GOLAY23__	codec2/golay23.h	29;"	d
__GP_INTERLEAVER__	codec2/gp_interleaver.h	32;"	d
__HAL_I2C_ADAPTER_H__	component/i2c/i2c.h	10;"	d
__HAL_UART_ADAPTER_H__	component/uart/uart.h	10;"	d
__I	CMSIS/core_armv8mbl.h	191;"	d
__I	CMSIS/core_armv8mbl.h	193;"	d
__I	CMSIS/core_armv8mml.h	271;"	d
__I	CMSIS/core_armv8mml.h	273;"	d
__I	CMSIS/core_cm4.h	217;"	d
__I	CMSIS/core_cm4.h	219;"	d
__IAR_FT	CMSIS/cmsis_iccarm.h	35;"	d
__IAR_FT	CMSIS/cmsis_iccarm.h	906;"	d
__IAR_M0_FAMILY	CMSIS/cmsis_iccarm.h	101;"	d
__IAR_M0_FAMILY	CMSIS/cmsis_iccarm.h	103;"	d
__IAR_M0_FAMILY	CMSIS/cmsis_iccarm.h	105;"	d
__IAR_M0_FAMILY	CMSIS/cmsis_iccarm.h	907;"	d
__ICCARM_INTRINSICS_VERSION__	CMSIS/cmsis_iccarm.h	239;"	d
__ICCARM_V8	CMSIS/cmsis_iccarm.h	38;"	d
__ICCARM_V8	CMSIS/cmsis_iccarm.h	40;"	d
__ICCARM_V8	CMSIS/cmsis_iccarm.h	908;"	d
__IM	CMSIS/core_armv8mbl.h	199;"	d
__IM	CMSIS/core_armv8mml.h	279;"	d
__IM	CMSIS/core_cm4.h	225;"	d
__INLINE	CMSIS/cmsis_armcc.h	56;"	d
__INLINE	CMSIS/cmsis_armclang.h	41;"	d
__INLINE	CMSIS/cmsis_compiler.h	137;"	d
__INLINE	CMSIS/cmsis_compiler.h	202;"	d
__INLINE	CMSIS/cmsis_compiler.h	68;"	d
__INLINE	CMSIS/cmsis_gcc.h	44;"	d
__INLINE	CMSIS/cmsis_iccarm.h	114;"	d
__INTERLDPC__	codec2/interldpc.h	29;"	d
__INTERP__	codec2/interp.h	29;"	d
__IO	CMSIS/core_armv8mbl.h	196;"	d
__IO	CMSIS/core_armv8mml.h	276;"	d
__IO	CMSIS/core_cm4.h	222;"	d
__IOM	CMSIS/core_armv8mbl.h	201;"	d
__IOM	CMSIS/core_armv8mml.h	281;"	d
__IOM	CMSIS/core_cm4.h	227;"	d
__ISB	CMSIS/cmsis_armcc.h	423;"	d
__ISB	CMSIS/cmsis_armclang.h	832;"	d
__ISB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __ISB(void)$/;"	f
__ISB	CMSIS/cmsis_iccarm.h	355;"	d
__LDA	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)$/;"	f
__LDA	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)$/;"	f
__LDA	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint32_t __LDA(volatile uint32_t *ptr)$/;"	f
__LDAB	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)$/;"	f
__LDAB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)$/;"	f
__LDAB	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint8_t __LDAB(volatile uint8_t *ptr)$/;"	f
__LDAEX	CMSIS/cmsis_armclang.h	1283;"	d
__LDAEX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)$/;"	f
__LDAEX	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint32_t __LDAEX(volatile uint32_t *ptr)$/;"	f
__LDAEXB	CMSIS/cmsis_armclang.h	1265;"	d
__LDAEXB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)$/;"	f
__LDAEXB	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint8_t __LDAEXB(volatile uint8_t *ptr)$/;"	f
__LDAEXH	CMSIS/cmsis_armclang.h	1274;"	d
__LDAEXH	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)$/;"	f
__LDAEXH	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint16_t __LDAEXH(volatile uint16_t *ptr)$/;"	f
__LDAH	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)$/;"	f
__LDAH	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)$/;"	f
__LDAH	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint16_t __LDAH(volatile uint16_t *ptr)$/;"	f
__LDRBT	CMSIS/cmsis_armcc.h	684;"	d
__LDRBT	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)$/;"	f
__LDRBT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)$/;"	f
__LDRBT	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint8_t __LDRBT(volatile uint8_t *addr)$/;"	f
__LDREXB	CMSIS/cmsis_armcc.h	558;"	d
__LDREXB	CMSIS/cmsis_armcc.h	560;"	d
__LDREXB	CMSIS/cmsis_armclang.h	932;"	d
__LDREXB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)$/;"	f
__LDREXB	CMSIS/cmsis_iccarm.h	357;"	d
__LDREXH	CMSIS/cmsis_armcc.h	571;"	d
__LDREXH	CMSIS/cmsis_armcc.h	573;"	d
__LDREXH	CMSIS/cmsis_armclang.h	941;"	d
__LDREXH	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)$/;"	f
__LDREXH	CMSIS/cmsis_iccarm.h	358;"	d
__LDREXW	CMSIS/cmsis_armcc.h	584;"	d
__LDREXW	CMSIS/cmsis_armcc.h	586;"	d
__LDREXW	CMSIS/cmsis_armclang.h	950;"	d
__LDREXW	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)$/;"	f
__LDREXW	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t __LDREXW(uint32_t volatile *ptr)$/;"	f
__LDREXW	CMSIS/cmsis_iccarm.h	359;"	d
__LDRHT	CMSIS/cmsis_armcc.h	693;"	d
__LDRHT	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)$/;"	f
__LDRHT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)$/;"	f
__LDRHT	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint16_t __LDRHT(volatile uint16_t *addr)$/;"	f
__LDRT	CMSIS/cmsis_armcc.h	702;"	d
__LDRT	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)$/;"	f
__LDRT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)$/;"	f
__LDRT	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint32_t __LDRT(volatile uint32_t *addr)$/;"	f
__LPC__	codec2/lpc.h	29;"	d
__LSP__	codec2/lsp.h	32;"	d
__LWIPOPTS_H__	source/lwipopts.h	15;"	d
__MACHDEP__	codec2/machdep.h	30;"	d
__MBEST__	codec2/mbest.h	31;"	d
__MODEMPROBE_H	codec2/modem_probe.h	29;"	d
__MODEM_STATS__	codec2/modem_stats.h	33;"	d
__MPDECODE_CORE__	codec2/mpdecode_core.h	12;"	d
__MPU_PRESENT	CMSIS/core_armv8mbl.h	146;"	d
__MPU_PRESENT	CMSIS/core_armv8mml.h	237;"	d
__MPU_PRESENT	CMSIS/core_cm4.h	193;"	d
__MPU_PRESENT	device/LPC54018.h	161;"	d
__MTB_PRESENT	CMSIS/core_armv8mbl.h	176;"	d
__NEWAMP1__	codec2/newamp1.h	31;"	d
__NLP__	codec2/nlp.h	29;"	d
__NOP	CMSIS/cmsis_armcc.h	392;"	d
__NOP	CMSIS/cmsis_armclang.h	802;"	d
__NOP	CMSIS/cmsis_gcc.h	839;"	d
__NOP	CMSIS/cmsis_iccarm.h	348;"	d
__NOP	CMSIS/cmsis_iccarm.h	537;"	d
__NO_RETURN	CMSIS/cmsis_armcc.h	65;"	d
__NO_RETURN	CMSIS/cmsis_armclang.h	50;"	d
__NO_RETURN	CMSIS/cmsis_compiler.h	146;"	d
__NO_RETURN	CMSIS/cmsis_compiler.h	212;"	d
__NO_RETURN	CMSIS/cmsis_compiler.h	77;"	d
__NO_RETURN	CMSIS/cmsis_gcc.h	53;"	d
__NO_RETURN	CMSIS/cmsis_iccarm.h	119;"	d
__NO_RETURN	CMSIS/cmsis_iccarm.h	121;"	d
__NVIC_ClearPendingIRQ	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_ClearPendingIRQ	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_ClearPendingIRQ	CMSIS/core_cm4.h	/^__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_DisableIRQ	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_DisableIRQ	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_DisableIRQ	CMSIS/core_cm4.h	/^__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_EnableIRQ	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_EnableIRQ	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_EnableIRQ	CMSIS/core_cm4.h	/^__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_GetActive	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)$/;"	f
__NVIC_GetActive	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)$/;"	f
__NVIC_GetActive	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)$/;"	f
__NVIC_GetEnableIRQ	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_GetEnableIRQ	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_GetEnableIRQ	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_GetPendingIRQ	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_GetPendingIRQ	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_GetPendingIRQ	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_GetPriority	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)$/;"	f
__NVIC_GetPriority	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)$/;"	f
__NVIC_GetPriority	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)$/;"	f
__NVIC_GetPriorityGrouping	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)$/;"	f
__NVIC_GetPriorityGrouping	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)$/;"	f
__NVIC_GetVector	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)$/;"	f
__NVIC_GetVector	CMSIS/core_armv8mml.h	/^__STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)$/;"	f
__NVIC_GetVector	CMSIS/core_cm4.h	/^__STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)$/;"	f
__NVIC_PRIO_BITS	CMSIS/core_armv8mbl.h	161;"	d
__NVIC_PRIO_BITS	CMSIS/core_armv8mml.h	252;"	d
__NVIC_PRIO_BITS	CMSIS/core_cm4.h	198;"	d
__NVIC_PRIO_BITS	device/LPC54018.h	162;"	d
__NVIC_SetPendingIRQ	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_SetPendingIRQ	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_SetPendingIRQ	CMSIS/core_cm4.h	/^__STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)$/;"	f
__NVIC_SetPriority	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)$/;"	f
__NVIC_SetPriority	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)$/;"	f
__NVIC_SetPriority	CMSIS/core_cm4.h	/^__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)$/;"	f
__NVIC_SetPriorityGrouping	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)$/;"	f
__NVIC_SetPriorityGrouping	CMSIS/core_cm4.h	/^__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)$/;"	f
__NVIC_SetVector	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)$/;"	f
__NVIC_SetVector	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)$/;"	f
__NVIC_SetVector	CMSIS/core_cm4.h	/^__STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)$/;"	f
__NVIC_SystemReset	CMSIS/core_armv8mbl.h	/^__STATIC_INLINE void __NVIC_SystemReset(void)$/;"	f
__NVIC_SystemReset	CMSIS/core_armv8mml.h	/^__STATIC_INLINE void __NVIC_SystemReset(void)$/;"	f
__NVIC_SystemReset	CMSIS/core_cm4.h	/^__STATIC_INLINE void __NVIC_SystemReset(void)$/;"	f
__O	CMSIS/core_armv8mbl.h	195;"	d
__O	CMSIS/core_armv8mml.h	275;"	d
__O	CMSIS/core_cm4.h	221;"	d
__OM	CMSIS/core_armv8mbl.h	200;"	d
__OM	CMSIS/core_armv8mml.h	280;"	d
__OM	CMSIS/core_cm4.h	226;"	d
__PACKED	CMSIS/cmsis_armcc.h	74;"	d
__PACKED	CMSIS/cmsis_armclang.h	59;"	d
__PACKED	CMSIS/cmsis_compiler.h	155;"	d
__PACKED	CMSIS/cmsis_compiler.h	222;"	d
__PACKED	CMSIS/cmsis_compiler.h	86;"	d
__PACKED	CMSIS/cmsis_gcc.h	62;"	d
__PACKED	CMSIS/cmsis_iccarm.h	127;"	d
__PACKED	CMSIS/cmsis_iccarm.h	130;"	d
__PACKED_STRUCT	CMSIS/cmsis_armcc.h	77;"	d
__PACKED_STRUCT	CMSIS/cmsis_armclang.h	62;"	d
__PACKED_STRUCT	CMSIS/cmsis_compiler.h	158;"	d
__PACKED_STRUCT	CMSIS/cmsis_compiler.h	225;"	d
__PACKED_STRUCT	CMSIS/cmsis_compiler.h	89;"	d
__PACKED_STRUCT	CMSIS/cmsis_gcc.h	65;"	d
__PACKED_STRUCT	CMSIS/cmsis_iccarm.h	136;"	d
__PACKED_STRUCT	CMSIS/cmsis_iccarm.h	139;"	d
__PACKED_UNION	CMSIS/cmsis_armcc.h	80;"	d
__PACKED_UNION	CMSIS/cmsis_armclang.h	65;"	d
__PACKED_UNION	CMSIS/cmsis_compiler.h	161;"	d
__PACKED_UNION	CMSIS/cmsis_compiler.h	228;"	d
__PACKED_UNION	CMSIS/cmsis_compiler.h	92;"	d
__PACKED_UNION	CMSIS/cmsis_gcc.h	68;"	d
__PACKED_UNION	CMSIS/cmsis_iccarm.h	145;"	d
__PACKED_UNION	CMSIS/cmsis_iccarm.h	148;"	d
__PACKq7	CMSIS/arm_math.h	506;"	d
__PACKq7	CMSIS/arm_math.h	512;"	d
__PERF_H__	lwip/port/arch/perf.h	33;"	d
__PHASE__	codec2/phase.h	29;"	d
__PKHBT	CMSIS/arm_math.h	494;"	d
__PKHBT	CMSIS/cmsis_armcc.h	857;"	d
__PKHBT	CMSIS/cmsis_armclang.h	1859;"	d
__PKHBT	CMSIS/cmsis_gcc.h	2068;"	d
__PKHBT	CMSIS/cmsis_iccarm.h	451;"	d
__PKHTB	CMSIS/arm_math.h	496;"	d
__PKHTB	CMSIS/cmsis_armcc.h	860;"	d
__PKHTB	CMSIS/cmsis_armclang.h	1862;"	d
__PKHTB	CMSIS/cmsis_gcc.h	2071;"	d
__PKHTB	CMSIS/cmsis_iccarm.h	452;"	d
__POSTFILTER__	codec2/postfilter.h	29;"	d
__QADD	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE int32_t __QADD($/;"	f
__QADD	CMSIS/cmsis_armcc.h	854;"	d
__QADD	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE  int32_t __QADD( int32_t op1,  int32_t op2)$/;"	f
__QADD	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE  int32_t __QADD( int32_t op1,  int32_t op2)$/;"	f
__QADD	CMSIS/cmsis_iccarm.h	449;"	d
__QADD16	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16($/;"	f
__QADD16	CMSIS/cmsis_armcc.h	810;"	d
__QADD16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)$/;"	f
__QADD16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)$/;"	f
__QADD16	CMSIS/cmsis_iccarm.h	404;"	d
__QADD8	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8($/;"	f
__QADD8	CMSIS/cmsis_armcc.h	798;"	d
__QADD8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)$/;"	f
__QADD8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)$/;"	f
__QADD8	CMSIS/cmsis_iccarm.h	392;"	d
__QASX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __QASX($/;"	f
__QASX	CMSIS/cmsis_armcc.h	822;"	d
__QASX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)$/;"	f
__QASX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)$/;"	f
__QASX	CMSIS/cmsis_iccarm.h	416;"	d
__QSAX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX($/;"	f
__QSAX	CMSIS/cmsis_armcc.h	828;"	d
__QSAX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)$/;"	f
__QSAX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)$/;"	f
__QSAX	CMSIS/cmsis_iccarm.h	422;"	d
__QSUB	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE int32_t __QSUB($/;"	f
__QSUB	CMSIS/cmsis_armcc.h	855;"	d
__QSUB	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE  int32_t __QSUB( int32_t op1,  int32_t op2)$/;"	f
__QSUB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE  int32_t __QSUB( int32_t op1,  int32_t op2)$/;"	f
__QSUB	CMSIS/cmsis_iccarm.h	450;"	d
__QSUB16	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16($/;"	f
__QSUB16	CMSIS/cmsis_armcc.h	816;"	d
__QSUB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)$/;"	f
__QSUB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)$/;"	f
__QSUB16	CMSIS/cmsis_iccarm.h	410;"	d
__QSUB8	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8($/;"	f
__QSUB8	CMSIS/cmsis_armcc.h	804;"	d
__QSUB8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)$/;"	f
__QSUB8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)$/;"	f
__QSUB8	CMSIS/cmsis_iccarm.h	398;"	d
__QUANTISE__	codec2/quantise.h	27;"	d
__RAM_VECTOR_TABLE_SIZE	drivers/fsl_common.c	36;"	d	file:
__RBIT	CMSIS/cmsis_armcc.h	/^__attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)$/;"	f
__RBIT	CMSIS/cmsis_armcc.h	519;"	d
__RBIT	CMSIS/cmsis_armclang.h	911;"	d
__RBIT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)$/;"	f
__RBIT	CMSIS/cmsis_iccarm.h	/^    __STATIC_INLINE uint32_t __RBIT(uint32_t v)$/;"	f
__RBIT	CMSIS/cmsis_iccarm.h	251;"	d
__RBIT	CMSIS/cmsis_iccarm.h	361;"	d
__RBIT	CMSIS/cmsis_iccarm.h	462;"	d
__RBIT	CMSIS/cmsis_iccarm.h	484;"	d
__RESTRICT	CMSIS/cmsis_armcc.h	101;"	d
__RESTRICT	CMSIS/cmsis_armclang.h	111;"	d
__RESTRICT	CMSIS/cmsis_compiler.h	119;"	d
__RESTRICT	CMSIS/cmsis_compiler.h	188;"	d
__RESTRICT	CMSIS/cmsis_compiler.h	256;"	d
__RESTRICT	CMSIS/cmsis_gcc.h	114;"	d
__RESTRICT	CMSIS/cmsis_iccarm.h	153;"	d
__REV	CMSIS/cmsis_armcc.h	458;"	d
__REV	CMSIS/cmsis_armclang.h	856;"	d
__REV	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __REV(uint32_t value)$/;"	f
__REV	CMSIS/cmsis_iccarm.h	362;"	d
__REV16	CMSIS/cmsis_armcc.h	/^__attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)$/;"	f
__REV16	CMSIS/cmsis_armclang.h	865;"	d
__REV16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)$/;"	f
__REV16	CMSIS/cmsis_iccarm.h	363;"	d
__REVSH	CMSIS/cmsis_armcc.h	/^__attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int16_t __REVSH(int16_t value)$/;"	f
__REVSH	CMSIS/cmsis_armclang.h	874;"	d
__REVSH	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE int16_t __REVSH(int16_t value)$/;"	f
__REVSH	CMSIS/cmsis_iccarm.h	/^  __IAR_FT int16_t __REVSH(int16_t val)$/;"	f
__REVSH	CMSIS/cmsis_iccarm.h	248;"	d
__ROR	CMSIS/cmsis_armcc.h	498;"	d
__ROR	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)$/;"	f
__ROR	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)$/;"	f
__ROR	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint32_t __ROR(uint32_t op1, uint32_t op2)$/;"	f
__ROR	CMSIS/cmsis_iccarm.h	370;"	d
__RRX	CMSIS/cmsis_armcc.h	/^__attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)$/;"	f
__RRX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)$/;"	f
__RRX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)$/;"	f
__RRX	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t __RRX(uint32_t value)$/;"	f
__RRX	CMSIS/cmsis_iccarm.h	371;"	d
__RTE_DEVICE_H	board/RTE_Device.h	10;"	d
__SADD16	CMSIS/cmsis_armcc.h	809;"	d
__SADD16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)$/;"	f
__SADD16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)$/;"	f
__SADD16	CMSIS/cmsis_iccarm.h	403;"	d
__SADD8	CMSIS/cmsis_armcc.h	797;"	d
__SADD8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)$/;"	f
__SADD8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)$/;"	f
__SADD8	CMSIS/cmsis_iccarm.h	391;"	d
__SASX	CMSIS/cmsis_armcc.h	821;"	d
__SASX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)$/;"	f
__SASX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)$/;"	f
__SASX	CMSIS/cmsis_iccarm.h	415;"	d
__SAUREGION_PRESENT	CMSIS/core_armv8mbl.h	151;"	d
__SAUREGION_PRESENT	CMSIS/core_armv8mml.h	242;"	d
__SEL	CMSIS/cmsis_armcc.h	853;"	d
__SEL	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SEL  (uint32_t op1, uint32_t op2)$/;"	f
__SEL	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SEL  (uint32_t op1, uint32_t op2)$/;"	f
__SEL	CMSIS/cmsis_iccarm.h	448;"	d
__SERIAL_MANAGER_H__	component/serial_manager/serial_manager.h	10;"	d
__SERIAL_PORT_INTERNAL_H__	component/serial_manager/serial_port_internal.h	10;"	d
__SERIAL_PORT_UART_H__	component/serial_manager/serial_port_uart.h	10;"	d
__SEV	CMSIS/cmsis_armcc.h	414;"	d
__SEV	CMSIS/cmsis_armclang.h	823;"	d
__SEV	CMSIS/cmsis_gcc.h	860;"	d
__SEV	CMSIS/cmsis_iccarm.h	373;"	d
__SHADD16	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16($/;"	f
__SHADD16	CMSIS/cmsis_armcc.h	811;"	d
__SHADD16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)$/;"	f
__SHADD16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)$/;"	f
__SHADD16	CMSIS/cmsis_iccarm.h	405;"	d
__SHADD8	CMSIS/cmsis_armcc.h	799;"	d
__SHADD8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)$/;"	f
__SHADD8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)$/;"	f
__SHADD8	CMSIS/cmsis_iccarm.h	393;"	d
__SHASX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX($/;"	f
__SHASX	CMSIS/cmsis_armcc.h	823;"	d
__SHASX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)$/;"	f
__SHASX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)$/;"	f
__SHASX	CMSIS/cmsis_iccarm.h	417;"	d
__SHSAX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX($/;"	f
__SHSAX	CMSIS/cmsis_armcc.h	829;"	d
__SHSAX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)$/;"	f
__SHSAX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)$/;"	f
__SHSAX	CMSIS/cmsis_iccarm.h	423;"	d
__SHSUB16	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16($/;"	f
__SHSUB16	CMSIS/cmsis_armcc.h	817;"	d
__SHSUB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)$/;"	f
__SHSUB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)$/;"	f
__SHSUB16	CMSIS/cmsis_iccarm.h	411;"	d
__SHSUB8	CMSIS/cmsis_armcc.h	805;"	d
__SHSUB8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)$/;"	f
__SHSUB8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)$/;"	f
__SHSUB8	CMSIS/cmsis_iccarm.h	399;"	d
__SIMD32	CMSIS/arm_math.h	485;"	d
__SIMD32_CONST	CMSIS/arm_math.h	486;"	d
__SIMD32_TYPE	CMSIS/arm_math.h	447;"	d
__SIMD32_TYPE	CMSIS/arm_math.h	452;"	d
__SIMD32_TYPE	CMSIS/arm_math.h	457;"	d
__SIMD32_TYPE	CMSIS/arm_math.h	462;"	d
__SIMD32_TYPE	CMSIS/arm_math.h	467;"	d
__SIMD32_TYPE	CMSIS/arm_math.h	472;"	d
__SIMD32_TYPE	CMSIS/arm_math.h	477;"	d
__SIMD64	CMSIS/arm_math.h	488;"	d
__SINE__	codec2/sine.h	29;"	d
__SMLAD	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD($/;"	f
__SMLAD	CMSIS/cmsis_armcc.h	843;"	d
__SMLAD	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__SMLAD	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__SMLAD	CMSIS/cmsis_iccarm.h	438;"	d
__SMLADX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX($/;"	f
__SMLADX	CMSIS/cmsis_armcc.h	844;"	d
__SMLADX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__SMLADX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__SMLADX	CMSIS/cmsis_iccarm.h	439;"	d
__SMLALD	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALD($/;"	f
__SMLALD	CMSIS/cmsis_armcc.h	845;"	d
__SMLALD	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint64_t acc)$/;"	f
__SMLALD	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint64_t acc)$/;"	f
__SMLALD	CMSIS/cmsis_iccarm.h	440;"	d
__SMLALDX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALDX($/;"	f
__SMLALDX	CMSIS/cmsis_armcc.h	846;"	d
__SMLALDX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint64_t acc)$/;"	f
__SMLALDX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint64_t acc)$/;"	f
__SMLALDX	CMSIS/cmsis_iccarm.h	441;"	d
__SMLSD	CMSIS/cmsis_armcc.h	849;"	d
__SMLSD	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SMLSD (uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__SMLSD	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SMLSD (uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__SMLSD	CMSIS/cmsis_iccarm.h	444;"	d
__SMLSDX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SMLSDX($/;"	f
__SMLSDX	CMSIS/cmsis_armcc.h	850;"	d
__SMLSDX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SMLSDX (uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__SMLSDX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SMLSDX (uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__SMLSDX	CMSIS/cmsis_iccarm.h	445;"	d
__SMLSLD	CMSIS/cmsis_armcc.h	851;"	d
__SMLSLD	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint64_t __SMLSLD (uint32_t op1, uint32_t op2, uint64_t acc)$/;"	f
__SMLSLD	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint64_t __SMLSLD (uint32_t op1, uint32_t op2, uint64_t acc)$/;"	f
__SMLSLD	CMSIS/cmsis_iccarm.h	446;"	d
__SMLSLDX	CMSIS/cmsis_armcc.h	852;"	d
__SMLSLDX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint64_t __SMLSLDX (uint32_t op1, uint32_t op2, uint64_t acc)$/;"	f
__SMLSLDX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint64_t __SMLSLDX (uint32_t op1, uint32_t op2, uint64_t acc)$/;"	f
__SMLSLDX	CMSIS/cmsis_iccarm.h	447;"	d
__SMMLA	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE int32_t __SMMLA($/;"	f
__SMMLA	CMSIS/cmsis_armcc.h	863;"	d
__SMMLA	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE int32_t __SMMLA (int32_t op1, int32_t op2, int32_t op3)$/;"	f
__SMMLA	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE int32_t __SMMLA (int32_t op1, int32_t op2, int32_t op3)$/;"	f
__SMMLA	CMSIS/cmsis_iccarm.h	437;"	d
__SMUAD	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SMUAD($/;"	f
__SMUAD	CMSIS/cmsis_armcc.h	841;"	d
__SMUAD	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)$/;"	f
__SMUAD	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)$/;"	f
__SMUAD	CMSIS/cmsis_iccarm.h	435;"	d
__SMUADX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX($/;"	f
__SMUADX	CMSIS/cmsis_armcc.h	842;"	d
__SMUADX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)$/;"	f
__SMUADX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)$/;"	f
__SMUADX	CMSIS/cmsis_iccarm.h	436;"	d
__SMUSD	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSD($/;"	f
__SMUSD	CMSIS/cmsis_armcc.h	847;"	d
__SMUSD	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SMUSD  (uint32_t op1, uint32_t op2)$/;"	f
__SMUSD	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SMUSD  (uint32_t op1, uint32_t op2)$/;"	f
__SMUSD	CMSIS/cmsis_iccarm.h	442;"	d
__SMUSDX	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX($/;"	f
__SMUSDX	CMSIS/cmsis_armcc.h	848;"	d
__SMUSDX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SMUSDX (uint32_t op1, uint32_t op2)$/;"	f
__SMUSDX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SMUSDX (uint32_t op1, uint32_t op2)$/;"	f
__SMUSDX	CMSIS/cmsis_iccarm.h	443;"	d
__SSAT	CMSIS/cmsis_armcc.h	/^__attribute__((always_inline)) __STATIC_INLINE int32_t __SSAT(int32_t val, uint32_t sat)$/;"	f
__SSAT	CMSIS/cmsis_armcc.h	649;"	d
__SSAT	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)$/;"	f
__SSAT	CMSIS/cmsis_armclang.h	1009;"	d
__SSAT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)$/;"	f
__SSAT	CMSIS/cmsis_gcc.h	1156;"	d
__SSAT	CMSIS/cmsis_iccarm.h	/^  __STATIC_INLINE int32_t __SSAT(int32_t val, uint32_t sat)$/;"	f
__SSAT	CMSIS/cmsis_iccarm.h	254;"	d
__SSAT	CMSIS/cmsis_iccarm.h	376;"	d
__SSAT	CMSIS/cmsis_iccarm.h	460;"	d
__SSAT	CMSIS/cmsis_iccarm.h	482;"	d
__SSAT16	CMSIS/cmsis_armcc.h	835;"	d
__SSAT16	CMSIS/cmsis_armclang.h	1638;"	d
__SSAT16	CMSIS/cmsis_gcc.h	1847;"	d
__SSAT16	CMSIS/cmsis_iccarm.h	429;"	d
__SSAX	CMSIS/cmsis_armcc.h	827;"	d
__SSAX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)$/;"	f
__SSAX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)$/;"	f
__SSAX	CMSIS/cmsis_iccarm.h	421;"	d
__SSUB16	CMSIS/cmsis_armcc.h	815;"	d
__SSUB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)$/;"	f
__SSUB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)$/;"	f
__SSUB16	CMSIS/cmsis_iccarm.h	409;"	d
__SSUB8	CMSIS/cmsis_armcc.h	803;"	d
__SSUB8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)$/;"	f
__SSUB8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)$/;"	f
__SSUB8	CMSIS/cmsis_iccarm.h	397;"	d
__STATIC_FORCEINLINE	CMSIS/cmsis_armcc.h	62;"	d
__STATIC_FORCEINLINE	CMSIS/cmsis_armclang.h	47;"	d
__STATIC_FORCEINLINE	CMSIS/cmsis_compiler.h	143;"	d
__STATIC_FORCEINLINE	CMSIS/cmsis_compiler.h	208;"	d
__STATIC_FORCEINLINE	CMSIS/cmsis_compiler.h	74;"	d
__STATIC_FORCEINLINE	CMSIS/cmsis_gcc.h	50;"	d
__STATIC_FORCEINLINE	CMSIS/cmsis_iccarm.h	165;"	d
__STATIC_INLINE	CMSIS/cmsis_armcc.h	59;"	d
__STATIC_INLINE	CMSIS/cmsis_armclang.h	44;"	d
__STATIC_INLINE	CMSIS/cmsis_compiler.h	140;"	d
__STATIC_INLINE	CMSIS/cmsis_compiler.h	205;"	d
__STATIC_INLINE	CMSIS/cmsis_compiler.h	71;"	d
__STATIC_INLINE	CMSIS/cmsis_gcc.h	47;"	d
__STATIC_INLINE	CMSIS/cmsis_iccarm.h	157;"	d
__STL	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)$/;"	f
__STL	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)$/;"	f
__STL	CMSIS/cmsis_iccarm.h	/^  __IAR_FT void __STL(uint32_t value, volatile uint32_t *ptr)$/;"	f
__STLB	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)$/;"	f
__STLB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)$/;"	f
__STLB	CMSIS/cmsis_iccarm.h	/^  __IAR_FT void __STLB(uint8_t value, volatile uint8_t *ptr)$/;"	f
__STLEX	CMSIS/cmsis_armclang.h	1316;"	d
__STLEX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)$/;"	f
__STLEX	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)$/;"	f
__STLEXB	CMSIS/cmsis_armclang.h	1294;"	d
__STLEXB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)$/;"	f
__STLEXB	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)$/;"	f
__STLEXH	CMSIS/cmsis_armclang.h	1305;"	d
__STLEXH	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)$/;"	f
__STLEXH	CMSIS/cmsis_iccarm.h	/^  __IAR_FT uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)$/;"	f
__STLH	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)$/;"	f
__STLH	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)$/;"	f
__STLH	CMSIS/cmsis_iccarm.h	/^  __IAR_FT void __STLH(uint16_t value, volatile uint16_t *ptr)$/;"	f
__STRBT	CMSIS/cmsis_armcc.h	711;"	d
__STRBT	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)$/;"	f
__STRBT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)$/;"	f
__STRBT	CMSIS/cmsis_iccarm.h	/^  __IAR_FT void __STRBT(uint8_t value, volatile uint8_t *addr)$/;"	f
__STREXB	CMSIS/cmsis_armcc.h	599;"	d
__STREXB	CMSIS/cmsis_armcc.h	601;"	d
__STREXB	CMSIS/cmsis_armclang.h	961;"	d
__STREXB	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)$/;"	f
__STREXB	CMSIS/cmsis_iccarm.h	379;"	d
__STREXH	CMSIS/cmsis_armcc.h	614;"	d
__STREXH	CMSIS/cmsis_armcc.h	616;"	d
__STREXH	CMSIS/cmsis_armclang.h	972;"	d
__STREXH	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)$/;"	f
__STREXH	CMSIS/cmsis_iccarm.h	380;"	d
__STREXW	CMSIS/cmsis_armcc.h	629;"	d
__STREXW	CMSIS/cmsis_armcc.h	631;"	d
__STREXW	CMSIS/cmsis_armclang.h	983;"	d
__STREXW	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)$/;"	f
__STREXW	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t __STREXW(uint32_t value, uint32_t volatile *ptr)$/;"	f
__STREXW	CMSIS/cmsis_iccarm.h	381;"	d
__STRHT	CMSIS/cmsis_armcc.h	720;"	d
__STRHT	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)$/;"	f
__STRHT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)$/;"	f
__STRHT	CMSIS/cmsis_iccarm.h	/^  __IAR_FT void __STRHT(uint16_t value, volatile uint16_t *addr)$/;"	f
__STRT	CMSIS/cmsis_armcc.h	729;"	d
__STRT	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)$/;"	f
__STRT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)$/;"	f
__STRT	CMSIS/cmsis_iccarm.h	/^  __IAR_FT void __STRT(uint32_t value, volatile uint32_t *addr)$/;"	f
__SX1276_FSK_H__	radio/sx1276-Fsk.h	3;"	d
__SX1276_H__	radio/sx1276.h	3;"	d
__SX1276_LORA_H__	radio/sx1276-LoRa.h	3;"	d
__SXTAB16	CMSIS/cmsis_armcc.h	840;"	d
__SXTAB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)$/;"	f
__SXTAB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)$/;"	f
__SXTAB16	CMSIS/cmsis_iccarm.h	434;"	d
__SXTB16	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t __SXTB16($/;"	f
__SXTB16	CMSIS/cmsis_armcc.h	839;"	d
__SXTB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)$/;"	f
__SXTB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)$/;"	f
__SXTB16	CMSIS/cmsis_iccarm.h	433;"	d
__THREADING_ALT_H__	amazon-freertos/include/threading_alt.h	2;"	d
__TZ_get_BASEPRI_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)$/;"	f
__TZ_get_BASEPRI_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)$/;"	f
__TZ_get_BASEPRI_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t   __TZ_get_BASEPRI_NS(void)$/;"	f
__TZ_get_BASEPRI_NS	CMSIS/cmsis_iccarm.h	339;"	d
__TZ_get_CONTROL_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)$/;"	f
__TZ_get_CONTROL_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)$/;"	f
__TZ_get_CONTROL_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t __TZ_get_CONTROL_NS(void)$/;"	f
__TZ_get_CONTROL_NS	CMSIS/cmsis_iccarm.h	329;"	d
__TZ_get_FAULTMASK_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)$/;"	f
__TZ_get_FAULTMASK_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)$/;"	f
__TZ_get_FAULTMASK_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t   __TZ_get_FAULTMASK_NS(void)$/;"	f
__TZ_get_FAULTMASK_NS	CMSIS/cmsis_iccarm.h	341;"	d
__TZ_get_MSPLIM_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)$/;"	f
__TZ_get_MSPLIM_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)$/;"	f
__TZ_get_MSPLIM_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t   __TZ_get_MSPLIM_NS(void)$/;"	f
__TZ_get_MSPLIM_NS	CMSIS/cmsis_iccarm.h	345;"	d
__TZ_get_MSP_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)$/;"	f
__TZ_get_MSP_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)$/;"	f
__TZ_get_MSP_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t   __TZ_get_MSP_NS(void)$/;"	f
__TZ_get_MSP_NS	CMSIS/cmsis_iccarm.h	333;"	d
__TZ_get_PRIMASK_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)$/;"	f
__TZ_get_PRIMASK_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)$/;"	f
__TZ_get_PRIMASK_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t   __TZ_get_PRIMASK_NS(void)$/;"	f
__TZ_get_PRIMASK_NS	CMSIS/cmsis_iccarm.h	337;"	d
__TZ_get_PSPLIM_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)$/;"	f
__TZ_get_PSPLIM_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)$/;"	f
__TZ_get_PSPLIM_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t   __TZ_get_PSPLIM_NS(void)$/;"	f
__TZ_get_PSPLIM_NS	CMSIS/cmsis_iccarm.h	343;"	d
__TZ_get_PSP_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)$/;"	f
__TZ_get_PSP_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)$/;"	f
__TZ_get_PSP_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t   __TZ_get_PSP_NS(void)$/;"	f
__TZ_get_PSP_NS	CMSIS/cmsis_iccarm.h	331;"	d
__TZ_get_SP_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)$/;"	f
__TZ_get_SP_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)$/;"	f
__TZ_get_SP_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t   __TZ_get_SP_NS(void)$/;"	f
__TZ_get_SP_NS	CMSIS/cmsis_iccarm.h	335;"	d
__TZ_set_BASEPRI_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)$/;"	f
__TZ_set_BASEPRI_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)$/;"	f
__TZ_set_BASEPRI_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_BASEPRI_NS(uint32_t value)$/;"	f
__TZ_set_BASEPRI_NS	CMSIS/cmsis_iccarm.h	340;"	d
__TZ_set_CONTROL_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)$/;"	f
__TZ_set_CONTROL_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)$/;"	f
__TZ_set_CONTROL_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_CONTROL_NS(uint32_t value)$/;"	f
__TZ_set_CONTROL_NS	CMSIS/cmsis_iccarm.h	330;"	d
__TZ_set_FAULTMASK_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)$/;"	f
__TZ_set_FAULTMASK_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)$/;"	f
__TZ_set_FAULTMASK_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_FAULTMASK_NS(uint32_t value)$/;"	f
__TZ_set_FAULTMASK_NS	CMSIS/cmsis_iccarm.h	342;"	d
__TZ_set_MSPLIM_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)$/;"	f
__TZ_set_MSPLIM_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)$/;"	f
__TZ_set_MSPLIM_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_MSPLIM_NS(uint32_t value)$/;"	f
__TZ_set_MSPLIM_NS	CMSIS/cmsis_iccarm.h	346;"	d
__TZ_set_MSP_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)$/;"	f
__TZ_set_MSP_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)$/;"	f
__TZ_set_MSP_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_MSP_NS(uint32_t value)$/;"	f
__TZ_set_MSP_NS	CMSIS/cmsis_iccarm.h	334;"	d
__TZ_set_PRIMASK_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)$/;"	f
__TZ_set_PRIMASK_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)$/;"	f
__TZ_set_PRIMASK_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_PRIMASK_NS(uint32_t value)$/;"	f
__TZ_set_PRIMASK_NS	CMSIS/cmsis_iccarm.h	338;"	d
__TZ_set_PSPLIM_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)$/;"	f
__TZ_set_PSPLIM_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)$/;"	f
__TZ_set_PSPLIM_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_PSPLIM_NS(uint32_t value)$/;"	f
__TZ_set_PSPLIM_NS	CMSIS/cmsis_iccarm.h	344;"	d
__TZ_set_PSP_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)$/;"	f
__TZ_set_PSP_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)$/;"	f
__TZ_set_PSP_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_PSP_NS(uint32_t value)$/;"	f
__TZ_set_PSP_NS	CMSIS/cmsis_iccarm.h	332;"	d
__TZ_set_SP_NS	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)$/;"	f
__TZ_set_SP_NS	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)$/;"	f
__TZ_set_SP_NS	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __TZ_set_SP_NS(uint32_t value)$/;"	f
__TZ_set_SP_NS	CMSIS/cmsis_iccarm.h	336;"	d
__UADD16	CMSIS/cmsis_armcc.h	812;"	d
__UADD16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)$/;"	f
__UADD16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)$/;"	f
__UADD16	CMSIS/cmsis_iccarm.h	406;"	d
__UADD8	CMSIS/cmsis_armcc.h	800;"	d
__UADD8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)$/;"	f
__UADD8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)$/;"	f
__UADD8	CMSIS/cmsis_iccarm.h	394;"	d
__UASX	CMSIS/cmsis_armcc.h	824;"	d
__UASX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)$/;"	f
__UASX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)$/;"	f
__UASX	CMSIS/cmsis_iccarm.h	418;"	d
__UHADD16	CMSIS/cmsis_armcc.h	814;"	d
__UHADD16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)$/;"	f
__UHADD16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)$/;"	f
__UHADD16	CMSIS/cmsis_iccarm.h	408;"	d
__UHADD8	CMSIS/cmsis_armcc.h	802;"	d
__UHADD8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)$/;"	f
__UHADD8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)$/;"	f
__UHADD8	CMSIS/cmsis_iccarm.h	396;"	d
__UHASX	CMSIS/cmsis_armcc.h	826;"	d
__UHASX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)$/;"	f
__UHASX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)$/;"	f
__UHASX	CMSIS/cmsis_iccarm.h	420;"	d
__UHSAX	CMSIS/cmsis_armcc.h	832;"	d
__UHSAX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)$/;"	f
__UHSAX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)$/;"	f
__UHSAX	CMSIS/cmsis_iccarm.h	426;"	d
__UHSUB16	CMSIS/cmsis_armcc.h	820;"	d
__UHSUB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)$/;"	f
__UHSUB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)$/;"	f
__UHSUB16	CMSIS/cmsis_iccarm.h	414;"	d
__UHSUB8	CMSIS/cmsis_armcc.h	808;"	d
__UHSUB8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)$/;"	f
__UHSUB8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)$/;"	f
__UHSUB8	CMSIS/cmsis_iccarm.h	402;"	d
__UNALIGNED_UINT16_READ	CMSIS/cmsis_armcc.h	89;"	d
__UNALIGNED_UINT16_READ	CMSIS/cmsis_armclang.h	89;"	d
__UNALIGNED_UINT16_READ	CMSIS/cmsis_compiler.h	104;"	d
__UNALIGNED_UINT16_READ	CMSIS/cmsis_compiler.h	173;"	d
__UNALIGNED_UINT16_READ	CMSIS/cmsis_compiler.h	240;"	d
__UNALIGNED_UINT16_READ	CMSIS/cmsis_gcc.h	92;"	d
__UNALIGNED_UINT16_READ	CMSIS/cmsis_iccarm.h	176;"	d
__UNALIGNED_UINT16_WRITE	CMSIS/cmsis_armcc.h	86;"	d
__UNALIGNED_UINT16_WRITE	CMSIS/cmsis_armclang.h	81;"	d
__UNALIGNED_UINT16_WRITE	CMSIS/cmsis_compiler.h	100;"	d
__UNALIGNED_UINT16_WRITE	CMSIS/cmsis_compiler.h	169;"	d
__UNALIGNED_UINT16_WRITE	CMSIS/cmsis_compiler.h	236;"	d
__UNALIGNED_UINT16_WRITE	CMSIS/cmsis_gcc.h	84;"	d
__UNALIGNED_UINT16_WRITE	CMSIS/cmsis_iccarm.h	188;"	d
__UNALIGNED_UINT32	CMSIS/cmsis_armcc.h	83;"	d
__UNALIGNED_UINT32	CMSIS/cmsis_armclang.h	73;"	d
__UNALIGNED_UINT32	CMSIS/cmsis_compiler.h	165;"	d
__UNALIGNED_UINT32	CMSIS/cmsis_compiler.h	232;"	d
__UNALIGNED_UINT32	CMSIS/cmsis_compiler.h	96;"	d
__UNALIGNED_UINT32	CMSIS/cmsis_gcc.h	76;"	d
__UNALIGNED_UINT32	CMSIS/cmsis_iccarm.h	218;"	d
__UNALIGNED_UINT32_READ	CMSIS/cmsis_armcc.h	95;"	d
__UNALIGNED_UINT32_READ	CMSIS/cmsis_armclang.h	105;"	d
__UNALIGNED_UINT32_READ	CMSIS/cmsis_compiler.h	112;"	d
__UNALIGNED_UINT32_READ	CMSIS/cmsis_compiler.h	181;"	d
__UNALIGNED_UINT32_READ	CMSIS/cmsis_compiler.h	248;"	d
__UNALIGNED_UINT32_READ	CMSIS/cmsis_gcc.h	108;"	d
__UNALIGNED_UINT32_READ	CMSIS/cmsis_iccarm.h	199;"	d
__UNALIGNED_UINT32_WRITE	CMSIS/cmsis_armcc.h	92;"	d
__UNALIGNED_UINT32_WRITE	CMSIS/cmsis_armclang.h	97;"	d
__UNALIGNED_UINT32_WRITE	CMSIS/cmsis_compiler.h	108;"	d
__UNALIGNED_UINT32_WRITE	CMSIS/cmsis_compiler.h	177;"	d
__UNALIGNED_UINT32_WRITE	CMSIS/cmsis_compiler.h	244;"	d
__UNALIGNED_UINT32_WRITE	CMSIS/cmsis_gcc.h	100;"	d
__UNALIGNED_UINT32_WRITE	CMSIS/cmsis_iccarm.h	210;"	d
__UQADD16	CMSIS/cmsis_armcc.h	813;"	d
__UQADD16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)$/;"	f
__UQADD16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)$/;"	f
__UQADD16	CMSIS/cmsis_iccarm.h	407;"	d
__UQADD8	CMSIS/cmsis_armcc.h	801;"	d
__UQADD8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)$/;"	f
__UQADD8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)$/;"	f
__UQADD8	CMSIS/cmsis_iccarm.h	395;"	d
__UQASX	CMSIS/cmsis_armcc.h	825;"	d
__UQASX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)$/;"	f
__UQASX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)$/;"	f
__UQASX	CMSIS/cmsis_iccarm.h	419;"	d
__UQSAX	CMSIS/cmsis_armcc.h	831;"	d
__UQSAX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)$/;"	f
__UQSAX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)$/;"	f
__UQSAX	CMSIS/cmsis_iccarm.h	425;"	d
__UQSUB16	CMSIS/cmsis_armcc.h	819;"	d
__UQSUB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)$/;"	f
__UQSUB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)$/;"	f
__UQSUB16	CMSIS/cmsis_iccarm.h	413;"	d
__UQSUB8	CMSIS/cmsis_armcc.h	807;"	d
__UQSUB8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)$/;"	f
__UQSUB8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)$/;"	f
__UQSUB8	CMSIS/cmsis_iccarm.h	401;"	d
__USAD8	CMSIS/cmsis_armcc.h	833;"	d
__USAD8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)$/;"	f
__USAD8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)$/;"	f
__USAD8	CMSIS/cmsis_iccarm.h	427;"	d
__USADA8	CMSIS/cmsis_armcc.h	834;"	d
__USADA8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__USADA8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)$/;"	f
__USADA8	CMSIS/cmsis_iccarm.h	428;"	d
__USAT	CMSIS/cmsis_armcc.h	/^__attribute__((always_inline)) __STATIC_INLINE uint32_t __USAT(int32_t val, uint32_t sat)$/;"	f
__USAT	CMSIS/cmsis_armcc.h	659;"	d
__USAT	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)$/;"	f
__USAT	CMSIS/cmsis_armclang.h	1019;"	d
__USAT	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)$/;"	f
__USAT	CMSIS/cmsis_gcc.h	1172;"	d
__USAT	CMSIS/cmsis_iccarm.h	/^  __STATIC_INLINE uint32_t __USAT(int32_t val, uint32_t sat)$/;"	f
__USAT	CMSIS/cmsis_iccarm.h	257;"	d
__USAT	CMSIS/cmsis_iccarm.h	384;"	d
__USAT	CMSIS/cmsis_iccarm.h	461;"	d
__USAT	CMSIS/cmsis_iccarm.h	483;"	d
__USAT16	CMSIS/cmsis_armcc.h	836;"	d
__USAT16	CMSIS/cmsis_armclang.h	1645;"	d
__USAT16	CMSIS/cmsis_gcc.h	1854;"	d
__USAT16	CMSIS/cmsis_iccarm.h	430;"	d
__USAX	CMSIS/cmsis_armcc.h	830;"	d
__USAX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)$/;"	f
__USAX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)$/;"	f
__USAX	CMSIS/cmsis_iccarm.h	424;"	d
__USB_DEVICE_AUDIO_H__	usb/device/class/usb_device_audio.h	10;"	d
__USB_DEVICE_CCID_H__	usb/device/class/usb_device_ccid.h	10;"	d
__USB_DEVICE_CH9_H__	usb/device/source/usb_device_ch9.h	10;"	d
__USB_DEVICE_CLASS_H__	usb/device/class/usb_device_class.h	10;"	d
__USB_DEVICE_DCI_H__	usb/device/source/usb_device_dci.h	10;"	d
__USB_DEVICE_EHCI_H__	usb/device/source/ehci/usb_device_ehci.h	10;"	d
__USB_DEVICE_HID_H__	usb/device/class/usb_device_hid.h	10;"	d
__USB_DEVICE_H__	usb/device/include/usb_device.h	10;"	d
__USB_DEVICE_KHCI_H__	usb/device/source/khci/usb_device_khci.h	10;"	d
__USB_DEVICE_LPC3511IP_H__	usb/device/source/lpcip3511/usb_device_lpcip3511.h	10;"	d
__USB_DEVICE_MSC_H__	usb/device/class/usb_device_msc.h	10;"	d
__USB_DEVICE_PRINTER_H__	usb/device/class/usb_device_printer.h	10;"	d
__USB_DEVICE_VIDEO_H__	usb/device/class/usb_device_video.h	10;"	d
__USB_H__	usb/include/usb.h	10;"	d
__USB_MISC_H__	usb/include/usb_misc.h	10;"	d
__USB_OSA_FREERTOS_H__	osa/usb_osa_freertos.h	10;"	d
__USB_OSA_H__	osa/usb_osa.h	10;"	d
__USB_PHY_H__	usb/phy/usb_phy.h	9;"	d
__USB_SPEC_H__	usb/include/usb_spec.h	10;"	d
__USED	CMSIS/cmsis_armcc.h	68;"	d
__USED	CMSIS/cmsis_armclang.h	53;"	d
__USED	CMSIS/cmsis_compiler.h	149;"	d
__USED	CMSIS/cmsis_compiler.h	216;"	d
__USED	CMSIS/cmsis_compiler.h	80;"	d
__USED	CMSIS/cmsis_gcc.h	56;"	d
__USED	CMSIS/cmsis_iccarm.h	223;"	d
__USED	CMSIS/cmsis_iccarm.h	225;"	d
__USUB16	CMSIS/cmsis_armcc.h	818;"	d
__USUB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)$/;"	f
__USUB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)$/;"	f
__USUB16	CMSIS/cmsis_iccarm.h	412;"	d
__USUB8	CMSIS/cmsis_armcc.h	806;"	d
__USUB8	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)$/;"	f
__USUB8	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)$/;"	f
__USUB8	CMSIS/cmsis_iccarm.h	400;"	d
__UXTAB16	CMSIS/cmsis_armcc.h	838;"	d
__UXTAB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)$/;"	f
__UXTAB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)$/;"	f
__UXTAB16	CMSIS/cmsis_iccarm.h	432;"	d
__UXTB16	CMSIS/cmsis_armcc.h	837;"	d
__UXTB16	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)$/;"	f
__UXTB16	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)$/;"	f
__UXTB16	CMSIS/cmsis_iccarm.h	431;"	d
__VARICODE__	codec2/varicode.h	23;"	d
__VECTOR_RAM	drivers/fsl_common.c	35;"	d	file:
__VECTOR_TABLE	drivers/fsl_common.c	34;"	d	file:
__VTOR_PRESENT	CMSIS/core_armv8mbl.h	156;"	d
__Vendor_SysTickConfig	CMSIS/core_armv8mbl.h	166;"	d
__Vendor_SysTickConfig	CMSIS/core_armv8mml.h	257;"	d
__Vendor_SysTickConfig	CMSIS/core_cm4.h	203;"	d
__Vendor_SysTickConfig	device/LPC54018.h	163;"	d
__WEAK	CMSIS/cmsis_armcc.h	71;"	d
__WEAK	CMSIS/cmsis_armclang.h	56;"	d
__WEAK	CMSIS/cmsis_compiler.h	152;"	d
__WEAK	CMSIS/cmsis_compiler.h	219;"	d
__WEAK	CMSIS/cmsis_compiler.h	83;"	d
__WEAK	CMSIS/cmsis_gcc.h	59;"	d
__WEAK	CMSIS/cmsis_iccarm.h	231;"	d
__WEAK	CMSIS/cmsis_iccarm.h	233;"	d
__WFE	CMSIS/cmsis_armcc.h	407;"	d
__WFE	CMSIS/cmsis_armclang.h	816;"	d
__WFE	CMSIS/cmsis_gcc.h	853;"	d
__WFE	CMSIS/cmsis_iccarm.h	387;"	d
__WFI	CMSIS/cmsis_armcc.h	399;"	d
__WFI	CMSIS/cmsis_armclang.h	808;"	d
__WFI	CMSIS/cmsis_gcc.h	845;"	d
__WFI	CMSIS/cmsis_iccarm.h	388;"	d
__XXXXXX	emwin/emWin_header/GUI.h	2295;"	d
__XXXXX_	emwin/emWin_header/GUI.h	2294;"	d
__XXXX_X	emwin/emWin_header/GUI.h	2293;"	d
__XXXX__	emwin/emWin_header/GUI.h	2292;"	d
__XXX_XX	emwin/emWin_header/GUI.h	2291;"	d
__XXX_X_	emwin/emWin_header/GUI.h	2290;"	d
__XXX__X	emwin/emWin_header/GUI.h	2289;"	d
__XXX___	emwin/emWin_header/GUI.h	2288;"	d
__XX_XXX	emwin/emWin_header/GUI.h	2287;"	d
__XX_XX_	emwin/emWin_header/GUI.h	2286;"	d
__XX_X_X	emwin/emWin_header/GUI.h	2285;"	d
__XX_X__	emwin/emWin_header/GUI.h	2284;"	d
__XX__XX	emwin/emWin_header/GUI.h	2283;"	d
__XX__X_	emwin/emWin_header/GUI.h	2282;"	d
__XX___X	emwin/emWin_header/GUI.h	2281;"	d
__XX____	emwin/emWin_header/GUI.h	2280;"	d
__X_XXXX	emwin/emWin_header/GUI.h	2279;"	d
__X_XXX_	emwin/emWin_header/GUI.h	2278;"	d
__X_XX_X	emwin/emWin_header/GUI.h	2277;"	d
__X_XX__	emwin/emWin_header/GUI.h	2276;"	d
__X_X_XX	emwin/emWin_header/GUI.h	2275;"	d
__X_X_X_	emwin/emWin_header/GUI.h	2274;"	d
__X_X__X	emwin/emWin_header/GUI.h	2273;"	d
__X_X___	emwin/emWin_header/GUI.h	2272;"	d
__X__XXX	emwin/emWin_header/GUI.h	2271;"	d
__X__XX_	emwin/emWin_header/GUI.h	2270;"	d
__X__X_X	emwin/emWin_header/GUI.h	2269;"	d
__X__X__	emwin/emWin_header/GUI.h	2268;"	d
__X___XX	emwin/emWin_header/GUI.h	2267;"	d
__X___X_	emwin/emWin_header/GUI.h	2266;"	d
__X____X	emwin/emWin_header/GUI.h	2265;"	d
__X_____	emwin/emWin_header/GUI.h	2264;"	d
___XXXXX	emwin/emWin_header/GUI.h	2263;"	d
___XXXX_	emwin/emWin_header/GUI.h	2262;"	d
___XXX_X	emwin/emWin_header/GUI.h	2261;"	d
___XXX__	emwin/emWin_header/GUI.h	2260;"	d
___XX_XX	emwin/emWin_header/GUI.h	2259;"	d
___XX_X_	emwin/emWin_header/GUI.h	2258;"	d
___XX__X	emwin/emWin_header/GUI.h	2257;"	d
___XX___	emwin/emWin_header/GUI.h	2256;"	d
___X_XXX	emwin/emWin_header/GUI.h	2255;"	d
___X_XX_	emwin/emWin_header/GUI.h	2254;"	d
___X_X_X	emwin/emWin_header/GUI.h	2253;"	d
___X_X__	emwin/emWin_header/GUI.h	2252;"	d
___X__XX	emwin/emWin_header/GUI.h	2251;"	d
___X__X_	emwin/emWin_header/GUI.h	2250;"	d
___X___X	emwin/emWin_header/GUI.h	2249;"	d
___X____	emwin/emWin_header/GUI.h	2248;"	d
____XXXX	emwin/emWin_header/GUI.h	2247;"	d
____XXX_	emwin/emWin_header/GUI.h	2246;"	d
____XX_X	emwin/emWin_header/GUI.h	2245;"	d
____XX__	emwin/emWin_header/GUI.h	2244;"	d
____X_XX	emwin/emWin_header/GUI.h	2243;"	d
____X_X_	emwin/emWin_header/GUI.h	2242;"	d
____X__X	emwin/emWin_header/GUI.h	2241;"	d
____X___	emwin/emWin_header/GUI.h	2240;"	d
_____XXX	emwin/emWin_header/GUI.h	2239;"	d
_____XX_	emwin/emWin_header/GUI.h	2238;"	d
_____X_X	emwin/emWin_header/GUI.h	2237;"	d
_____X__	emwin/emWin_header/GUI.h	2236;"	d
______XX	emwin/emWin_header/GUI.h	2235;"	d
______X_	emwin/emWin_header/GUI.h	2234;"	d
_______X	emwin/emWin_header/GUI.h	2233;"	d
________	emwin/emWin_header/GUI.h	2232;"	d
__aeabi_assert	utilities/fsl_assert.c	/^void __aeabi_assert(const char *failedExpr, const char *file, int line)$/;"	f
__arm_rsr	CMSIS/cmsis_iccarm.h	266;"	d
__arm_wsr	CMSIS/cmsis_iccarm.h	267;"	d
__assert_func	utilities/fsl_assert.c	/^void __assert_func(const char *file, int line, const char *func, const char *failedExpr)$/;"	f
__disable_fault_irq	CMSIS/cmsis_armcc.h	273;"	d
__disable_fault_irq	CMSIS/cmsis_armclang.h	438;"	d
__disable_fault_irq	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __disable_fault_irq(void)$/;"	f
__disable_fault_irq	CMSIS/cmsis_iccarm.h	262;"	d
__disable_fault_irq	CMSIS/cmsis_iccarm.h	572;"	d
__disable_irq	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __disable_irq(void)$/;"	f
__disable_irq	CMSIS/cmsis_iccarm.h	263;"	d
__disable_irq	CMSIS/cmsis_iccarm.h	536;"	d
__enable_fault_irq	CMSIS/cmsis_armcc.h	265;"	d
__enable_fault_irq	CMSIS/cmsis_armclang.h	430;"	d
__enable_fault_irq	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __enable_fault_irq(void)$/;"	f
__enable_fault_irq	CMSIS/cmsis_iccarm.h	264;"	d
__enable_fault_irq	CMSIS/cmsis_iccarm.h	571;"	d
__enable_irq	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __enable_irq(void)$/;"	f
__enable_irq	CMSIS/cmsis_iccarm.h	265;"	d
__enable_irq	CMSIS/cmsis_iccarm.h	535;"	d
__get_APSR	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_APSR(void)$/;"	f
__get_APSR	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_APSR(void)$/;"	f
__get_APSR	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_APSR(void)$/;"	f
__get_APSR	CMSIS/cmsis_iccarm.h	/^    __STATIC_INLINE  uint32_t __get_APSR(void)$/;"	f
__get_APSR	CMSIS/cmsis_iccarm.h	270;"	d
__get_APSR	CMSIS/cmsis_iccarm.h	463;"	d
__get_APSR	CMSIS/cmsis_iccarm.h	485;"	d
__get_BASEPRI	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t  __get_BASEPRI(void)$/;"	f
__get_BASEPRI	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)$/;"	f
__get_BASEPRI	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)$/;"	f
__get_BASEPRI	CMSIS/cmsis_iccarm.h	271;"	d
__get_CONTROL	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_CONTROL(void)$/;"	f
__get_CONTROL	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_CONTROL(void)$/;"	f
__get_CONTROL	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_CONTROL(void)$/;"	f
__get_CONTROL	CMSIS/cmsis_iccarm.h	272;"	d
__get_FAULTMASK	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_FAULTMASK(void)$/;"	f
__get_FAULTMASK	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)$/;"	f
__get_FAULTMASK	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)$/;"	f
__get_FAULTMASK	CMSIS/cmsis_iccarm.h	273;"	d
__get_FPSCR	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_FPSCR(void)$/;"	f
__get_FPSCR	CMSIS/cmsis_armclang.h	756;"	d
__get_FPSCR	CMSIS/cmsis_armclang.h	758;"	d
__get_FPSCR	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_FPSCR(void)$/;"	f
__get_FPSCR	CMSIS/cmsis_iccarm.h	277;"	d
__get_FPSCR	CMSIS/cmsis_iccarm.h	280;"	d
__get_FPSCR	CMSIS/cmsis_iccarm.h	469;"	d
__get_FPSCR	CMSIS/cmsis_iccarm.h	526;"	d
__get_FPSCR	CMSIS/cmsis_iccarm.h	528;"	d
__get_IPSR	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_IPSR(void)$/;"	f
__get_IPSR	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_IPSR(void)$/;"	f
__get_IPSR	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_IPSR(void)$/;"	f
__get_IPSR	CMSIS/cmsis_iccarm.h	284;"	d
__get_MSP	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_MSP(void)$/;"	f
__get_MSP	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_MSP(void)$/;"	f
__get_MSP	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_MSP(void)$/;"	f
__get_MSP	CMSIS/cmsis_iccarm.h	285;"	d
__get_MSPLIM	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)$/;"	f
__get_MSPLIM	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)$/;"	f
__get_MSPLIM	CMSIS/cmsis_iccarm.h	/^   __IAR_FT uint32_t __get_MSPLIM(void)$/;"	f
__get_MSPLIM	CMSIS/cmsis_iccarm.h	289;"	d
__get_MSPLIM	CMSIS/cmsis_iccarm.h	291;"	d
__get_PRIMASK	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_PRIMASK(void)$/;"	f
__get_PRIMASK	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)$/;"	f
__get_PRIMASK	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)$/;"	f
__get_PRIMASK	CMSIS/cmsis_iccarm.h	293;"	d
__get_PSP	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_PSP(void)$/;"	f
__get_PSP	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_PSP(void)$/;"	f
__get_PSP	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_PSP(void)$/;"	f
__get_PSP	CMSIS/cmsis_iccarm.h	294;"	d
__get_PSPLIM	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)$/;"	f
__get_PSPLIM	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)$/;"	f
__get_PSPLIM	CMSIS/cmsis_iccarm.h	/^    __IAR_FT uint32_t __get_PSPLIM(void)$/;"	f
__get_PSPLIM	CMSIS/cmsis_iccarm.h	299;"	d
__get_PSPLIM	CMSIS/cmsis_iccarm.h	301;"	d
__get_xPSR	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE uint32_t __get_xPSR(void)$/;"	f
__get_xPSR	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE uint32_t __get_xPSR(void)$/;"	f
__get_xPSR	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE uint32_t __get_xPSR(void)$/;"	f
__get_xPSR	CMSIS/cmsis_iccarm.h	304;"	d
__get_xPSR	CMSIS/cmsis_iccarm.h	539;"	d
__has_builtin	CMSIS/cmsis_gcc.h	36;"	d
__iar_u32	CMSIS/cmsis_iccarm.h	/^__packed struct  __iar_u32 { uint32_t v; };$/;"	s
__iar_uint16_read	CMSIS/cmsis_iccarm.h	/^__IAR_FT uint16_t __iar_uint16_read(void const *ptr)$/;"	f
__iar_uint16_write	CMSIS/cmsis_iccarm.h	/^__IAR_FT void __iar_uint16_write(void const *ptr, uint16_t val)$/;"	f
__iar_uint32_read	CMSIS/cmsis_iccarm.h	/^__IAR_FT uint32_t __iar_uint32_read(void const *ptr)$/;"	f
__iar_uint32_write	CMSIS/cmsis_iccarm.h	/^__IAR_FT void __iar_uint32_write(void const *ptr, uint32_t val)$/;"	f
__read	utilities/fsl_debug_console.c	/^size_t __read(int handle, unsigned char *buffer, size_t size)$/;"	f
__read	utilities/fsl_debug_console.c	935;"	d	file:
__set_BASEPRI	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE void __set_BASEPRI(uint32_t basePri)$/;"	f
__set_BASEPRI	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)$/;"	f
__set_BASEPRI	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)$/;"	f
__set_BASEPRI	CMSIS/cmsis_iccarm.h	306;"	d
__set_BASEPRI_MAX	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)$/;"	f
__set_BASEPRI_MAX	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)$/;"	f
__set_BASEPRI_MAX	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)$/;"	f
__set_BASEPRI_MAX	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void __set_BASEPRI_MAX(uint32_t value)$/;"	f
__set_BASEPRI_MAX	CMSIS/cmsis_iccarm.h	307;"	d
__set_CONTROL	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE void __set_CONTROL(uint32_t control)$/;"	f
__set_CONTROL	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)$/;"	f
__set_CONTROL	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)$/;"	f
__set_CONTROL	CMSIS/cmsis_iccarm.h	308;"	d
__set_FAULTMASK	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)$/;"	f
__set_FAULTMASK	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)$/;"	f
__set_FAULTMASK	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)$/;"	f
__set_FAULTMASK	CMSIS/cmsis_iccarm.h	309;"	d
__set_FPSCR	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE void __set_FPSCR(uint32_t fpscr)$/;"	f
__set_FPSCR	CMSIS/cmsis_armclang.h	768;"	d
__set_FPSCR	CMSIS/cmsis_armclang.h	770;"	d
__set_FPSCR	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)$/;"	f
__set_FPSCR	CMSIS/cmsis_iccarm.h	278;"	d
__set_FPSCR	CMSIS/cmsis_iccarm.h	281;"	d
__set_FPSCR	CMSIS/cmsis_iccarm.h	470;"	d
__set_FPSCR	CMSIS/cmsis_iccarm.h	527;"	d
__set_FPSCR	CMSIS/cmsis_iccarm.h	529;"	d
__set_MSP	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)$/;"	f
__set_MSP	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)$/;"	f
__set_MSP	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)$/;"	f
__set_MSP	CMSIS/cmsis_iccarm.h	310;"	d
__set_MSPLIM	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)$/;"	f
__set_MSPLIM	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)$/;"	f
__set_MSPLIM	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __set_MSPLIM(uint32_t value)$/;"	f
__set_MSPLIM	CMSIS/cmsis_iccarm.h	315;"	d
__set_MSPLIM	CMSIS/cmsis_iccarm.h	317;"	d
__set_PRIMASK	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE void __set_PRIMASK(uint32_t priMask)$/;"	f
__set_PRIMASK	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)$/;"	f
__set_PRIMASK	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)$/;"	f
__set_PRIMASK	CMSIS/cmsis_iccarm.h	319;"	d
__set_PSP	CMSIS/cmsis_armcc.h	/^__STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)$/;"	f
__set_PSP	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)$/;"	f
__set_PSP	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)$/;"	f
__set_PSP	CMSIS/cmsis_iccarm.h	320;"	d
__set_PSPLIM	CMSIS/cmsis_armclang.h	/^__STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)$/;"	f
__set_PSPLIM	CMSIS/cmsis_gcc.h	/^__STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)$/;"	f
__set_PSPLIM	CMSIS/cmsis_iccarm.h	/^    __IAR_FT void   __set_PSPLIM(uint32_t value)$/;"	f
__set_PSPLIM	CMSIS/cmsis_iccarm.h	324;"	d
__set_PSPLIM	CMSIS/cmsis_iccarm.h	326;"	d
__stdin	utilities/fsl_debug_console.c	/^FILE __stdin;$/;"	v
__stdin	utilities/fsl_debug_console.c	1015;"	d	file:
__stdout	utilities/fsl_debug_console.c	/^FILE __stdout;$/;"	v
__stdout	utilities/fsl_debug_console.c	1014;"	d	file:
__sys_readc	utilities/fsl_debug_console.c	/^int __attribute__((weak)) __sys_readc(void)$/;"	f
__sys_write	utilities/fsl_debug_console.c	/^int __attribute__((weak)) __sys_write(int handle, char *buffer, int size)$/;"	f
__write	utilities/fsl_debug_console.c	/^size_t __write(int handle, const unsigned char *buffer, size_t size)$/;"	f
__write	utilities/fsl_debug_console.c	911;"	d	file:
_async_clock_src	drivers/fsl_clock.h	/^typedef enum _async_clock_src$/;"	g
_clock_attach_id	drivers/fsl_clock.h	/^typedef enum _clock_attach_id$/;"	g
_clock_div_name	drivers/fsl_clock.h	/^typedef enum _clock_div_name$/;"	g
_clock_ip_name	drivers/fsl_clock.h	/^typedef enum _clock_ip_name$/;"	g
_clock_name	drivers/fsl_clock.h	/^typedef enum _clock_name$/;"	g
_clock_usb_src	drivers/fsl_clock.h	/^typedef enum _clock_usb_src$/;"	g
_cmsis_i2c_dma_driver_state	drivers/fsl_i2c_cmsis.c	/^typedef struct _cmsis_i2c_dma_driver_state$/;"	s	file:
_cmsis_i2c_dma_resource	drivers/fsl_i2c_cmsis.c	/^typedef const struct _cmsis_i2c_dma_resource$/;"	s	file:
_cmsis_i2c_handle	drivers/fsl_i2c_cmsis.c	/^typedef union _cmsis_i2c_handle$/;"	u	file:
_cmsis_i2c_interrupt_driver_state	drivers/fsl_i2c_cmsis.c	/^typedef struct _cmsis_i2c_interrupt_driver_state$/;"	s	file:
_cmsis_i2c_resource	drivers/fsl_i2c_cmsis.c	/^typedef const struct _cmsis_i2c_resource$/;"	s	file:
_cmsis_spi_dma_driver_state	drivers/fsl_spi_cmsis.c	/^typedef struct _cmsis_spi_dma_driver_state$/;"	s	file:
_cmsis_spi_dma_handle	drivers/fsl_spi_cmsis.c	/^typedef union _cmsis_spi_dma_handle$/;"	u	file:
_cmsis_spi_dma_resource	drivers/fsl_spi_cmsis.c	/^typedef const struct _cmsis_spi_dma_resource$/;"	s	file:
_cmsis_spi_handle	drivers/fsl_spi_cmsis.c	/^typedef union _cmsis_spi_handle$/;"	u	file:
_cmsis_spi_interrupt_driver_state	drivers/fsl_spi_cmsis.c	/^typedef struct _cmsis_spi_interrupt_driver_state$/;"	s	file:
_cmsis_spi_resource	drivers/fsl_spi_cmsis.c	/^typedef const struct _cmsis_spi_resource$/;"	s	file:
_codec_audio_bit_width	codec/fsl_codec_common.h	/^enum _codec_audio_bit_width$/;"	g
_codec_audio_protocol	codec/fsl_codec_common.h	/^typedef enum _codec_audio_protocol$/;"	g
_codec_audio_sample_rate	codec/fsl_codec_common.h	/^enum _codec_audio_sample_rate$/;"	g
_codec_capability	codec/fsl_codec_common.h	/^typedef struct _codec_capability$/;"	s
_codec_capability_flag	codec/fsl_codec_common.h	/^enum _codec_capability_flag$/;"	g
_codec_config	codec/fsl_codec_common.h	/^typedef struct _codec_config$/;"	s
_codec_i2c_config	codec/fsl_codec_i2c.h	/^typedef struct _codec_i2c_config$/;"	s
_codec_module	codec/fsl_codec_common.h	/^typedef enum _codec_module$/;"	g
_codec_module_ctrl_cmd	codec/fsl_codec_common.h	/^typedef enum _codec_module_ctrl_cmd$/;"	g
_codec_module_ctrl_i2s_in_interface	codec/fsl_codec_common.h	/^enum _codec_module_ctrl_i2s_in_interface$/;"	g
_codec_play_channel	codec/fsl_codec_common.h	/^enum _codec_play_channel$/;"	g
_codec_play_source	codec/fsl_codec_common.h	/^enum _codec_play_source$/;"	g
_codec_record_source	codec/fsl_codec_common.h	/^enum _codec_record_source$/;"	g
_codec_reg_addr	codec/fsl_codec_i2c.h	/^typedef enum _codec_reg_addr$/;"	g
_codec_reg_width	codec/fsl_codec_i2c.h	/^typedef enum _codec_reg_width$/;"	g
_codec_reocrd_channel	codec/fsl_codec_common.h	/^enum _codec_reocrd_channel$/;"	g
_codec_status	codec/fsl_codec_common.h	/^enum _codec_status$/;"	g
_codec_type	codec/fsl_codec_adapter.h	/^enum _codec_type$/;"	g
_compensation	drivers/fsl_dmic.h	/^typedef enum _compensation$/;"	g
_ctimer_capture_channel	drivers/fsl_ctimer.h	/^typedef enum _ctimer_capture_channel$/;"	g
_ctimer_capture_edge	drivers/fsl_ctimer.h	/^typedef enum _ctimer_capture_edge$/;"	g
_ctimer_config	drivers/fsl_ctimer.h	/^typedef struct _ctimer_config$/;"	s
_ctimer_interrupt_enable	drivers/fsl_ctimer.h	/^typedef enum _ctimer_interrupt_enable$/;"	g
_ctimer_match	drivers/fsl_ctimer.h	/^typedef enum _ctimer_match$/;"	g
_ctimer_match_config	drivers/fsl_ctimer.h	/^typedef struct _ctimer_match_config$/;"	s
_ctimer_match_output_control	drivers/fsl_ctimer.h	/^typedef enum _ctimer_match_output_control$/;"	g
_ctimer_status_flags	drivers/fsl_ctimer.h	/^typedef enum _ctimer_status_flags$/;"	g
_ctimer_timer_mode	drivers/fsl_ctimer.h	/^typedef enum _ctimer_timer_mode$/;"	g
_dc_removal	drivers/fsl_dmic.h	/^typedef enum _dc_removal$/;"	g
_debug_console_state_struct	utilities/fsl_debug_console.c	/^typedef struct _debug_console_state_struct$/;"	s	file:
_debug_console_write_ring_buffer	utilities/fsl_debug_console.c	/^typedef struct _debug_console_write_ring_buffer$/;"	s	file:
_debugconsole_printf_flag	utilities/fsl_str.c	/^enum _debugconsole_printf_flag$/;"	g	file:
_debugconsole_scanf_flag	utilities/fsl_str.c	/^enum _debugconsole_scanf_flag$/;"	g	file:
_dma_addr_interleave_size	drivers/fsl_dma.h	/^enum _dma_addr_interleave_size$/;"	g
_dma_burst_size	drivers/fsl_dma.h	/^enum _dma_burst_size$/;"	g
_dma_burst_wrap	drivers/fsl_dma.h	/^typedef enum _dma_burst_wrap$/;"	g
_dma_channel_config	drivers/fsl_dma.h	/^typedef struct _dma_channel_config$/;"	s
_dma_channel_trigger	drivers/fsl_dma.h	/^typedef struct _dma_channel_trigger$/;"	s
_dma_descriptor	drivers/fsl_dma.h	/^typedef struct _dma_descriptor$/;"	s
_dma_handle	drivers/fsl_dma.h	/^typedef struct _dma_handle$/;"	s
_dma_int	drivers/fsl_dma.h	/^typedef enum _dma_int$/;"	g
_dma_priority	drivers/fsl_dma.h	/^typedef enum _dma_priority$/;"	g
_dma_request_source	device/LPC54018.h	/^typedef enum _dma_request_source$/;"	g
_dma_transfer_config	drivers/fsl_dma.h	/^typedef struct _dma_transfer_config$/;"	s
_dma_transfer_status	drivers/fsl_dma.h	/^enum _dma_transfer_status$/;"	g
_dma_transfer_type	drivers/fsl_dma.h	/^typedef enum _dma_transfer_type$/;"	g
_dma_transfer_width	drivers/fsl_dma.h	/^enum _dma_transfer_width$/;"	g
_dma_trigger_burst	drivers/fsl_dma.h	/^typedef enum _dma_trigger_burst$/;"	g
_dma_trigger_type	drivers/fsl_dma.h	/^typedef enum _dma_trigger_type$/;"	g
_dma_xfercfg	drivers/fsl_dma.h	/^typedef struct _dma_xfercfg$/;"	s
_dmic_channel	drivers/fsl_dmic.h	/^typedef enum _dmic_channel$/;"	g
_dmic_channel_config	drivers/fsl_dmic.h	/^typedef struct _dmic_channel_config$/;"	s
_dmic_channel_mask	drivers/fsl_dmic.h	/^enum _dmic_channel_mask$/;"	g
_dmic_dma_handle	drivers/fsl_dmic_dma.h	/^struct _dmic_dma_handle$/;"	s
_dmic_dma_states_t	drivers/fsl_dmic_dma.c	/^enum _dmic_dma_states_t$/;"	g	file:
_dmic_io	drivers/fsl_dmic.h	/^typedef enum _dmic_io$/;"	g
_dmic_phy_sample_rate	drivers/fsl_dmic.h	/^typedef enum _dmic_phy_sample_rate$/;"	g
_dmic_status	drivers/fsl_dmic.h	/^enum _dmic_status$/;"	g
_dmic_transfer	drivers/fsl_dmic_dma.h	/^typedef struct _dmic_transfer$/;"	s
_emc_basic_config	drivers/fsl_emc.h	/^typedef struct _emc_basic_config$/;"	s
_emc_dynamic_chip_config	drivers/fsl_emc.h	/^typedef struct _emc_dynamic_chip_config$/;"	s
_emc_dynamic_device	drivers/fsl_emc.h	/^typedef enum _emc_dynamic_device$/;"	g
_emc_dynamic_read	drivers/fsl_emc.h	/^typedef enum _emc_dynamic_read$/;"	g
_emc_dynamic_timing_config	drivers/fsl_emc.h	/^typedef struct _emc_dynamic_timing_config$/;"	s
_emc_endian_mode	drivers/fsl_emc.h	/^typedef enum _emc_endian_mode$/;"	g
_emc_fbclk_src	drivers/fsl_emc.h	/^typedef enum _emc_fbclk_src$/;"	g
_emc_static_chip_config	drivers/fsl_emc.h	/^typedef struct _emc_static_chip_config$/;"	s
_emc_static_memwidth	drivers/fsl_emc.h	/^typedef enum _emc_static_memwidth$/;"	g
_emc_static_special_config	drivers/fsl_emc.h	/^typedef enum _emc_static_special_config$/;"	g
_enet_buffer_config	drivers/fsl_enet.h	/^typedef struct _enet_buffer_config$/;"	s
_enet_config	drivers/fsl_enet.h	/^typedef struct _enet_config$/;"	s
_enet_desc_flag	drivers/fsl_enet.h	/^typedef enum _enet_desc_flag$/;"	g
_enet_dma_burstlen	drivers/fsl_enet.h	/^typedef enum _enet_dma_burstlen$/;"	g
_enet_dma_interrupt_enable	drivers/fsl_enet.h	/^typedef enum _enet_dma_interrupt_enable$/;"	g
_enet_dma_tx_sche	drivers/fsl_enet.h	/^typedef enum _enet_dma_tx_sche$/;"	g
_enet_event	drivers/fsl_enet.h	/^typedef enum _enet_event$/;"	g
_enet_handle	drivers/fsl_enet.h	/^struct _enet_handle$/;"	s
_enet_mac_interrupt_enable	drivers/fsl_enet.h	/^typedef enum _enet_mac_interrupt_enable$/;"	g
_enet_mii_duplex	drivers/fsl_enet.h	/^typedef enum _enet_mii_duplex$/;"	g
_enet_mii_mode	drivers/fsl_enet.h	/^typedef enum _enet_mii_mode$/;"	g
_enet_mii_normal_opcode	drivers/fsl_enet.h	/^typedef enum _enet_mii_normal_opcode$/;"	g
_enet_mii_speed	drivers/fsl_enet.h	/^typedef enum _enet_mii_speed$/;"	g
_enet_mtl_multiqueue_rxsche	drivers/fsl_enet.h	/^typedef enum _enet_mtl_multiqueue_rxsche$/;"	g
_enet_mtl_multiqueue_txsche	drivers/fsl_enet.h	/^typedef enum _enet_mtl_multiqueue_txsche$/;"	g
_enet_mtl_rxqueuemap	drivers/fsl_enet.h	/^typedef enum _enet_mtl_rxqueuemap$/;"	g
_enet_ptp_config	drivers/fsl_enet.h	/^typedef struct _enet_ptp_config$/;"	s
_enet_ptp_event_type	drivers/fsl_enet.h	/^typedef enum _enet_ptp_event_type$/;"	g
_enet_ptp_time	drivers/fsl_enet.h	/^typedef struct _enet_ptp_time$/;"	s
_enet_ptp_time_data	drivers/fsl_enet.h	/^typedef struct _enet_ptp_time_data$/;"	s
_enet_ptp_time_data_ring	drivers/fsl_enet.h	/^typedef struct _enet_ptp_time_data_ring$/;"	s
_enet_rx_bd_ring	drivers/fsl_enet.h	/^typedef struct _enet_rx_bd_ring$/;"	s
_enet_rx_bd_struct	drivers/fsl_enet.h	/^typedef struct _enet_rx_bd_struct$/;"	s
_enet_special_config	drivers/fsl_enet.h	/^typedef enum _enet_special_config$/;"	g
_enet_status	drivers/fsl_enet.h	/^enum _enet_status$/;"	g
_enet_systime_op	drivers/fsl_enet.h	/^typedef enum _enet_systime_op$/;"	g
_enet_ts_rollover_type	drivers/fsl_enet.h	/^typedef enum _enet_ts_rollover_type$/;"	g
_enet_tx_bd_ring	drivers/fsl_enet.h	/^typedef struct _enet_tx_bd_ring$/;"	s
_enet_tx_bd_struct	drivers/fsl_enet.h	/^typedef struct _enet_tx_bd_struct$/;"	s
_generic_status	drivers/fsl_common.h	/^enum _generic_status$/;"	g
_gpio_interrupt_config	drivers/fsl_gpio.h	/^typedef struct _gpio_interrupt_config$/;"	s
_gpio_interrupt_index	drivers/fsl_gpio.h	/^typedef enum _gpio_interrupt_index$/;"	g
_gpio_pin_config	drivers/fsl_gpio.h	/^typedef struct _gpio_pin_config$/;"	s
_gpio_pin_direction	drivers/fsl_gpio.h	/^typedef enum _gpio_pin_direction$/;"	g
_gpio_pin_enable_mode	drivers/fsl_gpio.h	/^typedef enum _gpio_pin_enable_mode$/;"	g
_gpio_pin_enable_polarity	drivers/fsl_gpio.h	/^typedef enum _gpio_pin_enable_polarity$/;"	g
_hal_i2c_direction	component/i2c/i2c.h	/^typedef enum _hal_i2c_direction$/;"	g
_hal_i2c_master	component/i2c/flexcomm_i2c_adapter.c	/^typedef struct _hal_i2c_master$/;"	s	file:
_hal_i2c_master_config	component/i2c/i2c.h	/^typedef struct _hal_i2c_master_config$/;"	s
_hal_i2c_master_transfer	component/i2c/i2c.h	/^typedef struct _hal_i2c_master_transfer$/;"	s
_hal_i2c_master_transfer_flag	component/i2c/i2c.h	/^typedef enum _hal_i2c_master_transfer_flag$/;"	g
_hal_i2c_slave	component/i2c/flexcomm_i2c_adapter.c	/^typedef struct _hal_i2c_slave$/;"	s	file:
_hal_i2c_slave_config	component/i2c/i2c.h	/^typedef struct _hal_i2c_slave_config$/;"	s
_hal_i2c_slave_transfer	component/i2c/i2c.h	/^typedef struct _hal_i2c_slave_transfer$/;"	s
_hal_i2c_slave_transfer_event	component/i2c/i2c.h	/^typedef enum _hal_i2c_slave_transfer_event$/;"	g
_hal_i2c_status	component/i2c/i2c.h	/^typedef enum _hal_i2c_status$/;"	g
_hal_timer_config	component/timer/timer.h	/^typedef struct _hal_timer_config$/;"	s
_hal_timer_handle_struct_t	component/timer/ctimer_adapter.c	/^typedef struct _hal_timer_handle_struct_t$/;"	s	file:
_hal_timer_status	component/timer/timer.h	/^typedef enum _hal_timer_status$/;"	g
_hal_uart_config	component/uart/uart.h	/^typedef struct _hal_uart_config$/;"	s
_hal_uart_parity_mode	component/uart/uart.h	/^typedef enum _hal_uart_parity_mode$/;"	g
_hal_uart_receive_state	component/uart/usart_adapter.c	/^typedef struct _hal_uart_receive_state$/;"	s	file:
_hal_uart_send_state	component/uart/usart_adapter.c	/^typedef struct _hal_uart_send_state$/;"	s	file:
_hal_uart_state	component/uart/usart_adapter.c	/^typedef struct _hal_uart_state$/;"	s	file:
_hal_uart_status	component/uart/uart.h	/^typedef enum _hal_uart_status$/;"	g
_hal_uart_stop_bit_count	component/uart/uart.h	/^typedef enum _hal_uart_stop_bit_count$/;"	g
_hal_uart_transfer	component/uart/uart.h	/^typedef struct _hal_uart_transfer$/;"	s
_i2c_direction	drivers/fsl_i2c.h	/^typedef enum _i2c_direction$/;"	g
_i2c_flag_constants	drivers/fsl_i2c.c	/^enum _i2c_flag_constants$/;"	g	file:
_i2c_master_config	drivers/fsl_i2c.h	/^typedef struct _i2c_master_config$/;"	s
_i2c_master_dma_handle	drivers/fsl_i2c_dma.h	/^struct _i2c_master_dma_handle$/;"	s
_i2c_master_dma_private_handle	drivers/fsl_i2c_dma.c	/^typedef struct _i2c_master_dma_private_handle$/;"	s	file:
_i2c_master_flags	drivers/fsl_i2c.h	/^enum _i2c_master_flags$/;"	g
_i2c_master_handle	drivers/fsl_i2c.h	/^struct _i2c_master_handle$/;"	s
_i2c_master_transfer	drivers/fsl_i2c.h	/^struct _i2c_master_transfer$/;"	s
_i2c_master_transfer_flags	drivers/fsl_i2c.h	/^enum _i2c_master_transfer_flags$/;"	g
_i2c_rtos_handle	drivers/freertos/fsl_i2c_freertos.h	/^typedef struct _i2c_rtos_handle$/;"	s
_i2c_slave_address	drivers/fsl_i2c.h	/^typedef struct _i2c_slave_address$/;"	s
_i2c_slave_address_qual_mode	drivers/fsl_i2c.h	/^typedef enum _i2c_slave_address_qual_mode$/;"	g
_i2c_slave_address_register	drivers/fsl_i2c.h	/^typedef enum _i2c_slave_address_register$/;"	g
_i2c_slave_bus_speed	drivers/fsl_i2c.h	/^typedef enum _i2c_slave_bus_speed$/;"	g
_i2c_slave_config	drivers/fsl_i2c.h	/^typedef struct _i2c_slave_config$/;"	s
_i2c_slave_flags	drivers/fsl_i2c.h	/^enum _i2c_slave_flags$/;"	g
_i2c_slave_fsm	drivers/fsl_i2c.h	/^typedef enum _i2c_slave_fsm$/;"	g
_i2c_slave_handle	drivers/fsl_i2c.h	/^struct _i2c_slave_handle$/;"	s
_i2c_slave_transfer	drivers/fsl_i2c.h	/^typedef struct _i2c_slave_transfer$/;"	s
_i2c_slave_transfer_event	drivers/fsl_i2c.h	/^typedef enum _i2c_slave_transfer_event$/;"	g
_i2c_status	drivers/fsl_i2c.h	/^enum _i2c_status$/;"	g
_i2c_transfer_states	drivers/fsl_i2c.h	/^enum _i2c_transfer_states$/;"	g
_i2s_config	drivers/fsl_i2s.h	/^typedef struct _i2s_config$/;"	s
_i2s_dma_handle	drivers/fsl_i2s_dma.h	/^struct _i2s_dma_handle$/;"	s
_i2s_dma_private_handle	drivers/fsl_i2s_dma.c	/^typedef struct _i2s_dma_private_handle$/;"	s	file:
_i2s_dma_state	drivers/fsl_i2s_dma.c	/^enum _i2s_dma_state$/;"	g	file:
_i2s_flags	drivers/fsl_i2s.h	/^typedef enum _i2s_flags$/;"	g
_i2s_handle	drivers/fsl_i2s.h	/^struct _i2s_handle$/;"	s
_i2s_master_slave	drivers/fsl_i2s.h	/^typedef enum _i2s_master_slave$/;"	g
_i2s_mode	drivers/fsl_i2s.h	/^typedef enum _i2s_mode$/;"	g
_i2s_secondary_channel	drivers/fsl_i2s.h	/^enum _i2s_secondary_channel$/;"	g
_i2s_state	drivers/fsl_i2s.c	/^enum _i2s_state$/;"	g	file:
_i2s_status	drivers/fsl_i2s.h	/^enum _i2s_status$/;"	g
_i2s_transfer	drivers/fsl_i2s.h	/^typedef struct _i2s_transfer$/;"	s
_inputmux_connection_t	drivers/fsl_inputmux_connections.h	/^typedef enum _inputmux_connection_t$/;"	g
_iocon_group	drivers/fsl_iocon.h	/^typedef struct _iocon_group$/;"	s
_list_status	component/lists/generic_list.h	/^typedef enum _list_status$/;"	g
_mem_align_control_block	drivers/fsl_common.c	/^typedef struct _mem_align_control_block$/;"	s	file:
_ndis_physical_medium_enum	usb/device/class/usb_device_cdc_rndis.h	/^typedef enum _ndis_physical_medium_enum$/;"	g
_operation_mode	drivers/fsl_dmic.h	/^typedef enum _operation_mode$/;"	g
_phy_duplex	board/fsl_phy.h	/^typedef enum _phy_duplex$/;"	g
_phy_loop	board/fsl_phy.h	/^typedef enum _phy_loop$/;"	g
_phy_speed	board/fsl_phy.h	/^typedef enum _phy_speed$/;"	g
_phy_status	board/fsl_phy.h	/^enum _phy_status$/;"	g
_pin_mux_direction	board/pin_mux.h	/^typedef enum _pin_mux_direction$/;"	g
_pint_int	drivers/fsl_pint.h	/^typedef enum _pint_int$/;"	g
_pint_pin_enable	drivers/fsl_pint.h	/^typedef enum _pint_pin_enable$/;"	g
_pint_pmatch_bslice	drivers/fsl_pint.h	/^typedef enum _pint_pmatch_bslice$/;"	g
_pint_pmatch_bslice_cfg	drivers/fsl_pint.h	/^typedef enum _pint_pmatch_bslice_cfg$/;"	g
_pint_pmatch_cfg	drivers/fsl_pint.h	/^typedef struct _pint_pmatch_cfg$/;"	s
_pint_pmatch_input_src	drivers/fsl_pint.h	/^typedef enum _pint_pmatch_input_src$/;"	g
_pll_config	drivers/fsl_clock.h	/^typedef struct _pll_config$/;"	s
_pll_error	drivers/fsl_clock.h	/^typedef enum _pll_error$/;"	g
_pll_setup	drivers/fsl_clock.h	/^typedef struct _pll_setup$/;"	s
_power_mode_config	drivers/fsl_power.h	/^typedef enum _power_mode_config$/;"	g
_rand_value	lwip/port/sys_arch.c	/^static  u32_t _rand_value;$/;"	v	file:
_read	utilities/fsl_debug_console.c	/^int __attribute__((weak)) _read(int handle, char *buffer, int size)$/;"	f
_reserved0	CMSIS/core_armv8mbl.h	/^    uint32_t _reserved0:15;              \/*!< bit:  9..23  Reserved *\/$/;"	m	struct:__anon117::__anon118
_reserved0	CMSIS/core_armv8mbl.h	/^    uint32_t _reserved0:23;              \/*!< bit:  9..31  Reserved *\/$/;"	m	struct:__anon115::__anon116
_reserved0	CMSIS/core_armv8mbl.h	/^    uint32_t _reserved0:28;              \/*!< bit:  0..27  Reserved *\/$/;"	m	struct:__anon113::__anon114
_reserved0	CMSIS/core_armv8mml.h	/^    uint32_t _reserved0:16;              \/*!< bit:  0..15  Reserved *\/$/;"	m	struct:__anon9::__anon10
_reserved0	CMSIS/core_armv8mml.h	/^    uint32_t _reserved0:23;              \/*!< bit:  9..31  Reserved *\/$/;"	m	struct:__anon11::__anon12
_reserved0	CMSIS/core_armv8mml.h	/^    uint32_t _reserved0:7;               \/*!< bit:  9..15  Reserved *\/$/;"	m	struct:__anon13::__anon14
_reserved0	CMSIS/core_cm4.h	/^    uint32_t _reserved0:16;              \/*!< bit:  0..15  Reserved *\/$/;"	m	struct:__anon31::__anon32
_reserved0	CMSIS/core_cm4.h	/^    uint32_t _reserved0:1;               \/*!< bit:      9  Reserved *\/$/;"	m	struct:__anon35::__anon36
_reserved0	CMSIS/core_cm4.h	/^    uint32_t _reserved0:23;              \/*!< bit:  9..31  Reserved *\/$/;"	m	struct:__anon33::__anon34
_reserved0	CMSIS/core_cm4.h	/^    uint32_t _reserved0:29;              \/*!< bit:  3..31  Reserved *\/$/;"	m	struct:__anon37::__anon38
_reserved1	CMSIS/core_armv8mbl.h	/^    uint32_t _reserved1:30;              \/*!< bit:  2..31  Reserved *\/$/;"	m	struct:__anon119::__anon120
_reserved1	CMSIS/core_armv8mbl.h	/^    uint32_t _reserved1:3;               \/*!< bit: 25..27  Reserved *\/$/;"	m	struct:__anon117::__anon118
_reserved1	CMSIS/core_armv8mml.h	/^    uint32_t _reserved1:28;              \/*!< bit:  4..31  Reserved *\/$/;"	m	struct:__anon15::__anon16
_reserved1	CMSIS/core_armv8mml.h	/^    uint32_t _reserved1:4;               \/*!< bit: 20..23  Reserved *\/$/;"	m	struct:__anon13::__anon14
_reserved1	CMSIS/core_armv8mml.h	/^    uint32_t _reserved1:7;               \/*!< bit: 20..26  Reserved *\/$/;"	m	struct:__anon9::__anon10
_reserved1	CMSIS/core_cm4.h	/^    uint32_t _reserved1:4;               \/*!< bit: 20..23  Reserved *\/$/;"	m	struct:__anon35::__anon36
_reserved1	CMSIS/core_cm4.h	/^    uint32_t _reserved1:7;               \/*!< bit: 20..26  Reserved *\/$/;"	m	struct:__anon31::__anon32
_rndis_event_enum	usb/device/class/usb_device_cdc_rndis.h	/^typedef enum _rndis_event_enum$/;"	g
_rndis_halt_msg_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_halt_msg_struct$/;"	s
_rndis_indicate_status_msg_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_indicate_status_msg_struct$/;"	s
_rndis_init_cmplt_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_init_cmplt_struct$/;"	s
_rndis_init_msg_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_init_msg_struct$/;"	s
_rndis_keepalive_cmplt_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_keepalive_cmplt_struct$/;"	s
_rndis_keepalive_msg_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_keepalive_msg_struct$/;"	s
_rndis_packet_msg_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_packet_msg_struct$/;"	s
_rndis_query_cmplt_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_query_cmplt_struct$/;"	s
_rndis_query_msg_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_query_msg_struct$/;"	s
_rndis_reset_cmplt_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_reset_cmplt_struct$/;"	s
_rndis_reset_msg_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_reset_msg_struct$/;"	s
_rndis_set_cmplt_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_set_cmplt_struct$/;"	s
_rndis_set_msg_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _rndis_set_msg_struct$/;"	s
_rndis_state_enum	usb/device/class/usb_device_cdc_rndis.h	/^typedef enum _rndis_state_enum$/;"	g
_sctimer_clock_mode	drivers/fsl_sctimer.h	/^typedef enum _sctimer_clock_mode$/;"	g
_sctimer_clock_select	drivers/fsl_sctimer.h	/^typedef enum _sctimer_clock_select$/;"	g
_sctimer_config	drivers/fsl_sctimer.h	/^typedef struct _sctimer_config$/;"	s
_sctimer_conflict_resolution	drivers/fsl_sctimer.h	/^typedef enum _sctimer_conflict_resolution$/;"	g
_sctimer_counter	drivers/fsl_sctimer.h	/^typedef enum _sctimer_counter$/;"	g
_sctimer_event	drivers/fsl_sctimer.h	/^typedef enum _sctimer_event$/;"	g
_sctimer_input	drivers/fsl_sctimer.h	/^typedef enum _sctimer_input$/;"	g
_sctimer_interrupt_enable	drivers/fsl_sctimer.h	/^typedef enum _sctimer_interrupt_enable$/;"	g
_sctimer_out	drivers/fsl_sctimer.h	/^typedef enum _sctimer_out$/;"	g
_sctimer_pwm_level_select	drivers/fsl_sctimer.h	/^typedef enum _sctimer_pwm_level_select$/;"	g
_sctimer_pwm_mode	drivers/fsl_sctimer.h	/^typedef enum _sctimer_pwm_mode$/;"	g
_sctimer_pwm_signal_param	drivers/fsl_sctimer.h	/^typedef struct _sctimer_pwm_signal_param$/;"	s
_sctimer_status_flags	drivers/fsl_sctimer.h	/^typedef enum _sctimer_status_flags$/;"	g
_serial_manager_callback_message	component/serial_manager/serial_manager.h	/^typedef struct _serial_manager_callback_message$/;"	s
_serial_manager_config	component/serial_manager/serial_manager.h	/^typedef struct _serial_manager_config$/;"	s
_serial_manager_handle	component/serial_manager/serial_manager.c	/^typedef struct _serial_manager_handle$/;"	s	file:
_serial_manager_read_ring_buffer	component/serial_manager/serial_manager.c	/^typedef struct _serial_manager_read_ring_buffer$/;"	s	file:
_serial_manager_send_handle	component/serial_manager/serial_manager.c	/^typedef struct _serial_manager_send_handle$/;"	s	file:
_serial_manager_status	component/serial_manager/serial_manager.h	/^typedef enum _serial_manager_status$/;"	g
_serial_manager_transfer	component/serial_manager/serial_manager.c	/^typedef struct _serial_manager_transfer$/;"	s	file:
_serial_manager_transmission_mode	component/serial_manager/serial_manager.c	/^typedef enum _serial_manager_transmission_mode$/;"	g	file:
_serial_port_type	component/serial_manager/serial_manager.h	/^typedef enum _serial_port_type$/;"	g
_serial_port_uart_config	component/serial_manager/serial_port_uart.h	/^typedef struct _serial_port_uart_config$/;"	s
_serial_port_uart_parity_mode	component/serial_manager/serial_port_uart.h	/^typedef enum _serial_port_uart_parity_mode$/;"	g
_serial_port_uart_stop_bit_count	component/serial_manager/serial_port_uart.h	/^typedef enum _serial_port_uart_stop_bit_count$/;"	g
_serial_uart_recv_state	component/serial_manager/serial_port_uart.c	/^typedef struct _serial_uart_recv_state$/;"	s	file:
_serial_uart_send_state	component/serial_manager/serial_port_uart.c	/^typedef struct _serial_uart_send_state$/;"	s	file:
_serial_uart_state	component/serial_manager/serial_port_uart.c	/^typedef struct _serial_uart_state$/;"	s	file:
_sha_algo_state	drivers/fsl_sha.c	/^typedef enum _sha_algo_state$/;"	g	file:
_sha_algo_t	drivers/fsl_sha.h	/^typedef enum _sha_algo_t$/;"	g
_sha_ctx_internal	drivers/fsl_sha.c	/^typedef struct _sha_ctx_internal$/;"	s	file:
_sha_ctx_t	drivers/fsl_sha.h	/^typedef struct _sha_ctx_t$/;"	s
_sha_digest_len	drivers/fsl_sha.c	/^enum _sha_digest_len$/;"	g	file:
_sha_hash_block	drivers/fsl_sha.c	/^typedef union _sha_hash_block$/;"	u	file:
_spi_clock_phase	drivers/fsl_spi.h	/^typedef enum _spi_clock_phase$/;"	g
_spi_clock_polarity	drivers/fsl_spi.h	/^typedef enum _spi_clock_polarity$/;"	g
_spi_config	drivers/fsl_spi.h	/^typedef struct _spi_config$/;"	s
_spi_data_width	drivers/fsl_spi.h	/^typedef enum _spi_data_width$/;"	g
_spi_delay_config	drivers/fsl_spi.h	/^typedef struct _spi_delay_config$/;"	s
_spi_dma_handle	drivers/fsl_spi_dma.h	/^struct _spi_dma_handle$/;"	s
_spi_dma_private_handle	drivers/fsl_spi_dma.c	/^typedef struct _spi_dma_private_handle$/;"	s	file:
_spi_dma_states_t	drivers/fsl_spi_dma.c	/^enum _spi_dma_states_t$/;"	g	file:
_spi_dma_txdummy	drivers/fsl_spi_dma.c	/^typedef struct _spi_dma_txdummy$/;"	s	file:
_spi_half_duplex_transfer	drivers/fsl_spi.h	/^typedef struct _spi_half_duplex_transfer$/;"	s
_spi_interrupt_enable	drivers/fsl_spi.h	/^enum _spi_interrupt_enable$/;"	g
_spi_master_config	drivers/fsl_spi.h	/^typedef struct _spi_master_config$/;"	s
_spi_master_handle	drivers/fsl_spi.h	/^struct _spi_master_handle$/;"	s
_spi_rtos_handle	drivers/freertos/fsl_spi_freertos.h	/^typedef struct _spi_rtos_handle$/;"	s
_spi_rxfifo_watermark	drivers/fsl_spi.h	/^typedef enum _spi_rxfifo_watermark$/;"	g
_spi_shift_direction	drivers/fsl_spi.h	/^typedef enum _spi_shift_direction$/;"	g
_spi_slave_config	drivers/fsl_spi.h	/^typedef struct _spi_slave_config$/;"	s
_spi_spol	drivers/fsl_spi.h	/^typedef enum _spi_spol$/;"	g
_spi_ssel	drivers/fsl_spi.h	/^typedef enum _spi_ssel$/;"	g
_spi_status	drivers/fsl_spi.h	/^enum _spi_status$/;"	g
_spi_statusflags	drivers/fsl_spi.h	/^enum _spi_statusflags$/;"	g
_spi_transfer	drivers/fsl_spi.h	/^typedef struct _spi_transfer$/;"	s
_spi_txfifo_watermark	drivers/fsl_spi.h	/^typedef enum _spi_txfifo_watermark$/;"	g
_spi_xfer_option	drivers/fsl_spi.h	/^typedef enum _spi_xfer_option$/;"	g
_status_groups	drivers/fsl_common.h	/^enum _status_groups$/;"	g
_stereo_side	drivers/fsl_dmic.h	/^typedef enum _stereo_side$/;"	g
_sys_command_string	utilities/fsl_debug_console.c	/^char *_sys_command_string(char *cmd, int len)$/;"	f
_sys_exit	utilities/fsl_debug_console.c	/^void _sys_exit(int returncode)$/;"	f
_ttywrch	utilities/fsl_debug_console.c	/^void _ttywrch(int ch)$/;"	f
_usart_clock_polarity	drivers/fsl_usart.h	/^typedef enum _usart_clock_polarity$/;"	g
_usart_config	drivers/fsl_usart.h	/^typedef struct _usart_config$/;"	s
_usart_data_len	drivers/fsl_usart.h	/^typedef enum _usart_data_len$/;"	g
_usart_flags	drivers/fsl_usart.h	/^enum _usart_flags$/;"	g
_usart_handle	drivers/fsl_usart.h	/^struct _usart_handle$/;"	s
_usart_interrupt_enable	drivers/fsl_usart.h	/^enum _usart_interrupt_enable$/;"	g
_usart_parity_mode	drivers/fsl_usart.h	/^typedef enum _usart_parity_mode$/;"	g
_usart_rxfifo_watermark	drivers/fsl_usart.h	/^typedef enum _usart_rxfifo_watermark$/;"	g
_usart_status	drivers/fsl_usart.h	/^enum _usart_status$/;"	g
_usart_stop_bit_count	drivers/fsl_usart.h	/^typedef enum _usart_stop_bit_count$/;"	g
_usart_sync_mode	drivers/fsl_usart.h	/^typedef enum _usart_sync_mode$/;"	g
_usart_transfer	drivers/fsl_usart.h	/^typedef struct _usart_transfer$/;"	s
_usart_transfer_states	drivers/fsl_usart.c	/^enum _usart_transfer_states$/;"	g	file:
_usart_txfifo_watermark	drivers/fsl_usart.h	/^typedef enum _usart_txfifo_watermark$/;"	g
_usb_cdc_acm_info	vcom/virtual_com.h	/^typedef struct _usb_cdc_acm_info$/;"	s
_usb_cdc_vcom_struct	vcom/virtual_com.h	/^typedef struct _usb_cdc_vcom_struct$/;"	s
_usb_controller_index	usb/include/usb.h	/^typedef enum _usb_controller_index$/;"	g
_usb_dcd_detection_sequence_results	usb/device/include/usb_device.h	/^typedef enum _usb_dcd_detection_sequence_results$/;"	g
_usb_dcd_detection_sequence_status	usb/device/include/usb_device.h	/^typedef enum _usb_dcd_detection_sequence_status$/;"	g
_usb_descriptor_binary_device_object_store	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_binary_device_object_store$/;"	s
_usb_descriptor_common	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_common$/;"	s
_usb_descriptor_configuration	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_configuration$/;"	s
_usb_descriptor_device	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_device$/;"	s
_usb_descriptor_endpoint	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_endpoint$/;"	s
_usb_descriptor_endpoint_companion	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_endpoint_companion$/;"	s
_usb_descriptor_interface	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_interface$/;"	s
_usb_descriptor_super_speed_device_capability	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_super_speed_device_capability$/;"	s
_usb_descriptor_union	usb/include/usb_spec.h	/^typedef union _usb_descriptor_union$/;"	u
_usb_descriptor_usb20_extension	usb/include/usb_spec.h	/^typedef struct _usb_descriptor_usb20_extension$/;"	s
_usb_device_audio_entities_struct	usb/device/class/usb_device_audio.h	/^typedef struct _usb_device_audio_entities_struct$/;"	s
_usb_device_audio_entity_struct	usb/device/class/usb_device_audio.h	/^typedef struct _usb_device_audio_entity_struct$/;"	s
_usb_device_audio_struct	usb/device/class/usb_device_audio.h	/^typedef struct _usb_device_audio_struct$/;"	s
_usb_device_callback_message_struct	usb/device/source/usb_device_dci.h	/^typedef struct _usb_device_callback_message_struct$/;"	s
_usb_device_capacity_list_header_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_capacity_list_header_struct$/;"	s
_usb_device_ccid_abort_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_abort_command$/;"	s
_usb_device_ccid_clock_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_clock_command$/;"	s
_usb_device_ccid_command_struct	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_command_struct$/;"	s
_usb_device_ccid_common_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_common_command$/;"	s
_usb_device_ccid_common_response	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_common_response$/;"	s
_usb_device_ccid_control_request_struct	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_control_request_struct$/;"	s
_usb_device_ccid_data_block_response	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_data_block_response$/;"	s
_usb_device_ccid_data_rate_and_clock_frequency_response	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_data_rate_and_clock_frequency_response$/;"	s
_usb_device_ccid_escape_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_escape_command$/;"	s
_usb_device_ccid_escape_response	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_escape_response$/;"	s
_usb_device_ccid_event	usb/device/class/usb_device_ccid.h	/^typedef enum _usb_device_ccid_event$/;"	g
_usb_device_ccid_get_parameters_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_get_parameters_command$/;"	s
_usb_device_ccid_get_slot_status_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_get_slot_status_command$/;"	s
_usb_device_ccid_hardware_error	usb/device/class/usb_device_ccid.h	/^typedef enum _usb_device_ccid_hardware_error$/;"	g
_usb_device_ccid_hardware_error_notification	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_hardware_error_notification$/;"	s
_usb_device_ccid_mechanical_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_mechanical_command$/;"	s
_usb_device_ccid_notification_struct	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_notification_struct$/;"	s
_usb_device_ccid_notify_slot_chnage_notification	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_notify_slot_chnage_notification$/;"	s
_usb_device_ccid_parameters_T0_response	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_parameters_T0_response$/;"	s
_usb_device_ccid_parameters_T1_response	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_parameters_T1_response$/;"	s
_usb_device_ccid_parameters_response	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_parameters_response$/;"	s
_usb_device_ccid_parameters_response_common	usb/device/class/usb_device_ccid.h	/^typedef union _usb_device_ccid_parameters_response_common$/;"	u
_usb_device_ccid_power_off_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_power_off_command$/;"	s
_usb_device_ccid_power_on_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_power_on_command$/;"	s
_usb_device_ccid_reset_parameters_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_reset_parameters_command$/;"	s
_usb_device_ccid_secure_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_secure_command$/;"	s
_usb_device_ccid_secure_pin_modification_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_secure_pin_modification_command$/;"	s
_usb_device_ccid_secure_pin_operation_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_secure_pin_operation_command$/;"	s
_usb_device_ccid_set_data_rate_and_clock_frequency_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_set_data_rate_and_clock_frequency_command$/;"	s
_usb_device_ccid_set_parameters_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_set_parameters_command$/;"	s
_usb_device_ccid_set_parameters_command_common	usb/device/class/usb_device_ccid.h	/^typedef union _usb_device_ccid_set_parameters_command_common$/;"	u
_usb_device_ccid_set_parameters_t0_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_set_parameters_t0_command$/;"	s
_usb_device_ccid_set_parameters_t1_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_set_parameters_t1_command$/;"	s
_usb_device_ccid_seucre_pin_verification_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_seucre_pin_verification_command$/;"	s
_usb_device_ccid_slot_state	usb/device/class/usb_device_ccid.h	/^typedef enum _usb_device_ccid_slot_state$/;"	g
_usb_device_ccid_slot_status_response	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_slot_status_response$/;"	s
_usb_device_ccid_slot_status_struct	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_slot_status_struct$/;"	s
_usb_device_ccid_struct	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_struct$/;"	s
_usb_device_ccid_t0_apdu_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_t0_apdu_command$/;"	s
_usb_device_ccid_transfer_block_command	usb/device/class/usb_device_ccid.h	/^struct _usb_device_ccid_transfer_block_command$/;"	s
_usb_device_ccid_transfer_struct	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_transfer_struct$/;"	s
_usb_device_cdc_acm_event	usb/device/class/usb_device_cdc_acm.h	/^typedef enum _usb_device_cdc_acm_event$/;"	g
_usb_device_cdc_acm_pipe	usb/device/class/usb_device_cdc_acm.h	/^typedef struct _usb_device_cdc_acm_pipe$/;"	s
_usb_device_cdc_acm_request_param_struct	usb/device/class/usb_device_cdc_acm.h	/^typedef struct _usb_device_cdc_acm_request_param_struct$/;"	s
_usb_device_cdc_acm_struct	usb/device/class/usb_device_cdc_acm.h	/^typedef struct _usb_device_cdc_acm_struct$/;"	s
_usb_device_cdc_rndis_config_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _usb_device_cdc_rndis_config_struct$/;"	s
_usb_device_cdc_rndis_request_param_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _usb_device_cdc_rndis_request_param_struct$/;"	s
_usb_device_cdc_rndis_struct	usb/device/class/usb_device_cdc_rndis.h	/^typedef struct _usb_device_cdc_rndis_struct$/;"	s
_usb_device_class_config_list_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_class_config_list_struct$/;"	s
_usb_device_class_config_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_class_config_struct$/;"	s
_usb_device_class_event	usb/device/class/usb_device_class.h	/^typedef enum _usb_device_class_event$/;"	g
_usb_device_class_map	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_class_map$/;"	s
_usb_device_class_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_class_struct$/;"	s
_usb_device_common_class_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_common_class_struct$/;"	s
_usb_device_composite_struct	vcom/composite.h	/^typedef struct _usb_device_composite_struct$/;"	s
_usb_device_control_range_layout2_struct	usb/device/class/usb_device_audio.h	/^struct _usb_device_control_range_layout2_struct$/;"	s
_usb_device_control_range_layout3_struct	usb/device/class/usb_device_audio.h	/^struct _usb_device_control_range_layout3_struct$/;"	s
_usb_device_control_read_write_sequence	usb/device/source/usb_device_ch9.h	/^typedef enum _usb_device_control_read_write_sequence$/;"	g
_usb_device_control_request_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_control_request_struct$/;"	s
_usb_device_control_type	usb/device/source/usb_device_dci.h	/^typedef enum _usb_device_control_type$/;"	g
_usb_device_controller_interface_struct	usb/device/source/usb_device_dci.h	/^typedef struct _usb_device_controller_interface_struct$/;"	s
_usb_device_current_max_capacity_descriptor_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_current_max_capacity_descriptor_struct$/;"	s
_usb_device_dcd_charging_time	usb/device/include/usb_device.h	/^typedef struct _usb_device_dcd_charging_time$/;"	s
_usb_device_dcd_dev_status	usb/device/class/usb_device_hid.h	/^typedef enum _usb_device_dcd_dev_status$/;"	g
_usb_device_dcd_port_type	usb/device/class/usb_device_hid.h	/^typedef enum _usb_device_dcd_port_type$/;"	g
_usb_device_dcd_state_struct	usb/device/source/ehci/usb_device_ehci.h	/^typedef struct _usb_device_dcd_state_struct$/;"	s
_usb_device_dcd_state_struct	usb/device/source/khci/usb_device_khci.h	/^typedef struct _usb_device_dcd_state_struct$/;"	s
_usb_device_ehci_dtd_struct	usb/device/source/ehci/usb_device_ehci.h	/^typedef struct _usb_device_ehci_dtd_struct$/;"	s
_usb_device_ehci_qh_struct	usb/device/source/ehci/usb_device_ehci.h	/^typedef struct _usb_device_ehci_qh_struct$/;"	s
_usb_device_ehci_state_struct	usb/device/source/ehci/usb_device_ehci.h	/^typedef struct _usb_device_ehci_state_struct$/;"	s
_usb_device_endpoint_callback_message_struct	usb/device/include/usb_device.h	/^typedef struct _usb_device_endpoint_callback_message_struct$/;"	s
_usb_device_endpoint_callback_struct	usb/device/include/usb_device.h	/^typedef struct _usb_device_endpoint_callback_struct$/;"	s
_usb_device_endpoint_init_struct	usb/device/include/usb_device.h	/^typedef struct _usb_device_endpoint_init_struct$/;"	s
_usb_device_endpoint_list	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_endpoint_list$/;"	s
_usb_device_endpoint_status_struct	usb/device/include/usb_device.h	/^typedef struct _usb_device_endpoint_status_struct$/;"	s
_usb_device_endpoint_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_endpoint_struct$/;"	s
_usb_device_event	usb/device/include/usb_device.h	/^typedef enum _usb_device_event$/;"	g
_usb_device_format_capacity_response_data_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_format_capacity_response_data_struct$/;"	s
_usb_device_formattable_capacity_descriptor_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_formattable_capacity_descriptor_struct$/;"	s
_usb_device_get_bos_descriptor_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_bos_descriptor_struct$/;"	s
_usb_device_get_configuration_descriptor_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_configuration_descriptor_struct$/;"	s
_usb_device_get_descriptor_common_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_descriptor_common_struct$/;"	s
_usb_device_get_descriptor_common_union	usb/device/class/usb_device_class.h	/^typedef union _usb_device_get_descriptor_common_union$/;"	u
_usb_device_get_device_descriptor_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_device_descriptor_struct$/;"	s
_usb_device_get_device_qualifier_descriptor_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_device_qualifier_descriptor_struct$/;"	s
_usb_device_get_hid_descriptor_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_hid_descriptor_struct$/;"	s
_usb_device_get_hid_physical_descriptor_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_hid_physical_descriptor_struct$/;"	s
_usb_device_get_hid_report_descriptor_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_hid_report_descriptor_struct$/;"	s
_usb_device_get_string_descriptor_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_get_string_descriptor_struct$/;"	s
_usb_device_hid_event	usb/device/class/usb_device_hid.h	/^typedef enum _usb_device_hid_event$/;"	g
_usb_device_hid_report_struct	usb/device/class/usb_device_hid.h	/^typedef struct _usb_device_hid_report_struct$/;"	s
_usb_device_hid_struct	usb/device/class/usb_device_hid.h	/^typedef struct _usb_device_hid_struct$/;"	s
_usb_device_inquiry_command_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_inquiry_command_struct$/;"	s
_usb_device_inquiry_data_fromat_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_inquiry_data_fromat_struct$/;"	s
_usb_device_interface_list	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_interface_list$/;"	s
_usb_device_interface_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_interface_struct$/;"	s
_usb_device_interfaces_struct	usb/device/class/usb_device_class.h	/^typedef struct _usb_device_interfaces_struct$/;"	s
_usb_device_khci_endpoint_state_struct	usb/device/source/khci/usb_device_khci.h	/^typedef struct _usb_device_khci_endpoint_state_struct$/;"	s
_usb_device_khci_state_struct	usb/device/source/khci/usb_device_khci.h	/^typedef struct _usb_device_khci_state_struct$/;"	s
_usb_device_lba_app_struct	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_lba_app_struct$/;"	s
_usb_device_lba_information_struct	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_lba_information_struct$/;"	s
_usb_device_logical_unit_information_struct	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_logical_unit_information_struct$/;"	s
_usb_device_lpc3511ip_endpoint_state_struct	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^typedef struct _usb_device_lpc3511ip_endpoint_state_struct$/;"	s
_usb_device_lpc3511ip_state_struct	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^typedef struct _usb_device_lpc3511ip_state_struct$/;"	s
_usb_device_mode_parameters_header_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_mode_parameters_header_struct$/;"	s
_usb_device_msc_cbw	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_msc_cbw$/;"	s
_usb_device_msc_csw	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_msc_csw$/;"	s
_usb_device_msc_struct	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_msc_struct$/;"	s
_usb_device_msc_thirteen_case_struct	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_msc_thirteen_case_struct$/;"	s
_usb_device_msc_ufi_struct	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_msc_ufi_struct$/;"	s
_usb_device_notification	usb/device/source/usb_device_dci.h	/^typedef enum _usb_device_notification$/;"	g
_usb_device_phdc_pipe	usb/device/class/usb_device_phdc.h	/^typedef struct _usb_device_phdc_pipe$/;"	s
_usb_device_phdc_struct	usb/device/class/usb_device_phdc.h	/^typedef struct _usb_device_phdc_struct$/;"	s
_usb_device_printer_class_request	usb/device/class/usb_device_printer.h	/^typedef struct _usb_device_printer_class_request$/;"	s
_usb_device_printer_event	usb/device/class/usb_device_printer.h	/^typedef enum _usb_device_printer_event$/;"	g
_usb_device_printer_struct	usb/device/class/usb_device_printer.h	/^typedef struct _usb_device_printer_struct$/;"	s
_usb_device_read_capacities_command_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_read_capacities_command_struct$/;"	s
_usb_device_read_capacity16_data_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_read_capacity16_data_struct$/;"	s
_usb_device_read_capacity_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_read_capacity_struct$/;"	s
_usb_device_read_format_capacities_command_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_read_format_capacities_command_struct$/;"	s
_usb_device_read_write_10_command_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_read_write_10_command_struct$/;"	s
_usb_device_request_sense_command_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_request_sense_command_struct$/;"	s
_usb_device_request_sense_data_struct	usb/device/class/usb_device_msc_ufi.h	/^typedef struct _usb_device_request_sense_data_struct$/;"	s
_usb_device_state	usb/device/include/usb_device.h	/^typedef enum _usb_device_state$/;"	g
_usb_device_status	usb/device/include/usb_device.h	/^typedef enum _usb_device_status$/;"	g
_usb_device_struct	usb/device/source/usb_device_dci.h	/^typedef struct _usb_device_struct$/;"	s
_usb_device_ufi_app_struct	usb/device/class/usb_device_msc.h	/^typedef struct _usb_device_ufi_app_struct$/;"	s
_usb_device_video_entities_struct	usb/device/class/usb_device_video.h	/^typedef struct _usb_device_video_entities_struct$/;"	s
_usb_device_video_entity_struct	usb/device/class/usb_device_video.h	/^typedef struct _usb_device_video_entity_struct$/;"	s
_usb_device_video_event	usb/device/class/usb_device_video.h	/^typedef enum _usb_device_video_event$/;"	g
_usb_device_video_mjpeg_payload_header_struct	usb/device/class/usb_device_video.h	/^struct _usb_device_video_mjpeg_payload_header_struct$/;"	s
_usb_device_video_probe_and_commit_controls_struct	usb/device/class/usb_device_video.h	/^struct _usb_device_video_probe_and_commit_controls_struct$/;"	s
_usb_device_video_still_probe_and_commit_controls_struct	usb/device/class/usb_device_video.h	/^struct _usb_device_video_still_probe_and_commit_controls_struct$/;"	s
_usb_device_video_struct	usb/device/class/usb_device_video.h	/^typedef struct _usb_device_video_struct$/;"	s
_usb_endpoint_status	usb/device/include/usb_device.h	/^typedef enum _usb_endpoint_status$/;"	g
_usb_khci_interrupt_type	usb/device/source/khci/usb_device_khci.h	/^typedef enum _usb_khci_interrupt_type$/;"	g
_usb_language	usb/include/usb_spec.h	/^typedef struct _usb_language$/;"	s
_usb_language_list	usb/include/usb_spec.h	/^typedef struct _usb_language_list$/;"	s
_usb_lba_transfer_information_struct	usb/device/class/usb_device_msc.h	/^typedef struct _usb_lba_transfer_information_struct$/;"	s
_usb_osa_event_mode	osa/usb_osa.h	/^typedef enum _usb_osa_event_mode$/;"	g
_usb_osa_event_struct	osa/usb_osa_freertos.c	/^typedef struct _usb_osa_event_struct$/;"	s	file:
_usb_osa_msg_struct	osa/usb_osa_freertos.c	/^typedef struct _usb_osa_msg_struct$/;"	s	file:
_usb_osa_msgq_struct	osa/usb_osa_freertos.c	/^typedef struct _usb_osa_msgq_struct$/;"	s	file:
_usb_osa_sem_struct	osa/usb_osa_freertos.c	/^typedef struct _usb_osa_sem_struct$/;"	s	file:
_usb_osa_status	osa/usb_osa.h	/^typedef enum _usb_osa_status$/;"	g
_usb_phy_config_struct	usb/phy/usb_phy.h	/^typedef struct _usb_phy_config_struct$/;"	s
_usb_pll_psel	drivers/fsl_clock.h	/^typedef enum _usb_pll_psel$/;"	g
_usb_pll_setup	drivers/fsl_clock.h	/^typedef struct _usb_pll_setup$/;"	s
_usb_setup_struct	usb/include/usb_spec.h	/^typedef struct _usb_setup_struct$/;"	s
_usb_status	usb/include/usb.h	/^typedef enum _usb_status$/;"	g
_usb_usb_device_class_type	usb/device/class/usb_device_class.h	/^typedef enum _usb_usb_device_class_type$/;"	g
_usb_version	usb/include/usb.h	/^typedef struct _usb_version$/;"	s
_vsprintf	source/common.c	/^static int _vsprintf(char *buf, const char *fmt, va_list args)$/;"	f	file:
_wm8904_audio_format	codec/fsl_wm8904.h	/^typedef struct _wm8904_audio_format$/;"	s
_wm8904_bit_width	codec/fsl_wm8904.h	/^typedef enum _wm8904_bit_width$/;"	g
_wm8904_config	codec/fsl_wm8904.h	/^typedef struct _wm8904_config$/;"	s
_wm8904_fs_ratio	codec/fsl_wm8904.h	/^typedef enum _wm8904_fs_ratio$/;"	g
_wm8904_handle	codec/fsl_wm8904.h	/^typedef struct _wm8904_handle$/;"	s
_wm8904_lrc_polarity	codec/fsl_wm8904.h	/^enum _wm8904_lrc_polarity$/;"	g
_wm8904_module	codec/fsl_wm8904.h	/^typedef enum _wm8904_module$/;"	g
_wm8904_play_channel	codec/fsl_wm8904.h	/^enum _wm8904_play_channel$/;"	g
_wm8904_play_source	codec/fsl_wm8904.h	/^enum _wm8904_play_source$/;"	g
_wm8904_protocol	codec/fsl_wm8904.h	/^typedef enum _wm8904_protocol$/;"	g
_wm8904_record_channel	codec/fsl_wm8904.h	/^enum _wm8904_record_channel$/;"	g
_wm8904_record_source	codec/fsl_wm8904.h	/^enum _wm8904_record_source$/;"	g
_wm8904_sample_rate	codec/fsl_wm8904.h	/^typedef enum _wm8904_sample_rate$/;"	g
_wm8904_status	codec/fsl_wm8904.h	/^enum _wm8904_status$/;"	g
_wm8904_timeslot	codec/fsl_wm8904.h	/^typedef enum _wm8904_timeslot$/;"	g
_write	utilities/fsl_debug_console.c	/^int __attribute__((weak)) _write(int handle, char *buffer, int size)$/;"	f
a	codec2/ofdm_internal.h	/^  int a;$/;"	m	struct:OFDM_CONFIG
aAC_Coeffs	emwin/emWin_header/GUI_JPEG_Private.h	/^  COEFF_BUFFER aAC_Coeffs[MAX_COMPONENTS]; \/\/ AC coefficient buffer for progressive scan$/;"	m	struct:GUI_JPEG_DCONTEXT
aBackColor	emwin/emWin_header/DROPDOWN_Private.h	/^  GUI_COLOR aBackColor[3];$/;"	m	struct:__anon359
aBackColor	emwin/emWin_header/LISTBOX_Private.h	/^  GUI_COLOR aBackColor[4];$/;"	m	struct:__anon312
aBackColor	emwin/emWin_header/LISTWHEEL_Private.h	/^  GUI_COLOR        aBackColor[2];$/;"	m	struct:__anon352
aBarColor	emwin/emWin_header/FRAMEWIN_Private.h	/^  GUI_COLOR             aBarColor[2];$/;"	m	struct:__anon279
aBarColor	emwin/emWin_header/PROGBAR_Private.h	/^  GUI_COLOR aBarColor[2];$/;"	m	struct:__anon423
aBkColor	emwin/emWin_header/BUTTON_Private.h	/^  GUI_COLOR aBkColor[3];$/;"	m	struct:__anon401
aBkColor	emwin/emWin_header/EDIT_Private.h	/^  GUI_COLOR        aBkColor[3];$/;"	m	struct:__anon217
aBkColor	emwin/emWin_header/ICONVIEW_Private.h	/^  GUI_COLOR        aBkColor[3];$/;"	m	struct:__anon218
aBkColor	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_COLOR                    aBkColor[4];$/;"	m	struct:__anon331
aBkColor	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_COLOR                    aBkColor[4];$/;"	m	struct:__anon332
aBkColor	emwin/emWin_header/MENU_Private.h	/^  GUI_COLOR           aBkColor[5];$/;"	m	struct:__anon318
aBkColor	emwin/emWin_header/MULTIPAGE_Private.h	/^  GUI_COLOR                 aBkColor[MULTIPAGE_NUMCOLORS];$/;"	m	struct:__anon340
aBkColor	emwin/emWin_header/SPINBOX_Private.h	/^  GUI_COLOR            aBkColor[2];          \/\/ Background color for the states (enabled, disabled).$/;"	m	struct:__anon321
aBkColor	emwin/emWin_header/SWIPELIST_Private.h	/^  GUI_COLOR        aBkColor[3];$/;"	m	struct:__anon237
aBkColor	emwin/emWin_header/TREEVIEW_Private.h	/^  GUI_COLOR aBkColor[3];$/;"	m	struct:__anon226
aBkColorBox	emwin/emWin_header/CHECKBOX_Private.h	/^  GUI_COLOR             aBkColorBox[2]; \/* Colors used to draw the box background *\/$/;"	m	struct:__anon205
aBkColorH	emwin/emWin_header/MENU.h	/^  GUI_COLOR aBkColorH[2];$/;"	m	struct:__anon230
aBkLower	emwin/emWin_header/MULTIPAGE.h	/^  GUI_COLOR aBkLower[2];$/;"	m	struct:__anon198
aBkUpper	emwin/emWin_header/MULTIPAGE.h	/^  GUI_COLOR aBkUpper[2];$/;"	m	struct:__anon198
aBlockY_MCU	emwin/emWin_header/GUI_JPEG_Private.h	/^  int aBlockY_MCU[MAX_COMPONENTS];         \/\/ $/;"	m	struct:GUI_JPEG_DCONTEXT
aBorder	emwin/emWin_header/CHOOSECOLOR.h	/^  unsigned  aBorder[2];$/;"	m	struct:__anon233
aBorder	emwin/emWin_header/MENU_Private.h	/^  U8                  aBorder[4];$/;"	m	struct:__anon318
aBorderSize	emwin/emWin_header/SWIPELIST_Private.h	/^  int              aBorderSize[4];$/;"	m	struct:__anon237
aBuffer	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  U16 * aBuffer;        \/\/ Allocated buffer$/;"	m	struct:DRIVER_CONTEXT
aBuffer	emwin/emWin_header/GUI_GIF_Private.h	/^  U8    aBuffer[258];                       \/* Input buffer for data block *\/$/;"	m	struct:__anon323
aButtonBkColor	emwin/emWin_header/SPINBOX_Private.h	/^  GUI_COLOR            aButtonBkColor[3];    \/\/ Button background color for the states (disabled, pressed, unpressed).$/;"	m	struct:__anon321
aButtonLowerColor	emwin/emWin_header/SPINBOX_Private.h	/^  GUI_COLOR            aButtonLowerColor[3]; \/\/ Lower color for the button states (disabled, pressed, unpressed).$/;"	m	struct:__anon321
aButtonOuterColor	emwin/emWin_header/SPINBOX_Private.h	/^  GUI_COLOR            aButtonOuterColor[3]; \/\/ Outer color for the button states (disabled, pressed, unpressed).$/;"	m	struct:__anon321
aButtonSize	emwin/emWin_header/CHOOSECOLOR.h	/^  unsigned  aButtonSize[2];$/;"	m	struct:__anon233
aButtonUpperColor	emwin/emWin_header/SPINBOX_Private.h	/^  GUI_COLOR            aButtonUpperColor[3]; \/\/ Upper color for the button states (disabled, pressed, unpressed).$/;"	m	struct:__anon321
aCBB	emwin/emWin_header/GUI_JPEG_Private.h	/^  int aCBB[256];$/;"	m	struct:GUI_JPEG_DCONTEXT
aCBG	emwin/emWin_header/GUI_JPEG_Private.h	/^  I32 aCBG[256];$/;"	m	struct:GUI_JPEG_DCONTEXT
aCRG	emwin/emWin_header/GUI_JPEG_Private.h	/^  I32 aCRG[256];$/;"	m	struct:GUI_JPEG_DCONTEXT
aCRR	emwin/emWin_header/GUI_JPEG_Private.h	/^  int aCRR[256];$/;"	m	struct:GUI_JPEG_DCONTEXT
aCode	emwin/emWin_header/GUI_GIF_Private.h	/^  short aCode  [(1 << MAX_NUM_LWZ_BITS)];   \/* This array stores the LZW codes for the compressed strings *\/$/;"	m	struct:__anon323
aCodeSize	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8       aCodeSize[256];$/;"	m	struct:__anon362
aColor	emwin/emWin_header/CHOOSECOLOR.h	/^  GUI_COLOR aColor[2];$/;"	m	struct:__anon233
aColor	emwin/emWin_header/DROPDOWN_Private.h	/^  GUI_COLOR aColor[2];$/;"	m	struct:__anon359
aColor	emwin/emWin_header/GRAPH_Private.h	/^  GUI_COLOR aColor[4];$/;"	m	struct:__anon309
aColor	emwin/emWin_header/SCROLLBAR_Private.h	/^  GUI_COLOR aColor[3];$/;"	m	struct:__anon348
aColorButton	emwin/emWin_header/RADIO.h	/^  GUI_COLOR aColorButton[4];$/;"	m	struct:__anon373
aColorFrame	emwin/emWin_header/BUTTON.h	/^  GUI_COLOR aColorFrame[3];$/;"	m	struct:__anon337
aColorFrame	emwin/emWin_header/CALENDAR.h	/^  GUI_COLOR aColorFrame[3]; \/\/ Frame colors of buttons$/;"	m	struct:__anon241
aColorFrame	emwin/emWin_header/CHECKBOX.h	/^  GUI_COLOR aColorFrame[3];$/;"	m	struct:__anon208
aColorFrame	emwin/emWin_header/DROPDOWN.h	/^  GUI_COLOR aColorFrame[3];$/;"	m	struct:__anon357
aColorFrame	emwin/emWin_header/FRAMEWIN.h	/^  GUI_COLOR aColorFrame[3];$/;"	m	struct:__anon277
aColorFrame	emwin/emWin_header/HEADER.h	/^  GUI_COLOR aColorFrame[2];$/;"	m	struct:__anon369
aColorFrame	emwin/emWin_header/SCROLLBAR.h	/^  GUI_COLOR aColorFrame[3];$/;"	m	struct:__anon215
aColorFrame	emwin/emWin_header/SLIDER.h	/^  GUI_COLOR aColorFrame[2];$/;"	m	struct:__anon304
aColorFrame	emwin/emWin_header/SPINBOX.h	/^  GUI_COLOR aColorFrame[2];   \/\/ [0] Outer color of surrounding frame.         [1] Inner color of surrounding frame.$/;"	m	struct:__anon381
aColorIndex16	emwin/emWin_header/GUI.h	/^  U16 aColorIndex16[2];$/;"	m	union:__anon384
aColorIndex32	emwin/emWin_header/GUI.h	/^  U32 aColorIndex32[2];$/;"	m	union:__anon384
aColorIndex8	emwin/emWin_header/GUI.h	/^  U8  aColorIndex8[2];$/;"	m	union:__anon384
aColorInner	emwin/emWin_header/CHECKBOX.h	/^  GUI_COLOR aColorInner[2];$/;"	m	struct:__anon208
aColorInner	emwin/emWin_header/SLIDER.h	/^  GUI_COLOR aColorInner[2];$/;"	m	struct:__anon304
aColorLower	emwin/emWin_header/BUTTON.h	/^  GUI_COLOR aColorLower[2];$/;"	m	struct:__anon337
aColorLower	emwin/emWin_header/CALENDAR.h	/^  GUI_COLOR aColorLower[2]; \/\/ Lower gradient colors of buttons$/;"	m	struct:__anon241
aColorLower	emwin/emWin_header/DROPDOWN.h	/^  GUI_COLOR aColorLower[2];$/;"	m	struct:__anon357
aColorLower	emwin/emWin_header/HEADER.h	/^  GUI_COLOR aColorLower[2];$/;"	m	struct:__anon369
aColorLower	emwin/emWin_header/SCROLLBAR.h	/^  GUI_COLOR aColorLower[2];$/;"	m	struct:__anon215
aColorLower	emwin/emWin_header/SPINBOX.h	/^  GUI_COLOR aColorLower[2];   \/\/ [0] Upper color of gradient for lower button. [1] Lower color of gradient for lower button.$/;"	m	struct:__anon381
aColorLowerL	emwin/emWin_header/PROGBAR.h	/^  GUI_COLOR aColorLowerL[2];$/;"	m	struct:__anon221
aColorLowerR	emwin/emWin_header/PROGBAR.h	/^  GUI_COLOR aColorLowerR[2];$/;"	m	struct:__anon221
aColorShaft	emwin/emWin_header/SCROLLBAR.h	/^  GUI_COLOR aColorShaft[2];$/;"	m	struct:__anon215
aColorShaft	emwin/emWin_header/SLIDER.h	/^  GUI_COLOR aColorShaft[3];$/;"	m	struct:__anon304
aColorTable	emwin/emWin_header/GUI_GIF_Private.h	/^  GUI_COLOR aColorTable[256];$/;"	m	struct:__anon323
aColorTitle	emwin/emWin_header/FRAMEWIN.h	/^  GUI_COLOR aColorTitle[2];$/;"	m	struct:__anon277
aColorUpper	emwin/emWin_header/BUTTON.h	/^  GUI_COLOR aColorUpper[2];$/;"	m	struct:__anon337
aColorUpper	emwin/emWin_header/CALENDAR.h	/^  GUI_COLOR aColorUpper[2]; \/\/ Upper gradient colors of buttons$/;"	m	struct:__anon241
aColorUpper	emwin/emWin_header/DROPDOWN.h	/^  GUI_COLOR aColorUpper[2];$/;"	m	struct:__anon357
aColorUpper	emwin/emWin_header/HEADER.h	/^  GUI_COLOR aColorUpper[2];$/;"	m	struct:__anon369
aColorUpper	emwin/emWin_header/SCROLLBAR.h	/^  GUI_COLOR aColorUpper[2];$/;"	m	struct:__anon215
aColorUpper	emwin/emWin_header/SPINBOX.h	/^  GUI_COLOR aColorUpper[2];   \/\/ [0] Upper color of gradient for upper button. [1] Lower color of gradient for upper button.$/;"	m	struct:__anon381
aColorUpperL	emwin/emWin_header/PROGBAR.h	/^  GUI_COLOR aColorUpperL[2];$/;"	m	struct:__anon221
aColorUpperR	emwin/emWin_header/PROGBAR.h	/^  GUI_COLOR aColorUpperR[2];$/;"	m	struct:__anon221
aCompAC_Tab	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aCompAC_Tab[MAX_COMPONENTS];           \/\/ Component's AC Huffman coding table selector$/;"	m	struct:GUI_JPEG_DCONTEXT
aCompDC_Tab	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aCompDC_Tab[MAX_COMPONENTS];           \/\/ Component's DC Huffman coding table selector$/;"	m	struct:GUI_JPEG_DCONTEXT
aCompHSamp	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aCompHSamp[MAX_COMPONENTS];            \/\/ Component's horizontal sampling factor$/;"	m	struct:GUI_JPEG_DCONTEXT
aCompId	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aCompId   [MAX_COMPONENTS];            \/\/ Component's ID$/;"	m	struct:GUI_JPEG_DCONTEXT
aCompList	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aCompList[MAX_COMPSINSCAN];            \/\/ Components in this scan$/;"	m	struct:GUI_JPEG_DCONTEXT
aCompQuant	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aCompQuant[MAX_COMPONENTS];            \/\/ Component's quantization table selector$/;"	m	struct:GUI_JPEG_DCONTEXT
aCompVSamp	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aCompVSamp[MAX_COMPONENTS];            \/\/ Component's vertical sampling factor$/;"	m	struct:GUI_JPEG_DCONTEXT
aDC_Coeffs	emwin/emWin_header/GUI_JPEG_Private.h	/^  COEFF_BUFFER aDC_Coeffs[MAX_COMPONENTS]; \/\/ DC coefficient buffer for progressive scan$/;"	m	struct:GUI_JPEG_DCONTEXT
aDecompBuffer	emwin/emWin_header/GUI_GIF_Private.h	/^  U8    aDecompBuffer[3000];                \/* Decompression buffer. The higher the compression, the more bytes are needed in the buffer. *\/$/;"	m	struct:__anon323
aFlags	emwin/emWin_header/GUI_Type.h	/^  U8  aFlags[5];$/;"	m	struct:__anon271
aHuffNumTableAvail	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aHuffNumTableAvail[MAX_HUFFTABLES];$/;"	m	struct:GUI_JPEG_DCONTEXT
aHuffTable	emwin/emWin_header/GUI_JPEG_Private.h	/^  HUFF_TABLE aHuffTable[MAX_HUFFTABLES];$/;"	m	struct:GUI_JPEG_DCONTEXT
aId	emwin/emWin_header/GUI_Type.h	/^  U16 aId[5];$/;"	m	struct:__anon271
aImageTypeBuffer	emwin/emWin_header/GUI_Type.h	/^  U32 aImageTypeBuffer[4]; \/* Buffer for image type structure *\/$/;"	m	struct:__anon268
aInitialWriteBuffer	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U8 aInitialWriteBuffer[10];$/;"	m	struct:DRIVER_CONTEXT
aLastDC_Val	emwin/emWin_header/GUI_JPEG_Private.h	/^  unsigned   aLastDC_Val[MAX_COMPONENTS];   \/\/ Table of last DC values$/;"	m	struct:GUI_JPEG_DCONTEXT
aLineColor	emwin/emWin_header/TREEVIEW_Private.h	/^  GUI_COLOR aLineColor[3];$/;"	m	struct:__anon226
aLookUp	emwin/emWin_header/GUI_JPEG_Private.h	/^  unsigned aLookUp[256];$/;"	m	struct:__anon362
aMCU_Org	emwin/emWin_header/GUI_JPEG_Private.h	/^  int aMCU_Org[MAX_BLOCKSPERMCU];$/;"	m	struct:GUI_JPEG_DCONTEXT
aPair_16	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U16 aPair_16[3 + FLEXCOLOR_MAX_NUM_DUMMY_READS];$/;"	m	struct:DRIVER_CONTEXT
aPair_8	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U8  aPair_8 [3 + FLEXCOLOR_MAX_NUM_DUMMY_READS];$/;"	m	struct:DRIVER_CONTEXT
aPrefix	emwin/emWin_header/GUI_GIF_Private.h	/^  U8    aPrefix[(1 << MAX_NUM_LWZ_BITS)];   \/* Prefix character of the LZW code. *\/$/;"	m	struct:__anon323
aScrollbarColor	emwin/emWin_header/DROPDOWN_Private.h	/^  GUI_COLOR aScrollbarColor[3];$/;"	m	struct:__anon359
aScrollbarColor	emwin/emWin_header/LISTBOX_Private.h	/^  GUI_COLOR aScrollbarColor[3];$/;"	m	struct:__anon312
aSelColorH	emwin/emWin_header/MENU.h	/^  GUI_COLOR aSelColorH[2];$/;"	m	struct:__anon230
aSelColorV	emwin/emWin_header/MENU.h	/^  GUI_COLOR aSelColorV[2];$/;"	m	struct:__anon230
aSepColorH	emwin/emWin_header/MENU.h	/^  GUI_COLOR aSepColorH[2];$/;"	m	struct:__anon230
aSepColorV	emwin/emWin_header/MENU.h	/^  GUI_COLOR aSepColorV[2];$/;"	m	struct:__anon230
aSpace	emwin/emWin_header/CHOOSECOLOR.h	/^  unsigned  aSpace[2];$/;"	m	struct:__anon233
aStuff	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8         aStuff[4];        \/\/ Stuff back buffer$/;"	m	struct:GUI_JPEG_DCONTEXT
aTextColor	emwin/emWin_header/BUTTON_Private.h	/^  GUI_COLOR aTextColor[3];$/;"	m	struct:__anon401
aTextColor	emwin/emWin_header/DROPDOWN_Private.h	/^  GUI_COLOR aTextColor[3];$/;"	m	struct:__anon359
aTextColor	emwin/emWin_header/EDIT_Private.h	/^  GUI_COLOR        aTextColor[3];$/;"	m	struct:__anon217
aTextColor	emwin/emWin_header/FRAMEWIN_Private.h	/^  GUI_COLOR             aTextColor[2];$/;"	m	struct:__anon279
aTextColor	emwin/emWin_header/ICONVIEW_Private.h	/^  GUI_COLOR        aTextColor[3];$/;"	m	struct:__anon218
aTextColor	emwin/emWin_header/LISTBOX_Private.h	/^  GUI_COLOR aTextColor[4];$/;"	m	struct:__anon312
aTextColor	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_COLOR                    aTextColor[4];$/;"	m	struct:__anon331
aTextColor	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_COLOR                    aTextColor[4];$/;"	m	struct:__anon332
aTextColor	emwin/emWin_header/LISTWHEEL_Private.h	/^  GUI_COLOR        aTextColor[2];$/;"	m	struct:__anon352
aTextColor	emwin/emWin_header/MENU_Private.h	/^  GUI_COLOR           aTextColor[5];$/;"	m	struct:__anon318
aTextColor	emwin/emWin_header/MULTIPAGE_Private.h	/^  GUI_COLOR                 aTextColor[MULTIPAGE_NUMCOLORS];$/;"	m	struct:__anon340
aTextColor	emwin/emWin_header/PROGBAR_Private.h	/^  GUI_COLOR aTextColor[2];$/;"	m	struct:__anon423
aTextColor	emwin/emWin_header/SPINBOX_Private.h	/^  GUI_COLOR            aTextColor[2];        \/\/ Text       color for the states (enabled, disabled).$/;"	m	struct:__anon321
aTextColor	emwin/emWin_header/SWIPELIST_Private.h	/^  GUI_COLOR        aTextColor[5];$/;"	m	struct:__anon237
aTextColor	emwin/emWin_header/TREEVIEW_Private.h	/^  GUI_COLOR aTextColor[3];$/;"	m	struct:__anon226
aTree	emwin/emWin_header/GUI_JPEG_Private.h	/^  unsigned aTree[512];$/;"	m	struct:__anon362
aTriangleColor	emwin/emWin_header/SPINBOX_Private.h	/^  GUI_COLOR            aTriangleColor[3];    \/\/ Color of the triangle for the button states (disabled, pressed, unpressed).$/;"	m	struct:__anon321
aaHuffNum	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aaHuffNum[MAX_HUFFTABLES][17];   \/\/ Pointer to number of Huffman codes per bit size$/;"	m	struct:GUI_JPEG_DCONTEXT
aaHuffVal	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8 aaHuffVal[MAX_HUFFTABLES][256];  \/\/ Pointer to Huffman codes$/;"	m	struct:GUI_JPEG_DCONTEXT
aaQuantTbl	emwin/emWin_header/GUI_JPEG_Private.h	/^  U16 aaQuantTbl[MAX_QUANTTABLES][64];$/;"	m	struct:GUI_JPEG_DCONTEXT
abData	usb/device/class/usb_device_ccid.h	/^    uint8_t abData[1];        \/*!< Data block sent to the CCID *\/$/;"	m	struct:_usb_device_ccid_transfer_block_command
abData	usb/device/class/usb_device_ccid.h	/^    uint8_t abData[1];        \/*!<$/;"	m	struct:_usb_device_ccid_secure_command
abData	usb/device/class/usb_device_ccid.h	/^    uint8_t abData[1];       \/*!< This field contains the data returned by the CCID. *\/$/;"	m	struct:_usb_device_ccid_data_block_response
abData	usb/device/class/usb_device_ccid.h	/^    uint8_t abData[1];    \/*!< Data sent from CCID *\/$/;"	m	struct:_usb_device_ccid_escape_response
abData	usb/device/class/usb_device_ccid.h	/^    uint8_t abData[1];    \/*!< Size of abData field of this message *\/$/;"	m	struct:_usb_device_ccid_escape_command
abPINApdu	usb/device/class/usb_device_ccid.h	/^    uint8_t abPINApdu[1];              \/*!< APDU to send to the ICC *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
abPINApdu	usb/device/class/usb_device_ccid.h	/^    uint8_t abPINApdu[1];              \/*!< APDU to send to the ICC *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
abPINDataStructure	usb/device/class/usb_device_ccid.h	/^    uint8_t abPINDataStructure[1]; \/* PIN Verification Data Structure or PIN Modification Data Structure *\/$/;"	m	struct:_usb_device_ccid_secure_pin_operation_command
abProtocolDataStructure	usb/device/class/usb_device_ccid.h	/^    uint8_t abProtocolDataStructure[1]; \/*!< Protocol Data Structure *\/$/;"	m	struct:_usb_device_ccid_parameters_response
abProtocolDataStructure	usb/device/class/usb_device_ccid.h	/^    uint8_t abProtocolDataStructure[1]; \/*!< Protocol Data Structure. For T = 0U, see$/;"	m	struct:_usb_device_ccid_set_parameters_command
abort	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_abort_fn              abort;$/;"	m	struct:altcp_functions
abstractState	vcom/virtual_com.h	/^    uint8_t *abstractState;      \/* Abstract state of cdc device *\/$/;"	m	struct:_usb_cdc_vcom_struct
acText	emwin/emWin_header/HEADER_Private.h	/^  char    acText[1];$/;"	m	struct:__anon273
acText	emwin/emWin_header/ICONVIEW_Private.h	/^  char                acText[1];$/;"	m	struct:__anon220
acText	emwin/emWin_header/LISTBOX_Private.h	/^  char acText[1];$/;"	m	struct:__anon311
acText	emwin/emWin_header/LISTVIEW_Private.h	/^  char                         acText[1];$/;"	m	struct:__anon333
acText	emwin/emWin_header/LISTWHEEL_Private.h	/^  char   acText[1];$/;"	m	struct:__anon351
acText	emwin/emWin_header/MENU_Private.h	/^  char        acText[1];$/;"	m	struct:__anon317
acText	emwin/emWin_header/MULTIPAGE_Private.h	/^  char    acText;$/;"	m	struct:__anon338
acText	emwin/emWin_header/TREEVIEW_Private.h	/^  char                 acText[1];$/;"	m	struct:__anon225
accept	lwip/src/include/lwip/altcp.h	/^  altcp_accept_fn     accept;$/;"	m	struct:altcp_pcb
accept	lwip/src/include/lwip/sockets.h	614;"	d
accept	lwip/src/include/lwip/tcp.h	/^  tcp_accept_fn accept;$/;"	m	struct:tcp_pcb_listen
accept_function	lwip/src/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int accept_local           :1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_local	lwip/src/include/netif/ppp/ipv6cp.h	/^    unsigned int accept_local   :1;  \/* accept peer's value for iface id? *\/$/;"	m	struct:ipv6cp_options
accept_remote	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int accept_remote          :1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptmbox	lwip/src/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	lwip/src/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
accomp	lwip/src/include/netif/ppp/pppos.h	/^  unsigned int accomp          :1; \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:pppos_pcb_s
ack	littlefs/littlefs_include/lfs.h	/^    lfs_block_t ack;$/;"	m	struct:lfs_free
ackci	lwip/src/include/netif/ppp/fsm.h	/^    int  (*ackci)		\/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
ackno	lwip/src/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
active_packet	lwip/src/netif/ppp/demand.c	/^active_packet(p, len)$/;"	f	file:
active_pkt	lwip/src/include/netif/ppp/ppp_impl.h	/^    int  (*active_pkt) (u_char *pkt, int len);$/;"	m	struct:protent
ad	lwip/src/include/lwip/priv/api_msg.h	/^    } ad;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::__anon457
add	lwip/src/include/lwip/priv/api_msg.h	/^    } add;$/;"	m	union:netifapi_msg::__anon463	typeref:struct:netifapi_msg::__anon463::__anon464
addci	lwip/src/include/netif/ppp/fsm.h	/^    void (*addci) 		\/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
additionalLength	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t additionalLength;     \/*!< The Additional Length field shall specify the length in bytes of the parameters*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
additionalSenseCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t additionalSenseCode;     \/*!< Additional Sense Code*\/$/;"	m	struct:_usb_device_request_sense_data_struct
additionalSenseLength	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t additionalSenseLength;   \/*!< Additional Sense Length*\/$/;"	m	struct:_usb_device_request_sense_data_struct
additionalSenseQualifer	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t additionalSenseQualifer; \/*!< Additional Sense Code Qualifier*\/$/;"	m	struct:_usb_device_request_sense_data_struct
addr	lwip/src/api/netdb.c	/^  ip_addr_t addr;$/;"	m	struct:gethostbyname_r_helper	file:
addr	lwip/src/include/lwip/dns.h	/^  ip_addr_t addr;$/;"	m	struct:local_hostlist_entry
addr	lwip/src/include/lwip/ip4_addr.h	/^  u32_t addr;$/;"	m	struct:ip4_addr
addr	lwip/src/include/lwip/ip6_addr.h	/^  u32_t addr[4];$/;"	m	struct:ip6_addr
addr	lwip/src/include/lwip/netbuf.h	/^  ip_addr_t addr;$/;"	m	struct:netbuf
addr	lwip/src/include/netif/lowpan6_common.h	/^  u8_t addr[8];$/;"	m	struct:lowpan6_link_addr
addr	lwip/src/include/netif/zepif.h	/^  u8_t                addr[6];$/;"	m	struct:zepif_init
addr	lwip/src/netif/bridgeif.c	/^  struct eth_addr addr;$/;"	m	struct:bridgeif_fdb_static_entry_s	typeref:struct:bridgeif_fdb_static_entry_s::eth_addr	file:
addr	lwip/src/netif/bridgeif_fdb.c	/^  struct eth_addr addr;$/;"	m	struct:bridgeif_dfdb_entry_s	typeref:struct:bridgeif_dfdb_entry_s::eth_addr	file:
addr_hint	lwip/src/include/lwip/netif.h	/^  netif_addr_idx_t addr_hint;$/;"	m	struct:netif_hint
addr_index	lwip/src/include/lwip/netif.h	/^    s8_t addr_index;$/;"	m	struct:__anon451::ipv6_addr_state_changed_s
addr_index	lwip/src/include/lwip/netif.h	/^    s8_t addr_index;$/;"	m	struct:__anon451::ipv6_set_s
addr_len	lwip/src/include/netif/lowpan6_common.h	/^  u8_t addr_len;$/;"	m	struct:lowpan6_link_addr
addr_list	lwip/src/api/netdb.c	/^  ip_addr_t *addr_list[2];$/;"	m	struct:gethostbyname_r_helper	file:
address	drivers/fsl_i2c.h	/^    uint8_t address;     \/*!< 7-bit Slave address SLVADR. *\/$/;"	m	struct:_i2c_slave_address
address	lwip/src/include/lwip/netif.h	/^    const ip_addr_t* address;$/;"	m	struct:__anon451::ipv6_addr_state_changed_s
address0	drivers/fsl_i2c.h	/^    i2c_slave_address_t address0;           \/*!< Slave's 7-bit address and disable. *\/$/;"	m	struct:_i2c_slave_config
address1	drivers/fsl_i2c.h	/^    i2c_slave_address_t address1;           \/*!< Alternate slave 7-bit address and disable. *\/$/;"	m	struct:_i2c_slave_config
address2	drivers/fsl_i2c.h	/^    i2c_slave_address_t address2;           \/*!< Alternate slave 7-bit address and disable. *\/$/;"	m	struct:_i2c_slave_config
address3	drivers/fsl_i2c.h	/^    i2c_slave_address_t address3;           \/*!< Alternate slave 7-bit address and disable. *\/$/;"	m	struct:_i2c_slave_config
addressDisable	drivers/fsl_i2c.h	/^    bool addressDisable; \/*!< Slave address disable SADISABLE. *\/$/;"	m	struct:_i2c_slave_address
address_10_bit	CMSIS_driver/Driver_I2C.h	/^  uint32_t address_10_bit : 1;          \/\/\/< supports 10-bit addressing$/;"	m	struct:_ARM_I2C_CAPABILITIES
addressingReset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t addressingReset;$/;"	m	struct:_rndis_reset_cmplt_struct
addrinfo	lwip/src/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrinfo	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_get_tcp_addrinfo_fn   addrinfo;$/;"	m	struct:altcp_functions
aesApiBase	device/LPC54018.h	/^  __I uint32_t aesApiBase;                       \/** AES API Base *\/$/;"	m	struct:__anon194
afListOffset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t afListOffset;$/;"	m	struct:_rndis_init_cmplt_struct
afListSize	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t afListSize;$/;"	m	struct:_rndis_init_cmplt_struct
age	lwip/src/include/lwip/priv/nd6_priv.h	/^  u32_t age;$/;"	m	struct:nd6_destination_cache_entry
ahDrawObj	emwin/emWin_header/BUTTON_Private.h	/^  WM_HMEM ahDrawObj[3];$/;"	m	struct:__anon402
ai_addr	lwip/src/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	lwip/src/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	lwip/src/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	lwip/src/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	lwip/src/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	lwip/src/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	lwip/src/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	lwip/src/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aks_to_M2	codec2/quantise.c	/^void aks_to_M2($/;"	f
alen	littlefs/littlefs_include/lfs.h	/^        uint8_t alen;$/;"	m	struct:lfs_entry::lfs_disk_entry
alen	littlefs/littlefs_include/lfs.h	/^        uint8_t alen;$/;"	m	struct:lfs_superblock::lfs_disk_superblock
algo	drivers/fsl_sha.c	/^    sha_algo_t algo;        \/*!< selected algorithm from the set of supported algorithms *\/$/;"	m	struct:_sha_ctx_internal	file:
aliases	lwip/src/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
allRegisters	codec/fsl_wm8904.c	/^static const uint8_t allRegisters[] = {$/;"	v	file:
alloc	lwip/src/include/lwip/altcp.h	/^  altcp_new_fn  alloc;$/;"	m	struct:altcp_allocator_s
alloc_socket	lwip/src/api/sockets.c	/^alloc_socket(struct netconn *newconn, int accepted)$/;"	f	file:
allocationLength	usb/device/class/usb_device_msc_ufi.h	/^    uint16_t allocationLength; \/*!< Allocation Length*\/$/;"	m	struct:_usb_device_read_format_capacities_command_struct
allocationLength	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t allocationLength;  \/*!< Allocation Length*\/$/;"	m	struct:_usb_device_request_sense_command_struct
allocationLength	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t allocationLength;  \/*!< Specifies the maximum number of bytes of inquiry data to be returned*\/$/;"	m	struct:_usb_device_inquiry_command_struct
allrouters	lwip/src/core/ipv4/igmp.c	/^static ip4_addr_t     allrouters;$/;"	v	file:
allsystems	lwip/src/core/ipv4/igmp.c	/^static ip4_addr_t     allsystems;$/;"	v	file:
altcp_abort	lwip/src/core/altcp.c	/^altcp_abort(struct altcp_pcb *conn)$/;"	f
altcp_abort	lwip/src/include/lwip/altcp.h	177;"	d
altcp_abort_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef void  (*altcp_abort_fn)(struct altcp_pcb *conn);$/;"	t
altcp_accept	lwip/src/core/altcp.c	/^altcp_accept(struct altcp_pcb *conn, altcp_accept_fn accept)$/;"	f
altcp_accept	lwip/src/include/lwip/altcp.h	163;"	d
altcp_accept_fn	lwip/src/include/lwip/altcp.h	/^typedef err_t (*altcp_accept_fn)(void *arg, struct altcp_pcb *new_conn, err_t err);$/;"	t
altcp_accept_fn	lwip/src/include/lwip/altcp.h	146;"	d
altcp_alloc	lwip/src/core/altcp.c	/^altcp_alloc(void)$/;"	f
altcp_allocator_s	lwip/src/include/lwip/altcp.h	/^typedef struct altcp_allocator_s {$/;"	s
altcp_allocator_t	lwip/src/include/lwip/altcp.h	/^} altcp_allocator_t;$/;"	t	typeref:struct:altcp_allocator_s
altcp_arg	lwip/src/core/altcp.c	/^altcp_arg(struct altcp_pcb *conn, void *arg)$/;"	f
altcp_arg	lwip/src/include/lwip/altcp.h	162;"	d
altcp_bind	lwip/src/core/altcp.c	/^altcp_bind(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port)$/;"	f
altcp_bind	lwip/src/include/lwip/altcp.h	170;"	d
altcp_bind_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef err_t (*altcp_bind_fn)(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port);$/;"	t
altcp_close	lwip/src/core/altcp.c	/^altcp_close(struct altcp_pcb *conn)$/;"	f
altcp_close	lwip/src/include/lwip/altcp.h	178;"	d
altcp_close_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef err_t (*altcp_close_fn)(struct altcp_pcb *conn);$/;"	t
altcp_connect	lwip/src/core/altcp.c	/^altcp_connect(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port, altcp_connected_fn connected)$/;"	f
altcp_connect	lwip/src/include/lwip/altcp.h	171;"	d
altcp_connect_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef err_t (*altcp_connect_fn)(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port, altcp_connected_fn connected);$/;"	t
altcp_connected_fn	lwip/src/include/lwip/altcp.h	/^typedef err_t (*altcp_connected_fn)(void *arg, struct altcp_pcb *conn, err_t err);$/;"	t
altcp_connected_fn	lwip/src/include/lwip/altcp.h	147;"	d
altcp_dbg_get_tcp_state	lwip/src/core/altcp.c	/^altcp_dbg_get_tcp_state(struct altcp_pcb *conn)$/;"	f
altcp_dbg_get_tcp_state	lwip/src/include/lwip/altcp.h	196;"	d
altcp_dbg_get_tcp_state_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef enum tcp_state (*altcp_dbg_get_tcp_state_fn)(struct altcp_pcb *conn);$/;"	t	typeref:enum:altcp_dbg_get_tcp_state_fn
altcp_dealloc_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef void  (*altcp_dealloc_fn)(struct altcp_pcb *conn);$/;"	t
altcp_default_bind	lwip/src/core/altcp.c	/^altcp_default_bind(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port)$/;"	f
altcp_default_dbg_get_tcp_state	lwip/src/core/altcp.c	/^altcp_default_dbg_get_tcp_state(struct altcp_pcb *conn)$/;"	f
altcp_default_dealloc	lwip/src/core/altcp.c	/^altcp_default_dealloc(struct altcp_pcb *conn)$/;"	f
altcp_default_get_ip	lwip/src/core/altcp.c	/^altcp_default_get_ip(struct altcp_pcb *conn, int local)$/;"	f
altcp_default_get_port	lwip/src/core/altcp.c	/^altcp_default_get_port(struct altcp_pcb *conn, int local)$/;"	f
altcp_default_get_tcp_addrinfo	lwip/src/core/altcp.c	/^altcp_default_get_tcp_addrinfo(struct altcp_pcb *conn, int local, ip_addr_t *addr, u16_t *port)$/;"	f
altcp_default_mss	lwip/src/core/altcp.c	/^altcp_default_mss(struct altcp_pcb *conn)$/;"	f
altcp_default_nagle_disable	lwip/src/core/altcp.c	/^altcp_default_nagle_disable(struct altcp_pcb *conn)$/;"	f
altcp_default_nagle_disabled	lwip/src/core/altcp.c	/^altcp_default_nagle_disabled(struct altcp_pcb *conn)$/;"	f
altcp_default_nagle_enable	lwip/src/core/altcp.c	/^altcp_default_nagle_enable(struct altcp_pcb *conn)$/;"	f
altcp_default_output	lwip/src/core/altcp.c	/^altcp_default_output(struct altcp_pcb *conn)$/;"	f
altcp_default_recved	lwip/src/core/altcp.c	/^altcp_default_recved(struct altcp_pcb *conn, u16_t len)$/;"	f
altcp_default_set_poll	lwip/src/core/altcp.c	/^altcp_default_set_poll(struct altcp_pcb *conn, u8_t interval)$/;"	f
altcp_default_setprio	lwip/src/core/altcp.c	/^altcp_default_setprio(struct altcp_pcb *conn, u8_t prio)$/;"	f
altcp_default_shutdown	lwip/src/core/altcp.c	/^altcp_default_shutdown(struct altcp_pcb *conn, int shut_rx, int shut_tx)$/;"	f
altcp_default_sndbuf	lwip/src/core/altcp.c	/^altcp_default_sndbuf(struct altcp_pcb *conn)$/;"	f
altcp_default_sndqueuelen	lwip/src/core/altcp.c	/^altcp_default_sndqueuelen(struct altcp_pcb *conn)$/;"	f
altcp_default_write	lwip/src/core/altcp.c	/^altcp_default_write(struct altcp_pcb *conn, const void *dataptr, u16_t len, u8_t apiflags)$/;"	f
altcp_err	lwip/src/core/altcp.c	/^altcp_err(struct altcp_pcb *conn, altcp_err_fn err)$/;"	f
altcp_err	lwip/src/include/lwip/altcp.h	167;"	d
altcp_err_fn	lwip/src/include/lwip/altcp.h	/^typedef void  (*altcp_err_fn)(void *arg, err_t err);$/;"	t
altcp_err_fn	lwip/src/include/lwip/altcp.h	151;"	d
altcp_free	lwip/src/core/altcp.c	/^altcp_free(struct altcp_pcb *conn)$/;"	f
altcp_functions	lwip/src/include/lwip/priv/altcp_priv.h	/^struct altcp_functions {$/;"	s
altcp_get_ip	lwip/src/core/altcp.c	/^altcp_get_ip(struct altcp_pcb *conn, int local)$/;"	f
altcp_get_ip	lwip/src/include/lwip/altcp.h	193;"	d
altcp_get_ip_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef ip_addr_t *(*altcp_get_ip_fn)(struct altcp_pcb *conn, int local);$/;"	t
altcp_get_port	lwip/src/core/altcp.c	/^altcp_get_port(struct altcp_pcb *conn, int local)$/;"	f
altcp_get_port_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef u16_t (*altcp_get_port_fn)(struct altcp_pcb *conn, int local);$/;"	t
altcp_get_tcp_addrinfo	lwip/src/core/altcp.c	/^altcp_get_tcp_addrinfo(struct altcp_pcb *conn, int local, ip_addr_t *addr, u16_t *port)$/;"	f
altcp_get_tcp_addrinfo	lwip/src/include/lwip/altcp.h	192;"	d
altcp_get_tcp_addrinfo_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef err_t (*altcp_get_tcp_addrinfo_fn)(struct altcp_pcb *conn, int local, ip_addr_t *addr, u16_t *port);$/;"	t
altcp_listen	lwip/src/include/lwip/altcp.h	110;"	d
altcp_listen	lwip/src/include/lwip/altcp.h	175;"	d
altcp_listen_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef struct altcp_pcb *(*altcp_listen_fn)(struct altcp_pcb *conn, u8_t backlog, err_t *err);$/;"	t	typeref:struct:altcp_listen_fn
altcp_listen_with_backlog	lwip/src/include/lwip/altcp.h	108;"	d
altcp_listen_with_backlog	lwip/src/include/lwip/altcp.h	174;"	d
altcp_listen_with_backlog_and_err	lwip/src/core/altcp.c	/^altcp_listen_with_backlog_and_err(struct altcp_pcb *conn, u8_t backlog, err_t *err)$/;"	f
altcp_listen_with_backlog_and_err	lwip/src/include/lwip/altcp.h	173;"	d
altcp_mss	lwip/src/core/altcp.c	/^altcp_mss(struct altcp_pcb *conn)$/;"	f
altcp_mss	lwip/src/include/lwip/altcp.h	184;"	d
altcp_mss_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef u16_t (*altcp_mss_fn)(struct altcp_pcb *conn);$/;"	t
altcp_nagle_disable	lwip/src/core/altcp.c	/^altcp_nagle_disable(struct altcp_pcb *conn)$/;"	f
altcp_nagle_disable	lwip/src/include/lwip/altcp.h	187;"	d
altcp_nagle_disable_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef void  (*altcp_nagle_disable_fn)(struct altcp_pcb *conn);$/;"	t
altcp_nagle_disabled	lwip/src/core/altcp.c	/^altcp_nagle_disabled(struct altcp_pcb *conn)$/;"	f
altcp_nagle_disabled	lwip/src/include/lwip/altcp.h	189;"	d
altcp_nagle_disabled_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef int   (*altcp_nagle_disabled_fn)(struct altcp_pcb *conn);$/;"	t
altcp_nagle_enable	lwip/src/core/altcp.c	/^altcp_nagle_enable(struct altcp_pcb *conn)$/;"	f
altcp_nagle_enable	lwip/src/include/lwip/altcp.h	188;"	d
altcp_nagle_enable_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef void  (*altcp_nagle_enable_fn)(struct altcp_pcb *conn);$/;"	t
altcp_new	lwip/src/core/altcp.c	/^altcp_new(altcp_allocator_t *allocator)$/;"	f
altcp_new	lwip/src/include/lwip/altcp.h	158;"	d
altcp_new_fn	lwip/src/include/lwip/altcp.h	/^typedef struct altcp_pcb* (*altcp_new_fn)(void *arg, u8_t ip_type);$/;"	t	typeref:struct:altcp_new_fn
altcp_new_ip6	lwip/src/core/altcp.c	/^altcp_new_ip6(altcp_allocator_t *allocator)$/;"	f
altcp_new_ip6	lwip/src/include/lwip/altcp.h	159;"	d
altcp_new_ip_type	lwip/src/core/altcp.c	/^altcp_new_ip_type(altcp_allocator_t *allocator, u8_t ip_type)$/;"	f
altcp_new_ip_type	lwip/src/include/lwip/altcp.h	160;"	d
altcp_output	lwip/src/core/altcp.c	/^altcp_output(struct altcp_pcb *conn)$/;"	f
altcp_output	lwip/src/include/lwip/altcp.h	182;"	d
altcp_output_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef err_t (*altcp_output_fn)(struct altcp_pcb *conn);$/;"	t
altcp_pcb	lwip/src/include/lwip/altcp.h	/^struct altcp_pcb {$/;"	s
altcp_pcb	lwip/src/include/lwip/altcp.h	153;"	d
altcp_poll	lwip/src/core/altcp.c	/^altcp_poll(struct altcp_pcb *conn, altcp_poll_fn poll, u8_t interval)$/;"	f
altcp_poll	lwip/src/include/lwip/altcp.h	166;"	d
altcp_poll_fn	lwip/src/include/lwip/altcp.h	/^typedef err_t (*altcp_poll_fn)(void *arg, struct altcp_pcb *conn);$/;"	t
altcp_poll_fn	lwip/src/include/lwip/altcp.h	150;"	d
altcp_recv	lwip/src/core/altcp.c	/^altcp_recv(struct altcp_pcb *conn, altcp_recv_fn recv)$/;"	f
altcp_recv	lwip/src/include/lwip/altcp.h	164;"	d
altcp_recv_fn	lwip/src/include/lwip/altcp.h	/^typedef err_t (*altcp_recv_fn)(void *arg, struct altcp_pcb *conn, struct pbuf *p, err_t err);$/;"	t
altcp_recv_fn	lwip/src/include/lwip/altcp.h	148;"	d
altcp_recved	lwip/src/core/altcp.c	/^altcp_recved(struct altcp_pcb *conn, u16_t len)$/;"	f
altcp_recved	lwip/src/include/lwip/altcp.h	169;"	d
altcp_recved_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef void (*altcp_recved_fn)(struct altcp_pcb *conn, u16_t len);$/;"	t
altcp_sent	lwip/src/core/altcp.c	/^altcp_sent(struct altcp_pcb *conn, altcp_sent_fn sent)$/;"	f
altcp_sent	lwip/src/include/lwip/altcp.h	165;"	d
altcp_sent_fn	lwip/src/include/lwip/altcp.h	/^typedef err_t (*altcp_sent_fn)(void *arg, struct altcp_pcb *conn, u16_t len);$/;"	t
altcp_sent_fn	lwip/src/include/lwip/altcp.h	149;"	d
altcp_set_poll_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef void (*altcp_set_poll_fn)(struct altcp_pcb *conn, u8_t interval);$/;"	t
altcp_setprio	lwip/src/core/altcp.c	/^altcp_setprio(struct altcp_pcb *conn, u8_t prio)$/;"	f
altcp_setprio	lwip/src/include/lwip/altcp.h	190;"	d
altcp_setprio_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef void  (*altcp_setprio_fn)(struct altcp_pcb *conn, u8_t prio);$/;"	t
altcp_shutdown	lwip/src/core/altcp.c	/^altcp_shutdown(struct altcp_pcb *conn, int shut_rx, int shut_tx)$/;"	f
altcp_shutdown	lwip/src/include/lwip/altcp.h	179;"	d
altcp_shutdown_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef err_t (*altcp_shutdown_fn)(struct altcp_pcb *conn, int shut_rx, int shut_tx);$/;"	t
altcp_sndbuf	lwip/src/core/altcp.c	/^altcp_sndbuf(struct altcp_pcb *conn)$/;"	f
altcp_sndbuf	lwip/src/include/lwip/altcp.h	185;"	d
altcp_sndbuf_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef u16_t (*altcp_sndbuf_fn)(struct altcp_pcb *conn);$/;"	t
altcp_sndqueuelen	lwip/src/core/altcp.c	/^altcp_sndqueuelen(struct altcp_pcb *conn)$/;"	f
altcp_sndqueuelen	lwip/src/include/lwip/altcp.h	186;"	d
altcp_sndqueuelen_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef u16_t (*altcp_sndqueuelen_fn)(struct altcp_pcb *conn);$/;"	t
altcp_tcp_abort	lwip/src/core/altcp_tcp.c	/^altcp_tcp_abort(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_accept	lwip/src/core/altcp_tcp.c	/^altcp_tcp_accept(void *arg, struct tcp_pcb *new_tpcb, err_t err)$/;"	f	file:
altcp_tcp_alloc	lwip/src/core/altcp_tcp.c	/^altcp_tcp_alloc(void *arg, u8_t ip_type)$/;"	f
altcp_tcp_bind	lwip/src/core/altcp_tcp.c	/^altcp_tcp_bind(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port)$/;"	f	file:
altcp_tcp_close	lwip/src/core/altcp_tcp.c	/^altcp_tcp_close(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_connect	lwip/src/core/altcp_tcp.c	/^altcp_tcp_connect(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port, altcp_connected_fn connected)$/;"	f	file:
altcp_tcp_connected	lwip/src/core/altcp_tcp.c	/^altcp_tcp_connected(void *arg, struct tcp_pcb *tpcb, err_t err)$/;"	f	file:
altcp_tcp_dbg_get_tcp_state	lwip/src/core/altcp_tcp.c	/^altcp_tcp_dbg_get_tcp_state(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_dealloc	lwip/src/core/altcp_tcp.c	/^altcp_tcp_dealloc(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_err	lwip/src/core/altcp_tcp.c	/^altcp_tcp_err(void *arg, err_t err)$/;"	f	file:
altcp_tcp_functions	lwip/src/core/altcp_tcp.c	/^const struct altcp_functions altcp_tcp_functions = {$/;"	v	typeref:struct:altcp_functions
altcp_tcp_get_ip	lwip/src/core/altcp_tcp.c	/^altcp_tcp_get_ip(struct altcp_pcb *conn, int local)$/;"	f	file:
altcp_tcp_get_port	lwip/src/core/altcp_tcp.c	/^altcp_tcp_get_port(struct altcp_pcb *conn, int local)$/;"	f	file:
altcp_tcp_get_tcp_addrinfo	lwip/src/core/altcp_tcp.c	/^altcp_tcp_get_tcp_addrinfo(struct altcp_pcb *conn, int local, ip_addr_t *addr, u16_t *port)$/;"	f	file:
altcp_tcp_listen	lwip/src/core/altcp_tcp.c	/^altcp_tcp_listen(struct altcp_pcb *conn, u8_t backlog, err_t *err)$/;"	f	file:
altcp_tcp_mss	lwip/src/core/altcp_tcp.c	/^altcp_tcp_mss(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_nagle_disable	lwip/src/core/altcp_tcp.c	/^altcp_tcp_nagle_disable(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_nagle_disabled	lwip/src/core/altcp_tcp.c	/^altcp_tcp_nagle_disabled(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_nagle_enable	lwip/src/core/altcp_tcp.c	/^altcp_tcp_nagle_enable(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_new	lwip/src/include/lwip/altcp.h	155;"	d
altcp_tcp_new	lwip/src/include/lwip/altcp_tcp.h	58;"	d
altcp_tcp_new_ip6	lwip/src/include/lwip/altcp.h	156;"	d
altcp_tcp_new_ip6	lwip/src/include/lwip/altcp_tcp.h	59;"	d
altcp_tcp_new_ip_type	lwip/src/core/altcp_tcp.c	/^altcp_tcp_new_ip_type(u8_t ip_type)$/;"	f
altcp_tcp_new_ip_type	lwip/src/include/lwip/altcp.h	154;"	d
altcp_tcp_output	lwip/src/core/altcp_tcp.c	/^altcp_tcp_output(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_poll	lwip/src/core/altcp_tcp.c	/^altcp_tcp_poll(void *arg, struct tcp_pcb *tpcb)$/;"	f	file:
altcp_tcp_recv	lwip/src/core/altcp_tcp.c	/^altcp_tcp_recv(void *arg, struct tcp_pcb *tpcb, struct pbuf *p, err_t err)$/;"	f	file:
altcp_tcp_recved	lwip/src/core/altcp_tcp.c	/^altcp_tcp_recved(struct altcp_pcb *conn, u16_t len)$/;"	f	file:
altcp_tcp_remove_callbacks	lwip/src/core/altcp_tcp.c	/^altcp_tcp_remove_callbacks(struct tcp_pcb *tpcb)$/;"	f	file:
altcp_tcp_sent	lwip/src/core/altcp_tcp.c	/^altcp_tcp_sent(void *arg, struct tcp_pcb *tpcb, u16_t len)$/;"	f	file:
altcp_tcp_set_poll	lwip/src/core/altcp_tcp.c	/^altcp_tcp_set_poll(struct altcp_pcb *conn, u8_t interval)$/;"	f	file:
altcp_tcp_setprio	lwip/src/core/altcp_tcp.c	/^altcp_tcp_setprio(struct altcp_pcb *conn, u8_t prio)$/;"	f	file:
altcp_tcp_setup	lwip/src/core/altcp_tcp.c	/^altcp_tcp_setup(struct altcp_pcb *conn, struct tcp_pcb *tpcb)$/;"	f	file:
altcp_tcp_setup_callbacks	lwip/src/core/altcp_tcp.c	/^altcp_tcp_setup_callbacks(struct altcp_pcb *conn, struct tcp_pcb *tpcb)$/;"	f	file:
altcp_tcp_shutdown	lwip/src/core/altcp_tcp.c	/^altcp_tcp_shutdown(struct altcp_pcb *conn, int shut_rx, int shut_tx)$/;"	f	file:
altcp_tcp_sndbuf	lwip/src/core/altcp_tcp.c	/^altcp_tcp_sndbuf(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_sndqueuelen	lwip/src/core/altcp_tcp.c	/^altcp_tcp_sndqueuelen(struct altcp_pcb *conn)$/;"	f	file:
altcp_tcp_wrap	lwip/src/core/altcp_tcp.c	/^altcp_tcp_wrap(struct tcp_pcb *tpcb)$/;"	f
altcp_tcp_write	lwip/src/core/altcp_tcp.c	/^altcp_tcp_write(struct altcp_pcb *conn, const void *dataptr, u16_t len, u8_t apiflags)$/;"	f	file:
altcp_tls_alloc	lwip/src/core/altcp_alloc.c	/^altcp_tls_alloc(void *arg, u8_t ip_type)$/;"	f
altcp_tls_new	lwip/src/core/altcp_alloc.c	/^altcp_tls_new(struct altcp_tls_config *config, u8_t ip_type)$/;"	f
altcp_write	lwip/src/core/altcp.c	/^altcp_write(struct altcp_pcb *conn, const void *dataptr, u16_t len, u8_t apiflags)$/;"	f
altcp_write	lwip/src/include/lwip/altcp.h	181;"	d
altcp_write_fn	lwip/src/include/lwip/priv/altcp_priv.h	/^typedef err_t (*altcp_write_fn)(struct altcp_pcb *conn, const void *dataptr, u16_t len, u8_t apiflags);$/;"	t
alternate	usb/device/class/usb_device_ccid.h	/^    uint8_t alternate;           \/*!< Current alternate setting of the interface *\/$/;"	m	struct:_usb_device_ccid_struct
alternate	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t alternate;                     \/*!< The alternate setting value of the interface. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
alternate	usb/device/class/usb_device_hid.h	/^    uint8_t alternate;                              \/*!< Current alternate setting of the interface *\/$/;"	m	struct:_usb_device_hid_struct
alternate	usb/device/class/usb_device_msc.h	/^    uint8_t alternate;               \/*!< Current alternate setting of the interface *\/$/;"	m	struct:_usb_device_msc_struct
alternate	usb/device/class/usb_device_phdc.h	/^    uint8_t alternate;                              \/*!< Current alternate setting of the interface *\/$/;"	m	struct:_usb_device_phdc_struct
alternate	usb/device/class/usb_device_printer.h	/^    uint8_t alternate;                              \/*!< Interface alternate value *\/$/;"	m	struct:_usb_device_printer_struct
alternateSetting	usb/device/class/usb_device_class.h	/^    uint8_t alternateSetting;                \/*!< Alternate setting number*\/$/;"	m	struct:_usb_device_interface_struct
alternateSetting	usb/device/class/usb_device_printer.h	/^    uint8_t alternateSetting; \/*!< GET_DEVICE_ID request alternate setting *\/$/;"	m	struct:_usb_device_printer_class_request
analyse_one_frame	codec2/codec2.c	/^void analyse_one_frame(struct CODEC2 *c2, MODEL *model, short speech[])$/;"	f
apAC_Huff	emwin/emWin_header/GUI_JPEG_Private.h	/^  HUFF_TABLE * apAC_Huff[MAX_BLOCKSPERMCU];$/;"	m	struct:GUI_JPEG_DCONTEXT
apBm	emwin/emWin_header/CHECKBOX_Private.h	/^  const GUI_BITMAP    * apBm[6];$/;"	m	struct:__anon205
apBm	emwin/emWin_header/TREEVIEW_Private.h	/^  const GUI_BITMAP * apBm[3]; \/* Closed, Open, Leaf *\/$/;"	m	struct:__anon224
apBm	emwin/emWin_header/TREEVIEW_Private.h	/^  const GUI_BITMAP * apBm[5]; \/* Closed, Open, Leaf, Plus, Minus *\/$/;"	m	struct:__anon226
apBmRadio	emwin/emWin_header/RADIO_Private.h	/^  const GUI_BITMAP * apBmRadio[2];$/;"	m	struct:__anon342
apComponent	emwin/emWin_header/GUI_JPEG_Private.h	/^  unsigned * apComponent[MAX_BLOCKSPERMCU]; \/\/ Points into the table aLastDC_Val[]$/;"	m	struct:GUI_JPEG_DCONTEXT
apDC_Huff	emwin/emWin_header/GUI_JPEG_Private.h	/^  HUFF_TABLE * apDC_Huff[MAX_BLOCKSPERMCU];$/;"	m	struct:GUI_JPEG_DCONTEXT
apDriver	emwin/emWin_header/GUI.h	/^  GUI_DEVICE * apDriver[GUI_NUM_LAYERS];$/;"	m	struct:GUI_CONTEXT
apQuantTbl	emwin/emWin_header/GUI_JPEG_Private.h	/^  U16 * apQuantTbl[MAX_QUANTTABLES];$/;"	m	struct:GUI_JPEG_DCONTEXT
apVRAM	emwin/emWin_header/GUIDRV_BitPlains.h	/^  U8 * apVRAM[8];$/;"	m	struct:__anon380
aphase_est_pilot_log	codec2/ofdm_internal.h	/^    float aphase_est_pilot_log[OFDM_ROWSPERFRAME * OFDM_NC];$/;"	m	struct:OFDM
api	CMSIS_driver/Driver_Common.h	/^  uint16_t api;                         \/\/\/< API version$/;"	m	struct:_ARM_DRIVER_VERSION
api_call	lwip/src/include/lwip/priv/tcpip_priv.h	/^    } api_call;$/;"	m	union:tcpip_msg::__anon468	typeref:struct:tcpip_msg::__anon468::__anon470
api_msg	lwip/src/include/lwip/priv/api_msg.h	/^struct api_msg {$/;"	s
api_msg	lwip/src/include/lwip/priv/tcpip_priv.h	/^    } api_msg;$/;"	m	union:tcpip_msg::__anon468	typeref:struct:tcpip_msg::__anon468::__anon469
apiflags	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg::__anon454::__anon458
applicationTaskHandle	vcom/composite.h	/^    TaskHandle_t applicationTaskHandle;                       \/* Application task handle. *\/$/;"	m	struct:_usb_device_composite_struct
apply_lpc_correction	codec2/quantise.c	/^void apply_lpc_correction(MODEL *model)$/;"	f
arbitration_lost	CMSIS_driver/Driver_I2C.h	/^  uint32_t arbitration_lost : 1;        \/\/\/< Master lost arbitration (cleared on start of next Master operation)$/;"	m	struct:_ARM_I2C_STATUS
arc4	lwip/src/include/netif/ppp/mppe.h	/^	lwip_arc4_context arc4;$/;"	m	struct:ppp_mppe_state
arc4_context	lwip/src/include/netif/ppp/polarssl/arc4.h	/^arc4_context;$/;"	t	typeref:struct:__anon429
arc4_crypt	lwip/src/netif/ppp/polarssl/arc4.c	/^void arc4_crypt( arc4_context *ctx, unsigned char *buf, int buflen )$/;"	f
arc4_setup	lwip/src/netif/ppp/polarssl/arc4.c	/^void arc4_setup( arc4_context *ctx, unsigned char *key, int keylen )$/;"	f
arg	lwip/src/core/dns.c	/^  void *arg;$/;"	m	struct:dns_req_entry	file:
arg	lwip/src/include/lwip/altcp.h	/^  void         *arg;$/;"	m	struct:altcp_allocator_s
arg	lwip/src/include/lwip/altcp.h	/^  void *arg;$/;"	m	struct:altcp_pcb
arg	lwip/src/include/lwip/priv/tcpip_priv.h	/^      struct tcpip_api_call_data *arg;$/;"	m	struct:tcpip_msg::__anon468::__anon470	typeref:struct:tcpip_msg::__anon468::__anon470::tcpip_api_call_data
arg	lwip/src/include/lwip/priv/tcpip_priv.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon468::__anon473
arg	lwip/src/include/lwip/timeouts.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	lwip/src/include/netif/ppp/pppapi.h	/^      void *arg;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon442
arm_bilinear_interp_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE float32_t arm_bilinear_interp_f32($/;"	f
arm_bilinear_interp_instance_f32	CMSIS/arm_math.h	/^  } arm_bilinear_interp_instance_f32;$/;"	t	typeref:struct:__anon66
arm_bilinear_interp_instance_q15	CMSIS/arm_math.h	/^  } arm_bilinear_interp_instance_q15;$/;"	t	typeref:struct:__anon68
arm_bilinear_interp_instance_q31	CMSIS/arm_math.h	/^  } arm_bilinear_interp_instance_q31;$/;"	t	typeref:struct:__anon67
arm_bilinear_interp_instance_q7	CMSIS/arm_math.h	/^  } arm_bilinear_interp_instance_q7;$/;"	t	typeref:struct:__anon69
arm_bilinear_interp_q15	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q15_t arm_bilinear_interp_q15($/;"	f
arm_bilinear_interp_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q31_t arm_bilinear_interp_q31($/;"	f
arm_bilinear_interp_q7	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q7_t arm_bilinear_interp_q7($/;"	f
arm_biquad_cas_df1_32x64_ins_q31	CMSIS/arm_math.h	/^  } arm_biquad_cas_df1_32x64_ins_q31;$/;"	t	typeref:struct:__anon92
arm_biquad_cascade_df2T_instance_f32	CMSIS/arm_math.h	/^  } arm_biquad_cascade_df2T_instance_f32;$/;"	t	typeref:struct:__anon93
arm_biquad_cascade_df2T_instance_f64	CMSIS/arm_math.h	/^  } arm_biquad_cascade_df2T_instance_f64;$/;"	t	typeref:struct:__anon95
arm_biquad_cascade_stereo_df2T_instance_f32	CMSIS/arm_math.h	/^  } arm_biquad_cascade_stereo_df2T_instance_f32;$/;"	t	typeref:struct:__anon94
arm_biquad_casd_df1_inst_f32	CMSIS/arm_math.h	/^  } arm_biquad_casd_df1_inst_f32;$/;"	t	typeref:struct:__anon57
arm_biquad_casd_df1_inst_q15	CMSIS/arm_math.h	/^  } arm_biquad_casd_df1_inst_q15;$/;"	t	typeref:struct:__anon55
arm_biquad_casd_df1_inst_q31	CMSIS/arm_math.h	/^  } arm_biquad_casd_df1_inst_q31;$/;"	t	typeref:struct:__anon56
arm_cfft_instance_f32	CMSIS/arm_math.h	/^  } arm_cfft_instance_f32;$/;"	t	typeref:struct:__anon78
arm_cfft_instance_q15	CMSIS/arm_math.h	/^  } arm_cfft_instance_q15;$/;"	t	typeref:struct:__anon76
arm_cfft_instance_q31	CMSIS/arm_math.h	/^  } arm_cfft_instance_q31;$/;"	t	typeref:struct:__anon77
arm_cfft_radix2_instance_f32	CMSIS/arm_math.h	/^  } arm_cfft_radix2_instance_f32;$/;"	t	typeref:struct:__anon74
arm_cfft_radix2_instance_q15	CMSIS/arm_math.h	/^  } arm_cfft_radix2_instance_q15;$/;"	t	typeref:struct:__anon70
arm_cfft_radix2_instance_q31	CMSIS/arm_math.h	/^  } arm_cfft_radix2_instance_q31;$/;"	t	typeref:struct:__anon72
arm_cfft_radix4_instance_f32	CMSIS/arm_math.h	/^  } arm_cfft_radix4_instance_f32;$/;"	t	typeref:struct:__anon75
arm_cfft_radix4_instance_q15	CMSIS/arm_math.h	/^  } arm_cfft_radix4_instance_q15;$/;"	t	typeref:struct:__anon71
arm_cfft_radix4_instance_q31	CMSIS/arm_math.h	/^  } arm_cfft_radix4_instance_q31;$/;"	t	typeref:struct:__anon73
arm_circularRead_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_circularRead_f32($/;"	f
arm_circularRead_q15	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_circularRead_q15($/;"	f
arm_circularRead_q7	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_circularRead_q7($/;"	f
arm_circularWrite_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_f32($/;"	f
arm_circularWrite_q15	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_q15($/;"	f
arm_circularWrite_q7	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_circularWrite_q7($/;"	f
arm_clarke_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_clarke_f32($/;"	f
arm_clarke_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_clarke_q31($/;"	f
arm_dct4_instance_f32	CMSIS/arm_math.h	/^  } arm_dct4_instance_f32;$/;"	t	typeref:struct:__anon83
arm_dct4_instance_q15	CMSIS/arm_math.h	/^  } arm_dct4_instance_q15;$/;"	t	typeref:struct:__anon85
arm_dct4_instance_q31	CMSIS/arm_math.h	/^  } arm_dct4_instance_q31;$/;"	t	typeref:struct:__anon84
arm_fir_decimate_instance_f32	CMSIS/arm_math.h	/^  } arm_fir_decimate_instance_f32;$/;"	t	typeref:struct:__anon88
arm_fir_decimate_instance_q15	CMSIS/arm_math.h	/^  } arm_fir_decimate_instance_q15;$/;"	t	typeref:struct:__anon86
arm_fir_decimate_instance_q31	CMSIS/arm_math.h	/^  } arm_fir_decimate_instance_q31;$/;"	t	typeref:struct:__anon87
arm_fir_instance_f32	CMSIS/arm_math.h	/^  } arm_fir_instance_f32;$/;"	t	typeref:struct:__anon54
arm_fir_instance_q15	CMSIS/arm_math.h	/^  } arm_fir_instance_q15;$/;"	t	typeref:struct:__anon52
arm_fir_instance_q31	CMSIS/arm_math.h	/^  } arm_fir_instance_q31;$/;"	t	typeref:struct:__anon53
arm_fir_instance_q7	CMSIS/arm_math.h	/^  } arm_fir_instance_q7;$/;"	t	typeref:struct:__anon51
arm_fir_interpolate_instance_f32	CMSIS/arm_math.h	/^  } arm_fir_interpolate_instance_f32;$/;"	t	typeref:struct:__anon91
arm_fir_interpolate_instance_q15	CMSIS/arm_math.h	/^  } arm_fir_interpolate_instance_q15;$/;"	t	typeref:struct:__anon89
arm_fir_interpolate_instance_q31	CMSIS/arm_math.h	/^  } arm_fir_interpolate_instance_q31;$/;"	t	typeref:struct:__anon90
arm_fir_lattice_instance_f32	CMSIS/arm_math.h	/^  } arm_fir_lattice_instance_f32;$/;"	t	typeref:struct:__anon98
arm_fir_lattice_instance_q15	CMSIS/arm_math.h	/^  } arm_fir_lattice_instance_q15;$/;"	t	typeref:struct:__anon96
arm_fir_lattice_instance_q31	CMSIS/arm_math.h	/^  } arm_fir_lattice_instance_q31;$/;"	t	typeref:struct:__anon97
arm_fir_sparse_instance_f32	CMSIS/arm_math.h	/^  } arm_fir_sparse_instance_f32;$/;"	t	typeref:struct:__anon108
arm_fir_sparse_instance_q15	CMSIS/arm_math.h	/^  } arm_fir_sparse_instance_q15;$/;"	t	typeref:struct:__anon110
arm_fir_sparse_instance_q31	CMSIS/arm_math.h	/^  } arm_fir_sparse_instance_q31;$/;"	t	typeref:struct:__anon109
arm_fir_sparse_instance_q7	CMSIS/arm_math.h	/^  } arm_fir_sparse_instance_q7;$/;"	t	typeref:struct:__anon111
arm_iir_lattice_instance_f32	CMSIS/arm_math.h	/^  } arm_iir_lattice_instance_f32;$/;"	t	typeref:struct:__anon101
arm_iir_lattice_instance_q15	CMSIS/arm_math.h	/^  } arm_iir_lattice_instance_q15;$/;"	t	typeref:struct:__anon99
arm_iir_lattice_instance_q31	CMSIS/arm_math.h	/^  } arm_iir_lattice_instance_q31;$/;"	t	typeref:struct:__anon100
arm_inv_clarke_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_inv_clarke_f32($/;"	f
arm_inv_clarke_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_inv_clarke_q31($/;"	f
arm_inv_park_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_inv_park_f32($/;"	f
arm_inv_park_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_inv_park_q31($/;"	f
arm_linear_interp_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE float32_t arm_linear_interp_f32($/;"	f
arm_linear_interp_instance_f32	CMSIS/arm_math.h	/^  } arm_linear_interp_instance_f32;$/;"	t	typeref:struct:__anon65
arm_linear_interp_q15	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q15_t arm_linear_interp_q15($/;"	f
arm_linear_interp_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q31_t arm_linear_interp_q31($/;"	f
arm_linear_interp_q7	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q7_t arm_linear_interp_q7($/;"	f
arm_lms_instance_f32	CMSIS/arm_math.h	/^  } arm_lms_instance_f32;$/;"	t	typeref:struct:__anon102
arm_lms_instance_q15	CMSIS/arm_math.h	/^  } arm_lms_instance_q15;$/;"	t	typeref:struct:__anon103
arm_lms_instance_q31	CMSIS/arm_math.h	/^  } arm_lms_instance_q31;$/;"	t	typeref:struct:__anon104
arm_lms_norm_instance_f32	CMSIS/arm_math.h	/^  } arm_lms_norm_instance_f32;$/;"	t	typeref:struct:__anon105
arm_lms_norm_instance_q15	CMSIS/arm_math.h	/^  } arm_lms_norm_instance_q15;$/;"	t	typeref:struct:__anon107
arm_lms_norm_instance_q31	CMSIS/arm_math.h	/^  } arm_lms_norm_instance_q31;$/;"	t	typeref:struct:__anon106
arm_matrix_instance_f32	CMSIS/arm_math.h	/^  } arm_matrix_instance_f32;$/;"	t	typeref:struct:__anon58
arm_matrix_instance_f64	CMSIS/arm_math.h	/^  } arm_matrix_instance_f64;$/;"	t	typeref:struct:__anon59
arm_matrix_instance_q15	CMSIS/arm_math.h	/^  } arm_matrix_instance_q15;$/;"	t	typeref:struct:__anon60
arm_matrix_instance_q31	CMSIS/arm_math.h	/^  } arm_matrix_instance_q31;$/;"	t	typeref:struct:__anon61
arm_park_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_park_f32($/;"	f
arm_park_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE void arm_park_q31($/;"	f
arm_pid_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE float32_t arm_pid_f32($/;"	f
arm_pid_instance_f32	CMSIS/arm_math.h	/^  } arm_pid_instance_f32;$/;"	t	typeref:struct:__anon64
arm_pid_instance_q15	CMSIS/arm_math.h	/^  } arm_pid_instance_q15;$/;"	t	typeref:struct:__anon62
arm_pid_instance_q31	CMSIS/arm_math.h	/^  } arm_pid_instance_q31;$/;"	t	typeref:struct:__anon63
arm_pid_q15	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q15_t arm_pid_q15($/;"	f
arm_pid_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q31_t arm_pid_q31($/;"	f
arm_recip_q15	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15($/;"	f
arm_recip_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31($/;"	f
arm_rfft_fast_instance_f32	CMSIS/arm_math.h	/^  } arm_rfft_fast_instance_f32 ;$/;"	t	typeref:struct:__anon82
arm_rfft_instance_f32	CMSIS/arm_math.h	/^  } arm_rfft_instance_f32;$/;"	t	typeref:struct:__anon81
arm_rfft_instance_q15	CMSIS/arm_math.h	/^  } arm_rfft_instance_q15;$/;"	t	typeref:struct:__anon79
arm_rfft_instance_q31	CMSIS/arm_math.h	/^  } arm_rfft_instance_q31;$/;"	t	typeref:struct:__anon80
arm_sqrt_f32	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE arm_status arm_sqrt_f32($/;"	f
arm_status	CMSIS/arm_math.h	/^  } arm_status;$/;"	t	typeref:enum:__anon50
arp_table	lwip/src/core/ipv4/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
ascii2unicode	lwip/src/netif/ppp/chap_ms.c	/^static void ascii2unicode(const char ascii[], int ascii_len, u_char unicode[]) {$/;"	f	file:
ask_for_local	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int ask_for_local           :1; \/* request our address from peer *\/$/;"	m	struct:ppp_pcb_s
assert	component/serial_manager/serial_manager.c	44;"	d	file:
assert	component/serial_manager/serial_manager.c	45;"	d	file:
assert	component/serial_manager/serial_port_uart.c	23;"	d	file:
assert	component/serial_manager/serial_port_uart.c	24;"	d	file:
assert	component/uart/usart_adapter.c	20;"	d	file:
assert	component/uart/usart_adapter.c	21;"	d	file:
assert	utilities/fsl_debug_console.c	63;"	d	file:
assert	utilities/fsl_debug_console.c	64;"	d	file:
async_clock_src_t	drivers/fsl_clock.h	/^} async_clock_src_t;$/;"	t	typeref:enum:_async_clock_src
async_status	drivers/freertos/fsl_i2c_freertos.h	/^    status_t async_status;          \/*!< Transactional state of the underlying driver *\/$/;"	m	struct:_i2c_rtos_handle
async_status	drivers/freertos/fsl_spi_freertos.h	/^    status_t async_status;$/;"	m	struct:_spi_rtos_handle
asyncmap	lwip/src/include/netif/ppp/lcp.h	/^    u32_t asyncmap;		\/* Value of async map *\/$/;"	m	struct:lcp_options
attach	vcom/composite.h	/^    uint8_t attach; \/* A flag to indicate whether a usb device is attached. 1: attached, 0: not attached *\/$/;"	m	struct:_usb_device_composite_struct
attach	vcom/virtual_com.h	/^    uint8_t attach;            \/* A flag to indicate whether a usb device is attached. 1: attached, 0: not attached *\/$/;"	m	struct:_usb_cdc_vcom_struct
audio_buff	radio/radio.c	/^uint8_t audio_buff[SEND_PACKAGE_LEN] = "123456789012345678";$/;"	v
audio_main3	source/main.c	/^void audio_main3(void *handle)$/;"	f
audio_main_test	source/i2s_transfer.c	/^void audio_main_test(void *handle) {$/;"	f
audpllfrac	drivers/fsl_clock.h	/^    uint32_t audpllfrac; \/*!< only aduio PLL has this function*\/$/;"	m	struct:_pll_setup
auth_check_options	lwip/src/netif/ppp/auth.c	/^auth_check_options()$/;"	f
auth_check_passwd	lwip/src/netif/ppp/auth.c	/^int auth_check_passwd(ppp_pcb *pcb, char *auser, int userlen, char *apasswd, int passwdlen, const char **msg, int *msglen) {$/;"	f
auth_done	lwip/src/include/netif/ppp/ppp.h	/^  u16_t auth_done;           \/* Records which authentication operations have been completed. *\/$/;"	m	struct:ppp_pcb_s
auth_options	lwip/src/netif/ppp/auth.c	/^option_t auth_options[] = {$/;"	v
auth_peer_fail	lwip/src/netif/ppp/auth.c	/^void auth_peer_fail(ppp_pcb *pcb, int protocol) {$/;"	f
auth_peer_success	lwip/src/netif/ppp/auth.c	/^void auth_peer_success(ppp_pcb *pcb, int protocol, int prot_flavor, const char *name, int namelen) {$/;"	f
auth_pending	lwip/src/include/netif/ppp/ppp.h	/^  u16_t auth_pending;        \/* Records which authentication operations haven't completed yet. *\/$/;"	m	struct:ppp_pcb_s
auth_required	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  auth_required       :1;      \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings_s
auth_up_notifier	lwip/src/netif/ppp/auth.c	/^struct notifier *auth_up_notifier = NULL;$/;"	v	typeref:struct:notifier
auth_withpeer_fail	lwip/src/netif/ppp/auth.c	/^void auth_withpeer_fail(ppp_pcb *pcb, int protocol) {$/;"	f
auth_withpeer_success	lwip/src/netif/ppp/auth.c	/^void auth_withpeer_success(ppp_pcb *pcb, int protocol, int prot_flavor) {$/;"	f
autocorrelate	codec2/lpc.c	/^void autocorrelate($/;"	f
autoip	lwip/src/include/lwip/autoip.h	/^struct autoip$/;"	s
autoip_accept_packet	lwip/src/core/ipv4/autoip.c	/^autoip_accept_packet(struct netif *netif, const ip4_addr_t *addr)$/;"	f
autoip_arp_announce	lwip/src/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_probe	lwip/src/core/ipv4/autoip.c	/^autoip_arp_probe(struct netif *netif)$/;"	f	file:
autoip_arp_reply	lwip/src/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	lwip/src/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	lwip/src/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_addr	lwip/src/core/ipv4/autoip.c	/^autoip_create_addr(struct netif *netif, ip4_addr_t *ipaddr)$/;"	f	file:
autoip_handle_arp_conflict	lwip/src/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_network_changed	lwip/src/core/ipv4/autoip.c	/^autoip_network_changed(struct netif *netif)$/;"	f
autoip_remove_struct	lwip/src/include/lwip/autoip.h	80;"	d
autoip_restart	lwip/src/core/ipv4/autoip.c	/^autoip_restart(struct netif *netif)$/;"	f	file:
autoip_set_struct	lwip/src/core/ipv4/autoip.c	/^autoip_set_struct(struct netif *netif, struct autoip *autoip)$/;"	f
autoip_start	lwip/src/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_start_probing	lwip/src/core/ipv4/autoip.c	/^autoip_start_probing(struct netif *netif)$/;"	f	file:
autoip_state_enum_t	lwip/src/include/lwip/prot/autoip.h	/^} autoip_state_enum_t;$/;"	t	typeref:enum:__anon444
autoip_stop	lwip/src/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_supplied_address	lwip/src/core/ipv4/autoip.c	/^autoip_supplied_address(const struct netif *netif)$/;"	f
autoip_tmr	lwip/src/core/ipv4/autoip.c	/^autoip_tmr(void)$/;"	f
avail	lwip/src/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
ax	emwin/emWin_header/GUI_Type.h	/^  I16 ax[5];$/;"	m	struct:__anon271
ax0	emwin/emWin_header/TREEVIEW.h	/^  I16 ax0[3];$/;"	m	struct:__anon372
ax1	emwin/emWin_header/TREEVIEW.h	/^  I16 ax1[3];$/;"	m	struct:__anon372
axc	emwin/emWin_header/TREEVIEW.h	/^  I16 axc[16];$/;"	m	struct:__anon372
ay	emwin/emWin_header/GUI_Type.h	/^  I16 ay[5];$/;"	m	struct:__anon271
ay0	emwin/emWin_header/TREEVIEW.h	/^  I16 ay0[3];$/;"	m	struct:__anon372
ay1	emwin/emWin_header/TREEVIEW.h	/^  I16 ay1[3];$/;"	m	struct:__anon372
b	CMSIS/core_armv8mbl.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon113	typeref:struct:__anon113::__anon114
b	CMSIS/core_armv8mbl.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon115	typeref:struct:__anon115::__anon116
b	CMSIS/core_armv8mbl.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon117	typeref:struct:__anon117::__anon118
b	CMSIS/core_armv8mbl.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon119	typeref:struct:__anon119::__anon120
b	CMSIS/core_armv8mml.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon11	typeref:struct:__anon11::__anon12
b	CMSIS/core_armv8mml.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon13	typeref:struct:__anon13::__anon14
b	CMSIS/core_armv8mml.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon15	typeref:struct:__anon15::__anon16
b	CMSIS/core_armv8mml.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon9	typeref:struct:__anon9::__anon10
b	CMSIS/core_cm4.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon31	typeref:struct:__anon31::__anon32
b	CMSIS/core_cm4.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon33	typeref:struct:__anon33::__anon34
b	CMSIS/core_cm4.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon35	typeref:struct:__anon35::__anon36
b	CMSIS/core_cm4.h	/^  } b;                                   \/*!< Structure used for bit  access *\/$/;"	m	union:__anon37	typeref:struct:__anon37::__anon38
b	drivers/fsl_sha.c	/^    uint8_t b[SHA_BLOCK_SIZE];      \/*!< byte array *\/$/;"	m	union:_sha_hash_block	file:
b	lwip/src/include/lwip/priv/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::netbuf
b64dec	lwip/src/netif/ppp/eap.c	/^b64dec(bs, inp, inlen, outp)$/;"	f	file:
b64enc	lwip/src/netif/ppp/eap.c	/^b64enc(bs, inp, inlen, outp)$/;"	f	file:
b64flush	lwip/src/netif/ppp/eap.c	/^b64flush(bs, outp)$/;"	f	file:
b64state	lwip/src/netif/ppp/eap.c	/^struct b64state {$/;"	s	file:
bAlternateSetting	usb/include/usb_spec.h	/^    uint8_t bAlternateSetting;$/;"	m	struct:_usb_descriptor_interface
bBWI	usb/device/class/usb_device_ccid.h	/^    uint8_t bBWI;                  \/*!< Used to extend the CCIDs Block Waiting Timeout for this current transfer *\/$/;"	m	struct:_usb_device_ccid_secure_pin_operation_command
bBWI	usb/device/class/usb_device_ccid.h	/^    uint8_t bBWI;                \/*!< Used to extend the CCIDs Block Waiting Timeout for this current transfer *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bBWI	usb/device/class/usb_device_ccid.h	/^    uint8_t bBWI;               \/*!< Used to extend the CCIDs Block Waiting Timeout for this current transfer *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bBWI	usb/device/class/usb_device_ccid.h	/^    uint8_t bBWI;             \/*!< Used to extend the CCIDs Block Waiting Timeout for this current transfer *\/$/;"	m	struct:_usb_device_ccid_secure_command
bBWI	usb/device/class/usb_device_ccid.h	/^    uint8_t bBWI;             \/*!< Used to extend the CCIDs Block Waiting Timeout for this current transfer *\/$/;"	m	struct:_usb_device_ccid_transfer_block_command
bBitDepthLuma	usb/device/class/usb_device_video.h	/^        bBitDepthLuma;  \/*!< Represents bit_depth_luma_minus8 + 8U, which must be the same as bit_depth_chroma_minus8 +$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bChainParameter	usb/device/class/usb_device_ccid.h	/^    uint8_t bChainParameter; \/*!< Use changes depending on the exchange level reported by the class descriptor in$/;"	m	struct:_usb_device_ccid_data_block_response
bClassEnvelope	usb/device/class/usb_device_ccid.h	/^    uint8_t bClassEnvelope;    \/*!< Value to force the class byte of the header in a envelope command *\/$/;"	m	struct:_usb_device_ccid_t0_apdu_command
bClassGetResponse	usb/device/class/usb_device_ccid.h	/^    uint8_t bClassGetResponse; \/*!< Value to force the class byte of the header in a get response command *\/$/;"	m	struct:_usb_device_ccid_t0_apdu_command
bClockCommand	usb/device/class/usb_device_ccid.h	/^    uint8_t bClockCommand; \/*!< 0x00U - Restart clock, 0x01U - Stop clock in the state shown in the bClockStop field of$/;"	m	struct:_usb_device_ccid_clock_command
bClockStatus	usb/device/class/usb_device_ccid.h	/^        bClockStatus; \/*!< 0x00U - Clock running, 0x01U - Clock stopped in L, 0x02U - clock stopped in H, and 0x03U -$/;"	m	struct:_usb_device_ccid_slot_status_response
bClockStop	usb/device/class/usb_device_ccid.h	/^    uint8_t bClockStop;          \/*!< ICC Clock Stop Support *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bClockStop	usb/device/class/usb_device_ccid.h	/^    uint8_t bClockStop;          \/*!< ICC Clock Stop Support *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bClockStop	usb/device/class/usb_device_ccid.h	/^    uint8_t bClockStop;        \/*!< ICC Clock Stop Support *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bClockStop	usb/device/class/usb_device_ccid.h	/^    uint8_t bClockStop;        \/*!< ICC Clock Stop Support *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bCompressionIndex	usb/device/class/usb_device_video.h	/^    uint8_t bCompressionIndex;         \/*!< Compression index from a frame descriptor.*\/$/;"	m	struct:_usb_device_video_still_probe_and_commit_controls_struct
bConfigurationValue	usb/include/usb_spec.h	/^    uint8_t bConfigurationValue; \/* Value to set this configuration. *\/$/;"	m	struct:_usb_descriptor_configuration
bConfirmPIN	usb/device/class/usb_device_ccid.h	/^    uint8_t bConfirmPIN;         \/*!< Indicates if a confirmation is requested before acceptance of a new PIN *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bData	usb/include/usb_spec.h	/^    uint8_t bData[1];        \/* Data *\/$/;"	m	struct:_usb_descriptor_common
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType;     \/* CONFIGURATION type = 2U or 7U *\/$/;"	m	struct:_usb_descriptor_configuration
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType;    \/* BOS Descriptor type = 0FU*\/$/;"	m	struct:_usb_descriptor_binary_device_object_store
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType;    \/* DEVICE CAPABILITY Descriptor type = 0x10U*\/$/;"	m	struct:_usb_descriptor_usb20_extension
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType;    \/* DEVICE Descriptor Type *\/$/;"	m	struct:_usb_descriptor_device
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType; \/* DEVICE Descriptor Type *\/$/;"	m	struct:_usb_descriptor_common
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType;$/;"	m	struct:_usb_descriptor_endpoint
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType;$/;"	m	struct:_usb_descriptor_endpoint_companion
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType;$/;"	m	struct:_usb_descriptor_interface
bDescriptorType	usb/include/usb_spec.h	/^    uint8_t bDescriptorType;$/;"	m	struct:_usb_descriptor_super_speed_device_capability
bDevCapabilityType	usb/include/usb_spec.h	/^    uint8_t bDevCapabilityType;  \/*Length of this descriptor and all of its sub descriptors*\/$/;"	m	struct:_usb_descriptor_usb20_extension
bDevCapabilityType	usb/include/usb_spec.h	/^    uint8_t bDevCapabilityType;$/;"	m	struct:_usb_descriptor_super_speed_device_capability
bDeviceClass	usb/include/usb_spec.h	/^    uint8_t bDeviceClass;       \/* Class code *\/$/;"	m	struct:_usb_descriptor_device
bDeviceProtocol	usb/include/usb_spec.h	/^    uint8_t bDeviceProtocol;    \/* Protocol code *\/$/;"	m	struct:_usb_descriptor_device
bDeviceSubClass	usb/include/usb_spec.h	/^    uint8_t bDeviceSubClass;    \/* Sub-Class code *\/$/;"	m	struct:_usb_descriptor_device
bEndpointAddress	usb/include/usb_spec.h	/^    uint8_t bEndpointAddress;$/;"	m	struct:_usb_descriptor_endpoint
bEntryValidationCondition	usb/device/class/usb_device_ccid.h	/^    uint8_t bEntryValidationCondition; \/*!< The value is a bit wise OR operation. 01h - Maximum size reached, 02h -$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bEntryValidationCondition	usb/device/class/usb_device_ccid.h	/^    uint8_t bEntryValidationCondition; \/*!< The value is a bit wise OR operation. 01h - Maximum size reached, 02h -$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bError	usb/device/class/usb_device_ccid.h	/^    uint8_t bError;                     \/*!< Slot error register *\/$/;"	m	struct:_usb_device_ccid_parameters_response
bError	usb/device/class/usb_device_ccid.h	/^    uint8_t bError;            \/*!< Slot error register *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
bError	usb/device/class/usb_device_ccid.h	/^    uint8_t bError;            \/*!< Slot error register *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bError	usb/device/class/usb_device_ccid.h	/^    uint8_t bError;          \/*!< Slot error register *\/$/;"	m	struct:_usb_device_ccid_data_block_response
bError	usb/device/class/usb_device_ccid.h	/^    uint8_t bError;         \/*!< Slot error register *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bError	usb/device/class/usb_device_ccid.h	/^    uint8_t bError;       \/*!< Slot error register *\/$/;"	m	struct:_usb_device_ccid_common_response
bError	usb/device/class/usb_device_ccid.h	/^    uint8_t bError;       \/*!< Slot error register *\/$/;"	m	struct:_usb_device_ccid_escape_response
bError	usb/device/class/usb_device_ccid.h	/^    uint8_t bError;       \/*!< Slot error register *\/$/;"	m	struct:_usb_device_ccid_slot_status_response
bFormatIndex	usb/device/class/usb_device_video.h	/^    uint8_t bFormatIndex;              \/*!< Video format index from a format descriptor.*\/$/;"	m	struct:_usb_device_video_still_probe_and_commit_controls_struct
bFormatIndex	usb/device/class/usb_device_video.h	/^    uint8_t bFormatIndex;     \/*!< Video format index from a format descriptor.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bFrameIndex	usb/device/class/usb_device_video.h	/^    uint8_t bFrameIndex;               \/*!< Video frame index from a frame descriptor.*\/$/;"	m	struct:_usb_device_video_still_probe_and_commit_controls_struct
bFrameIndex	usb/device/class/usb_device_video.h	/^    uint8_t bFrameIndex;      \/*!< Video frame index from a frame descriptor.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bFunction	usb/device/class/usb_device_ccid.h	/^    uint8_t bFunction;    \/*!< This value corresponds to the mechanical function being requested *\/$/;"	m	struct:_usb_device_ccid_mechanical_command
bFunctionalitySupport	usb/include/usb_spec.h	/^    uint8_t bFunctionalitySupport;$/;"	m	struct:_usb_descriptor_super_speed_device_capability
bGuardTimeT0	usb/device/class/usb_device_ccid.h	/^    uint8_t bGuardTimeT0;      \/*!< Extra guard time between two characters. *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bGuardTimeT0	usb/device/class/usb_device_ccid.h	/^    uint8_t bGuardTimeT0;      \/*!< Extra guard time between two characters. *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bGuardTimeT1	usb/device/class/usb_device_ccid.h	/^    uint8_t bGuardTimeT1;        \/*!< Extra guard time. *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bGuardTimeT1	usb/device/class/usb_device_ccid.h	/^    uint8_t bGuardTimeT1;        \/*!< Extra guard time. *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bHardwareErrorCode	usb/device/class/usb_device_ccid.h	/^    uint8_t bHardwareErrorCode; \/*!< 0x01U - Over current. *\/$/;"	m	struct:_usb_device_ccid_hardware_error_notification
bHeaderLength	usb/device/class/usb_device_video.h	/^    uint8_t bHeaderLength; \/*!< The payload header length. *\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct
bIFSC	usb/device/class/usb_device_ccid.h	/^    uint8_t bIFSC;               \/*!< Size of negotiated IFSC *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bIFSC	usb/device/class/usb_device_ccid.h	/^    uint8_t bIFSC;               \/*!< Size of negotiated IFSC *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bInsertionOffsetNew	usb/device/class/usb_device_ccid.h	/^    uint8_t bInsertionOffsetNew; \/*!< Insertion position offset in byte for the new PIN *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bInsertionOffsetOld	usb/device/class/usb_device_ccid.h	/^    uint8_t bInsertionOffsetOld; \/*!< Insertion position offset in byte for the current PIN *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bInterfaceClass	usb/include/usb_spec.h	/^    uint8_t bInterfaceClass;$/;"	m	struct:_usb_descriptor_interface
bInterfaceNumber	usb/include/usb_spec.h	/^    uint8_t bInterfaceNumber;$/;"	m	struct:_usb_descriptor_interface
bInterfaceProtocol	usb/include/usb_spec.h	/^    uint8_t bInterfaceProtocol;$/;"	m	struct:_usb_descriptor_interface
bInterfaceSubClass	usb/include/usb_spec.h	/^    uint8_t bInterfaceSubClass;$/;"	m	struct:_usb_descriptor_interface
bInterval	usb/include/usb_spec.h	/^    uint8_t bInterval;$/;"	m	struct:_usb_descriptor_endpoint
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;             \/* Descriptor size in bytes = 9U *\/$/;"	m	struct:_usb_descriptor_configuration
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;            \/* Descriptor size in bytes = 5U *\/$/;"	m	struct:_usb_descriptor_binary_device_object_store
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;            \/* Descriptor size in bytes = 7U *\/$/;"	m	struct:_usb_descriptor_usb20_extension
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;            \/* Size of this descriptor in bytes *\/$/;"	m	struct:_usb_descriptor_device
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;         \/* Size of this descriptor in bytes *\/$/;"	m	struct:_usb_descriptor_common
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;$/;"	m	struct:_usb_descriptor_endpoint
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;$/;"	m	struct:_usb_descriptor_endpoint_companion
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;$/;"	m	struct:_usb_descriptor_interface
bLength	usb/include/usb_spec.h	/^    uint8_t bLength;$/;"	m	struct:_usb_descriptor_super_speed_device_capability
bMaxBurst	usb/include/usb_spec.h	/^    uint8_t bMaxBurst;$/;"	m	struct:_usb_descriptor_endpoint_companion
bMaxNumberOfRefFramesPlus1	usb/device/class/usb_device_video.h	/^    uint8_t bMaxNumberOfRefFramesPlus1; \/*!< Host indicates the maximum number of frames stored for use as references.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bMaxPacketSize0	usb/include/usb_spec.h	/^    uint8_t bMaxPacketSize0;    \/* Maximum packet size for endpoint zero *\/$/;"	m	struct:_usb_descriptor_device
bMaxPower	usb/include/usb_spec.h	/^    uint8_t bMaxPower;           \/* Maximum power from bus, 2 mA units *\/$/;"	m	struct:_usb_descriptor_configuration
bMaxVersion	usb/device/class/usb_device_video.h	/^    uint8_t bMaxVersion; \/*!< The maximum payload format version supported by the device for the specified bFormatIndex$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;               \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_parameters_response
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;          \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_secure_pin_operation_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;        \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;       \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_hardware_error_notification
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;       \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;      \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;      \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_notify_slot_chnage_notification
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;      \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;      \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;      \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;      \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_t0_apdu_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;     \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_secure_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;     \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_transfer_block_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;    \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_data_block_response
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;   \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;   \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType;  \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_clock_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_abort_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_common_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_common_response
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_escape_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_escape_response
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_get_parameters_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_get_slot_status_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_mechanical_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_power_off_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_power_on_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_reset_parameters_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_set_parameters_command
bMessageType	usb/device/class/usb_device_ccid.h	/^    uint8_t bMessageType; \/*!< The message type *\/$/;"	m	struct:_usb_device_ccid_slot_status_response
bMinVersion	usb/device/class/usb_device_video.h	/^    uint8_t bMinVersion; \/*!< The minimum payload format version supported by the device for the specified bFormatIndex$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bMsgIndex	usb/device/class/usb_device_ccid.h	/^    uint8_t bMsgIndex;                 \/*!< Message index in the Reader CCID message table (should be 00h). *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bMsgIndex1	usb/device/class/usb_device_ccid.h	/^    uint8_t bMsgIndex1;                \/*!< Message index in the Reader message table(should be 00h or 01h). *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bMsgIndex2	usb/device/class/usb_device_ccid.h	/^    uint8_t bMsgIndex2;                \/*!< Message index in the Reader message table(should be 01h or 02h). *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bMsgIndex3	usb/device/class/usb_device_ccid.h	/^    uint8_t bMsgIndex3;                \/*!< Message index in the Reader message table(should be 02h). *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bNadValue	usb/device/class/usb_device_ccid.h	/^    uint8_t bNadValue; \/*!< Value = 0x00U if CCID doesn't support a value other then the default value. Else value$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bNadValue	usb/device/class/usb_device_ccid.h	/^    uint8_t bNadValue; \/*!< Value = 0x00U if CCID doesn't support a value other then the default value. Else value$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bNumConfigurations	usb/include/usb_spec.h	/^    uint8_t bNumConfigurations; \/* Number of possible configurations *\/$/;"	m	struct:_usb_descriptor_device
bNumDeviceCaps	usb/include/usb_spec.h	/^    uint8_t bNumDeviceCaps;     \/*The number of separate device capability descriptors in the BOS*\/$/;"	m	struct:_usb_descriptor_binary_device_object_store
bNumEndpoints	usb/include/usb_spec.h	/^    uint8_t bNumEndpoints;$/;"	m	struct:_usb_descriptor_interface
bNumInterfaces	usb/include/usb_spec.h	/^    uint8_t bNumInterfaces;      \/* Number of interfaces, this configuration. *\/$/;"	m	struct:_usb_descriptor_configuration
bNumberMessage	usb/device/class/usb_device_ccid.h	/^    uint8_t bNumberMessage;            \/*!< Number of messages to display for the PIN Verification management. *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bNumberMessage	usb/device/class/usb_device_ccid.h	/^    uint8_t bNumberMessage;            \/*!< Number of messages to display for the PIN Verification management. *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bPINOperation	usb/device/class/usb_device_ccid.h	/^    uint8_t bPINOperation;         \/*!<$/;"	m	struct:_usb_device_ccid_secure_pin_operation_command
bPINOperation	usb/device/class/usb_device_ccid.h	/^    uint8_t bPINOperation;       \/*!<$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bPINOperation	usb/device/class/usb_device_ccid.h	/^    uint8_t bPINOperation;      \/*!<$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bParameter1	usb/device/class/usb_device_ccid.h	/^    uint8_t bParameter1;  \/*!< Parameter1 of the message, message-specific *\/$/;"	m	struct:_usb_device_ccid_common_command
bParameter1	usb/device/class/usb_device_ccid.h	/^    uint8_t bParameter1;  \/*!< Parameter1 of the message, message-specific *\/$/;"	m	struct:_usb_device_ccid_common_response
bParameter2	usb/device/class/usb_device_ccid.h	/^    uint8_t bParameter2;  \/*!< Parameter2 of the message, message-specific *\/$/;"	m	struct:_usb_device_ccid_common_command
bParameter3	usb/device/class/usb_device_ccid.h	/^    uint8_t bParameter3;  \/*!< Parameter3 of the message, message-specific *\/$/;"	m	struct:_usb_device_ccid_common_command
bPowerSelect	usb/device/class/usb_device_ccid.h	/^    uint8_t bPowerSelect; \/*!< Voltage that is applied to the ICC *\/$/;"	m	struct:_usb_device_ccid_power_on_command
bPreferedVersion	usb/device/class/usb_device_video.h	/^    uint8_t bPreferedVersion;  \/*!< The preferred payload format version supported by the host or device for the$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bProtocolNum	usb/device/class/usb_device_ccid.h	/^    uint8_t bProtocolNum;               \/*!< 0x00U = Structure for protocol T=0, 0x01U = Structure for protocol T=1 *\/$/;"	m	struct:_usb_device_ccid_parameters_response
bProtocolNum	usb/device/class/usb_device_ccid.h	/^    uint8_t bProtocolNum;      \/*!< 0x00U = Structure for protocol T=0 *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bProtocolNum	usb/device/class/usb_device_ccid.h	/^    uint8_t bProtocolNum;      \/*!< Structure for protocol T=0 *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bProtocolNum	usb/device/class/usb_device_ccid.h	/^    uint8_t bProtocolNum;   \/*!< 0x00U = Structure for protocol T=1 *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bProtocolNum	usb/device/class/usb_device_ccid.h	/^    uint8_t bProtocolNum;   \/*!< Structure for protocol T=1 *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bProtocolNum	usb/device/class/usb_device_ccid.h	/^    uint8_t bProtocolNum; \/*!< Specifies what protocol data structure follows. 00h = Structure for protocol T=0, 01h =$/;"	m	struct:_usb_device_ccid_set_parameters_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU;              \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU;         \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_escape_response
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[2];           \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[2];        \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[2];       \/*!< Reserved for future use *\/$/;"	m	struct:_usb_device_ccid_clock_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[2];      \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_mechanical_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[2];      \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_power_on_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[2];      \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_set_parameters_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[3];           \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[3];      \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_get_slot_status_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[3];      \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_power_off_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[3];      \/*!< Reserved for Future Use *\/$/;"	m	struct:_usb_device_ccid_reset_parameters_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[3];      \/*!< Reserved for Future use *\/$/;"	m	struct:_usb_device_ccid_get_parameters_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[3];      \/*!< Reserved for future use *\/$/;"	m	struct:_usb_device_ccid_abort_command
bRFU	usb/device/class/usb_device_ccid.h	/^    uint8_t bRFU[3];      \/*!< Reserved for future use *\/$/;"	m	struct:_usb_device_ccid_escape_command
bRequest	usb/include/usb_spec.h	/^    uint8_t bRequest;$/;"	m	struct:_usb_setup_struct
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;                       \/*!< Sequence number for the corresponding command *\/$/;"	m	struct:_usb_device_ccid_parameters_response
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;                  \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_secure_pin_operation_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;                \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;               \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;               \/*!< Sequence number of bulk out command when the hardware error occurred *\/$/;"	m	struct:_usb_device_ccid_hardware_error_notification
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;              \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;              \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;              \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_t0_apdu_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;              \/*!< Sequence number for the corresponding command *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;              \/*!< Sequence number for the corresponding command *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;             \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_secure_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;             \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_transfer_block_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;            \/*!< Sequence number for the corresponding command *\/$/;"	m	struct:_usb_device_ccid_data_block_response
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;           \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;           \/*!< Sequence number for the corresponding command *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;          \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_clock_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_abort_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_common_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_escape_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_get_parameters_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_get_slot_status_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_mechanical_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_power_off_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_power_on_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_reset_parameters_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for command *\/$/;"	m	struct:_usb_device_ccid_set_parameters_command
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for the corresponding command *\/$/;"	m	struct:_usb_device_ccid_common_response
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for the corresponding command *\/$/;"	m	struct:_usb_device_ccid_escape_response
bSeq	usb/device/class/usb_device_ccid.h	/^    uint8_t bSeq;         \/*!< Sequence number for the corresponding command *\/$/;"	m	struct:_usb_device_ccid_slot_status_response
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;                      \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_parameters_response
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;                 \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_secure_pin_operation_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;               \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;              \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_hardware_error_notification
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;              \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;             \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;             \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;             \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;             \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;             \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_t0_apdu_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;            \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_secure_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;            \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_transfer_block_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;           \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_data_block_response
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;          \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;          \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;         \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_clock_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_abort_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_common_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_common_response
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_escape_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_escape_response
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_get_parameters_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_get_slot_status_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_mechanical_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_power_off_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_power_on_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_reset_parameters_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_set_parameters_command
bSlot	usb/device/class/usb_device_ccid.h	/^    uint8_t bSlot;        \/*!< Identifies the slot number for this command *\/$/;"	m	struct:_usb_device_ccid_slot_status_response
bSourceClockReference	usb/device/class/usb_device_video.h	/^    uint8_t bSourceClockReference[6]; \/*!< Source clock reference (SCR) field.*\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct
bStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t bStatus;                    \/*!< Slot status register *\/$/;"	m	struct:_usb_device_ccid_parameters_response
bStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t bStatus;           \/*!< Slot status register *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
bStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t bStatus;           \/*!< Slot status register *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t bStatus;         \/*!< Slot status register *\/$/;"	m	struct:_usb_device_ccid_data_block_response
bStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t bStatus;        \/*!< Slot status register *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t bStatus;      \/*!< Slot status register *\/$/;"	m	struct:_usb_device_ccid_common_response
bStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t bStatus;      \/*!< Slot status register *\/$/;"	m	struct:_usb_device_ccid_escape_response
bStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t bStatus;      \/*!< Slot status register *\/$/;"	m	struct:_usb_device_ccid_slot_status_response
bTeoPrologue	usb/device/class/usb_device_ccid.h	/^    uint8_t bTeoPrologue;              \/*!< T=1 I-block prologue field to use. *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bTeoPrologue	usb/device/class/usb_device_ccid.h	/^    uint8_t bTeoPrologue[3];           \/*!< T=1 I-block prologue field to use. *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bTimeOut	usb/device/class/usb_device_ccid.h	/^    uint8_t bTimeOut;            \/*!< Number of seconds *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bTimeOut	usb/device/class/usb_device_ccid.h	/^    uint8_t bTimeOut;           \/*!< Number of seconds *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bU1DevExitLat	usb/include/usb_spec.h	/^    uint8_t bU1DevExitLat;$/;"	m	struct:_usb_descriptor_super_speed_device_capability
bUsage	usb/device/class/usb_device_video.h	/^    uint8_t bUsage; \/*!< This bitmap enables features reported by the bmUsages field of the Video Frame Descriptor.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bWaitingIntegerT0	usb/device/class/usb_device_ccid.h	/^    uint8_t bWaitingIntegerT0; \/*!< WI for T= 0U used to define WWT *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bWaitingIntegerT0	usb/device/class/usb_device_ccid.h	/^    uint8_t bWaitingIntegerT0; \/*!< WI for T= 0U used to define WWT *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
backlog	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg::__anon454::__anon462
backlog	lwip/src/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
base	drivers/freertos/fsl_i2c_freertos.h	/^    I2C_Type *base;                 \/*!< I2C base address *\/$/;"	m	struct:_i2c_rtos_handle
base	drivers/freertos/fsl_spi_freertos.h	/^    SPI_Type *base;                 \/*!< SPI base address *\/$/;"	m	struct:_spi_rtos_handle
base	drivers/fsl_dma.h	/^    DMA_Type *base;        \/*!< DMA peripheral base address *\/$/;"	m	struct:_dma_handle
base	drivers/fsl_dmic_dma.h	/^    DMIC_Type *base;                       \/*!< DMIC peripheral base address. *\/$/;"	m	struct:_dmic_dma_handle
base	drivers/fsl_i2c_cmsis.c	/^    I2C_Type *base;            \/*!< I2C peripheral base address.      *\/$/;"	m	struct:_cmsis_i2c_resource	file:
base	drivers/fsl_i2c_dma.c	/^    I2C_Type *base;$/;"	m	struct:_i2c_master_dma_private_handle	file:
base	drivers/fsl_i2s_dma.c	/^    I2S_Type *base;           \/*!< I2S base address *\/$/;"	m	struct:_i2s_dma_private_handle	file:
base	drivers/fsl_spi_cmsis.c	/^    SPI_Type *base;$/;"	m	struct:_cmsis_spi_resource	file:
base	drivers/fsl_spi_dma.c	/^    SPI_Type *base;$/;"	m	struct:_spi_dma_private_handle	file:
base	lwip/src/include/lwip/priv/memp_priv.h	/^  u8_t *base;$/;"	m	struct:memp_desc
base64	lwip/src/netif/ppp/eap.c	/^static char base64[] =$/;"	v	file:
bass_boost	codec2/codec2_internal.h	/^    int           bass_boost;              \/* LPC post filter bass boost                *\/$/;"	m	struct:CODEC2
baudRate	component/serial_manager/serial_port_uart.h	/^    uint32_t baudRate;                              \/*!< baud rate  *\/$/;"	m	struct:_serial_port_uart_config
baudRate_Bps	component/i2c/i2c.h	/^    uint32_t baudRate_Bps; \/*!< Baud rate configuration of HAL I2C peripheral. *\/$/;"	m	struct:_hal_i2c_master_config
baudRate_Bps	component/uart/uart.h	/^    uint32_t baudRate_Bps;                  \/*!< Baud rate  *\/$/;"	m	struct:_hal_uart_config
baudRate_Bps	drivers/fsl_i2c.h	/^    uint32_t baudRate_Bps; \/*!< Desired baud rate in bits per second. *\/$/;"	m	struct:_i2c_master_config
baudRate_Bps	drivers/fsl_spi.h	/^    uint32_t baudRate_Bps;              \/*!< Baud Rate for SPI in Hz *\/$/;"	m	struct:_spi_master_config
baudRate_Bps	drivers/fsl_spi_cmsis.c	/^    uint32_t baudRate_Bps;$/;"	m	struct:_cmsis_spi_dma_driver_state	file:
baudRate_Bps	drivers/fsl_spi_cmsis.c	/^    uint32_t baudRate_Bps;$/;"	m	struct:_cmsis_spi_interrupt_driver_state	file:
baudRate_Bps	drivers/fsl_usart.h	/^    uint32_t baudRate_Bps;                \/*!< USART baud rate  *\/$/;"	m	struct:_usart_config
bc	lwip/src/include/lwip/priv/api_msg.h	/^    } bc;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::__anon456
bcdDevice	usb/include/usb_spec.h	/^    uint8_t bcdDevice[2];       \/* Device release number in binary-coded decimal *\/$/;"	m	struct:_usb_descriptor_device
bcdUSB	usb/include/usb_spec.h	/^    uint8_t bcdUSB[2];          \/* UUSB Specification Release Number in Binary-Coded Decimal, e.g. 0x0200U *\/$/;"	m	struct:_usb_descriptor_device
bdt	usb/device/source/khci/usb_device_khci.h	/^    uint8_t *bdt;                      \/*!< BDT buffer address *\/$/;"	m	struct:_usb_device_khci_state_struct
bdtOdd	usb/device/source/khci/usb_device_khci.h	/^            uint32_t bdtOdd : 1U;         \/*!< The BDT toggle of the endpoint *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct::__anon525::__anon526
begin	littlefs/littlefs_include/lfs.h	/^    lfs_block_t begin;$/;"	m	struct:lfs_free
beta	codec2/codec2_internal.h	/^    float         beta;                    \/* LPC post filter parameters                *\/$/;"	m	struct:CODEC2
bg_est	codec2/codec2_internal.h	/^    float         bg_est;                  \/* background noise estimate for post filter *\/$/;"	m	struct:CODEC2
bind	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_bind_fn               bind;$/;"	m	struct:altcp_functions
bind	lwip/src/include/lwip/sockets.h	616;"	d
bitCountPerChar	drivers/fsl_usart.h	/^    usart_data_len_t bitCountPerChar;     \/*!< Data length - 7 bit, 8 bit  *\/$/;"	m	struct:_usart_config
bitRevFactor	CMSIS/arm_math.h	/^    uint16_t bitRevFactor;             \/**< bit reversal modifier that supports different size FFTs with the same bit reversal table. *\/$/;"	m	struct:__anon74
bitRevFactor	CMSIS/arm_math.h	/^    uint16_t bitRevFactor;             \/**< bit reversal modifier that supports different size FFTs with the same bit reversal table. *\/$/;"	m	struct:__anon75
bitRevFactor	CMSIS/arm_math.h	/^    uint16_t bitRevFactor;           \/**< bit reversal modifier that supports different size FFTs with the same bit reversal table. *\/$/;"	m	struct:__anon70
bitRevFactor	CMSIS/arm_math.h	/^    uint16_t bitRevFactor;           \/**< bit reversal modifier that supports different size FFTs with the same bit reversal table. *\/$/;"	m	struct:__anon71
bitRevFactor	CMSIS/arm_math.h	/^    uint16_t bitRevFactor;           \/**< bit reversal modifier that supports different size FFTs with the same bit reversal table. *\/$/;"	m	struct:__anon72
bitRevFactor	CMSIS/arm_math.h	/^    uint16_t bitRevFactor;           \/**< bit reversal modifier that supports different size FFTs with the same bit reversal table. *\/$/;"	m	struct:__anon73
bitRevLength	CMSIS/arm_math.h	/^    uint16_t bitRevLength;             \/**< bit reversal table length. *\/$/;"	m	struct:__anon76
bitRevLength	CMSIS/arm_math.h	/^    uint16_t bitRevLength;             \/**< bit reversal table length. *\/$/;"	m	struct:__anon77
bitRevLength	CMSIS/arm_math.h	/^    uint16_t bitRevLength;             \/**< bit reversal table length. *\/$/;"	m	struct:__anon78
bitReverseFlag	CMSIS/arm_math.h	/^    uint8_t bitReverseFlag;            \/**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. *\/$/;"	m	struct:__anon74
bitReverseFlag	CMSIS/arm_math.h	/^    uint8_t bitReverseFlag;            \/**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. *\/$/;"	m	struct:__anon75
bitReverseFlag	CMSIS/arm_math.h	/^    uint8_t bitReverseFlag;          \/**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. *\/$/;"	m	struct:__anon70
bitReverseFlag	CMSIS/arm_math.h	/^    uint8_t bitReverseFlag;          \/**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. *\/$/;"	m	struct:__anon71
bitReverseFlag	CMSIS/arm_math.h	/^    uint8_t bitReverseFlag;          \/**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. *\/$/;"	m	struct:__anon72
bitReverseFlag	CMSIS/arm_math.h	/^    uint8_t bitReverseFlag;          \/**< flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output. *\/$/;"	m	struct:__anon73
bitReverseFlagR	CMSIS/arm_math.h	/^    uint8_t bitReverseFlagR;                    \/**< flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output. *\/$/;"	m	struct:__anon80
bitReverseFlagR	CMSIS/arm_math.h	/^    uint8_t bitReverseFlagR;                    \/**< flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output. *\/$/;"	m	struct:__anon81
bitReverseFlagR	CMSIS/arm_math.h	/^    uint8_t bitReverseFlagR;                  \/**< flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output. *\/$/;"	m	struct:__anon79
bitWidth	codec/fsl_wm8904.h	/^    wm8904_bit_width_t bitWidth;     \/*!< Bit width *\/$/;"	m	struct:_wm8904_audio_format
bits	lwip/src/include/netif/ppp/mppe.h	/^	u8_t bits;                  \/* MPPE control bits *\/$/;"	m	struct:ppp_mppe_state
ble_addr_to_eui64	lwip/src/netif/lowpan6_ble.c	/^ble_addr_to_eui64(uint8_t *dst, const uint8_t *src, int public_addr)$/;"	f
blinks_id	lwip/src/netif/ppp/multilink.c	/^char *blinks_id;		\/* key for the list of links *\/$/;"	v
blk	drivers/fsl_sha.c	/^    sha_block_t blk;        \/*!< memory buffer. only full 64-byte blocks are written to SHA during hash updates *\/$/;"	m	struct:_sha_ctx_internal	file:
blksz	drivers/fsl_sha.c	/^    size_t blksz;           \/*!< number of valid bytes in memory buffer *\/$/;"	m	struct:_sha_ctx_internal	file:
block	littlefs/littlefs_include/lfs.h	/^    lfs_block_t block;$/;"	m	struct:lfs_cache
block	littlefs/littlefs_include/lfs.h	/^    lfs_block_t block;$/;"	m	struct:lfs_file
blockLength	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t blockLength; \/*!< Block Length*\/$/;"	m	struct:_usb_device_formattable_capacity_descriptor_struct
blockNumber	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t blockNumber;               \/*!< Number of Blocks*\/$/;"	m	struct:_usb_device_current_max_capacity_descriptor_struct
blockNumber	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t blockNumber; \/*!< Number of Blocks*\/$/;"	m	struct:_usb_device_formattable_capacity_descriptor_struct
blockSize	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t blockSize;                \/*!< Block Length In Bytes*\/$/;"	m	struct:_usb_device_read_capacity16_data_struct
blockSize	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t blockSize;               \/*!< Block Length In Bytes*\/$/;"	m	struct:_usb_device_read_capacity_struct
block_count	littlefs/littlefs_include/lfs.h	/^        uint32_t block_count;$/;"	m	struct:lfs_superblock::lfs_disk_superblock
block_count	littlefs/littlefs_include/lfs.h	/^    lfs_size_t block_count;$/;"	m	struct:lfs_config
block_size	littlefs/littlefs_include/lfs.h	/^        uint32_t block_size;$/;"	m	struct:lfs_superblock::lfs_disk_superblock
block_size	littlefs/littlefs_include/lfs.h	/^    lfs_size_t block_size;$/;"	m	struct:lfs_config
bmAttributes	usb/include/usb_spec.h	/^    uint8_t bmAttributes;        \/* Configuration characteristics *\/$/;"	m	struct:_usb_descriptor_configuration
bmAttributes	usb/include/usb_spec.h	/^    uint8_t bmAttributes;$/;"	m	struct:_usb_descriptor_endpoint
bmAttributes	usb/include/usb_spec.h	/^    uint8_t bmAttributes;$/;"	m	struct:_usb_descriptor_endpoint_companion
bmAttributes	usb/include/usb_spec.h	/^    uint8_t bmAttributes;$/;"	m	struct:_usb_descriptor_super_speed_device_capability
bmAttributes	usb/include/usb_spec.h	/^    uint8_t bmAttributes[4];     \/*Bitmap encoding of supported device level features.*\/$/;"	m	struct:_usb_descriptor_usb20_extension
bmChanges	usb/device/class/usb_device_ccid.h	/^    uint8_t bmChanges;         \/*!<$/;"	m	struct:_usb_device_ccid_t0_apdu_command
bmFindexDindex	usb/device/class/usb_device_ccid.h	/^    uint8_t bmFindexDindex;    \/*!< Bit7~4 - Fi, Bit3~0 - Di. *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bmFindexDindex	usb/device/class/usb_device_ccid.h	/^    uint8_t bmFindexDindex;    \/*!< Bit7~4 - Fi, Bit3~0 - Di. *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bmFindexDindex	usb/device/class/usb_device_ccid.h	/^    uint8_t bmFindexDindex; \/*!< Bit7~4 - Fi, Bit3~0 - Di. *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bmFindexDindex	usb/device/class/usb_device_ccid.h	/^    uint8_t bmFindexDindex; \/*!< Bit7~4 - Fi, Bit3~0 - Di. *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bmFormatString	usb/device/class/usb_device_ccid.h	/^    uint8_t bmFormatString;      \/*!< Several parameters for the PIN format options *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bmFormatString	usb/device/class/usb_device_ccid.h	/^    uint8_t bmFormatString;     \/*!< Several parameters for the PIN format options *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bmFramingInfo	usb/device/class/usb_device_video.h	/^    uint8_t bmFramingInfo;     \/*!< Bit-field control supporting the following values: D0 Frame ID, D1 EOF.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bmHint	usb/device/class/usb_device_video.h	/^        uint8_t bmHint; \/*!< Bit-field control indicating to the function what fields shall be kept fixed. *\/$/;"	m	union:_usb_device_video_probe_and_commit_controls_struct::__anon506
bmHint	usb/device/class/usb_device_video.h	/^        uint8_t bmHint; \/*!< Bit-field control indicating to the function what fields shall be kept fixed. *\/$/;"	m	union:_usb_device_video_probe_and_commit_controls_struct::__anon508
bmLayoutPerStream	usb/device/class/usb_device_video.h	/^    uint64_t bmLayoutPerStream;         \/*!< This field contains 4U sub-fields, each of which is a 2U byte number.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bmPINBlockString	usb/device/class/usb_device_ccid.h	/^    uint8_t bmPINBlockString;    \/*!< Define the length of the PIN to present in the APDU command *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bmPINBlockString	usb/device/class/usb_device_ccid.h	/^    uint8_t bmPINBlockString;   \/*!< Defines the length in bytes of the PIN block to present in the APDU command *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bmPINLengthFormat	usb/device/class/usb_device_ccid.h	/^    uint8_t bmPINLengthFormat;   \/*!< Allows the length PIN insertion in the APDU command *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
bmPINLengthFormat	usb/device/class/usb_device_ccid.h	/^    uint8_t bmPINLengthFormat;  \/*!< Allows the insertion of the PIN length in the APDU command *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
bmRateControlModes	usb/device/class/usb_device_video.h	/^    uint16_t bmRateControlModes;        \/*!< This field contains 4U sub-fields, each of which is a 4U bit number.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bmRequestType	usb/include/usb_spec.h	/^    uint8_t bmRequestType;$/;"	m	struct:_usb_setup_struct
bmSettings	usb/device/class/usb_device_video.h	/^    uint8_t bmSettings; \/*!< A bitmap of flags that is used to discover and control specific features of a temporally$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
bmSlotICCState	usb/device/class/usb_device_ccid.h	/^    uint8_t bmSlotICCState[1]; \/*!< This field is reported on byte granularity. *\/$/;"	m	struct:_usb_device_ccid_notify_slot_chnage_notification
bmTCCKST0	usb/device/class/usb_device_ccid.h	/^    uint8_t bmTCCKST0;         \/*!< Bit1 - Convention used(0U for direct, 1U for inverse), other bits is 0*\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
bmTCCKST0	usb/device/class/usb_device_ccid.h	/^    uint8_t bmTCCKST0;         \/*!< Bit1 - Convention used(0U for direct, 1U for inverse), other bits is 0*\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
bmTCCKST1	usb/device/class/usb_device_ccid.h	/^    uint8_t bmTCCKST1; \/*!< Bit0 - Checksum type(0U for LRC, 1U for CRC). Bit1 - Convention used(0U for direct, 1U for$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bmTCCKST1	usb/device/class/usb_device_ccid.h	/^    uint8_t bmTCCKST1; \/*!< Bit0 - Checksum type(0U for LRC, 1U for CRC). Bit1 - Convention used(0U for direct, 1U for$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bmWaitingIntegersT1	usb/device/class/usb_device_ccid.h	/^    uint8_t bmWaitingIntegersT1; \/*!< Bit7~4 - BWI(0~9 valid), Bit3~0 - CWI(0~0xF valid) *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
bmWaitingIntegersT1	usb/device/class/usb_device_ccid.h	/^    uint8_t bmWaitingIntegersT1; \/*!< Bit7~4 - BWI(0~9 valid), Bit3~0 - CWI(0~0xF valid) *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
bmheaderInfo	usb/device/class/usb_device_video.h	/^        uint8_t bmheaderInfo; \/*!< The payload header bitmap field. *\/$/;"	m	union:_usb_device_video_mjpeg_payload_header_struct::__anon503
boardCodecConfig	source/i2s_transfer.c	/^codec_config_t boardCodecConfig = {$/;"	v
boot_file_name	lwip/src/include/lwip/dhcp.h	/^  char boot_file_name[DHCP_BOOT_FILE_LEN];$/;"	m	struct:dhcp
bpf	codec2/bpf.h	/^float bpf[]={$/;"	v
bpf_buf	codec2/codec2_internal.h	/^    float        *bpf_buf;                 \/* buffer for band pass filter               *\/$/;"	m	struct:CODEC2
bpfb	codec2/bpfb.h	/^float bpfb[]={$/;"	v
breakDuration	vcom/virtual_com.h	/^    uint16_t breakDuration;   \/* Length of time in milliseconds of the break signal *\/$/;"	m	struct:_usb_cdc_acm_info
bridge	lwip/src/netif/bridgeif.c	/^  struct bridgeif_private_s *bridge;$/;"	m	struct:bridgeif_port_private_s	typeref:struct:bridgeif_port_private_s::bridgeif_private_s	file:
bridgeif_add_port	lwip/src/netif/bridgeif.c	/^bridgeif_add_port(struct netif *bridgeif, struct netif *portif)$/;"	f
bridgeif_age_tmr	lwip/src/netif/bridgeif_fdb.c	/^bridgeif_age_tmr(void *arg)$/;"	f	file:
bridgeif_dfdb_entry_s	lwip/src/netif/bridgeif_fdb.c	/^typedef struct bridgeif_dfdb_entry_s {$/;"	s	file:
bridgeif_dfdb_entry_t	lwip/src/netif/bridgeif_fdb.c	/^} bridgeif_dfdb_entry_t;$/;"	t	typeref:struct:bridgeif_dfdb_entry_s	file:
bridgeif_dfdb_s	lwip/src/netif/bridgeif_fdb.c	/^typedef struct bridgeif_dfdb_s {$/;"	s	file:
bridgeif_dfdb_t	lwip/src/netif/bridgeif_fdb.c	/^} bridgeif_dfdb_t;$/;"	t	typeref:struct:bridgeif_dfdb_s	file:
bridgeif_fdb_add	lwip/src/netif/bridgeif.c	/^bridgeif_fdb_add(struct netif *bridgeif, const struct eth_addr *addr, bridgeif_portmask_t ports)$/;"	f
bridgeif_fdb_age_one_second	lwip/src/netif/bridgeif_fdb.c	/^bridgeif_fdb_age_one_second(void *fdb_ptr)$/;"	f	file:
bridgeif_fdb_get_dst_ports	lwip/src/netif/bridgeif_fdb.c	/^bridgeif_fdb_get_dst_ports(void *fdb_ptr, struct eth_addr *dst_addr)$/;"	f
bridgeif_fdb_init	lwip/src/netif/bridgeif_fdb.c	/^bridgeif_fdb_init(u16_t max_fdb_entries)$/;"	f
bridgeif_fdb_remove	lwip/src/netif/bridgeif.c	/^bridgeif_fdb_remove(struct netif *bridgeif, const struct eth_addr *addr)$/;"	f
bridgeif_fdb_static_entry_s	lwip/src/netif/bridgeif.c	/^typedef struct bridgeif_fdb_static_entry_s {$/;"	s	file:
bridgeif_fdb_static_entry_t	lwip/src/netif/bridgeif.c	/^} bridgeif_fdb_static_entry_t;$/;"	t	typeref:struct:bridgeif_fdb_static_entry_s	file:
bridgeif_fdb_update_src	lwip/src/netif/bridgeif_fdb.c	/^bridgeif_fdb_update_src(void *fdb_ptr, struct eth_addr *src_addr, u8_t port_idx)$/;"	f
bridgeif_find_dst_ports	lwip/src/netif/bridgeif.c	/^bridgeif_find_dst_ports(bridgeif_private_t *br, struct eth_addr *dst_addr)$/;"	f	file:
bridgeif_init	lwip/src/netif/bridgeif.c	/^bridgeif_init(struct netif *netif)$/;"	f
bridgeif_initdata_s	lwip/src/include/netif/bridgeif.h	/^typedef struct bridgeif_initdata_s {$/;"	s
bridgeif_initdata_t	lwip/src/include/netif/bridgeif.h	/^} bridgeif_initdata_t;$/;"	t	typeref:struct:bridgeif_initdata_s
bridgeif_input	lwip/src/netif/bridgeif.c	/^bridgeif_input(struct pbuf *p, struct netif *netif)$/;"	f	file:
bridgeif_is_local_mac	lwip/src/netif/bridgeif.c	/^bridgeif_is_local_mac(bridgeif_private_t *br, struct eth_addr *addr)$/;"	f	file:
bridgeif_netif_client_id	lwip/src/netif/bridgeif.c	/^u8_t bridgeif_netif_client_id = 0xff;$/;"	v
bridgeif_output	lwip/src/netif/bridgeif.c	/^bridgeif_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
bridgeif_port_private_s	lwip/src/netif/bridgeif.c	/^typedef struct bridgeif_port_private_s {$/;"	s	file:
bridgeif_port_t	lwip/src/netif/bridgeif.c	/^} bridgeif_port_t;$/;"	t	typeref:struct:bridgeif_port_private_s	file:
bridgeif_portmask_t	lwip/src/include/netif/bridgeif.h	/^typedef u16_t bridgeif_portmask_t;$/;"	t
bridgeif_portmask_t	lwip/src/include/netif/bridgeif.h	/^typedef u32_t bridgeif_portmask_t;$/;"	t
bridgeif_portmask_t	lwip/src/include/netif/bridgeif.h	/^typedef u64_t bridgeif_portmask_t;$/;"	t
bridgeif_portmask_t	lwip/src/include/netif/bridgeif.h	/^typedef u8_t bridgeif_portmask_t;$/;"	t
bridgeif_private_s	lwip/src/netif/bridgeif.c	/^typedef struct bridgeif_private_s {$/;"	s	file:
bridgeif_private_t	lwip/src/netif/bridgeif.c	/^} bridgeif_private_t;$/;"	t	typeref:struct:bridgeif_private_s	file:
bridgeif_send_to_port	lwip/src/netif/bridgeif.c	/^bridgeif_send_to_port(bridgeif_private_t *br, struct pbuf *p, u8_t dstport_idx)$/;"	f	file:
bridgeif_send_to_ports	lwip/src/netif/bridgeif.c	/^bridgeif_send_to_ports(bridgeif_private_t *br, struct pbuf *p, bridgeif_portmask_t dstports)$/;"	f	file:
bridgeif_tcpip_input	lwip/src/netif/bridgeif.c	/^bridgeif_tcpip_input(struct pbuf *p, struct netif *netif)$/;"	f	file:
bs_bits	lwip/src/netif/ppp/eap.c	/^	u32_t bs_bits;$/;"	m	struct:b64state	file:
bs_cfg	drivers/fsl_pint.h	/^    pint_pmatch_bslice_cfg_t bs_cfg;$/;"	m	struct:_pint_pmatch_cfg
bs_offs	lwip/src/netif/ppp/eap.c	/^	int bs_offs;$/;"	m	struct:b64state	file:
bs_src	drivers/fsl_pint.h	/^    pint_pmatch_input_src_t bs_src;$/;"	m	struct:_pint_pmatch_cfg
bsd_bits	lwip/src/include/netif/ppp/ccp.h	/^    u_short bsd_bits;		\/* # bits\/code for BSD Compress *\/$/;"	m	struct:ccp_options
bsd_compress	lwip/src/include/netif/ppp/ccp.h	/^    unsigned int bsd_compress     :1; \/* do BSD Compress? *\/$/;"	m	struct:ccp_options
bsd_value	lwip/src/netif/ppp/ccp.c	/^static char bsd_value[8];$/;"	v	file:
bss_init	startup/startup_lpc54018.c	/^void bss_init(unsigned int start, unsigned int len) {$/;"	f
buf	drivers/fsl_i2c.h	/^    uint8_t *buf;            \/*!< Buffer pointer for current state. *\/$/;"	m	struct:_i2c_master_handle
buf	drivers/fsl_i2c_dma.h	/^    uint8_t *buf;               \/*!< Buffer pointer for current state. *\/$/;"	m	struct:_i2c_master_dma_handle
buff1Addr	drivers/fsl_enet.h	/^    __IO uint32_t buff1Addr;   \/*!< Buffer 1 address *\/$/;"	m	struct:_enet_tx_bd_struct
buff1Addr	drivers/fsl_enet.h	/^    __IO uint32_t buff1Addr; \/*!< Buffer 1 address *\/$/;"	m	struct:_enet_rx_bd_struct
buff2Addr	drivers/fsl_enet.h	/^    __IO uint32_t buff2Addr;   \/*!< Buffer 2 address *\/$/;"	m	struct:_enet_tx_bd_struct
buff2Addr	drivers/fsl_enet.h	/^    __IO uint32_t buff2Addr; \/*!< Buffer 2 or next descriptor address *\/$/;"	m	struct:_enet_rx_bd_struct
buffLen	drivers/fsl_enet.h	/^    __IO uint32_t buffLen;     \/*!< Buffer 1\/2 byte counts *\/$/;"	m	struct:_enet_tx_bd_struct
buffer	component/serial_manager/serial_manager.c	/^    uint8_t *buffer;$/;"	m	struct:_serial_manager_transfer	file:
buffer	component/serial_manager/serial_manager.h	/^    uint8_t *buffer; \/*!< Transferred buffer *\/$/;"	m	struct:_serial_manager_callback_message
buffer	component/serial_manager/serial_port_uart.c	/^    uint8_t *buffer;$/;"	m	struct:_serial_uart_send_state	file:
buffer	component/uart/usart_adapter.c	/^    volatile uint8_t *buffer;$/;"	m	struct:_hal_uart_receive_state	file:
buffer	component/uart/usart_adapter.c	/^    volatile uint8_t *buffer;$/;"	m	struct:_hal_uart_send_state	file:
buffer	littlefs/littlefs_include/lfs.h	/^    uint32_t *buffer;$/;"	m	struct:lfs_free
buffer	littlefs/littlefs_include/lfs.h	/^    uint8_t *buffer;$/;"	m	struct:lfs_cache
buffer	lwip/src/include/netif/ppp/polarssl/md4.h	/^    unsigned char buffer[64];   \/*!< data block being processed *\/$/;"	m	struct:__anon428
buffer	lwip/src/include/netif/ppp/polarssl/md5.h	/^    unsigned char buffer[64];   \/*!< data block being processed *\/$/;"	m	struct:__anon431
buffer	lwip/src/include/netif/ppp/polarssl/sha1.h	/^    unsigned char buffer[64];   \/*!< data block being processed *\/$/;"	m	struct:__anon430
buffer	usb/device/class/usb_device_ccid.h	/^    uint8_t *buffer;                                 \/*!< The transfer buffer address need to be sent *\/$/;"	m	struct:_usb_device_ccid_transfer_struct
buffer	usb/device/class/usb_device_ccid.h	/^    uint8_t *buffer; \/*!< The buffer address *\/$/;"	m	struct:_usb_device_ccid_control_request_struct
buffer	usb/device/class/usb_device_ccid.h	/^    uint8_t *buffer; \/*!< The transferred buffer address *\/$/;"	m	struct:_usb_device_ccid_notification_struct
buffer	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t **buffer;        \/*!< The pointer to the address of the buffer for CDC class request. *\/$/;"	m	struct:_usb_device_cdc_acm_request_param_struct
buffer	usb/device/class/usb_device_cdc_rndis.h	/^    uint8_t *buffer; \/*!< The pointer to the buffer for RNDIS request. *\/$/;"	m	struct:_usb_device_cdc_rndis_request_param_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer;           \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_control_request_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer;         \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_hid_descriptor_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer;         \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_hid_physical_descriptor_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer;         \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_hid_report_descriptor_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer;       \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_configuration_descriptor_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer;     \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_string_descriptor_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer; \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_bos_descriptor_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer; \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_descriptor_common_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer; \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_device_descriptor_struct
buffer	usb/device/class/usb_device_class.h	/^    uint8_t *buffer; \/*!< Pass the buffer address. *\/$/;"	m	struct:_usb_device_get_device_qualifier_descriptor_struct
buffer	usb/device/class/usb_device_msc.h	/^    uint8_t *buffer;                   \/*!< Data buffer*\/$/;"	m	struct:_usb_device_msc_thirteen_case_struct
buffer	usb/device/class/usb_device_msc.h	/^    uint8_t *buffer; \/*!< Buffer address of the transferred data if commmand has data flow*\/$/;"	m	struct:_usb_device_ufi_app_struct
buffer	usb/device/class/usb_device_msc.h	/^    uint8_t *buffer; \/*!< Buffer address of the transferred data*\/$/;"	m	struct:_usb_device_lba_app_struct
buffer	usb/device/class/usb_device_printer.h	/^    uint8_t *buffer;          \/*!< The class specific request buffer address *\/$/;"	m	struct:_usb_device_printer_class_request
buffer	usb/device/include/usb_device.h	/^    uint8_t *buffer; \/*!< Transferred buffer *\/$/;"	m	struct:_usb_device_endpoint_callback_message_struct
buffer	usb/device/source/usb_device_dci.h	/^    uint8_t *buffer; \/*!< Transferred buffer *\/$/;"	m	struct:_usb_device_callback_message_struct
bufferLength	component/uart/usart_adapter.c	/^    volatile uint32_t bufferLength;$/;"	m	struct:_hal_uart_receive_state	file:
bufferLength	component/uart/usart_adapter.c	/^    volatile uint32_t bufferLength;$/;"	m	struct:_hal_uart_send_state	file:
bufferPointerPage	usb/device/source/ehci/usb_device_ehci.h	/^    volatile uint32_t bufferPointerPage[5];$/;"	m	struct:_usb_device_ehci_dtd_struct
bufferPointerPage	usb/device/source/ehci/usb_device_ehci.h	/^    volatile uint32_t bufferPointerPage[5];$/;"	m	struct:_usb_device_ehci_qh_struct
bufferSofar	component/uart/usart_adapter.c	/^    volatile uint32_t bufferSofar;$/;"	m	struct:_hal_uart_receive_state	file:
bufferSofar	component/uart/usart_adapter.c	/^    volatile uint32_t bufferSofar;$/;"	m	struct:_hal_uart_send_state	file:
buffer_info	lwip/src/netif/ppp/utils.c	/^struct buffer_info {$/;"	s	file:
bugfix	usb/include/usb.h	/^    uint8_t bugfix; \/*!< Bug fix *\/$/;"	m	struct:_usb_version
bulkIn	usb/device/class/usb_device_cdc_acm.h	/^    usb_device_cdc_acm_pipe_t bulkIn;                   \/*!< The bulk in pipe for sending packet to host. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
bulkIn	usb/device/class/usb_device_phdc.h	/^    usb_device_phdc_pipe_t bulkIn;                  \/*!< The bulk in pipe for sending data *\/$/;"	m	struct:_usb_device_phdc_struct
bulkInBufferSize	usb/device/class/usb_device_msc.h	/^    uint32_t bulkInBufferSize;          \/*!< Bulk in buffer size*\/$/;"	m	struct:_usb_device_logical_unit_information_struct
bulkInBusy	usb/device/class/usb_device_ccid.h	/^    uint8_t bulkInBusy;          \/*!< The bulk IN pipe is busy or not. *\/$/;"	m	struct:_usb_device_ccid_struct
bulkInBusy	usb/device/class/usb_device_printer.h	/^    uint8_t bulkInBusy;                             \/*!< BULK IN pipe busy flag *\/$/;"	m	struct:_usb_device_printer_struct
bulkInEndpoint	usb/device/class/usb_device_msc.h	/^    uint8_t bulkInEndpoint;          \/*!< Bulk in endpoint number*\/$/;"	m	struct:_usb_device_msc_struct
bulkInEndpoint	vcom/virtual_com.h	/^    uint8_t bulkInEndpoint;             \/*bulk in endpoint number*\/$/;"	m	struct:_usb_cdc_vcom_struct
bulkInEndpointMaxPacketSize	vcom/virtual_com.h	/^    uint16_t bulkInEndpointMaxPacketSize;    \/*bulk in endpoint maxpacket size *\/$/;"	m	struct:_usb_cdc_vcom_struct
bulkInPipeDataBuffer	usb/device/class/usb_device_printer.h	/^    uint8_t *bulkInPipeDataBuffer;             \/*!< IN pipe data buffer backup when stall *\/$/;"	m	struct:_usb_device_printer_struct
bulkInPipeDataLen	usb/device/class/usb_device_printer.h	/^    uint32_t bulkInPipeDataLen;                \/*!< IN pipe data length backup when stall  *\/$/;"	m	struct:_usb_device_printer_struct
bulkInPipeStall	usb/device/class/usb_device_printer.h	/^    uint8_t bulkInPipeStall;                    \/*!< bulk IN pipe stall flag *\/$/;"	m	struct:_usb_device_printer_struct
bulkOut	usb/device/class/usb_device_cdc_acm.h	/^    usb_device_cdc_acm_pipe_t bulkOut;                  \/*!< The bulk out pipe for receiving packet from host. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
bulkOut	usb/device/class/usb_device_phdc.h	/^    usb_device_phdc_pipe_t bulkOut;                 \/*!< The bulk out pipe for receiving data *\/$/;"	m	struct:_usb_device_phdc_struct
bulkOutBufferSize	usb/device/class/usb_device_msc.h	/^    uint32_t bulkOutBufferSize;         \/*!< Bulk out buffer size*\/$/;"	m	struct:_usb_device_logical_unit_information_struct
bulkOutBusy	usb/device/class/usb_device_printer.h	/^    uint8_t bulkOutBusy;                            \/*!< BULK OUT pipe busy flag *\/$/;"	m	struct:_usb_device_printer_struct
bulkOutEndpoint	usb/device/class/usb_device_msc.h	/^    uint8_t bulkOutEndpoint;         \/*!< Bulk out endpoint number*\/$/;"	m	struct:_usb_device_msc_struct
bulkOutEndpoint	vcom/virtual_com.h	/^    uint8_t bulkOutEndpoint;            \/*bulk out endpoint number*\/$/;"	m	struct:_usb_cdc_vcom_struct
bulkOutEndpointMaxPacketSize	vcom/virtual_com.h	/^    uint16_t bulkOutEndpointMaxPacketSize;   \/*bulk out endpoint maxpacket size *\/$/;"	m	struct:_usb_cdc_vcom_struct
bulkOutPipeDataBuffer	usb/device/class/usb_device_printer.h	/^    uint8_t *bulkOutPipeDataBuffer;             \/*!< OUT pipe data buffer backup when stall *\/$/;"	m	struct:_usb_device_printer_struct
bulkOutPipeDataLen	usb/device/class/usb_device_printer.h	/^    uint32_t bulkOutPipeDataLen;                \/*!< OUT pipe data length backup when stall  *\/$/;"	m	struct:_usb_device_printer_struct
bulkOutPipeStall	usb/device/class/usb_device_printer.h	/^    uint8_t bulkOutPipeStall;                   \/*!< bulk OUT pipe stall flag *\/$/;"	m	struct:_usb_device_printer_struct
bundle_id	lwip/src/netif/ppp/multilink.c	/^char *bundle_id;		\/* identifier for our bundle *\/$/;"	v
burst	drivers/fsl_dma.h	/^    dma_trigger_burst_t burst; \/*!< Select whether hardware triggers cause a single or burst transfer. *\/$/;"	m	struct:_dma_channel_trigger
burstLen	drivers/fsl_enet.h	/^    enet_dma_burstlen burstLen;                \/*!< Burset len for the queue 1. *\/$/;"	m	struct:enet_multiqueue_config
burst_mode	codec2/fsk.h	/^    int burst_mode;         \/* enables\/disables 'burst' mode *\/$/;"	m	struct:FSK
busSpeed	drivers/fsl_i2c.h	/^        busSpeed; \/*!< Slave bus speed mode. If the slave function stretches SCL to allow for software response, it must$/;"	m	struct:_i2c_slave_config
bus_error	CMSIS_driver/Driver_I2C.h	/^  uint32_t bus_error        : 1;        \/\/\/< Bus error detected (cleared on start of next Master\/Slave operation)$/;"	m	struct:_ARM_I2C_STATUS
busy	CMSIS_driver/Driver_I2C.h	/^  uint32_t busy             : 1;        \/\/\/< Busy flag$/;"	m	struct:_ARM_I2C_STATUS
busy	CMSIS_driver/Driver_SPI.h	/^  uint32_t busy       : 1;              \/\/\/< Transmitter\/Receiver busy flag$/;"	m	struct:_ARM_SPI_STATUS
busy	component/serial_manager/serial_port_uart.c	/^    volatile uint8_t busy;$/;"	m	struct:_serial_uart_recv_state	file:
busy	component/serial_manager/serial_port_uart.c	/^    volatile uint8_t busy;$/;"	m	struct:_serial_uart_send_state	file:
bw_expand_lsps	codec2/quantise.c	/^void bw_expand_lsps(float lsp[], int order, float min_sep_low, float min_sep_high)$/;"	f
bw_expand_lsps2	codec2/quantise.c	/^void bw_expand_lsps2(float lsp[],$/;"	f
bypass	drivers/fsl_clock.h	/^    bool bypass;        \/*!< USB PLL inout clock bypass control  *\/$/;"	m	struct:_usb_pll_setup
byteWidth	drivers/fsl_dma.h	/^    uint8_t byteWidth;      \/*!< Byte width of data to transfer *\/$/;"	m	struct:_dma_xfercfg
bytesPerFrame	drivers/fsl_i2s_dma.h	/^    uint8_t bytesPerFrame;                             \/*!< bytes per frame *\/$/;"	m	struct:_i2s_dma_handle
bytesPerFrame	drivers/fsl_spi_dma.h	/^    uint8_t bytesPerFrame;       \/*!< Bytes in a frame for SPI transfer *\/$/;"	m	struct:_spi_dma_handle
bytes_acked	lwip/src/include/lwip/tcp.h	/^  tcpwnd_size_t bytes_acked;$/;"	m	struct:tcp_pcb
bytes_in	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int	bytes_in;$/;"	m	struct:pppd_stats
bytes_out	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int	bytes_out;$/;"	m	struct:pppd_stats
c	lwip/src/include/netif/ppp/ppp_impl.h	/^    struct compstat c;		\/* packet compression statistics *\/$/;"	m	struct:ppp_comp_stats	typeref:struct:ppp_comp_stats::compstat
c0	emwin/emWin_header/GUI_Type.h	/^  I16P c0;$/;"	m	struct:__anon253
c1	emwin/emWin_header/GUI_Type.h	/^  I16P c1;$/;"	m	struct:__anon253
c2const	codec2/codec2_internal.h	/^    C2CONST       c2const;$/;"	m	struct:CODEC2
c2const_create	codec2/sine.c	/^C2CONST c2const_create(int Fs) {$/;"	f
cRxLock	amazon-freertos/freertos/queue.c	/^	volatile int8_t cRxLock;		\/*< Stores the number of items received from the queue (removed from the queue) while the queue was locked.  Set to queueUNLOCKED when the queue is not locked. *\/$/;"	m	struct:QueueDefinition	file:
cTxLock	amazon-freertos/freertos/queue.c	/^	volatile int8_t cTxLock;		\/*< Stores the number of items transmitted to the queue (added to the queue) while the queue was locked.  Set to queueUNLOCKED when the queue is not locked. *\/$/;"	m	struct:QueueDefinition	file:
c_node	codec2/mpdecode_core.h	/^struct c_node {$/;"	s
cabsolute	codec2/comp_prim.h	/^inline static float cabsolute(COMP a)$/;"	f
cache	littlefs/littlefs_include/lfs.h	/^    lfs_cache_t cache;$/;"	m	struct:lfs_file
cachehit	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
cadd	codec2/comp_prim.h	/^inline static COMP cadd(COMP a, COMP b)$/;"	f
call	lwip/src/include/lwip/priv/api_msg.h	/^  struct tcpip_api_call_data call;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::tcpip_api_call_data
call	lwip/src/include/netif/ppp/pppapi.h	/^  struct tcpip_api_call_data call;$/;"	m	struct:pppapi_msg	typeref:struct:pppapi_msg::tcpip_api_call_data
callback	component/i2c/flexcomm_i2c_adapter.c	/^    hal_i2c_master_transfer_callback_t callback;$/;"	m	struct:_hal_i2c_master	file:
callback	component/i2c/flexcomm_i2c_adapter.c	/^    hal_i2c_slave_transfer_callback_t callback;$/;"	m	struct:_hal_i2c_slave	file:
callback	component/serial_manager/serial_manager.c	/^    serial_manager_callback_t callback;$/;"	m	struct:_serial_manager_send_handle	file:
callback	component/serial_manager/serial_port_uart.c	/^    serial_manager_callback_t callback;$/;"	m	struct:_serial_uart_recv_state	file:
callback	component/serial_manager/serial_port_uart.c	/^    serial_manager_callback_t callback;$/;"	m	struct:_serial_uart_send_state	file:
callback	component/timer/ctimer_adapter.c	/^    hal_timer_callback_t callback;$/;"	m	struct:_hal_timer_handle_struct_t	file:
callback	component/uart/usart_adapter.c	/^    hal_uart_transfer_callback_t callback;$/;"	m	struct:_hal_uart_state	file:
callback	drivers/fsl_dma.h	/^    dma_callback callback; \/*!< Callback function. Invoked when transfer$/;"	m	struct:_dma_handle
callback	drivers/fsl_dmic_dma.h	/^    dmic_dma_transfer_callback_t callback; \/*!< Callback function. *\/$/;"	m	struct:_dmic_dma_handle
callback	drivers/fsl_enet.h	/^    enet_callback_t callback; \/*!< Callback function. *\/$/;"	m	struct:_enet_handle
callback	drivers/fsl_i2c.h	/^    i2c_slave_transfer_callback_t callback; \/*!< Callback function called at transfer event. *\/$/;"	m	struct:_i2c_slave_handle
callback	drivers/fsl_pint.h	/^    pint_cb_t callback;$/;"	m	struct:_pint_pmatch_cfg
callback	drivers/fsl_spi.h	/^    spi_master_callback_t callback;   \/*!< SPI callback *\/$/;"	m	struct:_spi_master_handle
callback	drivers/fsl_spi_dma.h	/^    spi_dma_callback_t callback; \/*!< Callback for SPI DMA transfer *\/$/;"	m	struct:_spi_dma_handle
callback	drivers/fsl_usart.h	/^    usart_transfer_callback_t callback; \/*!< Callback function. *\/$/;"	m	struct:_usart_handle
callback	lwip/src/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbackFn	usb/device/include/usb_device.h	/^    usb_device_endpoint_callback_t callbackFn; \/*!< Endpoint callback function*\/$/;"	m	struct:_usb_device_endpoint_callback_struct
callbackParam	component/i2c/flexcomm_i2c_adapter.c	/^    void *callbackParam;$/;"	m	struct:_hal_i2c_master	file:
callbackParam	component/i2c/flexcomm_i2c_adapter.c	/^    void *callbackParam;$/;"	m	struct:_hal_i2c_slave	file:
callbackParam	component/serial_manager/serial_manager.c	/^    void *callbackParam;$/;"	m	struct:_serial_manager_send_handle	file:
callbackParam	component/serial_manager/serial_port_uart.c	/^    void *callbackParam;$/;"	m	struct:_serial_uart_recv_state	file:
callbackParam	component/serial_manager/serial_port_uart.c	/^    void *callbackParam;$/;"	m	struct:_serial_uart_send_state	file:
callbackParam	component/timer/ctimer_adapter.c	/^    void *callbackParam;$/;"	m	struct:_hal_timer_handle_struct_t	file:
callbackParam	component/uart/usart_adapter.c	/^    void *callbackParam;$/;"	m	struct:_hal_uart_state	file:
callbackParam	usb/device/include/usb_device.h	/^    void *callbackParam;                       \/*!< Parameter for callback function*\/$/;"	m	struct:_usb_device_endpoint_callback_struct
callback_fn	lwip/src/include/lwip/netif.h	/^  netif_ext_callback_fn callback_fn;$/;"	m	struct:netif_ext_callback
callbacks	lwip/src/include/lwip/tcp.h	/^  const struct tcp_ext_arg_callbacks *callbacks;$/;"	m	struct:tcp_pcb_ext_args	typeref:struct:tcp_pcb_ext_args::tcp_ext_arg_callbacks
callbacks	lwip/src/include/netif/ppp/fsm.h	/^    const struct fsm_callbacks *callbacks;	\/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
capabilttiesCharacteristics	usb/device/source/ehci/usb_device_ehci.h	/^        volatile uint32_t capabilttiesCharacteristics;$/;"	m	union:_usb_device_ehci_qh_struct::__anon515
capabilttiesCharacteristicsBitmap	usb/device/source/ehci/usb_device_ehci.h	/^        } capabilttiesCharacteristicsBitmap;$/;"	m	union:_usb_device_ehci_qh_struct::__anon515	typeref:struct:_usb_device_ehci_qh_struct::__anon515::__anon516
capabilttiesCharacteristicsUnion	usb/device/source/ehci/usb_device_ehci.h	/^    } capabilttiesCharacteristicsUnion;$/;"	m	struct:_usb_device_ehci_qh_struct	typeref:union:_usb_device_ehci_qh_struct::__anon515
capacityListHead	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t capacityListHead[sizeof(usb_device_capacity_list_header_struct_t)]; \/*!<Capacity List Header*\/$/;"	m	struct:_usb_device_format_capacity_response_data_struct
capacityListLength	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t capacityListLength; \/*!< Capacity List Length*\/$/;"	m	struct:_usb_device_capacity_list_header_struct
cb	codec2/defines.h	/^  const float        *cb;	  \/* The elements		*\/$/;"	m	struct:lsp_codebook
cb	codec2/defines.h	/^  float              *cb;	  \/* The elements		*\/$/;"	m	struct:lsp_codebook
cb	emwin/emWin_header/FRAMEWIN_Private.h	/^  WM_CALLBACK           * cb;$/;"	m	struct:__anon280
cb	emwin/emWin_header/WINDOW_Private.h	/^  WM_CALLBACK * cb;$/;"	m	struct:__anon310
cb	emwin/emWin_header/WM.h	/^  WM_CALLBACK* cb;      \/* Ptr to notification callback *\/$/;"	m	struct:WM_Obj
cb	lwip/src/include/lwip/priv/tcpip_priv.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon468	typeref:struct:tcpip_msg::__anon468::__anon472
cbBegin	emwin/emWin_header/GUI_Type.h	/^  void (* cbBegin)(void);$/;"	m	struct:__anon251
cbBeginEx	emwin/emWin_header/GUI_Type.h	/^  void (* cbBeginEx)(int LayerIndex);$/;"	m	struct:__anon252
cbEnd	emwin/emWin_header/GUI_Type.h	/^  void (* cbEnd)  (void);$/;"	m	struct:__anon251
cbEndEx	emwin/emWin_header/GUI_Type.h	/^  void (* cbEndEx)  (int LayerIndex);$/;"	m	struct:__anon252
cbLength	usb/device/class/usb_device_msc.h	/^    uint8_t cbLength;            \/*!< Byte 14 bCBWCBLength*\/$/;"	m	struct:_usb_device_msc_cbw
cb_event	drivers/fsl_i2c_cmsis.c	/^    ARM_I2C_SignalEvent_t cb_event; \/*!< Callback function.     *\/$/;"	m	struct:_cmsis_i2c_interrupt_driver_state	file:
cb_event	drivers/fsl_spi_cmsis.c	/^    ARM_SPI_SignalEvent_t cb_event;$/;"	m	struct:_cmsis_spi_dma_driver_state	file:
cb_event	drivers/fsl_spi_cmsis.c	/^    ARM_SPI_SignalEvent_t cb_event;$/;"	m	struct:_cmsis_spi_interrupt_driver_state	file:
cbwPrimeFlag	usb/device/class/usb_device_msc.h	/^    uint8_t cbwPrimeFlag; \/*!< CBW prime flag, prime means device MSC has been ready to receive CBW, the bulk out$/;"	m	struct:_usb_device_msc_struct
cbwValidFlag	usb/device/class/usb_device_msc.h	/^    uint8_t cbwValidFlag; \/*!< The CBW was received after the device had sent a CSW or after a reset ,or else it is$/;"	m	struct:_usb_device_msc_struct
cbwcb	usb/device/class/usb_device_msc.h	/^    uint8_t *cbwcb;  \/*!< current ufi command block strored in the CBW*\/$/;"	m	struct:_usb_device_ufi_app_struct
cbwcb	usb/device/class/usb_device_msc.h	/^    uint8_t cbwcb[16];           \/*!< Byte 15-30 CBWCB, CBWCB is used to store UFI command*\/$/;"	m	struct:_usb_device_msc_cbw
cconj	codec2/comp_prim.h	/^inline static COMP cconj(COMP a)$/;"	f
ccount	lwip/src/include/netif/ppp/mppe.h	/^	u16_t ccount;               \/* 12-bit coherency count (seqno)  *\/$/;"	m	struct:ppp_mppe_state
ccp_ackci	lwip/src/netif/ppp/ccp.c	/^static int ccp_ackci(fsm *f, u_char *p, int len) {$/;"	f	file:
ccp_addci	lwip/src/netif/ppp/ccp.c	/^static void ccp_addci(fsm *f, u_char *p, int *lenp) {$/;"	f	file:
ccp_all_rejected	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int ccp_all_rejected        :1; \/* we rejected all peer's options *\/$/;"	m	struct:ppp_pcb_s
ccp_allowoptions	lwip/src/include/netif/ppp/ppp.h	/^  ccp_options ccp_allowoptions;  \/* what we'll agree to do *\/$/;"	m	struct:ppp_pcb_s
ccp_anycompress	lwip/src/netif/ppp/ccp.c	/^static int ccp_anycompress(ccp_options *opt) {$/;"	f	file:
ccp_callbacks	lwip/src/netif/ppp/ccp.c	/^static const fsm_callbacks ccp_callbacks = {$/;"	v	file:
ccp_cilen	lwip/src/netif/ppp/ccp.c	/^static int ccp_cilen(fsm *f) {$/;"	f	file:
ccp_close	lwip/src/netif/ppp/ccp.c	/^static void ccp_close(ppp_pcb *pcb, const char *reason) {$/;"	f	file:
ccp_codenames	lwip/src/netif/ppp/ccp.c	/^static const char* const ccp_codenames[] = {$/;"	v	file:
ccp_datainput	lwip/src/netif/ppp/ccp.c	/^static void ccp_datainput(ppp_pcb *pcb, u_char *pkt, int len) {$/;"	f	file:
ccp_down	lwip/src/netif/ppp/ccp.c	/^static void ccp_down(fsm *f) {$/;"	f	file:
ccp_extcode	lwip/src/netif/ppp/ccp.c	/^static int ccp_extcode(fsm *f, int code, int id, u_char *p, int len) {$/;"	f	file:
ccp_fsm	lwip/src/include/netif/ppp/ppp.h	/^  fsm ccp_fsm;                   \/* CCP fsm structure *\/$/;"	m	struct:ppp_pcb_s
ccp_gotoptions	lwip/src/include/netif/ppp/ppp.h	/^  ccp_options ccp_gotoptions;    \/* what the peer agreed to do *\/$/;"	m	struct:ppp_pcb_s
ccp_hisoptions	lwip/src/include/netif/ppp/ppp.h	/^  ccp_options ccp_hisoptions;    \/* what we agreed to do *\/$/;"	m	struct:ppp_pcb_s
ccp_init	lwip/src/netif/ppp/ccp.c	/^static void ccp_init(ppp_pcb *pcb) {$/;"	f	file:
ccp_input	lwip/src/netif/ppp/ccp.c	/^static void ccp_input(ppp_pcb *pcb, u_char *p, int len) {$/;"	f	file:
ccp_localstate	lwip/src/include/netif/ppp/ppp.h	/^  u8_t ccp_localstate;           \/* Local state (mainly for handling reset-reqs and reset-acks). *\/$/;"	m	struct:ppp_pcb_s
ccp_lowerdown	lwip/src/netif/ppp/ccp.c	/^static void ccp_lowerdown(ppp_pcb *pcb) {$/;"	f	file:
ccp_lowerup	lwip/src/netif/ppp/ccp.c	/^static void ccp_lowerup(ppp_pcb *pcb) {$/;"	f	file:
ccp_nakci	lwip/src/netif/ppp/ccp.c	/^static int ccp_nakci(fsm *f, u_char *p, int len, int treat_as_reject) {$/;"	f	file:
ccp_open	lwip/src/netif/ppp/ccp.c	/^static void ccp_open(ppp_pcb *pcb) {$/;"	f	file:
ccp_option_list	lwip/src/netif/ppp/ccp.c	/^static option_t ccp_option_list[] = {$/;"	v	file:
ccp_options	lwip/src/include/netif/ppp/ccp.h	/^typedef struct ccp_options {$/;"	s
ccp_options	lwip/src/include/netif/ppp/ccp.h	/^} ccp_options;$/;"	t	typeref:struct:ccp_options
ccp_printpkt	lwip/src/netif/ppp/ccp.c	/^static int ccp_printpkt(const u_char *p, int plen, void (*printer) (void *, const char *, ...), void *arg) {$/;"	f	file:
ccp_protent	lwip/src/netif/ppp/ccp.c	/^const struct protent ccp_protent = {$/;"	v	typeref:struct:protent
ccp_protrej	lwip/src/netif/ppp/ccp.c	/^static void ccp_protrej(ppp_pcb *pcb) {$/;"	f	file:
ccp_rack_timeout	lwip/src/netif/ppp/ccp.c	/^static void ccp_rack_timeout(void *arg) {$/;"	f	file:
ccp_receive_method	lwip/src/include/netif/ppp/ppp.h	/^  u8_t ccp_receive_method;       \/* Method chosen on receive path *\/$/;"	m	struct:ppp_pcb_s
ccp_rejci	lwip/src/netif/ppp/ccp.c	/^static int ccp_rejci(fsm *f, u_char *p, int len) {$/;"	f	file:
ccp_reqci	lwip/src/netif/ppp/ccp.c	/^static int ccp_reqci(fsm *f, u_char *p, int *lenp, int dont_nak) {$/;"	f	file:
ccp_reset_comp	lwip/src/netif/ppp/ppp.c	/^ccp_reset_comp(ppp_pcb *pcb)$/;"	f
ccp_reset_decomp	lwip/src/netif/ppp/ppp.c	/^ccp_reset_decomp(ppp_pcb *pcb)$/;"	f
ccp_resetci	lwip/src/netif/ppp/ccp.c	/^static void ccp_resetci(fsm *f) {$/;"	f	file:
ccp_resetrequest	lwip/src/netif/ppp/ccp.c	/^void ccp_resetrequest(ppp_pcb *pcb) {$/;"	f
ccp_set	lwip/src/netif/ppp/ppp.c	/^ccp_set(ppp_pcb *pcb, u8_t isopen, u8_t isup, u8_t receive_method, u8_t transmit_method)$/;"	f
ccp_transmit_method	lwip/src/include/netif/ppp/ppp.h	/^  u8_t ccp_transmit_method;      \/* Method chosen on transmit path *\/$/;"	m	struct:ppp_pcb_s
ccp_up	lwip/src/netif/ppp/ccp.c	/^static void ccp_up(fsm *f) {$/;"	f	file:
ccp_wantoptions	lwip/src/include/netif/ppp/ppp.h	/^  ccp_options ccp_wantoptions;   \/* what to request the peer to use *\/$/;"	m	struct:ppp_pcb_s
cdcAcmHandle	usb/device/class/usb_device_cdc_rndis.h	/^    class_handle_t cdcAcmHandle;          \/*!< USB CDC ACM class handle. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
cdcAcmHandle	vcom/virtual_com.h	/^    class_handle_t cdcAcmHandle; \/* USB CDC ACM class handle.                                                         *\/$/;"	m	struct:_usb_cdc_vcom_struct
cdcVcom	vcom/composite.h	/^    usb_cdc_vcom_struct_t cdcVcom[USB_DEVICE_CONFIG_CDC_ACM]; \/* CDC virtual com device structure. *\/$/;"	m	struct:_usb_device_composite_struct
cdns	lwip/src/netif/ppp/ppp.c	/^int cdns(ppp_pcb *pcb, u32_t ns1, u32_t ns2) {$/;"	f
cfg	littlefs/littlefs_include/lfs.h	/^    const struct lfs_config *cfg;$/;"	m	struct:lfs	typeref:struct:lfs::lfs_config
cflag	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int cflag                  :1;$/;"	m	struct:ipcp_options
challenge	lwip/src/include/netif/ppp/chap-new.h	/^	unsigned char challenge[CHAL_MAX_PKTLEN];$/;"	m	struct:chap_server_state
challenge_hash	lwip/src/include/netif/ppp/pppol2tp.h	/^  u8_t challenge_hash[16];     \/* Challenge response *\/$/;"	m	struct:pppol2tp_pcb_s
challenge_pktlen	lwip/src/include/netif/ppp/chap-new.h	/^	int challenge_pktlen;$/;"	m	struct:chap_server_state
challenge_xmits	lwip/src/include/netif/ppp/chap-new.h	/^	int challenge_xmits;$/;"	m	struct:chap_server_state
channel	drivers/fsl_dma.h	/^    uint8_t channel;       \/*!< DMA channel number *\/$/;"	m	struct:_dma_handle
chap_auth_peer	lwip/src/netif/ppp/chap-new.c	/^void chap_auth_peer(ppp_pcb *pcb, const char *our_name, int digest_code) {$/;"	f
chap_auth_with_peer	lwip/src/netif/ppp/chap-new.c	/^void chap_auth_with_peer(ppp_pcb *pcb, const char *our_name, int digest_code) {$/;"	f
chap_client	lwip/src/include/netif/ppp/ppp.h	/^  chap_client_state chap_client;  \/* CHAP client data *\/$/;"	m	struct:ppp_pcb_s
chap_client_state	lwip/src/include/netif/ppp/chap-new.h	/^typedef struct chap_client_state {$/;"	s
chap_client_state	lwip/src/include/netif/ppp/chap-new.h	/^} chap_client_state;$/;"	t	typeref:struct:chap_client_state
chap_code_names	lwip/src/netif/ppp/chap-new.c	/^static const char* const chap_code_names[] = {$/;"	v	file:
chap_digest_type	lwip/src/include/netif/ppp/chap-new.h	/^struct chap_digest_type {$/;"	s
chap_digests	lwip/src/netif/ppp/chap-new.c	/^static const struct chap_digest_type* const chap_digests[] = {$/;"	v	file:
chap_generate_challenge	lwip/src/netif/ppp/chap-new.c	/^static void chap_generate_challenge(ppp_pcb *pcb) {$/;"	f	file:
chap_handle_response	lwip/src/netif/ppp/chap-new.c	/^static void  chap_handle_response(ppp_pcb *pcb, int id,$/;"	f	file:
chap_handle_status	lwip/src/netif/ppp/chap-new.c	/^static void chap_handle_status(ppp_pcb *pcb, int code, int id,$/;"	f	file:
chap_init	lwip/src/netif/ppp/chap-new.c	/^static void chap_init(ppp_pcb *pcb) {$/;"	f	file:
chap_input	lwip/src/netif/ppp/chap-new.c	/^static void chap_input(ppp_pcb *pcb, unsigned char *pkt, int pktlen) {$/;"	f	file:
chap_lowerdown	lwip/src/netif/ppp/chap-new.c	/^static void chap_lowerdown(ppp_pcb *pcb) {$/;"	f	file:
chap_lowerup	lwip/src/netif/ppp/chap-new.c	/^static void chap_lowerup(ppp_pcb *pcb) {$/;"	f	file:
chap_max_transmits	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  chap_max_transmits;      \/* max # times to send challenge *\/$/;"	m	struct:ppp_settings_s
chap_md5_generate_challenge	lwip/src/netif/ppp/chap-md5.c	/^static void chap_md5_generate_challenge(ppp_pcb *pcb, unsigned char *cp) {$/;"	f	file:
chap_md5_make_response	lwip/src/netif/ppp/chap-md5.c	/^static void chap_md5_make_response(ppp_pcb *pcb, unsigned char *response, int id, const char *our_name,$/;"	f	file:
chap_md5_verify_response	lwip/src/netif/ppp/chap-md5.c	/^static int chap_md5_verify_response(ppp_pcb *pcb, int id, const char *name,$/;"	f	file:
chap_mdtype	lwip/src/include/netif/ppp/lcp.h	/^    u8_t chap_mdtype;		\/* which MD types (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_option_list	lwip/src/netif/ppp/chap-new.c	/^static option_t chap_option_list[] = {$/;"	v	file:
chap_print_pkt	lwip/src/netif/ppp/chap-new.c	/^static int chap_print_pkt(const unsigned char *p, int plen,$/;"	f	file:
chap_protent	lwip/src/netif/ppp/chap-new.c	/^const struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_protrej	lwip/src/netif/ppp/chap-new.c	/^static void chap_protrej(ppp_pcb *pcb) {$/;"	f	file:
chap_rechallenge_time	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  chap_rechallenge_time;   \/* Time to wait for auth-req from peer *\/$/;"	m	struct:ppp_settings_s
chap_respond	lwip/src/netif/ppp/chap-new.c	/^static void chap_respond(ppp_pcb *pcb, int id,$/;"	f	file:
chap_server	lwip/src/include/netif/ppp/ppp.h	/^  chap_server_state chap_server;  \/* CHAP server data *\/$/;"	m	struct:ppp_pcb_s
chap_server_state	lwip/src/include/netif/ppp/chap-new.h	/^typedef struct chap_server_state {$/;"	s
chap_server_state	lwip/src/include/netif/ppp/chap-new.h	/^} chap_server_state;$/;"	t	typeref:struct:chap_server_state
chap_timeout	lwip/src/netif/ppp/chap-new.c	/^static void chap_timeout(void *arg) {$/;"	f	file:
chap_timeout_time	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  chap_timeout_time;       \/* Timeout (seconds) for retransmitting req *\/$/;"	m	struct:ppp_settings_s
chap_verify_response	lwip/src/netif/ppp/chap-new.c	/^static int chap_verify_response(ppp_pcb *pcb, const char *name, const char *ourname, int id,$/;"	f	file:
chapms2_check_success	lwip/src/netif/ppp/chap_ms.c	/^static int chapms2_check_success(ppp_pcb *pcb, unsigned char *msg, int len, unsigned char *private_) {$/;"	f	file:
chapms2_digest	lwip/src/netif/ppp/chap_ms.c	/^const struct chap_digest_type chapms2_digest = {$/;"	v	typeref:struct:chap_digest_type
chapms2_generate_challenge	lwip/src/netif/ppp/chap_ms.c	/^static void chapms2_generate_challenge(ppp_pcb *pcb, unsigned char *challenge) {$/;"	f	file:
chapms2_make_response	lwip/src/netif/ppp/chap_ms.c	/^static void chapms2_make_response(ppp_pcb *pcb, unsigned char *response, int id, const char *our_name,$/;"	f	file:
chapms2_verify_response	lwip/src/netif/ppp/chap_ms.c	/^static int chapms2_verify_response(ppp_pcb *pcb, int id, const char *name,$/;"	f	file:
chapms_digest	lwip/src/netif/ppp/chap_ms.c	/^const struct chap_digest_type chapms_digest = {$/;"	v	typeref:struct:chap_digest_type
chapms_generate_challenge	lwip/src/netif/ppp/chap_ms.c	/^static void chapms_generate_challenge(ppp_pcb *pcb, unsigned char *challenge) {$/;"	f	file:
chapms_handle_failure	lwip/src/netif/ppp/chap_ms.c	/^static void chapms_handle_failure(ppp_pcb *pcb, unsigned char *inp, int len) {$/;"	f	file:
chapms_make_response	lwip/src/netif/ppp/chap_ms.c	/^static void chapms_make_response(ppp_pcb *pcb, unsigned char *response, int id, const char *our_name,$/;"	f	file:
chapms_option_list	lwip/src/netif/ppp/chap_ms.c	/^static option_t chapms_option_list[] = {$/;"	v	file:
chapms_verify_response	lwip/src/netif/ppp/chap_ms.c	/^static int chapms_verify_response(ppp_pcb *pcb, int id, const char *name,$/;"	f	file:
cheb_poly_eva	codec2/lsp.c	/^cheb_poly_eva(float *coef,float x,int order)$/;"	f	file:
check_idle	lwip/src/netif/ppp/auth.c	/^static void check_idle(void *arg) {$/;"	f	file:
check_lsp_order	codec2/quantise.c	/^int check_lsp_order(float lsp[], int order)$/;"	f
check_maxoctets	lwip/src/netif/ppp/auth.c	/^check_maxoctets(arg)$/;"	f	file:
check_options	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*check_options) (void);$/;"	m	struct:protent
check_success	lwip/src/include/netif/ppp/chap-new.h	/^	int (*check_success)(ppp_pcb *pcb, unsigned char *pkt, int len, unsigned char *priv);$/;"	m	struct:chap_digest_type
chipIndex	drivers/fsl_emc.h	/^    uint8_t chipIndex; \/*!< Chip Index, range from 0 ~ EMC_DYNAMIC_MEMDEV_NUM - 1. *\/$/;"	m	struct:_emc_dynamic_chip_config
chipIndex	drivers/fsl_emc.h	/^    uint8_t chipIndex;$/;"	m	struct:_emc_static_chip_config
chkerr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chksum	lwip/src/include/lwip/priv/tcp_priv.h	/^  u16_t chksum;$/;"	m	struct:tcp_seg
chksum_flags	lwip/src/include/lwip/netif.h	/^  u16_t chksum_flags;$/;"	m	struct:netif
chksum_len_rx	lwip/src/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	lwip/src/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_offset	lwip/src/include/lwip/raw.h	/^  u16_t chksum_offset;$/;"	m	struct:raw_pcb
chksum_reqd	lwip/src/include/lwip/raw.h	/^  u8_t  chksum_reqd;$/;"	m	struct:raw_pcb
chksum_swapped	lwip/src/include/lwip/priv/tcp_priv.h	/^  u8_t  chksum_swapped;$/;"	m	struct:tcp_seg
cif6addr	lwip/src/netif/ppp/ppp.c	/^int cif6addr(ppp_pcb *pcb, eui64_t our_eui64, eui64_t his_eui64) {$/;"	f
cifaddr	lwip/src/netif/ppp/ppp.c	/^int cifaddr(ppp_pcb *pcb, u32_t our_adr, u32_t his_adr) {$/;"	f
cilen	lwip/src/include/netif/ppp/fsm.h	/^    int  (*cilen)		\/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
classCallback	usb/device/class/usb_device_class.h	/^    usb_device_class_callback_t classCallback;  \/*!< Class callback function to handle the device status-related event$/;"	m	struct:_usb_device_class_config_struct
classCode	usb/device/class/usb_device_class.h	/^    uint8_t classCode;                        \/*!< Class code of the interface*\/$/;"	m	struct:_usb_device_interfaces_struct
classConfig	usb/device/class/usb_device_printer.h	/^    usb_device_class_config_struct_t *classConfig;  \/*!< The configuration of the class. *\/$/;"	m	struct:_usb_device_printer_struct
classDeinit	usb/device/class/usb_device_class.h	/^    usb_device_class_deinit_call_t classDeinit; \/*!< Class driver de-initialization*\/$/;"	m	struct:_usb_device_class_map
classEventCallback	usb/device/class/usb_device_class.h	/^    usb_device_class_event_callback_t classEventCallback; \/*!< Class driver event callback*\/$/;"	m	struct:_usb_device_class_map
classHandle	usb/device/class/usb_device_class.h	/^    class_handle_t classHandle;                 \/*!< The class handle of the class, filled by the common driver.*\/$/;"	m	struct:_usb_device_class_config_struct
classInfomation	usb/device/class/usb_device_class.h	/^    usb_device_class_struct_t *classInfomation; \/*!< Detailed information of the class*\/$/;"	m	struct:_usb_device_class_config_struct
classInit	usb/device/class/usb_device_class.h	/^    usb_device_class_init_call_t classInit;     \/*!< Class driver initialization- entry  of the class driver *\/$/;"	m	struct:_usb_device_class_map
classSpecific	usb/device/class/usb_device_class.h	/^    void *classSpecific;                     \/*!< Class specific structure handle*\/$/;"	m	struct:_usb_device_interface_struct
class_	lwip/src/include/netif/ppp/lcp.h	/^    unsigned char	class_; \/* -- The word "class" is reserved in C++. *\/$/;"	m	struct:epdisc
class_handle_t	usb/device/class/usb_device_class.h	22;"	d
client_data	lwip/src/include/lwip/netif.h	/^  void* client_data[LWIP_NETIF_CLIENT_DATA_INDEX_MAX + LWIP_NUM_NETIF_CLIENT_DATA];$/;"	m	struct:netif
clip_q31_to_q15	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15($/;"	f
clip_q31_to_q7	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7($/;"	f
clip_q63_to_q15	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15($/;"	f
clip_q63_to_q31	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31($/;"	f
clockMode	drivers/fsl_sctimer.h	/^    sctimer_clock_mode_t clockMode;     \/*!< SCT clock mode value *\/$/;"	m	struct:_sctimer_config
clockPolarity	drivers/fsl_usart.h	/^    usart_clock_polarity_t clockPolarity; \/*!< Selects the clock polarity and sampling edge in synchronous mode. *\/$/;"	m	struct:_usart_config
clockRate	component/serial_manager/serial_port_uart.h	/^    uint32_t clockRate;                             \/*!< clock rate  *\/$/;"	m	struct:_serial_port_uart_config
clockSelect	drivers/fsl_sctimer.h	/^    sctimer_clock_select_t clockSelect; \/*!< SCT clock select value *\/$/;"	m	struct:_sctimer_config
clockStatus	usb/device/class/usb_device_ccid.h	/^    uint8_t clockStatus; \/*!< The clock status *\/$/;"	m	struct:_usb_device_ccid_slot_status_struct
clock_attach_id_t	drivers/fsl_clock.h	/^} clock_attach_id_t;$/;"	t	typeref:enum:_clock_attach_id
clock_div_name_t	drivers/fsl_clock.h	/^} clock_div_name_t;$/;"	t	typeref:enum:_clock_div_name
clock_ip_name_t	drivers/fsl_clock.h	/^} clock_ip_name_t;$/;"	t	typeref:enum:_clock_ip_name
clock_name_t	drivers/fsl_clock.h	/^} clock_name_t;$/;"	t	typeref:enum:_clock_name
clock_offset	codec2/modem_stats.h	/^    float  clock_offset;                     \/* Estimated tx\/rx sample clock offset in ppm         *\/$/;"	m	struct:MODEM_STATS
clock_usb_src_t	drivers/fsl_clock.h	/^} clock_usb_src_t;$/;"	t	typeref:enum:_clock_usb_src
close	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_close_fn              close;$/;"	m	struct:altcp_functions
close	lwip/src/include/lwip/sockets.h	672;"	d
close	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*close) (ppp_pcb *pcb, const char *reason);$/;"	m	struct:protent
close	lwip/src/include/netif/ppp/pppapi.h	/^    } close;$/;"	m	union:pppapi_msg_msg::__anon435	typeref:struct:pppapi_msg_msg::__anon435::__anon441
closesocket	lwip/src/include/lwip/sockets.h	568;"	d
closesocket	lwip/src/include/lwip/sockets.h	628;"	d
clrtrig	drivers/fsl_dma.h	/^    bool clrtrig;           \/*!< Clear trigger *\/$/;"	m	struct:_dma_xfercfg
cls	lwip/src/core/dns.c	/^  u16_t cls;$/;"	m	struct:dns_answer	file:
cls	lwip/src/core/dns.c	/^  u16_t cls;$/;"	m	struct:dns_query	file:
cmap	codec2/c2wideband.h	/^    int cmap[C2WB_K * C2WB_NT];$/;"	m	struct:__anon133
cmd	lwip/src/include/netif/ppp/pppapi.h	/^      u8_t cmd;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon442
cmsg_len	lwip/src/include/lwip/sockets.h	/^  socklen_t  cmsg_len;   \/* number of bytes, including header *\/$/;"	m	struct:cmsghdr
cmsg_level	lwip/src/include/lwip/sockets.h	/^  int        cmsg_level; \/* originating protocol *\/$/;"	m	struct:cmsghdr
cmsg_type	lwip/src/include/lwip/sockets.h	/^  int        cmsg_type;  \/* protocol-specific type *\/$/;"	m	struct:cmsghdr
cmsghdr	lwip/src/include/lwip/sockets.h	/^struct cmsghdr {$/;"	s
cmsis_i2c_dma_driver_state_t	drivers/fsl_i2c_cmsis.c	/^} cmsis_i2c_dma_driver_state_t;$/;"	t	typeref:struct:_cmsis_i2c_dma_driver_state	file:
cmsis_i2c_dma_resource_t	drivers/fsl_i2c_cmsis.c	/^} cmsis_i2c_dma_resource_t;$/;"	t	typeref:struct:_cmsis_i2c_dma_resource	file:
cmsis_i2c_handle_t	drivers/fsl_i2c_cmsis.c	/^} cmsis_i2c_handle_t;$/;"	t	typeref:union:_cmsis_i2c_handle	file:
cmsis_i2c_interrupt_driver_state_t	drivers/fsl_i2c_cmsis.c	/^} cmsis_i2c_interrupt_driver_state_t;$/;"	t	typeref:struct:_cmsis_i2c_interrupt_driver_state	file:
cmsis_i2c_resource_t	drivers/fsl_i2c_cmsis.c	/^} cmsis_i2c_resource_t;$/;"	t	typeref:struct:_cmsis_i2c_resource	file:
cmsis_spi_dma_driver_state_t	drivers/fsl_spi_cmsis.c	/^} cmsis_spi_dma_driver_state_t;$/;"	t	typeref:struct:_cmsis_spi_dma_driver_state	file:
cmsis_spi_dma_handle_t	drivers/fsl_spi_cmsis.c	/^} cmsis_spi_dma_handle_t;$/;"	t	typeref:union:_cmsis_spi_dma_handle	file:
cmsis_spi_dma_resource_t	drivers/fsl_spi_cmsis.c	/^} cmsis_spi_dma_resource_t;$/;"	t	typeref:struct:_cmsis_spi_dma_resource	file:
cmsis_spi_handle_t	drivers/fsl_spi_cmsis.c	/^} cmsis_spi_handle_t;$/;"	t	typeref:union:_cmsis_spi_handle	file:
cmsis_spi_interrupt_driver_state_t	drivers/fsl_spi_cmsis.c	/^} cmsis_spi_interrupt_driver_state_t;$/;"	t	typeref:struct:_cmsis_spi_interrupt_driver_state	file:
cmsis_spi_resource_t	drivers/fsl_spi_cmsis.c	/^} cmsis_spi_resource_t;$/;"	t	typeref:struct:_cmsis_spi_resource	file:
cmult	codec2/comp_prim.h	/^inline static COMP cmult(COMP a, COMP b)$/;"	f
cneg	codec2/comp_prim.h	/^inline static COMP cneg(COMP a)$/;"	f
coarse_foff_est_hz	codec2/ofdm_internal.h	/^    float coarse_foff_est_hz;$/;"	m	struct:OFDM
code	lwip/src/include/netif/ppp/chap-new.h	/^	int code;$/;"	m	struct:chap_digest_type
code	usb/device/source/usb_device_dci.h	/^    uint8_t code;    \/*!< Notification code *\/$/;"	m	struct:_usb_device_callback_message_struct
code_num	codec2/varicode.h	/^    int            code_num;$/;"	m	struct:VARICODE_DEC
codec2_bits_per_frame	codec2/codec2.c	/^int codec2_bits_per_frame(struct CODEC2 *c2) {$/;"	f
codec2_create	codec2/codec2.c	/^struct CODEC2 * codec2_create(int mode)$/;"	f
codec2_decode	codec2/codec2.c	/^void codec2_decode(struct CODEC2 *c2, short speech[], const unsigned char *bits)$/;"	f
codec2_decode_2400	codec2/codec2.c	/^void codec2_decode_2400(struct CODEC2 *c2, short speech[], const unsigned char * bits)$/;"	f
codec2_decode_ber	codec2/codec2.c	/^void codec2_decode_ber(struct CODEC2 *c2, short speech[], const unsigned char *bits, float ber_est)$/;"	f
codec2_destroy	codec2/codec2.c	/^void codec2_destroy(struct CODEC2 *c2)$/;"	f
codec2_encode	codec2/codec2.c	/^void codec2_encode(struct CODEC2 *c2, unsigned char *bits, short speech[])$/;"	f
codec2_encode_2400	codec2/codec2.c	/^void codec2_encode_2400(struct CODEC2 *c2, unsigned char * bits, short speech[])$/;"	f
codec2_fft	codec2/codec2_fft.h	/^static inline void codec2_fft(codec2_fft_cfg cfg, codec2_fft_cpx* in, codec2_fft_cpx* out)$/;"	f
codec2_fft_alloc	codec2/codec2_fft.c	/^codec2_fft_cfg codec2_fft_alloc(int nfft, int inverse_fft, void* mem, size_t* lenmem)$/;"	f
codec2_fft_cfg	codec2/codec2_fft.h	/^    typedef kiss_fft_cfg codec2_fft_cfg;$/;"	t
codec2_fft_cfg	codec2/codec2_fft.h	/^  typedef codec2_fft_struct* codec2_fft_cfg;$/;"	t
codec2_fft_cpx	codec2/codec2_fft.h	/^typedef COMP    codec2_fft_cpx;$/;"	t
codec2_fft_free	codec2/codec2_fft.c	/^void codec2_fft_free(codec2_fft_cfg cfg)$/;"	f
codec2_fft_inplace	codec2/codec2_fft.c	/^void codec2_fft_inplace(codec2_fft_cfg cfg, codec2_fft_cpx* inout)$/;"	f
codec2_fft_scalar	codec2/codec2_fft.h	/^    typedef kiss_fft_scalar codec2_fft_scalar;$/;"	t
codec2_fft_scalar	codec2/codec2_fft.h	/^  typedef float32_t codec2_fft_scalar;$/;"	t
codec2_fft_struct	codec2/codec2_fft.h	/^    } codec2_fft_struct;$/;"	t	typeref:struct:__anon137
codec2_fftr	codec2/codec2_fft.h	/^static inline void codec2_fftr(codec2_fftr_cfg cfg, codec2_fft_scalar* in, codec2_fft_cpx* out)$/;"	f
codec2_fftr_alloc	codec2/codec2_fft.c	/^codec2_fftr_cfg codec2_fftr_alloc(int nfft, int inverse_fft, void* mem, size_t* lenmem)$/;"	f
codec2_fftr_cfg	codec2/codec2_fft.h	/^    typedef kiss_fftr_cfg codec2_fftr_cfg;$/;"	t
codec2_fftr_cfg	codec2/codec2_fft.h	/^  typedef codec2_fftr_struct* codec2_fftr_cfg;$/;"	t
codec2_fftr_free	codec2/codec2_fft.c	/^void codec2_fftr_free(codec2_fftr_cfg cfg)$/;"	f
codec2_fftr_struct	codec2/codec2_fft.h	/^  } codec2_fftr_struct;$/;"	t	typeref:struct:__anon136
codec2_fftri	codec2/codec2_fft.h	/^static inline void codec2_fftri(codec2_fftr_cfg cfg, codec2_fft_cpx* in, codec2_fft_scalar* out)$/;"	f
codec2_get_energy	codec2/codec2.c	/^float codec2_get_energy(struct CODEC2 *c2, const unsigned char *bits)$/;"	f
codec2_get_spare_bit_index	codec2/codec2.c	/^int codec2_get_spare_bit_index(struct CODEC2 *c2)$/;"	f
codec2_rand	codec2/sine.c	/^int codec2_rand(void) {$/;"	f
codec2_rebuild_spare_bit	codec2/codec2.c	/^int codec2_rebuild_spare_bit(struct CODEC2 *c2, int unpacked_bits[])$/;"	f
codec2_samples_per_frame	codec2/codec2.c	/^int codec2_samples_per_frame(struct CODEC2 *c2) {$/;"	f
codec2_set_lpc_post_filter	codec2/codec2.c	/^void codec2_set_lpc_post_filter(struct CODEC2 *c2, int enable, int bass_boost, float beta, float gamma)$/;"	f
codec2_set_natural_or_gray	codec2/codec2.c	/^void codec2_set_natural_or_gray(struct CODEC2 *c2, int gray)$/;"	f
codec2_set_softdec	codec2/codec2.c	/^void codec2_set_softdec(struct CODEC2 *c2, float *softdec)$/;"	f
codecCapability	codec/fsl_codec_common.h	/^    codec_capability_t codecCapability; \/*!< codec capability *\/$/;"	m	struct:codec_handle
codecConfig	codec/fsl_codec_common.h	/^    codec_config_t *codecConfig;        \/*!< codec configuration function pointer *\/$/;"	m	struct:codec_handle
codecDevConfig	codec/fsl_codec_common.h	/^    void *codecDevConfig;  \/*!< Codec device specific configuration *\/$/;"	m	struct:_codec_config
codecDevHandle	codec/fsl_codec_common.h	/^    void *codecDevHandle;               \/*!< codec device handle *\/$/;"	m	struct:codec_handle
codecDevType	codec/fsl_codec_common.h	/^    uint32_t codecDevType; \/*!< codec type *\/$/;"	m	struct:_codec_config
codecHandle	source/i2s_transfer.c	/^codec_handle_t *codecHandle = (codec_handle_t *) codecHandleBuffer;$/;"	v
codecHandleBuffer	source/i2s_transfer.c	/^uint8_t codecHandleBuffer[CODEC_HANDLE_SIZE] = { 0U };$/;"	v
codecI2CInstance	codec/fsl_codec_i2c.h	/^    uint32_t codecI2CInstance;    \/*!< i2c bus instance *\/$/;"	m	struct:_codec_i2c_config
codecI2CSourceClock	codec/fsl_codec_i2c.h	/^    uint32_t codecI2CSourceClock; \/*!< i2c bus source clock frequency *\/$/;"	m	struct:_codec_i2c_config
codecModuleCapability	codec/fsl_codec_common.h	/^    uint32_t codecModuleCapability; \/*!< codec module capability *\/$/;"	m	struct:_codec_capability
codecPlayCapability	codec/fsl_codec_common.h	/^    uint32_t codecPlayCapability;   \/*!< codec play capability *\/$/;"	m	struct:_codec_capability
codecRecordCapability	codec/fsl_codec_common.h	/^    uint32_t codecRecordCapability; \/*!< codec record capability *\/$/;"	m	struct:_codec_capability
codec_audio_protocol_t	codec/fsl_codec_common.h	/^} codec_audio_protocol_t;$/;"	t	typeref:enum:_codec_audio_protocol
codec_capability_t	codec/fsl_codec_common.h	/^} codec_capability_t;$/;"	t	typeref:struct:_codec_capability
codec_config_t	codec/fsl_codec_common.h	/^} codec_config_t;$/;"	t	typeref:struct:_codec_config
codec_handle	codec/fsl_codec_common.h	/^struct codec_handle$/;"	s
codec_handle_t	codec/fsl_codec_common.h	/^typedef struct codec_handle codec_handle_t;$/;"	t	typeref:struct:codec_handle
codec_i2c_config_t	codec/fsl_codec_i2c.h	/^} codec_i2c_config_t;$/;"	t	typeref:struct:_codec_i2c_config
codec_module_ctrl_cmd_t	codec/fsl_codec_common.h	/^} codec_module_ctrl_cmd_t;$/;"	t	typeref:enum:_codec_module_ctrl_cmd
codec_module_t	codec/fsl_codec_common.h	/^} codec_module_t;$/;"	t	typeref:enum:_codec_module
codec_reg_addr_t	codec/fsl_codec_i2c.h	/^} codec_reg_addr_t;$/;"	t	typeref:enum:_codec_reg_addr
codec_reg_width_t	codec/fsl_codec_i2c.h	/^} codec_reg_width_t;$/;"	t	typeref:enum:_codec_reg_width
coded_bits_per_frame	codec2/mpdecode_core.h	/^    int coded_bits_per_frame;$/;"	m	struct:LDPC
coded_syms_per_frame	codec2/mpdecode_core.h	/^    int coded_syms_per_frame;$/;"	m	struct:LDPC
codes0	codec2/codebook.c	/^static const float codes0[] = {$/;"	v	file:
codes0	codec2/codebookd.c	/^static const float codes0[] = {$/;"	v	file:
codes0	codec2/codebookge.c	/^static const float codes0[] = {$/;"	v	file:
codes0	codec2/codebookjvm.c	/^static const float codes0[] = {$/;"	v	file:
codes1	codec2/codebook.c	/^static const float codes1[] = {$/;"	v	file:
codes1	codec2/codebookd.c	/^static const float codes1[] = {$/;"	v	file:
codes1	codec2/codebookjvm.c	/^static const float codes1[] = {$/;"	v	file:
codes2	codec2/codebook.c	/^static const float codes2[] = {$/;"	v	file:
codes2	codec2/codebookd.c	/^static const float codes2[] = {$/;"	v	file:
codes2	codec2/codebookjvm.c	/^static const float codes2[] = {$/;"	v	file:
codes3	codec2/codebook.c	/^static const float codes3[] = {$/;"	v	file:
codes3	codec2/codebookd.c	/^static const float codes3[] = {$/;"	v	file:
codes4	codec2/codebook.c	/^static const float codes4[] = {$/;"	v	file:
codes4	codec2/codebookd.c	/^static const float codes4[] = {$/;"	v	file:
codes5	codec2/codebook.c	/^static const float codes5[] = {$/;"	v	file:
codes5	codec2/codebookd.c	/^static const float codes5[] = {$/;"	v	file:
codes6	codec2/codebook.c	/^static const float codes6[] = {$/;"	v	file:
codes6	codec2/codebookd.c	/^static const float codes6[] = {$/;"	v	file:
codes7	codec2/codebook.c	/^static const float codes7[] = {$/;"	v	file:
codes7	codec2/codebookd.c	/^static const float codes7[] = {$/;"	v	file:
codes8	codec2/codebook.c	/^static const float codes8[] = {$/;"	v	file:
codes8	codec2/codebookd.c	/^static const float codes8[] = {$/;"	v	file:
codes9	codec2/codebook.c	/^static const float codes9[] = {$/;"	v	file:
codes9	codec2/codebookd.c	/^static const float codes9[] = {$/;"	v	file:
commInterfaceHandle	usb/device/class/usb_device_cdc_acm.h	/^    usb_device_interface_struct_t *commInterfaceHandle; \/*!< The CDC communication interface handle. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
commandBuffer	usb/device/class/usb_device_ccid.h	/^    uint8_t *commandBuffer;  \/*!< The buffer address kept the command from host *\/$/;"	m	struct:_usb_device_ccid_command_struct
commandBuffer	usb/device/class/usb_device_ccid.h	/^    uint8_t commandBuffer[USB_DEVICE_CCID_BUFFER_4BYTE_ALIGN($/;"	m	struct:_usb_device_ccid_struct
commandLength	usb/device/class/usb_device_ccid.h	/^    uint32_t commandLength;  \/*!< The command length from host *\/$/;"	m	struct:_usb_device_ccid_command_struct
common	lwip/src/include/lwip/priv/api_msg.h	/^    } common;$/;"	m	union:netifapi_msg::__anon463	typeref:struct:netifapi_msg::__anon463::__anon465
common	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_parameters_response_t common; \/*!< Response ICC parameter common structure *\/$/;"	m	union:_usb_device_ccid_parameters_response_common
common	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_set_parameters_command_t common; \/*!< Set ICC parameter common structure *\/$/;"	m	union:_usb_device_ccid_set_parameters_command_common
common	usb/include/usb_spec.h	/^    usb_descriptor_common_t common;               \/* Common descriptor *\/$/;"	m	union:_usb_descriptor_union
commonDescriptor	usb/device/class/usb_device_class.h	/^    usb_device_get_descriptor_common_struct_t commonDescriptor; \/*!< Common structure. *\/$/;"	m	union:_usb_device_get_descriptor_common_union
commontaskMsg	component/serial_manager/serial_manager.c	/^    common_task_message_t commontaskMsg;$/;"	m	struct:_serial_manager_handle	file:
comp0	codec2/comp_prim.h	/^inline static COMP comp0(){$/;"	f
comp_bytes	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int comp_bytes;	\/* compressed bytes *\/$/;"	m	struct:compstat
comp_exp_j	codec2/comp_prim.h	/^inline static COMP comp_exp_j(float phi){$/;"	f
comp_mag_gt	codec2/comp_prim.h	/^inline static int comp_mag_gt(COMP a,COMP b){$/;"	f
comp_normalize	codec2/comp_prim.h	/^inline static COMP comp_normalize(COMP a){$/;"	f
comp_packets	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int comp_packets;	\/* compressed packets *\/$/;"	m	struct:compstat
compensation_t	drivers/fsl_dmic.h	/^} compensation_t;$/;"	t	typeref:enum:_compensation
completedWriteHandleHead	component/serial_manager/serial_manager.c	/^    list_t completedWriteHandleHead; \/*!< The queue of completed write handle *\/$/;"	m	struct:_serial_manager_handle	file:
completed_sem	lwip/src/include/lwip/priv/sockets_priv.h	/^  void* completed_sem;$/;"	m	struct:lwip_setgetsockopt_data
completionCallback	drivers/fsl_i2c.h	/^    i2c_master_transfer_callback_t completionCallback; \/*!< Callback function pointer. *\/$/;"	m	struct:_i2c_master_handle
completionCallback	drivers/fsl_i2c_dma.h	/^    i2c_master_dma_transfer_callback_t completionCallback; \/*!< Callback function called after dma transfer finished. *\/$/;"	m	struct:_i2c_master_dma_handle
completionCallback	drivers/fsl_i2s.h	/^    i2s_transfer_callback_t completionCallback; \/*!< Callback function pointer *\/$/;"	m	struct:_i2s_handle
completionCallback	drivers/fsl_i2s_dma.h	/^    i2s_dma_transfer_callback_t completionCallback;    \/*!< Callback function pointer *\/$/;"	m	struct:_i2s_dma_handle
completionStatus	component/i2c/i2c.h	/^    hal_i2c_status_t completionStatus;    \/*!< Success or error code describing how the transfer completed. Only applies$/;"	m	struct:_hal_i2c_slave_transfer
completionStatus	drivers/fsl_i2c.h	/^    status_t completionStatus;        \/*!< Success or error code describing how the transfer completed. Only applies for$/;"	m	struct:_i2c_slave_transfer
compressSlot	lwip/src/include/netif/ppp/vj.h	/^  u8_t compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
compstat	lwip/src/include/netif/ppp/ppp_impl.h	/^struct compstat {$/;"	s
compute_weights	codec2/quantise.c	/^void compute_weights(const float *x, float *w, int ndim)$/;"	f
compute_weights2	codec2/quantise.c	/^void compute_weights2(const float *x, const float *xp, float *w)$/;"	f
compute_weights_anssi_mode2	codec2/quantise.c	/^void compute_weights_anssi_mode2(const float *x, float *w, int ndim)$/;"	f
concentrator_name	lwip/src/include/netif/ppp/pppapi.h	/^      const char *concentrator_name;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon438
config	codec/fsl_wm8904.h	/^    wm8904_config_t *config; \/*!< wm8904 config pointer *\/$/;"	m	struct:_wm8904_handle
config	codec2/ofdm_internal.h	/^    struct OFDM_CONFIG config;$/;"	m	struct:OFDM	typeref:struct:OFDM::OFDM_CONFIG
config	usb/device/class/usb_device_class.h	/^    usb_device_class_config_struct_t *config; \/*!< Array of class configuration structures *\/$/;"	m	struct:_usb_device_class_config_list_struct
configADJUSTED_HEAP_SIZE	amazon-freertos/freertos/portable/heap_1.c	53;"	d	file:
configADJUSTED_HEAP_SIZE	amazon-freertos/freertos/portable/heap_2.c	54;"	d	file:
configAPPLICATION_ALLOCATED_HEAP	amazon-freertos/include/FreeRTOS.h	806;"	d
configAPPLICATION_ALLOCATED_HEAP	source/FreeRTOSConfig.h	75;"	d
configASSERT	amazon-freertos/include/FreeRTOS.h	238;"	d
configASSERT	source/FreeRTOSConfig.h	100;"	d
configASSERT_DEFINED	amazon-freertos/include/FreeRTOS.h	239;"	d
configASSERT_DEFINED	amazon-freertos/include/FreeRTOS.h	241;"	d
configCHECK_FOR_STACK_OVERFLOW	amazon-freertos/include/FreeRTOS.h	378;"	d
configCHECK_FOR_STACK_OVERFLOW	source/FreeRTOSConfig.h	80;"	d
configCPU_CLOCK_HZ	source/FreeRTOSConfig.h	46;"	d
configENABLE_BACKWARD_COMPATIBILITY	amazon-freertos/include/FreeRTOS.h	883;"	d
configENABLE_BACKWARD_COMPATIBILITY	source/FreeRTOSConfig.h	62;"	d
configENABLE_FPU	amazon-freertos/include/FreeRTOS.h	966;"	d
configENABLE_FPU	source/FreeRTOSConfig.h	41;"	d
configENABLE_MPU	amazon-freertos/include/FreeRTOS.h	960;"	d
configENABLE_MPU	source/FreeRTOSConfig.h	40;"	d
configENABLE_TRUSTZONE	amazon-freertos/include/FreeRTOS.h	972;"	d
configENABLE_TRUSTZONE	source/FreeRTOSConfig.h	42;"	d
configEXPECTED_IDLE_TIME_BEFORE_SLEEP	amazon-freertos/include/FreeRTOS.h	734;"	d
configFRTOS_MEMORY_SCHEME	amazon-freertos/include/freertos_tasks_c_additions.h	50;"	d
configFRTOS_MEMORY_SCHEME	source/FreeRTOSConfig.h	67;"	d
configFlags	drivers/fsl_spi.h	/^    uint32_t configFlags;       \/*!< Transfer configuration flags, @ref spi_xfer_option_t. *\/$/;"	m	struct:_spi_half_duplex_transfer
configFlags	drivers/fsl_spi.h	/^    uint32_t configFlags; \/*!< Additional option to control transfer *\/$/;"	m	struct:_spi_master_handle
configFlags	drivers/fsl_spi.h	/^    uint32_t configFlags; \/*!< Additional option to control transfer, @ref spi_xfer_option_t. *\/$/;"	m	struct:_spi_transfer
configGENERATE_RUN_TIME_STATS	amazon-freertos/include/FreeRTOS.h	696;"	d
configGENERATE_RUN_TIME_STATS	source/FreeRTOSConfig.h	85;"	d
configIDLE_SHOULD_YIELD	amazon-freertos/include/FreeRTOS.h	230;"	d
configIDLE_SHOULD_YIELD	source/FreeRTOSConfig.h	52;"	d
configIDLE_TASK_NAME	amazon-freertos/freertos/tasks.c	112;"	d	file:
configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS	amazon-freertos/include/FreeRTOS.h	774;"	d
configINCLUDE_FREERTOS_TASK_C_ADDITIONS_H	amazon-freertos/include/FreeRTOS.h	386;"	d
configINCLUDE_FREERTOS_TASK_C_ADDITIONS_H	source/FreeRTOSConfig.h	69;"	d
configINITIAL_TICK_COUNT	amazon-freertos/include/FreeRTOS.h	860;"	d
configIndex	usb/device/class/usb_device_printer.h	/^    uint8_t configIndex;      \/*!< GET_DEVICE_ID request config index *\/$/;"	m	struct:_usb_device_printer_class_request
configKERNEL_INTERRUPT_PRIORITY	source/FreeRTOSConfig.h	142;"	d
configLIBRARY_LOWEST_INTERRUPT_PRIORITY	source/FreeRTOSConfig.h	132;"	d
configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY	source/FreeRTOSConfig.h	138;"	d
configLIST_VOLATILE	amazon-freertos/include/list.h	92;"	d
configList	usb/device/class/usb_device_class.h	/^    usb_device_class_config_list_struct_t *configList; \/*!< USB device configure list*\/$/;"	m	struct:_usb_device_common_class_struct
configMAX	amazon-freertos/include/FreeRTOS.h	903;"	d
configMAX_CO_ROUTINE_PRIORITIES	source/FreeRTOSConfig.h	91;"	d
configMAX_PRIORITIES	source/FreeRTOSConfig.h	48;"	d
configMAX_SYSCALL_INTERRUPT_PRIORITY	source/FreeRTOSConfig.h	145;"	d
configMAX_TASK_NAME_LEN	amazon-freertos/include/FreeRTOS.h	226;"	d
configMAX_TASK_NAME_LEN	source/FreeRTOSConfig.h	50;"	d
configMESSAGE_BUFFER_LENGTH_TYPE	amazon-freertos/include/FreeRTOS.h	841;"	d
configMIN	amazon-freertos/include/FreeRTOS.h	909;"	d
configMINIMAL_STACK_SIZE	source/FreeRTOSConfig.h	49;"	d
configNUM_THREAD_LOCAL_STORAGE_POINTERS	amazon-freertos/include/FreeRTOS.h	198;"	d
configNUM_THREAD_LOCAL_STORAGE_POINTERS	source/FreeRTOSConfig.h	63;"	d
configPOST_SLEEP_PROCESSING	amazon-freertos/include/FreeRTOS.h	754;"	d
configPRE_SLEEP_PROCESSING	amazon-freertos/include/FreeRTOS.h	750;"	d
configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING	amazon-freertos/include/FreeRTOS.h	746;"	d
configPRINTF	amazon-freertos/include/FreeRTOS.h	897;"	d
configPRIO_BITS	source/FreeRTOSConfig.h	125;"	d
configPRIO_BITS	source/FreeRTOSConfig.h	127;"	d
configQUEUE_REGISTRY_SIZE	amazon-freertos/include/FreeRTOS.h	282;"	d
configQUEUE_REGISTRY_SIZE	source/FreeRTOSConfig.h	58;"	d
configRECORD_STACK_HIGH_ADDRESS	amazon-freertos/include/FreeRTOS.h	382;"	d
configRUN_FREERTOS_SECURE_ONLY	amazon-freertos/include/FreeRTOS.h	978;"	d
configSTACK_DEPTH_TYPE	amazon-freertos/include/FreeRTOS.h	834;"	d
configSUPPORT_DYNAMIC_ALLOCATION	amazon-freertos/include/FreeRTOS.h	828;"	d
configSUPPORT_DYNAMIC_ALLOCATION	source/FreeRTOSConfig.h	73;"	d
configSUPPORT_STATIC_ALLOCATION	amazon-freertos/include/FreeRTOS.h	823;"	d
configSUPPORT_STATIC_ALLOCATION	source/FreeRTOSConfig.h	72;"	d
configSYSTICK_CLOCK_HZ	amazon-freertos/freertos/portable/port.c	43;"	d	file:
configStruct	usb/device/class/usb_device_audio.h	/^    usb_device_class_config_struct_t *configStruct;        \/*!< The configuration of the class. *\/$/;"	m	struct:_usb_device_audio_struct
configStruct	usb/device/class/usb_device_ccid.h	/^    usb_device_class_config_struct_t *configStruct;  \/*!< The configuration of the class. *\/$/;"	m	struct:_usb_device_ccid_struct
configStruct	usb/device/class/usb_device_cdc_acm.h	/^    usb_device_class_config_struct_t *configStruct;     \/*!< The class configure structure. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
configStruct	usb/device/class/usb_device_hid.h	/^    usb_device_class_config_struct_t *configStruct; \/*!< The configuration of the class. *\/$/;"	m	struct:_usb_device_hid_struct
configStruct	usb/device/class/usb_device_phdc.h	/^    usb_device_class_config_struct_t *configStruct; \/*!< The configuration of the class. *\/$/;"	m	struct:_usb_device_phdc_struct
configStruct	usb/device/class/usb_device_video.h	/^    usb_device_class_config_struct_t *configStruct;        \/*!< The configuration of the class. *\/$/;"	m	struct:_usb_device_video_struct
configTICK_RATE_HZ	source/FreeRTOSConfig.h	47;"	d
configTIMER_QUEUE_LENGTH	source/FreeRTOSConfig.h	96;"	d
configTIMER_SERVICE_TASK_NAME	amazon-freertos/freertos/timers.c	64;"	d	file:
configTIMER_TASK_PRIORITY	source/FreeRTOSConfig.h	95;"	d
configTIMER_TASK_STACK_DEPTH	source/FreeRTOSConfig.h	97;"	d
configTOTAL_HEAP_SIZE	source/FreeRTOSConfig.h	74;"	d
configUSE_16_BIT_TICKS	source/FreeRTOSConfig.h	51;"	d
configUSE_ALTERNATIVE_API	amazon-freertos/include/FreeRTOS.h	218;"	d
configUSE_ALTERNATIVE_API	source/FreeRTOSConfig.h	57;"	d
configUSE_APPLICATION_TASK_TAG	amazon-freertos/include/FreeRTOS.h	194;"	d
configUSE_APPLICATION_TASK_TAG	source/FreeRTOSConfig.h	64;"	d
configUSE_COUNTING_SEMAPHORES	amazon-freertos/include/FreeRTOS.h	214;"	d
configUSE_COUNTING_SEMAPHORES	source/FreeRTOSConfig.h	56;"	d
configUSE_CO_ROUTINES	amazon-freertos/include/FreeRTOS.h	108;"	d
configUSE_CO_ROUTINES	source/FreeRTOSConfig.h	90;"	d
configUSE_DAEMON_TASK_STARTUP_HOOK	amazon-freertos/include/FreeRTOS.h	190;"	d
configUSE_DAEMON_TASK_STARTUP_HOOK	source/FreeRTOSConfig.h	82;"	d
configUSE_IDLE_HOOK	source/FreeRTOSConfig.h	78;"	d
configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES	amazon-freertos/include/projdefs.h	59;"	d
configUSE_MALLOC_FAILED_HOOK	amazon-freertos/include/FreeRTOS.h	718;"	d
configUSE_MALLOC_FAILED_HOOK	source/FreeRTOSConfig.h	81;"	d
configUSE_MUTEXES	amazon-freertos/include/FreeRTOS.h	206;"	d
configUSE_MUTEXES	source/FreeRTOSConfig.h	54;"	d
configUSE_NEWLIB_REENTRANT	amazon-freertos/include/FreeRTOS.h	66;"	d
configUSE_NEWLIB_REENTRANT	source/FreeRTOSConfig.h	61;"	d
configUSE_PORT_OPTIMISED_TASK_SELECTION	amazon-freertos/freertos/portable/portmacro.h	124;"	d
configUSE_PORT_OPTIMISED_TASK_SELECTION	amazon-freertos/include/FreeRTOS.h	802;"	d
configUSE_POSIX_ERRNO	amazon-freertos/include/FreeRTOS.h	814;"	d
configUSE_PREEMPTION	source/FreeRTOSConfig.h	44;"	d
configUSE_QUEUE_SETS	amazon-freertos/include/FreeRTOS.h	758;"	d
configUSE_QUEUE_SETS	source/FreeRTOSConfig.h	59;"	d
configUSE_RECURSIVE_MUTEXES	amazon-freertos/include/FreeRTOS.h	202;"	d
configUSE_RECURSIVE_MUTEXES	source/FreeRTOSConfig.h	55;"	d
configUSE_STATS_FORMATTING_FUNCTIONS	amazon-freertos/include/FreeRTOS.h	778;"	d
configUSE_STATS_FORMATTING_FUNCTIONS	source/FreeRTOSConfig.h	87;"	d
configUSE_TASK_FPU_SUPPORT	amazon-freertos/include/FreeRTOS.h	954;"	d
configUSE_TASK_NOTIFICATIONS	amazon-freertos/include/FreeRTOS.h	810;"	d
configUSE_TASK_NOTIFICATIONS	source/FreeRTOSConfig.h	53;"	d
configUSE_TICKLESS_IDLE	amazon-freertos/include/FreeRTOS.h	742;"	d
configUSE_TICKLESS_IDLE	source/FreeRTOSConfig.h	45;"	d
configUSE_TICK_HOOK	source/FreeRTOSConfig.h	79;"	d
configUSE_TIMERS	amazon-freertos/include/FreeRTOS.h	210;"	d
configUSE_TIMERS	source/FreeRTOSConfig.h	94;"	d
configUSE_TIME_SLICING	amazon-freertos/include/FreeRTOS.h	770;"	d
configUSE_TIME_SLICING	source/FreeRTOSConfig.h	60;"	d
configUSE_TRACE_FACILITY	amazon-freertos/include/FreeRTOS.h	786;"	d
configUSE_TRACE_FACILITY	source/FreeRTOSConfig.h	86;"	d
config_gpio_input	source/main.c	/^gpio_pin_config_t config_gpio_input = { kGPIO_DigitalInput, 0, };$/;"	v
config_gpio_output	source/main.c	/^gpio_pin_config_t config_gpio_output = { kGPIO_DigitalOutput, 0, };$/;"	v
configuration	usb/device/class/usb_device_audio.h	/^    uint8_t configuration;                                 \/*!< Current configuration *\/$/;"	m	struct:_usb_device_audio_struct
configuration	usb/device/class/usb_device_ccid.h	/^    uint8_t configuration;       \/*!< Current configuration *\/$/;"	m	struct:_usb_device_ccid_struct
configuration	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t configuration;                 \/*!< The current configuration value. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
configuration	usb/device/class/usb_device_class.h	/^    uint8_t configuration; \/*!< The configuration number. *\/$/;"	m	struct:_usb_device_get_configuration_descriptor_struct
configuration	usb/device/class/usb_device_hid.h	/^    uint8_t configuration;                          \/*!< Current configuration *\/$/;"	m	struct:_usb_device_hid_struct
configuration	usb/device/class/usb_device_msc.h	/^    uint8_t configuration;           \/*!< Current configuration *\/$/;"	m	struct:_usb_device_msc_struct
configuration	usb/device/class/usb_device_phdc.h	/^    uint8_t configuration;                          \/*!< Current configuration *\/$/;"	m	struct:_usb_device_phdc_struct
configuration	usb/device/class/usb_device_printer.h	/^    uint8_t configuration;                          \/*!< Current configuration *\/$/;"	m	struct:_usb_device_printer_struct
configuration	usb/device/class/usb_device_video.h	/^    uint8_t configuration;                                 \/*!< Current configuration *\/$/;"	m	struct:_usb_device_video_struct
configuration	usb/include/usb_spec.h	/^    usb_descriptor_configuration_t configuration; \/* Configuration descriptor *\/$/;"	m	union:_usb_descriptor_union
configurationDescriptor	usb/device/class/usb_device_class.h	/^        configurationDescriptor;                                \/*!< The structure to get configuration descriptor. *\/$/;"	m	union:_usb_device_get_descriptor_common_union
configurationStruct	usb/device/class/usb_device_msc.h	/^    usb_device_class_config_struct_t *configurationStruct; \/*!< The configuration of the class*\/$/;"	m	struct:_usb_device_msc_struct
configurations	usb/device/class/usb_device_class.h	/^    uint8_t configurations;                     \/*!< Number of configurations of the class*\/$/;"	m	struct:_usb_device_class_struct
conn	lwip/src/include/lwip/priv/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg	typeref:struct:api_msg::netconn
conn	lwip/src/include/lwip/priv/sockets_priv.h	/^  struct netconn *conn;$/;"	m	struct:lwip_sock	typeref:struct:lwip_sock::netconn
connect	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_connect_fn            connect;$/;"	m	struct:altcp_functions
connect	lwip/src/include/lwip/sockets.h	630;"	d
connect	lwip/src/include/netif/ppp/ppp_impl.h	/^  void (*connect) (ppp_pcb *pcb, void *ctx);$/;"	m	struct:link_callbacks
connect	lwip/src/include/netif/ppp/pppapi.h	/^    } connect;$/;"	m	union:pppapi_msg_msg::__anon435	typeref:struct:pppapi_msg_msg::__anon435::__anon440
connect_time_expired	lwip/src/netif/ppp/auth.c	/^static void connect_time_expired(void *arg) {$/;"	f	file:
connected	lwip/src/include/lwip/altcp.h	/^  altcp_connected_fn  connected;$/;"	m	struct:altcp_pcb
connected	lwip/src/include/lwip/tcp.h	/^  tcp_connected_fn connected;$/;"	m	struct:tcp_pcb
consumerOdd	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t consumerOdd : 1U;      \/*!< When transaction is done, read result from this endpoint buffer *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
context	littlefs/littlefs_include/lfs.h	/^    void *context;$/;"	m	struct:lfs_config
continue_networks	lwip/src/netif/ppp/auth.c	/^void continue_networks(ppp_pcb *pcb) {$/;"	f
control	drivers/fsl_enet.h	/^    __IO uint32_t control;   \/*!< Buffer 1\/2 byte counts and control *\/$/;"	m	struct:_enet_rx_bd_struct
controlAlternate	usb/device/class/usb_device_audio.h	/^    uint8_t controlAlternate;                              \/*!< Current alternate setting of the control interface *\/$/;"	m	struct:_usb_device_audio_struct
controlAlternate	usb/device/class/usb_device_video.h	/^    uint8_t controlAlternate;                              \/*!< Current alternate setting of the control interface *\/$/;"	m	struct:_usb_device_video_struct
controlData	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t *controlData;$/;"	m	struct:_usb_device_lpc3511ip_state_struct
controlInterfaceHandle	usb/device/class/usb_device_audio.h	/^    usb_device_interface_struct_t *controlInterfaceHandle; \/*!< Current control interface handle *\/$/;"	m	struct:_usb_device_audio_struct
controlInterfaceHandle	usb/device/class/usb_device_video.h	/^    usb_device_interface_struct_t *controlInterfaceHandle; \/*!< Current control interface handle *\/$/;"	m	struct:_usb_device_video_struct
controlInterfaceNumber	usb/device/class/usb_device_audio.h	/^    uint8_t controlInterfaceNumber;                        \/*!< The control interface number of the class *\/$/;"	m	struct:_usb_device_audio_struct
controlInterfaceNumber	usb/device/class/usb_device_video.h	/^    uint8_t controlInterfaceNumber;                        \/*!< The control interface number of the class *\/$/;"	m	struct:_usb_device_video_struct
controlStat	drivers/fsl_enet.h	/^    __IO uint32_t controlStat; \/*!< TDES control and status word *\/$/;"	m	struct:_enet_tx_bd_struct
controllerHandle	usb/device/source/usb_device_dci.h	/^    usb_device_controller_handle controllerHandle;                       \/*!< Controller handle *\/$/;"	m	struct:_usb_device_struct
controllerId	usb/device/class/usb_device_class.h	/^    uint8_t controllerId;                              \/*!< Controller ID*\/$/;"	m	struct:_usb_device_common_class_struct
controllerId	usb/device/source/ehci/usb_device_ehci.h	/^    uint8_t controllerId;                          \/*!< Controller ID *\/$/;"	m	struct:_usb_device_ehci_state_struct
controllerId	usb/device/source/ehci/usb_device_ehci.h	/^    uint8_t controllerId;              \/*!< Controller ID *\/$/;"	m	struct:_usb_device_dcd_state_struct
controllerId	usb/device/source/khci/usb_device_khci.h	/^    uint8_t controllerId;                               \/*!< Controller ID *\/$/;"	m	struct:_usb_device_khci_state_struct
controllerId	usb/device/source/khci/usb_device_khci.h	/^    uint8_t controllerId;              \/*!< Controller ID *\/$/;"	m	struct:_usb_device_dcd_state_struct
controllerId	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t controllerId;                   \/*!< Controller ID *\/$/;"	m	struct:_usb_device_lpc3511ip_state_struct
controllerId	usb/device/source/usb_device_dci.h	/^    uint8_t controllerId;                              \/*!< Controller ID *\/$/;"	m	struct:_usb_device_struct
controllerInterface	usb/device/source/usb_device_dci.h	/^    const usb_device_controller_interface_struct_t *controllerInterface; \/*!< Controller interface handle *\/$/;"	m	struct:_usb_device_struct
controllerSpeed	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t controllerSpeed;$/;"	m	struct:_usb_device_lpc3511ip_state_struct
count	usb/device/class/usb_device_audio.h	/^    uint8_t count;$/;"	m	struct:_usb_device_audio_entities_struct
count	usb/device/class/usb_device_class.h	/^    uint8_t count;                              \/*!< Number of interfaces of the class*\/$/;"	m	struct:_usb_device_interface_list
count	usb/device/class/usb_device_class.h	/^    uint8_t count;                            \/*!< Number of class supported *\/$/;"	m	struct:_usb_device_class_config_list_struct
count	usb/device/class/usb_device_class.h	/^    uint8_t count;                            \/*!< Number of interfaces in the current interface*\/$/;"	m	struct:_usb_device_interfaces_struct
count	usb/device/class/usb_device_class.h	/^    uint8_t count;                          \/*!< How many endpoints in current interface*\/$/;"	m	struct:_usb_device_endpoint_list
count	usb/device/class/usb_device_video.h	/^    uint8_t count;$/;"	m	struct:_usb_device_video_entities_struct
count	usb/include/usb_spec.h	/^    uint8_t count;                \/* The language count *\/$/;"	m	struct:_usb_language_list
counter	lwip/src/include/lwip/priv/nd6_priv.h	/^  } counter;$/;"	m	struct:nd6_neighbor_cache_entry	typeref:union:nd6_neighbor_cache_entry::__anon453
countryCode	vcom/virtual_com.h	/^    uint8_t *countryCode;        \/* Country code of cdc device *\/$/;"	m	struct:_usb_cdc_vcom_struct
cs_filler	lwip/src/include/netif/ppp/vj.h	/^  u8_t cs_filler;$/;"	m	struct:cstate
cs_hdr	lwip/src/include/netif/ppp/vj.h	123;"	d
cs_hlen	lwip/src/include/netif/ppp/vj.h	/^  u16_t cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	lwip/src/include/netif/ppp/vj.h	/^  u8_t cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	lwip/src/include/netif/ppp/vj.h	122;"	d
cs_next	lwip/src/include/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cstate	lwip/src/include/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	lwip/src/include/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon427
csu_ip	lwip/src/include/netif/ppp/vj.h	/^    struct ip_hdr csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon427	typeref:struct:cstate::__anon427::ip_hdr
csub	codec2/comp_prim.h	/^inline static COMP csub(COMP a, COMP b){$/;"	f
cswPrimeFlag	usb/device/class/usb_device_msc.h	/^    uint8_t cswPrimeFlag; \/*!< CSW prime flag, prime means device MSC has been ready to receive CSW, the bulk in$/;"	m	struct:_usb_device_msc_struct
cswStatus	usb/device/class/usb_device_msc.h	/^    uint8_t cswStatus;    \/*!< Byte 12 bCSWStatus*\/$/;"	m	struct:_usb_device_msc_csw
ctime	lwip/src/core/ipv4/etharp.c	/^  u16_t ctime;$/;"	m	struct:etharp_entry	file:
ctimer0_match0_callback	component/timer/ctimer_adapter.c	/^void ctimer0_match0_callback(uint32_t flags)$/;"	f
ctimer1_match0_callback	component/timer/ctimer_adapter.c	/^void ctimer1_match0_callback(uint32_t flags)$/;"	f
ctimerCallbackType	drivers/fsl_ctimer.c	/^static ctimer_callback_type_t ctimerCallbackType[FSL_FEATURE_SOC_CTIMER_COUNT] = {kCTIMER_SingleCallback};$/;"	v	file:
ctimer_callback_t	drivers/fsl_ctimer.h	/^typedef void (*ctimer_callback_t)(uint32_t flags);$/;"	t
ctimer_callback_table	component/timer/ctimer_adapter.c	/^ctimer_callback_t ctimer_callback_table[] = {ctimer0_match0_callback, ctimer1_match0_callback};$/;"	v
ctimer_callback_type_t	drivers/fsl_ctimer.h	/^} ctimer_callback_type_t;$/;"	t	typeref:enum:__anon197
ctimer_capture_channel_t	drivers/fsl_ctimer.h	/^} ctimer_capture_channel_t;$/;"	t	typeref:enum:_ctimer_capture_channel
ctimer_capture_edge_t	drivers/fsl_ctimer.h	/^} ctimer_capture_edge_t;$/;"	t	typeref:enum:_ctimer_capture_edge
ctimer_config_t	drivers/fsl_ctimer.h	/^} ctimer_config_t;$/;"	t	typeref:struct:_ctimer_config
ctimer_interrupt_enable_t	drivers/fsl_ctimer.h	/^} ctimer_interrupt_enable_t;$/;"	t	typeref:enum:_ctimer_interrupt_enable
ctimer_match_config_t	drivers/fsl_ctimer.h	/^} ctimer_match_config_t;$/;"	t	typeref:struct:_ctimer_match_config
ctimer_match_output_control_t	drivers/fsl_ctimer.h	/^} ctimer_match_output_control_t;$/;"	t	typeref:enum:_ctimer_match_output_control
ctimer_match_t	drivers/fsl_ctimer.h	/^} ctimer_match_t;$/;"	t	typeref:enum:_ctimer_match
ctimer_status_flags_t	drivers/fsl_ctimer.h	/^} ctimer_status_flags_t;$/;"	t	typeref:enum:_ctimer_status_flags
ctimer_timer_mode_t	drivers/fsl_ctimer.h	/^} ctimer_timer_mode_t;$/;"	t	typeref:enum:_ctimer_timer_mode
ctx	lwip/src/include/lwip/priv/tcpip_priv.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon468::__anon472
ctx_cb	lwip/src/include/netif/ppp/ppp.h	/^  void *ctx_cb;                  \/* Callbacks optional pointer *\/$/;"	m	struct:ppp_pcb_s
ctx_cb	lwip/src/include/netif/ppp/pppapi.h	/^      void *ctx_cb;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon437
ctx_cb	lwip/src/include/netif/ppp/pppapi.h	/^      void *ctx_cb;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon438
ctx_cb	lwip/src/include/netif/ppp/pppapi.h	/^      void *ctx_cb;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon439
currRecvBuf	vcom/virtual_com.h	/^    uint8_t *currRecvBuf;                    \/*receive buffer*\/$/;"	m	struct:_usb_cdc_vcom_struct
currSendBuf	vcom/virtual_com.h	/^    uint8_t *currSendBuf;                    \/*send buffer*\/$/;"	m	struct:_usb_cdc_vcom_struct
currentConfiguration	vcom/composite.h	/^    uint8_t currentConfiguration; \/* Current configuration value. *\/$/;"	m	struct:_usb_device_composite_struct
currentConfiguration	vcom/virtual_com.h	/^    uint8_t currentConfiguration; \/* Current configuration value. *\/$/;"	m	struct:_usb_cdc_vcom_struct
currentDtdPointer	usb/device/source/ehci/usb_device_ehci.h	/^    volatile uint32_t currentDtdPointer;$/;"	m	struct:_usb_device_ehci_qh_struct
currentInterface	vcom/virtual_com.h	/^    uint8_t currentInterface; \/* Current interface index.                           *\/$/;"	m	struct:_usb_cdc_acm_info
currentInterfaceAlternateSetting	vcom/composite.h	/^        currentInterfaceAlternateSetting[USB_INTERFACE_COUNT]; \/* Current alternate setting value for each interface. *\/$/;"	m	struct:_usb_device_composite_struct
currentInterfaceAlternateSetting	vcom/virtual_com.h	/^    uint8_t currentInterfaceAlternateSetting$/;"	m	struct:_usb_cdc_vcom_struct
currentMaxCapacityDesccriptor	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t currentMaxCapacityDesccriptor[sizeof($/;"	m	struct:_usb_device_format_capacity_response_data_struct
currentOffset	usb/device/class/usb_device_msc.h	/^    uint32_t currentOffset;                                \/*!< Current address offset *\/$/;"	m	struct:_usb_device_msc_struct
current_input_netif	lwip/src/include/lwip/ip.h	/^  struct netif *current_input_netif;$/;"	m	struct:ip_globals	typeref:struct:ip_globals::netif
current_ip4_header	lwip/src/include/lwip/ip.h	/^  const struct ip_hdr *current_ip4_header;$/;"	m	struct:ip_globals	typeref:struct:ip_globals::ip_hdr
current_ip6_header	lwip/src/include/lwip/ip.h	/^  struct ip6_hdr *current_ip6_header;$/;"	m	struct:ip_globals	typeref:struct:ip_globals::ip6_hdr
current_ip_header_tot_len	lwip/src/include/lwip/ip.h	/^  u16_t current_ip_header_tot_len;$/;"	m	struct:ip_globals
current_iphdr_dest	lwip/src/include/lwip/ip.h	/^  ip_addr_t current_iphdr_dest;$/;"	m	struct:ip_globals
current_iphdr_src	lwip/src/include/lwip/ip.h	/^  ip_addr_t current_iphdr_src;$/;"	m	struct:ip_globals
current_msg	lwip/src/include/lwip/api.h	/^  struct api_msg *current_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg
current_netif	lwip/src/include/lwip/ip.h	/^  struct netif *current_netif;$/;"	m	struct:ip_globals	typeref:struct:ip_globals::netif
current_timeout_due_time	lwip/src/core/timeouts.c	/^static u32_t current_timeout_due_time;$/;"	v	file:
custom_free_function	lwip/src/include/lwip/pbuf.h	/^  pbuf_free_custom_fn custom_free_function;$/;"	m	struct:pbuf_custom
cwnd	lwip/src/include/lwip/tcp.h	/^  tcpwnd_size_t cwnd;$/;"	m	struct:tcp_pcb
d	littlefs/littlefs_include/lfs.h	/^    } d;$/;"	m	struct:lfs_dir	typeref:struct:lfs_dir::lfs_disk_dir
d	littlefs/littlefs_include/lfs.h	/^    } d;$/;"	m	struct:lfs_entry	typeref:struct:lfs_entry::lfs_disk_entry
d	littlefs/littlefs_include/lfs.h	/^    } d;$/;"	m	struct:lfs_superblock	typeref:struct:lfs_superblock::lfs_disk_superblock
d	lwip/src/include/netif/ppp/ppp_impl.h	/^    struct compstat d;		\/* packet decompression statistics *\/$/;"	m	struct:ppp_comp_stats	typeref:struct:ppp_comp_stats::compstat
da	emwin/emWin_header/WM.h	/^  int dx, dy, da;$/;"	m	struct:__anon287
data	component/i2c/i2c.h	/^    uint8_t *volatile data;               \/*!< A transfer buffer. *\/$/;"	m	struct:_hal_i2c_slave_transfer
data	component/i2c/i2c.h	/^    uint8_t *volatile data;        \/*!< A transfer buffer. *\/$/;"	m	struct:_hal_i2c_master_transfer
data	component/uart/uart.h	/^    uint8_t *data;   \/*!< The buffer of data to be transfer.*\/$/;"	m	struct:_hal_uart_transfer
data	drivers/fsl_dmic_dma.h	/^    void *data;                     \/*!< The buffer of data to be transfer.*\/$/;"	m	struct:_dmic_transfer
data	drivers/fsl_i2c.h	/^    void *data;                \/*!< Pointer to data to transfer. *\/$/;"	m	struct:_i2c_master_transfer
data	drivers/fsl_i2s.h	/^    volatile uint8_t *data;   \/*!< Pointer to data buffer. *\/$/;"	m	struct:_i2s_transfer
data	drivers/fsl_usart.h	/^    uint8_t *data;   \/*!< The buffer of data to be transfer.*\/$/;"	m	struct:_usart_transfer
data	lwip/src/include/lwip/tcp.h	/^  void *data;$/;"	m	struct:tcp_pcb_ext_args
data	lwip/src/netif/ppp/demand.c	/^    unsigned char data[1];$/;"	m	struct:packet	file:
data0	usb/device/source/khci/usb_device_khci.h	/^            uint32_t data0 : 1U;          \/*!< The data toggle of the transaction *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct::__anon525::__anon526
dataAddrInterleaveSize	drivers/fsl_dmic_dma.h	/^    uint8_t dataAddrInterleaveSize; \/*!< destination address interleave size *\/$/;"	m	struct:_dmic_transfer
dataInFlag	usb/device/class/usb_device_msc.h	/^    uint8_t dataInFlag;           \/*!< CBW indicating bulk in transfer, clear this flag when data transfer done*\/$/;"	m	struct:_usb_device_msc_struct
dataInterfaceHandle	usb/device/class/usb_device_cdc_acm.h	/^    usb_device_interface_struct_t *dataInterfaceHandle; \/*!< The CDC data interface handle. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
dataLength	drivers/fsl_i2s.h	/^    uint8_t dataLength;                         \/*!< Data length (4 - 32) *\/$/;"	m	struct:_i2s_handle
dataLength	drivers/fsl_i2s.h	/^    uint8_t dataLength;   \/*!< Data length (4 - 32) *\/$/;"	m	struct:_i2s_config
dataLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t dataLength;$/;"	m	struct:_rndis_packet_msg_struct
dataOffset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t dataOffset;$/;"	m	struct:_rndis_packet_msg_struct
dataOutFlag	usb/device/class/usb_device_msc.h	/^    uint8_t dataOutFlag;          \/*!< CBW indicating bulk out transfer, clear this flag when data transfer done*\/$/;"	m	struct:_usb_device_msc_struct
dataResidue	usb/device/class/usb_device_msc.h	/^    uint32_t dataResidue; \/*!< Byte 8-11 dCSWDataResidue*\/$/;"	m	struct:_usb_device_msc_csw
dataSize	component/i2c/i2c.h	/^    volatile size_t dataSize;             \/*!< A transfer size. *\/$/;"	m	struct:_hal_i2c_slave_transfer
dataSize	component/i2c/i2c.h	/^    volatile size_t dataSize;      \/*!< A transfer size. *\/$/;"	m	struct:_hal_i2c_master_transfer
dataSize	component/uart/uart.h	/^    size_t dataSize; \/*!< The byte count to be transfer. *\/$/;"	m	struct:_hal_uart_transfer
dataSize	drivers/fsl_dmic_dma.h	/^    size_t dataSize;                \/*!< The byte count to be transfer. *\/$/;"	m	struct:_dmic_transfer
dataSize	drivers/fsl_i2c.h	/^    size_t dataSize;           \/*!< Number of bytes to transfer. *\/$/;"	m	struct:_i2c_master_transfer
dataSize	drivers/fsl_i2s.h	/^    volatile size_t dataSize; \/*!< Buffer size in bytes. *\/$/;"	m	struct:_i2s_transfer
dataSize	drivers/fsl_spi.h	/^    size_t dataSize;      \/*!< Transfer bytes *\/$/;"	m	struct:_spi_transfer
dataSize	drivers/fsl_usart.h	/^    size_t dataSize; \/*!< The byte count to be transfer. *\/$/;"	m	struct:_usart_transfer
dataTransferLength	usb/device/class/usb_device_msc.h	/^    uint32_t dataTransferLength; \/*!< Byte 8-11 dCBWDataTransferLength*\/$/;"	m	struct:_usb_device_msc_cbw
dataWidth	drivers/fsl_dmic_dma.h	/^    uint8_t dataWidth;              \/*!< DMIC support 16bit\/32bit *\/$/;"	m	struct:_dmic_transfer
dataWidth	drivers/fsl_spi.h	/^    spi_data_width_t dataWidth;         \/*!< Width of the data *\/$/;"	m	struct:_spi_master_config
dataWidth	drivers/fsl_spi.h	/^    spi_data_width_t dataWidth;         \/*!< Width of the data *\/$/;"	m	struct:_spi_slave_config
dataWidth	drivers/fsl_spi.h	/^    spi_data_width_t dataWidth;$/;"	m	struct:_spi_config
dataWidth	drivers/fsl_spi.h	/^    uint8_t dataWidth;                \/*!< Width of the data [Valid values: 1 to 16] *\/$/;"	m	struct:_spi_master_handle
data_bits_per_frame	codec2/mpdecode_core.h	/^    int data_bits_per_frame;$/;"	m	struct:LDPC
data_init	startup/startup_lpc54018.c	/^void data_init(unsigned int romstart, unsigned int start, unsigned int len) {$/;"	f
data_lost	CMSIS_driver/Driver_SPI.h	/^  uint32_t data_lost  : 1;              \/\/\/< Data lost: Receive overflow \/ Transmit underflow (cleared on start of transfer operation)$/;"	m	struct:_ARM_SPI_STATUS
data_name	lwip/src/include/netif/ppp/ppp_impl.h	/^    const char *data_name;	\/* Text name of corresponding data protocol *\/$/;"	m	struct:protent
datagram_len	lwip/src/include/lwip/ip4_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
datagram_len	lwip/src/include/lwip/ip6_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip6_reassdata
datagram_size	lwip/src/netif/lowpan6.c	/^  u16_t datagram_size;$/;"	m	struct:lowpan6_reass_helper	file:
datagram_tag	lwip/src/netif/lowpan6.c	/^  u16_t datagram_tag;$/;"	m	struct:lowpan6_reass_helper	file:
datainput	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*datainput) (ppp_pcb *pcb, u_char *pkt, int len);$/;"	m	struct:protent
dbg_get_tcp_state	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_dbg_get_tcp_state_fn  dbg_get_tcp_state;$/;"	m	struct:altcp_functions
dc_cut_level	drivers/fsl_dmic.h	/^    dc_removal_t dc_cut_level;          \/*!< DMIC DC filter control values. *\/$/;"	m	struct:_dmic_channel_config
dc_removal_t	drivers/fsl_dmic.h	/^} dc_removal_t;$/;"	t	typeref:enum:_dc_removal
dcdDbncTime	usb/device/include/usb_device.h	/^    uint16_t dcdDbncTime;         \/*!< The debounce time period on DP signal *\/$/;"	m	struct:_usb_device_dcd_charging_time
dcdDpSrcOnTime	usb/device/include/usb_device.h	/^    uint16_t dcdDpSrcOnTime;      \/*!< The time period comparator enabled *\/$/;"	m	struct:_usb_device_dcd_charging_time
dcdRegisterBase	usb/device/source/ehci/usb_device_ehci.h	/^    USBHSDCD_Type *dcdRegisterBase;    \/*!< The base address of the dcd module *\/$/;"	m	struct:_usb_device_dcd_state_struct
dcdRegisterBase	usb/device/source/khci/usb_device_khci.h	/^    USBDCD_Type *dcdRegisterBase;      \/*!< The base address of the dcd module *\/$/;"	m	struct:_usb_device_dcd_state_struct
dcdSeqInitTime	usb/device/include/usb_device.h	/^    uint16_t dcdSeqInitTime;      \/*!< The dcd sequence init time *\/$/;"	m	struct:_usb_device_dcd_charging_time
dcdTimeDMSrcOn	usb/device/include/usb_device.h	/^    uint8_t dcdTimeDMSrcOn;       \/*!< The amount of time that the modules enable the Vdm_src *\/$/;"	m	struct:_usb_device_dcd_charging_time
dcdTimeWaitAfterPrD	usb/device/include/usb_device.h	/^    uint16_t dcdTimeWaitAfterPrD; \/*!< The time period between primary and secondary detection *\/$/;"	m	struct:_usb_device_dcd_charging_time
de_emp	codec2/lpc.c	/^void de_emp($/;"	f
dealloc	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_dealloc_fn            dealloc;$/;"	m	struct:altcp_functions
debug_console_state_struct_t	utilities/fsl_debug_console.c	/^} debug_console_state_struct_t;$/;"	t	typeref:struct:_debug_console_state_struct	file:
debug_console_write_ring_buffer_t	utilities/fsl_debug_console.c	/^} debug_console_write_ring_buffer_t;$/;"	t	typeref:struct:_debug_console_write_ring_buffer	file:
dec_type	codec2/mpdecode_core.h	/^    int dec_type;$/;"	m	struct:LDPC
decode_Wo	codec2/quantise.c	/^float decode_Wo(C2CONST *c2const, int index, int bits)$/;"	f
decode_WoE	codec2/quantise.c	/^void decode_WoE(C2CONST *c2const, MODEL *model, float *e, float xq[], int n1)$/;"	f
decode_amplitudes	codec2/quantise.c	/^float decode_amplitudes(codec2_fft_cfg  fft_fwd_cfg,$/;"	f
decode_energy	codec2/quantise.c	/^float decode_energy(int index, int bits)$/;"	f
decode_log_Wo	codec2/quantise.c	/^float decode_log_Wo(C2CONST *c2const, int index, int bits)$/;"	f
decode_lspds_scalar	codec2/quantise.c	/^void decode_lspds_scalar($/;"	f
decode_lsps_diff_freq_vq	codec2/quantise.c	/^void decode_lsps_diff_freq_vq(float lsp_[], int indexes[], int order)$/;"	f
decode_lsps_diff_time	codec2/quantise.c	/^void decode_lsps_diff_time($/;"	f
decode_lsps_scalar	codec2/quantise.c	/^void decode_lsps_scalar(float lsp[], int indexes[], int order)$/;"	f
decode_lsps_vq	codec2/quantise.c	/^void decode_lsps_vq(int *indexes, float *xq, int order, int stages)$/;"	f
decode_mels_scalar	codec2/quantise.c	/^void decode_mels_scalar(float mels[], int indexes[], int order)$/;"	f
decode_one_bit	codec2/varicode.c	/^static int decode_one_bit(struct VARICODE_DEC *s, char *single_ascii, short varicode_in, int long_code)$/;"	f	file:
decode_two_bits	codec2/varicode.c	/^static int decode_two_bits(struct VARICODE_DEC *s, char *single_ascii, short varicode_in1, short varicode_in2)$/;"	f	file:
decoding_table	codec2/golay23.c	/^int static decoding_table[2048];$/;"	v	file:
decoding_table	codec2/golaydectable.h	/^const int static decoding_table[]={$/;"	v
default_router_list	lwip/src/core/ipv6/nd6.c	/^struct nd6_router_list_entry default_router_list[LWIP_ND6_NUM_ROUTERS];$/;"	v	typeref:struct:nd6_router_list_entry
deflate	lwip/src/include/netif/ppp/ccp.h	/^    unsigned int deflate          :1; \/* do Deflate? *\/$/;"	m	struct:ccp_options
deflate_correct	lwip/src/include/netif/ppp/ccp.h	/^    unsigned int deflate_correct  :1; \/* use correct code for deflate? *\/$/;"	m	struct:ccp_options
deflate_draft	lwip/src/include/netif/ppp/ccp.h	/^    unsigned int deflate_draft    :1; \/* use draft RFC code for deflate? *\/$/;"	m	struct:ccp_options
deflate_size	lwip/src/include/netif/ppp/ccp.h	/^    u_short deflate_size;	\/* lg(window size) for Deflate *\/$/;"	m	struct:ccp_options
deflate_value	lwip/src/netif/ppp/ccp.c	/^static char deflate_value[8];$/;"	v	file:
degree	codec2/mpdecode_core.h	/^  int degree;$/;"	m	struct:c_node
degree	codec2/mpdecode_core.h	/^  int degree;$/;"	m	struct:v_node
delayConfig	drivers/fsl_spi.h	/^    spi_delay_config_t delayConfig;     \/*!< Delay configuration. *\/$/;"	m	struct:_spi_master_config
delay_time	lwip/src/include/lwip/priv/nd6_priv.h	/^    u32_t delay_time;     \/* ticks (ND6_TMR_INTERVAL) *\/$/;"	m	union:nd6_neighbor_cache_entry::__anon453
demand_block	lwip/src/netif/ppp/demand.c	/^demand_block()$/;"	f
demand_conf	lwip/src/include/netif/ppp/ppp_impl.h	/^    int  (*demand_conf) (int unit);$/;"	m	struct:protent
demand_conf	lwip/src/netif/ppp/demand.c	/^demand_conf()$/;"	f
demand_discard	lwip/src/netif/ppp/demand.c	/^demand_discard()$/;"	f
demand_rexmit	lwip/src/netif/ppp/demand.c	/^demand_rexmit(proto, newip)$/;"	f
demand_unblock	lwip/src/netif/ppp/demand.c	/^demand_unblock()$/;"	f
deorphaned	littlefs/littlefs_include/lfs.h	/^    bool deorphaned;$/;"	m	struct:lfs
dequeue_datagram	lwip/src/netif/lowpan6.c	/^dequeue_datagram(struct lowpan6_reass_helper *lrh, struct lowpan6_reass_helper *prev)$/;"	f	file:
desLink	drivers/fsl_dmic_dma.h	/^    dma_descriptor_t *desLink; \/*!< descriptor pool pointer *\/$/;"	m	struct:_dmic_dma_handle
des_context	lwip/src/include/netif/ppp/polarssl/des.h	/^des_context;$/;"	t	typeref:struct:__anon432
des_crypt_ecb	lwip/src/netif/ppp/polarssl/des.c	/^void des_crypt_ecb( des_context *ctx,$/;"	f
des_setkey	lwip/src/netif/ppp/polarssl/des.c	/^static void des_setkey( unsigned long SK[32], unsigned char key[8] )$/;"	f	file:
des_setkey_dec	lwip/src/netif/ppp/polarssl/des.c	/^void des_setkey_dec( des_context *ctx, unsigned char key[8] )$/;"	f
des_setkey_enc	lwip/src/netif/ppp/polarssl/des.c	/^void des_setkey_enc( des_context *ctx, unsigned char key[8] )$/;"	f
desc	lwip/src/include/lwip/priv/memp_priv.h	/^  const char *desc;$/;"	m	struct:memp_desc
descriptor	drivers/fsl_i2s_dma.c	/^    volatile uint8_t descriptor; \/*!< Index of next DMA descriptor in s_DmaDescriptors to be configured with data (does$/;"	m	struct:_i2s_dma_private_handle	file:
descriptorCodeBlockLength	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t descriptorCodeBlockLength; \/*!< Byte 4 Descriptor Code , byte 5-7 Block Length*\/$/;"	m	struct:_usb_device_current_max_capacity_descriptor_struct
descriptorQueue	drivers/fsl_i2s_dma.c	/^    volatile i2s_transfer_t descriptorQueue[I2S_NUM_BUFFERS]; \/*!< Transfer data to be queued to DMA *\/$/;"	m	struct:_i2s_dma_private_handle	file:
desiredRate	drivers/fsl_clock.h	/^    uint32_t desiredRate; \/*!< Desired PLL rate in Hz *\/$/;"	m	struct:_pll_config
dest	lwip/src/include/lwip/ip6_frag.h	/^  ip6_addr_p_t dest; \/* copy of the destination address in the IP header *\/$/;"	m	struct:ip6_reassdata
dest_zone	lwip/src/include/lwip/ip6_frag.h	/^  u8_t dest_zone; \/* zone of original packet's destination address *\/$/;"	m	struct:ip6_reassdata
destination_addr	lwip/src/include/lwip/priv/nd6_priv.h	/^  ip6_addr_t destination_addr;$/;"	m	struct:nd6_destination_cache_entry
destination_cache	lwip/src/core/ipv6/nd6.c	/^struct nd6_destination_cache_entry destination_cache[LWIP_ND6_NUM_DESTINATIONS];$/;"	v	typeref:struct:nd6_destination_cache_entry
destroy	lwip/src/include/lwip/tcp.h	/^  tcp_extarg_callback_pcb_destroyed_fn destroy;$/;"	m	struct:tcp_ext_arg_callbacks
determine_phase	codec2/newamp1.c	/^void determine_phase(C2CONST *c2const, COMP H[], MODEL *model, int Nfft, codec2_fft_cfg fwd_cfg, codec2_fft_cfg inv_cfg)$/;"	f
devAddrMap	drivers/fsl_emc.h	/^    uint8_t devAddrMap; \/*!< dynamic device address mapping, choose the address mapping for your specific device. *\/$/;"	m	struct:_emc_dynamic_chip_config
devMaxTxSize	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t devMaxTxSize;$/;"	m	struct:_usb_device_cdc_rndis_config_struct
device	usb/include/usb_spec.h	/^    usb_descriptor_device_t device;               \/* Device descriptor *\/$/;"	m	union:_usb_descriptor_union
deviceAddress	usb/device/source/usb_device_dci.h	/^    uint8_t deviceAddress;                             \/*!< Current device address *\/$/;"	m	struct:_usb_device_struct
deviceCallback	usb/device/class/usb_device_class.h	/^    usb_device_callback_t deviceCallback;     \/*!< Device callback function *\/$/;"	m	struct:_usb_device_class_config_list_struct
deviceCallback	usb/device/source/usb_device_dci.h	/^    usb_device_callback_t deviceCallback; \/*!< Device callback function pointer *\/$/;"	m	struct:_usb_device_struct
deviceCancel	usb/device/source/usb_device_dci.h	/^    usb_device_controller_cancel_t deviceCancel;   \/*!< Controller cancel transfer *\/$/;"	m	struct:_usb_device_controller_interface_struct
deviceControl	usb/device/source/usb_device_dci.h	/^    usb_device_controller_control_t deviceControl; \/*!< Controller control *\/$/;"	m	struct:_usb_device_controller_interface_struct
deviceDeinit	usb/device/source/usb_device_dci.h	/^    usb_device_controller_deinit_t deviceDeinit;   \/*!< Controller de-initialization *\/$/;"	m	struct:_usb_device_controller_interface_struct
deviceDescriptor	usb/device/class/usb_device_class.h	/^    usb_device_get_device_descriptor_struct_t deviceDescriptor; \/*!< The structure to get device descriptor. *\/$/;"	m	union:_usb_device_get_descriptor_common_union
deviceExpectedDataLength	usb/device/class/usb_device_msc.h	/^    uint32_t deviceExpectedDataLength; \/*!< The number of bytes of data that the device expects to transfer *\/$/;"	m	struct:_usb_device_msc_thirteen_case_struct
deviceExpectedDirection	usb/device/class/usb_device_msc.h	/^    uint8_t deviceExpectedDirection;                      \/*!< Device expected data direction*\/$/;"	m	struct:_usb_device_msc_thirteen_case_struct
deviceFlags	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t deviceFlags;$/;"	m	struct:_rndis_init_cmplt_struct
deviceHandle	usb/device/class/usb_device_printer.h	/^    usb_device_handle deviceHandle;                 \/*!< The device handle *\/$/;"	m	struct:_usb_device_printer_struct
deviceHandle	usb/device/source/ehci/usb_device_ehci.h	/^    usb_device_struct_t *deviceHandle; \/*!< Device handle used to identify the device object belongs to *\/$/;"	m	struct:_usb_device_dcd_state_struct
deviceHandle	usb/device/source/ehci/usb_device_ehci.h	/^    usb_device_struct_t *deviceHandle; \/*!< Device handle used to identify the device object is belonged to *\/$/;"	m	struct:_usb_device_ehci_state_struct
deviceHandle	usb/device/source/khci/usb_device_khci.h	/^    usb_device_struct_t *deviceHandle; \/*!< Device handle used to identify the device object belongs to *\/$/;"	m	struct:_usb_device_dcd_state_struct
deviceHandle	usb/device/source/khci/usb_device_khci.h	/^    usb_device_struct_t *deviceHandle; \/*!< Device handle used to identify the device object belongs to *\/$/;"	m	struct:_usb_device_khci_state_struct
deviceHandle	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    usb_device_handle deviceHandle; \/*!< (4 bytes) Device handle used to identify the device object belongs to *\/$/;"	m	struct:_usb_device_lpc3511ip_state_struct
deviceHandle	vcom/composite.h	/^    usb_device_handle deviceHandle;                           \/* USB device handle. *\/$/;"	m	struct:_usb_device_composite_struct
deviceHandle	vcom/virtual_com.h	/^    usb_device_handle deviceHandle; \/* USB device handle. *\/$/;"	m	struct:_usb_cdc_vcom_struct
deviceInit	usb/device/source/usb_device_dci.h	/^    usb_device_controller_init_t deviceInit;       \/*!< Controller initialization *\/$/;"	m	struct:_usb_device_controller_interface_struct
deviceQualifierDescriptor	usb/device/class/usb_device_class.h	/^        deviceQualifierDescriptor; \/*!< The structure to get device qualifier descriptor. *\/$/;"	m	union:_usb_device_get_descriptor_common_union
deviceRecv	usb/device/source/usb_device_dci.h	/^    usb_device_controller_recv_t deviceRecv;       \/*!< Controller receive data *\/$/;"	m	struct:_usb_device_controller_interface_struct
deviceSend	usb/device/source/usb_device_dci.h	/^    usb_device_controller_send_t deviceSend;       \/*!< Controller send data *\/$/;"	m	struct:_usb_device_controller_interface_struct
deviceSpeed	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t deviceSpeed;                    \/*!< some controller support the HS *\/$/;"	m	struct:_usb_device_lpc3511ip_state_struct
deviceTaskHandle	vcom/composite.h	/^    TaskHandle_t deviceTaskHandle;                            \/* USB device task handle. *\/$/;"	m	struct:_usb_device_composite_struct
deviceVcHandle	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t deviceVcHandle;$/;"	m	struct:_rndis_query_msg_struct
deviceVcHandle	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t deviceVcHandle;$/;"	m	struct:_rndis_set_msg_struct
dft_speech	codec2/sine.c	/^void dft_speech(C2CONST *c2const, codec2_fft_cfg fft_fwd_cfg, COMP Sw[], float Sn[], float w[])$/;"	f
dft_speech	codec2/sine.c	/^void dft_speech(codec2_fftr_cfg fftr_fwd_cfg, COMP Sw[], float Sn[], float w[])$/;"	f
dhcp	lwip/src/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp6	lwip/src/include/lwip/dhcp6.h	/^struct dhcp6$/;"	s
dhcp6_All_DHCP6_Relay_Agents_and_Servers	lwip/src/core/ipv6/dhcp6.c	/^const ip_addr_t dhcp6_All_DHCP6_Relay_Agents_and_Servers = IPADDR6_INIT_HOST(0xFF020000, 0, 0, 0x00010002);$/;"	v
dhcp6_All_DHCP6_Servers	lwip/src/core/ipv6/dhcp6.c	/^const ip_addr_t dhcp6_All_DHCP6_Servers = IPADDR6_INIT_HOST(0xFF020000, 0, 0, 0x00010003);$/;"	v
dhcp6_abort_config_request	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_abort_config_request(struct dhcp6 *dhcp6)$/;"	f	file:
dhcp6_cleanup	lwip/src/core/ipv6/dhcp6.c	/^void dhcp6_cleanup(struct netif *netif)$/;"	f
dhcp6_clear_all_options	lwip/src/core/ipv6/dhcp6.c	121;"	d	file:
dhcp6_clear_option	lwip/src/core/ipv6/dhcp6.c	120;"	d	file:
dhcp6_create_msg	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_create_msg(struct netif *netif, struct dhcp6 *dhcp6, u8_t message_type,$/;"	f	file:
dhcp6_dec_pcb_refcount	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_dec_pcb_refcount(void)$/;"	f	file:
dhcp6_disable	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_disable(struct netif *netif)$/;"	f
dhcp6_enable_stateful	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_enable_stateful(struct netif *netif)$/;"	f
dhcp6_enable_stateless	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_enable_stateless(struct netif *netif)$/;"	f
dhcp6_get_option_length	lwip/src/core/ipv6/dhcp6.c	123;"	d	file:
dhcp6_get_option_start	lwip/src/core/ipv6/dhcp6.c	122;"	d	file:
dhcp6_get_struct	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_get_struct(struct netif *netif, const char *dbg_requester)$/;"	f	file:
dhcp6_got_option	lwip/src/core/ipv6/dhcp6.c	119;"	d	file:
dhcp6_handle_config_reply	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_handle_config_reply(struct netif *netif, struct pbuf *p_msg_in)$/;"	f	file:
dhcp6_inc_pcb_refcount	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_inc_pcb_refcount(void)$/;"	f	file:
dhcp6_information_request	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_information_request(struct netif *netif, struct dhcp6 *dhcp6)$/;"	f	file:
dhcp6_msg	lwip/src/include/lwip/prot/dhcp6.h	/^struct dhcp6_msg$/;"	s
dhcp6_msg_finalize	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_msg_finalize(u16_t options_out_len, struct pbuf *p_out)$/;"	f	file:
dhcp6_nd6_ra_trigger	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_nd6_ra_trigger(struct netif *netif, u8_t managed_addr_config, u8_t other_config)$/;"	f
dhcp6_option_given	lwip/src/core/ipv6/dhcp6.c	118;"	d	file:
dhcp6_option_idx	lwip/src/core/ipv6/dhcp6.c	/^enum dhcp6_option_idx {$/;"	g	file:
dhcp6_option_info	lwip/src/core/ipv6/dhcp6.c	/^struct dhcp6_option_info {$/;"	s	file:
dhcp6_option_optionrequest	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_option_optionrequest(u16_t options_out_len, u8_t *options, const u16_t *req_options,$/;"	f	file:
dhcp6_option_short	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_option_short(u16_t options_out_len, u8_t *options, u16_t value)$/;"	f	file:
dhcp6_parse_reply	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_parse_reply(struct pbuf *p, struct dhcp6 *dhcp6)$/;"	f	file:
dhcp6_pcb	lwip/src/core/ipv6/dhcp6.c	/^static struct udp_pcb *dhcp6_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dhcp6_pcb_refcount	lwip/src/core/ipv6/dhcp6.c	/^static u8_t dhcp6_pcb_refcount;$/;"	v	file:
dhcp6_recv	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t port)$/;"	f	file:
dhcp6_remove_struct	lwip/src/include/lwip/dhcp6.h	78;"	d
dhcp6_request_config	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_request_config(struct netif *netif, struct dhcp6 *dhcp6)$/;"	f	file:
dhcp6_rx_options	lwip/src/core/ipv6/dhcp6.c	/^struct dhcp6_option_info dhcp6_rx_options[DHCP6_OPTION_IDX_MAX];$/;"	v	typeref:struct:dhcp6_option_info
dhcp6_set_option	lwip/src/core/ipv6/dhcp6.c	124;"	d	file:
dhcp6_set_state	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_set_state(struct dhcp6 *dhcp6, u8_t new_state, const char *dbg_caller)$/;"	f	file:
dhcp6_set_struct	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_set_struct(struct netif *netif, struct dhcp6 *dhcp6)$/;"	f
dhcp6_state_enum_t	lwip/src/include/lwip/prot/dhcp6.h	/^} dhcp6_state_enum_t;$/;"	t	typeref:enum:__anon443
dhcp6_stateless_enabled	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_stateless_enabled(struct dhcp6 *dhcp6)$/;"	f	file:
dhcp6_timeout	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_timeout(struct netif *netif, struct dhcp6 *dhcp6)$/;"	f	file:
dhcp6_tmr	lwip/src/core/ipv6/dhcp6.c	/^dhcp6_tmr(void)$/;"	f
dhcp_arp_reply	lwip/src/core/ipv4/dhcp.c	/^dhcp_arp_reply(struct netif *netif, const ip4_addr_t *addr)$/;"	f
dhcp_autoip_coop_state_enum_t	lwip/src/include/lwip/dhcp.h	/^} dhcp_autoip_coop_state_enum_t;$/;"	t	typeref:enum:__anon475
dhcp_bind	lwip/src/core/ipv4/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	lwip/src/core/ipv4/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_cleanup	lwip/src/core/ipv4/dhcp.c	/^void dhcp_cleanup(struct netif *netif)$/;"	f
dhcp_clear_all_options	lwip/src/core/ipv4/dhcp.c	183;"	d	file:
dhcp_clear_option	lwip/src/core/ipv4/dhcp.c	182;"	d	file:
dhcp_coarse_tmr	lwip/src/core/ipv4/dhcp.c	/^dhcp_coarse_tmr(void)$/;"	f
dhcp_create_msg	lwip/src/core/ipv4/dhcp.c	/^dhcp_create_msg(struct netif *netif, struct dhcp *dhcp, u8_t message_type, u16_t *options_out_len)$/;"	f	file:
dhcp_dec_pcb_refcount	lwip/src/core/ipv4/dhcp.c	/^dhcp_dec_pcb_refcount(void)$/;"	f	file:
dhcp_decline	lwip/src/core/ipv4/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_discover	lwip/src/core/ipv4/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_discover_request_options	lwip/src/core/ipv4/dhcp.c	/^static u8_t dhcp_discover_request_options[] = {$/;"	v	file:
dhcp_fine_tmr	lwip/src/core/ipv4/dhcp.c	/^dhcp_fine_tmr(void)$/;"	f
dhcp_get_option_value	lwip/src/core/ipv4/dhcp.c	184;"	d	file:
dhcp_got_option	lwip/src/core/ipv4/dhcp.c	181;"	d	file:
dhcp_handle_ack	lwip/src/core/ipv4/dhcp.c	/^dhcp_handle_ack(struct netif *netif, struct dhcp_msg *msg_in)$/;"	f	file:
dhcp_handle_nak	lwip/src/core/ipv4/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	lwip/src/core/ipv4/dhcp.c	/^dhcp_handle_offer(struct netif *netif, struct dhcp_msg *msg_in)$/;"	f	file:
dhcp_inc_pcb_refcount	lwip/src/core/ipv4/dhcp.c	/^dhcp_inc_pcb_refcount(void)$/;"	f	file:
dhcp_inform	lwip/src/core/ipv4/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	lwip/src/include/lwip/prot/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_network_changed	lwip/src/core/ipv4/dhcp.c	/^dhcp_network_changed(struct netif *netif)$/;"	f
dhcp_option	lwip/src/core/ipv4/dhcp.c	/^dhcp_option(u16_t options_out_len, u8_t *options, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	lwip/src/core/ipv4/dhcp.c	/^dhcp_option_byte(u16_t options_out_len, u8_t *options, u8_t value)$/;"	f	file:
dhcp_option_given	lwip/src/core/ipv4/dhcp.c	180;"	d	file:
dhcp_option_hostname	lwip/src/core/ipv4/dhcp.c	/^dhcp_option_hostname(u16_t options_out_len, u8_t *options, struct netif *netif)$/;"	f	file:
dhcp_option_idx	lwip/src/core/ipv4/dhcp.c	/^enum dhcp_option_idx {$/;"	g	file:
dhcp_option_long	lwip/src/core/ipv4/dhcp.c	/^dhcp_option_long(u16_t options_out_len, u8_t *options, u32_t value)$/;"	f	file:
dhcp_option_short	lwip/src/core/ipv4/dhcp.c	/^dhcp_option_short(u16_t options_out_len, u8_t *options, u16_t value)$/;"	f	file:
dhcp_option_trailer	lwip/src/core/ipv4/dhcp.c	/^dhcp_option_trailer(u16_t options_out_len, u8_t *options, struct pbuf *p_out)$/;"	f	file:
dhcp_parse_reply	lwip/src/core/ipv4/dhcp.c	/^dhcp_parse_reply(struct pbuf *p, struct dhcp *dhcp)$/;"	f	file:
dhcp_pcb	lwip/src/core/ipv4/dhcp.c	/^static struct udp_pcb *dhcp_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dhcp_pcb_refcount	lwip/src/core/ipv4/dhcp.c	/^static u8_t dhcp_pcb_refcount;$/;"	v	file:
dhcp_rebind	lwip/src/core/ipv4/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_reboot	lwip/src/core/ipv4/dhcp.c	/^dhcp_reboot(struct netif *netif)$/;"	f	file:
dhcp_recv	lwip/src/core/ipv4/dhcp.c	/^dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t port)$/;"	f	file:
dhcp_release	lwip/src/core/ipv4/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_release_and_stop	lwip/src/core/ipv4/dhcp.c	/^dhcp_release_and_stop(struct netif *netif)$/;"	f
dhcp_remove_struct	lwip/src/include/lwip/dhcp.h	106;"	d
dhcp_renew	lwip/src/core/ipv4/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_rx_options_given	lwip/src/core/ipv4/dhcp.c	/^u8_t  dhcp_rx_options_given[DHCP_OPTION_IDX_MAX];$/;"	v
dhcp_rx_options_val	lwip/src/core/ipv4/dhcp.c	/^u32_t dhcp_rx_options_val[DHCP_OPTION_IDX_MAX];$/;"	v
dhcp_select	lwip/src/core/ipv4/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_option_value	lwip/src/core/ipv4/dhcp.c	185;"	d	file:
dhcp_set_state	lwip/src/core/ipv4/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_set_struct	lwip/src/core/ipv4/dhcp.c	/^dhcp_set_struct(struct netif *netif, struct dhcp *dhcp)$/;"	f
dhcp_start	lwip/src/core/ipv4/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_state_enum_t	lwip/src/include/lwip/prot/dhcp.h	/^} dhcp_state_enum_t;$/;"	t	typeref:enum:__anon445
dhcp_stop	lwip/src/core/ipv4/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_supplied_address	lwip/src/core/ipv4/dhcp.c	/^dhcp_supplied_address(const struct netif *netif)$/;"	f
dhcp_t1_timeout	lwip/src/core/ipv4/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	lwip/src/core/ipv4/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	lwip/src/core/ipv4/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
digest	lwip/src/include/netif/ppp/chap-new.h	/^	const struct chap_digest_type *digest;$/;"	m	struct:chap_client_state	typeref:struct:chap_client_state::chap_digest_type
digest	lwip/src/include/netif/ppp/chap-new.h	/^	const struct chap_digest_type *digest;$/;"	m	struct:chap_server_state	typeref:struct:chap_server_state::chap_digest_type
dio0_intr_callback	source/main.c	/^void dio0_intr_callback(pint_pin_int_t pintr, uint32_t pmatch_status)$/;"	f
dio2_intr_callback	source/main.c	/^void dio2_intr_callback(pint_pin_int_t pintr, uint32_t pmatch_status)$/;"	f
dir	littlefs/littlefs_include/lfs.h	/^            lfs_block_t dir[2];$/;"	m	union:lfs_entry::lfs_disk_entry::__anon425
direct	drivers/fsl_clock.h	/^    bool direct;        \/*!< USB PLL CCO output control *\/$/;"	m	struct:_usb_pll_setup
direction	CMSIS_driver/Driver_I2C.h	/^  uint32_t direction        : 1;        \/\/\/< Direction: 0=Transmitter, 1=Receiver$/;"	m	struct:_ARM_I2C_STATUS
direction	component/i2c/i2c.h	/^    hal_i2c_direction_t direction; \/*!< A transfer direction, read or write. *\/$/;"	m	struct:_hal_i2c_master_transfer
direction	drivers/fsl_i2c.h	/^    i2c_direction_t direction; \/*!< Either #kI2C_Read or #kI2C_Write. *\/$/;"	m	struct:_i2c_master_transfer
direction	drivers/fsl_spi.h	/^    spi_shift_direction_t direction;    \/*!< MSB or LSB *\/$/;"	m	struct:_spi_master_config
direction	drivers/fsl_spi.h	/^    spi_shift_direction_t direction;    \/*!< MSB or LSB *\/$/;"	m	struct:_spi_slave_config
dirs	littlefs/littlefs_include/lfs.h	/^    lfs_dir_t *dirs;$/;"	m	struct:lfs
discard	lwip/src/include/netif/ppp/mppe.h	/^	unsigned int discard   :1;  \/* stateful mode packet loss flag *\/$/;"	m	struct:ppp_mppe_state
disconnect	lwip/src/include/netif/ppp/ppp_impl.h	/^  void (*disconnect) (ppp_pcb *pcb, void *ctx);$/;"	m	struct:link_callbacks
divhfclk	drivers/fsl_dmic.h	/^    pdm_div_t divhfclk;                 \/*!< DMIC Clock pre-divider values *\/$/;"	m	struct:_dmic_channel_config
divider	drivers/fsl_i2s.h	/^    uint16_t divider;     \/*!< Flexcomm function clock divider (1 - 4096) *\/$/;"	m	struct:_i2s_config
dmaAlign	usb/device/source/khci/usb_device_khci.h	/^            uint32_t dmaAlign : 1U;       \/*!< Whether the transferBuffer is DMA aligned or not *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct::__anon525::__anon526
dmaAlignBuffer	usb/device/source/khci/usb_device_khci.h	/^    uint8_t *dmaAlignBuffer; \/*!< This buffer is used to fix the transferBuffer or transferLength does$/;"	m	struct:_usb_device_khci_state_struct
dmaDescriptorsUsed	drivers/fsl_i2s_dma.c	/^        dmaDescriptorsUsed; \/*!< Number of DMA descriptors with valid data (in queue, excluding initial descriptor) *\/$/;"	m	struct:_i2s_dma_private_handle	file:
dmaHandle	drivers/fsl_i2c_cmsis.c	/^    dma_handle_t *dmaHandle;                    \/*!< DMA i2c handle.          *\/$/;"	m	struct:_cmsis_i2c_dma_driver_state	file:
dmaHandle	drivers/fsl_i2c_dma.h	/^    dma_handle_t *dmaHandle;                               \/*!< The DMA handler used. *\/$/;"	m	struct:_i2c_master_dma_handle
dmaHandle	drivers/fsl_i2s_dma.h	/^    dma_handle_t *dmaHandle;                           \/*!< DMA handle *\/$/;"	m	struct:_i2s_dma_handle
dmaResource	drivers/fsl_i2c_cmsis.c	/^    cmsis_i2c_dma_resource_t *dmaResource;      \/*!< i2c DMA resource.        *\/$/;"	m	struct:_cmsis_i2c_dma_driver_state	file:
dmaResource	drivers/fsl_spi_cmsis.c	/^    cmsis_spi_dma_resource_t *dmaResource;$/;"	m	struct:_cmsis_spi_dma_driver_state	file:
dmaRxDataHandle	drivers/fsl_spi_cmsis.c	/^    dma_handle_t *dmaRxDataHandle;$/;"	m	struct:_cmsis_spi_dma_driver_state	file:
dmaTxDataHandle	drivers/fsl_spi_cmsis.c	/^    dma_handle_t *dmaTxDataHandle;$/;"	m	struct:_cmsis_spi_dma_driver_state	file:
dmaTxSche	drivers/fsl_enet.h	/^    enet_dma_tx_sche dmaTxSche;                \/*!< Transmit arbitation. *\/$/;"	m	struct:enet_multiqueue_config
dma_burst_wrap_t	drivers/fsl_dma.h	/^} dma_burst_wrap_t;$/;"	t	typeref:enum:_dma_burst_wrap
dma_callback	drivers/fsl_dma.h	/^typedef void (*dma_callback)(struct _dma_handle *handle, void *userData, bool transferDone, uint32_t intmode);$/;"	t
dma_channel_config_t	drivers/fsl_dma.h	/^} dma_channel_config_t;$/;"	t	typeref:struct:_dma_channel_config
dma_channel_trigger_t	drivers/fsl_dma.h	/^} dma_channel_trigger_t;$/;"	t	typeref:struct:_dma_channel_trigger
dma_descriptor	doc/lwip/doc/ZeroCopyRx.c	/^   void* dma_descriptor;$/;"	m	struct:my_custom_pbuf	file:
dma_descriptor_t	drivers/fsl_dma.h	/^} dma_descriptor_t;$/;"	t	typeref:struct:_dma_descriptor
dma_handle_t	drivers/fsl_dma.h	/^} dma_handle_t;$/;"	t	typeref:struct:_dma_handle
dma_irq_t	drivers/fsl_dma.h	/^} dma_irq_t;$/;"	t	typeref:enum:_dma_int
dma_priority_t	drivers/fsl_dma.h	/^} dma_priority_t;$/;"	t	typeref:enum:_dma_priority
dma_request_source_t	device/LPC54018.h	/^} dma_request_source_t;$/;"	t	typeref:enum:_dma_request_source
dma_transfer_config_t	drivers/fsl_dma.h	/^} dma_transfer_config_t;$/;"	t	typeref:struct:_dma_transfer_config
dma_transfer_type_t	drivers/fsl_dma.h	/^} dma_transfer_type_t;$/;"	t	typeref:enum:_dma_transfer_type
dma_trigger_burst_t	drivers/fsl_dma.h	/^} dma_trigger_burst_t;$/;"	t	typeref:enum:_dma_trigger_burst
dma_trigger_type_t	drivers/fsl_dma.h	/^} dma_trigger_type_t;$/;"	t	typeref:enum:_dma_trigger_type
dma_xfercfg_t	drivers/fsl_dma.h	/^} dma_xfercfg_t;$/;"	t	typeref:struct:_dma_xfercfg
dmic_Callback	source/i2s_transfer.c	/^void dmic_Callback(DMIC_Type *base, dmic_dma_handle_t *handle, status_t status,$/;"	f
dmic_callback_t	drivers/fsl_dmic.h	/^typedef void (*dmic_callback_t)(void);$/;"	t
dmic_channel_config_t	drivers/fsl_dmic.h	/^} dmic_channel_config_t;$/;"	t	typeref:struct:_dmic_channel_config
dmic_channel_t	drivers/fsl_dmic.h	/^} dmic_channel_t;$/;"	t	typeref:enum:_dmic_channel
dmic_dma_handle_t	drivers/fsl_dmic_dma.h	/^typedef struct _dmic_dma_handle dmic_dma_handle_t;$/;"	t	typeref:struct:_dmic_dma_handle
dmic_dma_transfer_callback_t	drivers/fsl_dmic_dma.h	/^typedef void (*dmic_dma_transfer_callback_t)(DMIC_Type *base,$/;"	t
dmic_hwvad_callback_t	drivers/fsl_dmic.h	/^typedef void (*dmic_hwvad_callback_t)(void);$/;"	t
dmic_io_t	drivers/fsl_dmic.h	/^} dmic_io_t;$/;"	t	typeref:enum:_dmic_io
dmic_phy_sample_rate_t	drivers/fsl_dmic.h	/^} dmic_phy_sample_rate_t;$/;"	t	typeref:enum:_dmic_phy_sample_rate
dmic_transfer_t	drivers/fsl_dmic_dma.h	/^} dmic_transfer_t;$/;"	t	typeref:struct:_dmic_transfer
dns1	lwip/src/include/netif/ppp/ppp.h	/^  ip4_addr_t dns1, dns2;$/;"	m	struct:ppp_addrs
dns2	lwip/src/include/netif/ppp/ppp.h	/^  ip4_addr_t dns1, dns2;$/;"	m	struct:ppp_addrs
dns_addrtype	lwip/src/include/lwip/priv/api_msg.h	/^  u8_t dns_addrtype;$/;"	m	struct:dns_api_msg
dns_alloc_pcb	lwip/src/core/dns.c	/^dns_alloc_pcb(void)$/;"	f	file:
dns_alloc_random_port	lwip/src/core/dns.c	/^dns_alloc_random_port(void)$/;"	f	file:
dns_answer	lwip/src/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	lwip/src/include/lwip/priv/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_backupserver_available	lwip/src/core/dns.c	/^dns_backupserver_available(struct dns_table_entry *pentry)$/;"	f	file:
dns_call_found	lwip/src/core/dns.c	/^dns_call_found(u8_t idx, ip_addr_t *addr)$/;"	f	file:
dns_check_entries	lwip/src/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	lwip/src/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	lwip/src/core/dns.c	/^dns_compare_name(const char *query, struct pbuf *p, u16_t start_offset)$/;"	f	file:
dns_correct_response	lwip/src/core/dns.c	/^dns_correct_response(u8_t idx, u32_t ttl)$/;"	f	file:
dns_create_txid	lwip/src/core/dns.c	/^dns_create_txid(void)$/;"	f	file:
dns_enqueue	lwip/src/core/dns.c	/^dns_enqueue(const char *name, size_t hostnamelen, dns_found_callback found,$/;"	f	file:
dns_found_callback	lwip/src/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, const ip_addr_t *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	lwip/src/core/dns.c	/^dns_gethostbyname(const char *hostname, ip_addr_t *addr, dns_found_callback found,$/;"	f
dns_gethostbyname_addrtype	lwip/src/core/dns.c	/^dns_gethostbyname_addrtype(const char *hostname, ip_addr_t *addr, dns_found_callback found,$/;"	f
dns_getserver	lwip/src/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	lwip/src/include/lwip/prot/dns.h	/^struct dns_hdr {$/;"	s
dns_init	lwip/src/core/dns.c	/^dns_init(void)$/;"	f
dns_init_local	lwip/src/core/dns.c	/^dns_init_local(void)$/;"	f	file:
dns_last_pcb_idx	lwip/src/core/dns.c	/^static u8_t                   dns_last_pcb_idx;$/;"	v	file:
dns_local_addhost	lwip/src/core/dns.c	/^dns_local_addhost(const char *hostname, const ip_addr_t *addr)$/;"	f
dns_local_iterate	lwip/src/core/dns.c	/^dns_local_iterate(dns_found_callback iterator_fn, void *iterator_arg)$/;"	f
dns_local_lookup	lwip/src/core/dns.c	/^dns_local_lookup(const char *hostname, ip_addr_t *addr, u8_t dns_addrtype)$/;"	f
dns_local_removehost	lwip/src/core/dns.c	/^dns_local_removehost(const char *hostname, const ip_addr_t *addr)$/;"	f
dns_lookup	lwip/src/core/dns.c	/^dns_lookup(const char *name, ip_addr_t *addr LWIP_DNS_ADDRTYPE_ARG(u8_t dns_addrtype))$/;"	f	file:
dns_lookup_local	lwip/src/core/dns.c	/^dns_lookup_local(const char *hostname, ip_addr_t *addr LWIP_DNS_ADDRTYPE_ARG(u8_t dns_addrtype))$/;"	f	file:
dns_mquery_v4group	lwip/src/core/dns.c	/^const ip_addr_t dns_mquery_v4group = DNS_MQUERY_IPV4_GROUP_INIT;$/;"	v
dns_mquery_v6group	lwip/src/core/dns.c	/^const ip_addr_t dns_mquery_v6group = DNS_MQUERY_IPV6_GROUP_INIT;$/;"	v
dns_pcbs	lwip/src/core/dns.c	/^static struct udp_pcb        *dns_pcbs[DNS_MAX_SOURCE_PORTS];$/;"	v	typeref:struct:udp_pcb	file:
dns_query	lwip/src/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	lwip/src/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t port)$/;"	f	file:
dns_req_entry	lwip/src/core/dns.c	/^struct dns_req_entry {$/;"	s	file:
dns_requests	lwip/src/core/dns.c	/^static struct dns_req_entry   dns_requests[DNS_MAX_REQUESTS];$/;"	v	typeref:struct:dns_req_entry	file:
dns_send	lwip/src/core/dns.c	/^dns_send(u8_t idx)$/;"	f	file:
dns_seqno	lwip/src/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	lwip/src/core/dns.c	/^static ip_addr_t              dns_servers[DNS_MAX_SERVERS];$/;"	v	file:
dns_setserver	lwip/src/core/dns.c	/^dns_setserver(u8_t numdns, const ip_addr_t *dnsserver)$/;"	f
dns_skip_name	lwip/src/core/dns.c	/^dns_skip_name(struct pbuf *p, u16_t query_idx)$/;"	f	file:
dns_state_enum_t	lwip/src/core/dns.c	/^} dns_state_enum_t;$/;"	t	typeref:enum:__anon477	file:
dns_table	lwip/src/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	lwip/src/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_table_idx	lwip/src/core/dns.c	/^  u8_t dns_table_idx;$/;"	m	struct:dns_req_entry	file:
dns_tmr	lwip/src/core/dns.c	/^dns_tmr(void)$/;"	f
dns_txid	lwip/src/core/dns.c	/^static u16_t dns_txid;$/;"	v	file:
dnsaddr	lwip/src/include/netif/ppp/ipcp.h	/^    u32_t dnsaddr[2];	\/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_memp_free_pool	lwip/src/core/memp.c	/^do_memp_free_pool(const struct memp_desc *desc, void *mem)$/;"	f	file:
do_memp_malloc_pool	lwip/src/core/memp.c	/^do_memp_malloc_pool(const struct memp_desc *desc)$/;"	f	file:
doing_multilink	lwip/src/include/netif/ppp/ppp_impl.h	607;"	d
doing_multilink	lwip/src/netif/ppp/multilink.c	/^bool doing_multilink;		\/* multilink was enabled and agreed to *\/$/;"	v
done_socket	lwip/src/api/sockets.c	/^done_socket(struct lwip_sock *sock)$/;"	f	file:
done_socket	lwip/src/api/sockets.c	406;"	d	file:
doubleBuffEnable	drivers/fsl_enet.h	/^    bool doubleBuffEnable;                         \/*!< The double buffer is used in the descriptor. *\/$/;"	m	struct:_enet_handle
doubleBufferBusy	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t doubleBufferBusy : 2U; \/*!< How many buffers are primed, for control endpoint it is not used *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
down	lwip/src/include/netif/ppp/fsm.h	/^    void (*down)		\/* Called when fsm leaves PPP_FSM_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_igmp
drop	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
drv	CMSIS_driver/Driver_Common.h	/^  uint16_t drv;                         \/\/\/< Driver version$/;"	m	struct:_ARM_DRIVER_VERSION
drv_handle	drivers/freertos/fsl_i2c_freertos.h	/^    i2c_master_handle_t drv_handle; \/*!< A handle of the underlying driver, treated as opaque by the RTOS layer *\/$/;"	m	struct:_i2c_rtos_handle
drv_handle	drivers/freertos/fsl_spi_freertos.h	/^    spi_master_handle_t drv_handle; \/*!< Handle of the underlying driver, treated as opaque by the RTOS layer *\/$/;"	m	struct:_spi_rtos_handle
dstAddr	drivers/fsl_dma.h	/^    uint8_t *dstAddr;      \/*!< Destination data address *\/$/;"	m	struct:_dma_transfer_config
dstEndAddr	drivers/fsl_dma.h	/^    void *dstEndAddr;          \/*!< Last destination address of DMA transfer *\/$/;"	m	struct:_dma_descriptor
dstInc	drivers/fsl_dma.h	/^    uint8_t dstInc;         \/*!< Increment destination address by 'dstInc' x 'byteWidth' *\/$/;"	m	struct:_dma_xfercfg
dstStartAddr	drivers/fsl_dma.h	/^    void *dstStartAddr;             \/*!< Destination data address *\/$/;"	m	struct:_dma_channel_config
dst_ports	lwip/src/netif/bridgeif.c	/^  bridgeif_portmask_t dst_ports;$/;"	m	struct:bridgeif_fdb_static_entry_s	file:
dtd	usb/device/source/ehci/usb_device_ehci.h	/^    usb_device_ehci_dtd_struct_t *dtd;     \/*!< The DTD structure base address *\/$/;"	m	struct:_usb_device_ehci_state_struct
dtdCount	usb/device/source/ehci/usb_device_ehci.h	/^    int8_t dtdCount;                               \/*!< The idle DTD node count *\/$/;"	m	struct:_usb_device_ehci_state_struct
dtdFree	usb/device/source/ehci/usb_device_ehci.h	/^    usb_device_ehci_dtd_struct_t *dtdFree; \/*!< The idle DTD list head *\/$/;"	m	struct:_usb_device_ehci_state_struct
dtdHard	usb/device/source/ehci/usb_device_ehci.h	/^        *dtdHard[USB_DEVICE_CONFIG_ENDPOINTS * 2]; \/*!< The transferring DTD list head for each endpoint *\/$/;"	m	struct:_usb_device_ehci_state_struct
dtdInvalid	usb/device/source/ehci/usb_device_ehci.h	/^            uint32_t dtdInvalid : 1;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon523::__anon524
dtdTail	usb/device/source/ehci/usb_device_ehci.h	/^        *dtdTail[USB_DEVICE_CONFIG_ENDPOINTS * 2]; \/*!< The transferring DTD list tail for each endpoint *\/$/;"	m	struct:_usb_device_ehci_state_struct
dtdToken	usb/device/source/ehci/usb_device_ehci.h	/^        volatile uint32_t dtdToken;$/;"	m	union:_usb_device_ehci_dtd_struct::__anon521
dtdToken	usb/device/source/ehci/usb_device_ehci.h	/^        volatile uint32_t dtdToken;$/;"	m	union:_usb_device_ehci_qh_struct::__anon517
dtdTokenBitmap	usb/device/source/ehci/usb_device_ehci.h	/^        } dtdTokenBitmap;$/;"	m	union:_usb_device_ehci_dtd_struct::__anon521	typeref:struct:_usb_device_ehci_dtd_struct::__anon521::__anon522
dtdTokenBitmap	usb/device/source/ehci/usb_device_ehci.h	/^        } dtdTokenBitmap;$/;"	m	union:_usb_device_ehci_qh_struct::__anon517	typeref:struct:_usb_device_ehci_qh_struct::__anon517::__anon518
dtdTokenUnion	usb/device/source/ehci/usb_device_ehci.h	/^    } dtdTokenUnion;$/;"	m	struct:_usb_device_ehci_dtd_struct	typeref:union:_usb_device_ehci_dtd_struct::__anon521
dtdTokenUnion	usb/device/source/ehci/usb_device_ehci.h	/^    } dtdTokenUnion;$/;"	m	struct:_usb_device_ehci_qh_struct	typeref:union:_usb_device_ehci_qh_struct::__anon517
dtePresent	vcom/virtual_com.h	/^    bool dtePresent;          \/* A flag to indicate whether DTE is present.         *\/$/;"	m	struct:_usb_cdc_acm_info
dteStatus	vcom/virtual_com.h	/^    uint8_t dteStatus;        \/* Status of data terminal equipment                  *\/$/;"	m	struct:_usb_cdc_acm_info
dump_E	codec2/dump.c	/^void dump_E(float E) {$/;"	f
dump_Ew	codec2/dump.c	/^void dump_Ew(COMP Ew[]) {$/;"	f
dump_Fw	codec2/dump.c	/^void dump_Fw(COMP Fw[]) {$/;"	f
dump_Pw	codec2/dump.c	/^void dump_Pw(float Pw[]) {$/;"	f
dump_Pwb	codec2/dump.c	/^void dump_Pwb(float Pwb[]) {$/;"	f
dump_Rw	codec2/dump.c	/^void dump_Rw(float Rw[]) {$/;"	f
dump_Sn	codec2/dump.c	/^void dump_Sn(int m_pitch, float Sn[]) {$/;"	f
dump_Sw	codec2/dump.c	/^void dump_Sw(COMP Sw[]) {$/;"	f
dump_Sw_	codec2/dump.c	/^void dump_Sw_(COMP Sw_[]) {$/;"	f
dump_ak	codec2/dump.c	/^void dump_ak(float ak[], int order) {$/;"	f
dump_ak_	codec2/dump.c	/^void dump_ak_(float ak_[], int order) {$/;"	f
dump_bg	codec2/dump.c	/^void dump_bg(float e, float bg_est, float percent_uv) {$/;"	f
dump_dec	codec2/dump.c	/^void dump_dec(COMP Fw[]) {$/;"	f
dump_e	codec2/dump.c	/^void dump_e(float e_hz[]) {$/;"	f
dump_hephase	codec2/dump.c	/^void dump_hephase(int ind[], int dim) {$/;"	f
dump_lpc_snr	codec2/dump.c	/^void dump_lpc_snr(float snr) {$/;"	f
dump_lsp	codec2/dump.c	/^void dump_lsp(float lsp[]) {$/;"	f
dump_lsp_	codec2/dump.c	/^void dump_lsp_(float lsp_[]) {$/;"	f
dump_mel	codec2/dump.c	/^void dump_mel(float mel[], int order) {$/;"	f
dump_mel_indexes	codec2/dump.c	/^void dump_mel_indexes(int mel_indexes[], int order) {$/;"	f
dump_model	codec2/dump.c	/^void dump_model(MODEL *model) {$/;"	f
dump_off	codec2/dump.c	/^void dump_off(){$/;"	f
dump_on	codec2/dump.c	/^void dump_on(char p[]) {$/;"	f
dump_phase	codec2/dump.c	/^void dump_phase(float phase[], int L) {$/;"	f
dump_phase_	codec2/dump.c	/^void dump_phase_(float phase_[], int L) {$/;"	f
dump_quantised_model	codec2/dump.c	/^void dump_quantised_model(MODEL *model) {$/;"	f
dump_snr	codec2/dump.c	/^void dump_snr(float snr) {$/;"	f
dump_softdec	codec2/dump.c	/^void dump_softdec(float *softdec, int n)$/;"	f
dump_sq	codec2/dump.c	/^void dump_sq(int m_pitch, float sq[]) {$/;"	f
dump_weights	codec2/dump.c	/^void dump_weights(float w[], int order) {$/;"	f
dumpon	codec2/dump.c	/^static int dumpon = 0;$/;"	v	file:
dupacks	lwip/src/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
dutyCyclePercent	drivers/fsl_sctimer.h	/^    uint8_t dutyCyclePercent;         \/*!< PWM pulse width, value should be between 1 to 100$/;"	m	struct:_sctimer_pwm_signal_param
dwClockFrequency	usb/device/class/usb_device_ccid.h	/^    uint32_t dwClockFrequency; \/*!< Current setting of the ICC clock frequency in KHz. This is an integer value *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
dwClockFrequency	usb/device/class/usb_device_ccid.h	/^    uint32_t dwClockFrequency; \/*!< ICC clock frequency in kHz. This is an integer value *\/$/;"	m	struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
dwClockFrequency	usb/device/class/usb_device_video.h	/^    uint32_t dwClockFrequency; \/*!< The device clock frequency in Hz for the specified format. This specifies the$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
dwDataRate	usb/device/class/usb_device_ccid.h	/^    uint32_t dwDataRate;       \/*!< Current setting of the ICC data rate in bps. This is an integer value *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
dwDataRate	usb/device/class/usb_device_ccid.h	/^    uint32_t dwDataRate;       \/*!< ICC data rate in BPD *\/$/;"	m	struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
dwFrameInterval	usb/device/class/usb_device_video.h	/^            uint8_t dwFrameInterval : 1U; \/*!< dwFrameInterval field.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct::__anon506::__anon507
dwFrameInterval	usb/device/class/usb_device_video.h	/^    uint32_t dwFrameInterval; \/*!< Frame interval in 100ns units.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;                  \/*!< Size of abProtocolDataStructure field of this message *\/$/;"	m	struct:_usb_device_ccid_parameters_response
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;             \/*!< 1U + Size of abPINDataStructure field of this message *\/$/;"	m	struct:_usb_device_ccid_secure_pin_operation_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;           \/*!< 20U + Size of abPINApdu field of this message *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;          \/*!< 12U + Size of abPINApdu field of this message *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;         \/*!< (dwLength = 0x05U) *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t0_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;         \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_data_rate_and_clock_frequency_response
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;         \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_t0_apdu_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;         \/*!< Message-specific data length(8U bytes) *\/$/;"	m	struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;         \/*!< The value is 0x05U *\/$/;"	m	struct:_usb_device_ccid_parameters_T0_response
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;        \/*!< Size of abData field of this message *\/$/;"	m	struct:_usb_device_ccid_secure_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;        \/*!< Size of abData field of this message *\/$/;"	m	struct:_usb_device_ccid_transfer_block_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;       \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_data_block_response
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;      \/*!< (dwLength = 0x07U) *\/$/;"	m	struct:_usb_device_ccid_set_parameters_t1_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;      \/*!< The value is 0x07U *\/$/;"	m	struct:_usb_device_ccid_parameters_T1_response
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;     \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_clock_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_abort_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_common_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_common_response
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_escape_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_get_parameters_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_get_slot_status_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_mechanical_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_power_off_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_power_on_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_reset_parameters_command
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Message-specific data length *\/$/;"	m	struct:_usb_device_ccid_slot_status_response
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Size of abData field of this message *\/$/;"	m	struct:_usb_device_ccid_escape_response
dwLength	usb/device/class/usb_device_ccid.h	/^    uint32_t dwLength;    \/*!< Size of abProtocolDataStructure field of this message *\/$/;"	m	struct:_usb_device_ccid_set_parameters_command
dwMaxPayloadTransferSize	usb/device/class/usb_device_video.h	/^    uint32_t dwMaxPayloadTransferSize; \/*!< Specifies the maximum number of bytes that the device can transmit or$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
dwMaxPayloadTransferSize	usb/device/class/usb_device_video.h	/^    uint32_t dwMaxPayloadTransferSize; \/*!< Specifies the maximum number of bytes that the device can transmit or$/;"	m	struct:_usb_device_video_still_probe_and_commit_controls_struct
dwMaxVideoFrameSize	usb/device/class/usb_device_video.h	/^    uint32_t dwMaxVideoFrameSize;      \/*!< Maximum still image size in bytes.*\/$/;"	m	struct:_usb_device_video_still_probe_and_commit_controls_struct
dwMaxVideoFrameSize	usb/device/class/usb_device_video.h	/^    uint32_t dwMaxVideoFrameSize;      \/*!< Maximum video frame or codec-specific segment size in bytes.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
dwPresentationTime	usb/device/class/usb_device_video.h	/^    uint32_t dwPresentationTime;      \/*!< Presentation time stamp (PTS) field.*\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct
dx	emwin/emWin_header/WM.h	/^  int dx, dy, da;$/;"	m	struct:__anon287
dx	emwin/emWin_header/WM.h	/^  int dx, dy;$/;"	m	struct:__anon290
dy	emwin/emWin_header/WM.h	/^  int dx, dy, da;$/;"	m	struct:__anon287
dy	emwin/emWin_header/WM.h	/^  int dx, dy;$/;"	m	struct:__anon290
dynamicDevice	drivers/fsl_emc.h	/^        dynamicDevice;        \/*!< All chips shall use the same device setting. mixed use are not supported. *\/$/;"	m	struct:_emc_dynamic_chip_config
e16	lwip/src/include/netif/ppp/eui64.h	/^    u16_t e16[4];$/;"	m	union:__anon434
e32	lwip/src/include/netif/ppp/eui64.h	/^    u32_t e32[2];$/;"	m	union:__anon434
e8	lwip/src/include/netif/ppp/eui64.h	/^    u8_t e8[8];$/;"	m	union:__anon434
eAbortSleep	amazon-freertos/include/task.h	/^	eAbortSleep = 0,		\/* A task has been made ready or a context switch pended since portSUPPORESS_TICKS_AND_SLEEP() was called - abort entering a sleep mode. *\/$/;"	e	enum:__anon4
eBlocked	amazon-freertos/include/task.h	/^	eBlocked,		\/* The task being queried is in the Blocked state. *\/$/;"	e	enum:__anon2
eCurrentState	amazon-freertos/include/task.h	/^	eTaskState eCurrentState;		\/* The state in which the task existed when the structure was populated. *\/$/;"	m	struct:xTASK_STATUS
eDeleted	amazon-freertos/include/task.h	/^	eDeleted,		\/* The task being queried has been deleted, but its TCB has not yet been freed. *\/$/;"	e	enum:__anon2
eIncrement	amazon-freertos/include/task.h	/^	eIncrement,					\/* Increment the task's notification value. *\/$/;"	e	enum:__anon3
eInvalid	amazon-freertos/include/task.h	/^	eInvalid		\/* Used as an 'invalid state' value. *\/$/;"	e	enum:__anon2
eNoAction	amazon-freertos/include/task.h	/^	eNoAction = 0,				\/* Notify the task without updating its notify value. *\/$/;"	e	enum:__anon3
eNoTasksWaitingTimeout	amazon-freertos/include/task.h	/^	eNoTasksWaitingTimeout	\/* No tasks are waiting for a timeout so it is safe to enter a sleep mode that can only be exited by an external interrupt. *\/$/;"	e	enum:__anon4
eNotifyAction	amazon-freertos/include/task.h	/^} eNotifyAction;$/;"	t	typeref:enum:__anon3
eReady	amazon-freertos/include/task.h	/^	eReady,			\/* The task being queried is in a read or pending ready list. *\/$/;"	e	enum:__anon2
eRunning	amazon-freertos/include/task.h	/^	eRunning = 0,	\/* A task is querying the state of itself, so must be running. *\/$/;"	e	enum:__anon2
eSetBits	amazon-freertos/include/task.h	/^	eSetBits,					\/* Set bits in the task's notification value. *\/$/;"	e	enum:__anon3
eSetValueWithOverwrite	amazon-freertos/include/task.h	/^	eSetValueWithOverwrite,		\/* Set the task's notification value to a specific value even if the previous value has not yet been read by the task. *\/$/;"	e	enum:__anon3
eSetValueWithoutOverwrite	amazon-freertos/include/task.h	/^	eSetValueWithoutOverwrite	\/* Set the task's notification value if the previous value has been read by the task. *\/$/;"	e	enum:__anon3
eSleepModeStatus	amazon-freertos/include/task.h	/^} eSleepModeStatus;$/;"	t	typeref:enum:__anon4
eStandardSleep	amazon-freertos/include/task.h	/^	eStandardSleep,			\/* Enter a sleep mode that will not last any longer than the expected idle time. *\/$/;"	e	enum:__anon4
eSuspended	amazon-freertos/include/task.h	/^	eSuspended,		\/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. *\/$/;"	e	enum:__anon2
eTaskConfirmSleepModeStatus	amazon-freertos/freertos/tasks.c	/^	eSleepModeStatus eTaskConfirmSleepModeStatus( void )$/;"	f
eTaskGetState	amazon-freertos/freertos/tasks.c	/^	eTaskState eTaskGetState( TaskHandle_t xTask )$/;"	f
eTaskGetState	amazon-freertos/include/mpu_wrappers.h	58;"	d
eTaskState	amazon-freertos/include/task.h	/^} eTaskState;$/;"	t	typeref:enum:__anon2
eTaskStateGet	amazon-freertos/include/FreeRTOS.h	913;"	d
ea_id	lwip/src/include/netif/ppp/eap.h	/^	u_char ea_id;		\/* Current id *\/$/;"	m	struct:eap_auth
ea_keyflags	lwip/src/include/netif/ppp/eap.h	/^	u32_t ea_keyflags;	\/* SRP shared key usage flags *\/$/;"	m	struct:eap_auth
ea_name	lwip/src/include/netif/ppp/eap.h	/^	const char *ea_name;	\/* Our name *\/$/;"	m	struct:eap_auth
ea_namelen	lwip/src/include/netif/ppp/eap.h	/^	u_short ea_namelen;	\/* Length of our name *\/$/;"	m	struct:eap_auth
ea_peer	lwip/src/include/netif/ppp/eap.h	/^	char ea_peer[MAXNAMELEN +1];	\/* Peer's name *\/$/;"	m	struct:eap_auth
ea_peerlen	lwip/src/include/netif/ppp/eap.h	/^	u_short ea_peerlen;	\/* Length of peer's name *\/$/;"	m	struct:eap_auth
ea_requests	lwip/src/include/netif/ppp/eap.h	/^	u_char ea_requests;	\/* Number of Requests sent\/received *\/$/;"	m	struct:eap_auth
ea_responses	lwip/src/include/netif/ppp/eap.h	/^	u_char ea_responses;	\/* Number of Responses *\/$/;"	m	struct:eap_auth
ea_session	lwip/src/include/netif/ppp/eap.h	/^	void *ea_session;	\/* Authentication library linkage *\/$/;"	m	struct:eap_auth
ea_skey	lwip/src/include/netif/ppp/eap.h	/^	u_char *ea_skey;	\/* Shared encryption key *\/$/;"	m	struct:eap_auth
ea_state	lwip/src/include/netif/ppp/eap.h	/^	enum eap_state_code ea_state;$/;"	m	struct:eap_auth	typeref:enum:eap_auth::eap_state_code
ea_type	lwip/src/include/netif/ppp/eap.h	/^	u_char ea_type;		\/* One of EAPT_* *\/$/;"	m	struct:eap_auth
eap	lwip/src/include/netif/ppp/ppp.h	/^  eap_state eap;            \/* EAP data *\/$/;"	m	struct:ppp_pcb_s
eapBadAuth	lwip/src/include/netif/ppp/eap.h	/^	eapBadAuth	\/* Failed authentication *\/$/;"	e	enum:eap_state_code
eapClosed	lwip/src/include/netif/ppp/eap.h	/^	eapClosed,	\/* Authentication not in use *\/$/;"	e	enum:eap_state_code
eapIdentify	lwip/src/include/netif/ppp/eap.h	/^	eapIdentify,	\/* EAP Identify sent *\/$/;"	e	enum:eap_state_code
eapInitial	lwip/src/include/netif/ppp/eap.h	/^	eapInitial = 0,	\/* No EAP authentication yet requested *\/$/;"	e	enum:eap_state_code
eapListen	lwip/src/include/netif/ppp/eap.h	/^	eapListen,	\/* Client ready (and timer running) *\/$/;"	e	enum:eap_state_code
eapMD5Chall	lwip/src/include/netif/ppp/eap.h	/^	eapMD5Chall,	\/* Sent MD5-Challenge *\/$/;"	e	enum:eap_state_code
eapOpen	lwip/src/include/netif/ppp/eap.h	/^	eapOpen,	\/* Completed authentication *\/$/;"	e	enum:eap_state_code
eapPending	lwip/src/include/netif/ppp/eap.h	/^	eapPending,	\/* Waiting for LCP (no timer) *\/$/;"	e	enum:eap_state_code
eapSRP1	lwip/src/include/netif/ppp/eap.h	/^	eapSRP1,	\/* Sent EAP SRP-SHA1 Subtype 1 *\/$/;"	e	enum:eap_state_code
eapSRP2	lwip/src/include/netif/ppp/eap.h	/^	eapSRP2,	\/* Sent EAP SRP-SHA1 Subtype 2 *\/$/;"	e	enum:eap_state_code
eapSRP3	lwip/src/include/netif/ppp/eap.h	/^	eapSRP3,	\/* Sent EAP SRP-SHA1 Subtype 3 *\/$/;"	e	enum:eap_state_code
eapSRP4	lwip/src/include/netif/ppp/eap.h	/^	eapSRP4,	\/* Sent EAP SRP-SHA1 Subtype 4 *\/$/;"	e	enum:eap_state_code
eap_allow_req	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  eap_allow_req;           \/* Max Requests allowed *\/$/;"	m	struct:ppp_settings_s
eap_auth	lwip/src/include/netif/ppp/eap.h	/^struct eap_auth {$/;"	s
eap_authpeer	lwip/src/netif/ppp/eap.c	/^void eap_authpeer(ppp_pcb *pcb, const char *localname) {$/;"	f
eap_authwithpeer	lwip/src/netif/ppp/eap.c	/^void eap_authwithpeer(ppp_pcb *pcb, const char *localname) {$/;"	f
eap_chap_response	lwip/src/netif/ppp/eap.c	/^static void eap_chap_response(ppp_pcb *pcb, u_char id, u_char *hash, const char *name, int namelen) {$/;"	f	file:
eap_client_active	lwip/src/include/netif/ppp/eap.h	91;"	d
eap_client_timeout	lwip/src/netif/ppp/eap.c	/^static void eap_client_timeout(void *arg) {$/;"	f	file:
eap_codenames	lwip/src/netif/ppp/eap.c	/^static const char* const eap_codenames[] = {$/;"	v	file:
eap_failure	lwip/src/netif/ppp/eap.c	/^static void eap_failure(ppp_pcb *pcb, u_char *inp, int id, int len) {$/;"	f	file:
eap_figure_next_state	lwip/src/netif/ppp/eap.c	/^static void eap_figure_next_state(ppp_pcb *pcb, int status) {$/;"	f	file:
eap_init	lwip/src/netif/ppp/eap.c	/^static void eap_init(ppp_pcb *pcb) {$/;"	f	file:
eap_input	lwip/src/netif/ppp/eap.c	/^static void eap_input(ppp_pcb *pcb, u_char *inp, int inlen) {$/;"	f	file:
eap_lowerdown	lwip/src/netif/ppp/eap.c	/^static void eap_lowerdown(ppp_pcb *pcb) {$/;"	f	file:
eap_lowerup	lwip/src/netif/ppp/eap.c	/^static void eap_lowerup(ppp_pcb *pcb) {$/;"	f	file:
eap_max_transmits	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  eap_max_transmits;       \/* Max Requests allowed *\/$/;"	m	struct:ppp_settings_s
eap_option_list	lwip/src/netif/ppp/eap.c	/^static option_t eap_option_list[] = {$/;"	v	file:
eap_printpkt	lwip/src/netif/ppp/eap.c	/^static int eap_printpkt(const u_char *inp, int inlen, void (*printer) (void *, const char *, ...), void *arg) {$/;"	f	file:
eap_protent	lwip/src/netif/ppp/eap.c	/^const struct protent eap_protent = {$/;"	v	typeref:struct:protent
eap_protrej	lwip/src/netif/ppp/eap.c	/^static void eap_protrej(ppp_pcb *pcb) {$/;"	f	file:
eap_rechallenge	lwip/src/netif/ppp/eap.c	/^static void eap_rechallenge(void *arg) {$/;"	f	file:
eap_req_time	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  eap_req_time;            \/* Time to wait (for retransmit\/fail) *\/$/;"	m	struct:ppp_settings_s
eap_request	lwip/src/netif/ppp/eap.c	/^static void eap_request(ppp_pcb *pcb, u_char *inp, int id, int len) {$/;"	f	file:
eap_response	lwip/src/netif/ppp/eap.c	/^static void eap_response(ppp_pcb *pcb, u_char *inp, int id, int len) {$/;"	f	file:
eap_send_failure	lwip/src/netif/ppp/eap.c	/^static void eap_send_failure(ppp_pcb *pcb) {$/;"	f	file:
eap_send_nak	lwip/src/netif/ppp/eap.c	/^static void eap_send_nak(ppp_pcb *pcb, u_char id, u_char type) {$/;"	f	file:
eap_send_request	lwip/src/netif/ppp/eap.c	/^static void eap_send_request(ppp_pcb *pcb) {$/;"	f	file:
eap_send_response	lwip/src/netif/ppp/eap.c	/^static void eap_send_response(ppp_pcb *pcb, u_char id, u_char typenum, const u_char *str, int lenstr) {$/;"	f	file:
eap_send_success	lwip/src/netif/ppp/eap.c	/^static void eap_send_success(ppp_pcb *pcb) {$/;"	f	file:
eap_server_active	lwip/src/include/netif/ppp/eap.h	93;"	d
eap_server_timeout	lwip/src/netif/ppp/eap.c	/^static void eap_server_timeout(void *arg) {$/;"	f	file:
eap_srp_response	lwip/src/netif/ppp/eap.c	/^eap_srp_response(esp, id, subtypenum, str, lenstr)$/;"	f	file:
eap_srpval_response	lwip/src/netif/ppp/eap.c	/^eap_srpval_response(esp, id, flags, str)$/;"	f	file:
eap_state	lwip/src/include/netif/ppp/eap.h	/^typedef struct eap_state {$/;"	s
eap_state	lwip/src/include/netif/ppp/eap.h	/^} eap_state;$/;"	t	typeref:struct:eap_state
eap_state_code	lwip/src/include/netif/ppp/eap.h	/^enum eap_state_code {$/;"	g
eap_state_name	lwip/src/netif/ppp/eap.c	/^static const char * eap_state_name(enum eap_state_code esc)$/;"	f	file:
eap_success	lwip/src/netif/ppp/eap.c	/^static void eap_success(ppp_pcb *pcb, u_char *inp, int id, int len) {$/;"	f	file:
eap_timeout_time	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  eap_timeout_time;        \/* Time to wait (for retransmit\/fail) *\/$/;"	m	struct:ppp_settings_s
eap_typenames	lwip/src/netif/ppp/eap.c	/^static const char* const eap_typenames[] = {$/;"	v	file:
ear_protection	codec2/codec2.c	/^static void ear_protection(float in_out[], int n) {$/;"	f	file:
ecp_allowoptions	lwip/src/netif/ppp/lwip_ecp.c	/^ecp_options ecp_allowoptions[NUM_PPP];	\/* what we'll agree to do *\/$/;"	v
ecp_callbacks	lwip/src/netif/ppp/lwip_ecp.c	/^static const fsm_callbacks ecp_callbacks = {$/;"	v	file:
ecp_fsm	lwip/src/netif/ppp/lwip_ecp.c	/^fsm ecp_fsm[NUM_PPP];$/;"	v
ecp_gotoptions	lwip/src/netif/ppp/lwip_ecp.c	/^ecp_options ecp_gotoptions[NUM_PPP];	\/* what the peer agreed to do *\/$/;"	v
ecp_hisoptions	lwip/src/netif/ppp/lwip_ecp.c	/^ecp_options ecp_hisoptions[NUM_PPP];	\/* what we agreed to do *\/$/;"	v
ecp_init	lwip/src/netif/ppp/lwip_ecp.c	/^ecp_init(unit)$/;"	f	file:
ecp_option_list	lwip/src/netif/ppp/lwip_ecp.c	/^static option_t ecp_option_list[] = {$/;"	v	file:
ecp_options	lwip/src/include/netif/ppp/ecp.h	/^typedef struct ecp_options {$/;"	s
ecp_options	lwip/src/include/netif/ppp/ecp.h	/^} ecp_options;$/;"	t	typeref:struct:ecp_options
ecp_printpkt	lwip/src/netif/ppp/lwip_ecp.c	/^ecp_printpkt(p, plen, printer, arg)$/;"	f	file:
ecp_protent	lwip/src/netif/ppp/lwip_ecp.c	/^const struct protent ecp_protent = {$/;"	v	typeref:struct:protent
ecp_wantoptions	lwip/src/netif/ppp/lwip_ecp.c	/^ecp_options ecp_wantoptions[NUM_PPP];	\/* what to request the peer to use *\/$/;"	v
elen	littlefs/littlefs_include/lfs.h	/^        uint8_t elen;$/;"	m	struct:lfs_entry::lfs_disk_entry
elen	littlefs/littlefs_include/lfs.h	/^        uint8_t elen;$/;"	m	struct:lfs_superblock::lfs_disk_superblock
emcClkDiv	drivers/fsl_emc.h	/^    uint8_t emcClkDiv;        \/*!< EMC_CLK = AHB_CLK \/ (emc_clkDiv + 1). *\/$/;"	m	struct:_emc_basic_config
emc_basic_config_t	drivers/fsl_emc.h	/^} emc_basic_config_t;$/;"	t	typeref:struct:_emc_basic_config
emc_dynamic_chip_config_t	drivers/fsl_emc.h	/^} emc_dynamic_chip_config_t;$/;"	t	typeref:struct:_emc_dynamic_chip_config
emc_dynamic_device_t	drivers/fsl_emc.h	/^} emc_dynamic_device_t;$/;"	t	typeref:enum:_emc_dynamic_device
emc_dynamic_read_t	drivers/fsl_emc.h	/^} emc_dynamic_read_t;$/;"	t	typeref:enum:_emc_dynamic_read
emc_dynamic_timing_config_t	drivers/fsl_emc.h	/^} emc_dynamic_timing_config_t;$/;"	t	typeref:struct:_emc_dynamic_timing_config
emc_endian_mode_t	drivers/fsl_emc.h	/^} emc_endian_mode_t;$/;"	t	typeref:enum:_emc_endian_mode
emc_fbclk_src_t	drivers/fsl_emc.h	/^} emc_fbclk_src_t;$/;"	t	typeref:enum:_emc_fbclk_src
emc_static_chip_config_t	drivers/fsl_emc.h	/^} emc_static_chip_config_t;$/;"	t	typeref:struct:_emc_static_chip_config
emc_static_memwidth_t	drivers/fsl_emc.h	/^} emc_static_memwidth_t;$/;"	t	typeref:enum:_emc_static_memwidth
emc_static_special_config_t	drivers/fsl_emc.h	/^} emc_static_special_config_t;$/;"	t	typeref:enum:_emc_static_special_config
enableBidirection_h	drivers/fsl_sctimer.h	/^    bool enableBidirection_h;           \/*!< true: Up-down count mode for the H or unified counter$/;"	m	struct:_sctimer_config
enableBidirection_l	drivers/fsl_sctimer.h	/^    bool enableBidirection_l;           \/*!< true: Up-down count mode for the L or unified counter$/;"	m	struct:_sctimer_config
enableContinuousSCLK	drivers/fsl_usart.h	/^    bool enableContinuousSCLK;            \/*!< USART continuous Clock generation enable in synchronous master mode. *\/$/;"	m	struct:_usart_config
enableCounterReset	drivers/fsl_ctimer.h	/^    bool enableCounterReset;                  \/*!< true: Match will reset the counter$/;"	m	struct:_ctimer_match_config
enableCounterStop	drivers/fsl_ctimer.h	/^    bool enableCounterStop;                   \/*!< true: Match will stop the counter$/;"	m	struct:_ctimer_match_config
enableCounterUnify	drivers/fsl_sctimer.h	/^    bool enableCounterUnify;            \/*!< true: SCT operates as a unified 32-bit counter;$/;"	m	struct:_sctimer_config
enableInterrupt	drivers/fsl_ctimer.h	/^    bool enableInterrupt;                     \/*!< true: Generate interrupt upon match$/;"	m	struct:_ctimer_match_config
enableLoopback	drivers/fsl_spi.h	/^    bool enableLoopback;                \/*!< Enable loopback for test purpose *\/$/;"	m	struct:_spi_master_config
enableMaster	component/i2c/i2c.h	/^    bool enableMaster;     \/*!< Enables the HAL I2C peripheral at initialization time. *\/$/;"	m	struct:_hal_i2c_master_config
enableMaster	drivers/fsl_i2c.h	/^    bool enableMaster;     \/*!< Whether to enable master mode. *\/$/;"	m	struct:_i2c_master_config
enableMaster	drivers/fsl_spi.h	/^    bool enableMaster;                  \/*!< Enable SPI at initialization time *\/$/;"	m	struct:_spi_master_config
enableRx	component/serial_manager/serial_port_uart.h	/^    uint8_t enableRx;                               \/*!< Enable RX *\/$/;"	m	struct:_serial_port_uart_config
enableRx	component/uart/uart.h	/^    uint8_t enableRx;                       \/*!< Enable RX *\/$/;"	m	struct:_hal_uart_config
enableRx	drivers/fsl_usart.h	/^    bool enableRx;                        \/*!< Enable RX *\/$/;"	m	struct:_usart_config
enableSignExtend	drivers/fsl_dmic.h	/^    bool enableSignExtend; \/*!< sign extend feature which allows processing of 24bit audio data on 32bit machine *\/$/;"	m	struct:_dmic_channel_config
enableSlave	component/i2c/i2c.h	/^    bool enableSlave;      \/*!< Enables the HAL I2C peripheral at initialization time. *\/$/;"	m	struct:_hal_i2c_slave_config
enableSlave	drivers/fsl_i2c.h	/^    bool enableSlave; \/*!< Enable slave mode. *\/$/;"	m	struct:_i2c_slave_config
enableSlave	drivers/fsl_spi.h	/^    bool enableSlave;                   \/*!< Enable SPI at initialization time *\/$/;"	m	struct:_spi_slave_config
enableTimeout	drivers/fsl_i2c.h	/^    bool enableTimeout;    \/*!< Enable internal timeout function. *\/$/;"	m	struct:_i2c_master_config
enableTx	component/serial_manager/serial_port_uart.h	/^    uint8_t enableTx;                               \/*!< Enable TX *\/$/;"	m	struct:_serial_port_uart_config
enableTx	component/uart/uart.h	/^    uint8_t enableTx;                       \/*!< Enable TX *\/$/;"	m	struct:_hal_uart_config
enableTx	drivers/fsl_usart.h	/^    bool enableTx;                        \/*!< Enable TX *\/$/;"	m	struct:_usart_config
encode_Wo	codec2/quantise.c	/^int encode_Wo(C2CONST *c2const, float Wo, int bits)$/;"	f
encode_WoE	codec2/quantise.c	/^int encode_WoE(MODEL *model, float e, float xq[])$/;"	f
encode_energy	codec2/quantise.c	/^int encode_energy(float e, int bits)$/;"	f
encode_log_Wo	codec2/quantise.c	/^int encode_log_Wo(C2CONST *c2const, float Wo, int bits)$/;"	f
encode_lspds_scalar	codec2/quantise.c	/^void encode_lspds_scalar($/;"	f
encode_lsps_diff_freq_vq	codec2/quantise.c	/^void encode_lsps_diff_freq_vq(int indexes[], float lsp[], int order)$/;"	f
encode_lsps_diff_time	codec2/quantise.c	/^void encode_lsps_diff_time(int indexes[],$/;"	f
encode_lsps_scalar	codec2/quantise.c	/^void encode_lsps_scalar(int indexes[], float lsp[], int order)$/;"	f
encode_lsps_vq	codec2/quantise.c	/^void encode_lsps_vq(int *indexes, float *x, float *xq, int order)$/;"	f
encode_mels_scalar	codec2/quantise.c	/^void encode_mels_scalar(int indexes[], float mels[], int order)$/;"	f
encoding_table	codec2/golay23.c	/^int static encoding_table[4096];$/;"	v	file:
encoding_table	codec2/golayenctable.h	/^const int static encoding_table[]={$/;"	v
enctype	lwip/src/include/netif/ppp/ecp.h	/^    unsigned enctype;		\/* Encryption type *\/$/;"	m	struct:ecp_options
end	drivers/fsl_enet.h	/^    uint32_t end;                    \/*!< The end index of the ring. *\/$/;"	m	struct:_enet_ptp_time_data_ring
endOfFrame	usb/device/class/usb_device_video.h	/^            uint8_t endOfFrame : 1U; \/*!< End of Frame. This bit indicates the end of a video frame and is set in the$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
endOfHeader	usb/device/class/usb_device_video.h	/^            uint8_t endOfHeader : 1U; \/*!< End of Header. This bit, when set, indicates the end of the BFH fields.*\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
end_point	drivers/fsl_pint.h	/^    bool end_point;$/;"	m	struct:_pint_pmatch_cfg
endian	drivers/fsl_emc.h	/^    emc_endian_mode_t endian; \/*!< Endian mode . *\/$/;"	m	struct:_emc_basic_config
endp_class_names	lwip/src/netif/ppp/multilink.c	/^static char *endp_class_names[] = {$/;"	v	file:
endpoint	lwip/src/include/netif/ppp/lcp.h	/^    struct epdisc endpoint;	\/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
endpoint	usb/device/class/usb_device_class.h	/^    usb_device_endpoint_struct_t *endpoint; \/*!< Endpoint structure list*\/$/;"	m	struct:_usb_device_endpoint_list
endpoint	usb/include/usb_spec.h	/^    usb_descriptor_endpoint_t endpoint;           \/* Endpoint descriptor *\/$/;"	m	union:_usb_descriptor_union
endpointAddress	usb/device/class/usb_device_class.h	/^    uint8_t endpointAddress; \/*!< Endpoint address*\/$/;"	m	struct:_usb_device_endpoint_struct
endpointAddress	usb/device/include/usb_device.h	/^    uint8_t endpointAddress; \/*!< Endpoint address *\/$/;"	m	struct:_usb_device_endpoint_status_struct
endpointAddress	usb/device/include/usb_device.h	/^    uint8_t endpointAddress; \/*!< Endpoint address*\/$/;"	m	struct:_usb_device_endpoint_init_struct
endpointBulkIn	usb/device/class/usb_device_ccid.h	/^    uint8_t endpointBulkIn;      \/*!< The endpoint number of the bulk IN pipe *\/$/;"	m	struct:_usb_device_ccid_struct
endpointBulkOut	usb/device/class/usb_device_ccid.h	/^    uint8_t endpointBulkOut;     \/*!< The endpoint number of the bulk OUT pipe *\/$/;"	m	struct:_usb_device_ccid_struct
endpointCompanion	usb/include/usb_spec.h	/^    usb_descriptor_endpoint_companion_t endpointCompanion; \/* Endpoint companion descriptor *\/$/;"	m	union:_usb_descriptor_union
endpointCount	usb/device/source/ehci/usb_device_ehci.h	/^    uint8_t endpointCount;                         \/*!< The endpoint number of EHCI *\/$/;"	m	struct:_usb_device_ehci_state_struct
endpointInterruptIn	usb/device/class/usb_device_ccid.h	/^    uint8_t endpointInterruptIn; \/*!< The endpoint number of the interrupt IN pipe *\/$/;"	m	struct:_usb_device_ccid_struct
endpointList	usb/device/class/usb_device_class.h	/^    usb_device_endpoint_list_t endpointList; \/*!< Endpoints of the interface*\/$/;"	m	struct:_usb_device_interface_struct
endpointState	usb/device/source/khci/usb_device_khci.h	/^        endpointState[USB_DEVICE_CONFIG_ENDPOINTS * 2]; \/*!< Endpoint state structures *\/$/;"	m	struct:_usb_device_khci_state_struct
endpointState	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    usb_device_lpc3511ip_endpoint_state_struct_t endpointState[(USB_DEVICE_IP3511_ENDPOINTS_NUM * 2)];$/;"	m	struct:_usb_device_lpc3511ip_state_struct
endpointStatus	usb/device/include/usb_device.h	/^    uint16_t endpointStatus; \/*!< Endpoint status : idle or stalled *\/$/;"	m	struct:_usb_device_endpoint_status_struct
endpointStatus	usb/device/source/ehci/usb_device_ehci.h	/^        uint32_t endpointStatus;$/;"	m	union:_usb_device_ehci_qh_struct::__anon519
endpointStatusBitmap	usb/device/source/ehci/usb_device_ehci.h	/^        } endpointStatusBitmap;$/;"	m	union:_usb_device_ehci_qh_struct::__anon519	typeref:struct:_usb_device_ehci_qh_struct::__anon519::__anon520
endpointStatusUnion	usb/device/source/ehci/usb_device_ehci.h	/^    } endpointStatusUnion;$/;"	m	struct:_usb_device_ehci_qh_struct	typeref:union:_usb_device_ehci_qh_struct::__anon519
endpointType	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t endpointType : 2U;$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
endpoint_specified	lwip/src/netif/ppp/multilink.c	/^bool endpoint_specified;	\/* user gave explicit endpoint discriminator *\/$/;"	v
energy	CMSIS/arm_math.h	/^    float32_t energy;     \/**< saves previous frame energy. *\/$/;"	m	struct:__anon105
energy	CMSIS/arm_math.h	/^    q15_t energy;         \/**< saves previous frame energy. *\/$/;"	m	struct:__anon107
energy	CMSIS/arm_math.h	/^    q31_t energy;         \/**< saves previous frame energy. *\/$/;"	m	struct:__anon106
enet_buffer_config_t	drivers/fsl_enet.h	/^} enet_buffer_config_t;$/;"	t	typeref:struct:_enet_buffer_config
enet_callback_t	drivers/fsl_enet.h	/^typedef void (*enet_callback_t)($/;"	t
enet_config_t	drivers/fsl_enet.h	/^} enet_config_t;$/;"	t	typeref:struct:_enet_config
enet_desc_flag	drivers/fsl_enet.h	/^} enet_desc_flag;$/;"	t	typeref:enum:_enet_desc_flag
enet_dma_burstlen	drivers/fsl_enet.h	/^} enet_dma_burstlen;$/;"	t	typeref:enum:_enet_dma_burstlen
enet_dma_interrupt_enable_t	drivers/fsl_enet.h	/^} enet_dma_interrupt_enable_t;$/;"	t	typeref:enum:_enet_dma_interrupt_enable
enet_dma_tx_sche	drivers/fsl_enet.h	/^} enet_dma_tx_sche;$/;"	t	typeref:enum:_enet_dma_tx_sche
enet_event_t	drivers/fsl_enet.h	/^} enet_event_t;$/;"	t	typeref:enum:_enet_event
enet_handle_t	drivers/fsl_enet.h	/^typedef struct _enet_handle enet_handle_t;$/;"	t	typeref:struct:_enet_handle
enet_isr_t	drivers/fsl_enet.c	/^typedef void (*enet_isr_t)(ENET_Type *base, enet_handle_t *handle);$/;"	t	file:
enet_mac_interrupt_enable_t	drivers/fsl_enet.h	/^} enet_mac_interrupt_enable_t;$/;"	t	typeref:enum:_enet_mac_interrupt_enable
enet_mii_duplex_t	drivers/fsl_enet.h	/^} enet_mii_duplex_t;$/;"	t	typeref:enum:_enet_mii_duplex
enet_mii_mode_t	drivers/fsl_enet.h	/^} enet_mii_mode_t;$/;"	t	typeref:enum:_enet_mii_mode
enet_mii_normal_opcode	drivers/fsl_enet.h	/^} enet_mii_normal_opcode;$/;"	t	typeref:enum:_enet_mii_normal_opcode
enet_mii_speed_t	drivers/fsl_enet.h	/^} enet_mii_speed_t;$/;"	t	typeref:enum:_enet_mii_speed
enet_mtl_multiqueue_rxsche	drivers/fsl_enet.h	/^} enet_mtl_multiqueue_rxsche;$/;"	t	typeref:enum:_enet_mtl_multiqueue_rxsche
enet_mtl_multiqueue_txsche	drivers/fsl_enet.h	/^} enet_mtl_multiqueue_txsche;$/;"	t	typeref:enum:_enet_mtl_multiqueue_txsche
enet_mtl_rxqueuemap	drivers/fsl_enet.h	/^} enet_mtl_rxqueuemap;$/;"	t	typeref:enum:_enet_mtl_rxqueuemap
enet_multiqueue_config	drivers/fsl_enet.h	/^typedef struct enet_multiqueue_config$/;"	s
enet_multiqueue_config_t	drivers/fsl_enet.h	/^} enet_multiqueue_config_t;$/;"	t	typeref:struct:enet_multiqueue_config
enet_ptp_config_t	drivers/fsl_enet.h	/^} enet_ptp_config_t;$/;"	t	typeref:struct:_enet_ptp_config
enet_ptp_event_type_t	drivers/fsl_enet.h	/^} enet_ptp_event_type_t;$/;"	t	typeref:enum:_enet_ptp_event_type
enet_ptp_time_data_ring_t	drivers/fsl_enet.h	/^} enet_ptp_time_data_ring_t;$/;"	t	typeref:struct:_enet_ptp_time_data_ring
enet_ptp_time_data_t	drivers/fsl_enet.h	/^} enet_ptp_time_data_t;$/;"	t	typeref:struct:_enet_ptp_time_data
enet_ptp_time_t	drivers/fsl_enet.h	/^} enet_ptp_time_t;$/;"	t	typeref:struct:_enet_ptp_time
enet_rx_bd_ring_t	drivers/fsl_enet.h	/^} enet_rx_bd_ring_t;$/;"	t	typeref:struct:_enet_rx_bd_ring
enet_rx_bd_struct_t	drivers/fsl_enet.h	/^} enet_rx_bd_struct_t;$/;"	t	typeref:struct:_enet_rx_bd_struct
enet_special_config_t	drivers/fsl_enet.h	/^} enet_special_config_t;$/;"	t	typeref:enum:_enet_special_config
enet_systime_op	drivers/fsl_enet.h	/^} enet_systime_op;$/;"	t	typeref:enum:_enet_systime_op
enet_ts_rollover_type	drivers/fsl_enet.h	/^} enet_ts_rollover_type;$/;"	t	typeref:enum:_enet_ts_rollover_type
enet_tx_bd_ring_t	drivers/fsl_enet.h	/^} enet_tx_bd_ring_t;$/;"	t	typeref:struct:_enet_tx_bd_ring
enet_tx_bd_struct_t	drivers/fsl_enet.h	/^} enet_tx_bd_struct_t;$/;"	t	typeref:struct:_enet_tx_bd_struct
enqueuedBytes	drivers/fsl_i2s_dma.c	/^    volatile uint16_t enqueuedBytes[DMA_DESCRIPTORS]; \/*!< Number of bytes being transferred by DMA descriptors *\/$/;"	m	struct:_i2s_dma_private_handle	file:
enqueuedBytesEnd	drivers/fsl_i2s_dma.c	/^    volatile uint8_t enqueuedBytesEnd;                \/*!< Last item in enqueuedBytes (for adding) *\/$/;"	m	struct:_i2s_dma_private_handle	file:
enqueuedBytesStart	drivers/fsl_i2s_dma.c	/^    volatile uint8_t enqueuedBytesStart;              \/*!< First item in enqueuedBytes (for reading) *\/$/;"	m	struct:_i2s_dma_private_handle	file:
entity	usb/device/class/usb_device_audio.h	/^    usb_device_audio_entity_struct_t *entity;$/;"	m	struct:_usb_device_audio_entities_struct
entity	usb/device/class/usb_device_video.h	/^    usb_device_video_entity_struct_t *entity;$/;"	m	struct:_usb_device_video_entities_struct
entityId	usb/device/class/usb_device_audio.h	/^    uint8_t entityId;$/;"	m	struct:_usb_device_audio_entity_struct
entityId	usb/device/class/usb_device_video.h	/^    uint8_t entityId;$/;"	m	struct:_usb_device_video_entity_struct
entityType	usb/device/class/usb_device_audio.h	/^    uint8_t entityType;$/;"	m	struct:_usb_device_audio_entity_struct
entityType	usb/device/class/usb_device_video.h	/^    uint8_t entityType;$/;"	m	struct:_usb_device_video_entity_struct
entries	codec2/mbest.h	/^    int                entries;   \/* number of entries in mbest list   *\/$/;"	m	struct:MBEST
ep	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t ep;                 \/*!< The endpoint number of the pipe. *\/$/;"	m	struct:_usb_device_cdc_acm_pipe
ep	usb/device/class/usb_device_phdc.h	/^    uint8_t ep;     \/*!< The endpoint number of the pipe. *\/$/;"	m	struct:_usb_device_phdc_pipe
epBufferStatus	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^        uint16_t epBufferStatus;$/;"	m	union:_usb_device_lpc3511ip_endpoint_state_struct::__anon513
epBufferStatusField	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^        } epBufferStatusField;$/;"	m	union:_usb_device_lpc3511ip_endpoint_state_struct::__anon513	typeref:struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon513::__anon514
epBufferStatusUnion	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    } epBufferStatusUnion[2];$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct	typeref:union:_usb_device_lpc3511ip_endpoint_state_struct::__anon513
epCallback	usb/device/source/usb_device_dci.h	/^        epCallback[USB_DEVICE_CONFIG_ENDPOINTS << 1U]; \/*!< Endpoint callback function structure *\/$/;"	m	struct:_usb_device_struct
epCallbackDirectly	usb/device/source/usb_device_dci.h	/^    uint8_t epCallbackDirectly; \/*!< Whether call ep callback directly when the task is enabled *\/$/;"	m	struct:_usb_device_struct
epCommandStatusList	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    volatile uint32_t *epCommandStatusList; \/* endpoint list *\/$/;"	m	struct:_usb_device_lpc3511ip_state_struct
epControlDefault	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t epControlDefault : 5u; \/*!< The EP command\/status 26~30 bits *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
epPacketBuffer	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t *epPacketBuffer;       \/*!< The max packet buffer for copying*\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct
epPacketCopyed	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint16_t epPacketCopyed : 1U;$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon513::__anon514
epPacketCopyed	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t epPacketCopyed : 1U;   \/*!< whether use the copy buffer *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
epReservedBuffer	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t *epReservedBuffer;$/;"	m	struct:_usb_device_lpc3511ip_state_struct
epReservedBufferBits	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t epReservedBufferBits[(USB_DEVICE_IP3511_BITS_FOR_RESERVED_BUFFER + 7) \/ 8];$/;"	m	struct:_usb_device_lpc3511ip_state_struct
epdisc	lwip/src/include/netif/ppp/lcp.h	/^struct epdisc {$/;"	s
epdisc_to_str	lwip/src/netif/ppp/multilink.c	/^epdisc_to_str(ep)$/;"	f
erase	littlefs/littlefs_include/lfs.h	/^    int (*erase)(const struct lfs_config *c, lfs_block_t block);$/;"	m	struct:lfs_config
err	lwip/src/include/lwip/altcp.h	/^  altcp_err_fn        err;$/;"	m	struct:altcp_pcb
err	lwip/src/include/lwip/priv/api_msg.h	/^  err_t err;$/;"	m	struct:api_msg
err	lwip/src/include/lwip/priv/sockets_priv.h	/^  int err;$/;"	m	struct:lwip_setgetsockopt_data
err	lwip/src/include/lwip/priv/tcpip_priv.h	/^  err_t err;$/;"	m	struct:tcpip_api_call_data
err	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY	amazon-freertos/include/projdefs.h	53;"	d
errQUEUE_BLOCKED	amazon-freertos/include/projdefs.h	54;"	d
errQUEUE_EMPTY	amazon-freertos/include/projdefs.h	49;"	d
errQUEUE_FULL	amazon-freertos/include/projdefs.h	50;"	d
errQUEUE_YIELD	amazon-freertos/include/projdefs.h	55;"	d
err_code	lwip/src/include/netif/ppp/ppp.h	/^  u8_t err_code;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:ppp_pcb_s
err_enum_t	lwip/src/include/lwip/err.h	/^} err_enum_t;$/;"	t	typeref:enum:__anon450
err_strerr	lwip/src/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	lwip/src/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	lwip/src/include/lwip/err.h	/^typedef s8_t err_t;$/;"	t
err_tcp	lwip/src/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	lwip/src/api/err.c	/^err_to_errno(err_t err)$/;"	f
err_to_errno_table	lwip/src/api/err.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errevent	lwip/src/include/lwip/priv/sockets_priv.h	/^  u16_t errevent;$/;"	m	struct:lwip_sock
errf	lwip/src/include/lwip/tcp.h	/^  tcp_err_fn errf;$/;"	m	struct:tcp_pcb
errno	lwip/port/sys_arch.c	/^int errno = 0;$/;"	v
error	codec2/mbest.h	/^    float error;$/;"	m	struct:MBEST_LIST
errorBit	usb/device/class/usb_device_video.h	/^            uint8_t errorBit : 1U;    \/*!< Error Bit. This bit, when set, indicates an error in the device streaming.*\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
errorCount	drivers/fsl_i2s.h	/^    volatile uint32_t errorCount;                      \/*!< Number of buffer underruns\/overruns *\/$/;"	m	struct:_i2s_handle
errtfunc	lwip/src/include/lwip/priv/api_msg.h	/^      netifapi_errt_fn errtfunc;$/;"	m	struct:netifapi_msg::__anon463::__anon465
es_challen	lwip/src/include/netif/ppp/eap.h	/^	int es_challen;			\/* Length of challenge string *\/$/;"	m	struct:eap_state
es_challenge	lwip/src/include/netif/ppp/eap.h	/^	u_char es_challenge[EAP_MAX_CHALLENGE_LENGTH];$/;"	m	struct:eap_state
es_client	lwip/src/include/netif/ppp/eap.h	/^	struct eap_auth es_client;	\/* Client (authenticatee) data *\/$/;"	m	struct:eap_state	typeref:struct:eap_state::eap_auth
es_lwrechallenge	lwip/src/include/netif/ppp/eap.h	/^	int es_lwrechallenge;		\/* SRP lightweight rechallenge inter *\/$/;"	m	struct:eap_state
es_rechallenge	lwip/src/include/netif/ppp/eap.h	/^	int es_rechallenge;		\/* EAP rechallenge interval *\/$/;"	m	struct:eap_state
es_savedtime	lwip/src/include/netif/ppp/eap.h	/^	int es_savedtime;		\/* Saved timeout *\/$/;"	m	struct:eap_state
es_server	lwip/src/include/netif/ppp/eap.h	/^	struct eap_auth es_server;	\/* Server (authenticator) data *\/$/;"	m	struct:eap_state	typeref:struct:eap_state::eap_auth
es_usedpseudo	lwip/src/include/netif/ppp/eap.h	/^	int es_usedpseudo;		\/* Set if we already sent PN *\/$/;"	m	struct:eap_state
es_usepseudo	lwip/src/include/netif/ppp/eap.h	/^	u8_t es_usepseudo;		\/* Use SRP Pseudonym if offered one *\/$/;"	m	struct:eap_state
escape_flag	lwip/src/netif/ppp/demand.c	/^int escape_flag;$/;"	v
est_max	codec2/fsk.h	/^    int est_max;            \/* Maximum frequency for freq. estimaotr *\/$/;"	m	struct:FSK
est_min	codec2/fsk.h	/^    int est_min;            \/* Minimum frequency for freq. estimator *\/$/;"	m	struct:FSK
est_space	codec2/fsk.h	/^    int est_space;          \/* Minimum frequency spacing for freq. estimator *\/$/;"	m	struct:FSK
est_voicing_mbe	codec2/sine.c	/^float est_voicing_mbe($/;"	f
estimate_amplitudes	codec2/sine.c	/^void estimate_amplitudes(MODEL *model, COMP Sw[], COMP W[], int est_phase)$/;"	f
eth_addr	lwip/src/include/lwip/prot/ethernet.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	lwip/src/include/lwip/prot/ethernet.h	119;"	d
eth_hdr	lwip/src/include/lwip/prot/ethernet.h	/^struct eth_hdr {$/;"	s
eth_mac_irq	doc/lwip/doc/NO_SYS_SampleCode.c	/^eth_mac_irq()$/;"	f
eth_rx_irq	doc/lwip/doc/ZeroCopyRx.c	/^void eth_rx_irq()$/;"	f
eth_vlan_hdr	lwip/src/include/lwip/prot/ethernet.h	/^struct eth_vlan_hdr {$/;"	s
ethaddr	lwip/src/core/ipv4/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
ethaddr	lwip/src/include/netif/bridgeif.h	/^  struct eth_addr ethaddr;$/;"	m	struct:bridgeif_initdata_s	typeref:struct:bridgeif_initdata_s::eth_addr
ethaddr	lwip/src/netif/bridgeif.c	/^  struct eth_addr   ethaddr;$/;"	m	struct:bridgeif_private_s	typeref:struct:bridgeif_private_s::eth_addr	file:
etharp	lwip/src/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_add_static_entry	lwip/src/core/ipv4/etharp.c	/^etharp_add_static_entry(const ip4_addr_t *ipaddr, struct eth_addr *ethaddr)$/;"	f
etharp_cached_entry	lwip/src/core/ipv4/etharp.c	/^static netif_addr_idx_t etharp_cached_entry;$/;"	v	file:
etharp_cleanup_netif	lwip/src/core/ipv4/etharp.c	/^etharp_cleanup_netif(struct netif *netif)$/;"	f
etharp_entry	lwip/src/core/ipv4/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	lwip/src/core/ipv4/etharp.c	/^etharp_find_addr(struct netif *netif, const ip4_addr_t *ipaddr,$/;"	f
etharp_find_entry	lwip/src/core/ipv4/etharp.c	/^etharp_find_entry(const ip4_addr_t *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
etharp_free_entry	lwip/src/core/ipv4/etharp.c	/^etharp_free_entry(int i)$/;"	f	file:
etharp_get_entry	lwip/src/core/ipv4/etharp.c	/^etharp_get_entry(size_t i, ip4_addr_t **ipaddr, struct netif **netif, struct eth_addr **eth_ret)$/;"	f
etharp_gratuitous	lwip/src/include/lwip/etharp.h	88;"	d
etharp_hdr	lwip/src/include/lwip/prot/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	lwip/src/include/lwip/etharp.h	76;"	d
etharp_input	lwip/src/core/ipv4/etharp.c	/^etharp_input(struct pbuf *p, struct netif *netif)$/;"	f
etharp_opcode	lwip/src/include/lwip/prot/etharp.h	/^enum etharp_opcode {$/;"	g
etharp_output	lwip/src/core/ipv4/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, const ip4_addr_t *ipaddr)$/;"	f
etharp_output_to_arp_index	lwip/src/core/ipv4/etharp.c	/^etharp_output_to_arp_index(struct netif *netif, struct pbuf *q, netif_addr_idx_t arp_idx)$/;"	f	file:
etharp_q_entry	lwip/src/include/lwip/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	lwip/src/core/ipv4/etharp.c	/^etharp_query(struct netif *netif, const ip4_addr_t *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	lwip/src/core/ipv4/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_remove_static_entry	lwip/src/core/ipv4/etharp.c	/^etharp_remove_static_entry(const ip4_addr_t *ipaddr)$/;"	f
etharp_request	lwip/src/core/ipv4/etharp.c	/^etharp_request(struct netif *netif, const ip4_addr_t *ipaddr)$/;"	f
etharp_request_dst	lwip/src/core/ipv4/etharp.c	/^etharp_request_dst(struct netif *netif, const ip4_addr_t *ipaddr, const struct eth_addr *hw_dst_addr)$/;"	f	file:
etharp_state	lwip/src/core/ipv4/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	lwip/src/core/ipv4/etharp.c	/^etharp_tmr(void)$/;"	f
etharp_update_arp_entry	lwip/src/core/ipv4/etharp.c	/^etharp_update_arp_entry(struct netif *netif, const ip4_addr_t *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
ethbroadcast	lwip/src/netif/ethernet.c	/^const struct eth_addr ethbroadcast = {{0xff, 0xff, 0xff, 0xff, 0xff, 0xff}};$/;"	v	typeref:struct:eth_addr
ethernet_input	lwip/src/netif/ethernet.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethernet_output	lwip/src/netif/ethernet.c	/^ethernet_output(struct netif * netif, struct pbuf * p,$/;"	f
ethernetcreate	lwip/src/include/netif/ppp/pppapi.h	/^    } ethernetcreate;$/;"	m	union:pppapi_msg_msg::__anon435	typeref:struct:pppapi_msg_msg::__anon435::__anon438
ethif	lwip/src/include/netif/ppp/pppapi.h	/^      struct netif *ethif;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon438	typeref:struct:pppapi_msg_msg::__anon435::__anon438::netif
ethip6_output	lwip/src/core/ipv6/ethip6.c	/^ethip6_output(struct netif *netif, struct pbuf *q, const ip6_addr_t *ip6addr)$/;"	f
ethzero	lwip/src/netif/ethernet.c	/^const struct eth_addr ethzero = {{0, 0, 0, 0, 0, 0}};$/;"	v	typeref:struct:eth_addr
eui64_copy	lwip/src/include/netif/ppp/eui64.h	65;"	d
eui64_equals	lwip/src/include/netif/ppp/eui64.h	61;"	d
eui64_get	lwip/src/include/netif/ppp/eui64.h	79;"	d
eui64_iszero	lwip/src/include/netif/ppp/eui64.h	60;"	d
eui64_magic	lwip/src/include/netif/ppp/eui64.h	67;"	d
eui64_magic_ne	lwip/src/include/netif/ppp/eui64.h	75;"	d
eui64_magic_nz	lwip/src/include/netif/ppp/eui64.h	72;"	d
eui64_ntoa	lwip/src/netif/ppp/eui64.c	/^char *eui64_ntoa(eui64_t e) {$/;"	f
eui64_put	lwip/src/include/netif/ppp/eui64.h	84;"	d
eui64_set32	lwip/src/include/netif/ppp/eui64.h	89;"	d
eui64_setlo32	lwip/src/include/netif/ppp/eui64.h	93;"	d
eui64_t	lwip/src/include/netif/ppp/eui64.h	/^} eui64_t;$/;"	t	typeref:union:__anon434
eui64_to_ble_addr	lwip/src/netif/lowpan6_ble.c	/^eui64_to_ble_addr(uint8_t *dst, const uint8_t *src)$/;"	f
eui64_zero	lwip/src/include/netif/ppp/eui64.h	63;"	d
event	component/i2c/i2c.h	/^    hal_i2c_slave_transfer_event_t event; \/*!< A reason that the callback is invoked. *\/$/;"	m	struct:_hal_i2c_slave_transfer
event	component/serial_manager/serial_manager.c	/^    uint8_t event[OSA_EVENT_HANDLE_SIZE]; \/*!< Event instance *\/$/;"	m	struct:_serial_manager_handle	file:
event	drivers/freertos/fsl_spi_freertos.h	/^    SemaphoreHandle_t event; \/*!< Semaphore to notify and unblock task when transfer ends *\/$/;"	m	struct:_spi_rtos_handle
event	drivers/fsl_i2c.h	/^    i2c_slave_transfer_event_t event; \/*!< Reason the callback is being invoked. *\/$/;"	m	struct:_i2c_slave_transfer
event	osa/usb_osa_freertos.c	/^    StaticEventGroup_t event;  \/* Event buffer *\/$/;"	m	struct:_usb_osa_event_struct	file:
eventCLEAR_EVENTS_ON_EXIT_BIT	amazon-freertos/freertos/event_groups.c	52;"	d	file:
eventCLEAR_EVENTS_ON_EXIT_BIT	amazon-freertos/freertos/event_groups.c	57;"	d	file:
eventEVENT_BITS_CONTROL_BYTES	amazon-freertos/freertos/event_groups.c	55;"	d	file:
eventEVENT_BITS_CONTROL_BYTES	amazon-freertos/freertos/event_groups.c	60;"	d	file:
eventMask	drivers/fsl_i2c.h	/^    uint32_t eventMask;               \/*!< Mask of enabled events. *\/$/;"	m	struct:_i2c_slave_transfer
eventUNBLOCKED_DUE_TO_BIT_SET	amazon-freertos/freertos/event_groups.c	53;"	d	file:
eventUNBLOCKED_DUE_TO_BIT_SET	amazon-freertos/freertos/event_groups.c	58;"	d	file:
eventWAIT_FOR_ALL_BITS	amazon-freertos/freertos/event_groups.c	54;"	d	file:
eventWAIT_FOR_ALL_BITS	amazon-freertos/freertos/event_groups.c	59;"	d	file:
event_callback	lwip/src/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
event_mode_fault	CMSIS_driver/Driver_SPI.h	/^  uint32_t event_mode_fault : 1;        \/\/\/< Signal Mode Fault event: \\ref ARM_SPI_EVENT_MODE_FAULT$/;"	m	struct:_ARM_SPI_CAPABILITIES
events	lwip/src/include/lwip/sockets.h	/^  short events;$/;"	m	struct:pollfd
ex_phase	codec2/codec2_internal.h	/^    float         ex_phase;                \/* excitation model phase track              *\/$/;"	m	struct:CODEC2
exceptset	lwip/src/include/lwip/priv/sockets_priv.h	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb
explicit_remote	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  explicit_remote     :1;      \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings_s
ext_accm	lwip/src/include/netif/ppp/pppos.h	/^typedef u8_t ext_accm[32];$/;"	t
ext_callback	lwip/src/core/netif.c	/^static netif_ext_callback_t *ext_callback;$/;"	v	file:
extcode	lwip/src/include/netif/ppp/fsm.h	/^    int  (*extcode)		\/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
f	codec2/nlp.c	/^    FILE         *f;$/;"	m	struct:__anon138	file:
f1_tx	codec2/fsk.h	/^    int f1_tx;              \/* f1 for modulator *\/$/;"	m	struct:FSK
fE	codec2/dump.c	/^static FILE *fE = NULL;$/;"	v	file:
f_est	codec2/fsk.h	/^    float f_est[MODE_M_MAX];\/* Estimated frequencies *\/$/;"	m	struct:FSK
f_est	codec2/modem_stats.h	/^    float f_est[MODEM_STATS_MAX_F_EST];$/;"	m	struct:MODEM_STATS
factors	codec2/_kiss_fft_guts.h	/^    int factors[2*MAXFACTORS];$/;"	m	struct:kiss_fft_state
fak	codec2/dump.c	/^static FILE *fak = NULL;$/;"	v	file:
fak_	codec2/dump.c	/^static FILE *fak_ = NULL;$/;"	v	file:
fbClkSrc	drivers/fsl_emc.h	/^    emc_fbclk_src_t fbClkSrc; \/*!< The feedback clock source. *\/$/;"	m	struct:_emc_basic_config
fbg	codec2/dump.c	/^static FILE *fbg = NULL;$/;"	v	file:
fbsel	drivers/fsl_clock.h	/^    bool fbsel;         \/*!< USB PLL ineter mode and non-integer mode control*\/$/;"	m	struct:_usb_pll_setup
fclose	codec2/dump.c	39;"	d	file:
fcmult	codec2/comp_prim.h	/^inline static COMP fcmult(float a, COMP b)$/;"	f
fcntl	lwip/src/api/sockets.c	/^fcntl(int s, int cmd, ...)$/;"	f
fcntl	lwip/src/include/lwip/sockets.h	674;"	d
fcs	lwip/src/netif/ppp/demand.c	/^int fcs;$/;"	v
fcstab	lwip/src/netif/ppp/demand.c	/^static u_short fcstab[256] = {$/;"	v	file:
fcstab	lwip/src/netif/ppp/pppos.c	/^static const u16_t fcstab[256] = {$/;"	v	file:
fd	lwip/src/include/lwip/sockets.h	/^  int fd;$/;"	m	struct:pollfd
fd_bits	lwip/src/include/lwip/sockets.h	/^  unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_free_pending	lwip/src/include/lwip/priv/sockets_priv.h	/^  u8_t fd_free_pending;$/;"	m	struct:lwip_sock
fd_set	lwip/src/include/lwip/sockets.h	/^typedef struct fd_set$/;"	s
fd_set	lwip/src/include/lwip/sockets.h	/^} fd_set;$/;"	t	typeref:struct:fd_set
fd_used	lwip/src/include/lwip/priv/sockets_priv.h	/^  u8_t fd_used;$/;"	m	struct:lwip_sock
fdb	lwip/src/netif/bridgeif_fdb.c	/^  bridgeif_dfdb_entry_t *fdb;$/;"	m	struct:bridgeif_dfdb_s	file:
fdbd	lwip/src/netif/bridgeif.c	/^  void             *fdbd;$/;"	m	struct:bridgeif_private_s	file:
fdbs	lwip/src/netif/bridgeif.c	/^  bridgeif_fdb_static_entry_t *fdbs;$/;"	m	struct:bridgeif_private_s	file:
fdec	codec2/dump.c	/^static FILE *fdec = NULL;$/;"	v	file:
fdmdv_16_to_8	codec2/nlp.c	/^static void fdmdv_16_to_8(float out8k[], float in16k[], int n)$/;"	f	file:
fdmdv_os_filter	codec2/os.h	/^static const float fdmdv_os_filter[]= {$/;"	v
fe	codec2/dump.c	/^static FILE *fe = NULL;$/;"	v	file:
few	codec2/dump.c	/^static FILE *few = NULL;$/;"	v	file:
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                   \/**< length of the FFT. *\/$/;"	m	struct:__anon74
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                   \/**< length of the FFT. *\/$/;"	m	struct:__anon75
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                   \/**< length of the FFT. *\/$/;"	m	struct:__anon76
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                   \/**< length of the FFT. *\/$/;"	m	struct:__anon77
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                   \/**< length of the FFT. *\/$/;"	m	struct:__anon78
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                 \/**< length of the FFT. *\/$/;"	m	struct:__anon70
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                 \/**< length of the FFT. *\/$/;"	m	struct:__anon71
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                 \/**< length of the FFT. *\/$/;"	m	struct:__anon72
fftLen	CMSIS/arm_math.h	/^    uint16_t fftLen;                 \/**< length of the FFT. *\/$/;"	m	struct:__anon73
fftLenBy2	CMSIS/arm_math.h	/^    uint16_t fftLenBy2;                         \/**< length of the complex FFT. *\/$/;"	m	struct:__anon81
fftLenRFFT	CMSIS/arm_math.h	/^    uint16_t fftLenRFFT;             \/**< length of the real sequence *\/$/;"	m	struct:__anon82
fftLenReal	CMSIS/arm_math.h	/^    uint32_t fftLenReal;                        \/**< length of the real FFT. *\/$/;"	m	struct:__anon80
fftLenReal	CMSIS/arm_math.h	/^    uint32_t fftLenReal;                        \/**< length of the real FFT. *\/$/;"	m	struct:__anon81
fftLenReal	CMSIS/arm_math.h	/^    uint32_t fftLenReal;                      \/**< length of the real FFT. *\/$/;"	m	struct:__anon79
fft_buf	codec2/modem_stats.h	/^    float        fft_buf[2*MODEM_STATS_NSPEC];$/;"	m	struct:MODEM_STATS
fft_cfg	codec2/fsk.h	/^    kiss_fft_cfg fft_cfg;   \/* Config for KISS FFT, used in freq est *\/$/;"	m	struct:FSK
fft_cfg	codec2/modem_stats.h	/^    kiss_fft_cfg fft_cfg;$/;"	m	struct:MODEM_STATS
fft_cfg	codec2/nlp.c	/^    codec2_fft_cfg  fft_cfg;         \/* kiss FFT config              *\/$/;"	m	struct:__anon138	file:
fft_est	codec2/fsk.h	/^    float* fft_est;			\/* Freq est FFT magnitude *\/$/;"	m	struct:FSK
fft_fwd_cfg	codec2/codec2_internal.h	/^    codec2_fft_cfg  fft_fwd_cfg;           \/* forward FFT config                        *\/$/;"	m	struct:CODEC2
fftr_fwd_cfg	codec2/codec2_internal.h	/^    codec2_fftr_cfg fftr_fwd_cfg;          \/* forward real FFT config                   *\/$/;"	m	struct:CODEC2
fftr_inv_cfg	codec2/codec2_internal.h	/^    codec2_fftr_cfg  fftr_inv_cfg;         \/* inverse FFT config                        *\/$/;"	m	struct:CODEC2
ffw	codec2/dump.c	/^static FILE *ffw = NULL;$/;"	v	file:
fgetc	utilities/fsl_debug_console.c	/^int fgetc(FILE *f)$/;"	f
fgetc	utilities/fsl_debug_console.c	1026;"	d	file:
fhephase	codec2/dump.c	/^static FILE *fhephase = NULL;$/;"	v	file:
file	littlefs/littlefs_include/lfs.h	/^            } file;$/;"	m	union:lfs_entry::lfs_disk_entry::__anon425	typeref:struct:lfs_entry::lfs_disk_entry::__anon425::__anon426
file	lwip/src/include/lwip/priv/memp_priv.h	/^  const char *file;$/;"	m	struct:memp
file_buffer	littlefs/littlefs_include/lfs.h	/^    void *file_buffer;$/;"	m	struct:lfs_config
files	littlefs/littlefs_include/lfs.h	/^    lfs_file_t *files;$/;"	m	struct:lfs
findPllMMult	device/system_LPC54018.c	/^static uint32_t findPllMMult(uint32_t ctrlReg, uint32_t mDecReg)$/;"	f	file:
findPllMMult	drivers/fsl_clock.c	/^static uint32_t findPllMMult(uint32_t ctrlReg, uint32_t mDecReg)$/;"	f	file:
findPllPostDiv	device/system_LPC54018.c	/^static uint32_t findPllPostDiv(uint32_t ctrlReg, uint32_t pDecReg)$/;"	f	file:
findPllPostDiv	drivers/fsl_clock.c	/^static uint32_t findPllPostDiv(uint32_t ctrlReg, uint32_t pDecReg)$/;"	f	file:
findPllPreDiv	device/system_LPC54018.c	/^static uint32_t findPllPreDiv(uint32_t ctrlReg, uint32_t nDecReg)$/;"	f	file:
findPllPreDiv	drivers/fsl_clock.c	/^static uint32_t findPllPreDiv(uint32_t ctrlReg, uint32_t nDecReg)$/;"	f	file:
find_aks	codec2/lpc.c	/^void find_aks($/;"	f
find_nearest	codec2/quantise.c	/^int find_nearest(const float *codebook, int nb_entries, float *x, int ndim)$/;"	f
find_nearest_weighted	codec2/quantise.c	/^int find_nearest_weighted(const float *codebook, int nb_entries, float *x, const float *w, int ndim)$/;"	f
fineUpdateEnable	drivers/fsl_enet.h	/^    bool fineUpdateEnable;            \/*!< Use the fine update. *\/$/;"	m	struct:_enet_ptp_config
finished	lwip/src/include/netif/ppp/fsm.h	/^    void (*finished)		\/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
flag	osa/usb_osa_freertos.c	/^    uint32_t flag;             \/* Event flags, includes auto clear flag *\/$/;"	m	struct:_usb_osa_event_struct	file:
flags	component/i2c/i2c.h	/^    uint32_t flags;                \/*!< A transfer flag which controls the transfer. *\/$/;"	m	struct:_hal_i2c_master_transfer
flags	drivers/fsl_clock.h	/^    uint32_t flags;       \/*!< PLL configuration flags, Or'ed value of PLL_CONFIGFLAG_* definitions *\/$/;"	m	struct:_pll_config
flags	drivers/fsl_clock.h	/^    uint32_t flags;      \/*!< PLL setup flags, Or'ed value of PLL_SETUPFLAG_* definitions *\/$/;"	m	struct:_pll_setup
flags	drivers/fsl_i2c.h	/^    uint32_t flags; \/*!< Bit mask of options for the transfer. See enumeration #_i2c_master_transfer_flags for available$/;"	m	struct:_i2c_master_transfer
flags	drivers/fsl_i2c_cmsis.c	/^    uint8_t flags;                              \/*!< Control and state flags. *\/$/;"	m	struct:_cmsis_i2c_dma_driver_state	file:
flags	drivers/fsl_i2c_cmsis.c	/^    uint8_t flags;                  \/*!< Control and state flags. *\/$/;"	m	struct:_cmsis_i2c_interrupt_driver_state	file:
flags	drivers/fsl_spi_cmsis.c	/^    uint8_t flags; \/*!< Control and state flags. *\/$/;"	m	struct:_cmsis_spi_dma_driver_state	file:
flags	drivers/fsl_spi_cmsis.c	/^    uint8_t flags; \/*!< Control and state flags. *\/$/;"	m	struct:_cmsis_spi_interrupt_driver_state	file:
flags	littlefs/littlefs_include/lfs.h	/^    uint32_t flags;$/;"	m	struct:lfs_file
flags	lwip/src/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	lwip/src/include/lwip/api.h	/^  u8_t flags;$/;"	m	struct:netconn
flags	lwip/src/include/lwip/ip4_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	lwip/src/include/lwip/netbuf.h	/^  u8_t flags;$/;"	m	struct:netbuf
flags	lwip/src/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	lwip/src/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	lwip/src/include/lwip/priv/nd6_priv.h	/^  u8_t flags;$/;"	m	struct:nd6_router_list_entry
flags	lwip/src/include/lwip/priv/tcp_priv.h	/^  u8_t  flags;$/;"	m	struct:tcp_seg
flags	lwip/src/include/lwip/raw.h	/^  u8_t flags;$/;"	m	struct:raw_pcb
flags	lwip/src/include/lwip/tcp.h	/^  tcpflags_t flags;$/;"	m	struct:tcp_pcb
flags	lwip/src/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	lwip/src/include/netif/ppp/chap-new.h	/^	u8_t flags;$/;"	m	struct:chap_client_state
flags	lwip/src/include/netif/ppp/chap-new.h	/^	u8_t flags;$/;"	m	struct:chap_server_state
flags	lwip/src/include/netif/ppp/fsm.h	/^    u8_t flags;			\/* Contains option bits *\/$/;"	m	struct:fsm
flags	lwip/src/include/netif/ppp/vj.h	/^  u16_t flags;$/;"	m	struct:vjcompress
flags	usb/device/class/usb_device_msc.h	/^    uint8_t flags;               \/*!< Byte 12 bmCBWFlags*\/$/;"	m	struct:_usb_device_msc_cbw
flexcomm_irq_handler_t	drivers/fsl_flexcomm.h	/^typedef void (*flexcomm_irq_handler_t)(void *base, void *handle);$/;"	t
float32_t	CMSIS/arm_math.h	/^  typedef float float32_t;$/;"	t
float64_t	CMSIS/arm_math.h	/^  typedef double float64_t;$/;"	t
flpcsnr	codec2/dump.c	/^static FILE *flpcsnr = NULL;$/;"	v	file:
flsp	codec2/dump.c	/^static FILE *flsp = NULL;$/;"	v	file:
flsp_	codec2/dump.c	/^static FILE *flsp_ = NULL;$/;"	v	file:
flush_flag	lwip/src/netif/ppp/demand.c	/^int flush_flag;$/;"	v
fmel	codec2/dump.c	/^static FILE *fmel = NULL;$/;"	v	file:
fmel_indexes	codec2/dump.c	/^static FILE *fmel_indexes = NULL;$/;"	v	file:
fmodel	codec2/dump.c	/^static FILE *fmodel = NULL;$/;"	v	file:
fns	lwip/src/include/lwip/altcp.h	/^  const struct altcp_functions *fns;$/;"	m	struct:altcp_pcb	typeref:struct:altcp_pcb::altcp_functions
foff	codec2/modem_stats.h	/^    float  foff;                             \/* estimated freq offset in Hz                        *\/$/;"	m	struct:MODEM_STATS
foff_est_en	codec2/ofdm_internal.h	/^    bool foff_est_en;$/;"	m	struct:OFDM
foff_est_gain	codec2/ofdm_internal.h	/^    float foff_est_gain;$/;"	m	struct:OFDM
foff_est_hz	codec2/ofdm_internal.h	/^    float foff_est_hz;$/;"	m	struct:OFDM
foff_metric	codec2/ofdm_internal.h	/^    complex float foff_metric;$/;"	m	struct:OFDM
fopen	codec2/dump.c	38;"	d	file:
force_min_lsp_dist	codec2/quantise.c	/^void force_min_lsp_dist(float lsp[], int order)$/;"	f
format	codec/fsl_wm8904.h	/^    wm8904_audio_format_t format; \/*!< Audio format *\/$/;"	m	struct:_wm8904_config
formatCapacityData	usb/device/class/usb_device_msc.h	/^    uint8_t *formatCapacityData;$/;"	m	struct:_usb_device_msc_ufi_struct
formatCapacityData1	usb/device/class/usb_device_msc.c	/^    formatCapacityData1[sizeof(usb_device_capacity_list_header_struct_t) +$/;"	v
formatCapacityData2	usb/device/class/usb_device_msc.c	/^    formatCapacityData2[sizeof(usb_device_capacity_list_header_struct_t) +$/;"	v
formatCapacityData3	usb/device/class/usb_device_msc.c	/^    formatCapacityData3[sizeof(usb_device_capacity_list_header_struct_t) +$/;"	v
formattableCapacityDesccriptor	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t formattableCapacityDesccriptor[sizeof(usb_device_formattable_capacity_descriptor_struct_t) *$/;"	m	struct:_usb_device_format_capacity_response_data_struct
formattedDisk	usb/device/class/usb_device_msc.h	/^    uint8_t formattedDisk;                                           \/*!< *Formatted or unformatted media*\/$/;"	m	struct:_usb_device_msc_ufi_struct
found	lwip/src/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_req_entry	file:
fpCompare	emwin/emWin_header/LISTVIEW_Private.h	/^  int                       (* fpCompare)    (const void * p0, const void * p1);  \/\/ User function to be called to compare the contents of 2 cells$/;"	m	struct:__anon335
fpFree	emwin/emWin_header/LISTVIEW_Private.h	/^  void                      (* fpFree)(WM_HMEM hObj);                             \/\/ Function to be called to free the sort object$/;"	m	struct:__anon336
fpSort	emwin/emWin_header/LISTVIEW_Private.h	/^  int                       (* fpSort)(LISTVIEW_Handle hObj);                     \/\/ Function to be called to get a sorted array$/;"	m	struct:__anon336
fphase	codec2/dump.c	/^static FILE *fphase = NULL;$/;"	v	file:
fphase_	codec2/dump.c	/^static FILE *fphase_ = NULL;$/;"	v	file:
fprintf	codec2/dump.c	37;"	d	file:
fputc	utilities/fsl_debug_console.c	/^int fputc(int ch, FILE *f)$/;"	f
fputc	utilities/fsl_debug_console.c	1019;"	d	file:
fpw	codec2/dump.c	/^static FILE *fpw = NULL;$/;"	v	file:
fpwb	codec2/dump.c	/^static FILE *fpwb = NULL;$/;"	v	file:
fqmodel	codec2/dump.c	/^static FILE *fqmodel = NULL;$/;"	v	file:
frags	lwip/src/netif/lowpan6.c	/^  struct pbuf *frags;$/;"	m	struct:lowpan6_reass_helper	typeref:struct:lowpan6_reass_helper::pbuf	file:
frame	lwip/src/netif/ppp/demand.c	/^char *frame;$/;"	v
frameDelay	drivers/fsl_spi.h	/^    uint8_t frameDelay;    \/*!< Delay between frame to frame. *\/$/;"	m	struct:_spi_delay_config
frameIdentifier	usb/device/class/usb_device_video.h	/^            uint8_t frameIdentifier : 1U; \/*!< Frame Identifier. This bit toggles at each frame start boundary and stays$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
frameLength	drivers/fsl_i2s.h	/^    uint16_t frameLength; \/*!< Frame width (4 - 512) *\/$/;"	m	struct:_i2s_config
frame_count	codec2/ofdm_internal.h	/^    int frame_count;$/;"	m	struct:OFDM
frame_count_interleaver	codec2/ofdm_internal.h	/^    int  frame_count_interleaver;$/;"	m	struct:OFDM
framelen	lwip/src/netif/ppp/demand.c	/^int framelen;$/;"	v
framemax	lwip/src/netif/ppp/demand.c	/^int framemax;$/;"	v
free	littlefs/littlefs_include/lfs.h	/^    lfs_free_t free;$/;"	m	struct:lfs
free	lwip/src/include/netif/ppp/ppp_impl.h	/^  err_t (*free) (ppp_pcb *pcb, void *ctx);$/;"	m	struct:link_callbacks
free_etharp_q	lwip/src/core/ipv4/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_etharp_q	lwip/src/core/ipv4/etharp.c	162;"	d	file:
free_reass_datagram	lwip/src/netif/lowpan6.c	/^free_reass_datagram(struct lowpan6_reass_helper *lrh)$/;"	f	file:
free_socket	lwip/src/api/sockets.c	/^free_socket(struct lwip_sock *sock, int is_tcp)$/;"	f	file:
free_socket_free_elements	lwip/src/api/sockets.c	/^free_socket_free_elements(int is_tcp, struct netconn *conn, union lwip_sock_lastdata *lastdata)$/;"	f	file:
free_socket_locked	lwip/src/api/sockets.c	/^free_socket_locked(struct lwip_sock *sock, int is_tcp, struct netconn **conn,$/;"	f	file:
freeaddrinfo	lwip/src/include/lwip/netdb.h	138;"	d
freertos_tasks_c_additions_init	amazon-freertos/freertos/tasks.c	/^		static void freertos_tasks_c_additions_init( void )$/;"	f	file:
frk	codec2/dump.c	/^static FILE *frk = NULL;$/;"	v	file:
front	drivers/fsl_enet.h	/^    uint32_t front;                  \/*!< The first index of the ring. *\/$/;"	m	struct:_enet_ptp_time_data_ring
frw	codec2/dump.c	/^static FILE *frw = NULL;$/;"	v	file:
fsRatio	codec/fsl_wm8904.h	/^    wm8904_fs_ratio_t fsRatio;       \/*!< SYSCLK \/ fs ratio *\/$/;"	m	struct:_wm8904_audio_format
fs_tx	codec2/fsk.h	/^    int fs_tx;              \/* Space between TX freqs for modulatosr *\/$/;"	m	struct:FSK
fsk2_demod	codec2/fsk.c	/^void fsk2_demod(struct FSK *fsk, uint8_t rx_bits[], float rx_sd[], COMP fsk_in[]){$/;"	f
fsk_clear_estimators	codec2/fsk.c	/^void fsk_clear_estimators(struct FSK *fsk){$/;"	f
fsk_create	codec2/fsk.c	/^struct FSK * fsk_create(int Fs, int Rs,int M, int tx_f1, int tx_fs)$/;"	f
fsk_create_hbr	codec2/fsk.c	/^struct FSK * fsk_create_hbr(int Fs, int Rs,int P,int M, int tx_f1, int tx_fs)$/;"	f
fsk_demod	codec2/fsk.c	/^void fsk_demod(struct FSK *fsk, uint8_t rx_bits[], COMP fsk_in[]){$/;"	f
fsk_demod_freq_est	codec2/fsk.c	/^void fsk_demod_freq_est(struct FSK *fsk, COMP fsk_in[],float *freqs,int M){$/;"	f
fsk_demod_sd	codec2/fsk.c	/^void fsk_demod_sd(struct FSK *fsk, float rx_sd[], COMP fsk_in[]){$/;"	f
fsk_destroy	codec2/fsk.c	/^void fsk_destroy(struct FSK *fsk){$/;"	f
fsk_enable_burst_mode	codec2/fsk.c	/^void fsk_enable_burst_mode(struct FSK *fsk,int nsyms){$/;"	f
fsk_generate_hann_table	codec2/fsk.c	/^static void fsk_generate_hann_table(struct FSK* fsk){$/;"	f	file:
fsk_get_demod_stats	codec2/fsk.c	/^void fsk_get_demod_stats(struct FSK *fsk, struct MODEM_STATS *stats){$/;"	f
fsk_mod	codec2/fsk.c	/^void fsk_mod(struct FSK *fsk,float fsk_out[],uint8_t tx_bits[]){$/;"	f
fsk_mod_c	codec2/fsk.c	/^void fsk_mod_c(struct FSK *fsk,COMP fsk_out[],uint8_t tx_bits[]){$/;"	f
fsk_nin	codec2/fsk.c	/^uint32_t fsk_nin(struct FSK *fsk){$/;"	f
fsk_set_est_limits	codec2/fsk.c	/^void fsk_set_est_limits(struct FSK *fsk,int est_min, int est_max){$/;"	f
fsk_set_nsym	codec2/fsk.c	/^void fsk_set_nsym(struct FSK *fsk,int nsyms){$/;"	f
fsk_stats_normalise_eye	codec2/fsk.c	/^void fsk_stats_normalise_eye(struct FSK *fsk, int normalise_enable) {$/;"	f
fsm	lwip/src/include/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	lwip/src/include/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	lwip/src/include/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	lwip/src/include/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	lwip/src/netif/ppp/fsm.c	/^void fsm_close(fsm *f, const char *reason) {$/;"	f
fsm_init	lwip/src/netif/ppp/fsm.c	/^void fsm_init(fsm *f) {$/;"	f
fsm_input	lwip/src/netif/ppp/fsm.c	/^void fsm_input(fsm *f, u_char *inpacket, int l) {$/;"	f
fsm_lowerdown	lwip/src/netif/ppp/fsm.c	/^void fsm_lowerdown(fsm *f) {$/;"	f
fsm_lowerup	lwip/src/netif/ppp/fsm.c	/^void fsm_lowerup(fsm *f) {$/;"	f
fsm_max_conf_req_transmits	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  fsm_max_conf_req_transmits;  \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:ppp_settings_s
fsm_max_nak_loops	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  fsm_max_nak_loops;           \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:ppp_settings_s
fsm_max_term_transmits	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  fsm_max_term_transmits;      \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:ppp_settings_s
fsm_open	lwip/src/netif/ppp/fsm.c	/^void fsm_open(fsm *f) {$/;"	f
fsm_protreject	lwip/src/netif/ppp/fsm.c	/^void fsm_protreject(fsm *f) {$/;"	f
fsm_rcoderej	lwip/src/netif/ppp/fsm.c	/^static void fsm_rcoderej(fsm *f, u_char *inp, int len) {$/;"	f	file:
fsm_rconfack	lwip/src/netif/ppp/fsm.c	/^static void fsm_rconfack(fsm *f, int id, u_char *inp, int len) {$/;"	f	file:
fsm_rconfnakrej	lwip/src/netif/ppp/fsm.c	/^static void fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len) {$/;"	f	file:
fsm_rconfreq	lwip/src/netif/ppp/fsm.c	/^static void fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len) {$/;"	f	file:
fsm_rtermack	lwip/src/netif/ppp/fsm.c	/^static void fsm_rtermack(fsm *f) {$/;"	f	file:
fsm_rtermreq	lwip/src/netif/ppp/fsm.c	/^static void fsm_rtermreq(fsm *f, int id, u_char *p, int len) {$/;"	f	file:
fsm_sconfreq	lwip/src/netif/ppp/fsm.c	/^static void fsm_sconfreq(fsm *f, int retransmit) {$/;"	f	file:
fsm_sdata	lwip/src/netif/ppp/fsm.c	/^void fsm_sdata(fsm *f, u_char code, u_char id, const u_char *data, int datalen) {$/;"	f
fsm_timeout	lwip/src/netif/ppp/fsm.c	/^static void fsm_timeout(void *arg) {$/;"	f	file:
fsm_timeout_time	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  fsm_timeout_time;            \/* Timeout time in seconds *\/$/;"	m	struct:ppp_settings_s
fsn	codec2/dump.c	/^static FILE *fsn = NULL;$/;"	v	file:
fsnr	codec2/dump.c	/^static FILE *fsnr = NULL;$/;"	v	file:
fsoftdec	codec2/dump.c	/^static FILE *fsoftdec = NULL;$/;"	v	file:
fsq	codec2/dump.c	/^static FILE *fsq = NULL;$/;"	v	file:
fsw	codec2/dump.c	/^static FILE *fsw = NULL;$/;"	v	file:
fsw_	codec2/dump.c	/^static FILE *fsw_ = NULL;$/;"	v	file:
ftomel	codec2/newamp1.c	/^float ftomel(float fHz) {$/;"	f
fullMessageSize	drivers/fsl_sha.c	/^    size_t fullMessageSize; \/*!< track message size during SHA_Update(). The value is used for padding. *\/$/;"	m	struct:_sha_ctx_internal	file:
function	lwip/src/include/lwip/priv/tcpip_priv.h	/^      tcpip_api_call_fn function;$/;"	m	struct:tcpip_msg::__anon468::__anon470
function	lwip/src/include/lwip/priv/tcpip_priv.h	/^      tcpip_callback_fn function;$/;"	m	struct:tcpip_msg::__anon468::__anon469
function	lwip/src/include/lwip/priv/tcpip_priv.h	/^      tcpip_callback_fn function;$/;"	m	struct:tcpip_msg::__anon468::__anon472
fw	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
fweights	codec2/dump.c	/^static FILE *fweights = NULL;$/;"	v	file:
gEncode	source/i2s_transfer.c	/^unsigned char gEncode[48];$/;"	v
gFinHzCache	drivers/fsl_clock.c	/^uint32_t gFinHzCache[CLOCK_USR_CFG_PLL_CONFIG_CACHE_COUNT]  = {0};$/;"	v
gFoutHzCache	drivers/fsl_clock.c	/^uint32_t gFoutHzCache[CLOCK_USR_CFG_PLL_CONFIG_CACHE_COUNT] = {0};$/;"	v
gHalTimerInstanceNum_c	component/timer/ctimer_adapter.c	14;"	d	file:
gPllSetupCacheIdx	drivers/fsl_clock.c	/^uint32_t gPllSetupCacheIdx                                  = 0U;$/;"	v
gPllSetupCacheStruct	drivers/fsl_clock.c	/^pll_setup_t gPllSetupCacheStruct[CLOCK_USR_CFG_PLL_CONFIG_CACHE_COUNT];$/;"	v
gStackTimerChannel_c	component/timer/ctimer_adapter.c	15;"	d	file:
g_CompositeClassConfig	vcom/composite.c	/^usb_device_class_config_struct_t g_CompositeClassConfig[2] = {$/;"	v
g_Ext_Clk_Freq	drivers/fsl_clock.c	/^const uint32_t g_Ext_Clk_Freq    = 12000000U;$/;"	v
g_I2S_Mclk_Freq	drivers/fsl_clock.c	/^const uint32_t g_I2S_Mclk_Freq   = 0U;$/;"	v
g_Lcd_Clk_In_Freq	drivers/fsl_clock.c	/^const uint32_t g_Lcd_Clk_In_Freq = 0U;$/;"	v
g_UsbDeviceCdcVcomConfig	vcom/usb_device_descriptor.c	/^usb_device_class_struct_t g_UsbDeviceCdcVcomConfig[2] = {$/;"	v
g_UsbDeviceCdcVcomInterfaceList	vcom/usb_device_descriptor.c	/^usb_device_interface_list_t g_UsbDeviceCdcVcomInterfaceList[USB_DEVICE_CONFIGURATION_COUNT] = {$/;"	v
g_UsbDeviceCdcVcomInterfaceList_2	vcom/usb_device_descriptor.c	/^usb_device_interface_list_t g_UsbDeviceCdcVcomInterfaceList_2[USB_DEVICE_CONFIGURATION_COUNT] = {$/;"	v
g_UsbDeviceCompositeConfigList	vcom/composite.c	/^usb_device_class_config_list_struct_t g_UsbDeviceCompositeConfigList = {$/;"	v
g_UsbDeviceEhciState	usb/device/source/ehci/usb_device_ehci.c	/^static usb_device_ehci_state_struct_t g_UsbDeviceEhciState[USB_DEVICE_CONFIG_EHCI];$/;"	v	file:
g_UsbDeviceEhciStateStatus	usb/device/source/ehci/usb_device_ehci.c	/^static uint8_t g_UsbDeviceEhciStateStatus[USB_DEVICE_CONFIG_EHCI]= {0}; $/;"	v	file:
g_UsbDeviceLanguage	vcom/usb_device_descriptor.c	/^usb_language_t g_UsbDeviceLanguage[USB_DEVICE_LANGUAGE_COUNT] = {{$/;"	v
g_UsbDeviceLanguageList	vcom/usb_device_descriptor.c	/^usb_language_list_t g_UsbDeviceLanguageList = {$/;"	v
g_UsbDeviceStringDescriptorArray	vcom/usb_device_descriptor.c	/^uint8_t *g_UsbDeviceStringDescriptorArray[USB_DEVICE_STRING_COUNT] = {$/;"	v
g_UsbDeviceStringDescriptorLength	vcom/usb_device_descriptor.c	/^uint32_t g_UsbDeviceStringDescriptorLength[USB_DEVICE_STRING_COUNT] = {$/;"	v
g_cdcVcomCicEndpoints	vcom/usb_device_descriptor.c	/^usb_device_endpoint_struct_t g_cdcVcomCicEndpoints[USB_CDC_VCOM_CIC_ENDPOINT_COUNT] = {$/;"	v
g_cdcVcomCicEndpoints_2	vcom/usb_device_descriptor.c	/^usb_device_endpoint_struct_t g_cdcVcomCicEndpoints_2[USB_CDC_VCOM_CIC_ENDPOINT_COUNT_2] = {$/;"	v
g_cdcVcomCicInterface	vcom/usb_device_descriptor.c	/^usb_device_interface_struct_t g_cdcVcomCicInterface[] = {{0,$/;"	v
g_cdcVcomCicInterface_2	vcom/usb_device_descriptor.c	/^usb_device_interface_struct_t g_cdcVcomCicInterface_2[] = {$/;"	v
g_cdcVcomDicEndpoints	vcom/usb_device_descriptor.c	/^usb_device_endpoint_struct_t g_cdcVcomDicEndpoints[USB_CDC_VCOM_DIC_ENDPOINT_COUNT] = {$/;"	v
g_cdcVcomDicEndpoints_2	vcom/usb_device_descriptor.c	/^usb_device_endpoint_struct_t g_cdcVcomDicEndpoints_2[USB_CDC_VCOM_DIC_ENDPOINT_COUNT_2] = {$/;"	v
g_cdcVcomDicInterface	vcom/usb_device_descriptor.c	/^usb_device_interface_struct_t g_cdcVcomDicInterface[] = {{0,$/;"	v
g_cdcVcomDicInterface_2	vcom/usb_device_descriptor.c	/^usb_device_interface_struct_t g_cdcVcomDicInterface_2[] = {$/;"	v
g_cdcVcomInterfaces	vcom/usb_device_descriptor.c	/^usb_device_interfaces_struct_t g_cdcVcomInterfaces[USB_CDC_VCOM_INTERFACE_COUNT] = {$/;"	v
g_cdcVcomInterfaces_2	vcom/usb_device_descriptor.c	/^usb_device_interfaces_struct_t g_cdcVcomInterfaces_2[USB_CDC_VCOM_INTERFACE_COUNT_2] = {$/;"	v
g_composite	vcom/composite.c	/^usb_device_composite_struct_t g_composite;$/;"	v
g_configs	drivers/fsl_spi.c	/^static spi_config_t g_configs[FSL_FEATURE_SOC_SPI_COUNT] = {(spi_data_width_t)0};$/;"	v	file:
g_deviceComposite	vcom/virtual_com.c	/^volatile static usb_device_composite_struct_t *g_deviceComposite;$/;"	v	file:
g_pfnVectors	startup/startup_lpc54018.c	/^void (* const g_pfnVectors[])(void) = {$/;"	v
g_serialHandle	utilities/fsl_debug_console.c	/^serial_handle_t g_serialHandle; \/*!< serial manager handle *\/$/;"	v
g_timerHandle	component/timer/ctimer_adapter.c	/^static hal_timer_handle_t g_timerHandle[gHalTimerInstanceNum_c];$/;"	v	file:
gainshft	drivers/fsl_dmic.h	/^    int32_t gainshft;                   \/*!< 4FS PCM data gain control *\/$/;"	m	struct:_dmic_channel_config
gamma	codec2/codec2_internal.h	/^    float         gamma;$/;"	m	struct:CODEC2
ge_cb	codec2/codebookge.c	/^const struct lsp_codebook ge_cb[] = {$/;"	v	typeref:struct:lsp_codebook
ge_coeff	codec2/quantise.c	/^static float ge_coeff[2] = {0.8, 0.9};$/;"	v	file:
general_call	CMSIS_driver/Driver_I2C.h	/^  uint32_t general_call     : 1;        \/\/\/< General Call indication (cleared on start of next Slave operation)$/;"	m	struct:_ARM_I2C_STATUS
generate_challenge	lwip/src/include/netif/ppp/chap-new.h	/^	void (*generate_challenge)(ppp_pcb *pcb, unsigned char *challenge);$/;"	m	struct:chap_digest_type
getWdtOscFreq	device/system_LPC54018.c	/^static uint32_t getWdtOscFreq(void)$/;"	f	file:
get_default_epdisc	lwip/src/netif/ppp/multilink.c	/^get_default_epdisc(ep)$/;"	f	file:
get_idle_time	lwip/src/netif/ppp/ppp.c	/^int get_idle_time(ppp_pcb *pcb, struct ppp_idle *ip) {$/;"	f
get_ip6nh	lwip/src/netif/ppp/ipv6cp.c	1509;"	d	file:
get_iphl	lwip/src/netif/ppp/ipcp.c	2386;"	d	file:
get_ipoff	lwip/src/netif/ppp/ipcp.c	2387;"	d	file:
get_ipproto	lwip/src/netif/ppp/ipcp.c	2388;"	d	file:
get_loop_output	lwip/src/netif/ppp/ppp.c	/^int get_loop_output(void) {$/;"	f
get_mask	lwip/src/netif/ppp/ppp.c	/^u32_t get_mask(u32_t addr) {$/;"	f
get_secret	lwip/src/netif/ppp/auth.c	/^int get_secret(ppp_pcb *pcb, const char *client, const char *server, char *secret, int *secret_len, int am_server) {$/;"	f
get_socket	lwip/src/api/sockets.c	/^get_socket(int fd)$/;"	f	file:
get_tcpflags	lwip/src/netif/ppp/ipcp.c	2390;"	d	file:
get_tcpflags	lwip/src/netif/ppp/ipv6cp.c	1511;"	d	file:
get_tcpoff	lwip/src/netif/ppp/ipcp.c	2389;"	d	file:
get_tcpoff	lwip/src/netif/ppp/ipv6cp.c	1510;"	d	file:
getaddrinfo	lwip/src/include/lwip/netdb.h	140;"	d
gethostbyname	lwip/src/include/lwip/netdb.h	133;"	d
gethostbyname_r	lwip/src/include/lwip/netdb.h	135;"	d
gethostbyname_r_helper	lwip/src/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getip	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_get_ip_fn             getip;$/;"	m	struct:altcp_functions
getpeername	lwip/src/include/lwip/sockets.h	620;"	d
getport	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_get_port_fn           getport;$/;"	m	struct:altcp_functions
getsockname	lwip/src/include/lwip/sockets.h	622;"	d
getsockopt	lwip/src/include/lwip/sockets.h	626;"	d
golay23_count_errors	codec2/golay23.c	/^int  golay23_count_errors(int recd_codeword, int corrected_codeword) {$/;"	f
golay23_decode	codec2/golay23.c	/^int  golay23_decode(int c) {$/;"	f
golay23_decode_no_tables	codec2/golay23.c	/^static int golay23_decode_no_tables(int c) {$/;"	f	file:
golay23_encode	codec2/golay23.c	/^int  golay23_encode(int c) {$/;"	f
golay23_encode_no_tables	codec2/golay23.c	/^static int golay23_encode_no_tables(int c) {$/;"	f	file:
golay23_init	codec2/golay23.c	/^void golay23_init(void) {$/;"	f
gpio_interrupt_config_t	drivers/fsl_gpio.h	/^} gpio_interrupt_config_t;$/;"	t	typeref:struct:_gpio_interrupt_config
gpio_interrupt_index_t	drivers/fsl_gpio.h	/^} gpio_interrupt_index_t;$/;"	t	typeref:enum:_gpio_interrupt_index
gpio_pin_config_t	drivers/fsl_gpio.h	/^} gpio_pin_config_t;$/;"	t	typeref:struct:_gpio_pin_config
gpio_pin_direction_t	drivers/fsl_gpio.h	/^} gpio_pin_direction_t;$/;"	t	typeref:enum:_gpio_pin_direction
gpio_pin_enable_mode_t	drivers/fsl_gpio.h	/^} gpio_pin_enable_mode_t;$/;"	t	typeref:enum:_gpio_pin_enable_mode
gpio_pin_enable_polarity_t	drivers/fsl_gpio.h	/^} gpio_pin_enable_polarity_t;$/;"	t	typeref:enum:_gpio_pin_enable_polarity
gray	codec2/codec2_internal.h	/^    int           gray;                    \/* non-zero for gray encoding                *\/$/;"	m	struct:CODEC2
group_address	lwip/src/include/lwip/igmp.h	/^  ip4_addr_t         group_address;$/;"	m	struct:igmp_group
group_address	lwip/src/include/lwip/mld6.h	/^  ip6_addr_t         group_address;$/;"	m	struct:mld_group
group_state	lwip/src/include/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
group_state	lwip/src/include/lwip/mld6.h	/^  u8_t               group_state;$/;"	m	struct:mld_group
gt_alpha5_root	codec2/rn.h	/^const float gt_alpha5_root[]={$/;"	v
gw	lwip/src/include/lwip/netif.h	/^  ip_addr_t gw;$/;"	m	struct:netif
h	lwip/src/include/lwip/priv/tcpip_priv.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon468::__anon473
h	lwip/src/include/lwip/timeouts.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
hAWin	emwin/emWin_header/GUI.h	/^    GUI_HWIN hAWin;$/;"	m	struct:GUI_CONTEXT
hAnim	emwin/emWin_header/GUI.h	/^  GUI_ANIM_HANDLE hAnim;$/;"	m	struct:__anon397
hBlockMaxZagSet	emwin/emWin_header/GUI_JPEG_Private.h	/^  GUI_HMEM hBlockMaxZagSet;$/;"	m	struct:GUI_JPEG_DCONTEXT
hBlocks	emwin/emWin_header/GUI_JPEG_Private.h	/^  GUI_HMEM hBlocks;$/;"	m	struct:GUI_JPEG_DCONTEXT
hCellArray	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_ARRAY                    hCellArray;$/;"	m	struct:__anon334
hCellInfo	emwin/emWin_header/LISTVIEW_Private.h	/^  WM_HMEM                      hCellInfo;                                         \/\/ Optional cell info. If 0, there is no cell info. (Defaults used)$/;"	m	struct:__anon333
hClient	emwin/emWin_header/FRAMEWIN_Private.h	/^  WM_HWIN                 hClient;$/;"	m	struct:__anon280
hClient	emwin/emWin_header/MULTIPAGE_Private.h	/^  WM_HWIN                hClient;$/;"	m	struct:MULTIPAGE_Obj
hColors	emwin/emWin_header/GUI_SPRITE_Private.h	/^  GUI_HMEM           hColors;$/;"	m	struct:__anon294
hColumnArray	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_ARRAY                    hColumnArray;                                      \/\/ Each entry is a handle of LISTVIEW_COLUMN structure.$/;"	m	struct:LISTVIEW_Obj
hContext	emwin/emWin_header/GUI.h	/^    GUI_HMEM hContext; \/\/ Handle of payload data like sprite- or memory device context$/;"	m	union:GUI_DEVICE::__anon383
hContext	emwin/emWin_header/GUI_SPRITE_Private.h	/^  GUI_HMEM           hContext;$/;"	m	struct:__anon294
hContext	emwin/emWin_header/KNOB_Private.h	/^  WM_HMEM hContext;$/;"	m	struct:__anon327
hContext	emwin/emWin_header/WM.h	/^  GUI_HMEM hContext;$/;"	m	struct:__anon287
hData	emwin/emWin_header/GUI_JPEG_Private.h	/^  GUI_HMEM hData;$/;"	m	struct:__anon363
hData	emwin/emWin_header/TREEVIEW_Private.h	/^  WM_HMEM              hData;  \/* Handle of TREEVIEW_ITEM_DATA structure *\/$/;"	m	struct:__anon225
hDevData	emwin/emWin_header/GUI.h	/^  GUI_HMEM    hDevData;$/;"	m	struct:GUI_CONTEXT
hDisabled	emwin/emWin_header/DROPDOWN_Private.h	/^  WM_HMEM hDisabled;$/;"	m	struct:__anon360
hDrawObj	emwin/emWin_header/HEADER_Private.h	/^  WM_HMEM hDrawObj;$/;"	m	struct:__anon273
hDrawObj	emwin/emWin_header/MULTIPAGE_Private.h	/^  WM_HMEM hDrawObj[3];$/;"	m	struct:__anon338
hDrawObj	emwin/emWin_header/SWIPELIST_Private.h	/^  WM_HMEM        hDrawObj;$/;"	m	struct:__anon236
hEdit	emwin/emWin_header/SPINBOX_Private.h	/^  EDIT_Handle         hEdit;$/;"	m	struct:__anon322
hFirst	emwin/emWin_header/TREEVIEW_Private.h	/^  TREEVIEW_ITEM_Handle    hFirst;$/;"	m	struct:__anon227
hFirstChild	emwin/emWin_header/WM.h	/^  GUI_HMEM hFirstChild;$/;"	m	struct:WM_WINDOW_INFO
hFirstChild	emwin/emWin_header/WM.h	/^  WM_HWIN hFirstChild;$/;"	m	struct:WM_Obj
hFocusedChild	emwin/emWin_header/FRAMEWIN_Private.h	/^  WM_HWIN                 hFocusedChild;   \/\/ Handle to focused child .. default none (0)$/;"	m	struct:__anon280
hFocusedChild	emwin/emWin_header/WINDOW_Private.h	/^  WM_HWIN hFocusedChild;$/;"	m	struct:__anon310
hGraph	emwin/emWin_header/GRAPH_Private.h	/^  WM_HWIN hGraph;                                                 \/* Handle of graph widget *\/    $/;"	m	struct:GRAPH_PAINT_OBJ
hHeader	emwin/emWin_header/LISTVIEW_Private.h	/^  HEADER_Handle                hHeader;$/;"	m	struct:LISTVIEW_Obj
hInput	emwin/emWin_header/GUI_Type.h	/^  PTR_ADDR       hInput;$/;"	m	struct:__anon270
hItem	emwin/emWin_header/TREEVIEW.h	/^  TREEVIEW_ITEM_Handle hItem;$/;"	m	struct:__anon372
hLast	emwin/emWin_header/TREEVIEW_Private.h	/^  TREEVIEW_ITEM_Handle    hLast;$/;"	m	struct:__anon227
hListWin	emwin/emWin_header/DROPDOWN_Private.h	/^  WM_HWIN hListWin;$/;"	m	struct:__anon360
hMem	emwin/emWin_header/IMAGE_Private.h	/^    GUI_MEMDEV_Handle hMem;$/;"	m	struct:__anon315
hMem	emwin/emWin_header/WM.h	/^    GUI_MEMDEV_Handle hMem; \/* Static memory device *\/$/;"	m	struct:WM_Obj
hMemBk	emwin/emWin_header/KNOB_Private.h	/^  GUI_MEMDEV_Handle hMemBk;$/;"	m	struct:__anon327
hMemDst	emwin/emWin_header/KNOB_Private.h	/^  GUI_MEMDEV_Handle hMemDst;$/;"	m	struct:__anon327
hMemSrc	emwin/emWin_header/KNOB_Private.h	/^  GUI_MEMDEV_Handle hMemSrc;$/;"	m	struct:__anon327
hMenu	emwin/emWin_header/FRAMEWIN_Private.h	/^  WM_HWIN                 hMenu;$/;"	m	struct:__anon280
hNew	emwin/emWin_header/WM_Intern.h	/^  WM_HWIN hNew;$/;"	m	struct:__anon366
hNext	emwin/emWin_header/TREEVIEW_Private.h	/^  TREEVIEW_ITEM_Handle hNext;$/;"	m	struct:__anon225
hNext	emwin/emWin_header/WM.h	/^  GUI_HMEM hNext;$/;"	m	struct:WM_WINDOW_INFO
hNext	emwin/emWin_header/WM.h	/^  WM_HWIN hNext;$/;"	m	struct:WM_Obj
hNextLin	emwin/emWin_header/WM.h	/^  WM_HWIN hNextLin;     \/* Next window in linear list *\/$/;"	m	struct:WM_Obj
hOld	emwin/emWin_header/WM_Intern.h	/^  WM_HWIN hOld;$/;"	m	struct:__anon366
hOwner	emwin/emWin_header/LISTBOX_Private.h	/^  WM_HWIN hOwner;$/;"	m	struct:__anon313
hOwner	emwin/emWin_header/MENU_Private.h	/^  WM_HWIN             hOwner;$/;"	m	struct:__anon319
hPageArray	emwin/emWin_header/MULTIPAGE_Private.h	/^  GUI_ARRAY              hPageArray;$/;"	m	struct:MULTIPAGE_Obj
hParent	emwin/emWin_header/CHOOSECOLOR.h	/^  WM_HWIN           hParent;$/;"	m	struct:__anon234
hParent	emwin/emWin_header/TREEVIEW_Private.h	/^  WM_HMEM              hParent; \/* Handle to treeview object *\/$/;"	m	struct:__anon225
hParent	emwin/emWin_header/WM.h	/^  GUI_HMEM hParent;$/;"	m	struct:WM_WINDOW_INFO
hParent	emwin/emWin_header/WM.h	/^  WM_HWIN hParent;$/;"	m	struct:WM_Obj
hPrev	emwin/emWin_header/TREEVIEW_Private.h	/^  TREEVIEW_ITEM_Handle hPrev;$/;"	m	struct:__anon225
hRowArray	emwin/emWin_header/LISTVIEW_Private.h	/^  GUI_ARRAY                    hRowArray;                                         \/\/ Each entry is a handle of LISTVIEW_ROW structure.$/;"	m	struct:LISTVIEW_Obj
hSampleBuf	emwin/emWin_header/GUI_JPEG_Private.h	/^  GUI_HMEM hSampleBuf;$/;"	m	struct:GUI_JPEG_DCONTEXT
hScanLine0	emwin/emWin_header/GUI_JPEG_Private.h	/^  GUI_HMEM hScanLine0; \/\/ Buffer 0$/;"	m	struct:GUI_JPEG_DCONTEXT
hScanLine1	emwin/emWin_header/GUI_JPEG_Private.h	/^  GUI_HMEM hScanLine1; \/\/ Buffer 1, only used for V2 sampling factors$/;"	m	struct:GUI_JPEG_DCONTEXT
hSel	emwin/emWin_header/TREEVIEW_Private.h	/^  TREEVIEW_ITEM_Handle    hSel;$/;"	m	struct:__anon227
hSort	emwin/emWin_header/LISTVIEW_Private.h	/^  WM_HMEM                      hSort;$/;"	m	struct:LISTVIEW_Obj
hSortArray	emwin/emWin_header/LISTVIEW_Private.h	/^  WM_HMEM                      hSortArray;$/;"	m	struct:__anon336
hSubmenu	emwin/emWin_header/MENU.h	/^  MENU_Handle   hSubmenu;$/;"	m	struct:__anon232
hSubmenu	emwin/emWin_header/MENU_Private.h	/^  MENU_Handle hSubmenu;$/;"	m	struct:__anon317
hText	emwin/emWin_header/FRAMEWIN_Private.h	/^  WM_HWIN                 hText;$/;"	m	struct:__anon280
hTimer	emwin/emWin_header/EDIT_Private.h	/^  WM_HTIMER            hTimer;$/;"	m	struct:EDIT_Obj_struct
hTimer	emwin/emWin_header/GUI.h	/^  GUI_TIMER_HANDLE hTimer;$/;"	m	struct:__anon399
hTimer	emwin/emWin_header/IMAGE_Private.h	/^  GUI_TIMER_HANDLE    hTimer;       \/\/ Timer used for animated images$/;"	m	struct:__anon315
hTimer	emwin/emWin_header/LISTWHEEL_Private.h	/^  WM_HMEM                 hTimer;$/;"	m	struct:__anon353
hTimer	emwin/emWin_header/SCROLLBAR_Private.h	/^  WM_HMEM hTimer;$/;"	m	struct:SCROLLBAR_OBJ
hTimer	emwin/emWin_header/SPINBOX_Private.h	/^  GUI_TIMER_HANDLE    hTimer;$/;"	m	struct:__anon322
hTimer	emwin/emWin_header/TREEVIEW_Private.h	/^  GUI_TIMER_HANDLE        hTimer;$/;"	m	struct:__anon227
hTimer	emwin/emWin_header/WM.h	/^  WM_HMEM  hTimer;$/;"	m	struct:__anon292
hToolTip	emwin/emWin_header/CHOOSEFILE.h	/^  WM_TOOLTIP_HANDLE hToolTip;                            \/\/ (for internal use only)$/;"	m	struct:CHOOSEFILE_INFO
hUsage	emwin/emWin_header/GUI_Private.h	/^  GUI_HMEM               hUsage;$/;"	m	struct:__anon295
hWin	emwin/emWin_header/MULTIPAGE_Private.h	/^  WM_HWIN hWin;$/;"	m	struct:__anon338
hWin	emwin/emWin_header/SWIPELIST_Private.h	/^  WM_HWIN hWin;$/;"	m	struct:__anon235
hWin	emwin/emWin_header/WIDGET.h	/^  WM_HWIN    hWin;$/;"	m	struct:__anon209
hWin	emwin/emWin_header/WM.h	/^  GUI_HMEM hWin;$/;"	m	struct:WM_WINDOW_INFO
hWin	emwin/emWin_header/WM.h	/^  WM_HWIN  hWin;$/;"	m	struct:__anon292
hWin	emwin/emWin_header/WM.h	/^  WM_HWIN hWin;         \/* Destination window *\/$/;"	m	struct:WM_MESSAGE
hWin	emwin/emWin_header/WM_Intern.h	/^  volatile WM_HWIN hWin;$/;"	m	struct:WM_CRITICAL_HANDLE
hWinSrc	emwin/emWin_header/WM.h	/^  WM_HWIN hWinSrc;      \/* Source window  *\/$/;"	m	struct:WM_MESSAGE
h_addr	lwip/src/include/lwip/netdb.h	100;"	d
h_addr_list	lwip/src/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	lwip/src/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	lwip/src/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	lwip/src/api/netdb.c	/^int h_errno;$/;"	v
h_length	lwip/src/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	lwip/src/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
haHandle	emwin/emWin_header/GUI_ARRAY_Private.h	/^  WM_HMEM haHandle;   \/* Handle to buffer holding handles *\/$/;"	m	struct:__anon365
hal_i2c_direction_t	component/i2c/i2c.h	/^} hal_i2c_direction_t;$/;"	t	typeref:enum:_hal_i2c_direction
hal_i2c_master_config_t	component/i2c/i2c.h	/^} hal_i2c_master_config_t;$/;"	t	typeref:struct:_hal_i2c_master_config
hal_i2c_master_handle_t	component/i2c/i2c.h	/^typedef void *hal_i2c_master_handle_t;$/;"	t
hal_i2c_master_t	component/i2c/flexcomm_i2c_adapter.c	/^} hal_i2c_master_t;$/;"	t	typeref:struct:_hal_i2c_master	file:
hal_i2c_master_transfer_callback_t	component/i2c/i2c.h	/^typedef void (*hal_i2c_master_transfer_callback_t)(hal_i2c_master_handle_t handle,$/;"	t
hal_i2c_master_transfer_flag_t	component/i2c/i2c.h	/^} hal_i2c_master_transfer_flag_t;$/;"	t	typeref:enum:_hal_i2c_master_transfer_flag
hal_i2c_master_transfer_t	component/i2c/i2c.h	/^} hal_i2c_master_transfer_t;$/;"	t	typeref:struct:_hal_i2c_master_transfer
hal_i2c_slave_config_t	component/i2c/i2c.h	/^} hal_i2c_slave_config_t;$/;"	t	typeref:struct:_hal_i2c_slave_config
hal_i2c_slave_handle_t	component/i2c/i2c.h	/^typedef void *hal_i2c_slave_handle_t;$/;"	t
hal_i2c_slave_t	component/i2c/flexcomm_i2c_adapter.c	/^} hal_i2c_slave_t;$/;"	t	typeref:struct:_hal_i2c_slave	file:
hal_i2c_slave_transfer_callback_t	component/i2c/i2c.h	/^typedef void (*hal_i2c_slave_transfer_callback_t)(hal_i2c_slave_handle_t handle,$/;"	t
hal_i2c_slave_transfer_event_t	component/i2c/i2c.h	/^} hal_i2c_slave_transfer_event_t;$/;"	t	typeref:enum:_hal_i2c_slave_transfer_event
hal_i2c_slave_transfer_t	component/i2c/i2c.h	/^} hal_i2c_slave_transfer_t;$/;"	t	typeref:struct:_hal_i2c_slave_transfer
hal_i2c_status_t	component/i2c/i2c.h	/^} hal_i2c_status_t;$/;"	t	typeref:enum:_hal_i2c_status
hal_timer_callback_t	component/timer/timer.h	/^typedef void (*hal_timer_callback_t)(void* param);$/;"	t
hal_timer_config_t	component/timer/timer.h	/^} hal_timer_config_t;$/;"	t	typeref:struct:_hal_timer_config
hal_timer_handle_struct_t	component/timer/ctimer_adapter.c	/^} hal_timer_handle_struct_t;$/;"	t	typeref:struct:_hal_timer_handle_struct_t	file:
hal_timer_handle_t	component/timer/timer.h	/^typedef void* hal_timer_handle_t;$/;"	t
hal_timer_status_t	component/timer/timer.h	/^} hal_timer_status_t;$/;"	t	typeref:enum:_hal_timer_status
hal_uart_config_t	component/uart/uart.h	/^} hal_uart_config_t;$/;"	t	typeref:struct:_hal_uart_config
hal_uart_handle_t	component/uart/uart.h	/^typedef void *hal_uart_handle_t;$/;"	t
hal_uart_parity_mode_t	component/uart/uart.h	/^} hal_uart_parity_mode_t;$/;"	t	typeref:enum:_hal_uart_parity_mode
hal_uart_receive_state_t	component/uart/usart_adapter.c	/^} hal_uart_receive_state_t;$/;"	t	typeref:struct:_hal_uart_receive_state	file:
hal_uart_send_state_t	component/uart/usart_adapter.c	/^} hal_uart_send_state_t;$/;"	t	typeref:struct:_hal_uart_send_state	file:
hal_uart_state_t	component/uart/usart_adapter.c	/^} hal_uart_state_t;$/;"	t	typeref:struct:_hal_uart_state	file:
hal_uart_status_t	component/uart/uart.h	/^} hal_uart_status_t;$/;"	t	typeref:enum:_hal_uart_status
hal_uart_stop_bit_count_t	component/uart/uart.h	/^} hal_uart_stop_bit_count_t;$/;"	t	typeref:enum:_hal_uart_stop_bit_count
hal_uart_transfer_callback_t	component/uart/uart.h	/^typedef void (*hal_uart_transfer_callback_t)(hal_uart_handle_t handle, hal_uart_status_t status, void *callbackParam);$/;"	t
hal_uart_transfer_t	component/uart/uart.h	/^} hal_uart_transfer_t;$/;"	t	typeref:struct:_hal_uart_transfer
handle	drivers/fsl_i2c.h	/^    i2c_slave_handle_t *handle;       \/*!< Pointer to handle that contains this transfer. *\/$/;"	m	struct:_i2c_slave_transfer
handle	drivers/fsl_i2c_cmsis.c	/^    cmsis_i2c_handle_t *handle;$/;"	m	struct:_cmsis_i2c_interrupt_driver_state	file:
handle	drivers/fsl_i2c_dma.c	/^    i2c_master_dma_handle_t *handle;$/;"	m	struct:_i2c_master_dma_private_handle	file:
handle	drivers/fsl_i2s_dma.c	/^    i2s_dma_handle_t *handle; \/*!< I2S handle *\/$/;"	m	struct:_i2s_dma_private_handle	file:
handle	drivers/fsl_spi_cmsis.c	/^    cmsis_spi_dma_handle_t *handle;$/;"	m	struct:_cmsis_spi_dma_driver_state	file:
handle	drivers/fsl_spi_cmsis.c	/^    cmsis_spi_handle_t *handle;$/;"	m	struct:_cmsis_spi_interrupt_driver_state	file:
handle	drivers/fsl_spi_dma.c	/^    spi_dma_handle_t *handle;$/;"	m	struct:_spi_dma_private_handle	file:
handle	osa/usb_osa_freertos.c	/^    EventGroupHandle_t handle; \/* The event handle *\/$/;"	m	struct:_usb_osa_event_struct	file:
handle	osa/usb_osa_freertos.c	/^    QueueHandle_t handle;                                  \/* MSGQ handle *\/$/;"	m	struct:_usb_osa_msgq_struct	file:
handle	osa/usb_osa_freertos.c	/^    SemaphoreHandle_t handle; \/* Semaphore handle *\/$/;"	m	struct:_usb_osa_sem_struct	file:
handle	source/common.h	/^	TaskHandle_t *handle;$/;"	m	struct:_TaskWork
handle	usb/device/class/usb_device_audio.h	/^    usb_device_handle handle;                              \/*!< The device handle *\/$/;"	m	struct:_usb_device_audio_struct
handle	usb/device/class/usb_device_ccid.h	/^    usb_device_handle handle;                        \/*!< The device handle *\/$/;"	m	struct:_usb_device_ccid_struct
handle	usb/device/class/usb_device_cdc_acm.h	/^    usb_device_handle handle;                           \/*!< The handle of the USB device. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
handle	usb/device/class/usb_device_class.h	/^    usb_device_handle handle;                          \/*!< USB device handle*\/$/;"	m	struct:_usb_device_common_class_struct
handle	usb/device/class/usb_device_hid.h	/^    usb_device_handle handle;                       \/*!< The device handle *\/$/;"	m	struct:_usb_device_hid_struct
handle	usb/device/class/usb_device_msc.h	/^    usb_device_handle handle;                              \/*!< The device handle *\/$/;"	m	struct:_usb_device_msc_struct
handle	usb/device/class/usb_device_phdc.h	/^    usb_device_handle handle;                       \/*!< The device handle *\/$/;"	m	struct:_usb_device_phdc_struct
handle	usb/device/class/usb_device_video.h	/^    usb_device_handle handle;                              \/*!< The device handle *\/$/;"	m	struct:_usb_device_video_struct
handle	utilities/fsl_debug_console.c	/^    int handle;$/;"	m	struct:__FILE	file:
handle_failure	lwip/src/include/netif/ppp/chap-new.h	/^	void (*handle_failure)(ppp_pcb *pcb, unsigned char *pkt, int len);$/;"	m	struct:chap_digest_type
handler	lwip/src/include/lwip/timeouts.h	/^  lwip_cyclic_timer_handler handler;$/;"	m	struct:lwip_cyclic_timer
handler_name	lwip/src/include/lwip/timeouts.h	/^  const char* handler_name;$/;"	m	struct:lwip_cyclic_timer
handler_name	lwip/src/include/lwip/timeouts.h	/^  const char* handler_name;$/;"	m	struct:sys_timeo
hann_table	codec2/fsk.h	/^    float* hann_table;		\/* Precomputed or runtime computed hann window table *\/$/;"	m	struct:FSK
hanning	codec2/hanning.h	/^const float hanning[]={$/;"	v
hanning_window	codec2/lpc.c	/^void hanning_window($/;"	f
hardwareError	usb/device/class/usb_device_ccid.h	/^        hardwareError;           \/*!< The buffer is used to notify host the hardware error happened *\/$/;"	m	struct:_usb_device_ccid_struct
hardwareHandle	component/i2c/flexcomm_i2c_adapter.c	/^    i2c_master_handle_t hardwareHandle;$/;"	m	struct:_hal_i2c_master	file:
hardwareHandle	component/i2c/flexcomm_i2c_adapter.c	/^    i2c_slave_handle_t hardwareHandle;$/;"	m	struct:_hal_i2c_slave	file:
hardwareHandle	component/uart/usart_adapter.c	/^    usart_handle_t hardwareHandle;$/;"	m	struct:_hal_uart_state	file:
hasSentState	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t hasSentState; \/*!< 1: The device has primed the state in interrupt pipe, 0: Not primed the state. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
head	component/lists/generic_list.h	/^    struct list_element_tag *head; \/*!< list head *\/$/;"	m	struct:list_tag	typeref:struct:list_tag::list_element_tag
head	littlefs/littlefs_include/lfs.h	/^                lfs_block_t head;$/;"	m	struct:lfs_entry::lfs_disk_entry::__anon425::__anon426
head	littlefs/littlefs_include/lfs.h	/^    lfs_block_t head;$/;"	m	struct:lfs_file
head	littlefs/littlefs_include/lfs.h	/^    lfs_block_t head[2];$/;"	m	struct:lfs_dir
headerInfoBitmap	usb/device/class/usb_device_video.h	/^        } headerInfoBitmap;$/;"	m	union:_usb_device_video_mjpeg_payload_header_struct::__anon503	typeref:struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon505
headerInfoBits	usb/device/class/usb_device_video.h	/^        } headerInfoBits;$/;"	m	union:_usb_device_video_mjpeg_payload_header_struct::__anon503	typeref:struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
headerInfoUnion	usb/device/class/usb_device_video.h	/^    } headerInfoUnion;$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct	typeref:union:_usb_device_video_mjpeg_payload_header_struct::__anon503
heapBITS_PER_BYTE	amazon-freertos/freertos/portable/heap_4.c	56;"	d	file:
heapBITS_PER_BYTE	amazon-freertos/freertos/portable/heap_5.c	90;"	d	file:
heapMINIMUM_BLOCK_SIZE	amazon-freertos/freertos/portable/heap_2.c	81;"	d	file:
heapMINIMUM_BLOCK_SIZE	amazon-freertos/freertos/portable/heap_4.c	53;"	d	file:
heapMINIMUM_BLOCK_SIZE	amazon-freertos/freertos/portable/heap_5.c	87;"	d	file:
heapSTRUCT_SIZE	amazon-freertos/freertos/portable/heap_2.c	/^static const uint16_t heapSTRUCT_SIZE	= ( ( sizeof ( BlockLink_t ) + ( portBYTE_ALIGNMENT - 1 ) ) & ~portBYTE_ALIGNMENT_MASK );$/;"	v	file:
hexc_val	lwip/src/netif/ppp/multilink.c	/^static int hexc_val(int c)$/;"	f	file:
hidDescriptor	usb/device/class/usb_device_class.h	/^    usb_device_get_hid_descriptor_struct_t hidDescriptor;       \/*!< The structure to get HID descriptor. *\/$/;"	m	union:_usb_device_get_descriptor_common_union
hidPhysicalDescriptor	usb/device/class/usb_device_class.h	/^        hidPhysicalDescriptor; \/*!< The structure to get HID physical descriptor. *\/$/;"	m	union:_usb_device_get_descriptor_common_union
hidReportDescriptor	usb/device/class/usb_device_class.h	/^        hidReportDescriptor; \/*!< The structure to get HID report descriptor. *\/$/;"	m	union:_usb_device_get_descriptor_common_union
hide_password	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  hide_password       :1;      \/* Hide password in dumped packets *\/$/;"	m	struct:ppp_settings_s
hintBitmap	usb/device/class/usb_device_video.h	/^        } hintBitmap;$/;"	m	union:_usb_device_video_probe_and_commit_controls_struct::__anon506	typeref:struct:_usb_device_video_probe_and_commit_controls_struct::__anon506::__anon507
hintBitmap	usb/device/class/usb_device_video.h	/^        } hintBitmap;$/;"	m	union:_usb_device_video_probe_and_commit_controls_struct::__anon508	typeref:struct:_usb_device_video_probe_and_commit_controls_struct::__anon508::__anon509
hintUnion	usb/device/class/usb_device_video.h	/^    } hintUnion;$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct	typeref:union:_usb_device_video_probe_and_commit_controls_struct::__anon506
hintUnion1	usb/device/class/usb_device_video.h	/^    } hintUnion1;$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct	typeref:union:_usb_device_video_probe_and_commit_controls_struct::__anon508
hints	lwip/src/include/lwip/netif.h	/^  struct netif_hint *hints;$/;"	m	struct:netif	typeref:struct:netif::netif_hint
his6_ipaddr	lwip/src/include/netif/ppp/ppp.h	/^  ip6_addr_t our6_ipaddr, his6_ipaddr;$/;"	m	struct:ppp_addrs
his_ipaddr	lwip/src/include/netif/ppp/ppp.h	/^  ip4_addr_t our_ipaddr, his_ipaddr, netmask;$/;"	m	struct:ppp_addrs
hisaddr	lwip/src/include/netif/ppp/ipcp.h	/^    u32_t ouraddr, hisaddr;	\/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hisid	lwip/src/include/netif/ppp/ipv6cp.h	/^    eui64_t ourid, hisid;       \/* Interface identifiers *\/$/;"	m	struct:ipv6cp_options
holdoff	lwip/src/include/netif/ppp/pppapi.h	/^      u16_t holdoff;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon440
horus_P	codec2/fsk.c	35;"	d	file:
hostExpectedDataLength	usb/device/class/usb_device_msc.h	/^    uint32_t hostExpectedDataLength;   \/*!< The number of bytes of data that the host expects to transfer *\/$/;"	m	struct:_usb_device_msc_thirteen_case_struct
hostExpectedDirection	usb/device/class/usb_device_msc.h	/^    uint8_t hostExpectedDirection;                        \/*!< Host expected data direction*\/$/;"	m	struct:_usb_device_msc_thirteen_case_struct
hostent	lwip/src/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	lwip/src/include/lwip/netif.h	/^  const char*  hostname;$/;"	m	struct:netif
hpText	emwin/emWin_header/BUTTON_Private.h	/^  WM_HMEM hpText;$/;"	m	struct:__anon402
hpText	emwin/emWin_header/CHECKBOX_Private.h	/^  WM_HMEM             hpText;$/;"	m	struct:__anon206
hpText	emwin/emWin_header/EDIT_Private.h	/^  WM_HMEM              hpText;$/;"	m	struct:EDIT_Obj_struct
hpText	emwin/emWin_header/PROGBAR_Private.h	/^  WM_HMEM hpText;$/;"	m	struct:__anon424
hpText	emwin/emWin_header/TEXT_Private.h	/^  WM_HMEM hpText;$/;"	m	struct:__anon298
hpf	codec2/sine.c	/^float hpf(float x, float states[])$/;"	f
hpf_states	codec2/codec2_internal.h	/^    float         hpf_states[2];           \/* high pass filter states                   *\/$/;"	m	struct:CODEC2
hs_pitch_refinement	codec2/sine.c	/^void hs_pitch_refinement(MODEL *model, COMP Sw[], float pmin, float pmax, float pstep)$/;"	f
htonl	lwip/src/include/lwip/def.h	121;"	d
htons	lwip/src/include/lwip/def.h	119;"	d
hwTick	usb/device/source/usb_device_dci.h	/^    volatile uint64_t hwTick; \/*!< Current hw tick(ms)*\/$/;"	m	struct:_usb_device_struct
hwaddr	lwip/src/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	lwip/src/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	codec2/kiss_fft.h	/^    kiss_fft_scalar i;$/;"	m	struct:__anon131
i	lwip/src/netif/slipif.c	/^  u16_t i, recved;$/;"	m	struct:slipif_priv	file:
i2cConfig	codec/fsl_wm8904.h	/^    codec_i2c_config_t i2cConfig; \/*!< i2c bus configuration *\/$/;"	m	struct:_wm8904_config
i2cDmaBase	drivers/fsl_i2c_cmsis.c	/^    DMA_Type *i2cDmaBase;   \/*!< DMA peripheral base address for i2c.    *\/$/;"	m	struct:_cmsis_i2c_dma_resource	file:
i2cDmaChannel	drivers/fsl_i2c_cmsis.c	/^    uint32_t i2cDmaChannel; \/*!< DMA channel for i2c.             *\/$/;"	m	struct:_cmsis_i2c_dma_resource	file:
i2cHandle	codec/fsl_wm8904.h	/^    void *i2cHandle;         \/*!< i2c handle *\/$/;"	m	struct:_wm8904_handle
i2c_direction_t	drivers/fsl_i2c.h	/^} i2c_direction_t;$/;"	t	typeref:enum:_i2c_direction
i2c_master_config_t	drivers/fsl_i2c.h	/^} i2c_master_config_t;$/;"	t	typeref:struct:_i2c_master_config
i2c_master_dma_handle_t	drivers/fsl_i2c_dma.h	/^typedef struct _i2c_master_dma_handle i2c_master_dma_handle_t;$/;"	t	typeref:struct:_i2c_master_dma_handle
i2c_master_dma_private_handle_t	drivers/fsl_i2c_dma.c	/^} i2c_master_dma_private_handle_t;$/;"	t	typeref:struct:_i2c_master_dma_private_handle	file:
i2c_master_dma_transfer_callback_t	drivers/fsl_i2c_dma.h	/^typedef void (*i2c_master_dma_transfer_callback_t)(I2C_Type *base,$/;"	t
i2c_master_handle_t	drivers/fsl_i2c.h	/^typedef struct _i2c_master_handle i2c_master_handle_t;$/;"	t	typeref:struct:_i2c_master_handle
i2c_master_transfer_callback_t	drivers/fsl_i2c.h	/^typedef void (*i2c_master_transfer_callback_t)(I2C_Type *base,$/;"	t
i2c_master_transfer_t	drivers/fsl_i2c.h	/^typedef struct _i2c_master_transfer i2c_master_transfer_t;$/;"	t	typeref:struct:_i2c_master_transfer
i2c_rtos_handle_t	drivers/freertos/fsl_i2c_freertos.h	/^} i2c_rtos_handle_t;$/;"	t	typeref:struct:_i2c_rtos_handle
i2c_slave_address_qual_mode_t	drivers/fsl_i2c.h	/^} i2c_slave_address_qual_mode_t;$/;"	t	typeref:enum:_i2c_slave_address_qual_mode
i2c_slave_address_register_t	drivers/fsl_i2c.h	/^} i2c_slave_address_register_t;$/;"	t	typeref:enum:_i2c_slave_address_register
i2c_slave_address_t	drivers/fsl_i2c.h	/^} i2c_slave_address_t;$/;"	t	typeref:struct:_i2c_slave_address
i2c_slave_bus_speed_t	drivers/fsl_i2c.h	/^} i2c_slave_bus_speed_t;$/;"	t	typeref:enum:_i2c_slave_bus_speed
i2c_slave_config_t	drivers/fsl_i2c.h	/^} i2c_slave_config_t;$/;"	t	typeref:struct:_i2c_slave_config
i2c_slave_fsm_t	drivers/fsl_i2c.h	/^} i2c_slave_fsm_t;$/;"	t	typeref:enum:_i2c_slave_fsm
i2c_slave_handle_t	drivers/fsl_i2c.h	/^typedef struct _i2c_slave_handle i2c_slave_handle_t;$/;"	t	typeref:struct:_i2c_slave_handle
i2c_slave_transfer_callback_t	drivers/fsl_i2c.h	/^typedef void (*i2c_slave_transfer_callback_t)(I2C_Type *base, volatile i2c_slave_transfer_t *transfer, void *userData);$/;"	t
i2c_slave_transfer_event_t	drivers/fsl_i2c.h	/^} i2c_slave_transfer_event_t;$/;"	t	typeref:enum:_i2c_slave_transfer_event
i2c_slave_transfer_t	drivers/fsl_i2c.h	/^} i2c_slave_transfer_t;$/;"	t	typeref:struct:_i2c_slave_transfer
i2sQueue	drivers/fsl_i2s.h	/^    volatile i2s_transfer_t i2sQueue[I2S_NUM_BUFFERS]; \/*!< Transfer queue storing transfer buffers *\/$/;"	m	struct:_i2s_handle
i2sQueue	drivers/fsl_i2s_dma.h	/^    volatile i2s_transfer_t i2sQueue[I2S_NUM_BUFFERS]; \/*!< Transfer queue storing transfer buffers *\/$/;"	m	struct:_i2s_dma_handle
i2s_Callback	source/i2s_transfer.c	/^void i2s_Callback(I2S_Type *base, i2s_dma_handle_t *handle,$/;"	f
i2s_config_t	drivers/fsl_i2s.h	/^} i2s_config_t;$/;"	t	typeref:struct:_i2s_config
i2s_dma_handle_t	drivers/fsl_i2s_dma.h	/^typedef struct _i2s_dma_handle i2s_dma_handle_t;$/;"	t	typeref:struct:_i2s_dma_handle
i2s_dma_private_handle_t	drivers/fsl_i2s_dma.c	/^} i2s_dma_private_handle_t;$/;"	t	typeref:struct:_i2s_dma_private_handle	file:
i2s_dma_transfer_callback_t	drivers/fsl_i2s_dma.h	/^typedef void (*i2s_dma_transfer_callback_t)(I2S_Type *base,$/;"	t
i2s_flags_t	drivers/fsl_i2s.h	/^} i2s_flags_t;$/;"	t	typeref:enum:_i2s_flags
i2s_handle_t	drivers/fsl_i2s.h	/^typedef struct _i2s_handle i2s_handle_t;$/;"	t	typeref:struct:_i2s_handle
i2s_master_slave_t	drivers/fsl_i2s.h	/^} i2s_master_slave_t;$/;"	t	typeref:enum:_i2s_master_slave
i2s_mode_t	drivers/fsl_i2s.h	/^} i2s_mode_t;$/;"	t	typeref:enum:_i2s_mode
i2s_transfer_callback_t	drivers/fsl_i2s.h	/^typedef void (*i2s_transfer_callback_t)(I2S_Type *base,$/;"	t
i2s_transfer_t	drivers/fsl_i2s.h	/^} i2s_transfer_t;$/;"	t	typeref:struct:_i2s_transfer
iConfiguration	usb/include/usb_spec.h	/^    uint8_t iConfiguration;      \/* Index to configuration string *\/$/;"	m	struct:_usb_descriptor_configuration
iDummy22	amazon-freertos/include/FreeRTOS.h	/^		int				iDummy22;$/;"	m	struct:xSTATIC_TCB
iInterface	usb/include/usb_spec.h	/^    uint8_t iInterface;$/;"	m	struct:_usb_descriptor_interface
iManufacturer	usb/include/usb_spec.h	/^    uint8_t iManufacturer;      \/* Index of string descriptor describing manufacturer *\/$/;"	m	struct:_usb_descriptor_device
iProduct	usb/include/usb_spec.h	/^    uint8_t iProduct;           \/* Index of string descriptor describing product *\/$/;"	m	struct:_usb_descriptor_device
iSerialNumber	usb/include/usb_spec.h	/^    uint8_t iSerialNumber;      \/* Index of string descriptor describing the device serial number *\/$/;"	m	struct:_usb_descriptor_device
iTaskErrno	amazon-freertos/freertos/tasks.c	/^		int iTaskErrno;$/;"	m	struct:tskTaskControlBlock	file:
iccn_retried	lwip/src/include/netif/ppp/pppol2tp.h	/^  u8_t iccn_retried;           \/* number of ICCN retries already done *\/$/;"	m	struct:pppol2tp_pcb_s
icmp	lwip/src/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp6	lwip/src/include/lwip/stats.h	/^  struct stats_proto icmp6;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp6_dest_unreach	lwip/src/core/ipv6/icmp6.c	/^icmp6_dest_unreach(struct pbuf *p, enum icmp6_dur_code c)$/;"	f
icmp6_dur_code	lwip/src/include/lwip/prot/icmp6.h	/^enum icmp6_dur_code {$/;"	g
icmp6_echo_hdr	lwip/src/include/lwip/prot/icmp6.h	/^struct icmp6_echo_hdr {$/;"	s
icmp6_hdr	lwip/src/include/lwip/prot/icmp6.h	/^struct icmp6_hdr {$/;"	s
icmp6_input	lwip/src/core/ipv6/icmp6.c	/^icmp6_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp6_packet_too_big	lwip/src/core/ipv6/icmp6.c	/^icmp6_packet_too_big(struct pbuf *p, u32_t mtu)$/;"	f
icmp6_param_problem	lwip/src/core/ipv6/icmp6.c	/^icmp6_param_problem(struct pbuf *p, enum icmp6_pp_code c, const void *pointer)$/;"	f
icmp6_pp_code	lwip/src/include/lwip/prot/icmp6.h	/^enum icmp6_pp_code {$/;"	g
icmp6_send_response	lwip/src/core/ipv6/icmp6.c	/^icmp6_send_response(struct pbuf *p, u8_t code, u32_t data, u8_t type)$/;"	f	file:
icmp6_send_response_with_addrs	lwip/src/core/ipv6/icmp6.c	/^icmp6_send_response_with_addrs(struct pbuf *p, u8_t code, u32_t data, u8_t type,$/;"	f	file:
icmp6_send_response_with_addrs_and_netif	lwip/src/core/ipv6/icmp6.c	/^icmp6_send_response_with_addrs_and_netif(struct pbuf *p, u8_t code, u32_t data, u8_t type,$/;"	f	file:
icmp6_te_code	lwip/src/include/lwip/prot/icmp6.h	/^enum icmp6_te_code {$/;"	g
icmp6_time_exceeded	lwip/src/core/ipv6/icmp6.c	/^icmp6_time_exceeded(struct pbuf *p, enum icmp6_te_code c)$/;"	f
icmp6_time_exceeded_with_addrs	lwip/src/core/ipv6/icmp6.c	/^icmp6_time_exceeded_with_addrs(struct pbuf *p, enum icmp6_te_code c,$/;"	f
icmp6_type	lwip/src/include/lwip/prot/icmp6.h	/^enum icmp6_type {$/;"	g
icmp_dest_unreach	lwip/src/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_type	lwip/src/include/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	lwip/src/include/lwip/prot/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_input	lwip/src/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_port_unreach	lwip/src/include/lwip/icmp.h	101;"	d
icmp_port_unreach	lwip/src/include/lwip/icmp.h	103;"	d
icmp_port_unreach	lwip/src/include/lwip/icmp.h	88;"	d
icmp_port_unreach	lwip/src/include/lwip/icmp.h	92;"	d
icmp_port_unreach	lwip/src/include/lwip/icmp.h	94;"	d
icmp_port_unreach	lwip/src/include/lwip/icmp.h	96;"	d
icmp_port_unreach	lwip/src/include/lwip/icmp.h	99;"	d
icmp_send_response	lwip/src/core/ipv4/icmp.c	/^icmp_send_response(struct pbuf *p, u8_t type, u8_t code)$/;"	f	file:
icmp_te_type	lwip/src/include/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	lwip/src/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	lwip/src/include/lwip/stats.h	/^  u32_t icmpinaddrmaskreps;$/;"	m	struct:stats_mib2
icmpinaddrmasks	lwip/src/include/lwip/stats.h	/^  u32_t icmpinaddrmasks;$/;"	m	struct:stats_mib2
icmpindestunreachs	lwip/src/include/lwip/stats.h	/^  u32_t icmpindestunreachs;$/;"	m	struct:stats_mib2
icmpinechoreps	lwip/src/include/lwip/stats.h	/^  u32_t icmpinechoreps;$/;"	m	struct:stats_mib2
icmpinechos	lwip/src/include/lwip/stats.h	/^  u32_t icmpinechos;$/;"	m	struct:stats_mib2
icmpinerrors	lwip/src/include/lwip/stats.h	/^  u32_t icmpinerrors;$/;"	m	struct:stats_mib2
icmpinmsgs	lwip/src/include/lwip/stats.h	/^  u32_t icmpinmsgs;$/;"	m	struct:stats_mib2
icmpinparmprobs	lwip/src/include/lwip/stats.h	/^  u32_t icmpinparmprobs;$/;"	m	struct:stats_mib2
icmpinredirects	lwip/src/include/lwip/stats.h	/^  u32_t icmpinredirects;$/;"	m	struct:stats_mib2
icmpinsrcquenchs	lwip/src/include/lwip/stats.h	/^  u32_t icmpinsrcquenchs;$/;"	m	struct:stats_mib2
icmpintimeexcds	lwip/src/include/lwip/stats.h	/^  u32_t icmpintimeexcds;$/;"	m	struct:stats_mib2
icmpintimestampreps	lwip/src/include/lwip/stats.h	/^  u32_t icmpintimestampreps;$/;"	m	struct:stats_mib2
icmpintimestamps	lwip/src/include/lwip/stats.h	/^  u32_t icmpintimestamps;$/;"	m	struct:stats_mib2
icmpoutdestunreachs	lwip/src/include/lwip/stats.h	/^  u32_t icmpoutdestunreachs;$/;"	m	struct:stats_mib2
icmpoutechoreps	lwip/src/include/lwip/stats.h	/^  u32_t icmpoutechoreps;$/;"	m	struct:stats_mib2
icmpoutechos	lwip/src/include/lwip/stats.h	/^  u32_t icmpoutechos; \/* can be incremented by user application ('ping') *\/$/;"	m	struct:stats_mib2
icmpouterrors	lwip/src/include/lwip/stats.h	/^  u32_t icmpouterrors;$/;"	m	struct:stats_mib2
icmpoutmsgs	lwip/src/include/lwip/stats.h	/^  u32_t icmpoutmsgs;$/;"	m	struct:stats_mib2
icmpouttimeexcds	lwip/src/include/lwip/stats.h	/^  u32_t icmpouttimeexcds;$/;"	m	struct:stats_mib2
icrq_retried	lwip/src/include/netif/ppp/pppol2tp.h	/^  u8_t icrq_retried;           \/* number of ICRQ retries already done *\/$/;"	m	struct:pppol2tp_pcb_s
id	lwip/src/include/netif/ppp/chap-new.h	/^	u8_t id;$/;"	m	struct:chap_server_state
id	lwip/src/include/netif/ppp/fsm.h	/^    u8_t id;			\/* Current id *\/$/;"	m	struct:fsm
idProduct	usb/include/usb_spec.h	/^    uint8_t idProduct[2];       \/* Product ID (assigned by the manufacturer) *\/$/;"	m	struct:_usb_descriptor_device
idVendor	usb/include/usb_spec.h	/^    uint8_t idVendor[2];        \/* Vendor ID (assigned by the USB-IF) *\/$/;"	m	struct:_usb_descriptor_device
identification	lwip/src/include/lwip/ip6_frag.h	/^  u32_t identification;$/;"	m	struct:ip6_reassdata
identifier	drivers/fsl_common.c	/^    uint16_t identifier; \/*!< Identifier for the memory control block. *\/$/;"	m	struct:_mem_align_control_block	file:
idleRate	usb/device/class/usb_device_hid.h	/^    uint8_t idleRate;                               \/*!< The idle rate of the HID device *\/$/;"	m	struct:_usb_device_hid_struct
idle_time_limit	lwip/src/include/netif/ppp/ppp.h	/^  u16_t  idle_time_limit;             \/* Disconnect if idle for this many seconds *\/$/;"	m	struct:ppp_settings_s
ieee_802154_broadcast	lwip/src/netif/lowpan6.c	/^static const struct lowpan6_link_addr ieee_802154_broadcast = {2, {0xff, 0xff}};$/;"	v	typeref:struct:lowpan6_link_addr	file:
ieee_802154_hdr	lwip/src/include/netif/ieee802154.h	/^struct ieee_802154_hdr {$/;"	s
ieee_802154_pan_id	lwip/src/netif/lowpan6.c	/^  u16_t ieee_802154_pan_id;$/;"	m	struct:lowpan6_ieee802154_data	file:
if4_up	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int if4_up                  :1; \/* True when the IPv4 interface is up. *\/$/;"	m	struct:ppp_pcb_s
if6_up	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int if6_up                  :1; \/* True when the IPv6 interface is up. *\/$/;"	m	struct:ppp_pcb_s
if_addr	lwip/src/api/sockets.c	/^  ip4_addr_t if_addr;$/;"	m	struct:lwip_socket_multicast_pair	file:
if_idx	lwip/src/api/sockets.c	/^  u8_t if_idx;$/;"	m	struct:lwip_socket_multicast_mld6_pair	file:
if_idx	lwip/src/include/lwip/pbuf.h	/^  u8_t if_idx;$/;"	m	struct:pbuf
if_idx	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t if_idx;$/;"	m	struct:api_msg::__anon454::__anon456
if_idx	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t if_idx;$/;"	m	struct:api_msg::__anon454::__anon461
if_indextoname	lwip/src/include/lwip/if_api.h	58;"	d
if_nametoindex	lwip/src/include/lwip/if_api.h	59;"	d
ifftFlag	CMSIS/arm_math.h	/^    uint8_t ifftFlag;                  \/**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. *\/$/;"	m	struct:__anon74
ifftFlag	CMSIS/arm_math.h	/^    uint8_t ifftFlag;                  \/**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. *\/$/;"	m	struct:__anon75
ifftFlag	CMSIS/arm_math.h	/^    uint8_t ifftFlag;                \/**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. *\/$/;"	m	struct:__anon70
ifftFlag	CMSIS/arm_math.h	/^    uint8_t ifftFlag;                \/**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. *\/$/;"	m	struct:__anon71
ifftFlag	CMSIS/arm_math.h	/^    uint8_t ifftFlag;                \/**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. *\/$/;"	m	struct:__anon72
ifftFlag	CMSIS/arm_math.h	/^    uint8_t ifftFlag;                \/**< flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. *\/$/;"	m	struct:__anon73
ifftFlagR	CMSIS/arm_math.h	/^    uint8_t ifftFlagR;                          \/**< flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. *\/$/;"	m	struct:__anon80
ifftFlagR	CMSIS/arm_math.h	/^    uint8_t ifftFlagR;                          \/**< flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. *\/$/;"	m	struct:__anon81
ifftFlagR	CMSIS/arm_math.h	/^    uint8_t ifftFlagR;                        \/**< flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. *\/$/;"	m	struct:__anon79
ifindiscards	lwip/src/include/lwip/stats.h	/^  u32_t ifindiscards;$/;"	m	struct:stats_mib2_netif_ctrs
ifinerrors	lwip/src/include/lwip/stats.h	/^  u32_t ifinerrors;$/;"	m	struct:stats_mib2_netif_ctrs
ifinnucastpkts	lwip/src/include/lwip/stats.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:stats_mib2_netif_ctrs
ifinoctets	lwip/src/include/lwip/stats.h	/^  u32_t ifinoctets;$/;"	m	struct:stats_mib2_netif_ctrs
ifinucastpkts	lwip/src/include/lwip/stats.h	/^  u32_t ifinucastpkts;$/;"	m	struct:stats_mib2_netif_ctrs
ifinunknownprotos	lwip/src/include/lwip/stats.h	/^  u32_t ifinunknownprotos;$/;"	m	struct:stats_mib2_netif_ctrs
ifoutdiscards	lwip/src/include/lwip/stats.h	/^  u32_t ifoutdiscards;$/;"	m	struct:stats_mib2_netif_ctrs
ifouterrors	lwip/src/include/lwip/stats.h	/^  u32_t ifouterrors;$/;"	m	struct:stats_mib2_netif_ctrs
ifoutnucastpkts	lwip/src/include/lwip/stats.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:stats_mib2_netif_ctrs
ifoutoctets	lwip/src/include/lwip/stats.h	/^  u32_t ifoutoctets;$/;"	m	struct:stats_mib2_netif_ctrs
ifoutucastpkts	lwip/src/include/lwip/stats.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:stats_mib2_netif_ctrs
ifr_name	lwip/src/include/lwip/sockets.h	/^  char ifr_name[IFNAMSIZ]; \/* Interface name *\/$/;"	m	struct:ifreq
ifreq	lwip/src/include/lwip/sockets.h	/^struct ifreq {$/;"	s
ifs	lwip/src/include/lwip/priv/api_msg.h	/^    } ifs;$/;"	m	union:netifapi_msg::__anon463	typeref:struct:netifapi_msg::__anon463::__anon466
igmp	lwip/src/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	lwip/src/core/ipv4/igmp.c	/^igmp_delaying_member(struct igmp_group *group, u8_t maxresp)$/;"	f	file:
igmp_group	lwip/src/include/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_init	lwip/src/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	lwip/src/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, const ip4_addr_t *dest)$/;"	f
igmp_ip_output_if	lwip/src/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, const ip4_addr_t *src, const ip4_addr_t *dest, struct netif *netif)$/;"	f	file:
igmp_joingroup	lwip/src/core/ipv4/igmp.c	/^igmp_joingroup(const ip4_addr_t *ifaddr, const ip4_addr_t *groupaddr)$/;"	f
igmp_joingroup_netif	lwip/src/core/ipv4/igmp.c	/^igmp_joingroup_netif(struct netif *netif, const ip4_addr_t *groupaddr)$/;"	f
igmp_leavegroup	lwip/src/core/ipv4/igmp.c	/^igmp_leavegroup(const ip4_addr_t *ifaddr, const ip4_addr_t *groupaddr)$/;"	f
igmp_leavegroup_netif	lwip/src/core/ipv4/igmp.c	/^igmp_leavegroup_netif(struct netif *netif, const ip4_addr_t *groupaddr)$/;"	f
igmp_lookfor_group	lwip/src/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, const ip4_addr_t *addr)$/;"	f
igmp_lookup_group	lwip/src/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, const ip4_addr_t *addr)$/;"	f	file:
igmp_mac_filter	lwip/src/include/lwip/netif.h	/^  netif_igmp_mac_filter_fn igmp_mac_filter;$/;"	m	struct:netif
igmp_msg	lwip/src/include/lwip/prot/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	lwip/src/core/ipv4/igmp.c	/^igmp_remove_group(struct netif *netif, struct igmp_group *group)$/;"	f	file:
igmp_report_groups	lwip/src/core/ipv4/igmp.c	/^igmp_report_groups(struct netif *netif)$/;"	f
igmp_send	lwip/src/core/ipv4/igmp.c	/^igmp_send(struct netif *netif, struct igmp_group *group, u8_t type)$/;"	f	file:
igmp_start	lwip/src/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	lwip/src/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f	file:
igmp_stop	lwip/src/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_timeout	lwip/src/core/ipv4/igmp.c	/^igmp_timeout(struct netif *netif, struct igmp_group *group)$/;"	f	file:
igmp_tmr	lwip/src/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imag	codec2/comp.h	/^  float imag;$/;"	m	struct:__anon132
implementingDiskDrive	usb/device/class/usb_device_msc.h	/^    uint32_t implementingDiskDrive;                        \/*!< Disk drive*\/$/;"	m	struct:_usb_device_msc_struct
imr_interface	lwip/src/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	lwip/src/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	codec2/varicode.h	/^    int            in[2];$/;"	m	struct:VARICODE_DEC
in6_addr	lwip/src/include/lwip/inet.h	/^struct in6_addr {$/;"	s
in6addr_any	lwip/src/core/ipv6/inet6.c	/^const struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;$/;"	v	typeref:struct:in6_addr
inEndpointCswCancelFlag	usb/device/class/usb_device_msc.h	/^    uint8_t inEndpointCswCancelFlag; \/*!< the state when calcel function happens, and need send the csw after cancel*\/$/;"	m	struct:_usb_device_msc_struct
inEndpointStallFlag	usb/device/class/usb_device_msc.h	/^    uint8_t inEndpointStallFlag;  \/*!< In endpoint stall flag*\/$/;"	m	struct:_usb_device_msc_struct
in_accm	lwip/src/include/netif/ppp/pppos.h	/^  ext_accm in_accm;                \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:pppos_pcb_s
in_addr	lwip/src/include/lwip/inet.h	/^struct in_addr {$/;"	s
in_addr_t	lwip/src/include/lwip/inet.h	/^typedef u32_t in_addr_t;$/;"	t
in_escaped	lwip/src/include/netif/ppp/pppos.h	/^  u8_t in_escaped;                 \/* Escape next character. *\/$/;"	m	struct:pppos_pcb_s
in_fcs	lwip/src/include/netif/ppp/pppos.h	/^  u16_t in_fcs;                    \/* Input Frame Check Sequence value. *\/$/;"	m	struct:pppos_pcb_s
in_head	lwip/src/include/netif/ppp/pppos.h	/^  struct pbuf *in_head, *in_tail;  \/* The input packet. *\/$/;"	m	struct:pppos_pcb_s	typeref:struct:pppos_pcb_s::pbuf
in_pktinfo	lwip/src/include/lwip/sockets.h	/^struct in_pktinfo {$/;"	s
in_port_t	lwip/src/include/lwip/sockets.h	/^typedef u16_t in_port_t;$/;"	t
in_protocol	lwip/src/include/netif/ppp/pppos.h	/^  u16_t in_protocol;               \/* The input protocol code. *\/$/;"	m	struct:pppos_pcb_s
in_state	lwip/src/include/netif/ppp/pppos.h	/^  u8_t in_state;                   \/* The input process state. *\/$/;"	m	struct:pppos_pcb_s
in_tail	lwip/src/include/netif/ppp/pppos.h	/^  struct pbuf *in_head, *in_tail;  \/* The input packet. *\/$/;"	m	struct:pppos_pcb_s	typeref:struct:pppos_pcb_s::
inc_bytes	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int inc_bytes;	\/* incompressible bytes *\/$/;"	m	struct:compstat
inc_packets	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int inc_packets;	\/* incompressible packets *\/$/;"	m	struct:compstat
index	codec2/mbest.h	/^    int   index[MBEST_STAGES];    \/* index of each stage that lead us to this error *\/$/;"	m	struct:MBEST_LIST
index	codec2/mpdecode_core.h	/^  int *index;                     $/;"	m	struct:c_node
index	codec2/mpdecode_core.h	/^  int *index;  \/* the index of a c_node it is connected to *\/$/;"	m	struct:v_node
index	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t index;$/;"	m	struct:netifapi_msg::__anon463::__anon466
index	usb/device/class/usb_device_class.h	/^    uint8_t index;           \/*!< Physical index *\/$/;"	m	struct:_usb_device_get_hid_physical_descriptor_struct
inet6_addr_from_ip6addr	lwip/src/include/lwip/inet.h	147;"	d
inet6_addr_to_ip6addr	lwip/src/include/lwip/inet.h	151;"	d
inet6_aton	lwip/src/include/lwip/inet.h	158;"	d
inet6_ntoa	lwip/src/include/lwip/inet.h	159;"	d
inet6_ntoa_r	lwip/src/include/lwip/inet.h	160;"	d
inet_addr	lwip/src/include/lwip/inet.h	139;"	d
inet_addr_from_ip4addr	lwip/src/include/lwip/inet.h	135;"	d
inet_addr_to_ip4addr	lwip/src/include/lwip/inet.h	136;"	d
inet_aton	lwip/src/include/lwip/inet.h	140;"	d
inet_chksum	lwip/src/core/inet_chksum.c	/^inet_chksum(const void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	lwip/src/core/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	lwip/src/core/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p, u8_t proto, u16_t proto_len,$/;"	f
inet_chksum_pseudo_partial	lwip/src/core/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p, u8_t proto, u16_t proto_len,$/;"	f
inet_cksum_pseudo_base	lwip/src/core/inet_chksum.c	/^inet_cksum_pseudo_base(struct pbuf *p, u8_t proto, u16_t proto_len, u32_t acc)$/;"	f	file:
inet_cksum_pseudo_partial_base	lwip/src/core/inet_chksum.c	/^inet_cksum_pseudo_partial_base(struct pbuf *p, u8_t proto, u16_t proto_len,$/;"	f	file:
inet_ntoa	lwip/src/include/lwip/inet.h	141;"	d
inet_ntoa_r	lwip/src/include/lwip/inet.h	142;"	d
inet_ntop	lwip/src/include/lwip/sockets.h	658;"	d
inet_pton	lwip/src/include/lwip/sockets.h	660;"	d
information	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t information[4];          \/*!< Information*\/$/;"	m	struct:_usb_device_request_sense_data_struct
informationBufferLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t informationBufferLength;$/;"	m	struct:_rndis_query_cmplt_struct
informationBufferLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t informationBufferLength;$/;"	m	struct:_rndis_query_msg_struct
informationBufferLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t informationBufferLength;$/;"	m	struct:_rndis_set_msg_struct
informationBufferOffset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t informationBufferOffset;$/;"	m	struct:_rndis_query_cmplt_struct
informationBufferOffset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t informationBufferOffset;$/;"	m	struct:_rndis_query_msg_struct
informationBufferOffset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t informationBufferOffset;$/;"	m	struct:_rndis_set_msg_struct
init	lwip/src/include/lwip/priv/api_msg.h	/^      netif_init_fn init;$/;"	m	struct:netifapi_msg::__anon463::__anon464
init	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*init) (ppp_pcb *pcb);$/;"	m	struct:protent
init	lwip/src/netif/zepif.c	/^  struct zepif_init init;$/;"	m	struct:zepif_state	typeref:struct:zepif_state::zepif_init	file:
init_gpio_int	source/main.c	/^void init_gpio_int()$/;"	f
inited	codec2/golay23.c	/^static int inited = 0;$/;"	v	file:
initial_value	codec2/mpdecode_core.h	/^  float initial_value;$/;"	m	struct:v_node
inner_conn	lwip/src/include/lwip/altcp.h	/^  struct altcp_pcb *inner_conn;$/;"	m	struct:altcp_pcb	typeref:struct:altcp_pcb::altcp_pcb
inp	lwip/src/include/lwip/priv/tcpip_priv.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon468	typeref:struct:tcpip_msg::__anon468::__anon471
input	drivers/fsl_ctimer.h	/^    ctimer_capture_channel_t input; \/*!< Input channel to increment the timer, used only in timer$/;"	m	struct:_ctimer_config
input	lwip/src/include/lwip/netif.h	/^  netif_input_fn input;$/;"	m	struct:netif
input	lwip/src/include/lwip/priv/api_msg.h	/^      netif_input_fn input;$/;"	m	struct:netifapi_msg::__anon463::__anon464
input	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*input) (ppp_pcb *pcb, u_char *pkt, int len);$/;"	m	struct:protent
inputRate	drivers/fsl_clock.h	/^    uint32_t inputRate;   \/*!< PLL input clock in Hz, only used if PLL_CONFIGFLAG_USEINRATE flag is set *\/$/;"	m	struct:_pll_config
inputRate	drivers/fsl_clock.h	/^    uint32_t inputRate; \/*!< USB PLL input rate *\/$/;"	m	struct:_usb_pll_setup
input_fn	lwip/src/include/lwip/priv/tcpip_priv.h	/^      netif_input_fn input_fn;$/;"	m	struct:tcpip_msg::__anon468::__anon471
inputmux_connection_t	drivers/fsl_inputmux_connections.h	/^} inputmux_connection_t;$/;"	t	typeref:enum:_inputmux_connection_t
inputsync	drivers/fsl_sctimer.h	/^    uint8_t inputsync;                  \/*!< SCT INSYNC value, INSYNC field in the CONFIG register, from bit9 to bit 16.$/;"	m	struct:_sctimer_config
inseg	lwip/src/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
instance	codec2/codec2_fft.h	/^        const arm_cfft_instance_f32* instance;$/;"	m	struct:__anon137
instance	codec2/codec2_fft.h	/^      arm_rfft_fast_instance_f32* instance;$/;"	m	struct:__anon136
instance	component/i2c/flexcomm_i2c_adapter.c	/^    uint8_t instance;$/;"	m	struct:_hal_i2c_master	file:
instance	component/i2c/flexcomm_i2c_adapter.c	/^    uint8_t instance;$/;"	m	struct:_hal_i2c_slave	file:
instance	component/i2c/i2c.h	/^    uint8_t instance;      \/*!< Instance of the i2c *\/$/;"	m	struct:_hal_i2c_master_config
instance	component/i2c/i2c.h	/^    uint8_t instance;      \/*!< Instance of the i2c *\/$/;"	m	struct:_hal_i2c_slave_config
instance	component/serial_manager/serial_port_uart.h	/^    uint8_t instance;                               \/*!< Instance (0 - UART0, 1 - UART1, ...), detail information$/;"	m	struct:_serial_port_uart_config
instance	component/timer/ctimer_adapter.c	/^    uint8_t instance;$/;"	m	struct:_hal_timer_handle_struct_t	file:
instance	component/timer/timer.h	/^    uint8_t  instance;                    \/*!< Hardware timer module instance, for example: if you want use FTM0,then the instance is configured to 0, if$/;"	m	struct:_hal_timer_config
instance	component/uart/uart.h	/^    uint8_t instance; \/*!< Instance (0 - UART0, 1 - UART1, ...), detail information please refer to the$/;"	m	struct:_hal_uart_config
instance	component/uart/usart_adapter.c	/^    uint8_t instance;$/;"	m	struct:_hal_uart_state	file:
instance	drivers/fsl_spi_cmsis.c	/^    uint32_t instance;$/;"	m	struct:_cmsis_spi_resource	file:
intA	drivers/fsl_dma.h	/^    bool intA;              \/*!< Raises IRQ when transfer is done and set IRQA status register flag *\/$/;"	m	struct:_dma_xfercfg
intA	drivers/fsl_i2s_dma.c	/^    volatile bool intA; \/*!< If next scheduled DMA transfer will cause interrupt A or B *\/$/;"	m	struct:_i2s_dma_private_handle	file:
intB	drivers/fsl_dma.h	/^    bool intB;              \/*!< Raises IRQ when transfer is done and set IRQB status register flag *\/$/;"	m	struct:_dma_xfercfg
interface	usb/device/class/usb_device_class.h	/^    usb_device_interface_struct_t *interface; \/*!< Interface structure list*\/$/;"	m	struct:_usb_device_interfaces_struct
interface	usb/device/class/usb_device_printer.h	/^    uint8_t interface;        \/*!< The class specific request interface index *\/$/;"	m	struct:_usb_device_printer_class_request
interface	usb/include/usb_spec.h	/^    usb_descriptor_interface_t interface;         \/* Interface descriptor *\/$/;"	m	union:_usb_descriptor_union
interfaceHandle	usb/device/class/usb_device_ccid.h	/^    usb_device_interface_struct_t *interfaceHandle;  \/*!< Current interface handle *\/$/;"	m	struct:_usb_device_ccid_struct
interfaceHandle	usb/device/class/usb_device_hid.h	/^    usb_device_interface_struct_t *interfaceHandle; \/*!< Current interface handle *\/$/;"	m	struct:_usb_device_hid_struct
interfaceHandle	usb/device/class/usb_device_msc.h	/^    usb_device_interface_struct_t *interfaceHandle;        \/*!< Current interface handle *\/$/;"	m	struct:_usb_device_msc_struct
interfaceHandle	usb/device/class/usb_device_phdc.h	/^    usb_device_interface_struct_t *interfaceHandle; \/*!< Current interface handle *\/$/;"	m	struct:_usb_device_phdc_struct
interfaceHandle	usb/device/class/usb_device_printer.h	/^    usb_device_interface_struct_t *interfaceHandle; \/*!< Current interface handle *\/$/;"	m	struct:_usb_device_printer_struct
interfaceIndex	usb/device/class/usb_device_cdc_acm.h	/^    uint16_t interfaceIndex; \/*!< The interface index of the setup packet. *\/$/;"	m	struct:_usb_device_cdc_acm_request_param_struct
interfaceList	usb/device/class/usb_device_class.h	/^    usb_device_interface_list_t *interfaceList; \/*!< Interfaces of the class*\/$/;"	m	struct:_usb_device_class_struct
interfaceNumber	usb/device/class/usb_device_ccid.h	/^    uint8_t interfaceNumber;     \/*!< The interface number of the class *\/$/;"	m	struct:_usb_device_ccid_struct
interfaceNumber	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t interfaceNumber;               \/*!< The current interface number. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
interfaceNumber	usb/device/class/usb_device_class.h	/^    uint8_t interfaceNumber;                  \/*!< Interface number*\/$/;"	m	struct:_usb_device_interfaces_struct
interfaceNumber	usb/device/class/usb_device_class.h	/^    uint8_t interfaceNumber; \/*!< The interface number. *\/$/;"	m	struct:_usb_device_get_hid_descriptor_struct
interfaceNumber	usb/device/class/usb_device_class.h	/^    uint8_t interfaceNumber; \/*!< The interface number. *\/$/;"	m	struct:_usb_device_get_hid_physical_descriptor_struct
interfaceNumber	usb/device/class/usb_device_class.h	/^    uint8_t interfaceNumber; \/*!< The interface number. *\/$/;"	m	struct:_usb_device_get_hid_report_descriptor_struct
interfaceNumber	usb/device/class/usb_device_hid.h	/^    uint8_t interfaceNumber;                        \/*!< The interface number of the class *\/$/;"	m	struct:_usb_device_hid_struct
interfaceNumber	usb/device/class/usb_device_msc.h	/^    uint8_t interfaceNumber;         \/*!< The interface number of the class *\/$/;"	m	struct:_usb_device_msc_struct
interfaceNumber	usb/device/class/usb_device_phdc.h	/^    uint8_t interfaceNumber;                        \/*!< The interface number of the class *\/$/;"	m	struct:_usb_device_phdc_struct
interfaceNumber	usb/device/class/usb_device_printer.h	/^    uint8_t interfaceNumber;                        \/*!< Interface number in the device descriptor *\/$/;"	m	struct:_usb_device_printer_struct
interfaces	usb/device/class/usb_device_class.h	/^    usb_device_interfaces_struct_t *interfaces; \/*!< All interfaces*\/$/;"	m	struct:_usb_device_interface_list
interp_Wo	codec2/interp.c	/^void interp_Wo($/;"	f
interp_Wo2	codec2/interp.c	/^void interp_Wo2($/;"	f
interp_Wo_v	codec2/newamp1.c	/^void interp_Wo_v(float Wo_[], int L_[], int voicing_[], float Wo1, float Wo2, int voicing1, int voicing2)$/;"	f
interp_energy	codec2/interp.c	/^float interp_energy(float prev_e, float next_e)$/;"	f
interp_energy2	codec2/interp.c	/^float interp_energy2(float prev_e, float next_e, float weight)$/;"	f
interp_para	codec2/newamp1.c	/^void interp_para(float y[], float xp[], float yp[], int np, float x[], int n)$/;"	f
interpolate_lsp	codec2/interp.c	/^void interpolate_lsp($/;"	f
interpolate_lsp_ver2	codec2/interp.c	/^void interpolate_lsp_ver2(float interp[], float prev[],  float next[], float weight, int order)$/;"	f
interruptEndpoint	vcom/virtual_com.h	/^    uint8_t interruptEndpoint;          \/*interrupt endpoint number*\/$/;"	m	struct:_usb_cdc_vcom_struct
interruptEndpointMaxPacketSize	vcom/virtual_com.h	/^    uint16_t interruptEndpointMaxPacketSize; \/*interrupt  endpoint maxpacket size *\/$/;"	m	struct:_usb_cdc_vcom_struct
interruptIn	usb/device/class/usb_device_cdc_acm.h	/^    usb_device_cdc_acm_pipe_t interruptIn; \/*!< The interrupt in pipe for notifying the device state to host. *\/$/;"	m	struct:_usb_device_cdc_acm_struct
interruptIn	usb/device/class/usb_device_phdc.h	/^    usb_device_phdc_pipe_t interruptIn;             \/*!< The interrupt in pipe for sending data *\/$/;"	m	struct:_usb_device_phdc_struct
interruptInBusy	usb/device/class/usb_device_ccid.h	/^    uint8_t interruptInBusy;     \/*!< The interrupt IN pipe is busy or not. *\/$/;"	m	struct:_usb_device_ccid_struct
interruptInPipeBusy	usb/device/class/usb_device_hid.h	/^    uint8_t interruptInPipeBusy;                    \/*!< Interrupt IN pipe busy flag *\/$/;"	m	struct:_usb_device_hid_struct
interruptInPipeDataBuffer	usb/device/class/usb_device_hid.h	/^    uint8_t *interruptInPipeDataBuffer;             \/*!< IN pipe data buffer backup when stall *\/$/;"	m	struct:_usb_device_hid_struct
interruptInPipeDataLen	usb/device/class/usb_device_hid.h	/^    uint32_t interruptInPipeDataLen;                \/*!< IN pipe data length backup when stall  *\/$/;"	m	struct:_usb_device_hid_struct
interruptInPipeStall	usb/device/class/usb_device_hid.h	/^    uint8_t interruptInPipeStall;                    \/*!< Interrupt IN pipe stall flag *\/$/;"	m	struct:_usb_device_hid_struct
interruptOutPipeBusy	usb/device/class/usb_device_hid.h	/^    uint8_t interruptOutPipeBusy;                   \/*!< Interrupt OUT pipe busy flag *\/$/;"	m	struct:_usb_device_hid_struct
interruptOutPipeDataBuffer	usb/device/class/usb_device_hid.h	/^    uint8_t *interruptOutPipeDataBuffer;             \/*!< OUT pipe data buffer backup when stall *\/$/;"	m	struct:_usb_device_hid_struct
interruptOutPipeDataLen	usb/device/class/usb_device_hid.h	/^    uint32_t interruptOutPipeDataLen;                \/*!< OUT pipe data length backup when stall  *\/$/;"	m	struct:_usb_device_hid_struct
interruptOutPipeStall	usb/device/class/usb_device_hid.h	/^    uint8_t interruptOutPipeStall;                   \/*!< Interrupt OUT pipe stall flag *\/$/;"	m	struct:_usb_device_hid_struct
interval	usb/device/class/usb_device_class.h	/^    uint8_t interval;        \/*!< Endpoint interval*\/$/;"	m	struct:_usb_device_endpoint_struct
interval	usb/device/include/usb_device.h	/^    uint8_t interval;        \/*!< Endpoint interval*\/$/;"	m	struct:_usb_device_endpoint_init_struct
interval_ms	lwip/src/include/lwip/timeouts.h	/^  u32_t interval_ms;$/;"	m	struct:lwip_cyclic_timer
invalidation_timer	lwip/src/include/lwip/priv/nd6_priv.h	/^  u32_t invalidation_timer; \/* in seconds *\/$/;"	m	struct:nd6_prefix_list_entry
invalidation_timer	lwip/src/include/lwip/priv/nd6_priv.h	/^  u32_t invalidation_timer; \/* in seconds *\/$/;"	m	struct:nd6_router_list_entry
inverse	codec2/_kiss_fft_guts.h	/^    int inverse;$/;"	m	struct:kiss_fft_state
inverse	codec2/codec2_fft.h	/^        int inverse;$/;"	m	struct:__anon137
inverse	codec2/codec2_fft.h	/^      int inverse;$/;"	m	struct:__anon136
inverse_filter	codec2/lpc.c	/^void inverse_filter($/;"	f
ioc	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t ioc : 1;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon521::__anon522
ioc	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t ioc : 1;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon517::__anon518
iocon_group_t	drivers/fsl_iocon.h	/^} iocon_group_t;$/;"	t	typeref:struct:_iocon_group
ioctl	lwip/src/include/lwip/sockets.h	676;"	d
ioctl	lwip/src/include/netif/ppp/pppapi.h	/^    } ioctl;$/;"	m	union:pppapi_msg_msg::__anon435	typeref:struct:pppapi_msg_msg::__anon435::__anon442
ioctlsocket	lwip/src/include/lwip/sockets.h	572;"	d
ioctlsocket	lwip/src/include/lwip/sockets.h	656;"	d
ionumber	drivers/fsl_iocon.h	/^    uint32_t ionumber : 8;  \/* IO number *\/$/;"	m	struct:_iocon_group
ios	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t ios : 1;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon515::__anon516
iov_base	lwip/src/include/lwip/sockets.h	/^  void  *iov_base;$/;"	m	struct:iovec
iov_len	lwip/src/include/lwip/sockets.h	/^  size_t iov_len;$/;"	m	struct:iovec
iovec	lwip/src/include/lwip/sockets.h	/^struct iovec {$/;"	s
ip	lwip/src/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon446	typeref:struct:netconn::__anon446::ip_pcb
ip	lwip/src/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip4	lwip/src/include/lwip/ip_addr.h	/^    ip4_addr_t ip4;$/;"	m	union:ip_addr::__anon474
ip4_2_ipv4_mapped_ipv6	lwip/src/include/lwip/ip_addr.h	247;"	d
ip4_addr	lwip/src/include/lwip/ip4_addr.h	/^struct ip4_addr {$/;"	s
ip4_addr1	lwip/src/include/lwip/ip4_addr.h	177;"	d
ip4_addr1_16	lwip/src/include/lwip/ip4_addr.h	190;"	d
ip4_addr1_16_val	lwip/src/include/lwip/ip4_addr.h	194;"	d
ip4_addr1_val	lwip/src/include/lwip/ip4_addr.h	184;"	d
ip4_addr2	lwip/src/include/lwip/ip4_addr.h	178;"	d
ip4_addr2_16	lwip/src/include/lwip/ip4_addr.h	191;"	d
ip4_addr2_16_val	lwip/src/include/lwip/ip4_addr.h	195;"	d
ip4_addr2_val	lwip/src/include/lwip/ip4_addr.h	185;"	d
ip4_addr3	lwip/src/include/lwip/ip4_addr.h	179;"	d
ip4_addr3_16	lwip/src/include/lwip/ip4_addr.h	192;"	d
ip4_addr3_16_val	lwip/src/include/lwip/ip4_addr.h	196;"	d
ip4_addr3_val	lwip/src/include/lwip/ip4_addr.h	186;"	d
ip4_addr4	lwip/src/include/lwip/ip4_addr.h	180;"	d
ip4_addr4_16	lwip/src/include/lwip/ip4_addr.h	193;"	d
ip4_addr4_16_val	lwip/src/include/lwip/ip4_addr.h	197;"	d
ip4_addr4_val	lwip/src/include/lwip/ip4_addr.h	187;"	d
ip4_addr_cmp	lwip/src/include/lwip/ip4_addr.h	145;"	d
ip4_addr_copy	lwip/src/include/lwip/ip4_addr.h	107;"	d
ip4_addr_debug_print	lwip/src/include/lwip/ip4_addr.h	162;"	d
ip4_addr_debug_print_parts	lwip/src/include/lwip/ip4_addr.h	160;"	d
ip4_addr_debug_print_val	lwip/src/include/lwip/ip4_addr.h	168;"	d
ip4_addr_get_byte	lwip/src/include/lwip/ip4_addr.h	176;"	d
ip4_addr_get_byte_val	lwip/src/include/lwip/ip4_addr.h	183;"	d
ip4_addr_get_network	lwip/src/include/lwip/ip4_addr.h	131;"	d
ip4_addr_get_u32	lwip/src/include/lwip/ip4_addr.h	128;"	d
ip4_addr_isany	lwip/src/include/lwip/ip4_addr.h	148;"	d
ip4_addr_isany_val	lwip/src/include/lwip/ip4_addr.h	147;"	d
ip4_addr_isbroadcast	lwip/src/include/lwip/ip4_addr.h	150;"	d
ip4_addr_isbroadcast_u32	lwip/src/core/ipv4/ip4_addr.c	/^ip4_addr_isbroadcast_u32(u32_t addr, const struct netif *netif)$/;"	f
ip4_addr_islinklocal	lwip/src/include/lwip/ip4_addr.h	158;"	d
ip4_addr_isloopback	lwip/src/include/lwip/ip4_addr.h	119;"	d
ip4_addr_ismulticast	lwip/src/include/lwip/ip4_addr.h	156;"	d
ip4_addr_netcmp	lwip/src/include/lwip/ip4_addr.h	141;"	d
ip4_addr_netmask_valid	lwip/src/core/ipv4/ip4_addr.c	/^ip4_addr_netmask_valid(u32_t netmask)$/;"	f
ip4_addr_p_t	lwip/src/include/lwip/prot/ip4.h	/^typedef struct ip4_addr_packed ip4_addr_p_t;$/;"	t	typeref:struct:ip4_addr_packed
ip4_addr_packed	lwip/src/include/lwip/prot/ip4.h	/^struct ip4_addr_packed {$/;"	s
ip4_addr_set	lwip/src/include/lwip/ip4_addr.h	109;"	d
ip4_addr_set_any	lwip/src/include/lwip/ip4_addr.h	115;"	d
ip4_addr_set_hton	lwip/src/include/lwip/ip4_addr.h	122;"	d
ip4_addr_set_loopback	lwip/src/include/lwip/ip4_addr.h	117;"	d
ip4_addr_set_u32	lwip/src/include/lwip/ip4_addr.h	126;"	d
ip4_addr_set_zero	lwip/src/include/lwip/ip4_addr.h	113;"	d
ip4_addr_t	lwip/src/include/lwip/ip4_addr.h	/^typedef struct ip4_addr ip4_addr_t;$/;"	t	typeref:struct:ip4_addr
ip4_addr_wordaligned	lwip/src/include/lwip/prot/etharp.h	/^struct ip4_addr_wordaligned {$/;"	s
ip4_canforward	lwip/src/core/ipv4/ip4.c	/^ip4_canforward(struct pbuf *p)$/;"	f	file:
ip4_current_dest_addr	lwip/src/include/lwip/ip.h	173;"	d
ip4_current_dest_addr	lwip/src/include/lwip/ip.h	190;"	d
ip4_current_header	lwip/src/include/lwip/ip.h	151;"	d
ip4_current_header	lwip/src/include/lwip/ip.h	180;"	d
ip4_current_src_addr	lwip/src/include/lwip/ip.h	171;"	d
ip4_current_src_addr	lwip/src/include/lwip/ip.h	188;"	d
ip4_debug_print	lwip/src/core/ipv4/ip4.c	/^ip4_debug_print(struct pbuf *p)$/;"	f
ip4_debug_print	lwip/src/include/lwip/ip4.h	100;"	d
ip4_default_multicast_netif	lwip/src/core/ipv4/ip4.c	/^static struct netif *ip4_default_multicast_netif;$/;"	v	typeref:struct:netif	file:
ip4_forward	lwip/src/core/ipv4/ip4.c	/^ip4_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip4_frag	lwip/src/core/ipv4/ip4_frag.c	/^ip4_frag(struct pbuf *p, struct netif *netif, const ip4_addr_t *dest)$/;"	f
ip4_input	lwip/src/core/ipv4/ip4.c	/^ip4_input(struct pbuf *p, struct netif *inp)$/;"	f
ip4_input_accept	lwip/src/core/ipv4/ip4.c	/^ip4_input_accept(struct netif *netif)$/;"	f	file:
ip4_netif_get_local_ip	lwip/src/include/lwip/ip4.h	95;"	d
ip4_output	lwip/src/core/ipv4/ip4.c	/^ip4_output(struct pbuf *p, const ip4_addr_t *src, const ip4_addr_t *dest,$/;"	f
ip4_output_hinted	lwip/src/core/ipv4/ip4.c	/^ip4_output_hinted(struct pbuf *p, const ip4_addr_t *src, const ip4_addr_t *dest,$/;"	f
ip4_output_if	lwip/src/core/ipv4/ip4.c	/^ip4_output_if(struct pbuf *p, const ip4_addr_t *src, const ip4_addr_t *dest,$/;"	f
ip4_output_if_opt	lwip/src/core/ipv4/ip4.c	/^ip4_output_if_opt(struct pbuf *p, const ip4_addr_t *src, const ip4_addr_t *dest,$/;"	f
ip4_output_if_opt_src	lwip/src/core/ipv4/ip4.c	/^ip4_output_if_opt_src(struct pbuf *p, const ip4_addr_t *src, const ip4_addr_t *dest,$/;"	f
ip4_output_if_src	lwip/src/core/ipv4/ip4.c	/^ip4_output_if_src(struct pbuf *p, const ip4_addr_t *src, const ip4_addr_t *dest,$/;"	f
ip4_reass	lwip/src/core/ipv4/ip4_frag.c	/^ip4_reass(struct pbuf *p)$/;"	f
ip4_route	lwip/src/core/ipv4/ip4.c	/^ip4_route(const ip4_addr_t *dest)$/;"	f
ip4_route_src	lwip/src/core/ipv4/ip4.c	/^ip4_route_src(const ip4_addr_t *src, const ip4_addr_t *dest)$/;"	f
ip4_route_src	lwip/src/include/lwip/ip4.h	69;"	d
ip4_set_default_multicast_netif	lwip/src/core/ipv4/ip4.c	/^ip4_set_default_multicast_netif(struct netif *default_multicast_netif)$/;"	f
ip4addr_aton	lwip/src/core/ipv4/ip4_addr.c	/^ip4addr_aton(const char *cp, ip4_addr_t *addr)$/;"	f
ip4addr_ntoa	lwip/src/core/ipv4/ip4_addr.c	/^ip4addr_ntoa(const ip4_addr_t *addr)$/;"	f
ip4addr_ntoa_r	lwip/src/core/ipv4/ip4_addr.c	/^ip4addr_ntoa_r(const ip4_addr_t *addr, char *buf, int buflen)$/;"	f
ip6	lwip/src/include/lwip/ip_addr.h	/^    ip6_addr_t ip6;$/;"	m	union:ip_addr::__anon474
ip6	lwip/src/include/lwip/stats.h	/^  struct stats_proto ip6;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip6_addr	lwip/src/include/lwip/ip6_addr.h	/^struct ip6_addr {$/;"	s
ip6_addr	lwip/src/include/lwip/netif.h	/^  ip_addr_t ip6_addr[LWIP_IPV6_NUM_ADDRESSES];$/;"	m	struct:netif
ip6_addr_any	lwip/src/core/ipv6/ip6_addr.c	/^const ip_addr_t ip6_addr_any = IPADDR6_INIT(0ul, 0ul, 0ul, 0ul);$/;"	v
ip6_addr_assign_zone	lwip/src/include/lwip/ip6_zone.h	198;"	d
ip6_addr_assign_zone	lwip/src/include/lwip/ip6_zone.h	271;"	d
ip6_addr_clear_zone	lwip/src/include/lwip/ip6_zone.h	118;"	d
ip6_addr_clear_zone	lwip/src/include/lwip/ip6_zone.h	265;"	d
ip6_addr_cmp	lwip/src/include/lwip/ip6_addr.h	180;"	d
ip6_addr_cmp_packed	lwip/src/include/lwip/ip6_addr.h	184;"	d
ip6_addr_cmp_solicitednode	lwip/src/include/lwip/ip6_addr.h	277;"	d
ip6_addr_cmp_zone	lwip/src/include/lwip/ip6_zone.h	128;"	d
ip6_addr_cmp_zone	lwip/src/include/lwip/ip6_zone.h	268;"	d
ip6_addr_cmp_zoneless	lwip/src/include/lwip/ip6_addr.h	168;"	d
ip6_addr_copy	lwip/src/include/lwip/ip6_addr.h	100;"	d
ip6_addr_copy_from_packed	lwip/src/include/lwip/ip6_addr.h	113;"	d
ip6_addr_copy_to_packed	lwip/src/include/lwip/ip6_addr.h	120;"	d
ip6_addr_copy_zone	lwip/src/include/lwip/ip6_zone.h	121;"	d
ip6_addr_copy_zone	lwip/src/include/lwip/ip6_zone.h	266;"	d
ip6_addr_debug_print	lwip/src/include/lwip/ip6_addr.h	316;"	d
ip6_addr_debug_print_parts	lwip/src/include/lwip/ip6_addr.h	313;"	d
ip6_addr_debug_print_val	lwip/src/include/lwip/ip6_addr.h	326;"	d
ip6_addr_equals_zone	lwip/src/include/lwip/ip6_zone.h	124;"	d
ip6_addr_equals_zone	lwip/src/include/lwip/ip6_zone.h	267;"	d
ip6_addr_has_scope	lwip/src/include/lwip/ip6_zone.h	177;"	d
ip6_addr_has_scope	lwip/src/include/lwip/ip6_zone.h	270;"	d
ip6_addr_has_zone	lwip/src/include/lwip/ip6_zone.h	112;"	d
ip6_addr_has_zone	lwip/src/include/lwip/ip6_zone.h	263;"	d
ip6_addr_isallnodes_iflocal	lwip/src/include/lwip/ip6_addr.h	242;"	d
ip6_addr_isallnodes_linklocal	lwip/src/include/lwip/ip6_addr.h	247;"	d
ip6_addr_isallrouters_linklocal	lwip/src/include/lwip/ip6_addr.h	257;"	d
ip6_addr_isany	lwip/src/include/lwip/ip6_addr.h	196;"	d
ip6_addr_isany_val	lwip/src/include/lwip/ip6_addr.h	192;"	d
ip6_addr_isdeprecated	lwip/src/include/lwip/ip6_addr.h	303;"	d
ip6_addr_isduplicated	lwip/src/include/lwip/ip6_addr.h	304;"	d
ip6_addr_isglobal	lwip/src/include/lwip/ip6_addr.h	203;"	d
ip6_addr_isinvalid	lwip/src/include/lwip/ip6_addr.h	299;"	d
ip6_addr_isipv4mappedipv6	lwip/src/include/lwip/ip6_addr.h	211;"	d
ip6_addr_islinklocal	lwip/src/include/lwip/ip6_addr.h	205;"	d
ip6_addr_isloopback	lwip/src/include/lwip/ip6_addr.h	198;"	d
ip6_addr_ismulticast	lwip/src/include/lwip/ip6_addr.h	213;"	d
ip6_addr_ismulticast_adminlocal	lwip/src/include/lwip/ip6_addr.h	230;"	d
ip6_addr_ismulticast_global	lwip/src/include/lwip/ip6_addr.h	233;"	d
ip6_addr_ismulticast_iflocal	lwip/src/include/lwip/ip6_addr.h	228;"	d
ip6_addr_ismulticast_linklocal	lwip/src/include/lwip/ip6_addr.h	229;"	d
ip6_addr_ismulticast_orglocal	lwip/src/include/lwip/ip6_addr.h	232;"	d
ip6_addr_ismulticast_sitelocal	lwip/src/include/lwip/ip6_addr.h	231;"	d
ip6_addr_ispreferred	lwip/src/include/lwip/ip6_addr.h	302;"	d
ip6_addr_issitelocal	lwip/src/include/lwip/ip6_addr.h	207;"	d
ip6_addr_issolicitednode	lwip/src/include/lwip/ip6_addr.h	267;"	d
ip6_addr_istentative	lwip/src/include/lwip/ip6_addr.h	300;"	d
ip6_addr_isuniquelocal	lwip/src/include/lwip/ip6_addr.h	209;"	d
ip6_addr_isvalid	lwip/src/include/lwip/ip6_addr.h	301;"	d
ip6_addr_lacks_zone	lwip/src/include/lwip/ip6_zone.h	228;"	d
ip6_addr_lacks_zone	lwip/src/include/lwip/ip6_zone.h	273;"	d
ip6_addr_life_isinfinite	lwip/src/include/lwip/ip6_addr.h	310;"	d
ip6_addr_life_isstatic	lwip/src/include/lwip/ip6_addr.h	309;"	d
ip6_addr_multicast_prefix_flag	lwip/src/include/lwip/ip6_addr.h	215;"	d
ip6_addr_multicast_rendezvous_flag	lwip/src/include/lwip/ip6_addr.h	216;"	d
ip6_addr_multicast_scope	lwip/src/include/lwip/ip6_addr.h	217;"	d
ip6_addr_multicast_transient_flag	lwip/src/include/lwip/ip6_addr.h	214;"	d
ip6_addr_netcmp	lwip/src/include/lwip/ip6_addr.h	160;"	d
ip6_addr_netcmp_zoneless	lwip/src/include/lwip/ip6_addr.h	150;"	d
ip6_addr_nethostcmp	lwip/src/include/lwip/ip6_addr.h	164;"	d
ip6_addr_p_t	lwip/src/include/lwip/prot/ip6.h	/^typedef struct ip6_addr_packed ip6_addr_p_t;$/;"	t	typeref:struct:ip6_addr_packed
ip6_addr_packed	lwip/src/include/lwip/prot/ip6.h	/^struct ip6_addr_packed {$/;"	s
ip6_addr_pref_life	lwip/src/include/lwip/netif.h	/^  u32_t ip6_addr_pref_life[LWIP_IPV6_NUM_ADDRESSES];$/;"	m	struct:netif
ip6_addr_select_zone	lwip/src/include/lwip/ip6_zone.h	249;"	d
ip6_addr_select_zone	lwip/src/include/lwip/ip6_zone.h	274;"	d
ip6_addr_set	lwip/src/include/lwip/ip6_addr.h	106;"	d
ip6_addr_set_allnodes_linklocal	lwip/src/include/lwip/ip6_addr.h	251;"	d
ip6_addr_set_allrouters_linklocal	lwip/src/include/lwip/ip6_addr.h	261;"	d
ip6_addr_set_any	lwip/src/include/lwip/ip6_addr.h	133;"	d
ip6_addr_set_hton	lwip/src/include/lwip/ip6_addr.h	142;"	d
ip6_addr_set_loopback	lwip/src/include/lwip/ip6_addr.h	135;"	d
ip6_addr_set_solicitednode	lwip/src/include/lwip/ip6_addr.h	271;"	d
ip6_addr_set_zero	lwip/src/include/lwip/ip6_addr.h	126;"	d
ip6_addr_set_zone	lwip/src/include/lwip/ip6_zone.h	115;"	d
ip6_addr_set_zone	lwip/src/include/lwip/ip6_zone.h	264;"	d
ip6_addr_state	lwip/src/include/lwip/netif.h	/^  u8_t ip6_addr_state[LWIP_IPV6_NUM_ADDRESSES];$/;"	m	struct:netif
ip6_addr_t	lwip/src/include/lwip/ip6_addr.h	/^typedef struct ip6_addr ip6_addr_t;$/;"	t	typeref:struct:ip6_addr
ip6_addr_test_zone	lwip/src/include/lwip/ip6_zone.h	221;"	d
ip6_addr_test_zone	lwip/src/include/lwip/ip6_zone.h	272;"	d
ip6_addr_valid_life	lwip/src/include/lwip/netif.h	/^  u32_t ip6_addr_valid_life[LWIP_IPV6_NUM_ADDRESSES];$/;"	m	struct:netif
ip6_addr_zone	lwip/src/include/lwip/ip6_zone.h	109;"	d
ip6_addr_zone	lwip/src/include/lwip/ip6_zone.h	262;"	d
ip6_autoconfig_enabled	lwip/src/include/lwip/netif.h	/^  u8_t ip6_autoconfig_enabled;$/;"	m	struct:netif
ip6_chksum_pseudo	lwip/src/core/inet_chksum.c	/^ip6_chksum_pseudo(struct pbuf *p, u8_t proto, u16_t proto_len,$/;"	f
ip6_chksum_pseudo_partial	lwip/src/core/inet_chksum.c	/^ip6_chksum_pseudo_partial(struct pbuf *p, u8_t proto, u16_t proto_len,$/;"	f
ip6_current_dest_addr	lwip/src/include/lwip/ip.h	161;"	d
ip6_current_dest_addr	lwip/src/include/lwip/ip.h	207;"	d
ip6_current_header	lwip/src/include/lwip/ip.h	155;"	d
ip6_current_header	lwip/src/include/lwip/ip.h	197;"	d
ip6_current_src_addr	lwip/src/include/lwip/ip.h	159;"	d
ip6_current_src_addr	lwip/src/include/lwip/ip.h	205;"	d
ip6_debug_print	lwip/src/core/ipv6/ip6.c	/^ip6_debug_print(struct pbuf *p)$/;"	f
ip6_debug_print	lwip/src/include/lwip/ip6.h	83;"	d
ip6_dest_hdr	lwip/src/include/lwip/prot/ip6.h	/^struct ip6_dest_hdr {$/;"	s
ip6_forward	lwip/src/core/ipv6/ip6.c	/^ip6_forward(struct pbuf *p, struct ip6_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip6_frag	lwip/src/core/ipv6/ip6_frag.c	/^ip6_frag(struct pbuf *p, struct netif *netif, const ip6_addr_t *dest)$/;"	f
ip6_frag	lwip/src/include/lwip/stats.h	/^  struct stats_proto ip6_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip6_frag_alloc_pbuf_custom_ref	lwip/src/core/ipv6/ip6_frag.c	/^ip6_frag_alloc_pbuf_custom_ref(void)$/;"	f	file:
ip6_frag_free_pbuf_custom	lwip/src/core/ipv6/ip6_frag.c	/^ip6_frag_free_pbuf_custom(struct pbuf *p)$/;"	f	file:
ip6_frag_free_pbuf_custom_ref	lwip/src/core/ipv6/ip6_frag.c	/^ip6_frag_free_pbuf_custom_ref(struct pbuf_custom_ref* p)$/;"	f	file:
ip6_frag_hdr	lwip/src/include/lwip/prot/ip6.h	/^struct ip6_frag_hdr {$/;"	s
ip6_get_subnet_id	lwip/src/include/lwip/ip6_addr.h	190;"	d
ip6_hbh_hdr	lwip/src/include/lwip/prot/ip6.h	/^struct ip6_hbh_hdr {$/;"	s
ip6_hdr	lwip/src/include/lwip/prot/ip6.h	/^struct ip6_hdr {$/;"	s
ip6_input	lwip/src/core/ipv6/ip6.c	/^ip6_input(struct pbuf *p, struct netif *inp)$/;"	f
ip6_input_accept	lwip/src/core/ipv6/ip6.c	/^ip6_input_accept(struct netif *netif)$/;"	f	file:
ip6_netif_get_local_ip	lwip/src/include/lwip/ip6.h	77;"	d
ip6_opt_hdr	lwip/src/include/lwip/prot/ip6.h	/^struct ip6_opt_hdr {$/;"	s
ip6_options_add_hbh_ra	lwip/src/core/ipv6/ip6.c	/^ip6_options_add_hbh_ra(struct pbuf *p, u8_t nexth, u8_t value)$/;"	f
ip6_output	lwip/src/core/ipv6/ip6.c	/^ip6_output(struct pbuf *p, const ip6_addr_t *src, const ip6_addr_t *dest,$/;"	f
ip6_output_hinted	lwip/src/core/ipv6/ip6.c	/^ip6_output_hinted(struct pbuf *p, const ip6_addr_t *src, const ip6_addr_t *dest,$/;"	f
ip6_output_if	lwip/src/core/ipv6/ip6.c	/^ip6_output_if(struct pbuf *p, const ip6_addr_t *src, const ip6_addr_t *dest,$/;"	f
ip6_output_if_src	lwip/src/core/ipv6/ip6.c	/^ip6_output_if_src(struct pbuf *p, const ip6_addr_t *src, const ip6_addr_t *dest,$/;"	f
ip6_reass	lwip/src/core/ipv6/ip6_frag.c	/^ip6_reass(struct pbuf *p)$/;"	f
ip6_reass_free_complete_datagram	lwip/src/core/ipv6/ip6_frag.c	/^ip6_reass_free_complete_datagram(struct ip6_reassdata *ipr)$/;"	f	file:
ip6_reass_helper	lwip/src/core/ipv6/ip6_frag.c	/^struct ip6_reass_helper {$/;"	s	file:
ip6_reass_init	lwip/src/include/lwip/ip6_frag.h	114;"	d
ip6_reass_pbufcount	lwip/src/core/ipv6/ip6_frag.c	/^static u16_t ip6_reass_pbufcount;$/;"	v	file:
ip6_reass_remove_oldest_datagram	lwip/src/core/ipv6/ip6_frag.c	/^ip6_reass_remove_oldest_datagram(struct ip6_reassdata *ipr, int pbufs_needed)$/;"	f	file:
ip6_reass_tmr	lwip/src/core/ipv6/ip6_frag.c	/^ip6_reass_tmr(void)$/;"	f
ip6_reassdata	lwip/src/include/lwip/ip6_frag.h	/^struct ip6_reassdata {$/;"	s
ip6_rout_hdr	lwip/src/include/lwip/prot/ip6.h	/^struct ip6_rout_hdr {$/;"	s
ip6_route	lwip/src/core/ipv6/ip6.c	/^ip6_route(const ip6_addr_t *src, const ip6_addr_t *dest)$/;"	f
ip6_select_source_address	lwip/src/core/ipv6/ip6.c	/^ip6_select_source_address(struct netif *netif, const ip6_addr_t *dest)$/;"	f
ip6addr_aton	lwip/src/core/ipv6/ip6_addr.c	/^ip6addr_aton(const char *cp, ip6_addr_t *addr)$/;"	f
ip6addr_ntoa	lwip/src/core/ipv6/ip6_addr.c	/^ip6addr_ntoa(const ip6_addr_t *addr)$/;"	f
ip6addr_ntoa_r	lwip/src/core/ipv6/ip6_addr.c	/^ip6addr_ntoa_r(const ip6_addr_t *addr, char *buf, int buflen)$/;"	f
ip_2_ip4	lwip/src/include/lwip/ip_addr.h	120;"	d
ip_2_ip4	lwip/src/include/lwip/ip_addr.h	282;"	d
ip_2_ip6	lwip/src/include/lwip/ip_addr.h	116;"	d
ip_2_ip6	lwip/src/include/lwip/ip_addr.h	330;"	d
ip_active_pkt	lwip/src/netif/ppp/ipcp.c	/^ip_active_pkt(pkt, len)$/;"	f	file:
ip_addr	lwip/src/include/lwip/ip_addr.h	/^typedef struct ip_addr {$/;"	s
ip_addr	lwip/src/include/lwip/netif.h	/^  ip_addr_t ip_addr;$/;"	m	struct:netif
ip_addr_any	lwip/src/core/ipv4/ip4_addr.c	/^const ip_addr_t ip_addr_any = IPADDR4_INIT(IPADDR_ANY);$/;"	v
ip_addr_any_type	lwip/src/core/ip.c	/^const ip_addr_t ip_addr_any_type = IPADDR_ANY_TYPE_INIT;$/;"	v
ip_addr_broadcast	lwip/src/core/ipv4/ip4_addr.c	/^const ip_addr_t ip_addr_broadcast = IPADDR4_INIT(IPADDR_BROADCAST);$/;"	v
ip_addr_cmp	lwip/src/include/lwip/ip_addr.h	202;"	d
ip_addr_cmp	lwip/src/include/lwip/ip_addr.h	299;"	d
ip_addr_cmp	lwip/src/include/lwip/ip_addr.h	346;"	d
ip_addr_cmp_zoneless	lwip/src/include/lwip/ip_addr.h	206;"	d
ip_addr_cmp_zoneless	lwip/src/include/lwip/ip_addr.h	347;"	d
ip_addr_copy	lwip/src/include/lwip/ip_addr.h	137;"	d
ip_addr_copy	lwip/src/include/lwip/ip_addr.h	285;"	d
ip_addr_copy	lwip/src/include/lwip/ip_addr.h	334;"	d
ip_addr_copy_from_ip4	lwip/src/include/lwip/ip_addr.h	147;"	d
ip_addr_copy_from_ip4	lwip/src/include/lwip/ip_addr.h	286;"	d
ip_addr_copy_from_ip6	lwip/src/include/lwip/ip_addr.h	141;"	d
ip_addr_copy_from_ip6	lwip/src/include/lwip/ip_addr.h	335;"	d
ip_addr_copy_from_ip6_packed	lwip/src/include/lwip/ip_addr.h	144;"	d
ip_addr_copy_from_ip6_packed	lwip/src/include/lwip/ip_addr.h	336;"	d
ip_addr_debug_print	lwip/src/include/lwip/ip_addr.h	233;"	d
ip_addr_debug_print	lwip/src/include/lwip/ip_addr.h	306;"	d
ip_addr_debug_print	lwip/src/include/lwip/ip_addr.h	354;"	d
ip_addr_debug_print_val	lwip/src/include/lwip/ip_addr.h	236;"	d
ip_addr_debug_print_val	lwip/src/include/lwip/ip_addr.h	307;"	d
ip_addr_debug_print_val	lwip/src/include/lwip/ip_addr.h	355;"	d
ip_addr_get_ip4_u32	lwip/src/include/lwip/ip_addr.h	156;"	d
ip_addr_get_ip4_u32	lwip/src/include/lwip/ip_addr.h	289;"	d
ip_addr_get_network	lwip/src/include/lwip/ip_addr.h	194;"	d
ip_addr_get_network	lwip/src/include/lwip/ip_addr.h	297;"	d
ip_addr_get_network	lwip/src/include/lwip/ip_addr.h	344;"	d
ip_addr_isany	lwip/src/include/lwip/ip_addr.h	210;"	d
ip_addr_isany	lwip/src/include/lwip/ip_addr.h	300;"	d
ip_addr_isany	lwip/src/include/lwip/ip_addr.h	348;"	d
ip_addr_isany_val	lwip/src/include/lwip/ip_addr.h	214;"	d
ip_addr_isany_val	lwip/src/include/lwip/ip_addr.h	301;"	d
ip_addr_isany_val	lwip/src/include/lwip/ip_addr.h	349;"	d
ip_addr_isbroadcast	lwip/src/include/lwip/ip_addr.h	218;"	d
ip_addr_isbroadcast	lwip/src/include/lwip/ip_addr.h	304;"	d
ip_addr_isbroadcast	lwip/src/include/lwip/ip_addr.h	352;"	d
ip_addr_islinklocal	lwip/src/include/lwip/ip_addr.h	230;"	d
ip_addr_islinklocal	lwip/src/include/lwip/ip_addr.h	303;"	d
ip_addr_islinklocal	lwip/src/include/lwip/ip_addr.h	351;"	d
ip_addr_isloopback	lwip/src/include/lwip/ip_addr.h	226;"	d
ip_addr_isloopback	lwip/src/include/lwip/ip_addr.h	302;"	d
ip_addr_isloopback	lwip/src/include/lwip/ip_addr.h	350;"	d
ip_addr_ismulticast	lwip/src/include/lwip/ip_addr.h	222;"	d
ip_addr_ismulticast	lwip/src/include/lwip/ip_addr.h	305;"	d
ip_addr_ismulticast	lwip/src/include/lwip/ip_addr.h	353;"	d
ip_addr_netcmp	lwip/src/include/lwip/ip_addr.h	198;"	d
ip_addr_netcmp	lwip/src/include/lwip/ip_addr.h	298;"	d
ip_addr_netcmp	lwip/src/include/lwip/ip_addr.h	345;"	d
ip_addr_netmask_valid	lwip/src/include/lwip/ip4_addr.h	153;"	d
ip_addr_set	lwip/src/include/lwip/ip_addr.h	159;"	d
ip_addr_set	lwip/src/include/lwip/ip_addr.h	290;"	d
ip_addr_set	lwip/src/include/lwip/ip_addr.h	337;"	d
ip_addr_set_any	lwip/src/include/lwip/ip_addr.h	174;"	d
ip_addr_set_any	lwip/src/include/lwip/ip_addr.h	294;"	d
ip_addr_set_any	lwip/src/include/lwip/ip_addr.h	341;"	d
ip_addr_set_any_val	lwip/src/include/lwip/ip_addr.h	178;"	d
ip_addr_set_any_val	lwip/src/include/lwip/ip_addr.h	265;"	d
ip_addr_set_hton	lwip/src/include/lwip/ip_addr.h	190;"	d
ip_addr_set_hton	lwip/src/include/lwip/ip_addr.h	296;"	d
ip_addr_set_hton	lwip/src/include/lwip/ip_addr.h	343;"	d
ip_addr_set_ip4_u32	lwip/src/include/lwip/ip_addr.h	150;"	d
ip_addr_set_ip4_u32	lwip/src/include/lwip/ip_addr.h	287;"	d
ip_addr_set_ip4_u32_val	lwip/src/include/lwip/ip_addr.h	153;"	d
ip_addr_set_ip4_u32_val	lwip/src/include/lwip/ip_addr.h	288;"	d
ip_addr_set_ipaddr	lwip/src/include/lwip/ip_addr.h	163;"	d
ip_addr_set_ipaddr	lwip/src/include/lwip/ip_addr.h	291;"	d
ip_addr_set_ipaddr	lwip/src/include/lwip/ip_addr.h	338;"	d
ip_addr_set_loopback	lwip/src/include/lwip/ip_addr.h	182;"	d
ip_addr_set_loopback	lwip/src/include/lwip/ip_addr.h	295;"	d
ip_addr_set_loopback	lwip/src/include/lwip/ip_addr.h	342;"	d
ip_addr_set_loopback_val	lwip/src/include/lwip/ip_addr.h	186;"	d
ip_addr_set_loopback_val	lwip/src/include/lwip/ip_addr.h	266;"	d
ip_addr_set_zero	lwip/src/include/lwip/ip_addr.h	165;"	d
ip_addr_set_zero	lwip/src/include/lwip/ip_addr.h	292;"	d
ip_addr_set_zero	lwip/src/include/lwip/ip_addr.h	339;"	d
ip_addr_set_zero_ip4	lwip/src/include/lwip/ip_addr.h	168;"	d
ip_addr_set_zero_ip4	lwip/src/include/lwip/ip_addr.h	293;"	d
ip_addr_set_zero_ip6	lwip/src/include/lwip/ip_addr.h	171;"	d
ip_addr_set_zero_ip6	lwip/src/include/lwip/ip_addr.h	340;"	d
ip_addr_t	lwip/src/include/lwip/ip_addr.h	/^typedef ip4_addr_t ip_addr_t;$/;"	t
ip_addr_t	lwip/src/include/lwip/ip_addr.h	/^typedef ip6_addr_t ip_addr_t;$/;"	t
ip_addr_t	lwip/src/include/lwip/ip_addr.h	/^} ip_addr_t;$/;"	t	typeref:struct:ip_addr
ip_chksum_pseudo	lwip/src/core/inet_chksum.c	/^ip_chksum_pseudo(struct pbuf *p, u8_t proto, u16_t proto_len,$/;"	f
ip_chksum_pseudo_partial	lwip/src/core/inet_chksum.c	/^ip_chksum_pseudo_partial(struct pbuf *p, u8_t proto, u16_t proto_len,$/;"	f
ip_clear_no4	lwip/src/include/lwip/ip_addr.h	131;"	d
ip_current_dest_addr	lwip/src/include/lwip/ip.h	145;"	d
ip_current_dest_addr	lwip/src/include/lwip/ip.h	214;"	d
ip_current_header_proto	lwip/src/include/lwip/ip.h	163;"	d
ip_current_header_proto	lwip/src/include/lwip/ip.h	184;"	d
ip_current_header_proto	lwip/src/include/lwip/ip.h	201;"	d
ip_current_header_tot_len	lwip/src/include/lwip/ip.h	141;"	d
ip_current_input_netif	lwip/src/include/lwip/ip.h	139;"	d
ip_current_is_v6	lwip/src/include/lwip/ip.h	157;"	d
ip_current_is_v6	lwip/src/include/lwip/ip.h	182;"	d
ip_current_is_v6	lwip/src/include/lwip/ip.h	199;"	d
ip_current_netif	lwip/src/include/lwip/ip.h	135;"	d
ip_current_src_addr	lwip/src/include/lwip/ip.h	143;"	d
ip_current_src_addr	lwip/src/include/lwip/ip.h	212;"	d
ip_data	lwip/src/core/ip.c	/^struct ip_globals ip_data;$/;"	v	typeref:struct:ip_globals
ip_debug_print	lwip/src/include/lwip/ip.h	273;"	d
ip_debug_print	lwip/src/include/lwip/ip.h	293;"	d
ip_debug_print	lwip/src/include/lwip/ip.h	313;"	d
ip_demand_conf	lwip/src/netif/ppp/ipcp.c	/^ip_demand_conf(u)$/;"	f	file:
ip_down_notifier	lwip/src/netif/ppp/ipcp.c	/^struct notifier *ip_down_notifier = NULL;$/;"	v	typeref:struct:notifier
ip_frag	lwip/src/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_frag_alloc_pbuf_custom_ref	lwip/src/core/ipv4/ip4_frag.c	/^ip_frag_alloc_pbuf_custom_ref(void)$/;"	f	file:
ip_frag_free_pbuf_custom_ref	lwip/src/core/ipv4/ip4_frag.c	/^ip_frag_free_pbuf_custom_ref(struct pbuf_custom_ref *p)$/;"	f	file:
ip_get_option	lwip/src/include/lwip/ip.h	217;"	d
ip_globals	lwip/src/include/lwip/ip.h	/^struct ip_globals$/;"	s
ip_hdr	lwip/src/include/lwip/prot/ip4.h	/^struct ip_hdr {$/;"	s
ip_id	lwip/src/core/ipv4/ip4.c	/^static u16_t ip_id;$/;"	v	file:
ip_init	lwip/src/include/lwip/ip4.h	64;"	d
ip_input	lwip/src/core/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	lwip/src/include/lwip/ip.h	295;"	d
ip_input	lwip/src/include/lwip/ip.h	315;"	d
ip_mreq	lwip/src/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	lwip/src/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_netif_get_local_ip	lwip/src/include/lwip/ip.h	270;"	d
ip_netif_get_local_ip	lwip/src/include/lwip/ip.h	291;"	d
ip_netif_get_local_ip	lwip/src/include/lwip/ip.h	311;"	d
ip_next_header_ptr	lwip/src/include/lwip/ip.h	167;"	d
ip_next_header_ptr	lwip/src/include/lwip/ip.h	186;"	d
ip_next_header_ptr	lwip/src/include/lwip/ip.h	203;"	d
ip_ntoa	lwip/src/include/lwip/ip4_addr.h	202;"	d
ip_output	lwip/src/include/lwip/ip.h	228;"	d
ip_output	lwip/src/include/lwip/ip.h	279;"	d
ip_output	lwip/src/include/lwip/ip.h	299;"	d
ip_output_hinted	lwip/src/include/lwip/ip.h	254;"	d
ip_output_hinted	lwip/src/include/lwip/ip.h	285;"	d
ip_output_hinted	lwip/src/include/lwip/ip.h	305;"	d
ip_output_if	lwip/src/include/lwip/ip.h	236;"	d
ip_output_if	lwip/src/include/lwip/ip.h	281;"	d
ip_output_if	lwip/src/include/lwip/ip.h	301;"	d
ip_output_if_hdrincl	lwip/src/include/lwip/ip.h	249;"	d
ip_output_if_hdrincl	lwip/src/include/lwip/ip.h	287;"	d
ip_output_if_hdrincl	lwip/src/include/lwip/ip.h	307;"	d
ip_output_if_src	lwip/src/include/lwip/ip.h	244;"	d
ip_output_if_src	lwip/src/include/lwip/ip.h	283;"	d
ip_output_if_src	lwip/src/include/lwip/ip.h	303;"	d
ip_pcb	lwip/src/include/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass_chain_frag_into_datagram_and_validate	lwip/src/core/ipv4/ip4_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p, int is_last)$/;"	f	file:
ip_reass_dequeue_datagram	lwip/src/core/ipv4/ip4_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	lwip/src/core/ipv4/ip4_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	lwip/src/core/ipv4/ip4_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	lwip/src/core/ipv4/ip4_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	lwip/src/core/ipv4/ip4_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	lwip/src/core/ipv4/ip4_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_tmr	lwip/src/core/ipv4/ip4_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	lwip/src/include/lwip/ip4_frag.h	/^struct ip_reassdata {$/;"	s
ip_reset_option	lwip/src/include/lwip/ip.h	221;"	d
ip_route	lwip/src/include/lwip/ip.h	262;"	d
ip_route	lwip/src/include/lwip/ip.h	289;"	d
ip_route	lwip/src/include/lwip/ip.h	309;"	d
ip_route_get_local_ip	lwip/src/include/lwip/ip.h	319;"	d
ip_set_option	lwip/src/include/lwip/ip.h	219;"	d
ip_up_notifier	lwip/src/netif/ppp/ipcp.c	/^struct notifier *ip_up_notifier = NULL;$/;"	v	typeref:struct:notifier
ipaddr	lwip/src/core/dns.c	/^  ip_addr_t ipaddr;$/;"	m	struct:dns_table_entry	file:
ipaddr	lwip/src/core/ipv4/etharp.c	/^  ip4_addr_t ipaddr;$/;"	m	struct:etharp_entry	file:
ipaddr_addr	lwip/src/core/ipv4/ip4_addr.c	/^ipaddr_addr(const char *cp)$/;"	f
ipaddr_aton	lwip/src/core/ip.c	/^ipaddr_aton(const char *cp, ip_addr_t *addr)$/;"	f
ipaddr_aton	lwip/src/include/lwip/ip_addr.h	310;"	d
ipaddr_aton	lwip/src/include/lwip/ip_addr.h	358;"	d
ipaddr_ntoa	lwip/src/core/ip.c	/^char *ipaddr_ntoa(const ip_addr_t *addr)$/;"	f
ipaddr_ntoa	lwip/src/include/lwip/ip_addr.h	308;"	d
ipaddr_ntoa	lwip/src/include/lwip/ip_addr.h	356;"	d
ipaddr_ntoa_r	lwip/src/core/ip.c	/^char *ipaddr_ntoa_r(const ip_addr_t *addr, char *buf, int buflen)$/;"	f
ipaddr_ntoa_r	lwip/src/include/lwip/ip_addr.h	309;"	d
ipaddr_ntoa_r	lwip/src/include/lwip/ip_addr.h	357;"	d
ipcp_ackci	lwip/src/netif/ppp/ipcp.c	/^static int ipcp_ackci(fsm *f, u_char *p, int len) {$/;"	f	file:
ipcp_addci	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_addci(fsm *f, u_char *ucp, int *lenp) {$/;"	f	file:
ipcp_allowoptions	lwip/src/include/netif/ppp/ppp.h	/^  ipcp_options ipcp_allowoptions; \/* Options we allow peer to request *\/$/;"	m	struct:ppp_pcb_s
ipcp_callbacks	lwip/src/netif/ppp/ipcp.c	/^static const fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	lwip/src/netif/ppp/ipcp.c	/^static int ipcp_cilen(fsm *f) {$/;"	f	file:
ipcp_clear_addrs	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_clear_addrs(ppp_pcb *pcb, u32_t ouraddr, u32_t hisaddr, u8_t replacedefaultroute) {$/;"	f	file:
ipcp_close	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_close(ppp_pcb *pcb, const char *reason) {$/;"	f	file:
ipcp_codenames	lwip/src/netif/ppp/ipcp.c	/^static const char* const ipcp_codenames[] = {$/;"	v	file:
ipcp_down	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_down(fsm *f) {$/;"	f	file:
ipcp_finished	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_finished(fsm *f) {$/;"	f	file:
ipcp_fsm	lwip/src/include/netif/ppp/ppp.h	/^  fsm ipcp_fsm;                   \/* IPCP fsm structure *\/$/;"	m	struct:ppp_pcb_s
ipcp_gotoptions	lwip/src/include/netif/ppp/ppp.h	/^  ipcp_options ipcp_gotoptions;   \/* Options that peer ack'd *\/$/;"	m	struct:ppp_pcb_s
ipcp_hisoptions	lwip/src/include/netif/ppp/ppp.h	/^  ipcp_options ipcp_hisoptions;   \/* Options that we ack'd *\/$/;"	m	struct:ppp_pcb_s
ipcp_init	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_init(ppp_pcb *pcb) {$/;"	f	file:
ipcp_input	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_input(ppp_pcb *pcb, u_char *p, int len) {$/;"	f	file:
ipcp_is_open	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int ipcp_is_open            :1; \/* haven't called np_finished() *\/$/;"	m	struct:ppp_pcb_s
ipcp_is_up	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int ipcp_is_up              :1; \/* have called ipcp_up() *\/$/;"	m	struct:ppp_pcb_s
ipcp_lowerdown	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_lowerdown(ppp_pcb *pcb) {$/;"	f	file:
ipcp_lowerup	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_lowerup(ppp_pcb *pcb) {$/;"	f	file:
ipcp_nakci	lwip/src/netif/ppp/ipcp.c	/^static int ipcp_nakci(fsm *f, u_char *p, int len, int treat_as_reject) {$/;"	f	file:
ipcp_open	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_open(ppp_pcb *pcb) {$/;"	f	file:
ipcp_option_list	lwip/src/netif/ppp/ipcp.c	/^static option_t ipcp_option_list[] = {$/;"	v	file:
ipcp_options	lwip/src/include/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	lwip/src/include/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_printpkt	lwip/src/netif/ppp/ipcp.c	/^static int ipcp_printpkt(const u_char *p, int plen,$/;"	f	file:
ipcp_protent	lwip/src/netif/ppp/ipcp.c	/^const struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_protrej(ppp_pcb *pcb) {$/;"	f	file:
ipcp_rejci	lwip/src/netif/ppp/ipcp.c	/^static int ipcp_rejci(fsm *f, u_char *p, int len) {$/;"	f	file:
ipcp_reqci	lwip/src/netif/ppp/ipcp.c	/^static int ipcp_reqci(fsm *f, u_char *inp, int *len, int reject_if_disagree) {$/;"	f	file:
ipcp_resetci	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_resetci(fsm *f) {$/;"	f	file:
ipcp_up	lwip/src/netif/ppp/ipcp.c	/^static void ipcp_up(fsm *f) {$/;"	f	file:
ipcp_wantoptions	lwip/src/include/netif/ppp/ppp.h	/^  ipcp_options ipcp_wantoptions;  \/* Options that we want to request *\/$/;"	m	struct:ppp_pcb_s
ipforwdatagrams	lwip/src/include/lwip/stats.h	/^  u32_t ipforwdatagrams;$/;"	m	struct:stats_mib2
ipfrag_free_pbuf_custom	lwip/src/core/ipv4/ip4_frag.c	/^ipfrag_free_pbuf_custom(struct pbuf *p)$/;"	f	file:
ipfragcreates	lwip/src/include/lwip/stats.h	/^  u32_t ipfragcreates;$/;"	m	struct:stats_mib2
ipfragfails	lwip/src/include/lwip/stats.h	/^  u32_t ipfragfails;$/;"	m	struct:stats_mib2
ipfragoks	lwip/src/include/lwip/stats.h	/^  u32_t ipfragoks;$/;"	m	struct:stats_mib2
iphdr	lwip/src/include/lwip/ip4_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	lwip/src/include/lwip/ip6_frag.h	/^  struct ip6_hdr *iphdr; \/* pointer to the first (original) IPv6 header *\/$/;"	m	struct:ip6_reassdata	typeref:struct:ip6_reassdata::ip6_hdr
ipi_addr	lwip/src/include/lwip/sockets.h	/^  struct in_addr ipi_addr;     \/* Destination (from header) address *\/$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr
ipi_ifindex	lwip/src/include/lwip/sockets.h	/^  unsigned int   ipi_ifindex;  \/* Interface index *\/$/;"	m	struct:in_pktinfo
ipinaddrerrors	lwip/src/include/lwip/stats.h	/^  u32_t ipinaddrerrors;$/;"	m	struct:stats_mib2
ipindelivers	lwip/src/include/lwip/stats.h	/^  u32_t ipindelivers;$/;"	m	struct:stats_mib2
ipindiscards	lwip/src/include/lwip/stats.h	/^  u32_t ipindiscards;$/;"	m	struct:stats_mib2
ipinhdrerrors	lwip/src/include/lwip/stats.h	/^  u32_t ipinhdrerrors;$/;"	m	struct:stats_mib2
ipinreceives	lwip/src/include/lwip/stats.h	/^  u32_t ipinreceives;$/;"	m	struct:stats_mib2
ipinunknownprotos	lwip/src/include/lwip/stats.h	/^  u32_t ipinunknownprotos;$/;"	m	struct:stats_mib2
ipoutdiscards	lwip/src/include/lwip/stats.h	/^  u32_t ipoutdiscards;$/;"	m	struct:stats_mib2
ipoutnoroutes	lwip/src/include/lwip/stats.h	/^  u32_t ipoutnoroutes;$/;"	m	struct:stats_mib2
ipoutrequests	lwip/src/include/lwip/stats.h	/^  u32_t ipoutrequests;$/;"	m	struct:stats_mib2
ipreasmfails	lwip/src/include/lwip/stats.h	/^  u32_t ipreasmfails;$/;"	m	struct:stats_mib2
ipreasmoks	lwip/src/include/lwip/stats.h	/^  u32_t ipreasmoks;$/;"	m	struct:stats_mib2
ipreasmreqds	lwip/src/include/lwip/stats.h	/^  u32_t ipreasmreqds;$/;"	m	struct:stats_mib2
ipv4_changed	lwip/src/include/lwip/netif.h	/^  } ipv4_changed;$/;"	m	union:__anon451	typeref:struct:__anon451::ipv4_changed_s
ipv4_changed_s	lwip/src/include/lwip/netif.h	/^  struct ipv4_changed_s$/;"	s	union:__anon451
ipv6_active_pkt	lwip/src/netif/ppp/ipv6cp.c	/^static int ipv6_active_pkt(u_char *pkt, int len) {$/;"	f	file:
ipv6_addr_state_changed	lwip/src/include/lwip/netif.h	/^  } ipv6_addr_state_changed;$/;"	m	union:__anon451	typeref:struct:__anon451::ipv6_addr_state_changed_s
ipv6_addr_state_changed_s	lwip/src/include/lwip/netif.h	/^  struct ipv6_addr_state_changed_s$/;"	s	union:__anon451
ipv6_check_options	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6_check_options() {$/;"	f	file:
ipv6_demand_conf	lwip/src/netif/ppp/ipv6cp.c	/^static int ipv6_demand_conf(int u) {$/;"	f	file:
ipv6_mreq	lwip/src/include/lwip/sockets.h	/^typedef struct ipv6_mreq {$/;"	s
ipv6_mreq	lwip/src/include/lwip/sockets.h	/^} ipv6_mreq;$/;"	t	typeref:struct:ipv6_mreq
ipv6_set	lwip/src/include/lwip/netif.h	/^  } ipv6_set;$/;"	m	union:__anon451	typeref:struct:__anon451::ipv6_set_s
ipv6_set_s	lwip/src/include/lwip/netif.h	/^  struct ipv6_set_s$/;"	s	union:__anon451
ipv6cp_ackci	lwip/src/netif/ppp/ipv6cp.c	/^static int ipv6cp_ackci(fsm *f, u_char *p, int len) {$/;"	f	file:
ipv6cp_addci	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_addci(fsm *f, u_char *ucp, int *lenp) {$/;"	f	file:
ipv6cp_allowoptions	lwip/src/include/netif/ppp/ppp.h	/^  ipv6cp_options ipv6cp_allowoptions; \/* Options we allow peer to request *\/$/;"	m	struct:ppp_pcb_s
ipv6cp_callbacks	lwip/src/netif/ppp/ipv6cp.c	/^static const fsm_callbacks ipv6cp_callbacks = { \/* IPV6CP callback routines *\/$/;"	v	file:
ipv6cp_cilen	lwip/src/netif/ppp/ipv6cp.c	/^static int ipv6cp_cilen(fsm *f) {$/;"	f	file:
ipv6cp_clear_addrs	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_clear_addrs(ppp_pcb *pcb, eui64_t ourid, eui64_t hisid) {$/;"	f	file:
ipv6cp_close	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_close(ppp_pcb *pcb, const char *reason) {$/;"	f	file:
ipv6cp_codenames	lwip/src/netif/ppp/ipv6cp.c	/^static const char* const ipv6cp_codenames[] = {$/;"	v	file:
ipv6cp_down	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_down(fsm *f) {$/;"	f	file:
ipv6cp_finished	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_finished(fsm *f) {$/;"	f	file:
ipv6cp_fsm	lwip/src/include/netif/ppp/ppp.h	/^  fsm ipv6cp_fsm;                     \/* IPV6CP fsm structure *\/$/;"	m	struct:ppp_pcb_s
ipv6cp_gotoptions	lwip/src/include/netif/ppp/ppp.h	/^  ipv6cp_options ipv6cp_gotoptions;   \/* Options that peer ack'd *\/$/;"	m	struct:ppp_pcb_s
ipv6cp_hisoptions	lwip/src/include/netif/ppp/ppp.h	/^  ipv6cp_options ipv6cp_hisoptions;   \/* Options that we ack'd *\/$/;"	m	struct:ppp_pcb_s
ipv6cp_init	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_init(ppp_pcb *pcb) {$/;"	f	file:
ipv6cp_input	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_input(ppp_pcb *pcb, u_char *p, int len) {$/;"	f	file:
ipv6cp_is_up	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int ipv6cp_is_up            :1; \/* have called ip6cp_up() *\/$/;"	m	struct:ppp_pcb_s
ipv6cp_lowerdown	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_lowerdown(ppp_pcb *pcb) {$/;"	f	file:
ipv6cp_lowerup	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_lowerup(ppp_pcb *pcb) {$/;"	f	file:
ipv6cp_nakci	lwip/src/netif/ppp/ipv6cp.c	/^static int ipv6cp_nakci(fsm *f, u_char *p, int len, int treat_as_reject) {$/;"	f	file:
ipv6cp_open	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_open(ppp_pcb *pcb) {$/;"	f	file:
ipv6cp_option_list	lwip/src/netif/ppp/ipv6cp.c	/^static option_t ipv6cp_option_list[] = {$/;"	v	file:
ipv6cp_options	lwip/src/include/netif/ppp/ipv6cp.h	/^typedef struct ipv6cp_options {$/;"	s
ipv6cp_options	lwip/src/include/netif/ppp/ipv6cp.h	/^} ipv6cp_options;$/;"	t	typeref:struct:ipv6cp_options
ipv6cp_printpkt	lwip/src/netif/ppp/ipv6cp.c	/^static int ipv6cp_printpkt(const u_char *p, int plen,$/;"	f	file:
ipv6cp_protent	lwip/src/netif/ppp/ipv6cp.c	/^const struct protent ipv6cp_protent = {$/;"	v	typeref:struct:protent
ipv6cp_protrej	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_protrej(ppp_pcb *pcb) {$/;"	f	file:
ipv6cp_rejci	lwip/src/netif/ppp/ipv6cp.c	/^static int ipv6cp_rejci(fsm *f, u_char *p, int len) {$/;"	f	file:
ipv6cp_reqci	lwip/src/netif/ppp/ipv6cp.c	/^static int ipv6cp_reqci(fsm *f, u_char *inp, int *len, int reject_if_disagree) {$/;"	f	file:
ipv6cp_resetci	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_resetci(fsm *f) {$/;"	f	file:
ipv6cp_up	lwip/src/netif/ppp/ipv6cp.c	/^static void ipv6cp_up(fsm *f) {$/;"	f	file:
ipv6cp_wantoptions	lwip/src/include/netif/ppp/ppp.h	/^  ipv6cp_options ipv6cp_wantoptions;  \/* Options that we want to request *\/$/;"	m	struct:ppp_pcb_s
ipv6mr_interface	lwip/src/include/lwip/sockets.h	/^  unsigned int    ipv6mr_interface; \/*  interface index, or 0 *\/$/;"	m	struct:ipv6_mreq
ipv6mr_multiaddr	lwip/src/include/lwip/sockets.h	/^  struct in6_addr ipv6mr_multiaddr; \/*  IPv6 multicast addr *\/$/;"	m	struct:ipv6_mreq	typeref:struct:ipv6_mreq::in6_addr
isBusy	drivers/fsl_i2c.h	/^    volatile bool isBusy;                   \/*!< Whether transfer is busy. *\/$/;"	m	struct:_i2c_slave_handle
isBusy	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t isBusy;             \/*!< 1: The pipe is transferring packet, 0: The pipe is idle. *\/$/;"	m	struct:_usb_device_cdc_acm_pipe
isBusy	usb/device/class/usb_device_phdc.h	/^    uint8_t isBusy; \/*!< 1: The pipe is transferring packet, 0: The pipe is idle. *\/$/;"	m	struct:_usb_device_phdc_pipe
isBusy	usb/device/include/usb_device.h	/^    uint8_t isBusy;$/;"	m	struct:_usb_device_endpoint_callback_struct
isDmaAlignBufferInusing	usb/device/source/khci/usb_device_khci.h	/^    uint8_t isDmaAlignBufferInusing;                    \/*!< The dmaAlignBuffer is used or not *\/$/;"	m	struct:_usb_device_khci_state_struct
isOpened	usb/device/source/ehci/usb_device_ehci.h	/^            uint32_t isOpened : 1;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon519::__anon520
isPcsAssertInTransfer	drivers/fsl_spi.h	/^    bool isPcsAssertInTransfer; \/*!< If PCS pin keep assert between transmit and receive. true for assert and false for$/;"	m	struct:_spi_half_duplex_transfer
isPeriph	drivers/fsl_dma.h	/^    bool isPeriph;                  \/*!< select the request type *\/$/;"	m	struct:_dma_channel_config
isPeriph	drivers/fsl_dma.h	/^    bool isPeriph;         \/*!< DMA transfer is driven by peripheral *\/$/;"	m	struct:_dma_transfer_config
isResetting	usb/device/source/ehci/usb_device_ehci.h	/^    uint8_t isResetting;                           \/*!< Whether a PORT reset is occurring or not  *\/$/;"	m	struct:_usb_device_ehci_state_struct
isResetting	usb/device/source/khci/usb_device_khci.h	/^    uint8_t isResetting;                                \/*!< Is doing device reset or not *\/$/;"	m	struct:_usb_device_khci_state_struct
isResetting	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t isResetting;                    \/*!< Is doing device reset or not *\/$/;"	m	struct:_usb_device_lpc3511ip_state_struct
isResetting	usb/device/source/usb_device_dci.h	/^    uint8_t isResetting; \/*!< Is doing device reset or not *\/$/;"	m	struct:_usb_device_struct
isSetup	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t isSetup;         \/*!< The flag indicates if it is a setup packet, 1: yes, 0: no. *\/$/;"	m	struct:_usb_device_cdc_acm_request_param_struct
isSetup	usb/device/class/usb_device_class.h	/^    uint8_t isSetup;           \/*!< Indicates whether a setup packet is received. *\/$/;"	m	struct:_usb_device_control_request_struct
isSetup	usb/device/include/usb_device.h	/^    uint8_t isSetup; \/*!< Is in a setup phase *\/$/;"	m	struct:_usb_device_endpoint_callback_message_struct
isSetup	usb/device/source/usb_device_dci.h	/^    uint8_t isSetup; \/*!< Is in a setup phase *\/$/;"	m	struct:_usb_device_callback_message_struct
isSuspending	usb/device/source/ehci/usb_device_ehci.h	/^    uint8_t isSuspending;                          \/*!< Is suspending of the PORT *\/$/;"	m	struct:_usb_device_ehci_state_struct
isTransmitFirst	drivers/fsl_spi.h	/^    bool isTransmitFirst;       \/*!< True for transmit first and false for receive first. *\/$/;"	m	struct:_spi_half_duplex_transfer
isUsed	osa/usb_osa_freertos.c	/^    uint8_t isUsed;                                        \/* Is used *\/$/;"	m	struct:_usb_osa_msgq_struct	file:
isUsed	osa/usb_osa_freertos.c	/^    uint8_t isUsed;            \/* Is used *\/$/;"	m	struct:_usb_osa_event_struct	file:
isUsed	osa/usb_osa_freertos.c	/^    uint8_t isUsed;           \/* Is used *\/$/;"	m	struct:_usb_osa_sem_struct	file:
is_mdns	lwip/src/core/dns.c	/^  u8_t is_mdns;$/;"	m	struct:dns_table_entry	file:
is_valid	amazon-freertos/include/threading_alt.h	/^    char is_valid;$/;"	m	struct:__anon1
isrouter	lwip/src/include/lwip/priv/nd6_priv.h	/^  u8_t isrouter;$/;"	m	struct:nd6_neighbor_cache_entry
iterate_bundle_links	lwip/src/netif/ppp/multilink.c	/^static void iterate_bundle_links(void (*func)(char *))$/;"	f	file:
jl	lwip/src/include/lwip/priv/api_msg.h	/^    } jl;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::__anon461
join_or_leave	lwip/src/include/lwip/priv/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg::__anon454::__anon461	typeref:enum:api_msg::__anon454::__anon461::netconn_igmp
k	codec2/defines.h	/^    int			k;        \/* dimension of vector	*\/$/;"	m	struct:lsp_codebook
kADC0_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kADC0_RST_SHIFT_RSTn = 0 | 27U,          \/**< ADC0 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kAES_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kAES_RST_SHIFT_RSTn = 131072 | 11U,      \/**< AES reset control *\/$/;"	e	enum:_SYSCON_RSTn
kAUDIO_PLL_to_ADC_CLK	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_ADC_CLK = MUX_A(CM_ADCASYNCCLKSEL, 3),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_ASYNC_APB	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_ASYNC_APB   = MUX_A(CM_ASYNCAPB, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_CLKOUT	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_CLKOUT  = MUX_A(CM_CLKOUTCLKSELA, 6),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_DMIC	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_DMIC  = MUX_A(CM_DMICCLKSEL, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM0	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM0 = MUX_A(CM_FXCOMCLKSEL0, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM1	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM1 = MUX_A(CM_FXCOMCLKSEL1, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM10	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM10 = MUX_A(CM_FXCOMCLKSEL10, 4),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM2	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM2 = MUX_A(CM_FXCOMCLKSEL2, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM3	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM3 = MUX_A(CM_FXCOMCLKSEL3, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM4	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM4 = MUX_A(CM_FXCOMCLKSEL4, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM5	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM5 = MUX_A(CM_FXCOMCLKSEL5, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM6	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM6 = MUX_A(CM_FXCOMCLKSEL6, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM7	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM7 = MUX_A(CM_FXCOMCLKSEL7, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM8	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM8 = MUX_A(CM_FXCOMCLKSEL8, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_FLEXCOMM9	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_FLEXCOMM9 = MUX_A(CM_FXCOMCLKSEL9, 2),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_MCLK	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_MCLK = MUX_A(CM_MCLKCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_SCT_CLK	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_SCT_CLK = MUX_A(CM_SCTCLKSEL, 3),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_SDIO_CLK	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_SDIO_CLK = MUX_A(CM_SDIOCLKSEL, 4),$/;"	e	enum:_clock_attach_id
kAUDIO_PLL_to_SPIFI_CLK	drivers/fsl_clock.h	/^    kAUDIO_PLL_to_SPIFI_CLK = MUX_A(CM_SPIFICLKSEL, 4),$/;"	e	enum:_clock_attach_id
kCLOCK_Adc0	drivers/fsl_clock.h	/^    kCLOCK_Adc0       = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 27),$/;"	e	enum:_clock_ip_name
kCLOCK_Aes	drivers/fsl_clock.h	/^    kCLOCK_Aes        = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 11),$/;"	e	enum:_clock_ip_name
kCLOCK_AsyncApbClk	drivers/fsl_clock.h	/^    kCLOCK_AsyncApbClk, \/*!< Async APB clock					     *\/$/;"	e	enum:_clock_name
kCLOCK_AsyncAudioPllClk	drivers/fsl_clock.h	/^    kCLOCK_AsyncAudioPllClk,$/;"	e	enum:_async_clock_src
kCLOCK_AsyncFro12Mhz	drivers/fsl_clock.h	/^    kCLOCK_AsyncFro12Mhz,    \/*!< 12MHz FRO *\/$/;"	e	enum:_async_clock_src
kCLOCK_AsyncI2cClkFc6	drivers/fsl_clock.h	/^    kCLOCK_AsyncI2cClkFc6,$/;"	e	enum:_async_clock_src
kCLOCK_AsyncMainClk	drivers/fsl_clock.h	/^    kCLOCK_AsyncMainClk = 0, \/*!< Main System clock *\/$/;"	e	enum:_async_clock_src
kCLOCK_BI2c0	drivers/fsl_clock.h	/^    kCLOCK_BI2c0      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 11),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c1	drivers/fsl_clock.h	/^    kCLOCK_BI2c1      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 12),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c2	drivers/fsl_clock.h	/^    kCLOCK_BI2c2      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 13),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c3	drivers/fsl_clock.h	/^    kCLOCK_BI2c3      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c4	drivers/fsl_clock.h	/^    kCLOCK_BI2c4      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c5	drivers/fsl_clock.h	/^    kCLOCK_BI2c5      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 16),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c6	drivers/fsl_clock.h	/^    kCLOCK_BI2c6      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 17),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c7	drivers/fsl_clock.h	/^    kCLOCK_BI2c7      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 18),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c8	drivers/fsl_clock.h	/^    kCLOCK_BI2c8      = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_BI2c9	drivers/fsl_clock.h	/^    kCLOCK_BI2c9      = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_BodyBias0	drivers/fsl_clock.h	/^    kCLOCK_BodyBias0  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 29),$/;"	e	enum:_clock_ip_name
kCLOCK_BusClk	drivers/fsl_clock.h	/^    kCLOCK_BusClk,      \/*!< Bus clock (AHB clock)                                   *\/$/;"	e	enum:_clock_name
kCLOCK_CoreSysClk	drivers/fsl_clock.h	/^    kCLOCK_CoreSysClk,  \/*!< Core\/system clock  (aka MAIN_CLK)                       *\/$/;"	e	enum:_clock_name
kCLOCK_Crc	drivers/fsl_clock.h	/^    kCLOCK_Crc        = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 21),$/;"	e	enum:_clock_ip_name
kCLOCK_Ct32b0	drivers/fsl_clock.h	/^    kCLOCK_Ct32b0     = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 26),$/;"	e	enum:_clock_ip_name
kCLOCK_Ct32b1	drivers/fsl_clock.h	/^    kCLOCK_Ct32b1     = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 27),$/;"	e	enum:_clock_ip_name
kCLOCK_Ct32b2	drivers/fsl_clock.h	/^    kCLOCK_Ct32b2     = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 22),$/;"	e	enum:_clock_ip_name
kCLOCK_Ct32b3	drivers/fsl_clock.h	/^    kCLOCK_Ct32b3 = CLK_GATE_DEFINE(ASYNC_CLK_CTRL0, 13),$/;"	e	enum:_clock_ip_name
kCLOCK_Ct32b4	drivers/fsl_clock.h	/^    kCLOCK_Ct32b4 = CLK_GATE_DEFINE(ASYNC_CLK_CTRL0, 14)$/;"	e	enum:_clock_ip_name
kCLOCK_DMic	drivers/fsl_clock.h	/^    kCLOCK_DMic       = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 19),$/;"	e	enum:_clock_ip_name
kCLOCK_DivAdcAsyncClk	drivers/fsl_clock.h	/^    kCLOCK_DivAdcAsyncClk   = 37,$/;"	e	enum:_clock_div_name
kCLOCK_DivAhbClk	drivers/fsl_clock.h	/^    kCLOCK_DivAhbClk        = 32,$/;"	e	enum:_clock_div_name
kCLOCK_DivArmTrClkDiv	drivers/fsl_clock.h	/^    kCLOCK_DivArmTrClkDiv   = 1,$/;"	e	enum:_clock_div_name
kCLOCK_DivCan0Clk	drivers/fsl_clock.h	/^    kCLOCK_DivCan0Clk       = 2,$/;"	e	enum:_clock_div_name
kCLOCK_DivCan1Clk	drivers/fsl_clock.h	/^    kCLOCK_DivCan1Clk       = 3,$/;"	e	enum:_clock_div_name
kCLOCK_DivClkOut	drivers/fsl_clock.h	/^    kCLOCK_DivClkOut        = 33,$/;"	e	enum:_clock_div_name
kCLOCK_DivDmicClk	drivers/fsl_clock.h	/^    kCLOCK_DivDmicClk       = 42,$/;"	e	enum:_clock_div_name
kCLOCK_DivEmcClk	drivers/fsl_clock.h	/^    kCLOCK_DivEmcClk        = 46,$/;"	e	enum:_clock_div_name
kCLOCK_DivFrg	drivers/fsl_clock.h	/^    kCLOCK_DivFrg           = 40,$/;"	e	enum:_clock_div_name
kCLOCK_DivFrohfClk	drivers/fsl_clock.h	/^    kCLOCK_DivFrohfClk      = 34,$/;"	e	enum:_clock_div_name
kCLOCK_DivLcdClk	drivers/fsl_clock.h	/^    kCLOCK_DivLcdClk        = 44,$/;"	e	enum:_clock_div_name
kCLOCK_DivMClk	drivers/fsl_clock.h	/^    kCLOCK_DivMClk          = 43,$/;"	e	enum:_clock_div_name
kCLOCK_DivSctClk	drivers/fsl_clock.h	/^    kCLOCK_DivSctClk        = 45,$/;"	e	enum:_clock_div_name
kCLOCK_DivSdioClk	drivers/fsl_clock.h	/^    kCLOCK_DivSdioClk       = 47$/;"	e	enum:_clock_div_name
kCLOCK_DivSmartCard0Clk	drivers/fsl_clock.h	/^    kCLOCK_DivSmartCard0Clk = 4,$/;"	e	enum:_clock_div_name
kCLOCK_DivSmartCard1Clk	drivers/fsl_clock.h	/^    kCLOCK_DivSmartCard1Clk = 5,$/;"	e	enum:_clock_div_name
kCLOCK_DivSpifiClk	drivers/fsl_clock.h	/^    kCLOCK_DivSpifiClk      = 36,$/;"	e	enum:_clock_div_name
kCLOCK_DivSystickClk	drivers/fsl_clock.h	/^    kCLOCK_DivSystickClk    = 0,$/;"	e	enum:_clock_div_name
kCLOCK_DivUsb0Clk	drivers/fsl_clock.h	/^    kCLOCK_DivUsb0Clk       = 38,$/;"	e	enum:_clock_div_name
kCLOCK_DivUsb1Clk	drivers/fsl_clock.h	/^    kCLOCK_DivUsb1Clk       = 39,$/;"	e	enum:_clock_div_name
kCLOCK_Dma	drivers/fsl_clock.h	/^    kCLOCK_Dma        = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 20),$/;"	e	enum:_clock_ip_name
kCLOCK_Emc	drivers/fsl_clock.h	/^    kCLOCK_Emc        = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 7),$/;"	e	enum:_clock_ip_name
kCLOCK_Eth	drivers/fsl_clock.h	/^    kCLOCK_Eth        = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 8),$/;"	e	enum:_clock_ip_name
kCLOCK_ExtClk	drivers/fsl_clock.h	/^    kCLOCK_ExtClk,      \/*!< External Clock                                          *\/$/;"	e	enum:_clock_name
kCLOCK_EzhArchB0	drivers/fsl_clock.h	/^    kCLOCK_EzhArchB0  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 31),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm0	drivers/fsl_clock.h	/^    kCLOCK_FlexComm0  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 11),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm1	drivers/fsl_clock.h	/^    kCLOCK_FlexComm1  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 12),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm10	drivers/fsl_clock.h	/^    kCLOCK_FlexComm10 = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 21),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm2	drivers/fsl_clock.h	/^    kCLOCK_FlexComm2  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 13),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm3	drivers/fsl_clock.h	/^    kCLOCK_FlexComm3  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm4	drivers/fsl_clock.h	/^    kCLOCK_FlexComm4  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm5	drivers/fsl_clock.h	/^    kCLOCK_FlexComm5  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 16),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm6	drivers/fsl_clock.h	/^    kCLOCK_FlexComm6  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 17),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm7	drivers/fsl_clock.h	/^    kCLOCK_FlexComm7  = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 18),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm8	drivers/fsl_clock.h	/^    kCLOCK_FlexComm8  = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexComm9	drivers/fsl_clock.h	/^    kCLOCK_FlexComm9  = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s0	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s0   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 11),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s1	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s1   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 12),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s2	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s2   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 13),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s3	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s3   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s4	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s4   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s5	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s5   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 16),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s6	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s6   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 17),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s7	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s7   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 18),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s8	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s8   = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_FlexI2s9	drivers/fsl_clock.h	/^    kCLOCK_FlexI2s9   = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_Frg	drivers/fsl_clock.h	/^    kCLOCK_Frg,         \/*!< Frg Clock                                               *\/$/;"	e	enum:_clock_name
kCLOCK_Fro12M	drivers/fsl_clock.h	/^    kCLOCK_Fro12M,      \/*!< FRO12M                                                  *\/$/;"	e	enum:_clock_name
kCLOCK_FroHf	drivers/fsl_clock.h	/^    kCLOCK_FroHf,       \/*!< FRO48\/96                                                *\/$/;"	e	enum:_clock_name
kCLOCK_Gint	drivers/fsl_clock.h	/^    kCLOCK_Gint       = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 19),$/;"	e	enum:_clock_ip_name
kCLOCK_Gpio0	drivers/fsl_clock.h	/^    kCLOCK_Gpio0      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_Gpio1	drivers/fsl_clock.h	/^    kCLOCK_Gpio1      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_Gpio2	drivers/fsl_clock.h	/^    kCLOCK_Gpio2      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 16),$/;"	e	enum:_clock_ip_name
kCLOCK_Gpio3	drivers/fsl_clock.h	/^    kCLOCK_Gpio3      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 17),$/;"	e	enum:_clock_ip_name
kCLOCK_Gpio4	drivers/fsl_clock.h	/^    kCLOCK_Gpio4      = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 9),$/;"	e	enum:_clock_ip_name
kCLOCK_Gpio5	drivers/fsl_clock.h	/^    kCLOCK_Gpio5      = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 10),$/;"	e	enum:_clock_ip_name
kCLOCK_InputMux	drivers/fsl_clock.h	/^    kCLOCK_InputMux   = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 11),$/;"	e	enum:_clock_ip_name
kCLOCK_Iocon	drivers/fsl_clock.h	/^    kCLOCK_Iocon      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 13),$/;"	e	enum:_clock_ip_name
kCLOCK_IpInvalid	drivers/fsl_clock.h	/^    kCLOCK_IpInvalid  = 0U,$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi0	drivers/fsl_clock.h	/^    kCLOCK_LSpi0      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 11),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi1	drivers/fsl_clock.h	/^    kCLOCK_LSpi1      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 12),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi2	drivers/fsl_clock.h	/^    kCLOCK_LSpi2      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 13),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi3	drivers/fsl_clock.h	/^    kCLOCK_LSpi3      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi4	drivers/fsl_clock.h	/^    kCLOCK_LSpi4      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi5	drivers/fsl_clock.h	/^    kCLOCK_LSpi5      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 16),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi6	drivers/fsl_clock.h	/^    kCLOCK_LSpi6      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 17),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi7	drivers/fsl_clock.h	/^    kCLOCK_LSpi7      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 18),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi8	drivers/fsl_clock.h	/^    kCLOCK_LSpi8      = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_LSpi9	drivers/fsl_clock.h	/^    kCLOCK_LSpi9      = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_Lcd	drivers/fsl_clock.h	/^    kCLOCK_Lcd        = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 2),$/;"	e	enum:_clock_ip_name
kCLOCK_Mcan0	drivers/fsl_clock.h	/^    kCLOCK_Mcan0      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 7),$/;"	e	enum:_clock_ip_name
kCLOCK_Mcan1	drivers/fsl_clock.h	/^    kCLOCK_Mcan1      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 8),$/;"	e	enum:_clock_ip_name
kCLOCK_Mclk	drivers/fsl_clock.h	/^    kCLOCK_Mclk,        \/*!< MCLK                                                    *\/$/;"	e	enum:_clock_name
kCLOCK_MinUart0	drivers/fsl_clock.h	/^    kCLOCK_MinUart0   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 11),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart1	drivers/fsl_clock.h	/^    kCLOCK_MinUart1   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 12),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart2	drivers/fsl_clock.h	/^    kCLOCK_MinUart2   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 13),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart3	drivers/fsl_clock.h	/^    kCLOCK_MinUart3   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart4	drivers/fsl_clock.h	/^    kCLOCK_MinUart4   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart5	drivers/fsl_clock.h	/^    kCLOCK_MinUart5   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 16),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart6	drivers/fsl_clock.h	/^    kCLOCK_MinUart6   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 17),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart7	drivers/fsl_clock.h	/^    kCLOCK_MinUart7   = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 18),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart8	drivers/fsl_clock.h	/^    kCLOCK_MinUart8   = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 14),$/;"	e	enum:_clock_ip_name
kCLOCK_MinUart9	drivers/fsl_clock.h	/^    kCLOCK_MinUart9   = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 15),$/;"	e	enum:_clock_ip_name
kCLOCK_Mrt	drivers/fsl_clock.h	/^    kCLOCK_Mrt        = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 0),$/;"	e	enum:_clock_ip_name
kCLOCK_Otp	drivers/fsl_clock.h	/^    kCLOCK_Otp        = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 12),$/;"	e	enum:_clock_ip_name
kCLOCK_Pint	drivers/fsl_clock.h	/^    kCLOCK_Pint       = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 18),$/;"	e	enum:_clock_ip_name
kCLOCK_PllOut	drivers/fsl_clock.h	/^    kCLOCK_PllOut,      \/*!< PLL Output                                              *\/$/;"	e	enum:_clock_name
kCLOCK_Rit	drivers/fsl_clock.h	/^    kCLOCK_Rit        = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 1),$/;"	e	enum:_clock_ip_name
kCLOCK_Rng	drivers/fsl_clock.h	/^    kCLOCK_Rng        = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 13),$/;"	e	enum:_clock_ip_name
kCLOCK_Rom	drivers/fsl_clock.h	/^    kCLOCK_Rom        = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 1),$/;"	e	enum:_clock_ip_name
kCLOCK_Rtc	drivers/fsl_clock.h	/^    kCLOCK_Rtc        = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 23),$/;"	e	enum:_clock_ip_name
kCLOCK_Sct0	drivers/fsl_clock.h	/^    kCLOCK_Sct0       = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 2),$/;"	e	enum:_clock_ip_name
kCLOCK_Sdio	drivers/fsl_clock.h	/^    kCLOCK_Sdio       = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 3),$/;"	e	enum:_clock_ip_name
kCLOCK_Sha0	drivers/fsl_clock.h	/^    kCLOCK_Sha0       = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 18),$/;"	e	enum:_clock_ip_name
kCLOCK_SmartCard0	drivers/fsl_clock.h	/^    kCLOCK_SmartCard0 = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 19),$/;"	e	enum:_clock_ip_name
kCLOCK_SmartCard1	drivers/fsl_clock.h	/^    kCLOCK_SmartCard1 = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 20),$/;"	e	enum:_clock_ip_name
kCLOCK_Spifi	drivers/fsl_clock.h	/^    kCLOCK_Spifi      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 10),$/;"	e	enum:_clock_ip_name
kCLOCK_Sram1	drivers/fsl_clock.h	/^    kCLOCK_Sram1      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 3),$/;"	e	enum:_clock_ip_name
kCLOCK_Sram2	drivers/fsl_clock.h	/^    kCLOCK_Sram2      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 4),$/;"	e	enum:_clock_ip_name
kCLOCK_Sram3	drivers/fsl_clock.h	/^    kCLOCK_Sram3      = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 5),$/;"	e	enum:_clock_ip_name
kCLOCK_UsbClk	drivers/fsl_clock.h	/^    kCLOCK_UsbClk,      \/*!< USB input                                               *\/$/;"	e	enum:_clock_name
kCLOCK_UsbPll	drivers/fsl_clock.h	/^    kCLOCK_UsbPll,      \/*!< USB1 PLL                                                *\/$/;"	e	enum:_clock_name
kCLOCK_UsbRam1	drivers/fsl_clock.h	/^    kCLOCK_UsbRam1    = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 6),$/;"	e	enum:_clock_ip_name
kCLOCK_UsbSrcFro	drivers/fsl_clock.h	/^    kCLOCK_UsbSrcFro       = (uint32_t)kCLOCK_FroHf,      \/*!< Use FRO 96 or 48 MHz. *\/$/;"	e	enum:_clock_usb_src
kCLOCK_UsbSrcMainClock	drivers/fsl_clock.h	/^    kCLOCK_UsbSrcMainClock = (uint32_t)kCLOCK_CoreSysClk, \/*!< Use Main clock.    *\/$/;"	e	enum:_clock_usb_src
kCLOCK_UsbSrcNone	drivers/fsl_clock.h	/^    kCLOCK_UsbSrcNone = SYSCON_USB0CLKSEL_SEL($/;"	e	enum:_clock_usb_src
kCLOCK_UsbSrcSystemPll	drivers/fsl_clock.h	/^    kCLOCK_UsbSrcSystemPll = (uint32_t)kCLOCK_PllOut,     \/*!< Use System PLL output. *\/$/;"	e	enum:_clock_usb_src
kCLOCK_UsbSrcUsbPll	drivers/fsl_clock.h	/^    kCLOCK_UsbSrcUsbPll    = (uint32_t)kCLOCK_UsbPll,     \/*!< Use USB PLL clock.    *\/$/;"	e	enum:_clock_usb_src
kCLOCK_Usbd0	drivers/fsl_clock.h	/^    kCLOCK_Usbd0      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 25),$/;"	e	enum:_clock_ip_name
kCLOCK_Usbd1	drivers/fsl_clock.h	/^    kCLOCK_Usbd1      = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 5),$/;"	e	enum:_clock_ip_name
kCLOCK_Usbh1	drivers/fsl_clock.h	/^    kCLOCK_Usbh1      = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 4),$/;"	e	enum:_clock_ip_name
kCLOCK_Usbhmr0	drivers/fsl_clock.h	/^    kCLOCK_Usbhmr0    = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 16),$/;"	e	enum:_clock_ip_name
kCLOCK_Usbhsl0	drivers/fsl_clock.h	/^    kCLOCK_Usbhsl0    = CLK_GATE_DEFINE(AHB_CLK_CTRL2, 17),$/;"	e	enum:_clock_ip_name
kCLOCK_Utick	drivers/fsl_clock.h	/^    kCLOCK_Utick      = CLK_GATE_DEFINE(AHB_CLK_CTRL1, 10),$/;"	e	enum:_clock_ip_name
kCLOCK_WdtOsc	drivers/fsl_clock.h	/^    kCLOCK_WdtOsc,      \/*!< Watchdog Oscillator                                     *\/$/;"	e	enum:_clock_name
kCLOCK_Wwdt	drivers/fsl_clock.h	/^    kCLOCK_Wwdt       = CLK_GATE_DEFINE(AHB_CLK_CTRL0, 22),$/;"	e	enum:_clock_ip_name
kCODEC_AK4458	codec/fsl_codec_adapter.h	/^    kCODEC_AK4458,   \/*!< ak4458 *\/$/;"	e	enum:_codec_type
kCODEC_AK4497	codec/fsl_codec_adapter.h	/^    kCODEC_AK4497,   \/*!< AK4497 *\/$/;"	e	enum:_codec_type
kCODEC_AudioBitWidth16bit	codec/fsl_codec_common.h	/^    kCODEC_AudioBitWidth16bit = 16U, \/*!< audio bit width 16 *\/$/;"	e	enum:_codec_audio_bit_width
kCODEC_AudioBitWidth20bit	codec/fsl_codec_common.h	/^    kCODEC_AudioBitWidth20bit = 20U, \/*!< audio bit width 20 *\/$/;"	e	enum:_codec_audio_bit_width
kCODEC_AudioBitWidth24bit	codec/fsl_codec_common.h	/^    kCODEC_AudioBitWidth24bit = 24U, \/*!< audio bit width 24 *\/$/;"	e	enum:_codec_audio_bit_width
kCODEC_AudioBitWidth32bit	codec/fsl_codec_common.h	/^    kCODEC_AudioBitWidth32bit = 32U, \/*!< audio bit width 32 *\/$/;"	e	enum:_codec_audio_bit_width
kCODEC_AudioSampleRate11025Hz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate11025Hz = 11025U,  \/*!< Sample rate 11025 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate12KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate12KHz   = 12000U,  \/*!< Sample rate 12000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate16KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate16KHz   = 16000U,  \/*!< Sample rate 16000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate192KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate192KHz  = 192000U, \/*!< Sample rate 192000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate22050Hz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate22050Hz = 22050U,  \/*!< Sample rate 22050 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate24KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate24KHz   = 24000U,  \/*!< Sample rate 24000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate32KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate32KHz   = 32000U,  \/*!< Sample rate 32000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate384KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate384KHz  = 384000U, \/*!< Sample rate 384000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate44100Hz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate44100Hz = 44100U,  \/*!< Sample rate 44100 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate48KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate48KHz   = 48000U,  \/*!< Sample rate 48000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate8KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate8KHz    = 8000U,   \/*!< Sample rate 8000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_AudioSampleRate96KHz	codec/fsl_codec_common.h	/^    kCODEC_AudioSampleRate96KHz   = 96000U,  \/*!< Sample rate 96000 Hz *\/$/;"	e	enum:_codec_audio_sample_rate
kCODEC_BusI2S	codec/fsl_codec_common.h	/^    kCODEC_BusI2S            = 0U, \/*!< I2S type *\/$/;"	e	enum:_codec_audio_protocol
kCODEC_BusLeftJustified	codec/fsl_codec_common.h	/^    kCODEC_BusLeftJustified  = 1U, \/*!< Left justified mode *\/$/;"	e	enum:_codec_audio_protocol
kCODEC_BusPCMA	codec/fsl_codec_common.h	/^    kCODEC_BusPCMA           = 3U, \/*!< DSP\/PCM A mode *\/$/;"	e	enum:_codec_audio_protocol
kCODEC_BusPCMB	codec/fsl_codec_common.h	/^    kCODEC_BusPCMB           = 4U, \/*!< DSP\/PCM B mode *\/$/;"	e	enum:_codec_audio_protocol
kCODEC_BusRightJustified	codec/fsl_codec_common.h	/^    kCODEC_BusRightJustified = 2U, \/*!< Right justified mode *\/$/;"	e	enum:_codec_audio_protocol
kCODEC_BusTDM	codec/fsl_codec_common.h	/^    kCODEC_BusTDM            = 5U, \/*!< TDM mode *\/$/;"	e	enum:_codec_audio_protocol
kCODEC_CS42888	codec/fsl_codec_adapter.h	/^    kCODEC_CS42888,  \/*!< CS42888 *\/$/;"	e	enum:_codec_type
kCODEC_DA7212	codec/fsl_codec_adapter.h	/^    kCODEC_DA7212,   \/*!< da7212 *\/$/;"	e	enum:_codec_type
kCODEC_ModuleADC	codec/fsl_codec_common.h	/^    kCODEC_ModuleADC       = 0U,  \/*!< codec module ADC *\/$/;"	e	enum:_codec_module
kCODEC_ModuleDAC	codec/fsl_codec_common.h	/^    kCODEC_ModuleDAC       = 1U,  \/*!< codec module DAC *\/$/;"	e	enum:_codec_module
kCODEC_ModuleHeadphone	codec/fsl_codec_common.h	/^    kCODEC_ModuleHeadphone = 3U,  \/*!< codec module headphone *\/$/;"	e	enum:_codec_module
kCODEC_ModuleI2SIn	codec/fsl_codec_common.h	/^    kCODEC_ModuleI2SIn     = 10U, \/*!< codec module I2S in *\/$/;"	e	enum:_codec_module
kCODEC_ModuleI2SInInterfaceDSD	codec/fsl_codec_common.h	/^    kCODEC_ModuleI2SInInterfaceDSD = 1U, \/*!< DSD interface *\/$/;"	e	enum:_codec_module_ctrl_i2s_in_interface
kCODEC_ModuleI2SInInterfacePCM	codec/fsl_codec_common.h	/^    kCODEC_ModuleI2SInInterfacePCM = 0U, \/*!< Pcm interface*\/$/;"	e	enum:_codec_module_ctrl_i2s_in_interface
kCODEC_ModuleI2SOut	codec/fsl_codec_common.h	/^    kCODEC_ModuleI2SOut    = 11U, \/*!< codec module I2S out *\/$/;"	e	enum:_codec_module
kCODEC_ModuleLinein	codec/fsl_codec_common.h	/^    kCODEC_ModuleLinein    = 5U,  \/*!< codec module linein *\/$/;"	e	enum:_codec_module
kCODEC_ModuleLineout	codec/fsl_codec_common.h	/^    kCODEC_ModuleLineout   = 6U,  \/*!< codec module lineout *\/$/;"	e	enum:_codec_module
kCODEC_ModuleMic	codec/fsl_codec_common.h	/^    kCODEC_ModuleMic       = 9U,  \/*!< codec module MIC *\/$/;"	e	enum:_codec_module
kCODEC_ModuleMicbias	codec/fsl_codec_common.h	/^    kCODEC_ModuleMicbias   = 8U,  \/*!< codec module MIC BIAS *\/$/;"	e	enum:_codec_module
kCODEC_ModuleMxier	codec/fsl_codec_common.h	/^    kCODEC_ModuleMxier     = 12U, \/*!< codec module mixer *\/$/;"	e	enum:_codec_module
kCODEC_ModulePGA	codec/fsl_codec_common.h	/^    kCODEC_ModulePGA       = 2U,  \/*!< codec module PGA *\/$/;"	e	enum:_codec_module
kCODEC_ModuleSpeaker	codec/fsl_codec_common.h	/^    kCODEC_ModuleSpeaker   = 4U,  \/*!< codec module speaker *\/$/;"	e	enum:_codec_module
kCODEC_ModuleSwitchI2SInInterface	codec/fsl_codec_common.h	/^    kCODEC_ModuleSwitchI2SInInterface = 0U, \/*!< module digital interface siwtch. *\/$/;"	e	enum:_codec_module_ctrl_cmd
kCODEC_ModuleVref	codec/fsl_codec_common.h	/^    kCODEC_ModuleVref      = 7U,  \/*!< codec module VREF *\/$/;"	e	enum:_codec_module
kCODEC_PlayChannelHeadphoneLeft	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelHeadphoneLeft  = 1U,  \/*!< play channel headphone left *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelHeadphoneRight	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelHeadphoneRight = 2U,  \/*!< play channel headphone right *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelLeft0	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelLeft0  = 1U,   \/*!< play channel left0 *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelLeft1	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelLeft1  = 4U,   \/*!< play channel left1 *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelLeft2	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelLeft2  = 16U,  \/*!< play channel left2 *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelLeft3	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelLeft3  = 64U,  \/*!< play channel left3 *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelLineOutLeft	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelLineOutLeft    = 16U, \/*!< play channel lineout left *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelLineOutRight	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelLineOutRight   = 32U, \/*!< play channel lineout right *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelRight0	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelRight0 = 2U,   \/*!< play channel right0 *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelRight1	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelRight1 = 8U,   \/*!< play channel right1 *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelRight2	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelRight2 = 32U,  \/*!< play channel right2 *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelRight3	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelRight3 = 128U, \/*!< play channel right3 *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelSpeakerLeft	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelSpeakerLeft    = 4U,  \/*!< play channel speaker left *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlayChannelSpeakerRight	codec/fsl_codec_common.h	/^    kCODEC_PlayChannelSpeakerRight   = 8U,  \/*!< play channel speaker right *\/$/;"	e	enum:_codec_play_channel
kCODEC_PlaySourceAux	codec/fsl_codec_common.h	/^    kCODEC_PlaySourceAux          = 8U, \/*!< play source mixer in AUx *\/$/;"	e	enum:_codec_play_source
kCODEC_PlaySourceDAC	codec/fsl_codec_common.h	/^    kCODEC_PlaySourceDAC          = 4U, \/*!< play source DAC *\/$/;"	e	enum:_codec_play_source
kCODEC_PlaySourceInput	codec/fsl_codec_common.h	/^    kCODEC_PlaySourceInput        = 2U, \/*!< play source Input3 *\/$/;"	e	enum:_codec_play_source
kCODEC_PlaySourceMixerIn	codec/fsl_codec_common.h	/^    kCODEC_PlaySourceMixerIn      = 1U, \/*!< play source mixer in *\/$/;"	e	enum:_codec_play_source
kCODEC_PlaySourceMixerInLeft	codec/fsl_codec_common.h	/^    kCODEC_PlaySourceMixerInLeft  = 2U, \/*!< play source mixer in left *\/$/;"	e	enum:_codec_play_source
kCODEC_PlaySourceMixerInRight	codec/fsl_codec_common.h	/^    kCODEC_PlaySourceMixerInRight = 4U, \/*!< play source mixer in right *\/$/;"	e	enum:_codec_play_source
kCODEC_PlaySourcePGA	codec/fsl_codec_common.h	/^    kCODEC_PlaySourcePGA          = 1U, \/*!< play source PGA, bypass ADC *\/$/;"	e	enum:_codec_play_source
kCODEC_RecordChannelDifferentialNegative1	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelDifferentialNegative1 = 8U,  \/*!< differential negative record channel 1 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelDifferentialNegative2	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelDifferentialNegative2 = 16U, \/*!< differential negative record channel 2 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelDifferentialNegative3	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelDifferentialNegative3 = 32U, \/*!< differential negative record channel 3 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelDifferentialPositive1	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelDifferentialPositive1 = 1U,  \/*!< differential positive record channel 1 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelDifferentialPositive2	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelDifferentialPositive2 = 2U,  \/*!< differential positive record channel 2 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelDifferentialPositive3	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelDifferentialPositive3 = 4U,  \/*!< differential positive record channel 3 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelLeft1	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelLeft1                 = 1U,  \/*!< left record channel 1 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelLeft2	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelLeft2                 = 2U,  \/*!< left record channel 2 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelLeft3	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelLeft3                 = 4U,  \/*!< left record channel 3 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelRight1	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelRight1                = 1U,  \/*!< right record channel 1 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelRight2	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelRight2                = 2U,  \/*!< right record channel 2 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordChannelRight3	codec/fsl_codec_common.h	/^    kCODEC_RecordChannelRight3                = 4U,  \/*!< right record channel 3 *\/$/;"	e	enum:_codec_reocrd_channel
kCODEC_RecordSourceDifferentialLine	codec/fsl_codec_common.h	/^    kCODEC_RecordSourceDifferentialLine = 1U,  \/*!< record source from differential line *\/$/;"	e	enum:_codec_record_source
kCODEC_RecordSourceDifferentialMic	codec/fsl_codec_common.h	/^    kCODEC_RecordSourceDifferentialMic  = 4U,  \/*!< record source from differential mic *\/$/;"	e	enum:_codec_record_source
kCODEC_RecordSourceDigitalMic	codec/fsl_codec_common.h	/^    kCODEC_RecordSourceDigitalMic       = 8U,  \/*!< record source from digital microphone *\/$/;"	e	enum:_codec_record_source
kCODEC_RecordSourceLineInput	codec/fsl_codec_common.h	/^    kCODEC_RecordSourceLineInput        = 2U,  \/*!< record source from line input *\/$/;"	e	enum:_codec_record_source
kCODEC_RecordSourceSingleEndMic	codec/fsl_codec_common.h	/^    kCODEC_RecordSourceSingleEndMic     = 16U, \/*!< record source from single microphone *\/$/;"	e	enum:_codec_record_source
kCODEC_RegAddr16Bit	codec/fsl_codec_i2c.h	/^    kCODEC_RegAddr16Bit = 2U, \/*!< 16-bit register address. *\/$/;"	e	enum:_codec_reg_addr
kCODEC_RegAddr8Bit	codec/fsl_codec_i2c.h	/^    kCODEC_RegAddr8Bit  = 1U, \/*!< 8-bit register address.  *\/$/;"	e	enum:_codec_reg_addr
kCODEC_RegWidth16Bit	codec/fsl_codec_i2c.h	/^    kCODEC_RegWidth16Bit = 2U, \/*!< 16-bit register width. *\/$/;"	e	enum:_codec_reg_width
kCODEC_RegWidth32Bit	codec/fsl_codec_i2c.h	/^    kCODEC_RegWidth32Bit = 4U, \/*!< 32-bit register width. *\/$/;"	e	enum:_codec_reg_width
kCODEC_RegWidth8Bit	codec/fsl_codec_i2c.h	/^    kCODEC_RegWidth8Bit  = 1U, \/*!< 8-bit register width.  *\/$/;"	e	enum:_codec_reg_width
kCODEC_SGTL5000	codec/fsl_codec_adapter.h	/^    kCODEC_SGTL5000, \/*!< sgtl5000 *\/$/;"	e	enum:_codec_type
kCODEC_SupportModuleADC	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleADC                  = 1U << 0U,  \/*!< codec capability of module ADC *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleDAC	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleDAC                  = 1U << 1U,  \/*!< codec capability of module DAC *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleHeadphone	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleHeadphone            = 1U << 3U,  \/*!< codec capability of module headphone *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleI2SIn	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleI2SIn                = 1U << 10U, \/*!< codec capability of module I2S in *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleI2SInSwitchInterface	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleI2SInSwitchInterface = 1U << 13U, \/*!< codec capability of module I2S in switch interface *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleI2SOut	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleI2SOut               = 1U << 11U, \/*!< codec capability of module I2S out *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleLinein	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleLinein               = 1U << 5U,  \/*!< codec capability of module linein *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleLineout	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleLineout              = 1U << 6U,  \/*!< codec capability of module lineout *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleMic	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleMic                  = 1U << 9U,  \/*!< codec capability of module mic bias *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleMicbias	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleMicbias              = 1U << 8U,  \/*!< codec capability of module mic bias *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleMixer	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleMixer                = 1U << 12U, \/*!< codec capability of module mixer *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModulePGA	codec/fsl_codec_common.h	/^    kCODEC_SupportModulePGA                  = 1U << 2U,  \/*!< codec capability of module PGA *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleSpeaker	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleSpeaker              = 1U << 4U,  \/*!< codec capability of module speaker *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportModuleVref	codec/fsl_codec_common.h	/^    kCODEC_SupportModuleVref                 = 1U << 7U,  \/*!< codec capability of module vref *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlayChannelLeft0	codec/fsl_codec_common.h	/^    kCODEC_SupportPlayChannelLeft0  = 1U << 0U, \/*!< codec capability of play channel left 0 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlayChannelLeft1	codec/fsl_codec_common.h	/^    kCODEC_SupportPlayChannelLeft1  = 1U << 2U, \/*!< codec capability of play channel left 1 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlayChannelLeft2	codec/fsl_codec_common.h	/^    kCODEC_SupportPlayChannelLeft2  = 1U << 4U, \/*!< codec capability of play channel left 2 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlayChannelLeft3	codec/fsl_codec_common.h	/^    kCODEC_SupportPlayChannelLeft3  = 1U << 6U, \/*!< codec capability of play channel left 3 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlayChannelRight0	codec/fsl_codec_common.h	/^    kCODEC_SupportPlayChannelRight0 = 1U << 1U, \/*!< codec capability of play channel right 0 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlayChannelRight1	codec/fsl_codec_common.h	/^    kCODEC_SupportPlayChannelRight1 = 1U << 3U, \/*!< codec capability of play channel right 1 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlayChannelRight2	codec/fsl_codec_common.h	/^    kCODEC_SupportPlayChannelRight2 = 1U << 5U, \/*!< codec capability of play channel right 2 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlayChannelRight3	codec/fsl_codec_common.h	/^    kCODEC_SupportPlayChannelRight3 = 1U << 7U, \/*!< codec capability of play channel right 3 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlaySourceAux	codec/fsl_codec_common.h	/^    kCODEC_SupportPlaySourceAux          = 1U << 14U, \/*!< codec capability of set play source aux *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlaySourceDAC	codec/fsl_codec_common.h	/^    kCODEC_SupportPlaySourceDAC          = 1U << 10U, \/*!< codec capability of set playback source DAC *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlaySourceInput	codec/fsl_codec_common.h	/^    kCODEC_SupportPlaySourceInput        = 1U << 9U,  \/*!< codec capability of set playback source INPUT *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlaySourceMixerIn	codec/fsl_codec_common.h	/^    kCODEC_SupportPlaySourceMixerIn      = 1U << 11U, \/*!< codec capability of set play source Mixer in *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlaySourceMixerInLeft	codec/fsl_codec_common.h	/^    kCODEC_SupportPlaySourceMixerInLeft  = 1U << 12U, \/*!< codec capability of set play source Mixer in left *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlaySourceMixerInRight	codec/fsl_codec_common.h	/^    kCODEC_SupportPlaySourceMixerInRight = 1U << 13U, \/*!< codec capability of set play source Mixer in right *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportPlaySourcePGA	codec/fsl_codec_common.h	/^    kCODEC_SupportPlaySourcePGA          = 1U << 8U,  \/*!< codec capability of set playback source PGA *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordChannelLeft1	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordChannelLeft1           = 1U << 6U,  \/*!< left record channel 1 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordChannelLeft2	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordChannelLeft2           = 1U << 7U,  \/*!< left record channel 2 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordChannelLeft3	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordChannelLeft3           = 1U << 8U,  \/*!< left record channel 3 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordChannelRight1	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordChannelRight1          = 1U << 9U,  \/*!< right record channel 1 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordChannelRight2	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordChannelRight2          = 1U << 10U, \/*!< right record channel 2 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordChannelRight3	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordChannelRight3          = 1U << 11U, \/*!< right record channel 3 *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordSourceDifferentialLine	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordSourceDifferentialLine = 1U << 0U,  \/*!< codec capability of record source differential line *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordSourceDifferentialMic	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordSourceDifferentialMic  = 1U << 2U,  \/*!< codec capability of record source differential mic *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordSourceDigitalMic	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordSourceDigitalMic       = 1U << 3U,  \/*!< codec capability of record digital mic *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordSourceLineInput	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordSourceLineInput        = 1U << 1U,  \/*!< codec capability of record source line input *\/$/;"	e	enum:_codec_capability_flag
kCODEC_SupportRecordSourceSingleEndMic	codec/fsl_codec_common.h	/^    kCODEC_SupportRecordSourceSingleEndMic     = 1U << 4U,  \/*!< codec capability of single end mic *\/$/;"	e	enum:_codec_capability_flag
kCODEC_WM8524	codec/fsl_codec_adapter.h	/^    kCODEC_WM8524,   \/*!< wm8524 *\/$/;"	e	enum:_codec_type
kCODEC_WM8904	codec/fsl_codec_adapter.h	/^    kCODEC_WM8904,   \/*!< wm8904 *\/$/;"	e	enum:_codec_type
kCODEC_WM8960	codec/fsl_codec_adapter.h	/^    kCODEC_WM8960,   \/*!< wm8960 *\/$/;"	e	enum:_codec_type
kCRC_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kCRC_RST_SHIFT_RSTn = 0 | 21U,           \/**< CRC reset control *\/$/;"	e	enum:_SYSCON_RSTn
kCT32B0_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kCT32B0_RST_SHIFT_RSTn = 65536 | 26U,    \/**< CT32B0 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kCT32B1_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kCT32B1_RST_SHIFT_RSTn = 65536 | 27U,    \/**< CT32B1 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kCT32B2_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kCT32B2_RST_SHIFT_RSTn = 65536 | 22U,    \/**< CT32B2 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kCT32B3_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kCT32B3_RST_SHIFT_RSTn = 67108864 | 13U, \/**< CT32B3 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kCT32B4_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kCT32B4_RST_SHIFT_RSTn = 67108864 | 14U, \/**< CT32B4 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kCTIMER_Capture0Flag	drivers/fsl_ctimer.h	/^    kCTIMER_Capture0Flag = CTIMER_IR_CR0INT_MASK, \/*!< Capture 0 interrupt flag *\/$/;"	e	enum:_ctimer_status_flags
kCTIMER_Capture0InterruptEnable	drivers/fsl_ctimer.h	/^    kCTIMER_Capture0InterruptEnable = CTIMER_CCR_CAP0I_MASK, \/*!< Capture 0 interrupt *\/$/;"	e	enum:_ctimer_interrupt_enable
kCTIMER_Capture1Flag	drivers/fsl_ctimer.h	/^    kCTIMER_Capture1Flag = CTIMER_IR_CR1INT_MASK, \/*!< Capture 1 interrupt flag *\/$/;"	e	enum:_ctimer_status_flags
kCTIMER_Capture1InterruptEnable	drivers/fsl_ctimer.h	/^    kCTIMER_Capture1InterruptEnable = CTIMER_CCR_CAP1I_MASK, \/*!< Capture 1 interrupt *\/$/;"	e	enum:_ctimer_interrupt_enable
kCTIMER_Capture2Flag	drivers/fsl_ctimer.h	/^    kCTIMER_Capture2Flag = CTIMER_IR_CR2INT_MASK, \/*!< Capture 2 interrupt flag *\/$/;"	e	enum:_ctimer_status_flags
kCTIMER_Capture2InterruptEnable	drivers/fsl_ctimer.h	/^    kCTIMER_Capture2InterruptEnable = CTIMER_CCR_CAP2I_MASK, \/*!< Capture 2 interrupt *\/$/;"	e	enum:_ctimer_interrupt_enable
kCTIMER_Capture3Flag	drivers/fsl_ctimer.h	/^    kCTIMER_Capture3Flag = CTIMER_IR_CR3INT_MASK, \/*!< Capture 3 interrupt flag *\/$/;"	e	enum:_ctimer_status_flags
kCTIMER_Capture3InterruptEnable	drivers/fsl_ctimer.h	/^    kCTIMER_Capture3InterruptEnable = CTIMER_CCR_CAP3I_MASK, \/*!< Capture 3 interrupt *\/$/;"	e	enum:_ctimer_interrupt_enable
kCTIMER_Capture_0	drivers/fsl_ctimer.h	/^    kCTIMER_Capture_0 = 0U, \/*!< Timer capture channel 0 *\/$/;"	e	enum:_ctimer_capture_channel
kCTIMER_Capture_1	drivers/fsl_ctimer.h	/^    kCTIMER_Capture_1,      \/*!< Timer capture channel 1 *\/$/;"	e	enum:_ctimer_capture_channel
kCTIMER_Capture_2	drivers/fsl_ctimer.h	/^    kCTIMER_Capture_2,      \/*!< Timer capture channel 2 *\/$/;"	e	enum:_ctimer_capture_channel
kCTIMER_Capture_3	drivers/fsl_ctimer.h	/^    kCTIMER_Capture_3 \/*!< Timer capture channel 3 *\/$/;"	e	enum:_ctimer_capture_channel
kCTIMER_Capture_BothEdge	drivers/fsl_ctimer.h	/^    kCTIMER_Capture_BothEdge = 3U, \/*!< Capture on rising and falling edge *\/$/;"	e	enum:_ctimer_capture_edge
kCTIMER_Capture_FallEdge	drivers/fsl_ctimer.h	/^    kCTIMER_Capture_FallEdge = 2U, \/*!< Capture on falling edge *\/$/;"	e	enum:_ctimer_capture_edge
kCTIMER_Capture_RiseEdge	drivers/fsl_ctimer.h	/^    kCTIMER_Capture_RiseEdge = 1U, \/*!< Capture on rising edge *\/$/;"	e	enum:_ctimer_capture_edge
kCTIMER_IncreaseOnBothEdge	drivers/fsl_ctimer.h	/^    kCTIMER_IncreaseOnBothEdge  \/* TC is incremented on both edges of input signal *\/$/;"	e	enum:_ctimer_timer_mode
kCTIMER_IncreaseOnFallEdge	drivers/fsl_ctimer.h	/^    kCTIMER_IncreaseOnFallEdge, \/* TC is incremented on falling edge of input signal *\/$/;"	e	enum:_ctimer_timer_mode
kCTIMER_IncreaseOnRiseEdge	drivers/fsl_ctimer.h	/^    kCTIMER_IncreaseOnRiseEdge, \/* TC is incremented on rising edge of input signal *\/$/;"	e	enum:_ctimer_timer_mode
kCTIMER_Match0Flag	drivers/fsl_ctimer.h	/^    kCTIMER_Match0Flag = CTIMER_IR_MR0INT_MASK, \/*!< Match 0 interrupt flag *\/$/;"	e	enum:_ctimer_status_flags
kCTIMER_Match0InterruptEnable	drivers/fsl_ctimer.h	/^    kCTIMER_Match0InterruptEnable = CTIMER_MCR_MR0I_MASK, \/*!< Match 0 interrupt *\/$/;"	e	enum:_ctimer_interrupt_enable
kCTIMER_Match1Flag	drivers/fsl_ctimer.h	/^    kCTIMER_Match1Flag = CTIMER_IR_MR1INT_MASK, \/*!< Match 1 interrupt flag *\/$/;"	e	enum:_ctimer_status_flags
kCTIMER_Match1InterruptEnable	drivers/fsl_ctimer.h	/^    kCTIMER_Match1InterruptEnable = CTIMER_MCR_MR1I_MASK, \/*!< Match 1 interrupt *\/$/;"	e	enum:_ctimer_interrupt_enable
kCTIMER_Match2Flag	drivers/fsl_ctimer.h	/^    kCTIMER_Match2Flag = CTIMER_IR_MR2INT_MASK, \/*!< Match 2 interrupt flag *\/$/;"	e	enum:_ctimer_status_flags
kCTIMER_Match2InterruptEnable	drivers/fsl_ctimer.h	/^    kCTIMER_Match2InterruptEnable = CTIMER_MCR_MR2I_MASK, \/*!< Match 2 interrupt *\/$/;"	e	enum:_ctimer_interrupt_enable
kCTIMER_Match3Flag	drivers/fsl_ctimer.h	/^    kCTIMER_Match3Flag = CTIMER_IR_MR3INT_MASK, \/*!< Match 3 interrupt flag *\/$/;"	e	enum:_ctimer_status_flags
kCTIMER_Match3InterruptEnable	drivers/fsl_ctimer.h	/^    kCTIMER_Match3InterruptEnable = CTIMER_MCR_MR3I_MASK, \/*!< Match 3 interrupt *\/$/;"	e	enum:_ctimer_interrupt_enable
kCTIMER_Match_0	drivers/fsl_ctimer.h	/^    kCTIMER_Match_0 = 0U, \/*!< Timer match register 0 *\/$/;"	e	enum:_ctimer_match
kCTIMER_Match_1	drivers/fsl_ctimer.h	/^    kCTIMER_Match_1,      \/*!< Timer match register 1 *\/$/;"	e	enum:_ctimer_match
kCTIMER_Match_2	drivers/fsl_ctimer.h	/^    kCTIMER_Match_2,      \/*!< Timer match register 2 *\/$/;"	e	enum:_ctimer_match
kCTIMER_Match_3	drivers/fsl_ctimer.h	/^    kCTIMER_Match_3       \/*!< Timer match register 3 *\/$/;"	e	enum:_ctimer_match
kCTIMER_MultipleCallback	drivers/fsl_ctimer.h	/^    kCTIMER_MultipleCallback \/*!< Multiple Callback type where there can be 8 valid callbacks, one per channel.$/;"	e	enum:__anon197
kCTIMER_Output_Clear	drivers/fsl_ctimer.h	/^    kCTIMER_Output_Clear,         \/*!< Clear the EM bit\/output to 0 *\/$/;"	e	enum:_ctimer_match_output_control
kCTIMER_Output_NoAction	drivers/fsl_ctimer.h	/^    kCTIMER_Output_NoAction = 0U, \/*!< No action is taken *\/$/;"	e	enum:_ctimer_match_output_control
kCTIMER_Output_Set	drivers/fsl_ctimer.h	/^    kCTIMER_Output_Set,           \/*!< Set the EM bit\/output to 1 *\/$/;"	e	enum:_ctimer_match_output_control
kCTIMER_Output_Toggle	drivers/fsl_ctimer.h	/^    kCTIMER_Output_Toggle         \/*!< Toggle the EM bit\/output *\/$/;"	e	enum:_ctimer_match_output_control
kCTIMER_SingleCallback	drivers/fsl_ctimer.h	/^    kCTIMER_SingleCallback,  \/*!< Single Callback type where there is only one callback for the timer.$/;"	e	enum:__anon197
kCTIMER_TimerMode	drivers/fsl_ctimer.h	/^    kCTIMER_TimerMode = 0U,     \/* TC is incremented every rising APB bus clock edge *\/$/;"	e	enum:_ctimer_timer_mode
kDMA_AddressInterleave0xWidth	drivers/fsl_dma.h	/^    kDMA_AddressInterleave0xWidth = 0U, \/*!< dma source\/destination address no interleave *\/$/;"	e	enum:_dma_addr_interleave_size
kDMA_AddressInterleave1xWidth	drivers/fsl_dma.h	/^    kDMA_AddressInterleave1xWidth = 1U, \/*!< dma source\/destination address interleave 1xwidth *\/$/;"	e	enum:_dma_addr_interleave_size
kDMA_AddressInterleave2xWidth	drivers/fsl_dma.h	/^    kDMA_AddressInterleave2xWidth = 2U, \/*!< dma source\/destination address interleave 2xwidth *\/$/;"	e	enum:_dma_addr_interleave_size
kDMA_AddressInterleave4xWidth	drivers/fsl_dma.h	/^    kDMA_AddressInterleave4xWidth = 4U, \/*!< dma source\/destination address interleave 3xwidth *\/$/;"	e	enum:_dma_addr_interleave_size
kDMA_BurstSize1	drivers/fsl_dma.h	/^    kDMA_BurstSize1    = 0U,  \/*!< burst size 1 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize1024	drivers/fsl_dma.h	/^    kDMA_BurstSize1024 = 10U, \/*!< burst size 1024 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize128	drivers/fsl_dma.h	/^    kDMA_BurstSize128  = 7U,  \/*!< burst size 128 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize16	drivers/fsl_dma.h	/^    kDMA_BurstSize16   = 4U,  \/*!< burst size 16 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize2	drivers/fsl_dma.h	/^    kDMA_BurstSize2    = 1U,  \/*!< burst size 2 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize256	drivers/fsl_dma.h	/^    kDMA_BurstSize256  = 8U,  \/*!< burst size 256 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize32	drivers/fsl_dma.h	/^    kDMA_BurstSize32   = 5U,  \/*!< burst size 32 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize4	drivers/fsl_dma.h	/^    kDMA_BurstSize4    = 2U,  \/*!< burst size 4 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize512	drivers/fsl_dma.h	/^    kDMA_BurstSize512  = 9U,  \/*!< burst size 512 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize64	drivers/fsl_dma.h	/^    kDMA_BurstSize64   = 6U,  \/*!< burst size 64 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_BurstSize8	drivers/fsl_dma.h	/^    kDMA_BurstSize8    = 3U,  \/*!< burst size 8 transfer *\/$/;"	e	enum:_dma_burst_size
kDMA_ChannelPriority0	drivers/fsl_dma.h	/^    kDMA_ChannelPriority0 = 0, \/*!< Highest channel priority - priority 0 *\/$/;"	e	enum:_dma_priority
kDMA_ChannelPriority1	drivers/fsl_dma.h	/^    kDMA_ChannelPriority1,     \/*!< Channel priority 1 *\/$/;"	e	enum:_dma_priority
kDMA_ChannelPriority2	drivers/fsl_dma.h	/^    kDMA_ChannelPriority2,     \/*!< Channel priority 2 *\/$/;"	e	enum:_dma_priority
kDMA_ChannelPriority3	drivers/fsl_dma.h	/^    kDMA_ChannelPriority3,     \/*!< Channel priority 3 *\/$/;"	e	enum:_dma_priority
kDMA_ChannelPriority4	drivers/fsl_dma.h	/^    kDMA_ChannelPriority4,     \/*!< Channel priority 4 *\/$/;"	e	enum:_dma_priority
kDMA_ChannelPriority5	drivers/fsl_dma.h	/^    kDMA_ChannelPriority5,     \/*!< Channel priority 5 *\/$/;"	e	enum:_dma_priority
kDMA_ChannelPriority6	drivers/fsl_dma.h	/^    kDMA_ChannelPriority6,     \/*!< Channel priority 6 *\/$/;"	e	enum:_dma_priority
kDMA_ChannelPriority7	drivers/fsl_dma.h	/^    kDMA_ChannelPriority7,     \/*!< Lowest channel priority - priority 7 *\/$/;"	e	enum:_dma_priority
kDMA_DstWrap	drivers/fsl_dma.h	/^    kDMA_DstWrap       = DMA_CHANNEL_CFG_DSTBURSTWRAP(1), \/*!< Wrapping is enabled for destination *\/$/;"	e	enum:_dma_burst_wrap
kDMA_EdgeBurstTransfer1	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer1 = DMA_CHANNEL_CFG_TRIGBURST(1), \/*!< Perform 1 transfer by edge trigger *\/$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer1024	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer1024 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer128	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer128 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer16	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer16 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer2	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer2 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer256	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer256 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer32	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer32 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer4	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer4 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer512	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer512 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer64	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer64 =$/;"	e	enum:_dma_trigger_burst
kDMA_EdgeBurstTransfer8	drivers/fsl_dma.h	/^    kDMA_EdgeBurstTransfer8 =$/;"	e	enum:_dma_trigger_burst
kDMA_FallingEdgeTrigger	drivers/fsl_dma.h	/^    kDMA_FallingEdgeTrigger = DMA_CHANNEL_CFG_HWTRIGEN(1), \/*!< Falling edge active trigger *\/$/;"	e	enum:_dma_trigger_type
kDMA_HighLevelTrigger	drivers/fsl_dma.h	/^    kDMA_HighLevelTrigger = DMA_CHANNEL_CFG_HWTRIGEN(1) | DMA_CHANNEL_CFG_TRIGTYPE(1) |$/;"	e	enum:_dma_trigger_type
kDMA_IntA	drivers/fsl_dma.h	/^    kDMA_IntA,     \/*!< DMA interrupt flag A *\/$/;"	e	enum:_dma_int
kDMA_IntB	drivers/fsl_dma.h	/^    kDMA_IntB,     \/*!< DMA interrupt flag B *\/$/;"	e	enum:_dma_int
kDMA_IntError	drivers/fsl_dma.h	/^    kDMA_IntError, \/*!< DMA interrupt flag error *\/$/;"	e	enum:_dma_int
kDMA_LevelBurstTransfer	drivers/fsl_dma.h	/^    kDMA_LevelBurstTransfer = DMA_CHANNEL_CFG_TRIGBURST(1), \/*!< Burst transfer driven by level trigger *\/$/;"	e	enum:_dma_trigger_burst
kDMA_LowLevelTrigger	drivers/fsl_dma.h	/^    kDMA_LowLevelTrigger  = DMA_CHANNEL_CFG_HWTRIGEN(1) | DMA_CHANNEL_CFG_TRIGTYPE(1), \/*!< Low level active trigger *\/$/;"	e	enum:_dma_trigger_type
kDMA_MemoryToMemory	drivers/fsl_dma.h	/^    kDMA_MemoryToMemory = 0x0U, \/*!< Transfer from memory to memory (increment source and destination) *\/$/;"	e	enum:_dma_transfer_type
kDMA_MemoryToPeripheral	drivers/fsl_dma.h	/^    kDMA_MemoryToPeripheral,    \/*!< Transfer from memory to peripheral (increment only source)*\/$/;"	e	enum:_dma_transfer_type
kDMA_NoTrigger	drivers/fsl_dma.h	/^    kDMA_NoTrigger        = 0,                                                         \/*!< Trigger is disabled *\/$/;"	e	enum:_dma_trigger_type
kDMA_NoWrap	drivers/fsl_dma.h	/^    kDMA_NoWrap        = 0,                               \/*!< Wrapping is disabled *\/$/;"	e	enum:_dma_burst_wrap
kDMA_PeripheralToMemory	drivers/fsl_dma.h	/^    kDMA_PeripheralToMemory,    \/*!< Transfer from peripheral to memory (increment only destination) *\/$/;"	e	enum:_dma_transfer_type
kDMA_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kDMA_RST_SHIFT_RSTn = 0 | 20U,           \/**< DMA reset control *\/$/;"	e	enum:_SYSCON_RSTn
kDMA_RisingEdgeTrigger	drivers/fsl_dma.h	/^    kDMA_RisingEdgeTrigger =$/;"	e	enum:_dma_trigger_type
kDMA_SingleTransfer	drivers/fsl_dma.h	/^    kDMA_SingleTransfer     = 0,                            \/*!< Single transfer *\/$/;"	e	enum:_dma_trigger_burst
kDMA_SrcAndDstWrap	drivers/fsl_dma.h	/^    kDMA_SrcAndDstWrap = DMA_CHANNEL_CFG_SRCBURSTWRAP(1) |$/;"	e	enum:_dma_burst_wrap
kDMA_SrcWrap	drivers/fsl_dma.h	/^    kDMA_SrcWrap       = DMA_CHANNEL_CFG_SRCBURSTWRAP(1), \/*!< Wrapping is enabled for source *\/$/;"	e	enum:_dma_burst_wrap
kDMA_StaticToStatic	drivers/fsl_dma.h	/^    kDMA_StaticToStatic,        \/*!< Peripheral to static memory (do not increment source or destination) *\/$/;"	e	enum:_dma_transfer_type
kDMA_Transfer16BitWidth	drivers/fsl_dma.h	/^    kDMA_Transfer16BitWidth = 2U, \/*!< dma channel transfer bit width is 16 bit *\/$/;"	e	enum:_dma_transfer_width
kDMA_Transfer32BitWidth	drivers/fsl_dma.h	/^    kDMA_Transfer32BitWidth = 4U, \/*!< dma channel transfer bit width is 32 bit *\/$/;"	e	enum:_dma_transfer_width
kDMA_Transfer8BitWidth	drivers/fsl_dma.h	/^    kDMA_Transfer8BitWidth  = 1U, \/*!< dma channel transfer bit width is 8 bit *\/$/;"	e	enum:_dma_transfer_width
kDMIC_Busy	drivers/fsl_dmic_dma.c	/^    kDMIC_Busy        \/*!< DMIC is busy tranferring data. *\/$/;"	e	enum:_dmic_dma_states_t	file:
kDMIC_Channel0	drivers/fsl_dmic.h	/^    kDMIC_Channel0 = 0U, \/*!< DMIC channel 0 *\/$/;"	e	enum:_dmic_channel
kDMIC_Channel1	drivers/fsl_dmic.h	/^    kDMIC_Channel1 = 1U, \/*!< DMIC channel 1 *\/$/;"	e	enum:_dmic_channel
kDMIC_Channel2	drivers/fsl_dmic.h	/^    kDMIC_Channel2 = 2U, \/*!< DMIC channel 2 *\/$/;"	e	enum:_dmic_channel
kDMIC_Channel3	drivers/fsl_dmic.h	/^    kDMIC_Channel3 = 3U, \/*!< DMIC channel 3 *\/$/;"	e	enum:_dmic_channel
kDMIC_Channel4	drivers/fsl_dmic.h	/^    kDMIC_Channel4 = 4U, \/*!< DMIC channel 4 *\/$/;"	e	enum:_dmic_channel
kDMIC_Channel5	drivers/fsl_dmic.h	/^    kDMIC_Channel5 = 5U, \/*!< DMIC channel 5 *\/$/;"	e	enum:_dmic_channel
kDMIC_Channel6	drivers/fsl_dmic.h	/^    kDMIC_Channel6 = 6U, \/*!< DMIC channel 6 *\/$/;"	e	enum:_dmic_channel
kDMIC_Channel7	drivers/fsl_dmic.h	/^    kDMIC_Channel7 = 7U, \/*!< DMIC channel 7 *\/$/;"	e	enum:_dmic_channel
kDMIC_CompValueNegativePoint13	drivers/fsl_dmic.h	/^    kDMIC_CompValueNegativePoint13 = 3U, \/*!< Compensation -0.13 *\/$/;"	e	enum:_compensation
kDMIC_CompValueNegativePoint15	drivers/fsl_dmic.h	/^    kDMIC_CompValueNegativePoint15 = 2U, \/*!< Compensation -0.15 *\/$/;"	e	enum:_compensation
kDMIC_CompValueNegativePoint16	drivers/fsl_dmic.h	/^    kDMIC_CompValueNegativePoint16 = 1U, \/*!< Compensation -0.16 *\/$/;"	e	enum:_compensation
kDMIC_CompValueZero	drivers/fsl_dmic.h	/^    kDMIC_CompValueZero            = 0U, \/*!< Compensation 0 *\/$/;"	e	enum:_compensation
kDMIC_DcCut155	drivers/fsl_dmic.h	/^    kDMIC_DcCut155   = 1U, \/*!< Cut off Frequency is 155 Hz  *\/$/;"	e	enum:_dc_removal
kDMIC_DcCut39	drivers/fsl_dmic.h	/^    kDMIC_DcCut39    = 3U, \/*!< Cut off Frequency is 39 Hz  *\/$/;"	e	enum:_dc_removal
kDMIC_DcCut78	drivers/fsl_dmic.h	/^    kDMIC_DcCut78    = 2U, \/*!< Cut off Frequency is 78 Hz  *\/$/;"	e	enum:_dc_removal
kDMIC_DcNoRemove	drivers/fsl_dmic.h	/^    kDMIC_DcNoRemove = 0U, \/*!< Flat response no filter *\/$/;"	e	enum:_dc_removal
kDMIC_EnableChannel0	drivers/fsl_dmic.h	/^    kDMIC_EnableChannel0 = 1 << 0U, \/*!< DMIC channel 0 mask *\/$/;"	e	enum:_dmic_channel_mask
kDMIC_EnableChannel1	drivers/fsl_dmic.h	/^    kDMIC_EnableChannel1 = 1 << 1U, \/*!< DMIC channel 1 mask *\/$/;"	e	enum:_dmic_channel_mask
kDMIC_EnableChannel2	drivers/fsl_dmic.h	/^    kDMIC_EnableChannel2 = 1 << 2U, \/*!< DMIC channel 2 mask *\/$/;"	e	enum:_dmic_channel_mask
kDMIC_EnableChannel3	drivers/fsl_dmic.h	/^    kDMIC_EnableChannel3 = 1 << 3U, \/*!< DMIC channel 3 mask *\/$/;"	e	enum:_dmic_channel_mask
kDMIC_EnableChannel4	drivers/fsl_dmic.h	/^    kDMIC_EnableChannel4 = 1 << 4U, \/*!< DMIC channel 4 mask *\/$/;"	e	enum:_dmic_channel_mask
kDMIC_EnableChannel5	drivers/fsl_dmic.h	/^    kDMIC_EnableChannel5 = 1 << 5U, \/*!< DMIC channel 5 mask *\/$/;"	e	enum:_dmic_channel_mask
kDMIC_EnableChannel6	drivers/fsl_dmic.h	/^    kDMIC_EnableChannel6 = 1 << 6U, \/*!< DMIC channel 6 mask *\/$/;"	e	enum:_dmic_channel_mask
kDMIC_EnableChannel7	drivers/fsl_dmic.h	/^    kDMIC_EnableChannel7 = 1 << 7U, \/*!< DMIC channel 7 mask *\/$/;"	e	enum:_dmic_channel_mask
kDMIC_Idle	drivers/fsl_dmic_dma.c	/^    kDMIC_Idle = 0x0, \/*!< DMIC is idle state *\/$/;"	e	enum:_dmic_dma_states_t	file:
kDMIC_Left	drivers/fsl_dmic.h	/^    kDMIC_Left  = 0U, \/*!< Left Stereo channel *\/$/;"	e	enum:_stereo_side
kDMIC_OperationModeDma	drivers/fsl_dmic.h	/^    kDMIC_OperationModeDma       = 2U, \/*!< DMA mode *\/$/;"	e	enum:_operation_mode
kDMIC_OperationModeInterrupt	drivers/fsl_dmic.h	/^    kDMIC_OperationModeInterrupt = 1U, \/*!< Interrupt mode *\/$/;"	e	enum:_operation_mode
kDMIC_PdmBypass	drivers/fsl_dmic.h	/^    kDMIC_PdmBypass     = 3, \/*!< Clk Bypass clocks both channels *\/$/;"	e	enum:_dmic_io
kDMIC_PdmBypassClk0	drivers/fsl_dmic.h	/^    kDMIC_PdmBypassClk0 = 1, \/*!< Clk Bypass clocks only channel0 *\/$/;"	e	enum:_dmic_io
kDMIC_PdmBypassClk1	drivers/fsl_dmic.h	/^    kDMIC_PdmBypassClk1 = 2, \/*!< Clk Bypas clocks only channel1 *\/$/;"	e	enum:_dmic_io
kDMIC_PdmDiv1	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv1   = 0U,  \/*!< DMIC pre-divider set in divide by 1 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv12	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv12  = 6U,  \/*!< DMIC pre-divider set in divide by 12 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv128	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv128 = 13U, \/*!< DMIC pre-divider set in divide by 128 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv16	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv16  = 7U,  \/*!< DMIC pre-divider set in divide by 16*\/$/;"	e	enum:__anon196
kDMIC_PdmDiv2	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv2   = 1U,  \/*!< DMIC pre-divider set in divide by 2 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv24	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv24  = 8U,  \/*!< DMIC pre-divider set in divide by 24*\/$/;"	e	enum:__anon196
kDMIC_PdmDiv3	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv3   = 2U,  \/*!< DMIC pre-divider set in divide by 3 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv32	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv32  = 9U,  \/*!< DMIC pre-divider set in divide by 32 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv4	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv4   = 3U,  \/*!< DMIC pre-divider set in divide by 4 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv48	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv48  = 10U, \/*!< DMIC pre-divider set in divide by 48 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv6	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv6   = 4U,  \/*!< DMIC pre-divider set in divide by 6 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv64	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv64  = 11U, \/*!< DMIC pre-divider set in divide by 64*\/$/;"	e	enum:__anon196
kDMIC_PdmDiv8	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv8   = 5U,  \/*!< DMIC pre-divider set in divide by 8 *\/$/;"	e	enum:__anon196
kDMIC_PdmDiv96	drivers/fsl_dmic.h	/^    kDMIC_PdmDiv96  = 12U, \/*!< DMIC pre-divider set in divide by 96*\/$/;"	e	enum:__anon196
kDMIC_PdmDual	drivers/fsl_dmic.h	/^    kDMIC_PdmDual   = 0, \/*!< Two separate pairs of PDM wires *\/$/;"	e	enum:_dmic_io
kDMIC_PdmStereo	drivers/fsl_dmic.h	/^    kDMIC_PdmStereo = 4, \/*!< Stereo data0 *\/$/;"	e	enum:_dmic_io
kDMIC_PdmStereo2	drivers/fsl_dmic.h	/^    kDMIC_PdmStereo2 = 8,  \/*!< Stereo data2 *\/$/;"	e	enum:_dmic_io
kDMIC_PdmStereo4	drivers/fsl_dmic.h	/^    kDMIC_PdmStereo4 = 16, \/*!< Stereo data4 *\/$/;"	e	enum:_dmic_io
kDMIC_PdmStereo6	drivers/fsl_dmic.h	/^    kDMIC_PdmStereo6 = 32, \/*!< Stereo data6 *\/$/;"	e	enum:_dmic_io
kDMIC_PhyFullSpeed	drivers/fsl_dmic.h	/^    kDMIC_PhyFullSpeed = 0U, \/*!< Decimator gets one sample per each chosen clock edge of PDM interface *\/$/;"	e	enum:_dmic_phy_sample_rate
kDMIC_PhyHalfSpeed	drivers/fsl_dmic.h	/^    kDMIC_PhyHalfSpeed = 1U, \/*!< PDM clock to Microphone is halved, decimator receives each sample twice *\/$/;"	e	enum:_dmic_phy_sample_rate
kDMIC_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kDMIC_RST_SHIFT_RSTn = 65536 | 19U,      \/**< Digital microphone interface reset control *\/$/;"	e	enum:_SYSCON_RSTn
kDMIC_Right	drivers/fsl_dmic.h	/^    kDMIC_Right = 1U, \/*!< Right Stereo channel *\/$/;"	e	enum:_stereo_side
kDmaRequestDMIC0	device/LPC54018.h	/^    kDmaRequestDMIC0                = 16U,         \/**< Digital microphone interface 0 *\/$/;"	e	enum:_dma_request_source
kDmaRequestDMIC1	device/LPC54018.h	/^    kDmaRequestDMIC1                = 17U,         \/**< Digital microphone interface 1 *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm0Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm0Rx          = 0U,          \/**< Flexcomm Interface 0 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm0Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm0Tx          = 1U,          \/**< Flexcomm Interface 0 TX\/I2C Master *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm10Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm10Rx         = 28U,         \/**< Flexcomm Interface 10 RX *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm10Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm10Tx         = 29U,         \/**< Flexcomm Interface 10 TX *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm1Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm1Rx          = 2U,          \/**< Flexcomm Interface 1 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm1Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm1Tx          = 3U,          \/**< Flexcomm Interface 1 TX\/I2C Master *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm2Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm2Rx          = 4U,          \/**< Flexcomm Interface 2 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm2Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm2Tx          = 5U,          \/**< Flexcomm Interface 2 TX\/I2C Master *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm3Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm3Rx          = 6U,          \/**< Flexcomm Interface 3 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm3Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm3Tx          = 7U,          \/**< Flexcomm Interface 3 TX\/I2C Master *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm4Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm4Rx          = 8U,          \/**< Flexcomm Interface 4 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm4Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm4Tx          = 9U,          \/**< Flexcomm Interface 4 TX\/I2C Master *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm5Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm5Rx          = 10U,         \/**< Flexcomm Interface 5 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm5Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm5Tx          = 11U,         \/**< Flexcomm Interface 5 TX\/I2C Master *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm6Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm6Rx          = 12U,         \/**< Flexcomm Interface 6 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm6Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm6Tx          = 13U,         \/**< Flexcomm Interface 6 TX\/I2C Master *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm7Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm7Rx          = 14U,         \/**< Flexcomm Interface 7 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm7Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm7Tx          = 15U,         \/**< Flexcomm Interface 7 TX\/I2C Master *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm8Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm8Rx          = 20U,         \/**< Flexcomm Interface 8 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm8Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm8Tx          = 21U,         \/**< Flexcomm Interface 8 TX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm9Rx	device/LPC54018.h	/^    kDmaRequestFlexcomm9Rx          = 22U,         \/**< Flexcomm Interface 9 RX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestFlexcomm9Tx	device/LPC54018.h	/^    kDmaRequestFlexcomm9Tx          = 23U,         \/**< Flexcomm Interface 9 TX\/I2C Slave *\/$/;"	e	enum:_dma_request_source
kDmaRequestSHA	device/LPC54018.h	/^    kDmaRequestSHA                  = 19U,         \/**< Secure Hash Algorithm *\/$/;"	e	enum:_dma_request_source
kDmaRequestSMARTCARD0_RX	device/LPC54018.h	/^    kDmaRequestSMARTCARD0_RX        = 24U,         \/**< SMARTCARD0 RX *\/$/;"	e	enum:_dma_request_source
kDmaRequestSMARTCARD0_TX	device/LPC54018.h	/^    kDmaRequestSMARTCARD0_TX        = 25U,         \/**< SMARTCARD0 TX *\/$/;"	e	enum:_dma_request_source
kDmaRequestSMARTCARD1_RX	device/LPC54018.h	/^    kDmaRequestSMARTCARD1_RX        = 26U,         \/**< SMARTCARD1 RX *\/$/;"	e	enum:_dma_request_source
kDmaRequestSMARTCARD1_TX	device/LPC54018.h	/^    kDmaRequestSMARTCARD1_TX        = 27U,         \/**< SMARTCARD1 TX *\/$/;"	e	enum:_dma_request_source
kDmaRequestSPIFI	device/LPC54018.h	/^    kDmaRequestSPIFI                = 18U,         \/**< SPI Flash Interface *\/$/;"	e	enum:_dma_request_source
kEMC_16BitWidth	drivers/fsl_emc.h	/^    kEMC_16BitWidth,       \/*!< 16 bit memory width. *\/$/;"	e	enum:_emc_static_memwidth
kEMC_32BitWidth	drivers/fsl_emc.h	/^    kEMC_32BitWidth        \/*!< 32 bit memory width. *\/$/;"	e	enum:_emc_static_memwidth
kEMC_8BitWidth	drivers/fsl_emc.h	/^    kEMC_8BitWidth = 0x0U, \/*!< 8 bit memory width. *\/$/;"	e	enum:_emc_static_memwidth
kEMC_ActiveHighChipSelect	drivers/fsl_emc.h	/^    kEMC_ActiveHighChipSelect  = 0x0040U, \/*!< Chip select active high. *\/$/;"	e	enum:_emc_static_special_config
kEMC_AsynchronosPageEnable	drivers/fsl_emc.h	/^    kEMC_AsynchronosPageEnable = 0x0008U, \/*!< Enable the asynchronous page mode. page length four. *\/$/;"	e	enum:_emc_static_special_config
kEMC_BigEndian	drivers/fsl_emc.h	/^    kEMC_BigEndian,           \/*!< Big endian mode. *\/$/;"	e	enum:_emc_endian_mode
kEMC_BufferEnable	drivers/fsl_emc.h	/^    kEMC_BufferEnable          = 0x80000U \/*!< Buffer enable. *\/$/;"	e	enum:_emc_static_special_config
kEMC_ByteLaneStateAllLow	drivers/fsl_emc.h	/^    kEMC_ByteLaneStateAllLow   = 0x0080U, \/*!< Reads\/writes the respective valuie bits in BLS3:0 are low. *\/$/;"	e	enum:_emc_static_special_config
kEMC_CmdDelayPulseOneclk	drivers/fsl_emc.h	/^    kEMC_CmdDelayPulseOneclk, \/*!< Command delayed strategy pluse one clock cycle using EMCCLKDELAY. *\/$/;"	e	enum:_emc_dynamic_read
kEMC_Cmddelay	drivers/fsl_emc.h	/^    kEMC_Cmddelay,            \/*!< Command delayed strategy, using EMCCLKDELAY. *\/$/;"	e	enum:_emc_dynamic_read
kEMC_CmddelayPulsetwoclk	drivers/fsl_emc.h	/^    kEMC_CmddelayPulsetwoclk, \/*!< Command delayed strategy pulse two clock cycle using EMCCLKDELAY. *\/$/;"	e	enum:_emc_dynamic_read
kEMC_EMCFbclkInput	drivers/fsl_emc.h	/^    kEMC_EMCFbclkInput           \/*!< Use the external EMC_FBCLK input. *\/$/;"	e	enum:_emc_fbclk_src
kEMC_ExtWaitEnable	drivers/fsl_emc.h	/^    kEMC_ExtWaitEnable         = 0x0100U, \/*!< Extended wait enable. *\/$/;"	e	enum:_emc_static_special_config
kEMC_IntloopbackEmcclk	drivers/fsl_emc.h	/^    kEMC_IntloopbackEmcclk = 0U, \/*!< Use the internal loop back from EMC_CLK output. *\/$/;"	e	enum:_emc_fbclk_src
kEMC_LittleEndian	drivers/fsl_emc.h	/^    kEMC_LittleEndian = 0x0U, \/*!< Little endian mode. *\/$/;"	e	enum:_emc_endian_mode
kEMC_Lpsdram	drivers/fsl_emc.h	/^    kEMC_Lpsdram,      \/*!< Dynamic memory device: Low-power SDRAM. *\/$/;"	e	enum:_emc_dynamic_device
kEMC_NoDelay	drivers/fsl_emc.h	/^    kEMC_NoDelay = 0x0U,      \/*!< No delay. *\/$/;"	e	enum:_emc_dynamic_read
kEMC_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kEMC_RST_SHIFT_RSTn = 131072 | 7U,       \/**< EMC reset control *\/$/;"	e	enum:_SYSCON_RSTn
kEMC_Sdram	drivers/fsl_emc.h	/^    kEMC_Sdram = 0x0U, \/*!< Dynamic memory device: SDRAM. *\/$/;"	e	enum:_emc_dynamic_device
kENET_8023AS2KPacket	drivers/fsl_enet.h	/^    kENET_8023AS2KPacket     = 0x0040U  \/*!< 8023as support for 2K packets. *\/$/;"	e	enum:_enet_special_config
kENET_BinaryRollover	drivers/fsl_enet.h	/^    kENET_BinaryRollover  = 0, \/*!< System time binary rollover.*\/$/;"	e	enum:_enet_ts_rollover_type
kENET_BroadCastRxDisable	drivers/fsl_enet.h	/^    kENET_BroadCastRxDisable = 0x0010U, \/*!< The broadcast disabled. *\/$/;"	e	enum:_enet_special_config
kENET_BurstLen1	drivers/fsl_enet.h	/^    kENET_BurstLen1   = 0x00001U, \/*!< DMA burst length 1. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_BurstLen128	drivers/fsl_enet.h	/^    kENET_BurstLen128 = 0x10010U, \/*!< DMA burst length 128. eight times enabled. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_BurstLen16	drivers/fsl_enet.h	/^    kENET_BurstLen16  = 0x00010U, \/*!< DMA burst length 16. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_BurstLen2	drivers/fsl_enet.h	/^    kENET_BurstLen2   = 0x00002U, \/*!< DMA burst length 2. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_BurstLen256	drivers/fsl_enet.h	/^    kENET_BurstLen256 = 0x10020U, \/*!< DMA burst length 256. eight times enabled. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_BurstLen32	drivers/fsl_enet.h	/^    kENET_BurstLen32  = 0x00020U, \/*!< DMA burst length 32. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_BurstLen4	drivers/fsl_enet.h	/^    kENET_BurstLen4   = 0x00004U, \/*!< DMA burst length 4. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_BurstLen64	drivers/fsl_enet.h	/^    kENET_BurstLen64  = 0x10008U, \/*!< DMA burst length 64. eight times enabled. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_BurstLen8	drivers/fsl_enet.h	/^    kENET_BurstLen8   = 0x00008U, \/*!< DMA burst length 8. *\/$/;"	e	enum:_enet_dma_burstlen
kENET_DescDoubleBuffer	drivers/fsl_enet.h	/^    kENET_DescDoubleBuffer = 0x0001U, \/*!< The double buffer is used in the tx\/rx descriptor. *\/$/;"	e	enum:_enet_special_config
kENET_DigitalRollover	drivers/fsl_enet.h	/^    kENET_DigitalRollover = 1  \/*!< System time digital rollover.*\/$/;"	e	enum:_enet_ts_rollover_type
kENET_DmaBusErr	drivers/fsl_enet.h	/^    kENET_DmaBusErr            = ENET_DMA_CH_DMA_CHX_INT_EN_FBEE_MASK, \/*!< Fatal bus error. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaEarlyRx	drivers/fsl_enet.h	/^    kENET_DmaEarlyRx           = ENET_DMA_CH_DMA_CHX_INT_EN_ERIE_MASK, \/*!< Early receive. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaEarlyTx	drivers/fsl_enet.h	/^    kENET_DmaEarlyTx           = ENET_DMA_CH_DMA_CHX_INT_EN_ETIE_MASK, \/*!< Early transmit. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaRx	drivers/fsl_enet.h	/^    kENET_DmaRx                = ENET_DMA_CH_DMA_CHX_INT_EN_RIE_MASK,  \/*!< Rx interrupt. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaRxBuffUnavail	drivers/fsl_enet.h	/^    kENET_DmaRxBuffUnavail     = ENET_DMA_CH_DMA_CHX_INT_EN_RBUE_MASK, \/*!< Rx buffer unavailable. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaRxStop	drivers/fsl_enet.h	/^    kENET_DmaRxStop            = ENET_DMA_CH_DMA_CHX_INT_EN_RSE_MASK,  \/*!< Rx stop. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaRxWatchdogTimeout	drivers/fsl_enet.h	/^    kENET_DmaRxWatchdogTimeout = ENET_DMA_CH_DMA_CHX_INT_EN_RWTE_MASK, \/*!< Rx watchdog timeout. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaTx	drivers/fsl_enet.h	/^    kENET_DmaTx                = ENET_DMA_CH_DMA_CHX_INT_EN_TIE_MASK,  \/*!< Tx interrupt. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaTxBuffUnavail	drivers/fsl_enet.h	/^    kENET_DmaTxBuffUnavail     = ENET_DMA_CH_DMA_CHX_INT_EN_TBUE_MASK, \/*!< Tx buffer unavailable. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DmaTxStop	drivers/fsl_enet.h	/^    kENET_DmaTxStop            = ENET_DMA_CH_DMA_CHX_INT_EN_TSE_MASK,  \/*!< Tx stop interrupt. *\/$/;"	e	enum:_enet_dma_interrupt_enable
kENET_DynamicMap	drivers/fsl_enet.h	/^    kENET_DynamicMap =$/;"	e	enum:_enet_mtl_rxqueuemap
kENET_FirstFlagOnly	drivers/fsl_enet.h	/^    kENET_FirstFlagOnly,  \/*!< It's the first descriptor of the frame. *\/$/;"	e	enum:_enet_desc_flag
kENET_FirstLastFlag	drivers/fsl_enet.h	/^    kENET_FirstLastFlag   \/*!< It's the first and last descriptor of the frame. *\/$/;"	e	enum:_enet_desc_flag
kENET_FixPri	drivers/fsl_enet.h	/^    kENET_FixPri = 0,      \/*!< Fixed priority. channel 0 has lower priority than channel 1. *\/$/;"	e	enum:_enet_dma_tx_sche
kENET_FlowControlEnable	drivers/fsl_enet.h	/^    kENET_FlowControlEnable  = 0x0008U, \/*!< The flow control enabled. *\/$/;"	e	enum:_enet_special_config
kENET_LastFlagOnly	drivers/fsl_enet.h	/^    kENET_LastFlagOnly,   \/*!< It's the last descriptor of the frame. *\/$/;"	e	enum:_enet_desc_flag
kENET_MacPmt	drivers/fsl_enet.h	/^    kENET_MacPmt       = (ENET_MAC_INTR_EN_PMTIE_MASK << ENET_MACINT_ENUM_OFFSET),$/;"	e	enum:_enet_mac_interrupt_enable
kENET_MacTimestamp	drivers/fsl_enet.h	/^    kENET_MacTimestamp = (ENET_MAC_INTR_EN_TSIE_MASK << ENET_MACINT_ENUM_OFFSET),$/;"	e	enum:_enet_mac_interrupt_enable
kENET_MiddleFlag	drivers/fsl_enet.h	/^    kENET_MiddleFlag = 0, \/*!< It's a middle descriptor of the frame. *\/$/;"	e	enum:_enet_desc_flag
kENET_MiiFullDuplex	drivers/fsl_enet.h	/^    kENET_MiiFullDuplex       \/*!< Full duplex mode. *\/$/;"	e	enum:_enet_mii_duplex
kENET_MiiHalfDuplex	drivers/fsl_enet.h	/^    kENET_MiiHalfDuplex = 0U, \/*!< Half duplex mode. *\/$/;"	e	enum:_enet_mii_duplex
kENET_MiiMode	drivers/fsl_enet.h	/^    kENET_MiiMode  = 0U, \/*!< MII mode for data interface. *\/$/;"	e	enum:_enet_mii_mode
kENET_MiiReadFrame	drivers/fsl_enet.h	/^    kENET_MiiReadFrame  = 3U  \/*!< Read frame operation for a valid MII management frame. *\/$/;"	e	enum:_enet_mii_normal_opcode
kENET_MiiSpeed100M	drivers/fsl_enet.h	/^    kENET_MiiSpeed100M = 1U, \/*!< Speed 100 Mbps. *\/$/;"	e	enum:_enet_mii_speed
kENET_MiiSpeed10M	drivers/fsl_enet.h	/^    kENET_MiiSpeed10M  = 0U, \/*!< Speed 10 Mbps. *\/$/;"	e	enum:_enet_mii_speed
kENET_MiiWriteFrame	drivers/fsl_enet.h	/^    kENET_MiiWriteFrame = 1U, \/*!< Write frame operation for a valid MII management frame. *\/$/;"	e	enum:_enet_mii_normal_opcode
kENET_MulticastAllEnable	drivers/fsl_enet.h	/^    kENET_MulticastAllEnable = 0x0020U, \/*!< All multicast are passed. *\/$/;"	e	enum:_enet_special_config
kENET_PromiscuousEnable	drivers/fsl_enet.h	/^    kENET_PromiscuousEnable  = 0x0004U, \/*!< The promiscuous enabled. *\/$/;"	e	enum:_enet_special_config
kENET_PtpEventMsgType	drivers/fsl_enet.h	/^    kENET_PtpEventMsgType = 3U,   \/*!< PTP event message type. *\/$/;"	e	enum:_enet_ptp_event_type
kENET_PtpEventPort	drivers/fsl_enet.h	/^    kENET_PtpEventPort    = 319U, \/*!< PTP event port number. *\/$/;"	e	enum:_enet_ptp_event_type
kENET_PtpGnrlPort	drivers/fsl_enet.h	/^    kENET_PtpGnrlPort     = 320U  \/*!< PTP general port number. *\/$/;"	e	enum:_enet_ptp_event_type
kENET_PtpSrcPortIdLen	drivers/fsl_enet.h	/^    kENET_PtpSrcPortIdLen = 10U,  \/*!< PTP message sequence id length. *\/$/;"	e	enum:_enet_ptp_event_type
kENET_RmiiMode	drivers/fsl_enet.h	/^    kENET_RmiiMode = 1U  \/*!< RMII mode for data interface. *\/$/;"	e	enum:_enet_mii_mode
kENET_RxIntEvent	drivers/fsl_enet.h	/^    kENET_RxIntEvent,        \/*!< Receive interrupt event. *\/$/;"	e	enum:_enet_event
kENET_StaticDirctMap	drivers/fsl_enet.h	/^    kENET_StaticDirctMap = 0x100U, \/*!< The received fame in rx Qn(n = 0,1) direclty map to dma channel n. *\/$/;"	e	enum:_enet_mtl_rxqueuemap
kENET_StoreAndForward	drivers/fsl_enet.h	/^    kENET_StoreAndForward = 0x0002U, \/*!< The rx\/tx store and forward enable. *\/$/;"	e	enum:_enet_special_config
kENET_SystimeAdd	drivers/fsl_enet.h	/^    kENET_SystimeAdd      = 0U, \/*!< System time add to. *\/$/;"	e	enum:_enet_systime_op
kENET_SystimeSubtract	drivers/fsl_enet.h	/^    kENET_SystimeSubtract = 1U  \/*!< System time subtract. *\/$/;"	e	enum:_enet_systime_op
kENET_TimeStampIntEvent	drivers/fsl_enet.h	/^    kENET_TimeStampIntEvent, \/*!< Time stamp interrupt event. *\/$/;"	e	enum:_enet_event
kENET_TxIntEvent	drivers/fsl_enet.h	/^    kENET_TxIntEvent,        \/*!< Transmit interrupt event. *\/$/;"	e	enum:_enet_event
kENET_WakeUpIntEvent	drivers/fsl_enet.h	/^    kENET_WakeUpIntEvent,    \/*!< Wake up interrupt event. *\/$/;"	e	enum:_enet_event
kENET_WeightRoundRobin	drivers/fsl_enet.h	/^    kENET_WeightRoundRobin \/*!< Weighted (weight factor) round robin. *\/$/;"	e	enum:_enet_dma_tx_sche
kENET_WeightStrPri	drivers/fsl_enet.h	/^    kENET_WeightStrPri,    \/*!< Weighted(burst length) strict priority. *\/$/;"	e	enum:_enet_dma_tx_sche
kENET_rxStrPrio	drivers/fsl_enet.h	/^    kENET_rxStrPrio = 0U,  \/*!< Tx weight round-robin, rx strict priority. *\/$/;"	e	enum:_enet_mtl_multiqueue_rxsche
kENET_rxWeightStrPrio	drivers/fsl_enet.h	/^    kENET_rxWeightStrPrio, \/*!< Tx strict priority, rx weight strict priority. *\/$/;"	e	enum:_enet_mtl_multiqueue_rxsche
kENET_txStrPrio	drivers/fsl_enet.h	/^    kENET_txStrPrio  = 3U, \/*!< Tx strict priority. *\/$/;"	e	enum:_enet_mtl_multiqueue_txsche
kENET_txWeightRR	drivers/fsl_enet.h	/^    kENET_txWeightRR = 0U, \/*!< Tx weight round-robin. *\/$/;"	e	enum:_enet_mtl_multiqueue_txsche
kETH_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kETH_RST_SHIFT_RSTn = 131072 | 8U,       \/**< ETH reset control *\/$/;"	e	enum:_SYSCON_RSTn
kEXT_CLK_to_AUDIO_PLL	drivers/fsl_clock.h	/^    kEXT_CLK_to_AUDIO_PLL = MUX_A(CM_AUDPLLCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kEXT_CLK_to_CLKOUT	drivers/fsl_clock.h	/^    kEXT_CLK_to_CLKOUT    = MUX_A(CM_CLKOUTCLKSELA, 1),$/;"	e	enum:_clock_attach_id
kEXT_CLK_to_MAIN_CLK	drivers/fsl_clock.h	/^    kEXT_CLK_to_MAIN_CLK = MUX_A(CM_MAINCLKSELA, 1) | MUX_B(CM_MAINCLKSELB, 0, 0),$/;"	e	enum:_clock_attach_id
kEXT_CLK_to_SYS_PLL	drivers/fsl_clock.h	/^    kEXT_CLK_to_SYS_PLL = MUX_A(CM_SYSPLLCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kFC0_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC0_RST_SHIFT_RSTn = 65536 | 11U,       \/**< Flexcomm Interface 0 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC10_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC10_RST_SHIFT_RSTn = 131072 | 21U,     \/**< Flexcomm Interface 10 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC1_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC1_RST_SHIFT_RSTn = 65536 | 12U,       \/**< Flexcomm Interface 1 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC2_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC2_RST_SHIFT_RSTn = 65536 | 13U,       \/**< Flexcomm Interface 2 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC3_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC3_RST_SHIFT_RSTn = 65536 | 14U,       \/**< Flexcomm Interface 3 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC4_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC4_RST_SHIFT_RSTn = 65536 | 15U,       \/**< Flexcomm Interface 4 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC5_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC5_RST_SHIFT_RSTn = 65536 | 16U,       \/**< Flexcomm Interface 5 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC6_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC6_RST_SHIFT_RSTn = 65536 | 17U,       \/**< Flexcomm Interface 6 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC7_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC7_RST_SHIFT_RSTn = 65536 | 18U,       \/**< Flexcomm Interface 7 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC8_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC8_RST_SHIFT_RSTn = 131072 | 14U,      \/**< Flexcomm Interface 8 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFC9_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kFC9_RST_SHIFT_RSTn = 131072 | 15U,      \/**< Flexcomm Interface 9 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kFRG_to_FLEXCOMM0	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM0       = MUX_A(CM_FXCOMCLKSEL0, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM1	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM1       = MUX_A(CM_FXCOMCLKSEL1, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM2	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM2       = MUX_A(CM_FXCOMCLKSEL2, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM3	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM3       = MUX_A(CM_FXCOMCLKSEL3, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM4	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM4       = MUX_A(CM_FXCOMCLKSEL4, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM5	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM5       = MUX_A(CM_FXCOMCLKSEL5, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM6	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM6       = MUX_A(CM_FXCOMCLKSEL6, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM7	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM7       = MUX_A(CM_FXCOMCLKSEL7, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM8	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM8       = MUX_A(CM_FXCOMCLKSEL8, 4),$/;"	e	enum:_clock_attach_id
kFRG_to_FLEXCOMM9	drivers/fsl_clock.h	/^    kFRG_to_FLEXCOMM9       = MUX_A(CM_FXCOMCLKSEL9, 4),$/;"	e	enum:_clock_attach_id
kFRO12M_to_ASYNC_APB	drivers/fsl_clock.h	/^    kFRO12M_to_ASYNC_APB      = MUX_A(CM_ASYNCAPB, 1),$/;"	e	enum:_clock_attach_id
kFRO12M_to_AUDIO_PLL	drivers/fsl_clock.h	/^    kFRO12M_to_AUDIO_PLL  = MUX_A(CM_AUDPLLCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_DMIC	drivers/fsl_clock.h	/^    kFRO12M_to_DMIC     = MUX_A(CM_DMICCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM0	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM0    = MUX_A(CM_FXCOMCLKSEL0, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM1	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM1    = MUX_A(CM_FXCOMCLKSEL1, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM2	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM2    = MUX_A(CM_FXCOMCLKSEL2, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM3	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM3    = MUX_A(CM_FXCOMCLKSEL3, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM4	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM4    = MUX_A(CM_FXCOMCLKSEL4, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM5	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM5    = MUX_A(CM_FXCOMCLKSEL5, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM6	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM6    = MUX_A(CM_FXCOMCLKSEL6, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM7	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM7    = MUX_A(CM_FXCOMCLKSEL7, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM8	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM8    = MUX_A(CM_FXCOMCLKSEL8, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FLEXCOMM9	drivers/fsl_clock.h	/^    kFRO12M_to_FLEXCOMM9    = MUX_A(CM_FXCOMCLKSEL9, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_FRG	drivers/fsl_clock.h	/^    kFRO12M_to_FRG   = MUX_A(CM_FRGCLKSEL, 2),$/;"	e	enum:_clock_attach_id
kFRO12M_to_MAIN_CLK	drivers/fsl_clock.h	/^    kFRO12M_to_MAIN_CLK  = MUX_A(CM_MAINCLKSELA, 0) | MUX_B(CM_MAINCLKSELB, 0, 0),$/;"	e	enum:_clock_attach_id
kFRO12M_to_SYSTICKCLK	drivers/fsl_clock.h	/^    kFRO12M_to_SYSTICKCLK          = MUX_A(CM_STICKCLKSEL, 3),$/;"	e	enum:_clock_attach_id
kFRO12M_to_SYS_PLL	drivers/fsl_clock.h	/^    kFRO12M_to_SYS_PLL  = MUX_A(CM_SYSPLLCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kFRO_HF_DIV_to_DMIC	drivers/fsl_clock.h	/^    kFRO_HF_DIV_to_DMIC = MUX_A(CM_DMICCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_ADC_CLK	drivers/fsl_clock.h	/^    kFRO_HF_to_ADC_CLK    = MUX_A(CM_ADCASYNCCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_CLKOUT	drivers/fsl_clock.h	/^    kFRO_HF_to_CLKOUT     = MUX_A(CM_CLKOUTCLKSELA, 3),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM0	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM0    = MUX_A(CM_FXCOMCLKSEL0, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM1	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM1    = MUX_A(CM_FXCOMCLKSEL1, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM10	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM10    = MUX_A(CM_FXCOMCLKSEL10, 3),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM2	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM2    = MUX_A(CM_FXCOMCLKSEL2, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM3	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM3    = MUX_A(CM_FXCOMCLKSEL3, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM4	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM4    = MUX_A(CM_FXCOMCLKSEL4, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM5	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM5    = MUX_A(CM_FXCOMCLKSEL5, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM6	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM6    = MUX_A(CM_FXCOMCLKSEL6, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM7	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM7    = MUX_A(CM_FXCOMCLKSEL7, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM8	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM8    = MUX_A(CM_FXCOMCLKSEL8, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FLEXCOMM9	drivers/fsl_clock.h	/^    kFRO_HF_to_FLEXCOMM9    = MUX_A(CM_FXCOMCLKSEL9, 1),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_FRG	drivers/fsl_clock.h	/^    kFRO_HF_to_FRG   = MUX_A(CM_FRGCLKSEL, 3),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_LCD_CLK	drivers/fsl_clock.h	/^    kFRO_HF_to_LCD_CLK   = MUX_A(CM_LCDCLKSEL, 2),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_MAIN_CLK	drivers/fsl_clock.h	/^    kFRO_HF_to_MAIN_CLK  = MUX_A(CM_MAINCLKSELA, 3) | MUX_B(CM_MAINCLKSELB, 0, 0),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_MCLK	drivers/fsl_clock.h	/^    kFRO_HF_to_MCLK    = MUX_A(CM_MCLKCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_SCT_CLK	drivers/fsl_clock.h	/^    kFRO_HF_to_SCT_CLK    = MUX_A(CM_SCTCLKSEL, 2),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_SDIO_CLK	drivers/fsl_clock.h	/^    kFRO_HF_to_SDIO_CLK    = MUX_A(CM_SDIOCLKSEL, 3),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_SPIFI_CLK	drivers/fsl_clock.h	/^    kFRO_HF_to_SPIFI_CLK    = MUX_A(CM_SPIFICLKSEL, 3),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_USB0_CLK	drivers/fsl_clock.h	/^    kFRO_HF_to_USB0_CLK  = MUX_A(CM_USB0CLKSEL, 0),$/;"	e	enum:_clock_attach_id
kFRO_HF_to_USB1_CLK	drivers/fsl_clock.h	/^    kFRO_HF_to_USB1_CLK  = MUX_A(CM_USB1CLKSEL, 0),$/;"	e	enum:_clock_attach_id
kFlexcommIrqs	drivers/fsl_flexcomm.c	/^IRQn_Type const kFlexcommIrqs[] = FLEXCOMM_IRQS;$/;"	v
kGINT_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kGINT_RST_SHIFT_RSTn = 0 | 19U,          \/**< Grouped interrupt (PINT) reset control. *\/$/;"	e	enum:_SYSCON_RSTn
kGPIO0_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kGPIO0_RST_SHIFT_RSTn = 0 | 14U,         \/**< GPIO0 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kGPIO1_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kGPIO1_RST_SHIFT_RSTn = 0 | 15U,         \/**< GPIO1 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kGPIO2_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kGPIO2_RST_SHIFT_RSTn = 0 | 16U,         \/**< GPIO2 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kGPIO3_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kGPIO3_RST_SHIFT_RSTn = 0 | 17U,         \/**< GPIO3 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kGPIO4_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kGPIO4_RST_SHIFT_RSTn = 131072 | 9U,     \/**< GPIO4 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kGPIO5_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kGPIO5_RST_SHIFT_RSTn = 131072 | 10U,    \/**< GPIO5 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kGPIO_DigitalInput	drivers/fsl_gpio.h	/^    kGPIO_DigitalInput = 0U,  \/*!< Set current pin as digital input*\/$/;"	e	enum:_gpio_pin_direction
kGPIO_DigitalOutput	drivers/fsl_gpio.h	/^    kGPIO_DigitalOutput = 1U, \/*!< Set current pin as digital output*\/$/;"	e	enum:_gpio_pin_direction
kGPIO_InterruptA	drivers/fsl_gpio.h	/^    kGPIO_InterruptA = 0U, \/*!< Set current pin as interrupt A*\/$/;"	e	enum:_gpio_interrupt_index
kGPIO_InterruptB	drivers/fsl_gpio.h	/^    kGPIO_InterruptB = 1U, \/*!< Set current pin as interrupt B*\/$/;"	e	enum:_gpio_interrupt_index
kGPIO_PinIntEnableEdge	drivers/fsl_gpio.h	/^    kGPIO_PinIntEnableEdge = GPIO_PIN_INT_EDGE    \/*!< Generate Pin Interrupt on edge mode *\/$/;"	e	enum:_gpio_pin_enable_mode
kGPIO_PinIntEnableHighOrRise	drivers/fsl_gpio.h	/^    kGPIO_PinIntEnableHighOrRise =$/;"	e	enum:_gpio_pin_enable_polarity
kGPIO_PinIntEnableLevel	drivers/fsl_gpio.h	/^    kGPIO_PinIntEnableLevel = GPIO_PIN_INT_LEVEL, \/*!< Generate Pin Interrupt on level mode *\/$/;"	e	enum:_gpio_pin_enable_mode
kGPIO_PinIntEnableLowOrFall	drivers/fsl_gpio.h	/^    kGPIO_PinIntEnableLowOrFall =$/;"	e	enum:_gpio_pin_enable_polarity
kHAL_I2cRead	component/i2c/i2c.h	/^    kHAL_I2cRead  = 1U  \/*!< Master receive. *\/$/;"	e	enum:_hal_i2c_direction
kHAL_I2cSlaveAddressMatchEvent	component/i2c/i2c.h	/^    kHAL_I2cSlaveAddressMatchEvent = 0x01U, \/*!< Received the slave address after a start or repeated start. *\/$/;"	e	enum:_hal_i2c_slave_transfer_event
kHAL_I2cSlaveAllEvents	component/i2c/i2c.h	/^    kHAL_I2cSlaveAllEvents = kHAL_I2cSlaveAddressMatchEvent | kHAL_I2cSlaveTransmitEvent | kHAL_I2cSlaveReceiveEvent |$/;"	e	enum:_hal_i2c_slave_transfer_event
kHAL_I2cSlaveCompletionEvent	component/i2c/i2c.h	/^    kHAL_I2cSlaveCompletionEvent  = 0x20U,  \/*!< A stop was detected or finished transfer, completing the transfer. *\/$/;"	e	enum:_hal_i2c_slave_transfer_event
kHAL_I2cSlaveGenaralcallEvent	component/i2c/i2c.h	/^    kHAL_I2cSlaveGenaralcallEvent = 0x40U,  \/*!< Received the general call address after a start or repeated start. *\/$/;"	e	enum:_hal_i2c_slave_transfer_event
kHAL_I2cSlaveReceiveEvent	component/i2c/i2c.h	/^    kHAL_I2cSlaveReceiveEvent = 0x04U,      \/*!< A callback is requested to provide a buffer in which to place received$/;"	e	enum:_hal_i2c_slave_transfer_event
kHAL_I2cSlaveStartEvent	component/i2c/i2c.h	/^    kHAL_I2cSlaveStartEvent       = 0x10U,  \/*!< A start\/repeated start was detected. *\/$/;"	e	enum:_hal_i2c_slave_transfer_event
kHAL_I2cSlaveTransmitAckEvent	component/i2c/i2c.h	/^    kHAL_I2cSlaveTransmitAckEvent = 0x08U,  \/*!< A callback needs to either transmit an ACK or NACK. *\/$/;"	e	enum:_hal_i2c_slave_transfer_event
kHAL_I2cSlaveTransmitEvent	component/i2c/i2c.h	/^    kHAL_I2cSlaveTransmitEvent     = 0x02U, \/*!< A callback is requested to provide data to transmit$/;"	e	enum:_hal_i2c_slave_transfer_event
kHAL_I2cTransferDefaultFlag	component/i2c/i2c.h	/^    kHAL_I2cTransferDefaultFlag = 0x0U,       \/*!< A transfer starts with a start signal, stops with a stop signal. *\/$/;"	e	enum:_hal_i2c_master_transfer_flag
kHAL_I2cTransferNoStartFlag	component/i2c/i2c.h	/^    kHAL_I2cTransferNoStartFlag = 0x1U,       \/*!< A transfer starts without a start signal, only support write only or$/;"	e	enum:_hal_i2c_master_transfer_flag
kHAL_I2cTransferNoStopFlag	component/i2c/i2c.h	/^    kHAL_I2cTransferNoStopFlag        = 0x4U, \/*!< A transfer ends without a stop signal. *\/$/;"	e	enum:_hal_i2c_master_transfer_flag
kHAL_I2cTransferRepeatedStartFlag	component/i2c/i2c.h	/^    kHAL_I2cTransferRepeatedStartFlag = 0x2U, \/*!< A transfer starts with a repeated start signal. *\/$/;"	e	enum:_hal_i2c_master_transfer_flag
kHAL_I2cWrite	component/i2c/i2c.h	/^    kHAL_I2cWrite = 0U, \/*!< Master transmit. *\/$/;"	e	enum:_hal_i2c_direction
kHAL_UartOneStopBit	component/uart/uart.h	/^    kHAL_UartOneStopBit = 0U, \/*!< One stop bit *\/$/;"	e	enum:_hal_uart_stop_bit_count
kHAL_UartParityDisabled	component/uart/uart.h	/^    kHAL_UartParityDisabled = 0x0U, \/*!< Parity disabled *\/$/;"	e	enum:_hal_uart_parity_mode
kHAL_UartParityEven	component/uart/uart.h	/^    kHAL_UartParityEven     = 0x1U, \/*!< Parity even enabled *\/$/;"	e	enum:_hal_uart_parity_mode
kHAL_UartParityOdd	component/uart/uart.h	/^    kHAL_UartParityOdd      = 0x2U, \/*!< Parity odd enabled *\/$/;"	e	enum:_hal_uart_parity_mode
kHAL_UartTwoStopBit	component/uart/uart.h	/^    kHAL_UartTwoStopBit = 1U, \/*!< Two stop bits *\/$/;"	e	enum:_hal_uart_stop_bit_count
kI2C_CLK_FC6_to_ASYNC_APB	drivers/fsl_clock.h	/^    kI2C_CLK_FC6_to_ASYNC_APB = MUX_A(CM_ASYNCAPB, 3),$/;"	e	enum:_clock_attach_id
kI2C_MasterArbitrationLostFlag	drivers/fsl_i2c.h	/^    kI2C_MasterArbitrationLostFlag =$/;"	e	enum:_i2c_master_flags
kI2C_MasterIrqFlags	drivers/fsl_i2c.c	/^    kI2C_MasterIrqFlags = I2C_INTSTAT_MSTPENDING_MASK | I2C_INTSTAT_MSTARBLOSS_MASK | I2C_INTSTAT_MSTSTSTPERR_MASK,$/;"	e	enum:_i2c_flag_constants	file:
kI2C_MasterPendingFlag	drivers/fsl_i2c.h	/^    kI2C_MasterPendingFlag = I2C_STAT_MSTPENDING_MASK, \/*!< The I2C module is waiting for software interaction. *\/$/;"	e	enum:_i2c_master_flags
kI2C_MasterStartStopErrorFlag	drivers/fsl_i2c.h	/^    kI2C_MasterStartStopErrorFlag =$/;"	e	enum:_i2c_master_flags
kI2C_QualModeExtend	drivers/fsl_i2c.h	/^    kI2C_QualModeExtend =$/;"	e	enum:_i2c_slave_address_qual_mode
kI2C_QualModeMask	drivers/fsl_i2c.h	/^    kI2C_QualModeMask = 0U, \/*!< The SLVQUAL0 field (qualAddress) is used as a logical mask for matching address0. *\/$/;"	e	enum:_i2c_slave_address_qual_mode
kI2C_Read	drivers/fsl_i2c.h	/^    kI2C_Read  = 1U  \/*!< Master receive. *\/$/;"	e	enum:_i2c_direction
kI2C_SaveDeselected	drivers/fsl_i2c.h	/^    kI2C_SaveDeselected =$/;"	e	enum:_i2c_slave_flags
kI2C_SlaveAddressMatchEvent	drivers/fsl_i2c.h	/^    kI2C_SlaveAddressMatchEvent = 0x01U, \/*!< Received the slave address after a start or repeated start. *\/$/;"	e	enum:_i2c_slave_transfer_event
kI2C_SlaveAddressRegister0	drivers/fsl_i2c.h	/^    kI2C_SlaveAddressRegister0 = 0U, \/*!< Slave Address 0 register. *\/$/;"	e	enum:_i2c_slave_address_register
kI2C_SlaveAddressRegister1	drivers/fsl_i2c.h	/^    kI2C_SlaveAddressRegister1 = 1U, \/*!< Slave Address 1 register. *\/$/;"	e	enum:_i2c_slave_address_register
kI2C_SlaveAddressRegister2	drivers/fsl_i2c.h	/^    kI2C_SlaveAddressRegister2 = 2U, \/*!< Slave Address 2 register. *\/$/;"	e	enum:_i2c_slave_address_register
kI2C_SlaveAddressRegister3	drivers/fsl_i2c.h	/^    kI2C_SlaveAddressRegister3 = 3U, \/*!< Slave Address 3 register. *\/$/;"	e	enum:_i2c_slave_address_register
kI2C_SlaveAllEvents	drivers/fsl_i2c.h	/^    kI2C_SlaveAllEvents = kI2C_SlaveAddressMatchEvent | kI2C_SlaveTransmitEvent | kI2C_SlaveReceiveEvent |$/;"	e	enum:_i2c_slave_transfer_event
kI2C_SlaveCompletionEvent	drivers/fsl_i2c.h	/^    kI2C_SlaveCompletionEvent = 0x20U,   \/*!< All data in the active transfer have been consumed. *\/$/;"	e	enum:_i2c_slave_transfer_event
kI2C_SlaveDeselectedEvent	drivers/fsl_i2c.h	/^    kI2C_SlaveDeselectedEvent =$/;"	e	enum:_i2c_slave_transfer_event
kI2C_SlaveFastMode	drivers/fsl_i2c.h	/^    kI2C_SlaveFastMode     = 1U,$/;"	e	enum:_i2c_slave_bus_speed
kI2C_SlaveFastModePlus	drivers/fsl_i2c.h	/^    kI2C_SlaveFastModePlus = 2U,$/;"	e	enum:_i2c_slave_bus_speed
kI2C_SlaveFsmAddressMatch	drivers/fsl_i2c.h	/^    kI2C_SlaveFsmAddressMatch = 0u,$/;"	e	enum:_i2c_slave_fsm
kI2C_SlaveFsmReceive	drivers/fsl_i2c.h	/^    kI2C_SlaveFsmReceive      = 2u,$/;"	e	enum:_i2c_slave_fsm
kI2C_SlaveFsmTransmit	drivers/fsl_i2c.h	/^    kI2C_SlaveFsmTransmit     = 3u,$/;"	e	enum:_i2c_slave_fsm
kI2C_SlaveHsMode	drivers/fsl_i2c.h	/^    kI2C_SlaveHsMode       = 3U,$/;"	e	enum:_i2c_slave_bus_speed
kI2C_SlaveIrqFlags	drivers/fsl_i2c.c	/^    kI2C_SlaveIrqFlags  = I2C_INTSTAT_SLVPENDING_MASK | I2C_INTSTAT_SLVDESEL_MASK,$/;"	e	enum:_i2c_flag_constants	file:
kI2C_SlaveNotStretching	drivers/fsl_i2c.h	/^    kI2C_SlaveNotStretching =$/;"	e	enum:_i2c_slave_flags
kI2C_SlavePendingFlag	drivers/fsl_i2c.h	/^    kI2C_SlavePendingFlag = I2C_STAT_SLVPENDING_MASK, \/*!< The I2C module is waiting for software interaction. *\/$/;"	e	enum:_i2c_slave_flags
kI2C_SlaveReceiveEvent	drivers/fsl_i2c.h	/^    kI2C_SlaveReceiveEvent = 0x04U,      \/*!< Callback is requested to provide a buffer in which to place received$/;"	e	enum:_i2c_slave_transfer_event
kI2C_SlaveSelected	drivers/fsl_i2c.h	/^    kI2C_SlaveSelected = I2C_STAT_SLVSEL_MASK, \/*!< Indicates whether the slave is selected by an address match. *\/$/;"	e	enum:_i2c_slave_flags
kI2C_SlaveStandardMode	drivers/fsl_i2c.h	/^    kI2C_SlaveStandardMode = 0U,$/;"	e	enum:_i2c_slave_bus_speed
kI2C_SlaveTransmitEvent	drivers/fsl_i2c.h	/^    kI2C_SlaveTransmitEvent     = 0x02U, \/*!< Callback is requested to provide data to transmit$/;"	e	enum:_i2c_slave_transfer_event
kI2C_TransferDefaultFlag	drivers/fsl_i2c.h	/^    kI2C_TransferDefaultFlag       = 0x00U, \/*!< Transfer starts with a start signal, stops with a stop signal. *\/$/;"	e	enum:_i2c_master_transfer_flags
kI2C_TransferNoStartFlag	drivers/fsl_i2c.h	/^    kI2C_TransferNoStartFlag       = 0x01U, \/*!< Don't send a start condition, address, and sub address *\/$/;"	e	enum:_i2c_master_transfer_flags
kI2C_TransferNoStopFlag	drivers/fsl_i2c.h	/^    kI2C_TransferNoStopFlag        = 0x04U, \/*!< Don't send a stop condition. *\/$/;"	e	enum:_i2c_master_transfer_flags
kI2C_TransferRepeatedStartFlag	drivers/fsl_i2c.h	/^    kI2C_TransferRepeatedStartFlag = 0x02U, \/*!< Send a repeated start condition *\/$/;"	e	enum:_i2c_master_transfer_flags
kI2C_Write	drivers/fsl_i2c.h	/^    kI2C_Write = 0U, \/*!< Master transmit. *\/$/;"	e	enum:_i2c_direction
kI2S_DmaStateIdle	drivers/fsl_i2s_dma.c	/^    kI2S_DmaStateIdle = 0x0U, \/*!< I2S is in idle state *\/$/;"	e	enum:_i2s_dma_state	file:
kI2S_DmaStateRx	drivers/fsl_i2s_dma.c	/^    kI2S_DmaStateRx,          \/*!< I2S is busy receiving data *\/$/;"	e	enum:_i2s_dma_state	file:
kI2S_DmaStateTx	drivers/fsl_i2s_dma.c	/^    kI2S_DmaStateTx,          \/*!< I2S is busy transmitting data *\/$/;"	e	enum:_i2s_dma_state	file:
kI2S_MasterSlaveExtSckMaster	drivers/fsl_i2s.h	/^    kI2S_MasterSlaveExtSckMaster = 0x2, \/*!< Master using existing SCK *\/$/;"	e	enum:_i2s_master_slave
kI2S_MasterSlaveNormalMaster	drivers/fsl_i2s.h	/^    kI2S_MasterSlaveNormalMaster = 0x3  \/*!< Normal master *\/$/;"	e	enum:_i2s_master_slave
kI2S_MasterSlaveNormalSlave	drivers/fsl_i2s.h	/^    kI2S_MasterSlaveNormalSlave  = 0x0, \/*!< Normal slave *\/$/;"	e	enum:_i2s_master_slave
kI2S_MasterSlaveWsSyncMaster	drivers/fsl_i2s.h	/^    kI2S_MasterSlaveWsSyncMaster = 0x1, \/*!< WS synchronized master *\/$/;"	e	enum:_i2s_master_slave
kI2S_ModeDspWs50	drivers/fsl_i2s.h	/^    kI2S_ModeDspWs50    = 0x1, \/*!< DSP mode, WS having 50% duty cycle *\/$/;"	e	enum:_i2s_mode
kI2S_ModeDspWsLong	drivers/fsl_i2s.h	/^    kI2S_ModeDspWsLong  = 0x3  \/*!< DSP mode, WS having one data slot long pulse *\/$/;"	e	enum:_i2s_mode
kI2S_ModeDspWsShort	drivers/fsl_i2s.h	/^    kI2S_ModeDspWsShort = 0x2, \/*!< DSP mode, WS having one clock long pulse *\/$/;"	e	enum:_i2s_mode
kI2S_ModeI2sClassic	drivers/fsl_i2s.h	/^    kI2S_ModeI2sClassic = 0x0, \/*!< I2S classic mode *\/$/;"	e	enum:_i2s_mode
kI2S_RxErrorFlag	drivers/fsl_i2s.h	/^    kI2S_RxErrorFlag = I2S_FIFOINTENSET_RXERR_MASK, \/*!< RX error interrupt *\/$/;"	e	enum:_i2s_flags
kI2S_RxLevelFlag	drivers/fsl_i2s.h	/^    kI2S_RxLevelFlag = I2S_FIFOINTENSET_RXLVL_MASK  \/*!< RX level interrupt *\/$/;"	e	enum:_i2s_flags
kI2S_SecondaryChannel1	drivers/fsl_i2s.h	/^    kI2S_SecondaryChannel1 = 0U, \/*!< secondary channel 1 *\/$/;"	e	enum:_i2s_secondary_channel
kI2S_SecondaryChannel2	drivers/fsl_i2s.h	/^    kI2S_SecondaryChannel2 = 1U, \/*!< secondary channel 2 *\/$/;"	e	enum:_i2s_secondary_channel
kI2S_SecondaryChannel3	drivers/fsl_i2s.h	/^    kI2S_SecondaryChannel3 = 2U, \/*!< secondary channel 3 *\/$/;"	e	enum:_i2s_secondary_channel
kI2S_StateIdle	drivers/fsl_i2s.c	/^    kI2S_StateIdle = 0x0,             \/*!< Not performing transfer *\/$/;"	e	enum:_i2s_state	file:
kI2S_StateRx	drivers/fsl_i2s.c	/^    kI2S_StateRx,                     \/*!< Performing receive *\/$/;"	e	enum:_i2s_state	file:
kI2S_StateTx	drivers/fsl_i2s.c	/^    kI2S_StateTx,                     \/*!< Performing transmit *\/$/;"	e	enum:_i2s_state	file:
kI2S_StateTxWaitForEmptyFifo	drivers/fsl_i2s.c	/^    kI2S_StateTxWaitForEmptyFifo,     \/*!< Wait for FIFO to be flushed *\/$/;"	e	enum:_i2s_state	file:
kI2S_StateTxWaitToWriteDummyData	drivers/fsl_i2s.c	/^    kI2S_StateTxWaitToWriteDummyData, \/*!< Wait on FIFO in order to write final dummy data there *\/$/;"	e	enum:_i2s_state	file:
kI2S_TxErrorFlag	drivers/fsl_i2s.h	/^    kI2S_TxErrorFlag = I2S_FIFOINTENSET_TXERR_MASK, \/*!< TX error interrupt *\/$/;"	e	enum:_i2s_flags
kI2S_TxLevelFlag	drivers/fsl_i2s.h	/^    kI2S_TxLevelFlag = I2S_FIFOINTENSET_TXLVL_MASK, \/*!< TX level interrupt *\/$/;"	e	enum:_i2s_flags
kINPUTMUX_32KhzOscToFreqmeas	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_32KhzOscToFreqmeas = 4U + (FREQMEAS_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Adc0SeqaIrqToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Adc0SeqaIrqToDma = 0U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Adc0SeqbIrqToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Adc0SeqbIrqToDma = 1U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_AdcThcmpIrqToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_AdcThcmpIrqToSct0 = 13U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_ArmTxevToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_ArmTxevToSct0 = 17U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer0M0ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer0M0ToDma = 8U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer0M1ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer0M1ToDma = 9U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer1M0ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer1M0ToDma = 10U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer1M1ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer1M1ToDma = 11U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer2M0ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer2M0ToDma = 12U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer2M1ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer2M1ToDma = 13U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer3M0ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer3M0ToDma = 14U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer3M1ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer3M1ToDma = 15U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer4M0ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer4M0ToDma = 16U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Ctimer4M1ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Ctimer4M1ToDma = 17U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DebugHaltedToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DebugHaltedToSct0 = 18U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaDmic0Ch0TrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaDmic0Ch0TrigoutToTriginChannels = 16U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm0RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm0RxTrigoutToTriginChannels = 0U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm0TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm0TxTrigoutToTriginChannels = 1U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm10RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm10RxTrigoutToTriginChannels = 28U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm10TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm10TxTrigoutToTriginChannels = 29U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm1RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm1RxTrigoutToTriginChannels = 2U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm1TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm1TxTrigoutToTriginChannels = 3U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm2RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm2RxTrigoutToTriginChannels = 4U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm2TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm2TxTrigoutToTriginChannels = 5U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm3RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm3RxTrigoutToTriginChannels = 6U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm3TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm3TxTrigoutToTriginChannels = 7U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm4RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm4RxTrigoutToTriginChannels = 8U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm4TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm4TxTrigoutToTriginChannels = 9U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm5RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm5RxTrigoutToTriginChannels = 10U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm5TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm5TxTrigoutToTriginChannels = 11U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm6RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm6RxTrigoutToTriginChannels = 12U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm6TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm6TxTrigoutToTriginChannels = 13U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm7RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm7RxTrigoutToTriginChannels = 14U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm7TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm7TxTrigoutToTriginChannels = 15U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm8RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm8RxTrigoutToTriginChannels = 20U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm8TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm8TxTrigoutToTriginChannels = 21U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm9RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm9RxTrigoutToTriginChannels = 22U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaFlexcomm9TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaFlexcomm9TxTrigoutToTriginChannels = 23U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaSha_TrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaSha_TrigoutToTriginChannels = 19U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaSmartcard0RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaSmartcard0RxTrigoutToTriginChannels = 24U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaSmartcard0TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaSmartcard0TxTrigoutToTriginChannels = 25U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaSmartcard1RxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaSmartcard1RxTrigoutToTriginChannels = 26U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaSmartcard1TxTrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaSmartcard1TxTrigoutToTriginChannels = 27U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_DmaSpifi0TrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_DmaSpifi0TrigoutToTriginChannels = 18U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Dmamic0Ch1TrigoutToTriginChannels	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Dmamic0Ch1TrigoutToTriginChannels = 17U + (DMA_OTRIG_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_FreqmeGpioClk_a	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_FreqmeGpioClk_a = 6U + (FREQMEAS_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_FreqmeGpioClk_b	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_FreqmeGpioClk_b = 7U + (FREQMEAS_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Fro12MhzToFreqmeas	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Fro12MhzToFreqmeas = 1U + (FREQMEAS_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Fro96MhzToFreqmeas	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Fro96MhzToFreqmeas = 2U + (FREQMEAS_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioIntBmatchToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioIntBmatchToSct0 = 14U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin0ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin0ToPintsel = 0U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin10ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin10ToPintsel = 10U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin11ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin11ToPintsel = 11U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin12ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin12ToPintsel = 12U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin13ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin13ToPintsel = 13U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin14ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin14ToPintsel = 14U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin15ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin15ToPintsel = 15U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin16ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin16ToPintsel = 16U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin17ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin17ToPintsel = 17U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin18ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin18ToPintsel = 18U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin19ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin19ToPintsel = 19U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin1ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin1ToPintsel = 1U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin20ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin20ToPintsel = 20U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin21ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin21ToPintsel = 21U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin22ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin22ToPintsel = 22U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin23ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin23ToPintsel = 23U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin24ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin24ToPintsel = 24U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin25ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin25ToPintsel = 25U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin26ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin26ToPintsel = 26U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin27ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin27ToPintsel = 27U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin28ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin28ToPintsel = 28U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin29ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin29ToPintsel = 29U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin2ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin2ToPintsel = 2U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin30ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin30ToPintsel = 30U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin31ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin31ToPintsel = 31U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin3ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin3ToPintsel = 3U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin4ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin4ToPintsel = 4U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin5ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin5ToPintsel = 5U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin6ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin6ToPintsel = 6U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin7ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin7ToPintsel = 7U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin8ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin8ToPintsel = 8U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort0Pin9ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort0Pin9ToPintsel = 9U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin0ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin0ToPintsel = 32U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin10ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin10ToPintsel = 42U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin11ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin11ToPintsel = 43U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin12ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin12ToPintsel = 44U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin13ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin13ToPintsel = 45U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin14ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin14ToPintsel = 46U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin15ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin15ToPintsel = 47U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin16ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin16ToPintsel = 48U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin17ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin17ToPintsel = 49U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin18ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin18ToPintsel = 50U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin19ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin19ToPintsel = 51U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin1ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin1ToPintsel = 33U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin20ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin20ToPintsel = 52U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin21ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin21ToPintsel = 53U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin22ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin22ToPintsel = 54U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin23ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin23ToPintsel = 55U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin24ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin24ToPintsel = 56U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin25ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin25ToPintsel = 57U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin26ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin26ToPintsel = 58U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin27ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin27ToPintsel = 59U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin28ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin28ToPintsel = 60U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin29ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin29ToPintsel = 61U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin2ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin2ToPintsel = 34U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin30ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin30ToPintsel = 62U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin31ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin31ToPintsel = 63U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin3ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin3ToPintsel = 35U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin4ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin4ToPintsel = 36U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin5ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin5ToPintsel = 37U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin6ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin6ToPintsel = 38U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin7ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin7ToPintsel = 39U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin8ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin8ToPintsel = 40U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_GpioPort1Pin9ToPintsel	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_GpioPort1Pin9ToPintsel = 41U + (PINTSEL_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_I2s6SclkToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_I2s6SclkToSct0 = 23U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_I2sS7clkToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_I2sS7clkToSct0 = 24U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_MainClkToFreqmeas	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_MainClkToFreqmeas = 5U + (FREQMEAS_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_MainOscToFreqmeas	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_MainOscToFreqmeas = 0U + (FREQMEAS_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Otrig0ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Otrig0ToDma = 18U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Otrig1ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Otrig1ToDma = 19U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Otrig2ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Otrig2ToDma = 20U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Otrig3ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Otrig3ToDma = 21U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_PinInt0ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_PinInt0ToDma = 4U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_PinInt1ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_PinInt1ToDma = 5U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_PinInt2ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_PinInt2ToDma = 6U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_PinInt3ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_PinInt3ToDma = 7U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Sct0DmaReq0ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Sct0DmaReq0ToDma = 2U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Sct0DmaReq1ToDma	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Sct0DmaReq1ToDma = 3U + (DMA_TRIG0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SctGpi0ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SctGpi0ToSct0 = 0U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SctGpi1ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SctGpi1ToSct0 = 1U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SctGpi2ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SctGpi2ToSct0 = 2U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SctGpi3ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SctGpi3ToSct0 = 3U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SctGpi4ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SctGpi4ToSct0 = 4U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SctGpi5ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SctGpi5ToSct0 = 5U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SctGpi6ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SctGpi6ToSct0 = 6U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SctGpi7ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SctGpi7ToSct0 = 7U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SmartCard0RxActivreToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SmartCard0RxActivreToSct0 = 20U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SmartCard0TxActivreToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SmartCard0TxActivreToSct0 = 19U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SmartCard1RxActivreToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SmartCard1RxActivreToSct0 = 22U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_SmartCard1TxActivreToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_SmartCard1TxActivreToSct0 = 21U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_T0Out0ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_T0Out0ToSct0 = 8U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_T1Out0ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_T1Out0ToSct0 = 9U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_T2Out0ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_T2Out0ToSct0 = 10U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_T3Out0ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_T3Out0ToSct0 = 11U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_T4Out0ToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_T4Out0ToSct0 = 12U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Usb0FrameToggleToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Usb0FrameToggleToSct0 = 15U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_Usb1FrameToggleToSct0	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_Usb1FrameToggleToSct0 = 16U + (SCT0_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kINPUTMUX_WdtOscToFreqmeas	drivers/fsl_inputmux_connections.h	/^    kINPUTMUX_WdtOscToFreqmeas = 3U + (FREQMEAS_PMUX_ID << PMUX_SHIFT),$/;"	e	enum:_inputmux_connection_t
kIOCON_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kIOCON_RST_SHIFT_RSTn = 0 | 13U,         \/**< IOCON reset control *\/$/;"	e	enum:_SYSCON_RSTn
kIdleState	drivers/fsl_i2c.h	/^    kIdleState = 0,$/;"	e	enum:_i2c_transfer_states
kLCDCLKIN_to_LCD_CLK	drivers/fsl_clock.h	/^    kLCDCLKIN_to_LCD_CLK = MUX_A(CM_LCDCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kLCD_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kLCD_RST_SHIFT_RSTn = 131072 | 2U,       \/**< LCD reset control *\/$/;"	e	enum:_SYSCON_RSTn
kLIST_DuplicateError	component/lists/generic_list.h	/^    kLIST_DuplicateError = MAKE_STATUS(kStatusGroup_LIST, 1), \/*!< Duplicate Error *\/$/;"	e	enum:_list_status
kLIST_Empty	component/lists/generic_list.h	/^    kLIST_Empty          = MAKE_STATUS(kStatusGroup_LIST, 3), \/*!< Empty *\/$/;"	e	enum:_list_status
kLIST_Full	component/lists/generic_list.h	/^    kLIST_Full           = MAKE_STATUS(kStatusGroup_LIST, 2), \/*!< FULL *\/$/;"	e	enum:_list_status
kLIST_Ok	component/lists/generic_list.h	/^    kLIST_Ok             = kStatus_Success,                   \/*!< Success *\/$/;"	e	enum:_list_status
kLIST_OrphanElement	component/lists/generic_list.h	/^    kLIST_OrphanElement  = MAKE_STATUS(kStatusGroup_LIST, 4), \/*!< Orphan Element *\/$/;"	e	enum:_list_status
kMAIN_CLK_to_ASYNC_APB	drivers/fsl_clock.h	/^    kMAIN_CLK_to_ASYNC_APB    = MUX_A(CM_ASYNCAPB, 0),$/;"	e	enum:_clock_attach_id
kMAIN_CLK_to_CLKOUT	drivers/fsl_clock.h	/^    kMAIN_CLK_to_CLKOUT   = MUX_A(CM_CLKOUTCLKSELA, 0),$/;"	e	enum:_clock_attach_id
kMAIN_CLK_to_DMIC	drivers/fsl_clock.h	/^    kMAIN_CLK_to_DMIC   = MUX_A(CM_DMICCLKSEL, 4),$/;"	e	enum:_clock_attach_id
kMAIN_CLK_to_FLEXCOMM10	drivers/fsl_clock.h	/^    kMAIN_CLK_to_FLEXCOMM10  = MUX_A(CM_FXCOMCLKSEL10, 0),$/;"	e	enum:_clock_attach_id
kMAIN_CLK_to_FRG	drivers/fsl_clock.h	/^    kMAIN_CLK_to_FRG = MUX_A(CM_FRGCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kMAIN_CLK_to_LCD_CLK	drivers/fsl_clock.h	/^    kMAIN_CLK_to_LCD_CLK = MUX_A(CM_LCDCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kMAIN_CLK_to_SCT_CLK	drivers/fsl_clock.h	/^    kMAIN_CLK_to_SCT_CLK  = MUX_A(CM_SCTCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kMAIN_CLK_to_SDIO_CLK	drivers/fsl_clock.h	/^    kMAIN_CLK_to_SDIO_CLK  = MUX_A(CM_SDIOCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kMAIN_CLK_to_SPIFI_CLK	drivers/fsl_clock.h	/^    kMAIN_CLK_to_SPIFI_CLK  = MUX_A(CM_SPIFICLKSEL, 0),$/;"	e	enum:_clock_attach_id
kMCAN0_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kMCAN0_RST_SHIFT_RSTn = 65536 | 7U,      \/**< MCAN0 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kMCAN1_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kMCAN1_RST_SHIFT_RSTn = 65536 | 8U,      \/**< MCAN1 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kMCLK_to_DMIC	drivers/fsl_clock.h	/^    kMCLK_to_DMIC       = MUX_A(CM_DMICCLKSEL, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM0	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM0      = MUX_A(CM_FXCOMCLKSEL0, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM1	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM1      = MUX_A(CM_FXCOMCLKSEL1, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM2	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM2      = MUX_A(CM_FXCOMCLKSEL2, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM3	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM3      = MUX_A(CM_FXCOMCLKSEL3, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM4	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM4      = MUX_A(CM_FXCOMCLKSEL4, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM5	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM5      = MUX_A(CM_FXCOMCLKSEL5, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM6	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM6      = MUX_A(CM_FXCOMCLKSEL6, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM7	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM7      = MUX_A(CM_FXCOMCLKSEL7, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM8	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM8      = MUX_A(CM_FXCOMCLKSEL8, 3),$/;"	e	enum:_clock_attach_id
kMCLK_to_FLEXCOMM9	drivers/fsl_clock.h	/^    kMCLK_to_FLEXCOMM9      = MUX_A(CM_FXCOMCLKSEL9, 3),$/;"	e	enum:_clock_attach_id
kMRT_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kMRT_RST_SHIFT_RSTn = 65536 | 0U,        \/**< Multi-rate timer (MRT) reset control *\/$/;"	e	enum:_SYSCON_RSTn
kMUX_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kMUX_RST_SHIFT_RSTn = 0 | 11U,           \/**< Input mux reset control *\/$/;"	e	enum:_SYSCON_RSTn
kNONE_to_ADC_CLK	drivers/fsl_clock.h	/^    kNONE_to_ADC_CLK      = MUX_A(CM_ADCASYNCCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_AUDIO_PLL	drivers/fsl_clock.h	/^    kNONE_to_AUDIO_PLL    = MUX_A(CM_AUDPLLCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_DMIC	drivers/fsl_clock.h	/^    kNONE_to_DMIC       = MUX_A(CM_DMICCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM0	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM0      = MUX_A(CM_FXCOMCLKSEL0, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM1	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM1      = MUX_A(CM_FXCOMCLKSEL1, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM10	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM10      = MUX_A(CM_FXCOMCLKSEL10, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM2	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM2      = MUX_A(CM_FXCOMCLKSEL2, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM3	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM3      = MUX_A(CM_FXCOMCLKSEL3, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM4	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM4      = MUX_A(CM_FXCOMCLKSEL4, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM5	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM5      = MUX_A(CM_FXCOMCLKSEL5, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM6	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM6      = MUX_A(CM_FXCOMCLKSEL6, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM7	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM7      = MUX_A(CM_FXCOMCLKSEL7, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM8	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM8      = MUX_A(CM_FXCOMCLKSEL8, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FLEXCOMM9	drivers/fsl_clock.h	/^    kNONE_to_FLEXCOMM9      = MUX_A(CM_FXCOMCLKSEL9, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_FRG	drivers/fsl_clock.h	/^    kNONE_to_FRG     = MUX_A(CM_FRGCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_LCD_CLK	drivers/fsl_clock.h	/^    kNONE_to_LCD_CLK     = MUX_A(CM_LCDCLKSEL, 3),$/;"	e	enum:_clock_attach_id
kNONE_to_MCLK	drivers/fsl_clock.h	/^    kNONE_to_MCLK      = MUX_A(CM_MCLKCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_NONE	drivers/fsl_clock.h	/^    kNONE_to_NONE             = (int)0x80000000U,$/;"	e	enum:_clock_attach_id
kNONE_to_SCT_CLK	drivers/fsl_clock.h	/^    kNONE_to_SCT_CLK      = MUX_A(CM_SCTCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_SDIO_CLK	drivers/fsl_clock.h	/^    kNONE_to_SDIO_CLK      = MUX_A(CM_SDIOCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_SPIFI_CLK	drivers/fsl_clock.h	/^    kNONE_to_SPIFI_CLK      = MUX_A(CM_SPIFICLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_SYSTICKCLK	drivers/fsl_clock.h	/^    kNONE_to_SYSTICKCLK            = MUX_A(CM_STICKCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_SYS_PLL	drivers/fsl_clock.h	/^    kNONE_to_SYS_PLL    = MUX_A(CM_SYSPLLCLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_USB0_CLK	drivers/fsl_clock.h	/^    kNONE_to_USB0_CLK    = MUX_A(CM_USB0CLKSEL, 7),$/;"	e	enum:_clock_attach_id
kNONE_to_USB1_CLK	drivers/fsl_clock.h	/^    kNONE_to_USB1_CLK    = MUX_A(CM_USB1CLKSEL, 7),$/;"	e	enum:_clock_attach_id
kOSC32K_OSC_to_CLKOUT	drivers/fsl_clock.h	/^    kOSC32K_OSC_to_CLKOUT = MUX_A(CM_CLKOUTCLKSELA, 7),$/;"	e	enum:_clock_attach_id
kOSC32K_to_MAIN_CLK	drivers/fsl_clock.h	/^    kOSC32K_to_MAIN_CLK  = MUX_A(CM_MAINCLKSELA, 0) | MUX_B(CM_MAINCLKSELB, 3, 0),$/;"	e	enum:_clock_attach_id
kOSC32K_to_SYSTICKCLK	drivers/fsl_clock.h	/^    kOSC32K_to_SYSTICKCLK          = MUX_A(CM_STICKCLKSEL, 2),$/;"	e	enum:_clock_attach_id
kOSC32K_to_SYS_PLL	drivers/fsl_clock.h	/^    kOSC32K_to_SYS_PLL  = MUX_A(CM_SYSPLLCLKSEL, 3),$/;"	e	enum:_clock_attach_id
kOTP_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kOTP_RST_SHIFT_RSTn = 131072 | 12U,      \/**< OTP reset control *\/$/;"	e	enum:_SYSCON_RSTn
kPDRUNCFG_FORCE_RBB	drivers/fsl_power.h	/^    kPDRUNCFG_FORCE_RBB = MAKE_PD_BITS(PDRCFG0, 31U),$/;"	e	enum:pd_bits
kPDRUNCFG_ForceUnsigned	drivers/fsl_power.h	/^    kPDRUNCFG_ForceUnsigned = (int)0x80000000U,$/;"	e	enum:pd_bits
kPDRUNCFG_LP_REG	drivers/fsl_power.h	/^    kPDRUNCFG_LP_REG = MAKE_PD_BITS(PDRCFG0, 2U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_ADC0	drivers/fsl_power.h	/^    kPDRUNCFG_PD_ADC0 = MAKE_PD_BITS(PDRCFG0, 10U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_AUDIO_PLL	drivers/fsl_power.h	/^    kPDRUNCFG_PD_AUDIO_PLL = MAKE_PD_BITS(PDRCFG1, 2U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_BOD_INTR	drivers/fsl_power.h	/^    kPDRUNCFG_PD_BOD_INTR = MAKE_PD_BITS(PDRCFG0, 8U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_BOD_RESET	drivers/fsl_power.h	/^    kPDRUNCFG_PD_BOD_RESET = MAKE_PD_BITS(PDRCFG0, 7U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_EEPROM	drivers/fsl_power.h	/^    kPDRUNCFG_PD_EEPROM = MAKE_PD_BITS(PDRCFG1, 5U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_FLASH_BG	drivers/fsl_power.h	/^    kPDRUNCFG_PD_FLASH_BG = MAKE_PD_BITS(PDRCFG0, 25U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_FRO_EN	drivers/fsl_power.h	/^    kPDRUNCFG_PD_FRO_EN = MAKE_PD_BITS(PDRCFG0, 4U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_RAM0	drivers/fsl_power.h	/^    kPDRUNCFG_PD_RAM0 = MAKE_PD_BITS(PDRCFG0, 13U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_RAM1	drivers/fsl_power.h	/^    kPDRUNCFG_PD_RAM1 = MAKE_PD_BITS(PDRCFG0, 14U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_RAM2	drivers/fsl_power.h	/^    kPDRUNCFG_PD_RAM2 = MAKE_PD_BITS(PDRCFG0, 15U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_RAM3	drivers/fsl_power.h	/^    kPDRUNCFG_PD_RAM3 = MAKE_PD_BITS(PDRCFG0, 16U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_ROM	drivers/fsl_power.h	/^    kPDRUNCFG_PD_ROM = MAKE_PD_BITS(PDRCFG0, 17U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_SYS_OSC	drivers/fsl_power.h	/^    kPDRUNCFG_PD_SYS_OSC = MAKE_PD_BITS(PDRCFG1, 3U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_SYS_PLL0	drivers/fsl_power.h	/^    kPDRUNCFG_PD_SYS_PLL0 = MAKE_PD_BITS(PDRCFG0, 22U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_TS	drivers/fsl_power.h	/^    kPDRUNCFG_PD_TS = MAKE_PD_BITS(PDRCFG0, 6U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_USB0_PHY	drivers/fsl_power.h	/^    kPDRUNCFG_PD_USB0_PHY = MAKE_PD_BITS(PDRCFG0, 21U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_USB1_PHY	drivers/fsl_power.h	/^    kPDRUNCFG_PD_USB1_PHY = MAKE_PD_BITS(PDRCFG1, 0U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_USB_PLL	drivers/fsl_power.h	/^    kPDRUNCFG_PD_USB_PLL = MAKE_PD_BITS(PDRCFG1, 1U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_VD2_ANA	drivers/fsl_power.h	/^    kPDRUNCFG_PD_VD2_ANA = MAKE_PD_BITS(PDRCFG0, 9U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_VD3	drivers/fsl_power.h	/^    kPDRUNCFG_PD_VD3 = MAKE_PD_BITS(PDRCFG0, 26U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_VD4	drivers/fsl_power.h	/^    kPDRUNCFG_PD_VD4 = MAKE_PD_BITS(PDRCFG0, 27U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_VD5	drivers/fsl_power.h	/^    kPDRUNCFG_PD_VD5 = MAKE_PD_BITS(PDRCFG0, 28U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_VD6	drivers/fsl_power.h	/^    kPDRUNCFG_PD_VD6 = MAKE_PD_BITS(PDRCFG0, 29U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_VDDA	drivers/fsl_power.h	/^    kPDRUNCFG_PD_VDDA = MAKE_PD_BITS(PDRCFG0, 19U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_VREFP	drivers/fsl_power.h	/^    kPDRUNCFG_PD_VREFP = MAKE_PD_BITS(PDRCFG0, 23U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_WDT_OSC	drivers/fsl_power.h	/^    kPDRUNCFG_PD_WDT_OSC = MAKE_PD_BITS(PDRCFG0, 20U),$/;"	e	enum:pd_bits
kPDRUNCFG_PD_rng	drivers/fsl_power.h	/^    kPDRUNCFG_PD_rng = MAKE_PD_BITS(PDRCFG1, 6U),$/;"	e	enum:pd_bits
kPDRUNCFG_REQ_DELAY	drivers/fsl_power.h	/^    kPDRUNCFG_REQ_DELAY = MAKE_PD_BITS(PDRCFG0, 30U),$/;"	e	enum:pd_bits
kPHY_FullDuplex	board/fsl_phy.h	/^    kPHY_FullDuplex       \/*!< ENET PHY full duplex. *\/$/;"	e	enum:_phy_duplex
kPHY_HalfDuplex	board/fsl_phy.h	/^    kPHY_HalfDuplex = 0U, \/*!< ENET PHY half duplex. *\/$/;"	e	enum:_phy_duplex
kPHY_LocalLoop	board/fsl_phy.h	/^    kPHY_LocalLoop = 0U, \/*!< ENET PHY local loopback. *\/$/;"	e	enum:_phy_loop
kPHY_RemoteLoop	board/fsl_phy.h	/^    kPHY_RemoteLoop      \/*!< ENET PHY remote loopback. *\/$/;"	e	enum:_phy_loop
kPHY_Speed100M	board/fsl_phy.h	/^    kPHY_Speed100M      \/*!< ENET PHY 100M speed. *\/$/;"	e	enum:_phy_speed
kPHY_Speed10M	board/fsl_phy.h	/^    kPHY_Speed10M = 0U, \/*!< ENET PHY 10M speed. *\/$/;"	e	enum:_phy_speed
kPINT_PatternMatchAlways	drivers/fsl_pint.h	/^    kPINT_PatternMatchAlways = 0U,          \/*!< Always Contributes to product term match *\/$/;"	e	enum:_pint_pmatch_bslice_cfg
kPINT_PatternMatchBSlice0	drivers/fsl_pint.h	/^    kPINT_PatternMatchBSlice0 = 0U, \/*!< Bit slice 0 *\/$/;"	e	enum:_pint_pmatch_bslice
kPINT_PatternMatchBSlice1	drivers/fsl_pint.h	/^    kPINT_PatternMatchBSlice1 = 1U, \/*!< Bit slice 1 *\/$/;"	e	enum:_pint_pmatch_bslice
kPINT_PatternMatchBSlice2	drivers/fsl_pint.h	/^    kPINT_PatternMatchBSlice2 = 2U, \/*!< Bit slice 2 *\/$/;"	e	enum:_pint_pmatch_bslice
kPINT_PatternMatchBSlice3	drivers/fsl_pint.h	/^    kPINT_PatternMatchBSlice3 = 3U, \/*!< Bit slice 3 *\/$/;"	e	enum:_pint_pmatch_bslice
kPINT_PatternMatchBSlice4	drivers/fsl_pint.h	/^    kPINT_PatternMatchBSlice4 = 4U, \/*!< Bit slice 4 *\/$/;"	e	enum:_pint_pmatch_bslice
kPINT_PatternMatchBSlice5	drivers/fsl_pint.h	/^    kPINT_PatternMatchBSlice5 = 5U, \/*!< Bit slice 5 *\/$/;"	e	enum:_pint_pmatch_bslice
kPINT_PatternMatchBSlice6	drivers/fsl_pint.h	/^    kPINT_PatternMatchBSlice6 = 6U, \/*!< Bit slice 6 *\/$/;"	e	enum:_pint_pmatch_bslice
kPINT_PatternMatchBSlice7	drivers/fsl_pint.h	/^    kPINT_PatternMatchBSlice7 = 7U, \/*!< Bit slice 7 *\/$/;"	e	enum:_pint_pmatch_bslice
kPINT_PatternMatchBothEdges	drivers/fsl_pint.h	/^    kPINT_PatternMatchBothEdges = 7U,       \/*!< Either rising or falling edge *\/$/;"	e	enum:_pint_pmatch_bslice_cfg
kPINT_PatternMatchHigh	drivers/fsl_pint.h	/^    kPINT_PatternMatchHigh = 4U,            \/*!< High level *\/$/;"	e	enum:_pint_pmatch_bslice_cfg
kPINT_PatternMatchInp0Src	drivers/fsl_pint.h	/^    kPINT_PatternMatchInp0Src = 0U, \/*!< Input source 0 *\/$/;"	e	enum:_pint_pmatch_input_src
kPINT_PatternMatchInp1Src	drivers/fsl_pint.h	/^    kPINT_PatternMatchInp1Src = 1U, \/*!< Input source 1 *\/$/;"	e	enum:_pint_pmatch_input_src
kPINT_PatternMatchInp2Src	drivers/fsl_pint.h	/^    kPINT_PatternMatchInp2Src = 2U, \/*!< Input source 2 *\/$/;"	e	enum:_pint_pmatch_input_src
kPINT_PatternMatchInp3Src	drivers/fsl_pint.h	/^    kPINT_PatternMatchInp3Src = 3U, \/*!< Input source 3 *\/$/;"	e	enum:_pint_pmatch_input_src
kPINT_PatternMatchInp4Src	drivers/fsl_pint.h	/^    kPINT_PatternMatchInp4Src = 4U, \/*!< Input source 4 *\/$/;"	e	enum:_pint_pmatch_input_src
kPINT_PatternMatchInp5Src	drivers/fsl_pint.h	/^    kPINT_PatternMatchInp5Src = 5U, \/*!< Input source 5 *\/$/;"	e	enum:_pint_pmatch_input_src
kPINT_PatternMatchInp6Src	drivers/fsl_pint.h	/^    kPINT_PatternMatchInp6Src = 6U, \/*!< Input source 6 *\/$/;"	e	enum:_pint_pmatch_input_src
kPINT_PatternMatchInp7Src	drivers/fsl_pint.h	/^    kPINT_PatternMatchInp7Src = 7U, \/*!< Input source 7 *\/$/;"	e	enum:_pint_pmatch_input_src
kPINT_PatternMatchLow	drivers/fsl_pint.h	/^    kPINT_PatternMatchLow = 5U,             \/*!< Low level *\/$/;"	e	enum:_pint_pmatch_bslice_cfg
kPINT_PatternMatchNever	drivers/fsl_pint.h	/^    kPINT_PatternMatchNever = 6U,           \/*!< Never contributes to product term match *\/$/;"	e	enum:_pint_pmatch_bslice_cfg
kPINT_PatternMatchStickyBothEdges	drivers/fsl_pint.h	/^    kPINT_PatternMatchStickyBothEdges = 3U, \/*!< Sticky Rising or Falling edge *\/$/;"	e	enum:_pint_pmatch_bslice_cfg
kPINT_PatternMatchStickyFall	drivers/fsl_pint.h	/^    kPINT_PatternMatchStickyFall = 2U,      \/*!< Sticky Falling edge *\/$/;"	e	enum:_pint_pmatch_bslice_cfg
kPINT_PatternMatchStickyRise	drivers/fsl_pint.h	/^    kPINT_PatternMatchStickyRise = 1U,      \/*!< Sticky Rising edge *\/$/;"	e	enum:_pint_pmatch_bslice_cfg
kPINT_PinInt0	drivers/fsl_pint.h	/^    kPINT_PinInt0 = 0U, \/*!< Pin Interrupt  0 *\/$/;"	e	enum:_pint_int
kPINT_PinInt1	drivers/fsl_pint.h	/^    kPINT_PinInt1 = 1U, \/*!< Pin Interrupt  1 *\/$/;"	e	enum:_pint_int
kPINT_PinInt2	drivers/fsl_pint.h	/^    kPINT_PinInt2 = 2U, \/*!< Pin Interrupt  2 *\/$/;"	e	enum:_pint_int
kPINT_PinInt3	drivers/fsl_pint.h	/^    kPINT_PinInt3 = 3U, \/*!< Pin Interrupt  3 *\/$/;"	e	enum:_pint_int
kPINT_PinInt4	drivers/fsl_pint.h	/^    kPINT_PinInt4 = 4U, \/*!< Pin Interrupt  4 *\/$/;"	e	enum:_pint_int
kPINT_PinInt5	drivers/fsl_pint.h	/^    kPINT_PinInt5 = 5U, \/*!< Pin Interrupt  5 *\/$/;"	e	enum:_pint_int
kPINT_PinInt6	drivers/fsl_pint.h	/^    kPINT_PinInt6 = 6U, \/*!< Pin Interrupt  6 *\/$/;"	e	enum:_pint_int
kPINT_PinInt7	drivers/fsl_pint.h	/^    kPINT_PinInt7 = 7U, \/*!< Pin Interrupt  7 *\/$/;"	e	enum:_pint_int
kPINT_PinIntEnableBothEdges	drivers/fsl_pint.h	/^    kPINT_PinIntEnableBothEdges = PINT_PIN_BOTH_EDGE, \/*!< Generate Pin Interrupt on both edges *\/$/;"	e	enum:_pint_pin_enable
kPINT_PinIntEnableFallEdge	drivers/fsl_pint.h	/^    kPINT_PinIntEnableFallEdge = PINT_PIN_FALL_EDGE,  \/*!< Generate Pin Interrupt on falling edge *\/$/;"	e	enum:_pint_pin_enable
kPINT_PinIntEnableHighLevel	drivers/fsl_pint.h	/^    kPINT_PinIntEnableHighLevel = PINT_PIN_HIGH_LEVEL \/*!< Generate Pin Interrupt on high level *\/$/;"	e	enum:_pint_pin_enable
kPINT_PinIntEnableLowLevel	drivers/fsl_pint.h	/^    kPINT_PinIntEnableLowLevel = PINT_PIN_LOW_LEVEL,  \/*!< Generate Pin Interrupt on low level *\/$/;"	e	enum:_pint_pin_enable
kPINT_PinIntEnableNone	drivers/fsl_pint.h	/^    kPINT_PinIntEnableNone = 0U,                      \/*!< Do not generate Pin Interrupt *\/$/;"	e	enum:_pint_pin_enable
kPINT_PinIntEnableRiseEdge	drivers/fsl_pint.h	/^    kPINT_PinIntEnableRiseEdge = PINT_PIN_RISE_EDGE,  \/*!< Generate Pin Interrupt on rising edge *\/$/;"	e	enum:_pint_pin_enable
kPINT_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kPINT_RST_SHIFT_RSTn = 0 | 18U,          \/**< Pin interrupt (PINT) reset control *\/$/;"	e	enum:_SYSCON_RSTn
kPINT_SecPinInt0	drivers/fsl_pint.h	/^    kPINT_SecPinInt0 = 8U, \/*!< Secure Pin Interrupt  0 *\/$/;"	e	enum:_pint_int
kPINT_SecPinInt1	drivers/fsl_pint.h	/^    kPINT_SecPinInt1 = 9U, \/*!< Secure Pin Interrupt  1 *\/$/;"	e	enum:_pint_int
kPIN_MUX_DirectionInput	board/pin_mux.h	/^  kPIN_MUX_DirectionInput = 0U,         \/* Input direction *\/$/;"	e	enum:_pin_mux_direction
kPIN_MUX_DirectionInputOrOutput	board/pin_mux.h	/^  kPIN_MUX_DirectionInputOrOutput = 2U  \/* Input or output direction *\/$/;"	e	enum:_pin_mux_direction
kPIN_MUX_DirectionOutput	board/pin_mux.h	/^  kPIN_MUX_DirectionOutput = 1U,        \/* Output direction *\/$/;"	e	enum:_pin_mux_direction
kPRINTF_LengthChar	utilities/fsl_str.c	/^    kPRINTF_LengthChar        = 0x20U,  \/*!< Length: Char Flag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPRINTF_LengthLongInt	utilities/fsl_str.c	/^    kPRINTF_LengthLongInt     = 0x80U,  \/*!< Length: Long Int Flag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPRINTF_LengthLongLongInt	utilities/fsl_str.c	/^    kPRINTF_LengthLongLongInt = 0x100U, \/*!< Length: Long Long Int Flag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPRINTF_LengthShortInt	utilities/fsl_str.c	/^    kPRINTF_LengthShortInt    = 0x40U,  \/*!< Length: Short Int Flag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPRINTF_Minus	utilities/fsl_str.c	/^    kPRINTF_Minus             = 0x01U,  \/*!< Minus FLag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPRINTF_Plus	utilities/fsl_str.c	/^    kPRINTF_Plus              = 0x02U,  \/*!< Plus Flag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPRINTF_Pound	utilities/fsl_str.c	/^    kPRINTF_Pound             = 0x10U,  \/*!< Pound Flag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPRINTF_Space	utilities/fsl_str.c	/^    kPRINTF_Space             = 0x04U,  \/*!< Space Flag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPRINTF_Zero	utilities/fsl_str.c	/^    kPRINTF_Zero              = 0x08U,  \/*!< Zero Flag. *\/$/;"	e	enum:_debugconsole_printf_flag	file:
kPmu_Deep_PowerDown	drivers/fsl_power.h	/^    kPmu_Deep_PowerDown = 2U,$/;"	e	enum:_power_mode_config
kPmu_Deep_Sleep	drivers/fsl_power.h	/^    kPmu_Deep_Sleep = 1U,$/;"	e	enum:_power_mode_config
kPmu_Sleep	drivers/fsl_power.h	/^    kPmu_Sleep = 0U,$/;"	e	enum:_power_mode_config
kRNG_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kRNG_RST_SHIFT_RSTn = 131072 | 13U,      \/**< RNG  reset control *\/$/;"	e	enum:_SYSCON_RSTn
kReceiveDataState	drivers/fsl_i2c.h	/^    kReceiveDataState,$/;"	e	enum:_i2c_transfer_states
kReceiveLastDataState	drivers/fsl_i2c.h	/^    kReceiveLastDataState,$/;"	e	enum:_i2c_transfer_states
kSC0_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kSC0_RST_SHIFT_RSTn = 131072 | 19U,      \/**< SC0 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kSC1_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kSC1_RST_SHIFT_RSTn = 131072 | 20U,      \/**< SC1 reset control *\/$/;"	e	enum:_SYSCON_RSTn
kSCANF_DestChar	utilities/fsl_str.c	/^    kSCANF_DestChar   = 0x4U,    \/*!< Destination Char Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_DestFloat	utilities/fsl_str.c	/^    kSCANF_DestFloat  = 0x30U,   \/*!< Destination Float Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_DestInt	utilities/fsl_str.c	/^    kSCANF_DestInt    = 0x20U,   \/*!< Destination Int Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_DestMask	utilities/fsl_str.c	/^    kSCANF_DestMask   = 0x7cU,   \/*!< Destination Mask. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_DestSet	utilities/fsl_str.c	/^    kSCANF_DestSet    = 0x10U,   \/*!< Destination Set Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_DestString	utilities/fsl_str.c	/^    kSCANF_DestString = 0x8U,    \/*!< Destination String FLag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_LengthChar	utilities/fsl_str.c	/^    kSCANF_LengthChar        = 0x100U, \/*!< Length Char Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_LengthLongInt	utilities/fsl_str.c	/^    kSCANF_LengthLongInt     = 0x400U, \/*!< Length LongInt Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_LengthLongLongDouble	utilities/fsl_str.c	/^    kSCANF_LengthLongLongDouble = 0x1000U, \/*!< Length LongLongDuoble Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_LengthLongLongInt	utilities/fsl_str.c	/^    kSCANF_LengthLongLongInt = 0x800U, \/*!< Length LongLongInt Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_LengthMask	utilities/fsl_str.c	/^    kSCANF_LengthMask = 0x1f00U, \/*!< Length Mask Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_LengthShortInt	utilities/fsl_str.c	/^    kSCANF_LengthShortInt    = 0x200U, \/*!< Length ShortInt Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_Suppress	utilities/fsl_str.c	/^    kSCANF_Suppress   = 0x2U,    \/*!< Suppress Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCANF_TypeSinged	utilities/fsl_str.c	/^    kSCANF_TypeSinged = 0x2000U,           \/*!< TypeSinged Flag. *\/$/;"	e	enum:_debugconsole_scanf_flag	file:
kSCT0_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kSCT0_RST_SHIFT_RSTn = 65536 | 2U,       \/**< SCTimer\/PWM 0 (SCT0) reset control *\/$/;"	e	enum:_SYSCON_RSTn
kSCTIMER_Asynchronous_ClockMode	drivers/fsl_sctimer.h	/^    kSCTIMER_Asynchronous_ClockMode \/*!< Asynchronous Mode *\/$/;"	e	enum:_sctimer_clock_mode
kSCTIMER_BusErrorHFlag	drivers/fsl_sctimer.h	/^    kSCTIMER_BusErrorHFlag =$/;"	e	enum:_sctimer_status_flags
kSCTIMER_BusErrorLFlag	drivers/fsl_sctimer.h	/^    kSCTIMER_BusErrorLFlag =$/;"	e	enum:_sctimer_status_flags
kSCTIMER_CenterAlignedPwm	drivers/fsl_sctimer.h	/^    kSCTIMER_CenterAlignedPwm     \/*!< Center-aligned PWM *\/$/;"	e	enum:_sctimer_pwm_mode
kSCTIMER_Clock_On_Fall_Input_0	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Fall_Input_0,      \/*!< Falling edges on input 0 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Fall_Input_1	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Fall_Input_1,      \/*!< Falling edges on input 1 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Fall_Input_2	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Fall_Input_2,      \/*!< Falling edges on input 2 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Fall_Input_3	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Fall_Input_3,      \/*!< Falling edges on input 3 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Fall_Input_4	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Fall_Input_4,      \/*!< Falling edges on input 4 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Fall_Input_5	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Fall_Input_5,      \/*!< Falling edges on input 5 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Fall_Input_6	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Fall_Input_6,      \/*!< Falling edges on input 6 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Fall_Input_7	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Fall_Input_7       \/*!< Falling edges on input 7 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Rise_Input_0	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Rise_Input_0 = 0U, \/*!< Rising edges on input 0 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Rise_Input_1	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Rise_Input_1,      \/*!< Rising edges on input 1 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Rise_Input_2	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Rise_Input_2,      \/*!< Rising edges on input 2 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Rise_Input_3	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Rise_Input_3,      \/*!< Rising edges on input 3 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Rise_Input_4	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Rise_Input_4,      \/*!< Rising edges on input 4 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Rise_Input_5	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Rise_Input_5,      \/*!< Rising edges on input 5 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Rise_Input_6	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Rise_Input_6,      \/*!< Rising edges on input 6 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Clock_On_Rise_Input_7	drivers/fsl_sctimer.h	/^    kSCTIMER_Clock_On_Rise_Input_7,      \/*!< Rising edges on input 7 *\/$/;"	e	enum:_sctimer_clock_select
kSCTIMER_Counter_H	drivers/fsl_sctimer.h	/^    kSCTIMER_Counter_H       \/*!< Counter H *\/$/;"	e	enum:_sctimer_counter
kSCTIMER_Counter_L	drivers/fsl_sctimer.h	/^    kSCTIMER_Counter_L = 0U, \/*!< Counter L *\/$/;"	e	enum:_sctimer_counter
kSCTIMER_EdgeAlignedPwm	drivers/fsl_sctimer.h	/^    kSCTIMER_EdgeAlignedPwm = 0U, \/*!< Edge-aligned PWM *\/$/;"	e	enum:_sctimer_pwm_mode
kSCTIMER_Event0Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event0Flag  = (1U << 0),  \/*!< Event 0 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event0InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event0InterruptEnable  = (1U << 0),  \/*!< Event 0 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event10Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event10Flag = (1U << 10), \/*!< Event 10 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event10InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event10InterruptEnable = (1U << 10), \/*!< Event 10 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event11Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event11Flag = (1U << 11), \/*!< Event 11 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event11InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event11InterruptEnable = (1U << 11), \/*!< Event 11 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event12Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event12Flag = (1U << 12), \/*!< Event 12 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event12InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event12InterruptEnable = (1U << 12), \/*!< Event 12 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event1Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event1Flag  = (1U << 1),  \/*!< Event 1 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event1InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event1InterruptEnable  = (1U << 1),  \/*!< Event 1 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event2Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event2Flag  = (1U << 2),  \/*!< Event 2 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event2InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event2InterruptEnable  = (1U << 2),  \/*!< Event 2 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event3Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event3Flag  = (1U << 3),  \/*!< Event 3 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event3InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event3InterruptEnable  = (1U << 3),  \/*!< Event 3 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event4Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event4Flag  = (1U << 4),  \/*!< Event 4 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event4InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event4InterruptEnable  = (1U << 4),  \/*!< Event 4 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event5Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event5Flag  = (1U << 5),  \/*!< Event 5 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event5InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event5InterruptEnable  = (1U << 5),  \/*!< Event 5 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event6Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event6Flag  = (1U << 6),  \/*!< Event 6 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event6InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event6InterruptEnable  = (1U << 6),  \/*!< Event 6 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event7Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event7Flag  = (1U << 7),  \/*!< Event 7 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event7InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event7InterruptEnable  = (1U << 7),  \/*!< Event 7 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event8Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event8Flag  = (1U << 8),  \/*!< Event 8 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event8InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event8InterruptEnable  = (1U << 8),  \/*!< Event 8 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_Event9Flag	drivers/fsl_sctimer.h	/^    kSCTIMER_Event9Flag  = (1U << 9),  \/*!< Event 9 Flag *\/$/;"	e	enum:_sctimer_status_flags
kSCTIMER_Event9InterruptEnable	drivers/fsl_sctimer.h	/^    kSCTIMER_Event9InterruptEnable  = (1U << 9),  \/*!< Event 9 interrupt *\/$/;"	e	enum:_sctimer_interrupt_enable
kSCTIMER_HighTrue	drivers/fsl_sctimer.h	/^    kSCTIMER_HighTrue      \/*!< High true pulses *\/$/;"	e	enum:_sctimer_pwm_level_select
kSCTIMER_InputFallAndMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputFallAndMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputFallEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputFallEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputFallOrMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputFallOrMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputHighAndMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputHighAndMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputHighEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputHighEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputHighOrMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputHighOrMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputLowAndMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputLowAndMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputLowEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputLowEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputLowOrMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputLowOrMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputRiseAndMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputRiseAndMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputRiseEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputRiseEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_InputRiseOrMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_InputRiseOrMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_Input_0	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_0 = 0U, \/*!< SCTIMER input 0 *\/$/;"	e	enum:_sctimer_input
kSCTIMER_Input_1	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_1,      \/*!< SCTIMER input 1 *\/$/;"	e	enum:_sctimer_input
kSCTIMER_Input_2	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_2,      \/*!< SCTIMER input 2 *\/$/;"	e	enum:_sctimer_input
kSCTIMER_Input_3	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_3,      \/*!< SCTIMER input 3 *\/$/;"	e	enum:_sctimer_input
kSCTIMER_Input_4	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_4,      \/*!< SCTIMER input 4 *\/$/;"	e	enum:_sctimer_input
kSCTIMER_Input_5	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_5,      \/*!< SCTIMER input 5 *\/$/;"	e	enum:_sctimer_input
kSCTIMER_Input_6	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_6,      \/*!< SCTIMER input 6 *\/$/;"	e	enum:_sctimer_input
kSCTIMER_Input_7	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_7       \/*!< SCTIMER input 7 *\/$/;"	e	enum:_sctimer_input
kSCTIMER_Input_ClockMode	drivers/fsl_sctimer.h	/^    kSCTIMER_Input_ClockMode,       \/*!< SCT Input Clock Mode *\/$/;"	e	enum:_sctimer_clock_mode
kSCTIMER_LowTrue	drivers/fsl_sctimer.h	/^    kSCTIMER_LowTrue = 0U, \/*!< Low true pulses *\/$/;"	e	enum:_sctimer_pwm_level_select
kSCTIMER_MatchEventOnly	drivers/fsl_sctimer.h	/^    kSCTIMER_MatchEventOnly =$/;"	e	enum:_sctimer_event
kSCTIMER_Out_0	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_0 = 0U, \/*!< SCTIMER output 0*\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_1	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_1,      \/*!< SCTIMER output 1 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_2	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_2,      \/*!< SCTIMER output 2 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_3	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_3,      \/*!< SCTIMER output 3 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_4	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_4,      \/*!< SCTIMER output 4 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_5	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_5,      \/*!< SCTIMER output 5 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_6	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_6,      \/*!< SCTIMER output 6 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_7	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_7,      \/*!< SCTIMER output 7 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_8	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_8,      \/*!< SCTIMER output 8 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_Out_9	drivers/fsl_sctimer.h	/^    kSCTIMER_Out_9       \/*!< SCTIMER output 9 *\/$/;"	e	enum:_sctimer_out
kSCTIMER_OutputFallAndMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputFallAndMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputFallEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputFallEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputFallOrMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputFallOrMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputHighAndMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputHighAndMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputHighEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputHighEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputHighOrMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputHighOrMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputLowAndMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputLowAndMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputLowEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputLowEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputLowOrMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputLowOrMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputRiseAndMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputRiseAndMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputRiseEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputRiseEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_OutputRiseOrMatchEvent	drivers/fsl_sctimer.h	/^    kSCTIMER_OutputRiseOrMatchEvent =$/;"	e	enum:_sctimer_event
kSCTIMER_ResolveClear	drivers/fsl_sctimer.h	/^    kSCTIMER_ResolveClear,     \/*!< Clear output *\/$/;"	e	enum:_sctimer_conflict_resolution
kSCTIMER_ResolveNone	drivers/fsl_sctimer.h	/^    kSCTIMER_ResolveNone = 0U, \/*!< No change *\/$/;"	e	enum:_sctimer_conflict_resolution
kSCTIMER_ResolveSet	drivers/fsl_sctimer.h	/^    kSCTIMER_ResolveSet,       \/*!< Set output *\/$/;"	e	enum:_sctimer_conflict_resolution
kSCTIMER_ResolveToggle	drivers/fsl_sctimer.h	/^    kSCTIMER_ResolveToggle     \/*!< Toggle output *\/$/;"	e	enum:_sctimer_conflict_resolution
kSCTIMER_Sampled_ClockMode	drivers/fsl_sctimer.h	/^    kSCTIMER_Sampled_ClockMode,     \/*!< Sampled System Clock Mode *\/$/;"	e	enum:_sctimer_clock_mode
kSCTIMER_System_ClockMode	drivers/fsl_sctimer.h	/^    kSCTIMER_System_ClockMode = 0U, \/*!< System Clock Mode *\/$/;"	e	enum:_sctimer_clock_mode
kSDIO_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kSDIO_RST_SHIFT_RSTn = 131072 | 3U,      \/**< SDIO reset control *\/$/;"	e	enum:_SYSCON_RSTn
kSECPINT_PatternMatchBSlice0	drivers/fsl_pint.h	/^    kSECPINT_PatternMatchBSlice0 = 8U, \/*!< Bit slice 0 *\/$/;"	e	enum:_pint_pmatch_bslice
kSECPINT_PatternMatchBSlice1	drivers/fsl_pint.h	/^    kSECPINT_PatternMatchBSlice1 = 9U, \/*!< Bit slice 1 *\/$/;"	e	enum:_pint_pmatch_bslice
kSHA_HashInit	drivers/fsl_sha.c	/^    kSHA_HashInit = 1u, \/*!< Init state, the NEW bit in SHA Control register has not been written yet. *\/$/;"	e	enum:_sha_algo_state	file:
kSHA_HashUpdate	drivers/fsl_sha.c	/^    kSHA_HashUpdate, \/*!< Update state, DIGEST registers contain running hash, NEW bit in SHA control register has been$/;"	e	enum:_sha_algo_state	file:
kSHA_OutLenSha1	drivers/fsl_sha.c	/^    kSHA_OutLenSha1   = 20u,$/;"	e	enum:_sha_digest_len	file:
kSHA_OutLenSha256	drivers/fsl_sha.c	/^    kSHA_OutLenSha256 = 32u,$/;"	e	enum:_sha_digest_len	file:
kSHA_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kSHA_RST_SHIFT_RSTn = 131072 | 18U,      \/**< SHA reset control *\/$/;"	e	enum:_SYSCON_RSTn
kSHA_Sha1	drivers/fsl_sha.h	/^    kSHA_Sha1,   \/*!< SHA_1 *\/$/;"	e	enum:_sha_algo_t
kSHA_Sha256	drivers/fsl_sha.h	/^    kSHA_Sha256, \/*!< SHA_256  *\/$/;"	e	enum:_sha_algo_t
kSPIFI_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kSPIFI_RST_SHIFT_RSTn = 0 | 10U,         \/**< SPIFI reset control *\/$/;"	e	enum:_SYSCON_RSTn
kSPI_Busy	drivers/fsl_spi_dma.c	/^    kSPI_Busy        \/*!< SPI is busy tranferring data. *\/$/;"	e	enum:_spi_dma_states_t	file:
kSPI_ClockPhaseFirstEdge	drivers/fsl_spi.h	/^    kSPI_ClockPhaseFirstEdge = 0x0U, \/*!< First edge on SCK occurs at the middle of the first$/;"	e	enum:_spi_clock_phase
kSPI_ClockPhaseSecondEdge	drivers/fsl_spi.h	/^    kSPI_ClockPhaseSecondEdge        \/*!< First edge on SCK occurs at the start of the$/;"	e	enum:_spi_clock_phase
kSPI_ClockPolarityActiveHigh	drivers/fsl_spi.h	/^    kSPI_ClockPolarityActiveHigh = 0x0U, \/*!< Active-high SPI clock (idles low). *\/$/;"	e	enum:_spi_clock_polarity
kSPI_ClockPolarityActiveLow	drivers/fsl_spi.h	/^    kSPI_ClockPolarityActiveLow          \/*!< Active-low SPI clock (idles high). *\/$/;"	e	enum:_spi_clock_polarity
kSPI_Data10Bits	drivers/fsl_spi.h	/^    kSPI_Data10Bits = 9,  \/*!< 10 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data11Bits	drivers/fsl_spi.h	/^    kSPI_Data11Bits = 10, \/*!< 11 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data12Bits	drivers/fsl_spi.h	/^    kSPI_Data12Bits = 11, \/*!< 12 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data13Bits	drivers/fsl_spi.h	/^    kSPI_Data13Bits = 12, \/*!< 13 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data14Bits	drivers/fsl_spi.h	/^    kSPI_Data14Bits = 13, \/*!< 14 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data15Bits	drivers/fsl_spi.h	/^    kSPI_Data15Bits = 14, \/*!< 15 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data16Bits	drivers/fsl_spi.h	/^    kSPI_Data16Bits = 15, \/*!< 16 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data4Bits	drivers/fsl_spi.h	/^    kSPI_Data4Bits  = 3,  \/*!< 4 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data5Bits	drivers/fsl_spi.h	/^    kSPI_Data5Bits  = 4,  \/*!< 5 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data6Bits	drivers/fsl_spi.h	/^    kSPI_Data6Bits  = 5,  \/*!< 6 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data7Bits	drivers/fsl_spi.h	/^    kSPI_Data7Bits  = 6,  \/*!< 7 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data8Bits	drivers/fsl_spi.h	/^    kSPI_Data8Bits  = 7,  \/*!< 8 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_Data9Bits	drivers/fsl_spi.h	/^    kSPI_Data9Bits  = 8,  \/*!< 9 bits data width *\/$/;"	e	enum:_spi_data_width
kSPI_FrameAssert	drivers/fsl_spi.h	/^    kSPI_FrameAssert = (SPI_FIFOWR_EOT_MASK), \/*!< SSEL will be deasserted at the end of a transfer *\/$/;"	e	enum:_spi_xfer_option
kSPI_FrameDelay	drivers/fsl_spi.h	/^    kSPI_FrameDelay  = (SPI_FIFOWR_EOF_MASK), \/*!< A delay may be inserted, defined in the DLY register.*\/$/;"	e	enum:_spi_xfer_option
kSPI_Idle	drivers/fsl_spi_dma.c	/^    kSPI_Idle = 0x0, \/*!< SPI is idle state *\/$/;"	e	enum:_spi_dma_states_t	file:
kSPI_LsbFirst	drivers/fsl_spi.h	/^    kSPI_LsbFirst = 1U  \/*!< Data transfers start with least significant bit. *\/$/;"	e	enum:_spi_shift_direction
kSPI_MsbFirst	drivers/fsl_spi.h	/^    kSPI_MsbFirst = 0U, \/*!< Data transfers start with most significant bit. *\/$/;"	e	enum:_spi_shift_direction
kSPI_RxFifo1	drivers/fsl_spi.h	/^    kSPI_RxFifo1 = 0, \/*!< SPI rx watermark at 1 item *\/$/;"	e	enum:_spi_rxfifo_watermark
kSPI_RxFifo2	drivers/fsl_spi.h	/^    kSPI_RxFifo2 = 1, \/*!< SPI rx watermark at 2 items *\/$/;"	e	enum:_spi_rxfifo_watermark
kSPI_RxFifo3	drivers/fsl_spi.h	/^    kSPI_RxFifo3 = 2, \/*!< SPI rx watermark at 3 items *\/$/;"	e	enum:_spi_rxfifo_watermark
kSPI_RxFifo4	drivers/fsl_spi.h	/^    kSPI_RxFifo4 = 3, \/*!< SPI rx watermark at 4 items *\/$/;"	e	enum:_spi_rxfifo_watermark
kSPI_RxFifo5	drivers/fsl_spi.h	/^    kSPI_RxFifo5 = 4, \/*!< SPI rx watermark at 5 items *\/$/;"	e	enum:_spi_rxfifo_watermark
kSPI_RxFifo6	drivers/fsl_spi.h	/^    kSPI_RxFifo6 = 5, \/*!< SPI rx watermark at 6 items *\/$/;"	e	enum:_spi_rxfifo_watermark
kSPI_RxFifo7	drivers/fsl_spi.h	/^    kSPI_RxFifo7 = 6, \/*!< SPI rx watermark at 7 items *\/$/;"	e	enum:_spi_rxfifo_watermark
kSPI_RxFifo8	drivers/fsl_spi.h	/^    kSPI_RxFifo8 = 7, \/*!< SPI rx watermark at 8 items *\/$/;"	e	enum:_spi_rxfifo_watermark
kSPI_RxFullFlag	drivers/fsl_spi.h	/^    kSPI_RxFullFlag     = SPI_FIFOSTAT_RXFULL_MASK,     \/*!< rxFIFO is full *\/$/;"	e	enum:_spi_statusflags
kSPI_RxLvlIrq	drivers/fsl_spi.h	/^    kSPI_RxLvlIrq = SPI_FIFOINTENSET_RXLVL_MASK, \/*!< Rx level interrupt *\/$/;"	e	enum:_spi_interrupt_enable
kSPI_RxNotEmptyFlag	drivers/fsl_spi.h	/^    kSPI_RxNotEmptyFlag = SPI_FIFOSTAT_RXNOTEMPTY_MASK, \/*!< rxFIFO is not empty *\/$/;"	e	enum:_spi_statusflags
kSPI_Spol0ActiveHigh	drivers/fsl_spi.h	/^    kSPI_Spol0ActiveHigh = SPI_CFG_SPOL0(1),$/;"	e	enum:_spi_spol
kSPI_Spol1ActiveHigh	drivers/fsl_spi.h	/^    kSPI_Spol1ActiveHigh = SPI_CFG_SPOL1(1),$/;"	e	enum:_spi_spol
kSPI_Spol2ActiveHigh	drivers/fsl_spi.h	/^    kSPI_Spol2ActiveHigh = SPI_CFG_SPOL2(1),$/;"	e	enum:_spi_spol
kSPI_Spol3ActiveHigh	drivers/fsl_spi.h	/^    kSPI_Spol3ActiveHigh = SPI_CFG_SPOL3(1),$/;"	e	enum:_spi_spol
kSPI_SpolActiveAllHigh	drivers/fsl_spi.h	/^    kSPI_SpolActiveAllHigh =$/;"	e	enum:_spi_spol
kSPI_SpolActiveAllLow	drivers/fsl_spi.h	/^    kSPI_SpolActiveAllLow = 0,$/;"	e	enum:_spi_spol
kSPI_Ssel0	drivers/fsl_spi.h	/^    kSPI_Ssel0 = 0, \/*!< Slave select 0 *\/$/;"	e	enum:_spi_ssel
kSPI_Ssel1	drivers/fsl_spi.h	/^    kSPI_Ssel1 = 1, \/*!< Slave select 1 *\/$/;"	e	enum:_spi_ssel
kSPI_Ssel2	drivers/fsl_spi.h	/^    kSPI_Ssel2 = 2, \/*!< Slave select 2 *\/$/;"	e	enum:_spi_ssel
kSPI_Ssel3	drivers/fsl_spi.h	/^    kSPI_Ssel3 = 3, \/*!< Slave select 3 *\/$/;"	e	enum:_spi_ssel
kSPI_TxEmptyFlag	drivers/fsl_spi.h	/^    kSPI_TxEmptyFlag    = SPI_FIFOSTAT_TXEMPTY_MASK,    \/*!< txFifo is empty *\/$/;"	e	enum:_spi_statusflags
kSPI_TxFifo0	drivers/fsl_spi.h	/^    kSPI_TxFifo0 = 0, \/*!< SPI tx watermark is empty *\/$/;"	e	enum:_spi_txfifo_watermark
kSPI_TxFifo1	drivers/fsl_spi.h	/^    kSPI_TxFifo1 = 1, \/*!< SPI tx watermark at 1 item *\/$/;"	e	enum:_spi_txfifo_watermark
kSPI_TxFifo2	drivers/fsl_spi.h	/^    kSPI_TxFifo2 = 2, \/*!< SPI tx watermark at 2 items *\/$/;"	e	enum:_spi_txfifo_watermark
kSPI_TxFifo3	drivers/fsl_spi.h	/^    kSPI_TxFifo3 = 3, \/*!< SPI tx watermark at 3 items *\/$/;"	e	enum:_spi_txfifo_watermark
kSPI_TxFifo4	drivers/fsl_spi.h	/^    kSPI_TxFifo4 = 4, \/*!< SPI tx watermark at 4 items *\/$/;"	e	enum:_spi_txfifo_watermark
kSPI_TxFifo5	drivers/fsl_spi.h	/^    kSPI_TxFifo5 = 5, \/*!< SPI tx watermark at 5 items *\/$/;"	e	enum:_spi_txfifo_watermark
kSPI_TxFifo6	drivers/fsl_spi.h	/^    kSPI_TxFifo6 = 6, \/*!< SPI tx watermark at 6 items *\/$/;"	e	enum:_spi_txfifo_watermark
kSPI_TxFifo7	drivers/fsl_spi.h	/^    kSPI_TxFifo7 = 7, \/*!< SPI tx watermark at 7 items *\/$/;"	e	enum:_spi_txfifo_watermark
kSPI_TxLvlIrq	drivers/fsl_spi.h	/^    kSPI_TxLvlIrq = SPI_FIFOINTENSET_TXLVL_MASK, \/*!< Tx level interrupt *\/$/;"	e	enum:_spi_interrupt_enable
kSPI_TxNotFullFlag	drivers/fsl_spi.h	/^    kSPI_TxNotFullFlag  = SPI_FIFOSTAT_TXNOTFULL_MASK,  \/*!< txFifo is not full *\/$/;"	e	enum:_spi_statusflags
kSYSTICK_DIV_CLK_to_SYSTICKCLK	drivers/fsl_clock.h	/^    kSYSTICK_DIV_CLK_to_SYSTICKCLK = MUX_A(CM_STICKCLKSEL, 0),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_ADC_CLK	drivers/fsl_clock.h	/^    kSYS_PLL_to_ADC_CLK   = MUX_A(CM_ADCASYNCCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_CLKOUT	drivers/fsl_clock.h	/^    kSYS_PLL_to_CLKOUT    = MUX_A(CM_CLKOUTCLKSELA, 4),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_FLEXCOMM10	drivers/fsl_clock.h	/^    kSYS_PLL_to_FLEXCOMM10   = MUX_A(CM_FXCOMCLKSEL10, 1),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_FRG	drivers/fsl_clock.h	/^    kSYS_PLL_to_FRG  = MUX_A(CM_FRGCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_MAIN_CLK	drivers/fsl_clock.h	/^    kSYS_PLL_to_MAIN_CLK = MUX_A(CM_MAINCLKSELA, 0) | MUX_B(CM_MAINCLKSELB, 2, 0),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_SCT_CLK	drivers/fsl_clock.h	/^    kSYS_PLL_to_SCT_CLK   = MUX_A(CM_SCTCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_SDIO_CLK	drivers/fsl_clock.h	/^    kSYS_PLL_to_SDIO_CLK   = MUX_A(CM_SDIOCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_SPIFI_CLK	drivers/fsl_clock.h	/^    kSYS_PLL_to_SPIFI_CLK   = MUX_A(CM_SPIFICLKSEL, 1),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_USB0_CLK	drivers/fsl_clock.h	/^    kSYS_PLL_to_USB0_CLK = MUX_A(CM_USB0CLKSEL, 1),$/;"	e	enum:_clock_attach_id
kSYS_PLL_to_USB1_CLK	drivers/fsl_clock.h	/^    kSYS_PLL_to_USB1_CLK = MUX_A(CM_USB1CLKSEL, 1),$/;"	e	enum:_clock_attach_id
kSerialManager_TransmissionBlocking	component/serial_manager/serial_manager.c	/^    kSerialManager_TransmissionBlocking    = 0x0U, \/*!< Blocking transmission*\/$/;"	e	enum:_serial_manager_transmission_mode	file:
kSerialManager_TransmissionNonBlocking	component/serial_manager/serial_manager.c	/^    kSerialManager_TransmissionNonBlocking = 0x1U, \/*!< None blocking transmission*\/$/;"	e	enum:_serial_manager_transmission_mode	file:
kSerialManager_UartOneStopBit	component/serial_manager/serial_port_uart.h	/^    kSerialManager_UartOneStopBit = 0U, \/*!< One stop bit *\/$/;"	e	enum:_serial_port_uart_stop_bit_count
kSerialManager_UartParityDisabled	component/serial_manager/serial_port_uart.h	/^    kSerialManager_UartParityDisabled = 0x0U, \/*!< Parity disabled *\/$/;"	e	enum:_serial_port_uart_parity_mode
kSerialManager_UartParityEven	component/serial_manager/serial_port_uart.h	/^    kSerialManager_UartParityEven     = 0x1U, \/*!< Parity even enabled *\/$/;"	e	enum:_serial_port_uart_parity_mode
kSerialManager_UartParityOdd	component/serial_manager/serial_port_uart.h	/^    kSerialManager_UartParityOdd      = 0x2U, \/*!< Parity odd enabled *\/$/;"	e	enum:_serial_port_uart_parity_mode
kSerialManager_UartTwoStopBit	component/serial_manager/serial_port_uart.h	/^    kSerialManager_UartTwoStopBit = 1U, \/*!< Two stop bits *\/$/;"	e	enum:_serial_port_uart_stop_bit_count
kSerialPort_Swo	component/serial_manager/serial_manager.h	/^    kSerialPort_Swo,           \/*!< Serial port SWO *\/$/;"	e	enum:_serial_port_type
kSerialPort_Uart	component/serial_manager/serial_manager.h	/^    kSerialPort_Uart = 1U,     \/*!< Serial port UART *\/$/;"	e	enum:_serial_port_type
kSerialPort_UsbCdc	component/serial_manager/serial_manager.h	/^    kSerialPort_UsbCdc,        \/*!< Serial port USB CDC *\/$/;"	e	enum:_serial_port_type
kSerialPort_UsbCdcVirtual	component/serial_manager/serial_manager.h	/^    kSerialPort_UsbCdcVirtual, \/*!< Serial port USB CDC Virtual *\/$/;"	e	enum:_serial_port_type
kStartState	drivers/fsl_i2c.h	/^    kStartState,$/;"	e	enum:_i2c_transfer_states
kStatusGroup_ApplicationRangeStart	drivers/fsl_common.h	/^    kStatusGroup_ApplicationRangeStart = 101, \/*!< Starting number for application groups. *\/$/;"	e	enum:_status_groups
kStatusGroup_BUTTON	drivers/fsl_common.h	/^    kStatusGroup_BUTTON = 138,                \/*!< Group number for BUTTON status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_CAAM	drivers/fsl_common.h	/^    kStatusGroup_CAAM = 63,                   \/*!< Group number for CAAM status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_CODEC	drivers/fsl_common.h	/^    kStatusGroup_CODEC = 148,                 \/*!< Group number for codec status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_COMMON_TASK	drivers/fsl_common.h	/^    kStatusGroup_COMMON_TASK = 144,           \/*!< Group number for Common task status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_CSI	drivers/fsl_common.h	/^    kStatusGroup_CSI = 29,                    \/*!< Group number for CSI status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_DCP	drivers/fsl_common.h	/^    kStatusGroup_DCP = 67,                    \/*!< Group number for DCP status codes.*\/$/;"	e	enum:_status_groups
kStatusGroup_DMA	drivers/fsl_common.h	/^    kStatusGroup_DMA = 50,                    \/*!< Group number for DMA status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_DMAMGR	drivers/fsl_common.h	/^    kStatusGroup_DMAMGR = 52,                 \/*!< Group number for DMAMGR status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_DMIC	drivers/fsl_common.h	/^    kStatusGroup_DMIC = 58,                   \/*!< Group number for DMIC status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_DSPI	drivers/fsl_common.h	/^    kStatusGroup_DSPI = 6,                    \/*!< Group number for DSPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_DebugConsole	drivers/fsl_common.h	/^    kStatusGroup_DebugConsole = 99,           \/*!< Group number for debug console status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_ECSPI	drivers/fsl_common.h	/^    kStatusGroup_ECSPI = 64,                  \/*!< Group number for ECSPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_EDMA	drivers/fsl_common.h	/^    kStatusGroup_EDMA = 51,                   \/*!< Group number for EDMA status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_ENET	drivers/fsl_common.h	/^    kStatusGroup_ENET = 40,                   \/*!< Group number for ENET status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_ESAI	drivers/fsl_common.h	/^    kStatusGroup_ESAI = 69,                   \/*!< Group number for ESAI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_EXTERN_EEPROM	drivers/fsl_common.h	/^    kStatusGroup_EXTERN_EEPROM = 139,         \/*!< Group number for EXTERN EEPROM status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_FLASH	drivers/fsl_common.h	/^    kStatusGroup_FLASH = 1,                   \/*!< Group number for FLASH status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_FLASHIAP	drivers/fsl_common.h	/^    kStatusGroup_FLASHIAP = 25,               \/*!< Group number for FLASHIAP status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXCAN	drivers/fsl_common.h	/^    kStatusGroup_FLEXCAN = 53,                \/*!< Group number for FlexCAN status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXCOMM_I2C	drivers/fsl_common.h	/^    kStatusGroup_FLEXCOMM_I2C = 26,           \/*!< Group number for FLEXCOMM I2C status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXIO_CAMERA	drivers/fsl_common.h	/^    kStatusGroup_FLEXIO_CAMERA = 55,          \/*!< Group number for FLEXIO CAMERA status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXIO_I2C	drivers/fsl_common.h	/^    kStatusGroup_FLEXIO_I2C = 8,              \/*!< Group number for FLEXIO I2C status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXIO_I2S	drivers/fsl_common.h	/^    kStatusGroup_FLEXIO_I2S = 23,             \/*!< Group number for FLEXIO I2S status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXIO_MCULCD	drivers/fsl_common.h	/^    kStatusGroup_FLEXIO_MCULCD = 24,          \/*!< Group number for FLEXIO LCD status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXIO_SPI	drivers/fsl_common.h	/^    kStatusGroup_FLEXIO_SPI = 5,              \/*!< Group number for FLEXIO SPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXIO_UART	drivers/fsl_common.h	/^    kStatusGroup_FLEXIO_UART = 7,             \/*!< Group number for FLEXIO UART status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_FLEXSPI	drivers/fsl_common.h	/^    kStatusGroup_FLEXSPI = 70,                \/*!< Group number for FLEXSPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_Generic	drivers/fsl_common.h	/^    kStatusGroup_Generic = 0,                 \/*!< Group number for generic status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HAL_FLASH	drivers/fsl_common.h	/^    kStatusGroup_HAL_FLASH = 126,             \/*!< Group number for HAL FLASH status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HAL_GPIO	drivers/fsl_common.h	/^    kStatusGroup_HAL_GPIO = 121,              \/*!< Group number for HAL GPIO status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HAL_I2C	drivers/fsl_common.h	/^    kStatusGroup_HAL_I2C = 125,               \/*!< Group number for HAL I2C status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HAL_PWM	drivers/fsl_common.h	/^    kStatusGroup_HAL_PWM = 127,               \/*!< Group number for HAL PWM status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HAL_RNG	drivers/fsl_common.h	/^    kStatusGroup_HAL_RNG = 128,               \/*!< Group number for HAL RNG status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HAL_SPI	drivers/fsl_common.h	/^    kStatusGroup_HAL_SPI = 124,               \/*!< Group number for HAL SPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HAL_TIMER	drivers/fsl_common.h	/^    kStatusGroup_HAL_TIMER = 123,             \/*!< Group number for HAL TIMER status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HAL_UART	drivers/fsl_common.h	/^    kStatusGroup_HAL_UART = 122,              \/*!< Group number for HAL UART status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_HASHCRYPT	drivers/fsl_common.h	/^    kStatusGroup_HASHCRYPT = 77,              \/*!< Group number for Hashcrypt status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_I2C	drivers/fsl_common.h	/^    kStatusGroup_I2C = 11,                    \/*!< Group number for UART status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_I2S	drivers/fsl_common.h	/^    kStatusGroup_I2S = 27,                    \/*!< Group number for I2S status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_I3C	drivers/fsl_common.h	/^    kStatusGroup_I3C = 79,                    \/*!< Group number for I3C status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_IAP	drivers/fsl_common.h	/^    kStatusGroup_IAP = 102,                   \/*!< Group number for IAP status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_ICS	drivers/fsl_common.h	/^    kStatusGroup_ICS = 74,                    \/*!< Group number for ICS status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_IUART	drivers/fsl_common.h	/^    kStatusGroup_IUART = 28,                  \/*!< Group number for IUART status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_LED	drivers/fsl_common.h	/^    kStatusGroup_LED = 137,                   \/*!< Group number for LED status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LIST	drivers/fsl_common.h	/^    kStatusGroup_LIST = 142,                  \/*!< Group number for List status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LMEM	drivers/fsl_common.h	/^    kStatusGroup_LMEM = 44,                   \/*!< Group number for LMEM status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPC_I2C	drivers/fsl_common.h	/^    kStatusGroup_LPC_I2C = 66,                \/*!< Group number for LPC_I2C status codes.*\/$/;"	e	enum:_status_groups
kStatusGroup_LPC_I2C_1	drivers/fsl_common.h	/^    kStatusGroup_LPC_I2C_1 = 97,              \/*!< Group number for LPC_I2C_1 status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPC_MINISPI	drivers/fsl_common.h	/^    kStatusGroup_LPC_MINISPI = 76,            \/*!< Group number for LPC_MINISPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPC_SPI	drivers/fsl_common.h	/^    kStatusGroup_LPC_SPI = 56,                \/*!< Group number for LPC_SPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPC_SPI_SSP	drivers/fsl_common.h	/^    kStatusGroup_LPC_SPI_SSP = 78,            \/*!< Group number for LPC_SPI_SSP status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPC_USART	drivers/fsl_common.h	/^    kStatusGroup_LPC_USART = 57,              \/*!< Group number for LPC_USART status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPI2C	drivers/fsl_common.h	/^    kStatusGroup_LPI2C = 9,                   \/*!< Group number for LPI2C status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPSCI	drivers/fsl_common.h	/^    kStatusGroup_LPSCI = 12,                  \/*!< Group number for LPSCI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPSPI	drivers/fsl_common.h	/^    kStatusGroup_LPSPI = 4,                   \/*!< Group number for LPSPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LPUART	drivers/fsl_common.h	/^    kStatusGroup_LPUART = 13,                 \/*!< Group number for LPUART status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_LTC	drivers/fsl_common.h	/^    kStatusGroup_LTC = 54,                    \/*!< Group number for LTC status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_MCAN	drivers/fsl_common.h	/^    kStatusGroup_MCAN = 62,                   \/*!< Group number for MCAN status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_MCG	drivers/fsl_common.h	/^    kStatusGroup_MCG = 20,                    \/*!< Group number for MCG status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_MEM_MANAGER	drivers/fsl_common.h	/^    kStatusGroup_MEM_MANAGER = 141,           \/*!< Group number for MEM MANAGER status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_MIPI_DSI	drivers/fsl_common.h	/^    kStatusGroup_MIPI_DSI = 30,               \/*!< Group number for MIPI DSI status codes *\/$/;"	e	enum:_status_groups
kStatusGroup_MMDC	drivers/fsl_common.h	/^    kStatusGroup_MMDC = 71,                   \/*!< Group number for MMDC status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_MSCAN	drivers/fsl_common.h	/^    kStatusGroup_MSCAN = 68,                  \/*!< Group number for MSCAN status codes.*\/$/;"	e	enum:_status_groups
kStatusGroup_MSG	drivers/fsl_common.h	/^    kStatusGroup_MSG = 145,                   \/*!< Group number for messaging status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_NOTIFIER	drivers/fsl_common.h	/^    kStatusGroup_NOTIFIER = 98,               \/*!< Group number for NOTIFIER status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_OSA	drivers/fsl_common.h	/^    kStatusGroup_OSA = 143,                   \/*!< Group number for OSA status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_OTP	drivers/fsl_common.h	/^    kStatusGroup_OTP = 61,                    \/*!< Group number for OTP status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_PDM	drivers/fsl_common.h	/^    kStatusGroup_PDM = 72,                    \/*!< Group number for MIC status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_PHY	drivers/fsl_common.h	/^    kStatusGroup_PHY = 41,                    \/*!< Group number for PHY status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_POWER	drivers/fsl_common.h	/^    kStatusGroup_POWER = 39,                  \/*!< Group number for POWER status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_QSPI	drivers/fsl_common.h	/^    kStatusGroup_QSPI = 45,                   \/*!< Group number for QSPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SAI	drivers/fsl_common.h	/^    kStatusGroup_SAI = 19,                    \/*!< Group number for SAI status code *\/$/;"	e	enum:_status_groups
kStatusGroup_SCG	drivers/fsl_common.h	/^    kStatusGroup_SCG = 21,                    \/*!< Group number for SCG status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SDHC	drivers/fsl_common.h	/^    kStatusGroup_SDHC = 17,                   \/*!< Group number for SDHC status code *\/$/;"	e	enum:_status_groups
kStatusGroup_SDIF	drivers/fsl_common.h	/^    kStatusGroup_SDIF = 59,                   \/*!< Group number for SDIF status codes.*\/$/;"	e	enum:_status_groups
kStatusGroup_SDK_FLEXSPINOR	drivers/fsl_common.h	/^    kStatusGroup_SDK_FLEXSPINOR = 147,        \/*!< Group number for FLEXSPINOR status codes.*\/$/;"	e	enum:_status_groups
kStatusGroup_SDK_OCOTP	drivers/fsl_common.h	/^    kStatusGroup_SDK_OCOTP = 146,             \/*!< Group number for OCOTP status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SDMA	drivers/fsl_common.h	/^    kStatusGroup_SDMA = 73,                   \/*!< Group number for SDMA status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SDMMC	drivers/fsl_common.h	/^    kStatusGroup_SDMMC = 18,                  \/*!< Group number for SDMMC status code *\/$/;"	e	enum:_status_groups
kStatusGroup_SDRAMC	drivers/fsl_common.h	/^    kStatusGroup_SDRAMC = 35,                 \/*!< Group number for SDRAMC status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SDSPI	drivers/fsl_common.h	/^    kStatusGroup_SDSPI = 22,                  \/*!< Group number for SDSPI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SEMA42	drivers/fsl_common.h	/^    kStatusGroup_SEMA42 = 16,                 \/*!< Group number for SEMA42 status code.*\/$/;"	e	enum:_status_groups
kStatusGroup_SEMC	drivers/fsl_common.h	/^    kStatusGroup_SEMC = 100,                  \/*!< Group number for SEMC status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SERIALMANAGER	drivers/fsl_common.h	/^    kStatusGroup_SERIALMANAGER = 136,         \/*!< Group number for SERIAL MANAGER status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SHELL	drivers/fsl_common.h	/^    kStatusGroup_SHELL = 140,                 \/*!< Group number for SHELL status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SMARTCARD	drivers/fsl_common.h	/^    kStatusGroup_SMARTCARD = 43,              \/*!< Group number for SMARTCARD status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SPDIF	drivers/fsl_common.h	/^    kStatusGroup_SPDIF = 75,                  \/*!< Group number for SPDIF status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_SPI	drivers/fsl_common.h	/^    kStatusGroup_SPI = 14,                    \/*!< Group number for SPI status code.*\/$/;"	e	enum:_status_groups
kStatusGroup_SPIFI	drivers/fsl_common.h	/^    kStatusGroup_SPIFI = 60,                  \/*!< Group number for SPIFI status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_TIMERMANAGER	drivers/fsl_common.h	/^    kStatusGroup_TIMERMANAGER = 135,          \/*!< Group number for TiMER MANAGER status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_TRGMUX	drivers/fsl_common.h	/^    kStatusGroup_TRGMUX = 42,                 \/*!< Group number for TRGMUX status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_UART	drivers/fsl_common.h	/^    kStatusGroup_UART = 10,                   \/*!< Group number for UART status codes. *\/$/;"	e	enum:_status_groups
kStatusGroup_USDHC	drivers/fsl_common.h	/^    kStatusGroup_USDHC = 65,                  \/*!< Group number for USDHC status codes.*\/$/;"	e	enum:_status_groups
kStatusGroup_XRDC	drivers/fsl_common.h	/^    kStatusGroup_XRDC = 15,                   \/*!< Group number for XRDC status code.*\/$/;"	e	enum:_status_groups
kStatus_CODEC_DeviceNotRegistered	codec/fsl_codec_common.h	/^    kStatus_CODEC_DeviceNotRegistered = MAKE_STATUS(kStatusGroup_CODEC, 1U), \/*!< CODEC device register failed status *\/$/;"	e	enum:_codec_status
kStatus_CODEC_I2CBusInitialFailed	codec/fsl_codec_common.h	/^    kStatus_CODEC_I2CBusInitialFailed =$/;"	e	enum:_codec_status
kStatus_CODEC_I2CCommandTransferFailed	codec/fsl_codec_common.h	/^    kStatus_CODEC_I2CCommandTransferFailed =$/;"	e	enum:_codec_status
kStatus_CODEC_NotSupport	codec/fsl_codec_common.h	/^    kStatus_CODEC_NotSupport          = MAKE_STATUS(kStatusGroup_CODEC, 0U), \/*!< CODEC not support status *\/$/;"	e	enum:_codec_status
kStatus_DMA_Busy	drivers/fsl_dma.h	/^    kStatus_DMA_Busy = MAKE_STATUS(kStatusGroup_DMA, 0), \/*!< Channel is busy and can't handle the$/;"	e	enum:_dma_transfer_status
kStatus_DMIC_Busy	drivers/fsl_dmic.h	/^    kStatus_DMIC_Busy          = MAKE_STATUS(kStatusGroup_DMIC, 0), \/*!< DMIC is busy *\/$/;"	e	enum:_dmic_status
kStatus_DMIC_Idle	drivers/fsl_dmic.h	/^    kStatus_DMIC_Idle          = MAKE_STATUS(kStatusGroup_DMIC, 1), \/*!< DMIC is idle *\/$/;"	e	enum:_dmic_status
kStatus_DMIC_OverRunError	drivers/fsl_dmic.h	/^    kStatus_DMIC_OverRunError  = MAKE_STATUS(kStatusGroup_DMIC, 2), \/*!< DMIC  over run Error *\/$/;"	e	enum:_dmic_status
kStatus_DMIC_UnderRunError	drivers/fsl_dmic.h	/^    kStatus_DMIC_UnderRunError = MAKE_STATUS(kStatusGroup_DMIC, 3), \/*!< DMIC under run Error *\/$/;"	e	enum:_dmic_status
kStatus_ENET_PtpTsRingEmpty	drivers/fsl_enet.h	/^    kStatus_ENET_PtpTsRingEmpty = MAKE_STATUS(kStatusGroup_ENET, 7U)  \/*!< Timestamp ring empty. *\/$/;"	e	enum:_enet_status
kStatus_ENET_PtpTsRingFull	drivers/fsl_enet.h	/^    kStatus_ENET_PtpTsRingFull  = MAKE_STATUS(kStatusGroup_ENET, 6U), \/*!< Timestamp ring full. *\/$/;"	e	enum:_enet_status
kStatus_ENET_RxFrameEmpty	drivers/fsl_enet.h	/^    kStatus_ENET_RxFrameEmpty   = MAKE_STATUS(kStatusGroup_ENET, 2U), \/*!< No frame arrive. *\/$/;"	e	enum:_enet_status
kStatus_ENET_RxFrameError	drivers/fsl_enet.h	/^    kStatus_ENET_RxFrameError   = MAKE_STATUS(kStatusGroup_ENET, 0U), \/*!< A frame received but data error happen. *\/$/;"	e	enum:_enet_status
kStatus_ENET_RxFrameFail	drivers/fsl_enet.h	/^    kStatus_ENET_RxFrameFail    = MAKE_STATUS(kStatusGroup_ENET, 1U), \/*!< Failed to receive a frame. *\/$/;"	e	enum:_enet_status
kStatus_ENET_TxFrameBusy	drivers/fsl_enet.h	/^    kStatus_ENET_TxFrameBusy    = MAKE_STATUS(kStatusGroup_ENET, 3U), \/*!< Transmit descriptors are under process. *\/$/;"	e	enum:_enet_status
kStatus_ENET_TxFrameFail	drivers/fsl_enet.h	/^    kStatus_ENET_TxFrameFail    = MAKE_STATUS(kStatusGroup_ENET, 4U), \/*!< Transmit frame fail. *\/$/;"	e	enum:_enet_status
kStatus_ENET_TxFrameOverLen	drivers/fsl_enet.h	/^    kStatus_ENET_TxFrameOverLen = MAKE_STATUS(kStatusGroup_ENET, 5U)  \/*!< Transmit oversize. *\/$/;"	e	enum:_enet_status
kStatus_Fail	drivers/fsl_common.h	/^    kStatus_Fail = MAKE_STATUS(kStatusGroup_Generic, 1),$/;"	e	enum:_generic_status
kStatus_HAL_I2cAddrressNak	component/i2c/i2c.h	/^    kStatus_HAL_I2cAddrressNak     = MAKE_STATUS(kStatusGroup_HAL_I2C, 7), \/*!< NAK received during the address probe *\/$/;"	e	enum:_hal_i2c_status
kStatus_HAL_I2cArbitrationLost	component/i2c/i2c.h	/^    kStatus_HAL_I2cArbitrationLost = MAKE_STATUS(kStatusGroup_HAL_I2C, 5), \/*!< Arbitration lost during transfer *\/$/;"	e	enum:_hal_i2c_status
kStatus_HAL_I2cBusy	component/i2c/i2c.h	/^    kStatus_HAL_I2cBusy            = MAKE_STATUS(kStatusGroup_HAL_I2C, 2), \/*!< HAL I2C is busy with current transfer *\/$/;"	e	enum:_hal_i2c_status
kStatus_HAL_I2cError	component/i2c/i2c.h	/^    kStatus_HAL_I2cError           = MAKE_STATUS(kStatusGroup_HAL_I2C, 1), \/*!< Error occurs on HAL I2C *\/$/;"	e	enum:_hal_i2c_status
kStatus_HAL_I2cIdle	component/i2c/i2c.h	/^    kStatus_HAL_I2cIdle            = MAKE_STATUS(kStatusGroup_HAL_I2C, 3), \/*!< HAL I2C transmitter is idle *\/$/;"	e	enum:_hal_i2c_status
kStatus_HAL_I2cNak	component/i2c/i2c.h	/^    kStatus_HAL_I2cNak             = MAKE_STATUS(kStatusGroup_HAL_I2C, 4), \/*!< NAK received during transfer *\/$/;"	e	enum:_hal_i2c_status
kStatus_HAL_I2cSuccess	component/i2c/i2c.h	/^    kStatus_HAL_I2cSuccess         = kStatus_Success,                      \/*!< Successfully *\/$/;"	e	enum:_hal_i2c_status
kStatus_HAL_I2cTimeout	component/i2c/i2c.h	/^    kStatus_HAL_I2cTimeout         = MAKE_STATUS(kStatusGroup_HAL_I2C, 6), \/*!< Timeout *\/$/;"	e	enum:_hal_i2c_status
kStatus_HAL_TimerInvalid	component/timer/timer.h	/^    kStatus_HAL_TimerInvalid = MAKE_STATUS(kStatusGroup_HAL_TIMER, 3),    \/*!< timer is invalid  *\/$/;"	e	enum:_hal_timer_status
kStatus_HAL_TimerIsUsed	component/timer/timer.h	/^    kStatus_HAL_TimerIsUsed = MAKE_STATUS(kStatusGroup_HAL_TIMER, 2),     \/*!< timer is used  *\/$/;"	e	enum:_hal_timer_status
kStatus_HAL_TimerNotSupport	component/timer/timer.h	/^    kStatus_HAL_TimerNotSupport = MAKE_STATUS(kStatusGroup_HAL_TIMER, 1), \/*!< Not Support *\/$/;"	e	enum:_hal_timer_status
kStatus_HAL_TimerOutOfRanger	component/timer/timer.h	/^    kStatus_HAL_TimerOutOfRanger = MAKE_STATUS(kStatusGroup_HAL_TIMER, 4), \/*!< timer is Out Of Ranger *\/$/;"	e	enum:_hal_timer_status
kStatus_HAL_TimerSuccess	component/timer/timer.h	/^    kStatus_HAL_TimerSuccess = kStatus_Success,                           \/*!< Success *\/$/;"	e	enum:_hal_timer_status
kStatus_HAL_UartBaudrateNotSupport	component/uart/uart.h	/^    kStatus_HAL_UartBaudrateNotSupport =$/;"	e	enum:_hal_uart_status
kStatus_HAL_UartError	component/uart/uart.h	/^    kStatus_HAL_UartError = MAKE_STATUS(kStatusGroup_HAL_UART, 7), \/*!< Error occurs on HAL UART *\/$/;"	e	enum:_hal_uart_status
kStatus_HAL_UartProtocolError	component/uart/uart.h	/^    kStatus_HAL_UartProtocolError = MAKE_STATUS($/;"	e	enum:_hal_uart_status
kStatus_HAL_UartRxBusy	component/uart/uart.h	/^    kStatus_HAL_UartRxBusy  = MAKE_STATUS(kStatusGroup_HAL_UART, 2), \/*!< RX busy *\/$/;"	e	enum:_hal_uart_status
kStatus_HAL_UartRxIdle	component/uart/uart.h	/^    kStatus_HAL_UartRxIdle  = MAKE_STATUS(kStatusGroup_HAL_UART, 4), \/*!< HAL UART receiver is idle *\/$/;"	e	enum:_hal_uart_status
kStatus_HAL_UartSuccess	component/uart/uart.h	/^    kStatus_HAL_UartSuccess = kStatus_Success,                       \/*!< Successfully *\/$/;"	e	enum:_hal_uart_status
kStatus_HAL_UartTxBusy	component/uart/uart.h	/^    kStatus_HAL_UartTxBusy  = MAKE_STATUS(kStatusGroup_HAL_UART, 1), \/*!< TX busy *\/$/;"	e	enum:_hal_uart_status
kStatus_HAL_UartTxIdle	component/uart/uart.h	/^    kStatus_HAL_UartTxIdle  = MAKE_STATUS(kStatusGroup_HAL_UART, 3), \/*!< HAL UART transmitter is idle. *\/$/;"	e	enum:_hal_uart_status
kStatus_I2C_Addr_Nak	drivers/fsl_i2c.h	/^    kStatus_I2C_Addr_Nak        = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 11), \/*!< NAK received for Address *\/$/;"	e	enum:_i2c_status
kStatus_I2C_ArbitrationLost	drivers/fsl_i2c.h	/^    kStatus_I2C_ArbitrationLost = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 5), \/*!< Arbitration lost error. *\/$/;"	e	enum:_i2c_status
kStatus_I2C_BitError	drivers/fsl_i2c.h	/^    kStatus_I2C_BitError = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 4), \/*!< Transferred bit was not seen on the bus. *\/$/;"	e	enum:_i2c_status
kStatus_I2C_Busy	drivers/fsl_i2c.h	/^    kStatus_I2C_Busy = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 0), \/*!< The master is already performing a transfer. *\/$/;"	e	enum:_i2c_status
kStatus_I2C_DmaRequestFail	drivers/fsl_i2c.h	/^    kStatus_I2C_DmaRequestFail  = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 7), \/*!< DMA request failed. *\/$/;"	e	enum:_i2c_status
kStatus_I2C_Idle	drivers/fsl_i2c.h	/^    kStatus_I2C_Idle = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 1), \/*!< The slave driver is idle. *\/$/;"	e	enum:_i2c_status
kStatus_I2C_InvalidParameter	drivers/fsl_i2c.h	/^    kStatus_I2C_InvalidParameter =$/;"	e	enum:_i2c_status
kStatus_I2C_Nak	drivers/fsl_i2c.h	/^    kStatus_I2C_Nak =$/;"	e	enum:_i2c_status
kStatus_I2C_NoTransferInProgress	drivers/fsl_i2c.h	/^    kStatus_I2C_NoTransferInProgress =$/;"	e	enum:_i2c_status
kStatus_I2C_StartStopError	drivers/fsl_i2c.h	/^    kStatus_I2C_StartStopError  = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 8),$/;"	e	enum:_i2c_status
kStatus_I2C_Timeout	drivers/fsl_i2c.h	/^    kStatus_I2C_Timeout         = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 10), \/*!< Timeout poling status flags. *\/$/;"	e	enum:_i2c_status
kStatus_I2C_UnexpectedState	drivers/fsl_i2c.h	/^    kStatus_I2C_UnexpectedState = MAKE_STATUS(kStatusGroup_FLEXCOMM_I2C, 9),$/;"	e	enum:_i2c_status
kStatus_I2S_BufferComplete	drivers/fsl_i2s.h	/^    kStatus_I2S_BufferComplete =$/;"	e	enum:_i2s_status
kStatus_I2S_Busy	drivers/fsl_i2s.h	/^    kStatus_I2S_Busy =$/;"	e	enum:_i2s_status
kStatus_I2S_Done	drivers/fsl_i2s.h	/^    kStatus_I2S_Done = MAKE_STATUS(kStatusGroup_I2S, 1), \/*!< All buffers transfers have completed *\/$/;"	e	enum:_i2s_status
kStatus_InvalidArgument	drivers/fsl_common.h	/^    kStatus_InvalidArgument = MAKE_STATUS(kStatusGroup_Generic, 4),$/;"	e	enum:_generic_status
kStatus_NoTransferInProgress	drivers/fsl_common.h	/^    kStatus_NoTransferInProgress = MAKE_STATUS(kStatusGroup_Generic, 6),$/;"	e	enum:_generic_status
kStatus_OutOfRange	drivers/fsl_common.h	/^    kStatus_OutOfRange = MAKE_STATUS(kStatusGroup_Generic, 3),$/;"	e	enum:_generic_status
kStatus_PHY_AutoNegotiateFail	board/fsl_phy.h	/^    kStatus_PHY_AutoNegotiateFail = MAKE_STATUS(kStatusGroup_PHY, 2) \/*!< ENET PHY AutoNegotiate Fail. *\/$/;"	e	enum:_phy_status
kStatus_PHY_SMIVisitTimeout	board/fsl_phy.h	/^    kStatus_PHY_SMIVisitTimeout = MAKE_STATUS(kStatusGroup_PHY, 1),  \/*!< ENET PHY SMI visit timeout. *\/$/;"	e	enum:_phy_status
kStatus_PLL_CCOTooHigh	drivers/fsl_clock.h	/^    kStatus_PLL_CCOTooHigh      = MAKE_STATUS(kStatusGroup_Generic, 7)  \/*!< Requested CCO rate isn't possible *\/$/;"	e	enum:_pll_error
kStatus_PLL_CCOTooLow	drivers/fsl_clock.h	/^    kStatus_PLL_CCOTooLow       = MAKE_STATUS(kStatusGroup_Generic, 6), \/*!< Requested CCO rate isn't possible *\/$/;"	e	enum:_pll_error
kStatus_PLL_InputTooHigh	drivers/fsl_clock.h	/^    kStatus_PLL_InputTooHigh    = MAKE_STATUS(kStatusGroup_Generic, 4), \/*!< PLL input rate is too high *\/$/;"	e	enum:_pll_error
kStatus_PLL_InputTooLow	drivers/fsl_clock.h	/^    kStatus_PLL_InputTooLow     = MAKE_STATUS(kStatusGroup_Generic, 3), \/*!< PLL input rate is too low *\/$/;"	e	enum:_pll_error
kStatus_PLL_OutputTooHigh	drivers/fsl_clock.h	/^    kStatus_PLL_OutputTooHigh   = MAKE_STATUS(kStatusGroup_Generic, 2), \/*!< PLL output rate request was too high *\/$/;"	e	enum:_pll_error
kStatus_PLL_OutputTooLow	drivers/fsl_clock.h	/^    kStatus_PLL_OutputTooLow    = MAKE_STATUS(kStatusGroup_Generic, 1), \/*!< PLL output rate request was too low *\/$/;"	e	enum:_pll_error
kStatus_PLL_OutsideIntLimit	drivers/fsl_clock.h	/^    kStatus_PLL_OutsideIntLimit = MAKE_STATUS(kStatusGroup_Generic, 5), \/*!< Requested output rate isn't possible *\/$/;"	e	enum:_pll_error
kStatus_PLL_Success	drivers/fsl_clock.h	/^    kStatus_PLL_Success         = MAKE_STATUS(kStatusGroup_Generic, 0), \/*!< PLL operation was successful *\/$/;"	e	enum:_pll_error
kStatus_ReadOnly	drivers/fsl_common.h	/^    kStatus_ReadOnly = MAKE_STATUS(kStatusGroup_Generic, 2),$/;"	e	enum:_generic_status
kStatus_SPI_BaudrateNotSupport	drivers/fsl_spi.h	/^    kStatus_SPI_BaudrateNotSupport =$/;"	e	enum:_spi_status
kStatus_SPI_Busy	drivers/fsl_spi.h	/^    kStatus_SPI_Busy  = MAKE_STATUS(kStatusGroup_LPC_SPI, 0), \/*!< SPI bus is busy *\/$/;"	e	enum:_spi_status
kStatus_SPI_Error	drivers/fsl_spi.h	/^    kStatus_SPI_Error = MAKE_STATUS(kStatusGroup_LPC_SPI, 2), \/*!< SPI  error *\/$/;"	e	enum:_spi_status
kStatus_SPI_Idle	drivers/fsl_spi.h	/^    kStatus_SPI_Idle  = MAKE_STATUS(kStatusGroup_LPC_SPI, 1), \/*!< SPI is idle *\/$/;"	e	enum:_spi_status
kStatus_SerialManager_Busy	component/serial_manager/serial_manager.h	/^    kStatus_SerialManager_Busy    = MAKE_STATUS(kStatusGroup_SERIALMANAGER, 2), \/*!< Busy *\/$/;"	e	enum:_serial_manager_status
kStatus_SerialManager_Canceled	component/serial_manager/serial_manager.h	/^    kStatus_SerialManager_Canceled =$/;"	e	enum:_serial_manager_status
kStatus_SerialManager_Error	component/serial_manager/serial_manager.h	/^    kStatus_SerialManager_Error   = MAKE_STATUS(kStatusGroup_SERIALMANAGER, 1), \/*!< Failed *\/$/;"	e	enum:_serial_manager_status
kStatus_SerialManager_HandleConflict	component/serial_manager/serial_manager.h	/^    kStatus_SerialManager_HandleConflict = MAKE_STATUS(kStatusGroup_SERIALMANAGER, 5), \/*!< The handle is opened *\/$/;"	e	enum:_serial_manager_status
kStatus_SerialManager_Notify	component/serial_manager/serial_manager.h	/^    kStatus_SerialManager_Notify  = MAKE_STATUS(kStatusGroup_SERIALMANAGER, 3), \/*!< Ring buffer is not empty *\/$/;"	e	enum:_serial_manager_status
kStatus_SerialManager_RingBufferOverflow	component/serial_manager/serial_manager.h	/^    kStatus_SerialManager_RingBufferOverflow =$/;"	e	enum:_serial_manager_status
kStatus_SerialManager_Success	component/serial_manager/serial_manager.h	/^    kStatus_SerialManager_Success = kStatus_Success,                            \/*!< Success *\/$/;"	e	enum:_serial_manager_status
kStatus_Success	drivers/fsl_common.h	/^    kStatus_Success = MAKE_STATUS(kStatusGroup_Generic, 0),$/;"	e	enum:_generic_status
kStatus_Timeout	drivers/fsl_common.h	/^    kStatus_Timeout = MAKE_STATUS(kStatusGroup_Generic, 5),$/;"	e	enum:_generic_status
kStatus_USART_BaudrateNotSupport	drivers/fsl_usart.h	/^    kStatus_USART_BaudrateNotSupport =$/;"	e	enum:_usart_status
kStatus_USART_FramingError	drivers/fsl_usart.h	/^    kStatus_USART_FramingError        = MAKE_STATUS(kStatusGroup_LPC_USART, 11), \/*!< USART framing error. *\/$/;"	e	enum:_usart_status
kStatus_USART_NoiseError	drivers/fsl_usart.h	/^    kStatus_USART_NoiseError          = MAKE_STATUS(kStatusGroup_LPC_USART, 10), \/*!< USART noise error. *\/$/;"	e	enum:_usart_status
kStatus_USART_ParityError	drivers/fsl_usart.h	/^    kStatus_USART_ParityError         = MAKE_STATUS(kStatusGroup_LPC_USART, 12), \/*!< USART parity error. *\/$/;"	e	enum:_usart_status
kStatus_USART_RxBusy	drivers/fsl_usart.h	/^    kStatus_USART_RxBusy              = MAKE_STATUS(kStatusGroup_LPC_USART, 1),  \/*!< Receiver is busy. *\/$/;"	e	enum:_usart_status
kStatus_USART_RxError	drivers/fsl_usart.h	/^    kStatus_USART_RxError             = MAKE_STATUS(kStatusGroup_LPC_USART, 9),  \/*!< Error happens on rxFIFO. *\/$/;"	e	enum:_usart_status
kStatus_USART_RxIdle	drivers/fsl_usart.h	/^    kStatus_USART_RxIdle              = MAKE_STATUS(kStatusGroup_LPC_USART, 3),  \/*!< USART receiver is idle. *\/$/;"	e	enum:_usart_status
kStatus_USART_RxRingBufferOverrun	drivers/fsl_usart.h	/^    kStatus_USART_RxRingBufferOverrun = MAKE_STATUS(kStatusGroup_LPC_USART, 8),  \/*!< Error happens on rx ring buffer *\/$/;"	e	enum:_usart_status
kStatus_USART_TxBusy	drivers/fsl_usart.h	/^    kStatus_USART_TxBusy              = MAKE_STATUS(kStatusGroup_LPC_USART, 0),  \/*!< Transmitter is busy. *\/$/;"	e	enum:_usart_status
kStatus_USART_TxError	drivers/fsl_usart.h	/^    kStatus_USART_TxError             = MAKE_STATUS(kStatusGroup_LPC_USART, 7),  \/*!< Error happens on txFIFO. *\/$/;"	e	enum:_usart_status
kStatus_USART_TxIdle	drivers/fsl_usart.h	/^    kStatus_USART_TxIdle              = MAKE_STATUS(kStatusGroup_LPC_USART, 2),  \/*!< USART transmitter is idle. *\/$/;"	e	enum:_usart_status
kStatus_USB_AllocFail	usb/include/usb.h	/^    kStatus_USB_AllocFail,      \/*!< Allocation failed *\/$/;"	e	enum:_usb_status
kStatus_USB_BandwidthFail	usb/include/usb.h	/^    kStatus_USB_BandwidthFail,  \/*!< Allocate bandwidth failed *\/$/;"	e	enum:_usb_status
kStatus_USB_Busy	usb/include/usb.h	/^    kStatus_USB_Busy,                       \/*!< Busy *\/$/;"	e	enum:_usb_status
kStatus_USB_ControllerNotFound	usb/include/usb.h	/^    kStatus_USB_ControllerNotFound,         \/*!< Controller cannot be found *\/$/;"	e	enum:_usb_status
kStatus_USB_EHCIAttached	usb/include/usb.h	/^    kStatus_USB_EHCIAttached,$/;"	e	enum:_usb_status
kStatus_USB_EHCIDetached	usb/include/usb.h	/^    kStatus_USB_EHCIDetached,$/;"	e	enum:_usb_status
kStatus_USB_Error	usb/include/usb.h	/^    kStatus_USB_Error,           \/*!< Failed *\/$/;"	e	enum:_usb_status
kStatus_USB_InvalidControllerInterface	usb/include/usb.h	/^    kStatus_USB_InvalidControllerInterface, \/*!< Invalid controller interface *\/$/;"	e	enum:_usb_status
kStatus_USB_InvalidHandle	usb/include/usb.h	/^    kStatus_USB_InvalidHandle,              \/*!< Invalid handle *\/$/;"	e	enum:_usb_status
kStatus_USB_InvalidParameter	usb/include/usb.h	/^    kStatus_USB_InvalidParameter,           \/*!< Invalid parameter *\/$/;"	e	enum:_usb_status
kStatus_USB_InvalidRequest	usb/include/usb.h	/^    kStatus_USB_InvalidRequest,             \/*!< Invalid request *\/$/;"	e	enum:_usb_status
kStatus_USB_LackSwapBuffer	usb/include/usb.h	/^    kStatus_USB_LackSwapBuffer, \/*!< Insufficient swap buffer for KHCI *\/$/;"	e	enum:_usb_status
kStatus_USB_MSDStatusFail	usb/include/usb.h	/^    kStatus_USB_MSDStatusFail,  \/*!< For MSD, the CSW status means fail *\/$/;"	e	enum:_usb_status
kStatus_USB_NotSupported	usb/include/usb.h	/^    kStatus_USB_NotSupported,   \/*!< Configuration is not supported *\/$/;"	e	enum:_usb_status
kStatus_USB_OSA_Error	osa/usb_osa.h	/^    kStatus_USB_OSA_Error,           \/*!< Failed *\/$/;"	e	enum:_usb_osa_status
kStatus_USB_OSA_Success	osa/usb_osa.h	/^    kStatus_USB_OSA_Success = 0x00U, \/*!< Success *\/$/;"	e	enum:_usb_osa_status
kStatus_USB_OSA_TimeOut	osa/usb_osa.h	/^    kStatus_USB_OSA_TimeOut,         \/*!< Timeout occurs while waiting *\/$/;"	e	enum:_usb_osa_status
kStatus_USB_Retry	usb/include/usb.h	/^    kStatus_USB_Retry,          \/*!< Enumeration get configuration retry *\/$/;"	e	enum:_usb_status
kStatus_USB_Success	usb/include/usb.h	/^    kStatus_USB_Success = 0x00U, \/*!< Success *\/$/;"	e	enum:_usb_status
kStatus_USB_TransferCancel	usb/include/usb.h	/^    kStatus_USB_TransferCancel, \/*!< The transfer cancelled *\/$/;"	e	enum:_usb_status
kStatus_USB_TransferFailed	usb/include/usb.h	/^    kStatus_USB_TransferFailed, \/*!< Transfer failed *\/$/;"	e	enum:_usb_status
kStatus_USB_TransferStall	usb/include/usb.h	/^    kStatus_USB_TransferStall,  \/*!< Transfer stalled *\/$/;"	e	enum:_usb_status
kStatus_WM8904_Fail	codec/fsl_wm8904.h	/^    kStatus_WM8904_Fail    = 0x1  \/*!< Failure *\/$/;"	e	enum:_wm8904_status
kStatus_WM8904_Success	codec/fsl_wm8904.h	/^    kStatus_WM8904_Success = 0x0, \/*!< Success *\/$/;"	e	enum:_wm8904_status
kStopState	drivers/fsl_i2c.h	/^    kStopState,$/;"	e	enum:_i2c_transfer_states
kTransmitDataState	drivers/fsl_i2c.h	/^    kTransmitDataState,$/;"	e	enum:_i2c_transfer_states
kTransmitSubaddrState	drivers/fsl_i2c.h	/^    kTransmitSubaddrState,$/;"	e	enum:_i2c_transfer_states
kUSART_7BitsPerChar	drivers/fsl_usart.h	/^    kUSART_7BitsPerChar = 0U, \/*!< Seven bit mode *\/$/;"	e	enum:_usart_data_len
kUSART_8BitsPerChar	drivers/fsl_usart.h	/^    kUSART_8BitsPerChar = 1U, \/*!< Eight bit mode *\/$/;"	e	enum:_usart_data_len
kUSART_OneStopBit	drivers/fsl_usart.h	/^    kUSART_OneStopBit = 0U, \/*!< One stop bit *\/$/;"	e	enum:_usart_stop_bit_count
kUSART_ParityDisabled	drivers/fsl_usart.h	/^    kUSART_ParityDisabled = 0x0U, \/*!< Parity disabled *\/$/;"	e	enum:_usart_parity_mode
kUSART_ParityEven	drivers/fsl_usart.h	/^    kUSART_ParityEven     = 0x2U, \/*!< Parity enabled, type even, bit setting: PE|PT = 10 *\/$/;"	e	enum:_usart_parity_mode
kUSART_ParityOdd	drivers/fsl_usart.h	/^    kUSART_ParityOdd      = 0x3U, \/*!< Parity enabled, type odd,  bit setting: PE|PT = 11 *\/$/;"	e	enum:_usart_parity_mode
kUSART_RxBusy	drivers/fsl_usart.c	/^    kUSART_RxBusy  \/* RX busy. *\/$/;"	e	enum:_usart_transfer_states	file:
kUSART_RxError	drivers/fsl_usart.h	/^    kUSART_RxError            = (USART_FIFOSTAT_RXERR_MASK),      \/*!< RXERR bit, sets if RX buffer is error *\/$/;"	e	enum:_usart_flags
kUSART_RxErrorInterruptEnable	drivers/fsl_usart.h	/^    kUSART_RxErrorInterruptEnable = (USART_FIFOINTENSET_RXERR_MASK),$/;"	e	enum:_usart_interrupt_enable
kUSART_RxFifo1	drivers/fsl_usart.h	/^    kUSART_RxFifo1 = 0, \/*!< USART rx watermark at 1 item *\/$/;"	e	enum:_usart_rxfifo_watermark
kUSART_RxFifo2	drivers/fsl_usart.h	/^    kUSART_RxFifo2 = 1, \/*!< USART rx watermark at 2 items *\/$/;"	e	enum:_usart_rxfifo_watermark
kUSART_RxFifo3	drivers/fsl_usart.h	/^    kUSART_RxFifo3 = 2, \/*!< USART rx watermark at 3 items *\/$/;"	e	enum:_usart_rxfifo_watermark
kUSART_RxFifo4	drivers/fsl_usart.h	/^    kUSART_RxFifo4 = 3, \/*!< USART rx watermark at 4 items *\/$/;"	e	enum:_usart_rxfifo_watermark
kUSART_RxFifo5	drivers/fsl_usart.h	/^    kUSART_RxFifo5 = 4, \/*!< USART rx watermark at 5 items *\/$/;"	e	enum:_usart_rxfifo_watermark
kUSART_RxFifo6	drivers/fsl_usart.h	/^    kUSART_RxFifo6 = 5, \/*!< USART rx watermark at 6 items *\/$/;"	e	enum:_usart_rxfifo_watermark
kUSART_RxFifo7	drivers/fsl_usart.h	/^    kUSART_RxFifo7 = 6, \/*!< USART rx watermark at 7 items *\/$/;"	e	enum:_usart_rxfifo_watermark
kUSART_RxFifo8	drivers/fsl_usart.h	/^    kUSART_RxFifo8 = 7, \/*!< USART rx watermark at 8 items *\/$/;"	e	enum:_usart_rxfifo_watermark
kUSART_RxFifoFullFlag	drivers/fsl_usart.h	/^    kUSART_RxFifoFullFlag     = (USART_FIFOSTAT_RXFULL_MASK),     \/*!< RXFULL bit, sets if RX buffer is full *\/$/;"	e	enum:_usart_flags
kUSART_RxFifoNotEmptyFlag	drivers/fsl_usart.h	/^    kUSART_RxFifoNotEmptyFlag = (USART_FIFOSTAT_RXNOTEMPTY_MASK), \/*!< RXNOEMPTY bit, sets if RX buffer is not empty *\/$/;"	e	enum:_usart_flags
kUSART_RxIdle	drivers/fsl_usart.c	/^    kUSART_RxIdle, \/* RX idle. *\/$/;"	e	enum:_usart_transfer_states	file:
kUSART_RxLevelInterruptEnable	drivers/fsl_usart.h	/^    kUSART_RxLevelInterruptEnable = (USART_FIFOINTENSET_RXLVL_MASK),$/;"	e	enum:_usart_interrupt_enable
kUSART_RxSampleOnFallingEdge	drivers/fsl_usart.h	/^    kUSART_RxSampleOnFallingEdge = 0x0U, \/*!< Un_RXD is sampled on the falling edge of SCLK. *\/$/;"	e	enum:_usart_clock_polarity
kUSART_RxSampleOnRisingEdge	drivers/fsl_usart.h	/^    kUSART_RxSampleOnRisingEdge  = 0x1U, \/*!< Un_RXD is sampled on the rising edge of SCLK. *\/$/;"	e	enum:_usart_clock_polarity
kUSART_SyncModeDisabled	drivers/fsl_usart.h	/^    kUSART_SyncModeDisabled = 0x0U, \/*!< Asynchronous mode.       *\/$/;"	e	enum:_usart_sync_mode
kUSART_SyncModeMaster	drivers/fsl_usart.h	/^    kUSART_SyncModeMaster   = 0x3U, \/*!< Synchronous master mode. *\/$/;"	e	enum:_usart_sync_mode
kUSART_SyncModeSlave	drivers/fsl_usart.h	/^    kUSART_SyncModeSlave    = 0x2U, \/*!< Synchronous slave mode.  *\/$/;"	e	enum:_usart_sync_mode
kUSART_TwoStopBit	drivers/fsl_usart.h	/^    kUSART_TwoStopBit = 1U, \/*!< Two stop bits *\/$/;"	e	enum:_usart_stop_bit_count
kUSART_TxBusy	drivers/fsl_usart.c	/^    kUSART_TxBusy, \/* TX busy. *\/$/;"	e	enum:_usart_transfer_states	file:
kUSART_TxError	drivers/fsl_usart.h	/^    kUSART_TxError            = (USART_FIFOSTAT_TXERR_MASK),      \/*!< TEERR bit, sets if TX buffer is error *\/$/;"	e	enum:_usart_flags
kUSART_TxErrorInterruptEnable	drivers/fsl_usart.h	/^    kUSART_TxErrorInterruptEnable = (USART_FIFOINTENSET_TXERR_MASK),$/;"	e	enum:_usart_interrupt_enable
kUSART_TxFifo0	drivers/fsl_usart.h	/^    kUSART_TxFifo0 = 0, \/*!< USART tx watermark is empty *\/$/;"	e	enum:_usart_txfifo_watermark
kUSART_TxFifo1	drivers/fsl_usart.h	/^    kUSART_TxFifo1 = 1, \/*!< USART tx watermark at 1 item *\/$/;"	e	enum:_usart_txfifo_watermark
kUSART_TxFifo2	drivers/fsl_usart.h	/^    kUSART_TxFifo2 = 2, \/*!< USART tx watermark at 2 items *\/$/;"	e	enum:_usart_txfifo_watermark
kUSART_TxFifo3	drivers/fsl_usart.h	/^    kUSART_TxFifo3 = 3, \/*!< USART tx watermark at 3 items *\/$/;"	e	enum:_usart_txfifo_watermark
kUSART_TxFifo4	drivers/fsl_usart.h	/^    kUSART_TxFifo4 = 4, \/*!< USART tx watermark at 4 items *\/$/;"	e	enum:_usart_txfifo_watermark
kUSART_TxFifo5	drivers/fsl_usart.h	/^    kUSART_TxFifo5 = 5, \/*!< USART tx watermark at 5 items *\/$/;"	e	enum:_usart_txfifo_watermark
kUSART_TxFifo6	drivers/fsl_usart.h	/^    kUSART_TxFifo6 = 6, \/*!< USART tx watermark at 6 items *\/$/;"	e	enum:_usart_txfifo_watermark
kUSART_TxFifo7	drivers/fsl_usart.h	/^    kUSART_TxFifo7 = 7, \/*!< USART tx watermark at 7 items *\/$/;"	e	enum:_usart_txfifo_watermark
kUSART_TxFifoEmptyFlag	drivers/fsl_usart.h	/^    kUSART_TxFifoEmptyFlag    = (USART_FIFOSTAT_TXEMPTY_MASK),    \/*!< TXEMPTY bit, sets if TX buffer is empty *\/$/;"	e	enum:_usart_flags
kUSART_TxFifoNotFullFlag	drivers/fsl_usart.h	/^    kUSART_TxFifoNotFullFlag  = (USART_FIFOSTAT_TXNOTFULL_MASK),  \/*!< TXNOTFULL bit, sets if TX buffer is not full *\/$/;"	e	enum:_usart_flags
kUSART_TxIdle	drivers/fsl_usart.c	/^    kUSART_TxIdle, \/* TX idle. *\/$/;"	e	enum:_usart_transfer_states	file:
kUSART_TxLevelInterruptEnable	drivers/fsl_usart.h	/^    kUSART_TxLevelInterruptEnable = (USART_FIFOINTENSET_TXLVL_MASK),$/;"	e	enum:_usart_interrupt_enable
kUSB0D_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kUSB0D_RST_SHIFT_RSTn = 65536 | 25U,     \/**< USB0D reset control *\/$/;"	e	enum:_SYSCON_RSTn
kUSB0HMR_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kUSB0HMR_RST_SHIFT_RSTn = 131072 | 16U,  \/**< USB0HMR reset control *\/$/;"	e	enum:_SYSCON_RSTn
kUSB0HSL_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kUSB0HSL_RST_SHIFT_RSTn = 131072 | 17U,  \/**< USB0HSL reset control *\/$/;"	e	enum:_SYSCON_RSTn
kUSB1D_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kUSB1D_RST_SHIFT_RSTn = 131072 | 5U,     \/**< USB1D reset control *\/$/;"	e	enum:_SYSCON_RSTn
kUSB1H_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kUSB1H_RST_SHIFT_RSTn = 131072 | 4U,     \/**< USB1H reset control *\/$/;"	e	enum:_SYSCON_RSTn
kUSB1RAM_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kUSB1RAM_RST_SHIFT_RSTn = 131072 | 6U,   \/**< USB1RAM reset control *\/$/;"	e	enum:_SYSCON_RSTn
kUSB_ControllerDwc30	usb/include/usb.h	/^    kUSB_ControllerDwc30 = 12U, \/*!< DWC3 0U *\/$/;"	e	enum:_usb_controller_index
kUSB_ControllerDwc31	usb/include/usb.h	/^    kUSB_ControllerDwc31 =$/;"	e	enum:_usb_controller_index
kUSB_ControllerEhci0	usb/include/usb.h	/^    kUSB_ControllerEhci0 = 2U, \/*!< EHCI 0U *\/$/;"	e	enum:_usb_controller_index
kUSB_ControllerEhci1	usb/include/usb.h	/^    kUSB_ControllerEhci1 = 3U, \/*!< EHCI 1U, Currently, there are no platforms which have two EHCI IPs, this is reserved$/;"	e	enum:_usb_controller_index
kUSB_ControllerIp3516Hs0	usb/include/usb.h	/^    kUSB_ControllerIp3516Hs0 = 10U, \/*!< IP3516HS 0U *\/$/;"	e	enum:_usb_controller_index
kUSB_ControllerIp3516Hs1	usb/include/usb.h	/^    kUSB_ControllerIp3516Hs1 =$/;"	e	enum:_usb_controller_index
kUSB_ControllerKhci0	usb/include/usb.h	/^    kUSB_ControllerKhci0 = 0U, \/*!< KHCI 0U *\/$/;"	e	enum:_usb_controller_index
kUSB_ControllerKhci1	usb/include/usb.h	/^    kUSB_ControllerKhci1 = 1U, \/*!< KHCI 1U, Currently, there are no platforms which have two KHCI IPs, this is reserved$/;"	e	enum:_usb_controller_index
kUSB_ControllerLpcIp3511Fs0	usb/include/usb.h	/^    kUSB_ControllerLpcIp3511Fs0 = 4U, \/*!< LPC USB IP3511 FS controller 0 *\/$/;"	e	enum:_usb_controller_index
kUSB_ControllerLpcIp3511Fs1	usb/include/usb.h	/^    kUSB_ControllerLpcIp3511Fs1 =$/;"	e	enum:_usb_controller_index
kUSB_ControllerLpcIp3511Hs0	usb/include/usb.h	/^    kUSB_ControllerLpcIp3511Hs0 = 6U, \/*!< LPC USB IP3511 HS controller 0 *\/$/;"	e	enum:_usb_controller_index
kUSB_ControllerLpcIp3511Hs1	usb/include/usb.h	/^    kUSB_ControllerLpcIp3511Hs1 =$/;"	e	enum:_usb_controller_index
kUSB_ControllerOhci0	usb/include/usb.h	/^    kUSB_ControllerOhci0 = 8U, \/*!< OHCI 0U *\/$/;"	e	enum:_usb_controller_index
kUSB_ControllerOhci1	usb/include/usb.h	/^    kUSB_ControllerOhci1 = 9U, \/*!< OHCI 1U, Currently, there are no platforms which have two OHCI IPs, this is reserved$/;"	e	enum:_usb_controller_index
kUSB_DcdChargerTypeDetectionCompleted	usb/device/include/usb_device.h	/^    kUSB_DcdChargerTypeDetectionCompleted = 0x03U,$/;"	e	enum:_usb_dcd_detection_sequence_status
kUSB_DcdChargingPortDetectionCompleted	usb/device/include/usb_device.h	/^    kUSB_DcdChargingPortDetectionCompleted = 0x02U,$/;"	e	enum:_usb_dcd_detection_sequence_status
kUSB_DcdDataPinDetectionCompleted	usb/device/include/usb_device.h	/^    kUSB_DcdDataPinDetectionCompleted = 0x01U,$/;"	e	enum:_usb_dcd_detection_sequence_status
kUSB_DcdDetectionChargingPort	usb/device/include/usb_device.h	/^    kUSB_DcdDetectionChargingPort = 0x02U,$/;"	e	enum:_usb_dcd_detection_sequence_results
kUSB_DcdDetectionDedicatedCharger	usb/device/include/usb_device.h	/^    kUSB_DcdDetectionDedicatedCharger = 0x03U,$/;"	e	enum:_usb_dcd_detection_sequence_results
kUSB_DcdDetectionNoResults	usb/device/include/usb_device.h	/^    kUSB_DcdDetectionNoResults = 0x0U,$/;"	e	enum:_usb_dcd_detection_sequence_results
kUSB_DcdDetectionNotEnabled	usb/device/include/usb_device.h	/^    kUSB_DcdDetectionNotEnabled = 0x0U,$/;"	e	enum:_usb_dcd_detection_sequence_status
kUSB_DcdDetectionStandardHost	usb/device/include/usb_device.h	/^    kUSB_DcdDetectionStandardHost = 0x01U,$/;"	e	enum:_usb_dcd_detection_sequence_results
kUSB_DeviceAudioEventControlSendResponse	usb/device/class/usb_device_audio.h	/^    kUSB_DeviceAudioEventControlSendResponse,        \/*!< Send data completed or cancelled etc in audio control pipe *\/$/;"	e	enum:__anon510
kUSB_DeviceAudioEventStreamRecvResponse	usb/device/class/usb_device_audio.h	/^    kUSB_DeviceAudioEventStreamRecvResponse,         \/*!< Data received or cancelled etc in stream pipe *\/$/;"	e	enum:__anon510
kUSB_DeviceAudioEventStreamSendResponse	usb/device/class/usb_device_audio.h	/^    kUSB_DeviceAudioEventStreamSendResponse = 0x01U, \/*!< Send data completed or cancelled etc in stream pipe *\/$/;"	e	enum:__anon510
kUSB_DeviceCcidEventCommandAbort	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventCommandAbort,            \/*!< Command abort request received from control pipe*\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidEventCommandReceived	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventCommandReceived = 0x01U, \/*!< Command received or cancelled in BULK OUT pipe *\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidEventGetClockFrequencies	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventGetClockFrequencies,     \/*!< Get the clock frequencies *\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidEventGetDataRate	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventGetDataRate,             \/*!< Get the data rate *\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidEventGetSlotCount	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventGetSlotCount,            \/*!< Get the slot count *\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidEventGetSlotStatus	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventGetSlotStatus,           \/*!< Get the slot status, including clock status, ICC present.*\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidEventHardwareErrorSent	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventHardwareErrorSent,       \/*!< Hardware error notification send completed *\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidEventResponseSent	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventResponseSent,            \/*!< Response sent in BULK IN pipe *\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidEventSlotChangeSent	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidEventSlotChangeSent,          \/*!< Slot changed notification send completed *\/$/;"	e	enum:_usb_device_ccid_event
kUSB_DeviceCcidHardwareErrorOverCurrent	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidHardwareErrorOverCurrent = 0x01U, \/*!< Over current *\/$/;"	e	enum:_usb_device_ccid_hardware_error
kUSB_DeviceCcidSlotStateNoPresent	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidSlotStateNoPresent = 0x00U, \/*!< Not present *\/$/;"	e	enum:_usb_device_ccid_slot_state
kUSB_DeviceCcidSlotStatePresent	usb/device/class/usb_device_ccid.h	/^    kUSB_DeviceCcidSlotStatePresent = 0x01U    \/*!< Present *\/$/;"	e	enum:_usb_device_ccid_slot_state
kUSB_DeviceCdcEventAppGetLinkSpeed	usb/device/class/usb_device_cdc_rndis.h	/^    kUSB_DeviceCdcEventAppGetLinkSpeed,      \/*!< This event indicates to get the link speed of the Ethernet. *\/$/;"	e	enum:_rndis_event_enum
kUSB_DeviceCdcEventAppGetLinkStatus	usb/device/class/usb_device_cdc_rndis.h	/^    kUSB_DeviceCdcEventAppGetLinkStatus,     \/*!< This event indicates to get the link status of the Ethernet. *\/$/;"	e	enum:_rndis_event_enum
kUSB_DeviceCdcEventAppGetMacAddress	usb/device/class/usb_device_cdc_rndis.h	/^    kUSB_DeviceCdcEventAppGetMacAddress,     \/*!< This event indicates to get the mac address of the device. *\/$/;"	e	enum:_rndis_event_enum
kUSB_DeviceCdcEventAppGetMaxFrameSize	usb/device/class/usb_device_cdc_rndis.h	/^    kUSB_DeviceCdcEventAppGetMaxFrameSize    \/*!< This event indicates to get the Ethernet maximum frame size. *\/$/;"	e	enum:_rndis_event_enum
kUSB_DeviceCdcEventAppGetRecvPacketSize	usb/device/class/usb_device_cdc_rndis.h	/^    kUSB_DeviceCdcEventAppGetRecvPacketSize, \/*!< This event indicates to get the USB receive packet size. *\/$/;"	e	enum:_rndis_event_enum
kUSB_DeviceCdcEventAppGetSendPacketSize	usb/device/class/usb_device_cdc_rndis.h	/^    kUSB_DeviceCdcEventAppGetSendPacketSize, \/*!< This event indicates to get the USB send packet size. *\/$/;"	e	enum:_rndis_event_enum
kUSB_DeviceCdcEventClearCommFeature	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventClearCommFeature, \/*!< This event indicates the device received the CLEAR_COMM_FEATURE request.$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventGetCommFeature	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventGetCommFeature,   \/*!< This event indicates the device received the GET_COMM_FEATURE request. *\/$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventGetEncapsulatedResponse	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventGetEncapsulatedResponse, \/*!< This event indicates the device received the$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventGetLineCoding	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventGetLineCoding,    \/*!< This event indicates the device received the GET_LINE_CODING request. *\/$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventRecvResponse	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventRecvResponse,            \/*!< This event indicates the bulk receive transfer is complete or cancelled etc.. *\/$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventSendBreak	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventSendBreak            \/*!< This event indicates the device received the SEND_BREAK request. *\/$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventSendEncapsulatedCommand	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventSendEncapsulatedCommand, \/*!< This event indicates the device received the$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventSendResponse	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventSendResponse = 0x01,     \/*!< This event indicates the bulk send transfer is complete or cancelled etc. *\/$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventSerialStateNotif	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventSerialStateNotif,        \/*!< This event indicates the serial state has been sent to the host. *\/$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventSetCommFeature	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventSetCommFeature,   \/*!< This event indicates the device received the SET_COMM_FEATURE request. *\/$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventSetControlLineState	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventSetControlLineState, \/*!< This event indicates the device received the SET_CONTRL_LINE_STATE$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceCdcEventSetLineCoding	usb/device/class/usb_device_cdc_acm.h	/^    kUSB_DeviceCdcEventSetLineCoding,    \/*!< This event indicates the device received the SET_LINE_CODING request. *\/$/;"	e	enum:_usb_device_cdc_acm_event
kUSB_DeviceClassEventClassRequest	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassEventClassRequest = 1U,$/;"	e	enum:_usb_device_class_event
kUSB_DeviceClassEventClearEndpointHalt	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassEventClearEndpointHalt,$/;"	e	enum:_usb_device_class_event
kUSB_DeviceClassEventDeviceReset	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassEventDeviceReset,$/;"	e	enum:_usb_device_class_event
kUSB_DeviceClassEventSetConfiguration	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassEventSetConfiguration,$/;"	e	enum:_usb_device_class_event
kUSB_DeviceClassEventSetEndpointHalt	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassEventSetEndpointHalt,$/;"	e	enum:_usb_device_class_event
kUSB_DeviceClassEventSetInterface	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassEventSetInterface,$/;"	e	enum:_usb_device_class_event
kUSB_DeviceClassTypeAudio	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypeAudio,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceClassTypeCcid	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypeCcid,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceClassTypeCdc	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypeCdc,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceClassTypeDfu	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypeDfu,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceClassTypeHid	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypeHid = 1U,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceClassTypeMsc	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypeMsc,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceClassTypePhdc	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypePhdc,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceClassTypePrinter	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypePrinter,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceClassTypeVideo	usb/device/class/usb_device_class.h	/^    kUSB_DeviceClassTypeVideo,$/;"	e	enum:_usb_usb_device_class_type
kUSB_DeviceControlDcdDeinitModule	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlDcdDeinitModule,$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlDcdInitModule	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlDcdInitModule,$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlEndpointDeinit	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlEndpointDeinit,    \/*!< De-initialize a specified endpoint *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlEndpointInit	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlEndpointInit,      \/*!< Initialize a specified endpoint *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlEndpointStall	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlEndpointStall,     \/*!< Stall a specified endpoint *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlEndpointUnstall	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlEndpointUnstall,   \/*!< Un-stall a specified endpoint *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlGetDeviceStatus	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlGetDeviceStatus,   \/*!< Get device status *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlGetEndpointStatus	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlGetEndpointStatus, \/*!< Get endpoint status *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlGetOtgStatus	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlGetOtgStatus,      \/*!< Get OTG status *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlGetRemoteWakeUp	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlGetRemoteWakeUp,   \/*!< Get flag of LPM Remote Wake-up Enabled by USB host. *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlGetSpeed	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlGetSpeed,          \/*!< Get current speed *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlGetSynchFrame	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlGetSynchFrame,     \/*!< Get current frame *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlPipeDataStage	usb/device/source/usb_device_ch9.h	/^    kUSB_DeviceControlPipeDataStage,       \/*!< Data stage *\/$/;"	e	enum:_usb_device_control_read_write_sequence
kUSB_DeviceControlPipeSetupStage	usb/device/source/usb_device_ch9.h	/^    kUSB_DeviceControlPipeSetupStage = 0U, \/*!< Setup stage *\/$/;"	e	enum:_usb_device_control_read_write_sequence
kUSB_DeviceControlPipeStatusStage	usb/device/source/usb_device_ch9.h	/^    kUSB_DeviceControlPipeStatusStage,     \/*!< status stage *\/$/;"	e	enum:_usb_device_control_read_write_sequence
kUSB_DeviceControlPreSetDeviceAddress	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlPreSetDeviceAddress, \/*!< Pre set device address *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlResume	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlResume,            \/*!< Drive controller to generate a resume signal in USB bus *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlRun	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlRun = 0U,          \/*!< Enable the device functionality *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlSetDefaultStatus	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlSetDefaultStatus,  \/*!< Set controller to default status *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlSetDeviceAddress	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlSetDeviceAddress,  \/*!< Set device address *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlSetOtgStatus	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlSetOtgStatus,      \/*!< Set OTG status *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlSetTestMode	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlSetTestMode,       \/*!< Drive xCHI into test mode *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlSleep	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlSleep,             \/*!< Drive controller to enter into sleep mode *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlSleepResume	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlSleepResume,       \/*!< Drive controller to generate a LPM resume signal in USB bus *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlStop	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlStop,              \/*!< Disable the device functionality *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceControlSuspend	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceControlSuspend,           \/*!< Drive controller to enter into suspend mode *\/$/;"	e	enum:_usb_device_control_type
kUSB_DeviceDCDDevStatusAttached	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusAttached,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDDevStatusChargingPortDetect	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusChargingPortDetect,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDDevStatusComplete	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusComplete,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDDevStatusDataContactDetect	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusDataContactDetect,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDDevStatusDetached	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusDetached,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDDevStatusDetectFinish	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusDetectFinish,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDDevStatusTimeOut	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusTimeOut,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDDevStatusUnknownType	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusUnknownType,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDDevStatusVBUSDetect	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDDevStatusVBUSDetect = 0x0U,$/;"	e	enum:_usb_device_dcd_dev_status
kUSB_DeviceDCDPortTypeCDP	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDPortTypeCDP,$/;"	e	enum:_usb_device_dcd_port_type
kUSB_DeviceDCDPortTypeDCP	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDPortTypeDCP,$/;"	e	enum:_usb_device_dcd_port_type
kUSB_DeviceDCDPortTypeNoPort	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDPortTypeNoPort = 0x0U,$/;"	e	enum:_usb_device_dcd_port_type
kUSB_DeviceDCDPortTypeSDP	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceDCDPortTypeSDP,$/;"	e	enum:_usb_device_dcd_port_type
kUSB_DeviceEndpointStateIdle	usb/device/include/usb_device.h	/^    kUSB_DeviceEndpointStateIdle = 0U, \/*!< Endpoint state, idle*\/$/;"	e	enum:_usb_endpoint_status
kUSB_DeviceEndpointStateStalled	usb/device/include/usb_device.h	/^    kUSB_DeviceEndpointStateStalled,   \/*!< Endpoint state, stalled*\/$/;"	e	enum:_usb_endpoint_status
kUSB_DeviceEventAttach	usb/device/include/usb_device.h	/^    kUSB_DeviceEventAttach,    \/*!< USB device is connected to a host. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventBusReset	usb/device/include/usb_device.h	/^    kUSB_DeviceEventBusReset = 1U, \/*!< USB bus reset signal detected *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventChargingHostDetected	usb/device/include/usb_device.h	/^    kUSB_DeviceEventChargingHostDetected,     \/*!< The CDP facility is detected *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventChargingPortDetected	usb/device/include/usb_device.h	/^    kUSB_DeviceEventChargingPortDetected,     \/*!< The charging port is detected *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventDcdTimeOut	usb/device/include/usb_device.h	/^    kUSB_DeviceEventDcdTimeOut,               \/*!< Dcd detect result is timeout *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventDcdUnknownType	usb/device/include/usb_device.h	/^    kUSB_DeviceEventDcdUnknownType,           \/*!< Dcd detect result is unknown type *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventDedicatedChargerDetected	usb/device/include/usb_device.h	/^    kUSB_DeviceEventDedicatedChargerDetected, \/*!< The DCP facility is detected *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventDetach	usb/device/include/usb_device.h	/^    kUSB_DeviceEventDetach,    \/*!< USB device is disconnected from a host. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventError	usb/device/include/usb_device.h	/^    kUSB_DeviceEventError,     \/*!< An error is happened in the bus. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetBOSDescriptor	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetBOSDescriptor,             \/*!< Get configuration descriptor. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetConfiguration	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetConfiguration,             \/*!< Get current configuration index *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetConfigurationDescriptor	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetConfigurationDescriptor,   \/*!< Get configuration descriptor. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetDeviceDescriptor	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetDeviceDescriptor,          \/*!< Get device descriptor. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetDeviceQualifierDescriptor	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetDeviceQualifierDescriptor, \/*!< Get device qualifier descriptor. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetHidDescriptor	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetHidDescriptor,             \/*!< Get HID descriptor. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetHidPhysicalDescriptor	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetHidPhysicalDescriptor,     \/*!< Get HID physical descriptor. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetHidReportDescriptor	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetHidReportDescriptor,       \/*!< Get HID report descriptor. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetInterface	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetInterface,                 \/*!< Get current interface alternate setting value *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventGetStringDescriptor	usb/device/include/usb_device.h	/^    kUSB_DeviceEventGetStringDescriptor,          \/*!< Get string descriptor. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventLPMResume	usb/device/include/usb_device.h	/^    kUSB_DeviceEventLPMResume, \/*!< USB bus LPM resume signal detected. The resume signal is driven by itself or a host$/;"	e	enum:_usb_device_event
kUSB_DeviceEventResume	usb/device/include/usb_device.h	/^    kUSB_DeviceEventResume,    \/*!< USB bus resume signal detected. The resume signal is driven by itself or a host *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventSDPDetected	usb/device/include/usb_device.h	/^    kUSB_DeviceEventSDPDetected,              \/*!< The SDP facility is detected *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventSetBHNPEnable	usb/device/include/usb_device.h	/^    kUSB_DeviceEventSetBHNPEnable,$/;"	e	enum:_usb_device_event
kUSB_DeviceEventSetConfiguration	usb/device/include/usb_device.h	/^    kUSB_DeviceEventSetConfiguration, \/*!< Set configuration. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventSetInterface	usb/device/include/usb_device.h	/^    kUSB_DeviceEventSetInterface,     \/*!< Set interface. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventSetRemoteWakeup	usb/device/include/usb_device.h	/^    kUSB_DeviceEventSetRemoteWakeup,              \/*!< Enable or disable remote wakeup function. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventSleeped	usb/device/include/usb_device.h	/^    kUSB_DeviceEventSleeped,   \/*!< USB bus LPM suspend signal detected *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventSuspend	usb/device/include/usb_device.h	/^    kUSB_DeviceEventSuspend,       \/*!< USB bus suspend signal detected *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceEventVendorRequest	usb/device/include/usb_device.h	/^    kUSB_DeviceEventVendorRequest,                \/*!< Vendor request. *\/$/;"	e	enum:_usb_device_event
kUSB_DeviceHidEventGetIdle	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventGetIdle,              \/*!< Get idle request *\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceHidEventGetProtocol	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventGetProtocol,          \/*!< Get protocol request *\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceHidEventGetReport	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventGetReport,            \/*!< Get report request *\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceHidEventRecvResponse	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventRecvResponse,         \/*!< Data received or cancelled etc*\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceHidEventRequestReportBuffer	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventRequestReportBuffer,  \/*!< Get buffer to save the data of the set report request. *\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceHidEventSendResponse	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventSendResponse = 0x01U, \/*!< Send data completed or cancelled etc*\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceHidEventSetIdle	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventSetIdle,              \/*!< Set idle request *\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceHidEventSetProtocol	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventSetProtocol,          \/*!< Set protocol request *\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceHidEventSetReport	usb/device/class/usb_device_hid.h	/^    kUSB_DeviceHidEventSetReport,            \/*!< Set report request *\/$/;"	e	enum:_usb_device_hid_event
kUSB_DeviceMscEventFormatComplete	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventFormatComplete,    \/*!< Format complete *\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventGetLbaInformation	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventGetLbaInformation, \/*!< Get device information *\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventInquiry	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventInquiry,           \/*!<  Inquiry Command command*\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventModeSelect	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventModeSelect, \/*!<  mode select command, prepare data buffer and buffer length to store data for$/;"	e	enum:__anon501
kUSB_DeviceMscEventModeSelectResponse	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventModeSelectResponse, \/*!<  got data of mode select command*\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventModeSense	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventModeSense,         \/*!<  mode sense command*\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventReadRequest	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventReadRequest,  \/*!< Host want to read data from device through read command, device need prepare$/;"	e	enum:__anon501
kUSB_DeviceMscEventReadResponse	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventReadResponse = 0x01U, \/*!< host has already read the whole data from device or device send is cancelled etc*\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventRemovalRequest	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventRemovalRequest,     \/*!< Prevent_allow_medium_command *\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventSendDiagnostic	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventSendDiagnostic,     \/*!< Send Diagnostic command *\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventStopEjectMedia	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventStopEjectMedia,     \/*!< Start_stop_unit_command *\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventTestUnitReady	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventTestUnitReady,     \/*!<  Test Unit Ready command*\/$/;"	e	enum:__anon501
kUSB_DeviceMscEventWriteRequest	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventWriteRequest, \/*!< Host want to write data to device through write command, devcie need prepare$/;"	e	enum:__anon501
kUSB_DeviceMscEventWriteResponse	usb/device/class/usb_device_msc.h	/^    kUSB_DeviceMscEventWriteResponse,        \/*!< devcie has already received the data from host or device receive is cancelled etc. *\/$/;"	e	enum:__anon501
kUSB_DeviceNotifyAttach	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyAttach,           \/*!< Device connected to a host *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyBusReset	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyBusReset = 0x10U, \/*!< Reset signal detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyChargingHostDetected	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyChargingHostDetected,     \/*!< The CDP facility is detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyChargingPortDetected	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyChargingPortDetected,     \/*!< The charging port is detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyDcdTimeOut	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyDcdTimeOut,               \/*!< Device charger detection timeout *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyDcdUnknownPortType	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyDcdUnknownPortType,       \/*!< Device charger detection unknown port type *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyDedicatedChargerDetected	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyDedicatedChargerDetected, \/*!< The DCP facility is detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyDetach	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyDetach,           \/*!< Device disconnected from a host *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyError	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyError,            \/*!< Errors happened in bus *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyLPMResume	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyLPMResume,        \/*!< Resume signal detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyLPMSleep	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyLPMSleep,         \/*!< LPM signal detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifyResume	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifyResume,           \/*!< Resume signal detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifySDPDetected	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifySDPDetected,              \/*!< The SDP facility is detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DeviceNotifySuspend	usb/device/source/usb_device_dci.h	/^    kUSB_DeviceNotifySuspend,          \/*!< Suspend signal detected *\/$/;"	e	enum:_usb_device_notification
kUSB_DevicePhdcEventBulkInSendComplete	usb/device/class/usb_device_phdc.h	/^    kUSB_DevicePhdcEventBulkInSendComplete,             \/*!< Send data completed or cancelled etc*\/$/;"	e	enum:__anon502
kUSB_DevicePhdcEventClearFeature	usb/device/class/usb_device_phdc.h	/^    kUSB_DevicePhdcEventClearFeature,                   \/*!< Clear feature request *\/$/;"	e	enum:__anon502
kUSB_DevicePhdcEventDataReceived	usb/device/class/usb_device_phdc.h	/^    kUSB_DevicePhdcEventDataReceived,                   \/*!< Data received or cancelled etc*\/$/;"	e	enum:__anon502
kUSB_DevicePhdcEventGetStatus	usb/device/class/usb_device_phdc.h	/^    kUSB_DevicePhdcEventGetStatus,                      \/*!< Get status request *\/$/;"	e	enum:__anon502
kUSB_DevicePhdcEventInterruptInSendComplete	usb/device/class/usb_device_phdc.h	/^    kUSB_DevicePhdcEventInterruptInSendComplete = 0x01, \/*!< Send data completed or cancelled etc*\/$/;"	e	enum:__anon502
kUSB_DevicePhdcEventSetFeature	usb/device/class/usb_device_phdc.h	/^    kUSB_DevicePhdcEventSetFeature,                     \/*!< Set feature request *\/$/;"	e	enum:__anon502
kUSB_DevicePrinterEventGetDeviceId	usb/device/class/usb_device_printer.h	/^    kUSB_DevicePrinterEventGetDeviceId,          \/*!< Get device ID request *\/$/;"	e	enum:_usb_device_printer_event
kUSB_DevicePrinterEventGetPortStatus	usb/device/class/usb_device_printer.h	/^    kUSB_DevicePrinterEventGetPortStatus,        \/*!< Get port status request *\/$/;"	e	enum:_usb_device_printer_event
kUSB_DevicePrinterEventRecvResponse	usb/device/class/usb_device_printer.h	/^    kUSB_DevicePrinterEventRecvResponse = 0x01U, \/*!< Data received or cancelled etc*\/$/;"	e	enum:_usb_device_printer_event
kUSB_DevicePrinterEventSendResponse	usb/device/class/usb_device_printer.h	/^    kUSB_DevicePrinterEventSendResponse,         \/*!< Data send done or cancelled etc *\/$/;"	e	enum:_usb_device_printer_event
kUSB_DevicePrinterEventSoftReset	usb/device/class/usb_device_printer.h	/^    kUSB_DevicePrinterEventSoftReset,            \/*!< Soft reset request *\/$/;"	e	enum:_usb_device_printer_event
kUSB_DeviceStateAddress	usb/device/include/usb_device.h	/^    kUSB_DeviceStateAddress,         \/*!< Device state, Address*\/$/;"	e	enum:_usb_device_state
kUSB_DeviceStateAddressing	usb/device/include/usb_device.h	/^    kUSB_DeviceStateAddressing,      \/*!< Device state, Address setting*\/$/;"	e	enum:_usb_device_state
kUSB_DeviceStateConfigured	usb/device/include/usb_device.h	/^    kUSB_DeviceStateConfigured = 0U, \/*!< Device state, Configured*\/$/;"	e	enum:_usb_device_state
kUSB_DeviceStateDefault	usb/device/include/usb_device.h	/^    kUSB_DeviceStateDefault,         \/*!< Device state, Default*\/$/;"	e	enum:_usb_device_state
kUSB_DeviceStateTestMode	usb/device/include/usb_device.h	/^    kUSB_DeviceStateTestMode,        \/*!< Device state, Test mode*\/$/;"	e	enum:_usb_device_state
kUSB_DeviceStatusAddress	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusAddress,        \/*!< Device address *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusBus	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusBus,            \/*!< Bus status *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusBusResume	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusBusResume,      \/*!< Bus resume *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusBusSleep	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusBusSleep,       \/*!< Bus suspend *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusBusSleepResume	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusBusSleepResume, \/*!< Bus resume *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusBusSuspend	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusBusSuspend,     \/*!< Bus suspend *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusDevice	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusDevice,         \/*!< Device status *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusDeviceState	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusDeviceState,    \/*!< Device state *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusEndpoint	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusEndpoint,       \/*!< Endpoint state usb_device_endpoint_status_t *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusOtg	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusOtg,            \/*!< OTG status *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusRemoteWakeup	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusRemoteWakeup,   \/*!< Remote wakeup state *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusSpeed	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusSpeed,          \/*!< Current speed *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusSynchFrame	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusSynchFrame,     \/*!< Current frame *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceStatusTestMode	usb/device/include/usb_device.h	/^    kUSB_DeviceStatusTestMode = 1U,  \/*!< Test mode *\/$/;"	e	enum:_usb_device_status
kUSB_DeviceVideoEventClassRequestBuffer	usb/device/class/usb_device_video.h	/^    kUSB_DeviceVideoEventClassRequestBuffer, \/*!< Get buffer to save the data of the video class-specific request. *\/$/;"	e	enum:_usb_device_video_event
kUSB_DeviceVideoEventControlSendResponse	usb/device/class/usb_device_video.h	/^    kUSB_DeviceVideoEventControlSendResponse,        \/*!< Send data completed or cancelled etc in video control pipe *\/$/;"	e	enum:_usb_device_video_event
kUSB_DeviceVideoEventStreamRecvResponse	usb/device/class/usb_device_video.h	/^    kUSB_DeviceVideoEventStreamRecvResponse,         \/*!< Data received or cancelled in stream pipe *\/$/;"	e	enum:_usb_device_video_event
kUSB_DeviceVideoEventStreamSendResponse	usb/device/class/usb_device_video.h	/^    kUSB_DeviceVideoEventStreamSendResponse = 0x01U, \/*!< Send data completed or cancelled in stream pipe *\/$/;"	e	enum:_usb_device_video_event
kUSB_KhciInterruptAttach	usb/device/source/khci/usb_device_khci.h	/^    kUSB_KhciInterruptAttach = 0x40U,$/;"	e	enum:_usb_khci_interrupt_type
kUSB_KhciInterruptError	usb/device/source/khci/usb_device_khci.h	/^    kUSB_KhciInterruptError = 0x02U,$/;"	e	enum:_usb_khci_interrupt_type
kUSB_KhciInterruptReset	usb/device/source/khci/usb_device_khci.h	/^    kUSB_KhciInterruptReset = 0x01U,$/;"	e	enum:_usb_khci_interrupt_type
kUSB_KhciInterruptResume	usb/device/source/khci/usb_device_khci.h	/^    kUSB_KhciInterruptResume = 0x20U,$/;"	e	enum:_usb_khci_interrupt_type
kUSB_KhciInterruptSleep	usb/device/source/khci/usb_device_khci.h	/^    kUSB_KhciInterruptSleep = 0x10U,$/;"	e	enum:_usb_khci_interrupt_type
kUSB_KhciInterruptSofToken	usb/device/source/khci/usb_device_khci.h	/^    kUSB_KhciInterruptSofToken = 0x04U,$/;"	e	enum:_usb_khci_interrupt_type
kUSB_KhciInterruptStall	usb/device/source/khci/usb_device_khci.h	/^    kUSB_KhciInterruptStall = 0x80U,$/;"	e	enum:_usb_khci_interrupt_type
kUSB_KhciInterruptTokenDone	usb/device/source/khci/usb_device_khci.h	/^    kUSB_KhciInterruptTokenDone = 0x08U,$/;"	e	enum:_usb_khci_interrupt_type
kUSB_OsaEventAutoClear	osa/usb_osa.h	/^    kUSB_OsaEventAutoClear = 1U,   \/*!< The flags of the event is cleared automatically. *\/$/;"	e	enum:_usb_osa_event_mode
kUSB_OsaEventManualClear	osa/usb_osa.h	/^    kUSB_OsaEventManualClear = 0U, \/*!< The flags of the event is cleared manually. *\/$/;"	e	enum:_usb_osa_event_mode
kUSB_PLL_to_ADC_CLK	drivers/fsl_clock.h	/^    kUSB_PLL_to_ADC_CLK   = MUX_A(CM_ADCASYNCCLKSEL, 2),$/;"	e	enum:_clock_attach_id
kUSB_PLL_to_CLKOUT	drivers/fsl_clock.h	/^    kUSB_PLL_to_CLKOUT    = MUX_A(CM_CLKOUTCLKSELA, 5),$/;"	e	enum:_clock_attach_id
kUSB_PLL_to_FLEXCOMM10	drivers/fsl_clock.h	/^    kUSB_PLL_to_FLEXCOMM10   = MUX_A(CM_FXCOMCLKSEL10, 2),$/;"	e	enum:_clock_attach_id
kUSB_PLL_to_SDIO_CLK	drivers/fsl_clock.h	/^    kUSB_PLL_to_SDIO_CLK   = MUX_A(CM_SDIOCLKSEL, 2),$/;"	e	enum:_clock_attach_id
kUSB_PLL_to_SPIFI_CLK	drivers/fsl_clock.h	/^    kUSB_PLL_to_SPIFI_CLK   = MUX_A(CM_SPIFICLKSEL, 2),$/;"	e	enum:_clock_attach_id
kUSB_PLL_to_USB0_CLK	drivers/fsl_clock.h	/^    kUSB_PLL_to_USB0_CLK = MUX_A(CM_USB0CLKSEL, 2),$/;"	e	enum:_clock_attach_id
kUSB_PLL_to_USB1_CLK	drivers/fsl_clock.h	/^    kUSB_PLL_to_USB1_CLK = MUX_A(CM_USB1CLKSEL, 2),$/;"	e	enum:_clock_attach_id
kUTICK_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kUTICK_RST_SHIFT_RSTn = 65536 | 10U,     \/**< Micro-tick timer reset control *\/$/;"	e	enum:_SYSCON_RSTn
kWDT_OSC_to_CLKOUT	drivers/fsl_clock.h	/^    kWDT_OSC_to_CLKOUT    = MUX_A(CM_CLKOUTCLKSELA, 2),$/;"	e	enum:_clock_attach_id
kWDT_OSC_to_DMIC	drivers/fsl_clock.h	/^    kWDT_OSC_to_DMIC    = MUX_A(CM_DMICCLKSEL, 5),$/;"	e	enum:_clock_attach_id
kWDT_OSC_to_MAIN_CLK	drivers/fsl_clock.h	/^    kWDT_OSC_to_MAIN_CLK = MUX_A(CM_MAINCLKSELA, 2) | MUX_B(CM_MAINCLKSELB, 0, 0),$/;"	e	enum:_clock_attach_id
kWDT_OSC_to_SYSTICKCLK	drivers/fsl_clock.h	/^    kWDT_OSC_to_SYSTICKCLK         = MUX_A(CM_STICKCLKSEL, 1),$/;"	e	enum:_clock_attach_id
kWDT_OSC_to_SYS_PLL	drivers/fsl_clock.h	/^    kWDT_OSC_to_SYS_PLL = MUX_A(CM_SYSPLLCLKSEL, 2),$/;"	e	enum:_clock_attach_id
kWM8904_BitWidth16	codec/fsl_wm8904.h	/^    kWM8904_BitWidth16 = 0x0, \/*!< 16 bits *\/$/;"	e	enum:_wm8904_bit_width
kWM8904_BitWidth20	codec/fsl_wm8904.h	/^    kWM8904_BitWidth20 = 0x1, \/*!< 20 bits *\/$/;"	e	enum:_wm8904_bit_width
kWM8904_BitWidth24	codec/fsl_wm8904.h	/^    kWM8904_BitWidth24 = 0x2, \/*!< 24 bits *\/$/;"	e	enum:_wm8904_bit_width
kWM8904_BitWidth32	codec/fsl_wm8904.h	/^    kWM8904_BitWidth32 = 0x3  \/*!< 32 bits *\/$/;"	e	enum:_wm8904_bit_width
kWM8904_FsRatio1024X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio1024X = 0x7, \/*!< SYSCLK is 1024 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio128X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio128X  = 0x1, \/*!< SYSCLK is  128 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio1408X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio1408X = 0x8, \/*!< SYSCLK is 1408 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio1536X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio1536X = 0x9  \/*!< SYSCLK is 1536 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio192X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio192X  = 0x2, \/*!< SYSCLK is  192 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio256X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio256X  = 0x3, \/*!< SYSCLK is  256 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio384X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio384X  = 0x4, \/*!< SYSCLK is  384 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio512X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio512X  = 0x5, \/*!< SYSCLK is  512 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio64X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio64X   = 0x0, \/*!< SYSCLK is   64 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_FsRatio768X	codec/fsl_wm8904.h	/^    kWM8904_FsRatio768X  = 0x6, \/*!< SYSCLK is  768 * sample rate * frame width *\/$/;"	e	enum:_wm8904_fs_ratio
kWM8904_HeadphoneLeft	codec/fsl_wm8904.h	/^    kWM8904_HeadphoneLeft  = 1U,$/;"	e	enum:_wm8904_play_channel
kWM8904_HeadphoneRight	codec/fsl_wm8904.h	/^    kWM8904_HeadphoneRight = 2U,$/;"	e	enum:_wm8904_play_channel
kWM8904_LRCPolarityInverted	codec/fsl_wm8904.h	/^    kWM8904_LRCPolarityInverted = 1U << 4U, \/*!< LRC polarity inverted *\/$/;"	e	enum:_wm8904_lrc_polarity
kWM8904_LRCPolarityNormal	codec/fsl_wm8904.h	/^    kWM8904_LRCPolarityNormal   = 0U,       \/*!< LRC polarity  normal *\/$/;"	e	enum:_wm8904_lrc_polarity
kWM8904_LineoutLeft	codec/fsl_wm8904.h	/^    kWM8904_LineoutLeft    = 4U,$/;"	e	enum:_wm8904_play_channel
kWM8904_LineoutRight	codec/fsl_wm8904.h	/^    kWM8904_LineoutRight   = 8U,$/;"	e	enum:_wm8904_play_channel
kWM8904_ModuleADC	codec/fsl_wm8904.h	/^    kWM8904_ModuleADC       = 0, \/*!< moduel ADC *\/$/;"	e	enum:_wm8904_module
kWM8904_ModuleDAC	codec/fsl_wm8904.h	/^    kWM8904_ModuleDAC       = 1, \/*!< module DAC *\/$/;"	e	enum:_wm8904_module
kWM8904_ModuleHeadphone	codec/fsl_wm8904.h	/^    kWM8904_ModuleHeadphone = 3, \/*!< module headphone *\/$/;"	e	enum:_wm8904_module
kWM8904_ModuleLineout	codec/fsl_wm8904.h	/^    kWM8904_ModuleLineout   = 4, \/*!< module line out *\/$/;"	e	enum:_wm8904_module
kWM8904_ModulePGA	codec/fsl_wm8904.h	/^    kWM8904_ModulePGA       = 2, \/*!< module PGA *\/$/;"	e	enum:_wm8904_module
kWM8904_PlaySourceDAC	codec/fsl_wm8904.h	/^    kWM8904_PlaySourceDAC = 4U, \/*!< play source Input3 *\/$/;"	e	enum:_wm8904_play_source
kWM8904_PlaySourcePGA	codec/fsl_wm8904.h	/^    kWM8904_PlaySourcePGA = 1U, \/*!< play source PGA, bypass ADC *\/$/;"	e	enum:_wm8904_play_source
kWM8904_ProtocolI2S	codec/fsl_wm8904.h	/^    kWM8904_ProtocolI2S            = 0x2,            \/*!< I2S type *\/$/;"	e	enum:_wm8904_protocol
kWM8904_ProtocolLeftJustified	codec/fsl_wm8904.h	/^    kWM8904_ProtocolLeftJustified  = 0x1,            \/*!< Left justified mode *\/$/;"	e	enum:_wm8904_protocol
kWM8904_ProtocolPCMA	codec/fsl_wm8904.h	/^    kWM8904_ProtocolPCMA           = 0x3,            \/*!< PCM A mode *\/$/;"	e	enum:_wm8904_protocol
kWM8904_ProtocolPCMB	codec/fsl_wm8904.h	/^    kWM8904_ProtocolPCMB           = 0x3 | (1 << 4), \/*!< PCM B mode *\/$/;"	e	enum:_wm8904_protocol
kWM8904_ProtocolRightJustified	codec/fsl_wm8904.h	/^    kWM8904_ProtocolRightJustified = 0x0,            \/*!< Right justified mode *\/$/;"	e	enum:_wm8904_protocol
kWM8904_RecordChannelDifferentialNegative1	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelDifferentialNegative1 = 8U,  \/*!< differential negative record channel 1 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelDifferentialNegative2	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelDifferentialNegative2 = 16U, \/*!< differential negative record channel 2 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelDifferentialNegative3	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelDifferentialNegative3 = 32U, \/*!< differential negative record channel 3 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelDifferentialPositive1	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelDifferentialPositive1 = 1U,  \/*!< differential positive record channel 1 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelDifferentialPositive2	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelDifferentialPositive2 = 2U,  \/*!< differential positive record channel 2 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelDifferentialPositive3	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelDifferentialPositive3 = 4U,  \/*!< differential positive record channel 3 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelLeft1	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelLeft1                 = 1U,  \/*!< left record channel 1 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelLeft2	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelLeft2                 = 2U,  \/*!< left record channel 2 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelLeft3	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelLeft3                 = 4U,  \/*!< left record channel 3 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelRight1	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelRight1                = 1U,  \/*!< right record channel 1 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelRight2	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelRight2                = 2U,  \/*!< right record channel 2 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordChannelRight3	codec/fsl_wm8904.h	/^    kWM8904_RecordChannelRight3                = 4U,  \/*!< right record channel 3 *\/$/;"	e	enum:_wm8904_record_channel
kWM8904_RecordSourceDifferentialLine	codec/fsl_wm8904.h	/^    kWM8904_RecordSourceDifferentialLine = 1U, \/*!< record source from differential line *\/$/;"	e	enum:_wm8904_record_source
kWM8904_RecordSourceDifferentialMic	codec/fsl_wm8904.h	/^    kWM8904_RecordSourceDifferentialMic  = 4U, \/*!< record source from differential mic *\/$/;"	e	enum:_wm8904_record_source
kWM8904_RecordSourceDigitalMic	codec/fsl_wm8904.h	/^    kWM8904_RecordSourceDigitalMic       = 8U, \/*!< record source from digital microphone *\/$/;"	e	enum:_wm8904_record_source
kWM8904_RecordSourceLineInput	codec/fsl_wm8904.h	/^    kWM8904_RecordSourceLineInput        = 2U, \/*!< record source from line input *\/$/;"	e	enum:_wm8904_record_source
kWM8904_SampleRate12kHz	codec/fsl_wm8904.h	/^    kWM8904_SampleRate12kHz = 0x1, \/*!< 11.025kHz, 12kHz *\/$/;"	e	enum:_wm8904_sample_rate
kWM8904_SampleRate16kHz	codec/fsl_wm8904.h	/^    kWM8904_SampleRate16kHz = 0x2, \/*!< 16kHz *\/$/;"	e	enum:_wm8904_sample_rate
kWM8904_SampleRate24kHz	codec/fsl_wm8904.h	/^    kWM8904_SampleRate24kHz = 0x3, \/*!< 22.05kHz, 24kHz *\/$/;"	e	enum:_wm8904_sample_rate
kWM8904_SampleRate32kHz	codec/fsl_wm8904.h	/^    kWM8904_SampleRate32kHz = 0x4, \/*!< 32kHz *\/$/;"	e	enum:_wm8904_sample_rate
kWM8904_SampleRate48kHz	codec/fsl_wm8904.h	/^    kWM8904_SampleRate48kHz = 0x5  \/*!< 44.1kHz, 48kHz *\/$/;"	e	enum:_wm8904_sample_rate
kWM8904_SampleRate8kHz	codec/fsl_wm8904.h	/^    kWM8904_SampleRate8kHz  = 0x0, \/*!< 8 kHz *\/$/;"	e	enum:_wm8904_sample_rate
kWM8904_TimeSlot0	codec/fsl_wm8904.h	/^    kWM8904_TimeSlot0 = 0U, \/*!< time slot0 *\/$/;"	e	enum:_wm8904_timeslot
kWM8904_TimeSlot1	codec/fsl_wm8904.h	/^    kWM8904_TimeSlot1 = 1U, \/*!< time slot1 *\/$/;"	e	enum:_wm8904_timeslot
kWWDT_RST_SHIFT_RSTn	drivers/fsl_reset.h	/^    kWWDT_RST_SHIFT_RSTn = 0 | 22U,          \/**< Watchdog timer reset control *\/$/;"	e	enum:_SYSCON_RSTn
kWaitForCompletionState	drivers/fsl_i2c.h	/^    kWaitForCompletionState$/;"	e	enum:_i2c_transfer_states
keep_cnt	lwip/src/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	lwip/src/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	lwip/src/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	lwip/src/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
keylen	lwip/src/include/netif/ppp/mppe.h	/^	u8_t keylen;                \/* key length in bytes *\/$/;"	m	struct:ppp_mppe_state
kf_bfly2	codec2/kiss_fft.c	/^static void kf_bfly2($/;"	f	file:
kf_bfly3	codec2/kiss_fft.c	/^static void kf_bfly3($/;"	f	file:
kf_bfly4	codec2/kiss_fft.c	/^static void kf_bfly4($/;"	f	file:
kf_bfly5	codec2/kiss_fft.c	/^static void kf_bfly5($/;"	f	file:
kf_bfly_generic	codec2/kiss_fft.c	/^static void kf_bfly_generic($/;"	f	file:
kf_cexp	codec2/_kiss_fft_guts.h	141;"	d
kf_factor	codec2/kiss_fft.c	/^void kf_factor(int n,int * facbuf)$/;"	f	file:
kf_work	codec2/kiss_fft.c	/^void kf_work($/;"	f	file:
kiss_fft	codec2/kiss_fft.c	/^void kiss_fft(kiss_fft_cfg cfg,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)$/;"	f
kiss_fft_alloc	codec2/kiss_fft.c	/^kiss_fft_cfg kiss_fft_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem )$/;"	f
kiss_fft_cfg	codec2/kiss_fft.h	/^typedef struct kiss_fft_state* kiss_fft_cfg;$/;"	t	typeref:struct:kiss_fft_state
kiss_fft_cleanup	codec2/kiss_fft.c	/^void kiss_fft_cleanup(void)$/;"	f
kiss_fft_cpx	codec2/kiss_fft.h	/^}kiss_fft_cpx;$/;"	t	typeref:struct:__anon131
kiss_fft_free	codec2/kiss_fft.h	102;"	d
kiss_fft_next_fast_size	codec2/kiss_fft.c	/^int kiss_fft_next_fast_size(int n)$/;"	f
kiss_fft_scalar	codec2/kiss_fft.h	28;"	d
kiss_fft_scalar	codec2/kiss_fft.h	40;"	d
kiss_fft_scalar	codec2/kiss_fft.h	42;"	d
kiss_fft_scalar	codec2/kiss_fft.h	47;"	d
kiss_fft_state	codec2/_kiss_fft_guts.h	/^struct kiss_fft_state{$/;"	s
kiss_fft_stride	codec2/kiss_fft.c	/^void kiss_fft_stride(kiss_fft_cfg st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout,int in_stride)$/;"	f
kiss_fftr	codec2/kiss_fftr.c	/^void kiss_fftr(kiss_fftr_cfg st,const kiss_fft_scalar *timedata,kiss_fft_cpx *freqdata)$/;"	f
kiss_fftr_alloc	codec2/kiss_fftr.c	/^kiss_fftr_cfg kiss_fftr_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem)$/;"	f
kiss_fftr_cfg	codec2/kiss_fftr.h	/^typedef struct kiss_fftr_state *kiss_fftr_cfg;$/;"	t	typeref:struct:kiss_fftr_state
kiss_fftr_free	codec2/kiss_fftr.h	41;"	d
kiss_fftr_next_fast_size_real	codec2/kiss_fft.h	117;"	d
kiss_fftr_state	codec2/kiss_fftr.c	/^struct kiss_fftr_state{$/;"	s	file:
kiss_fftri	codec2/kiss_fftr.c	/^void kiss_fftri(kiss_fftr_cfg st,const kiss_fft_cpx *freqdata,kiss_fft_scalar *timedata)$/;"	f
l2tpcreate	lwip/src/include/netif/ppp/pppapi.h	/^    } l2tpcreate;$/;"	m	union:pppapi_msg_msg::__anon435	typeref:struct:pppapi_msg_msg::__anon435::__anon439
l_linger	lwip/src/include/lwip/sockets.h	/^  int l_linger;               \/* linger time in seconds *\/$/;"	m	struct:linger
l_onoff	lwip/src/include/lwip/sockets.h	/^  int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
languageId	usb/device/class/usb_device_class.h	/^    uint16_t languageId; \/*!< Language ID. *\/$/;"	m	struct:_usb_device_get_string_descriptor_struct
languageId	usb/include/usb_spec.h	/^    uint16_t languageId; \/* The language id of current language *\/$/;"	m	struct:_usb_language
languageList	usb/include/usb_spec.h	/^    usb_language_t *languageList; \/* The language list *\/$/;"	m	struct:_usb_language_list
languageString	usb/include/usb_spec.h	/^    uint8_t *languageString;      \/* The String 0U pointer *\/$/;"	m	struct:_usb_language_list
lastLogicalBlockAddress	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t lastLogicalBlockAddress; \/*!< Last Logical Block Address*\/$/;"	m	struct:_usb_device_read_capacity_struct
lastLogicalBlockAddress0	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t lastLogicalBlockAddress0; \/*!<  Last Logical Block Address*\/$/;"	m	struct:_usb_device_read_capacity16_data_struct
lastLogicalBlockAddress1	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t lastLogicalBlockAddress1; \/*!<  Last Logical Block Address*\/$/;"	m	struct:_usb_device_read_capacity16_data_struct
lastWord	drivers/fsl_spi_dma.c	/^    uint32_t lastWord;$/;"	m	struct:_spi_dma_txdummy	file:
last_cs	lwip/src/include/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	lwip/src/include/netif/ppp/vj.h	/^  u8_t last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	lwip/src/include/lwip/igmp.h	/^  u8_t               last_reporter_flag;$/;"	m	struct:igmp_group
last_reporter_flag	lwip/src/include/lwip/mld6.h	/^  u8_t               last_reporter_flag;$/;"	m	struct:mld_group
last_sync_state	codec2/ofdm_internal.h	/^    char last_sync_state[OFDM_STATE_STR];$/;"	m	struct:OFDM
last_sync_state_interleaver	codec2/ofdm_internal.h	/^    char last_sync_state_interleaver[OFDM_STATE_STR];$/;"	m	struct:OFDM
last_timer	lwip/src/include/lwip/tcp.h	/^  u8_t last_timer;$/;"	m	struct:tcp_pcb
last_xmit	lwip/src/include/netif/ppp/pppos.h	/^  u32_t last_xmit;                 \/* Time of last transmission. *\/$/;"	m	struct:pppos_pcb_s
last_xmit	lwip/src/include/netif/ppp/vj.h	/^  u8_t last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	lwip/src/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	lwip/src/include/lwip/autoip.h	/^  u8_t lastconflict;$/;"	m	struct:autoip
lastdata	lwip/src/include/lwip/priv/sockets_priv.h	/^  union lwip_sock_lastdata lastdata;$/;"	m	struct:lwip_sock	typeref:union:lwip_sock::lwip_sock_lastdata
lax_recv	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  lax_recv            :1;      \/* accept control chars in asyncmap *\/$/;"	m	struct:ppp_settings_s
lb	lwip/src/include/lwip/priv/api_msg.h	/^    } lb;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::__anon462
lba	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t lba;              \/*!< Logical Block Address*\/$/;"	m	struct:_usb_device_read_capacities_command_struct
lba	usb/device/class/usb_device_msc_ufi.h	/^    uint32_t lba;              \/*!< Logical Block Address*\/$/;"	m	struct:_usb_device_read_write_10_command_struct
lbaInformation	usb/device/class/usb_device_msc.h	/^    usb_lba_transfer_information_struct_t lbaInformation; \/*!< Read\/write information*\/$/;"	m	struct:_usb_device_msc_thirteen_case_struct
lbaSendRecvSelect	usb/device/class/usb_device_msc.h	/^    uint8_t lbaSendRecvSelect;                            \/*!< Whether the command is read or write command*\/$/;"	m	struct:_usb_device_msc_thirteen_case_struct
lcp_ackci	lwip/src/netif/ppp/lcp.c	/^static int lcp_ackci(fsm *f, u_char *p, int len) {$/;"	f	file:
lcp_addci	lwip/src/netif/ppp/lcp.c	/^static void lcp_addci(fsm *f, u_char *ucp, int *lenp) {$/;"	f	file:
lcp_allowoptions	lwip/src/include/netif/ppp/ppp.h	/^  lcp_options lcp_allowoptions;  \/* Options we allow peer to request *\/$/;"	m	struct:ppp_pcb_s
lcp_callbacks	lwip/src/netif/ppp/lcp.c	/^static const fsm_callbacks lcp_callbacks = {	\/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	lwip/src/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f) {$/;"	f	file:
lcp_close	lwip/src/netif/ppp/lcp.c	/^void lcp_close(ppp_pcb *pcb, const char *reason) {$/;"	f
lcp_codenames	lwip/src/netif/ppp/lcp.c	/^static const char* const lcp_codenames[] = {$/;"	v	file:
lcp_delayed_up	lwip/src/netif/ppp/lcp.c	/^static void lcp_delayed_up(void *arg) {$/;"	f	file:
lcp_down	lwip/src/netif/ppp/lcp.c	/^static void lcp_down(fsm *f) {$/;"	f	file:
lcp_echo_adaptive	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int lcp_echo_adaptive    :1;      \/* request echo only if the link was idle *\/$/;"	m	struct:ppp_settings_s
lcp_echo_fails	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  lcp_echo_fails;       \/* Tolerance to unanswered echo-requests *\/$/;"	m	struct:ppp_settings_s
lcp_echo_interval	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  lcp_echo_interval;    \/* Interval between LCP echo-requests *\/$/;"	m	struct:ppp_settings_s
lcp_echo_lowerdown	lwip/src/netif/ppp/lcp.c	/^static void lcp_echo_lowerdown(ppp_pcb *pcb) {$/;"	f	file:
lcp_echo_lowerup	lwip/src/netif/ppp/lcp.c	/^static void lcp_echo_lowerup(ppp_pcb *pcb) {$/;"	f	file:
lcp_echo_number	lwip/src/include/netif/ppp/ppp.h	/^  u8_t lcp_echo_number;          \/* ID number of next echo frame *\/$/;"	m	struct:ppp_pcb_s
lcp_echo_timer_running	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int lcp_echo_timer_running  :1; \/* set if a timer is running *\/$/;"	m	struct:ppp_pcb_s
lcp_echos_pending	lwip/src/include/netif/ppp/ppp.h	/^  u8_t lcp_echos_pending;        \/* Number of outstanding echo msgs *\/$/;"	m	struct:ppp_pcb_s
lcp_extcode	lwip/src/netif/ppp/lcp.c	/^static int lcp_extcode(fsm *f, int code, int id, u_char *inp, int len) {$/;"	f	file:
lcp_finished	lwip/src/netif/ppp/lcp.c	/^static void lcp_finished(fsm *f) {$/;"	f	file:
lcp_fsm	lwip/src/include/netif/ppp/ppp.h	/^  fsm lcp_fsm;                   \/* LCP fsm structure *\/$/;"	m	struct:ppp_pcb_s
lcp_gotoptions	lwip/src/include/netif/ppp/ppp.h	/^  lcp_options lcp_gotoptions;    \/* Options that peer ack'd *\/$/;"	m	struct:ppp_pcb_s
lcp_hisoptions	lwip/src/include/netif/ppp/ppp.h	/^  lcp_options lcp_hisoptions;    \/* Options that we ack'd *\/$/;"	m	struct:ppp_pcb_s
lcp_init	lwip/src/netif/ppp/lcp.c	/^static void lcp_init(ppp_pcb *pcb) {$/;"	f	file:
lcp_input	lwip/src/netif/ppp/lcp.c	/^static void lcp_input(ppp_pcb *pcb, u_char *p, int len) {$/;"	f	file:
lcp_loopbackfail	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  lcp_loopbackfail;     \/* Number of times we receive our magic number from the peer$/;"	m	struct:ppp_settings_s
lcp_lowerdown	lwip/src/netif/ppp/lcp.c	/^void lcp_lowerdown(ppp_pcb *pcb) {$/;"	f
lcp_lowerup	lwip/src/netif/ppp/lcp.c	/^void lcp_lowerup(ppp_pcb *pcb) {$/;"	f
lcp_nakci	lwip/src/netif/ppp/lcp.c	/^static int lcp_nakci(fsm *f, u_char *p, int len, int treat_as_reject) {$/;"	f	file:
lcp_open	lwip/src/netif/ppp/lcp.c	/^void lcp_open(ppp_pcb *pcb) {$/;"	f
lcp_option_list	lwip/src/netif/ppp/lcp.c	/^static option_t lcp_option_list[] = {$/;"	v	file:
lcp_options	lwip/src/include/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	lwip/src/include/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_printpkt	lwip/src/netif/ppp/lcp.c	/^static int lcp_printpkt(const u_char *p, int plen,$/;"	f	file:
lcp_protent	lwip/src/netif/ppp/lcp.c	/^const struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	lwip/src/netif/ppp/lcp.c	/^static void lcp_protrej(ppp_pcb *pcb) {$/;"	f	file:
lcp_received_echo_reply	lwip/src/netif/ppp/lcp.c	/^static void lcp_received_echo_reply(fsm *f, int id, u_char *inp, int len) {$/;"	f	file:
lcp_rejci	lwip/src/netif/ppp/lcp.c	/^static int lcp_rejci(fsm *f, u_char *p, int len) {$/;"	f	file:
lcp_reqci	lwip/src/netif/ppp/lcp.c	/^static int lcp_reqci(fsm *f, u_char *inp, int *lenp, int reject_if_disagree) {$/;"	f	file:
lcp_resetci	lwip/src/netif/ppp/lcp.c	/^static void lcp_resetci(fsm *f) {$/;"	f	file:
lcp_rprotrej	lwip/src/netif/ppp/lcp.c	/^static void lcp_rprotrej(fsm *f, u_char *inp, int len) {$/;"	f	file:
lcp_sprotrej	lwip/src/netif/ppp/lcp.c	/^void lcp_sprotrej(ppp_pcb *pcb, u_char *p, int len) {$/;"	f
lcp_starting	lwip/src/netif/ppp/lcp.c	/^static void lcp_starting(fsm *f) {$/;"	f	file:
lcp_up	lwip/src/netif/ppp/lcp.c	/^static void lcp_up(fsm *f) {$/;"	f	file:
lcp_wantoptions	lwip/src/include/netif/ppp/ppp.h	/^  lcp_options lcp_wantoptions;   \/* Options that we want to request *\/$/;"	m	struct:ppp_pcb_s
lease_used	lwip/src/include/lwip/dhcp.h	/^  u16_t lease_used; \/* #ticks with period DHCP_COARSE_TIMER_SECS since last received DHCP ack *\/$/;"	m	struct:dhcp
left	lwip/src/include/lwip/tcp.h	/^  u32_t left;$/;"	m	struct:tcp_sack_range
leftJust	drivers/fsl_i2s.h	/^    bool leftJust;                  \/*!< Left justify data in FIFO *\/$/;"	m	struct:_i2s_config
len	lwip/src/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	lwip/src/include/lwip/api.h	/^  size_t len;$/;"	m	struct:netvector
len	lwip/src/include/lwip/pbuf.h	/^  u16_t len;$/;"	m	struct:pbuf
len	lwip/src/include/lwip/priv/api_msg.h	/^      size_t len;$/;"	m	struct:api_msg::__anon454::__anon458
len	lwip/src/include/lwip/priv/api_msg.h	/^      size_t len;$/;"	m	struct:api_msg::__anon454::__anon459
len	lwip/src/include/lwip/priv/tcp_priv.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	lwip/src/netif/ppp/utils.c	/^    int len;$/;"	m	struct:buffer_info	file:
lenerr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
length	component/serial_manager/serial_manager.c	/^    volatile uint32_t length;$/;"	m	struct:_serial_manager_transfer	file:
length	component/serial_manager/serial_manager.h	/^    uint32_t length; \/*!< Transferred data length *\/$/;"	m	struct:_serial_manager_callback_message
length	component/serial_manager/serial_port_uart.c	/^    uint32_t length;$/;"	m	struct:_serial_uart_send_state	file:
length	lwip/src/include/netif/ppp/lcp.h	/^    unsigned char	length;$/;"	m	struct:epdisc
length	lwip/src/netif/ppp/demand.c	/^    int length;$/;"	m	struct:packet	file:
length	usb/device/class/usb_device_ccid.h	/^    uint32_t length;                                 \/*!< The transfer length *\/$/;"	m	struct:_usb_device_ccid_transfer_struct
length	usb/device/class/usb_device_ccid.h	/^    uint32_t length; \/*!< The data length *\/$/;"	m	struct:_usb_device_ccid_control_request_struct
length	usb/device/class/usb_device_ccid.h	/^    uint32_t length; \/*!< The transferred data length *\/$/;"	m	struct:_usb_device_ccid_notification_struct
length	usb/device/class/usb_device_cdc_acm.h	/^    uint32_t *length;        \/*!< The pointer to the length of the buffer for CDC class request. *\/$/;"	m	struct:_usb_device_cdc_acm_request_param_struct
length	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t length; \/*!< The length of the buffer for RNDIS request. *\/$/;"	m	struct:_usb_device_cdc_rndis_request_param_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length;           \/*!< Pass the buffer length or requested length. *\/$/;"	m	struct:_usb_device_control_request_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length;         \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_hid_descriptor_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length;         \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_hid_physical_descriptor_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length;         \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_hid_report_descriptor_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length;       \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_configuration_descriptor_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length;     \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_string_descriptor_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length; \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_bos_descriptor_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length; \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_descriptor_common_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length; \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_device_descriptor_struct
length	usb/device/class/usb_device_class.h	/^    uint32_t length; \/*!< Pass the buffer length. *\/$/;"	m	struct:_usb_device_get_device_qualifier_descriptor_struct
length	usb/device/class/usb_device_printer.h	/^    uint32_t length;          \/*!< The class specific request buffer length *\/$/;"	m	struct:_usb_device_printer_class_request
length	usb/device/include/usb_device.h	/^    uint32_t length; \/*!< Transferred data length *\/$/;"	m	struct:_usb_device_endpoint_callback_message_struct
length	usb/device/source/usb_device_dci.h	/^    uint32_t length; \/*!< Transferred data length *\/$/;"	m	struct:_usb_device_callback_message_struct
length	usb/include/usb_spec.h	/^    uint32_t *length;    \/* The strings descriptor length array *\/$/;"	m	struct:_usb_language
lengthOfEachLba	usb/device/class/usb_device_msc.h	/^    uint32_t lengthOfEachLba;           \/*!< Length of each block*\/$/;"	m	struct:_usb_device_logical_unit_information_struct
level	drivers/fsl_sctimer.h	/^    sctimer_pwm_level_select_t level; \/*!< PWM output active level select. *\/$/;"	m	struct:_sctimer_pwm_signal_param
level	lwip/src/include/lwip/priv/sockets_priv.h	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data
levinson_durbin	codec2/lpc.c	/^void levinson_durbin($/;"	f
lfree	lwip/src/core/mem.c	/^static struct mem * LWIP_MEM_LFREE_VOLATILE lfree;$/;"	v	typeref:struct:LWIP_MEM_LFREE_VOLATILE	file:
lfs	littlefs/littlefs_include/lfs.h	/^typedef struct lfs {$/;"	s
lfs_alloc	littlefs/littlefs_source/lfs.c	/^static int lfs_alloc(lfs_t *lfs, lfs_block_t *block) {$/;"	f	file:
lfs_alloc_ack	littlefs/littlefs_source/lfs.c	/^static void lfs_alloc_ack(lfs_t *lfs) {$/;"	f	file:
lfs_alloc_lookahead	littlefs/littlefs_source/lfs.c	/^static int lfs_alloc_lookahead(void *p, lfs_block_t block) {$/;"	f	file:
lfs_bd_cmp	littlefs/littlefs_source/lfs.c	/^static int lfs_bd_cmp(lfs_t *lfs, lfs_block_t block,$/;"	f	file:
lfs_bd_crc	littlefs/littlefs_source/lfs.c	/^static int lfs_bd_crc(lfs_t *lfs, lfs_block_t block,$/;"	f	file:
lfs_bd_erase	littlefs/littlefs_source/lfs.c	/^static int lfs_bd_erase(lfs_t *lfs, lfs_block_t block) {$/;"	f	file:
lfs_bd_prog	littlefs/littlefs_source/lfs.c	/^static int lfs_bd_prog(lfs_t *lfs, lfs_block_t block,$/;"	f	file:
lfs_bd_read	littlefs/littlefs_source/lfs.c	/^static int lfs_bd_read(lfs_t *lfs, lfs_block_t block,$/;"	f	file:
lfs_bd_sync	littlefs/littlefs_source/lfs.c	/^static int lfs_bd_sync(lfs_t *lfs) {$/;"	f	file:
lfs_block_t	littlefs/littlefs_include/lfs.h	/^typedef uint32_t lfs_block_t;$/;"	t
lfs_cache	littlefs/littlefs_include/lfs.h	/^typedef struct lfs_cache {$/;"	s
lfs_cache_cmp	littlefs/littlefs_source/lfs.c	/^static int lfs_cache_cmp(lfs_t *lfs, lfs_cache_t *rcache,$/;"	f	file:
lfs_cache_crc	littlefs/littlefs_source/lfs.c	/^static int lfs_cache_crc(lfs_t *lfs, lfs_cache_t *rcache,$/;"	f	file:
lfs_cache_flush	littlefs/littlefs_source/lfs.c	/^static int lfs_cache_flush(lfs_t *lfs,$/;"	f	file:
lfs_cache_prog	littlefs/littlefs_source/lfs.c	/^static int lfs_cache_prog(lfs_t *lfs, lfs_cache_t *pcache,$/;"	f	file:
lfs_cache_read	littlefs/littlefs_source/lfs.c	/^static int lfs_cache_read(lfs_t *lfs, lfs_cache_t *rcache,$/;"	f	file:
lfs_cache_t	littlefs/littlefs_include/lfs.h	/^} lfs_cache_t;$/;"	t	typeref:struct:lfs_cache
lfs_config	littlefs/littlefs_include/lfs.h	/^struct lfs_config {$/;"	s
lfs_crc	littlefs/littlefs_source/lfs_util.c	/^void lfs_crc(uint32_t *restrict crc, const void *buffer, size_t size) {$/;"	f
lfs_ctz	littlefs/littlefs_include/lfs_util.h	/^static inline uint32_t lfs_ctz(uint32_t a) {$/;"	f
lfs_ctz_extend	littlefs/littlefs_source/lfs.c	/^static int lfs_ctz_extend(lfs_t *lfs,$/;"	f	file:
lfs_ctz_find	littlefs/littlefs_source/lfs.c	/^static int lfs_ctz_find(lfs_t *lfs,$/;"	f	file:
lfs_ctz_index	littlefs/littlefs_source/lfs.c	/^static int lfs_ctz_index(lfs_t *lfs, lfs_off_t *off) {$/;"	f	file:
lfs_ctz_traverse	littlefs/littlefs_source/lfs.c	/^static int lfs_ctz_traverse(lfs_t *lfs,$/;"	f	file:
lfs_deinit	littlefs/littlefs_source/lfs.c	/^static int lfs_deinit(lfs_t *lfs) {$/;"	f	file:
lfs_deorphan	littlefs/littlefs_source/lfs.c	/^int lfs_deorphan(lfs_t *lfs) {$/;"	f
lfs_dir	littlefs/littlefs_include/lfs.h	/^typedef struct lfs_dir {$/;"	s
lfs_dir_alloc	littlefs/littlefs_source/lfs.c	/^static int lfs_dir_alloc(lfs_t *lfs, lfs_dir_t *dir) {$/;"	f	file:
lfs_dir_append	littlefs/littlefs_source/lfs.c	/^static int lfs_dir_append(lfs_t *lfs, lfs_dir_t *dir,$/;"	f	file:
lfs_dir_close	littlefs/littlefs_source/lfs.c	/^int lfs_dir_close(lfs_t *lfs, lfs_dir_t *dir) {$/;"	f
lfs_dir_commit	littlefs/littlefs_source/lfs.c	/^static int lfs_dir_commit(lfs_t *lfs, lfs_dir_t *dir,$/;"	f	file:
lfs_dir_fetch	littlefs/littlefs_source/lfs.c	/^static int lfs_dir_fetch(lfs_t *lfs,$/;"	f	file:
lfs_dir_find	littlefs/littlefs_source/lfs.c	/^static int lfs_dir_find(lfs_t *lfs, lfs_dir_t *dir,$/;"	f	file:
lfs_dir_fromle32	littlefs/littlefs_source/lfs.c	/^static void lfs_dir_fromle32(struct lfs_disk_dir *d) {$/;"	f	file:
lfs_dir_next	littlefs/littlefs_source/lfs.c	/^static int lfs_dir_next(lfs_t *lfs, lfs_dir_t *dir, lfs_entry_t *entry) {$/;"	f	file:
lfs_dir_open	littlefs/littlefs_source/lfs.c	/^int lfs_dir_open(lfs_t *lfs, lfs_dir_t *dir, const char *path) {$/;"	f
lfs_dir_read	littlefs/littlefs_source/lfs.c	/^int lfs_dir_read(lfs_t *lfs, lfs_dir_t *dir, struct lfs_info *info) {$/;"	f
lfs_dir_remove	littlefs/littlefs_source/lfs.c	/^static int lfs_dir_remove(lfs_t *lfs, lfs_dir_t *dir, lfs_entry_t *entry) {$/;"	f	file:
lfs_dir_rewind	littlefs/littlefs_source/lfs.c	/^int lfs_dir_rewind(lfs_t *lfs, lfs_dir_t *dir) {$/;"	f
lfs_dir_seek	littlefs/littlefs_source/lfs.c	/^int lfs_dir_seek(lfs_t *lfs, lfs_dir_t *dir, lfs_off_t off) {$/;"	f
lfs_dir_t	littlefs/littlefs_include/lfs.h	/^} lfs_dir_t;$/;"	t	typeref:struct:lfs_dir
lfs_dir_tell	littlefs/littlefs_source/lfs.c	/^lfs_soff_t lfs_dir_tell(lfs_t *lfs, lfs_dir_t *dir) {$/;"	f
lfs_dir_tole32	littlefs/littlefs_source/lfs.c	/^static void lfs_dir_tole32(struct lfs_disk_dir *d) {$/;"	f	file:
lfs_dir_update	littlefs/littlefs_source/lfs.c	/^static int lfs_dir_update(lfs_t *lfs, lfs_dir_t *dir,$/;"	f	file:
lfs_disk_dir	littlefs/littlefs_include/lfs.h	/^    struct lfs_disk_dir {$/;"	s	struct:lfs_dir
lfs_disk_entry	littlefs/littlefs_include/lfs.h	/^    struct lfs_disk_entry {$/;"	s	struct:lfs_entry
lfs_disk_superblock	littlefs/littlefs_include/lfs.h	/^    struct lfs_disk_superblock {$/;"	s	struct:lfs_superblock
lfs_entry	littlefs/littlefs_include/lfs.h	/^typedef struct lfs_entry {$/;"	s
lfs_entry_fromle32	littlefs/littlefs_source/lfs.c	/^static void lfs_entry_fromle32(struct lfs_disk_entry *d) {$/;"	f	file:
lfs_entry_size	littlefs/littlefs_source/lfs.c	/^static inline lfs_size_t lfs_entry_size(const lfs_entry_t *entry) {$/;"	f	file:
lfs_entry_t	littlefs/littlefs_include/lfs.h	/^} lfs_entry_t;$/;"	t	typeref:struct:lfs_entry
lfs_entry_tole32	littlefs/littlefs_source/lfs.c	/^static void lfs_entry_tole32(struct lfs_disk_entry *d) {$/;"	f	file:
lfs_error	littlefs/littlefs_include/lfs.h	/^enum lfs_error {$/;"	g
lfs_file	littlefs/littlefs_include/lfs.h	/^typedef struct lfs_file {$/;"	s
lfs_file_close	littlefs/littlefs_source/lfs.c	/^int lfs_file_close(lfs_t *lfs, lfs_file_t *file) {$/;"	f
lfs_file_flush	littlefs/littlefs_source/lfs.c	/^static int lfs_file_flush(lfs_t *lfs, lfs_file_t *file) {$/;"	f	file:
lfs_file_open	littlefs/littlefs_source/lfs.c	/^int lfs_file_open(lfs_t *lfs, lfs_file_t *file,$/;"	f
lfs_file_read	littlefs/littlefs_source/lfs.c	/^lfs_ssize_t lfs_file_read(lfs_t *lfs, lfs_file_t *file,$/;"	f
lfs_file_relocate	littlefs/littlefs_source/lfs.c	/^static int lfs_file_relocate(lfs_t *lfs, lfs_file_t *file) {$/;"	f	file:
lfs_file_rewind	littlefs/littlefs_source/lfs.c	/^int lfs_file_rewind(lfs_t *lfs, lfs_file_t *file) {$/;"	f
lfs_file_seek	littlefs/littlefs_source/lfs.c	/^lfs_soff_t lfs_file_seek(lfs_t *lfs, lfs_file_t *file,$/;"	f
lfs_file_size	littlefs/littlefs_source/lfs.c	/^lfs_soff_t lfs_file_size(lfs_t *lfs, lfs_file_t *file) {$/;"	f
lfs_file_sync	littlefs/littlefs_source/lfs.c	/^int lfs_file_sync(lfs_t *lfs, lfs_file_t *file) {$/;"	f
lfs_file_t	littlefs/littlefs_include/lfs.h	/^} lfs_file_t;$/;"	t	typeref:struct:lfs_file
lfs_file_tell	littlefs/littlefs_source/lfs.c	/^lfs_soff_t lfs_file_tell(lfs_t *lfs, lfs_file_t *file) {$/;"	f
lfs_file_truncate	littlefs/littlefs_source/lfs.c	/^int lfs_file_truncate(lfs_t *lfs, lfs_file_t *file, lfs_off_t size) {$/;"	f
lfs_file_write	littlefs/littlefs_source/lfs.c	/^lfs_ssize_t lfs_file_write(lfs_t *lfs, lfs_file_t *file,$/;"	f
lfs_format	littlefs/littlefs_source/lfs.c	/^int lfs_format(lfs_t *lfs, const struct lfs_config *cfg) {$/;"	f
lfs_free	littlefs/littlefs_include/lfs.h	/^typedef struct lfs_free {$/;"	s
lfs_free	littlefs/littlefs_include/lfs_util.h	/^static inline void lfs_free(void *p) {$/;"	f
lfs_free_t	littlefs/littlefs_include/lfs.h	/^} lfs_free_t;$/;"	t	typeref:struct:lfs_free
lfs_fromle32	littlefs/littlefs_include/lfs_util.h	/^static inline uint32_t lfs_fromle32(uint32_t a) {$/;"	f
lfs_info	littlefs/littlefs_include/lfs.h	/^struct lfs_info {$/;"	s
lfs_init	littlefs/littlefs_source/lfs.c	/^static int lfs_init(lfs_t *lfs, const struct lfs_config *cfg) {$/;"	f	file:
lfs_malloc	littlefs/littlefs_include/lfs_util.h	/^static inline void *lfs_malloc(size_t size) {$/;"	f
lfs_max	littlefs/littlefs_include/lfs_util.h	/^static inline uint32_t lfs_max(uint32_t a, uint32_t b) {$/;"	f
lfs_min	littlefs/littlefs_include/lfs_util.h	/^static inline uint32_t lfs_min(uint32_t a, uint32_t b) {$/;"	f
lfs_mkdir	littlefs/littlefs_source/lfs.c	/^int lfs_mkdir(lfs_t *lfs, const char *path) {$/;"	f
lfs_mount	littlefs/littlefs_source/lfs.c	/^int lfs_mount(lfs_t *lfs, const struct lfs_config *cfg) {$/;"	f
lfs_moved	littlefs/littlefs_source/lfs.c	/^static int lfs_moved(lfs_t *lfs, const void *e) {$/;"	f	file:
lfs_npw2	littlefs/littlefs_include/lfs_util.h	/^static inline uint32_t lfs_npw2(uint32_t a) {$/;"	f
lfs_off_t	littlefs/littlefs_include/lfs.h	/^typedef uint32_t lfs_off_t;$/;"	t
lfs_open_flags	littlefs/littlefs_include/lfs.h	/^enum lfs_open_flags {$/;"	g
lfs_paircmp	littlefs/littlefs_source/lfs.c	/^static inline int lfs_paircmp($/;"	f	file:
lfs_pairisnull	littlefs/littlefs_source/lfs.c	/^static inline bool lfs_pairisnull(const lfs_block_t pair[2]) {$/;"	f	file:
lfs_pairswap	littlefs/littlefs_source/lfs.c	/^static inline void lfs_pairswap(lfs_block_t pair[2]) {$/;"	f	file:
lfs_pairsync	littlefs/littlefs_source/lfs.c	/^static inline bool lfs_pairsync($/;"	f	file:
lfs_parent	littlefs/littlefs_source/lfs.c	/^static int lfs_parent(lfs_t *lfs, const lfs_block_t dir[2],$/;"	f	file:
lfs_popc	littlefs/littlefs_include/lfs_util.h	/^static inline uint32_t lfs_popc(uint32_t a) {$/;"	f
lfs_pred	littlefs/littlefs_source/lfs.c	/^static int lfs_pred(lfs_t *lfs, const lfs_block_t dir[2], lfs_dir_t *pdir) {$/;"	f	file:
lfs_region	littlefs/littlefs_source/lfs.c	/^struct lfs_region {$/;"	s	file:
lfs_relocate	littlefs/littlefs_source/lfs.c	/^static int lfs_relocate(lfs_t *lfs,$/;"	f	file:
lfs_remove	littlefs/littlefs_source/lfs.c	/^int lfs_remove(lfs_t *lfs, const char *path) {$/;"	f
lfs_rename	littlefs/littlefs_source/lfs.c	/^int lfs_rename(lfs_t *lfs, const char *oldpath, const char *newpath) {$/;"	f
lfs_scmp	littlefs/littlefs_include/lfs_util.h	/^static inline int lfs_scmp(uint32_t a, uint32_t b) {$/;"	f
lfs_size_t	littlefs/littlefs_include/lfs.h	/^typedef uint32_t lfs_size_t;$/;"	t
lfs_soff_t	littlefs/littlefs_include/lfs.h	/^typedef int32_t  lfs_soff_t;$/;"	t
lfs_ssize_t	littlefs/littlefs_include/lfs.h	/^typedef int32_t  lfs_ssize_t;$/;"	t
lfs_stat	littlefs/littlefs_source/lfs.c	/^int lfs_stat(lfs_t *lfs, const char *path, struct lfs_info *info) {$/;"	f
lfs_superblock	littlefs/littlefs_include/lfs.h	/^typedef struct lfs_superblock {$/;"	s
lfs_superblock_fromle32	littlefs/littlefs_source/lfs.c	/^static void lfs_superblock_fromle32(struct lfs_disk_superblock *d) {$/;"	f	file:
lfs_superblock_t	littlefs/littlefs_include/lfs.h	/^} lfs_superblock_t;$/;"	t	typeref:struct:lfs_superblock
lfs_superblock_tole32	littlefs/littlefs_source/lfs.c	/^static void lfs_superblock_tole32(struct lfs_disk_superblock *d) {$/;"	f	file:
lfs_t	littlefs/littlefs_include/lfs.h	/^} lfs_t;$/;"	t	typeref:struct:lfs
lfs_tole32	littlefs/littlefs_include/lfs_util.h	/^static inline uint32_t lfs_tole32(uint32_t a) {$/;"	f
lfs_traverse	littlefs/littlefs_source/lfs.c	/^int lfs_traverse(lfs_t *lfs, int (*cb)(void*, lfs_block_t), void *data) {$/;"	f
lfs_type	littlefs/littlefs_include/lfs.h	/^enum lfs_type {$/;"	g
lfs_unmount	littlefs/littlefs_source/lfs.c	/^int lfs_unmount(lfs_t *lfs) {$/;"	f
lfs_whence_flags	littlefs/littlefs_include/lfs.h	/^enum lfs_whence_flags {$/;"	g
line	lwip/src/include/lwip/priv/memp_priv.h	/^  int line;$/;"	m	struct:memp
lineCoding	vcom/virtual_com.h	/^    uint8_t *lineCoding;         \/* Line coding of cdc device *\/$/;"	m	struct:_usb_cdc_vcom_struct
linger	lwip/src/include/lwip/api.h	/^  s16_t linger;$/;"	m	struct:netconn
linger	lwip/src/include/lwip/sockets.h	/^struct linger {$/;"	s
link	component/serial_manager/serial_manager.c	/^    list_element_t link; \/*!< list element of the link *\/$/;"	m	struct:_serial_manager_send_handle	file:
link	lwip/src/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkNum	drivers/fsl_dmic_dma.h	/^    size_t linkNum;            \/*!< number of descriptor in descriptors pool *\/$/;"	m	struct:_dmic_dma_handle
linkToNextDesc	drivers/fsl_dma.h	/^    void *linkToNextDesc;      \/*!< Address of next DMA descriptor in chain *\/$/;"	m	struct:_dma_descriptor
linkTransfer	drivers/fsl_dmic_dma.h	/^    struct _dmic_transfer *linkTransfer; \/*!< use to support link transfer *\/$/;"	m	struct:_dmic_transfer	typeref:struct:_dmic_transfer::_dmic_transfer
link_callback	lwip/src/include/lwip/netif.h	/^  netif_status_callback_fn link_callback;$/;"	m	struct:netif
link_callbacks	lwip/src/include/netif/ppp/ppp_impl.h	/^struct link_callbacks {$/;"	s
link_cb	lwip/src/include/netif/ppp/ppp.h	/^  const struct link_callbacks *link_cb;$/;"	m	struct:ppp_pcb_s	typeref:struct:ppp_pcb_s::link_callbacks
link_changed	lwip/src/include/lwip/netif.h	/^  } link_changed;$/;"	m	union:__anon451	typeref:struct:__anon451::link_changed_s
link_changed_s	lwip/src/include/lwip/netif.h	/^  struct link_changed_s$/;"	s	union:__anon451
link_connect_time	lwip/src/netif/ppp/ppp.c	/^unsigned link_connect_time;$/;"	v
link_ctx_cb	lwip/src/include/netif/ppp/ppp.h	/^  void *link_ctx_cb;$/;"	m	struct:ppp_pcb_s
link_down	lwip/src/netif/ppp/auth.c	/^void link_down(ppp_pcb *pcb) {$/;"	f
link_down_notifier	lwip/src/netif/ppp/auth.c	/^struct notifier *link_down_notifier = NULL;$/;"	v	typeref:struct:notifier
link_established	lwip/src/netif/ppp/auth.c	/^void link_established(ppp_pcb *pcb) {$/;"	f
link_required	lwip/src/netif/ppp/auth.c	/^void link_required(ppp_pcb *pcb) {$/;"	f
link_speed	lwip/src/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_stats	lwip/src/netif/ppp/ppp.c	/^struct pppd_stats link_stats;$/;"	v	typeref:struct:pppd_stats
link_stats_valid	lwip/src/netif/ppp/ppp.c	/^int link_stats_valid;$/;"	v
link_status_cb	lwip/src/include/netif/ppp/ppp.h	/^  void (*link_status_cb)(ppp_pcb *pcb, int err_code, void *ctx);  \/* Status change callback *\/$/;"	m	struct:ppp_pcb_s
link_status_cb	lwip/src/include/netif/ppp/pppapi.h	/^      ppp_link_status_cb_fn link_status_cb;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon437
link_status_cb	lwip/src/include/netif/ppp/pppapi.h	/^      ppp_link_status_cb_fn link_status_cb;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon438
link_status_cb	lwip/src/include/netif/ppp/pppapi.h	/^      ppp_link_status_cb_fn link_status_cb;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon439
link_terminated	lwip/src/netif/ppp/auth.c	/^void link_terminated(ppp_pcb *pcb) {$/;"	f
link_type	lwip/src/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	lwip/src/include/lwip/netif.h	/^  netif_linkoutput_fn linkoutput;$/;"	m	struct:netif
list	codec2/mbest.h	/^    struct MBEST_LIST *list;$/;"	m	struct:MBEST	typeref:struct:MBEST::MBEST_LIST
list	component/lists/generic_list.h	/^    struct list_tag *list;         \/*!< pointer to the list *\/$/;"	m	struct:list_element_tag	typeref:struct:list_element_tag::list_tag
listCURRENT_LIST_LENGTH	amazon-freertos/include/list.h	255;"	d
listFIRST_LIST_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	108;"	d
listFIRST_LIST_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	120;"	d
listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	106;"	d
listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	118;"	d
listGET_END_MARKER	amazon-freertos/include/list.h	241;"	d
listGET_HEAD_ENTRY	amazon-freertos/include/list.h	225;"	d
listGET_ITEM_VALUE_OF_HEAD_ENTRY	amazon-freertos/include/list.h	217;"	d
listGET_LIST_ITEM_OWNER	amazon-freertos/include/list.h	189;"	d
listGET_LIST_ITEM_VALUE	amazon-freertos/include/list.h	208;"	d
listGET_NEXT	amazon-freertos/include/list.h	233;"	d
listGET_OWNER_OF_HEAD_ENTRY	amazon-freertos/include/list.h	307;"	d
listGET_OWNER_OF_NEXT_ENTRY	amazon-freertos/include/list.h	277;"	d
listIS_CONTAINED_WITHIN	amazon-freertos/include/list.h	318;"	d
listLIST_IS_EMPTY	amazon-freertos/include/list.h	250;"	d
listLIST_IS_INITIALISED	amazon-freertos/include/list.h	333;"	d
listLIST_ITEM_CONTAINER	amazon-freertos/include/list.h	326;"	d
listSECOND_LIST_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	109;"	d
listSECOND_LIST_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	121;"	d
listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	107;"	d
listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	119;"	d
listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	110;"	d
listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	124;"	d
listSET_LIST_INTEGRITY_CHECK_1_VALUE	amazon-freertos/include/list.h	112;"	d
listSET_LIST_INTEGRITY_CHECK_1_VALUE	amazon-freertos/include/list.h	126;"	d
listSET_LIST_INTEGRITY_CHECK_2_VALUE	amazon-freertos/include/list.h	113;"	d
listSET_LIST_INTEGRITY_CHECK_2_VALUE	amazon-freertos/include/list.h	127;"	d
listSET_LIST_ITEM_OWNER	amazon-freertos/include/list.h	180;"	d
listSET_LIST_ITEM_VALUE	amazon-freertos/include/list.h	198;"	d
listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	111;"	d
listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE	amazon-freertos/include/list.h	125;"	d
listTEST_LIST_INTEGRITY	amazon-freertos/include/list.h	115;"	d
listTEST_LIST_INTEGRITY	amazon-freertos/include/list.h	132;"	d
listTEST_LIST_ITEM_INTEGRITY	amazon-freertos/include/list.h	114;"	d
listTEST_LIST_ITEM_INTEGRITY	amazon-freertos/include/list.h	131;"	d
list_element_handle_t	component/lists/generic_list.h	/^} list_element_t, *list_element_handle_t;$/;"	t	typeref:struct:list_element_tag
list_element_t	component/lists/generic_list.h	/^} list_element_t, *list_element_handle_t;$/;"	t	typeref:struct:list_element_tag
list_element_tag	component/lists/generic_list.h	/^typedef struct list_element_tag$/;"	s
list_handle_t	component/lists/generic_list.h	/^} list_t, *list_handle_t;$/;"	t	typeref:struct:list_tag
list_status_t	component/lists/generic_list.h	/^} list_status_t;$/;"	t	typeref:enum:_list_status
list_t	component/lists/generic_list.h	/^} list_t, *list_handle_t;$/;"	t	typeref:struct:list_tag
list_tag	component/lists/generic_list.h	/^typedef struct list_tag$/;"	s
listen	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_listen_fn             listen;$/;"	m	struct:altcp_functions
listen	lwip/src/include/lwip/sockets.h	632;"	d
listen	lwip/src/include/netif/ppp/ppp_impl.h	/^  void (*listen) (ppp_pcb *pcb, void *ctx);$/;"	m	struct:link_callbacks
listen_pcbs	lwip/src/include/lwip/priv/tcp_priv.h	/^  struct tcp_pcb_listen *listen_pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
listen_time	lwip/src/include/netif/ppp/ppp.h	/^  u16_t  listen_time;                 \/* time to listen first (ms), waiting for peer to send LCP packet *\/$/;"	m	struct:ppp_settings_s
listener	lwip/src/include/lwip/tcp.h	/^  struct tcp_pcb_listen* listener;$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_pcb_listen
lladdr	lwip/src/core/ipv6/nd6.c	/^  struct lladdr_option  lladdr;$/;"	m	union:ra_options	typeref:struct:ra_options::lladdr_option	file:
lladdr	lwip/src/include/lwip/priv/nd6_priv.h	/^  u8_t lladdr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:nd6_neighbor_cache_entry
lladdr_option	lwip/src/include/lwip/prot/nd6.h	/^struct lladdr_option {$/;"	s
llipaddr	lwip/src/include/lwip/autoip.h	/^  ip4_addr_t llipaddr;$/;"	m	struct:autoip
llv6_ntoa	lwip/src/netif/ppp/ipv6cp.c	/^llv6_ntoa(eui64_t ifaceid)$/;"	f	file:
local	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg::__anon454::__anon457
local_hostlist_dynamic	lwip/src/core/dns.c	/^static struct local_hostlist_entry *local_hostlist_dynamic;$/;"	v	typeref:struct:local_hostlist_entry	file:
local_hostlist_entry	lwip/src/include/lwip/dns.h	/^struct local_hostlist_entry {$/;"	s
local_port	lwip/src/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
locate_lsps_jnd_steps	codec2/quantise.c	/^void locate_lsps_jnd_steps(float lsps[], int order)$/;"	f
lock_tcpip_core	lwip/src/api/tcpip.c	/^sys_mutex_t lock_tcpip_core;$/;"	v
log2m	codec2/defines.h	/^    int			log2m;    \/* number of bits in m	*\/$/;"	m	struct:lsp_codebook
log_debug	source/logging.h	67;"	d
log_error	source/logging.h	40;"	d
log_info	source/logging.h	60;"	d
log_notice	source/logging.h	53;"	d
log_warning	source/logging.h	46;"	d
logging_level	source/common.c	/^int logging_level= LOG_INFO;$/;"	v
logging_vputs	source/common.c	/^int logging_vputs(const char *fmt,...)$/;"	f
logicalUnitInformations	usb/device/class/usb_device_msc.h	/^    usb_device_logical_unit_information_struct_t logicalUnitInformations[USB_DEVICE_MSC_MAX_LUN];$/;"	m	struct:_usb_device_lba_information_struct
logicalUnitNumber	usb/device/class/usb_device_msc.h	/^    uint8_t logicalUnitNumber;       \/*!< Supported logical units number of device. See bulk only specification 3.2 Get$/;"	m	struct:_usb_device_msc_struct
logicalUnitNumber	usb/device/class/usb_device_msc.h	/^    uint8_t logicalUnitNumber;   \/*!< Byte 13 bCBWLUN*\/$/;"	m	struct:_usb_device_msc_cbw
logicalUnitNumber	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t logicalUnitNumber; \/*!< Logical Unit Number*\/$/;"	m	struct:_usb_device_read_capacities_command_struct
logicalUnitNumber	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t logicalUnitNumber; \/*!< Logical Unit Number*\/$/;"	m	struct:_usb_device_read_format_capacities_command_struct
logicalUnitNumber	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t logicalUnitNumber; \/*!< Logical Unit Number*\/$/;"	m	struct:_usb_device_request_sense_command_struct
logicalUnitNumber	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t logicalUnitNumber; \/*!< Specifies the logical unit (0~7) for which Inquiry data should be returned*\/$/;"	m	struct:_usb_device_inquiry_command_struct
logicalUnitNumberSupported	usb/device/class/usb_device_msc.h	/^    uint32_t logicalUnitNumberSupported; \/*!< Number of LUN*\/$/;"	m	struct:_usb_device_lba_information_struct
loglevel	source/logging.h	/^}loglevel;$/;"	t	typeref:enum:__anon499
lookahead	littlefs/littlefs_include/lfs.h	/^    lfs_size_t lookahead;$/;"	m	struct:lfs_config
lookahead_buffer	littlefs/littlefs_include/lfs.h	/^    void *lookahead_buffer;$/;"	m	struct:lfs_config
loop_chars	lwip/src/netif/ppp/demand.c	/^loop_chars(p, n)$/;"	f
loop_cnt_current	lwip/src/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	lwip/src/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_frame	lwip/src/netif/ppp/demand.c	/^loop_frame(frame, len)$/;"	f
loop_last	lwip/src/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_netif	lwip/src/core/netif.c	/^static struct netif loop_netif;$/;"	v	typeref:struct:netif	file:
loopback	drivers/fsl_usart.h	/^    bool loopback;                        \/*!< Enable peripheral loopback *\/$/;"	m	struct:_usart_config
lowLevelhandleBuffer	component/serial_manager/serial_manager.c	/^        uint8_t lowLevelhandleBuffer[1];$/;"	m	union:_serial_manager_handle::__anon139	file:
lowerdown	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*lowerdown) (ppp_pcb *pcb);$/;"	m	struct:protent
lowerup	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*lowerup) (ppp_pcb *pcb);$/;"	m	struct:protent
lowpan6_calc_crc	lwip/src/netif/lowpan6.c	/^lowpan6_calc_crc(const void* buf, u16_t len)$/;"	f
lowpan6_compress_headers	lwip/src/netif/lowpan6_common.c	/^lowpan6_compress_headers(struct netif *netif, u8_t *inbuf, size_t inbuf_size, u8_t *outbuf, size_t outbuf_size,$/;"	f
lowpan6_context	lwip/src/netif/lowpan6.c	/^  ip6_addr_t lowpan6_context[LWIP_6LOWPAN_NUM_CONTEXTS];$/;"	m	struct:lowpan6_ieee802154_data	file:
lowpan6_context_lookup	lwip/src/netif/lowpan6_common.c	/^lowpan6_context_lookup(const ip6_addr_t *lowpan6_contexts, const ip6_addr_t *ip6addr)$/;"	f	file:
lowpan6_data	lwip/src/netif/lowpan6.c	/^static struct lowpan6_ieee802154_data lowpan6_data;$/;"	v	typeref:struct:lowpan6_ieee802154_data	file:
lowpan6_decompress	lwip/src/netif/lowpan6_common.c	/^lowpan6_decompress(struct pbuf *p, u16_t datagram_size, ip6_addr_t *lowpan6_contexts,$/;"	f
lowpan6_decompress_hdr	lwip/src/netif/lowpan6_common.c	/^lowpan6_decompress_hdr(u8_t *lowpan6_buffer, size_t lowpan6_bufsize,$/;"	f	file:
lowpan6_frag	lwip/src/netif/lowpan6.c	/^lowpan6_frag(struct netif *netif, struct pbuf *p, const struct lowpan6_link_addr *src, const struct lowpan6_link_addr *dst)$/;"	f	file:
lowpan6_get_address_mode	lwip/src/netif/lowpan6_common.c	/^lowpan6_get_address_mode(const ip6_addr_t *ip6addr, const struct lowpan6_link_addr *mac_addr)$/;"	f
lowpan6_get_address_mode_mc	lwip/src/netif/lowpan6_common.c	/^lowpan6_get_address_mode_mc(const ip6_addr_t *ip6addr)$/;"	f	file:
lowpan6_hwaddr_to_addr	lwip/src/netif/lowpan6.c	/^lowpan6_hwaddr_to_addr(struct netif *netif, struct lowpan6_link_addr *addr)$/;"	f	file:
lowpan6_ieee802154_data	lwip/src/netif/lowpan6.c	/^struct lowpan6_ieee802154_data {$/;"	s	file:
lowpan6_if_init	lwip/src/netif/lowpan6.c	/^lowpan6_if_init(struct netif *netif)$/;"	f
lowpan6_input	lwip/src/netif/lowpan6.c	/^lowpan6_input(struct pbuf *p, struct netif *netif)$/;"	f
lowpan6_link_addr	lwip/src/include/netif/lowpan6_common.h	/^struct lowpan6_link_addr {$/;"	s
lowpan6_output	lwip/src/netif/lowpan6.c	/^lowpan6_output(struct netif *netif, struct pbuf *q, const ip6_addr_t *ip6addr)$/;"	f
lowpan6_parse_iee802154_header	lwip/src/netif/lowpan6.c	/^lowpan6_parse_iee802154_header(struct pbuf *p, struct lowpan6_link_addr *src,$/;"	f	file:
lowpan6_reass_helper	lwip/src/netif/lowpan6.c	/^struct lowpan6_reass_helper {$/;"	s	file:
lowpan6_set_context	lwip/src/netif/lowpan6.c	/^lowpan6_set_context(u8_t idx, const ip6_addr_t *context)$/;"	f
lowpan6_set_pan_id	lwip/src/netif/lowpan6.c	/^lowpan6_set_pan_id(u16_t pan_id)$/;"	f
lowpan6_set_short_addr	lwip/src/netif/lowpan6.c	/^lowpan6_set_short_addr(u8_t addr_high, u8_t addr_low)$/;"	f
lowpan6_tmr	lwip/src/netif/lowpan6.c	/^lowpan6_tmr(void)$/;"	f
lowpan6_write_iee802154_header	lwip/src/netif/lowpan6.c	/^lowpan6_write_iee802154_header(struct ieee_802154_hdr *hdr, const struct lowpan6_link_addr *src,$/;"	f	file:
lpc_pf	codec2/codec2_internal.h	/^    int           lpc_pf;                  \/* LPC post filter on                        *\/$/;"	m	struct:CODEC2
lpc_post_filter	codec2/quantise.c	/^void lpc_post_filter(codec2_fftr_cfg fftr_fwd_cfg, float Pw[], float ak[],$/;"	f
lpc_to_lsp	codec2/lsp.c	/^int lpc_to_lsp (float *a, int order, float *freq, int nb, float delta)$/;"	f
lqr_period	lwip/src/include/netif/ppp/lcp.h	/^    u32_t lqr_period;	\/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lsp_bits	codec2/quantise.c	/^int lsp_bits(int i) {$/;"	f
lsp_cb	codec2/codebook.c	/^const struct lsp_codebook lsp_cb[] = {$/;"	v	typeref:struct:lsp_codebook
lsp_cbd	codec2/codebookd.c	/^const struct lsp_codebook lsp_cbd[] = {$/;"	v	typeref:struct:lsp_codebook
lsp_cbjvm	codec2/codebookjvm.c	/^const struct lsp_codebook lsp_cbjvm[] = {$/;"	v	typeref:struct:lsp_codebook
lsp_codebook	codec2/defines.h	/^struct lsp_codebook {$/;"	s
lsp_pred_vq_bits	codec2/quantise.c	/^int lsp_pred_vq_bits(int i) {$/;"	f
lsp_to_lpc	codec2/lsp.c	/^void lsp_to_lpc(float *lsp, float *ak, int order)$/;"	f
lspd_bits	codec2/quantise.c	/^int lspd_bits(int i) {$/;"	f
lspdt_bits	codec2/quantise.c	/^int lspdt_bits(int i) {$/;"	f
lspdt_quantise	codec2/quantise.c	/^void lspdt_quantise(float lsps[], float lsps_[], float lsps__prev[], int mode)$/;"	f
lspjnd_quantise	codec2/quantise.c	/^void lspjnd_quantise(float lsps[], float lsps_[], int order)$/;"	f
lspjvm_quantise	codec2/quantise.c	/^void lspjvm_quantise(float *x, float *xq, int order)$/;"	f
lspmelvq_cb_bits	codec2/quantise.c	/^int lspmelvq_cb_bits(int i) {$/;"	f
lspmelvq_decode	codec2/quantise.c	/^void lspmelvq_decode(int *indexes, float *xq, int ndim)$/;"	f
lspmelvq_mbest_encode	codec2/quantise.c	/^float lspmelvq_mbest_encode(int *indexes, float *x, float *xq, int ndim, int mbest_entries)$/;"	f
lspmelvq_quantise	codec2/quantise.c	/^float lspmelvq_quantise(float *x, float *xq, int order)$/;"	f
lspvq_quantise	codec2/quantise.c	/^void lspvq_quantise($/;"	f
luInformations	usb/device/class/usb_device_msc.h	/^    usb_device_logical_unit_information_struct_t luInformations[USB_DEVICE_MSC_MAX_LUN];$/;"	m	struct:_usb_device_msc_struct
lun	usb/device/class/usb_device_msc.h	/^    uint8_t lun;$/;"	m	struct:_usb_device_lba_app_struct
lunDpoFuaReladr	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t lunDpoFuaReladr;   \/*!< Logical Unit Number DPO FUA RelAdr*\/$/;"	m	struct:_usb_device_read_write_10_command_struct
lwip_accept	lwip/src/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_accept	lwip/src/include/lwip/sockets.h	534;"	d
lwip_arc4_context	lwip/src/include/netif/ppp/pppcrypt.h	128;"	d
lwip_arc4_context	lwip/src/include/netif/ppp/pppcrypt.h	88;"	d
lwip_arc4_crypt	lwip/src/include/netif/ppp/pppcrypt.h	131;"	d
lwip_arc4_crypt	lwip/src/include/netif/ppp/pppcrypt.h	91;"	d
lwip_arc4_free	lwip/src/include/netif/ppp/pppcrypt.h	132;"	d
lwip_arc4_free	lwip/src/include/netif/ppp/pppcrypt.h	92;"	d
lwip_arc4_init	lwip/src/include/netif/ppp/pppcrypt.h	129;"	d
lwip_arc4_init	lwip/src/include/netif/ppp/pppcrypt.h	89;"	d
lwip_arc4_setup	lwip/src/include/netif/ppp/pppcrypt.h	130;"	d
lwip_arc4_setup	lwip/src/include/netif/ppp/pppcrypt.h	90;"	d
lwip_bind	lwip/src/api/sockets.c	/^lwip_bind(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_bind	lwip/src/include/lwip/sockets.h	535;"	d
lwip_chksum_copy	lwip/src/core/inet_chksum.c	/^lwip_chksum_copy(void *dst, const void *src, u16_t len)$/;"	f
lwip_close	lwip/src/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_close	lwip/src/include/lwip/sockets.h	541;"	d
lwip_close	lwip/src/include/lwip/sockets.h	566;"	d
lwip_close	lwip/src/include/lwip/sockets.h	567;"	d
lwip_connect	lwip/src/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_connect	lwip/src/include/lwip/sockets.h	542;"	d
lwip_cyclic_timer	lwip/src/core/timeouts.c	/^lwip_cyclic_timer(void *arg)$/;"	f	file:
lwip_cyclic_timer	lwip/src/include/lwip/timeouts.h	/^struct lwip_cyclic_timer {$/;"	s
lwip_cyclic_timer_handler	lwip/src/include/lwip/timeouts.h	/^typedef void (* lwip_cyclic_timer_handler)(void);$/;"	t
lwip_cyclic_timers	lwip/src/core/timeouts.c	/^const struct lwip_cyclic_timer lwip_cyclic_timers[] = {$/;"	v	typeref:struct:lwip_cyclic_timer
lwip_des_context	lwip/src/include/netif/ppp/pppcrypt.h	122;"	d
lwip_des_context	lwip/src/include/netif/ppp/pppcrypt.h	81;"	d
lwip_des_crypt_ecb	lwip/src/include/netif/ppp/pppcrypt.h	125;"	d
lwip_des_crypt_ecb	lwip/src/include/netif/ppp/pppcrypt.h	84;"	d
lwip_des_free	lwip/src/include/netif/ppp/pppcrypt.h	126;"	d
lwip_des_free	lwip/src/include/netif/ppp/pppcrypt.h	85;"	d
lwip_des_init	lwip/src/include/netif/ppp/pppcrypt.h	123;"	d
lwip_des_init	lwip/src/include/netif/ppp/pppcrypt.h	82;"	d
lwip_des_setkey_enc	lwip/src/include/netif/ppp/pppcrypt.h	124;"	d
lwip_des_setkey_enc	lwip/src/include/netif/ppp/pppcrypt.h	83;"	d
lwip_event	lwip/src/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_fcntl	lwip/src/api/sockets.c	/^lwip_fcntl(int s, int cmd, int val)$/;"	f
lwip_freeaddrinfo	lwip/src/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	lwip/src/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	lwip/src/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	lwip/src/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	lwip/src/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	lwip/src/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getpeername	lwip/src/include/lwip/sockets.h	537;"	d
lwip_getsockname	lwip/src/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	lwip/src/include/lwip/sockets.h	538;"	d
lwip_getsockopt	lwip/src/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt	lwip/src/include/lwip/sockets.h	540;"	d
lwip_getsockopt_callback	lwip/src/api/sockets.c	/^lwip_getsockopt_callback(void *arg)$/;"	f	file:
lwip_getsockopt_impl	lwip/src/api/sockets.c	/^lwip_getsockopt_impl(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f	file:
lwip_htonl	lwip/src/core/def.c	/^lwip_htonl(u32_t n)$/;"	f
lwip_htonl	lwip/src/include/lwip/def.h	88;"	d
lwip_htons	lwip/src/core/def.c	/^lwip_htons(u16_t n)$/;"	f
lwip_htons	lwip/src/include/lwip/def.h	86;"	d
lwip_iana_hwtype	lwip/src/include/lwip/prot/iana.h	/^enum lwip_iana_hwtype {$/;"	g
lwip_iana_port_number	lwip/src/include/lwip/prot/iana.h	/^enum lwip_iana_port_number {$/;"	g
lwip_ieee_eth_type	lwip/src/include/lwip/prot/ieee.h	/^enum lwip_ieee_eth_type {$/;"	g
lwip_if_indextoname	lwip/src/api/if_api.c	/^lwip_if_indextoname(unsigned int ifindex, char *ifname)$/;"	f
lwip_if_nametoindex	lwip/src/api/if_api.c	/^lwip_if_nametoindex(const char *ifname)$/;"	f
lwip_in_range	lwip/src/include/lwip/arch.h	219;"	d
lwip_inet_ntop	lwip/src/api/sockets.c	/^lwip_inet_ntop(int af, const void *src, char *dst, socklen_t size)$/;"	f
lwip_inet_ntop	lwip/src/include/lwip/sockets.h	558;"	d
lwip_inet_pton	lwip/src/api/sockets.c	/^lwip_inet_pton(int af, const char *src, void *dst)$/;"	f
lwip_inet_pton	lwip/src/include/lwip/sockets.h	559;"	d
lwip_init	lwip/src/core/init.c	/^lwip_init(void)$/;"	f
lwip_internal_netif_client_data_index	lwip/src/include/lwip/netif.h	/^enum lwip_internal_netif_client_data_index$/;"	g
lwip_ioctl	lwip/src/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_ioctl	lwip/src/include/lwip/sockets.h	557;"	d
lwip_ioctl	lwip/src/include/lwip/sockets.h	570;"	d
lwip_ioctl	lwip/src/include/lwip/sockets.h	571;"	d
lwip_ip_addr_type	lwip/src/include/lwip/ip_addr.h	/^enum lwip_ip_addr_type {$/;"	g
lwip_ipv6_scope_type	lwip/src/include/lwip/ip6_zone.h	/^enum lwip_ipv6_scope_type$/;"	g
lwip_isdigit	lwip/src/include/lwip/arch.h	220;"	d
lwip_isdigit	lwip/src/include/lwip/arch.h	229;"	d
lwip_islower	lwip/src/include/lwip/arch.h	222;"	d
lwip_islower	lwip/src/include/lwip/arch.h	231;"	d
lwip_isspace	lwip/src/include/lwip/arch.h	223;"	d
lwip_isspace	lwip/src/include/lwip/arch.h	232;"	d
lwip_isupper	lwip/src/include/lwip/arch.h	224;"	d
lwip_isupper	lwip/src/include/lwip/arch.h	233;"	d
lwip_isxdigit	lwip/src/include/lwip/arch.h	221;"	d
lwip_isxdigit	lwip/src/include/lwip/arch.h	230;"	d
lwip_itoa	lwip/src/core/def.c	/^lwip_itoa(char *result, size_t bufsize, int number)$/;"	f
lwip_link_select_cb	lwip/src/api/sockets.c	/^lwip_link_select_cb(struct lwip_select_cb *select_cb)$/;"	f	file:
lwip_listen	lwip/src/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_listen	lwip/src/include/lwip/sockets.h	543;"	d
lwip_md4_context	lwip/src/include/netif/ppp/pppcrypt.h	101;"	d
lwip_md4_context	lwip/src/include/netif/ppp/pppcrypt.h	57;"	d
lwip_md4_finish	lwip/src/include/netif/ppp/pppcrypt.h	105;"	d
lwip_md4_finish	lwip/src/include/netif/ppp/pppcrypt.h	61;"	d
lwip_md4_free	lwip/src/include/netif/ppp/pppcrypt.h	106;"	d
lwip_md4_free	lwip/src/include/netif/ppp/pppcrypt.h	62;"	d
lwip_md4_init	lwip/src/include/netif/ppp/pppcrypt.h	102;"	d
lwip_md4_init	lwip/src/include/netif/ppp/pppcrypt.h	58;"	d
lwip_md4_starts	lwip/src/include/netif/ppp/pppcrypt.h	103;"	d
lwip_md4_starts	lwip/src/include/netif/ppp/pppcrypt.h	59;"	d
lwip_md4_update	lwip/src/include/netif/ppp/pppcrypt.h	104;"	d
lwip_md4_update	lwip/src/include/netif/ppp/pppcrypt.h	60;"	d
lwip_md5_context	lwip/src/include/netif/ppp/pppcrypt.h	108;"	d
lwip_md5_context	lwip/src/include/netif/ppp/pppcrypt.h	65;"	d
lwip_md5_finish	lwip/src/include/netif/ppp/pppcrypt.h	112;"	d
lwip_md5_finish	lwip/src/include/netif/ppp/pppcrypt.h	69;"	d
lwip_md5_free	lwip/src/include/netif/ppp/pppcrypt.h	113;"	d
lwip_md5_free	lwip/src/include/netif/ppp/pppcrypt.h	70;"	d
lwip_md5_init	lwip/src/include/netif/ppp/pppcrypt.h	109;"	d
lwip_md5_init	lwip/src/include/netif/ppp/pppcrypt.h	66;"	d
lwip_md5_starts	lwip/src/include/netif/ppp/pppcrypt.h	110;"	d
lwip_md5_starts	lwip/src/include/netif/ppp/pppcrypt.h	67;"	d
lwip_md5_update	lwip/src/include/netif/ppp/pppcrypt.h	111;"	d
lwip_md5_update	lwip/src/include/netif/ppp/pppcrypt.h	68;"	d
lwip_netconn_do_accepted	lwip/src/api/api_msg.c	/^lwip_netconn_do_accepted(void *m)$/;"	f
lwip_netconn_do_bind	lwip/src/api/api_msg.c	/^lwip_netconn_do_bind(void *m)$/;"	f
lwip_netconn_do_bind_if	lwip/src/api/api_msg.c	/^lwip_netconn_do_bind_if(void *m)$/;"	f
lwip_netconn_do_close	lwip/src/api/api_msg.c	/^lwip_netconn_do_close(void *m)$/;"	f
lwip_netconn_do_close_internal	lwip/src/api/api_msg.c	/^lwip_netconn_do_close_internal(struct netconn *conn  WRITE_DELAYED_PARAM)$/;"	f	file:
lwip_netconn_do_connect	lwip/src/api/api_msg.c	/^lwip_netconn_do_connect(void *m)$/;"	f
lwip_netconn_do_connected	lwip/src/api/api_msg.c	/^lwip_netconn_do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
lwip_netconn_do_delconn	lwip/src/api/api_msg.c	/^lwip_netconn_do_delconn(void *m)$/;"	f
lwip_netconn_do_disconnect	lwip/src/api/api_msg.c	/^lwip_netconn_do_disconnect(void *m)$/;"	f
lwip_netconn_do_dns_found	lwip/src/api/api_msg.c	/^lwip_netconn_do_dns_found(const char *name, const ip_addr_t *ipaddr, void *arg)$/;"	f	file:
lwip_netconn_do_getaddr	lwip/src/api/api_msg.c	/^lwip_netconn_do_getaddr(void *m)$/;"	f
lwip_netconn_do_gethostbyname	lwip/src/api/api_msg.c	/^lwip_netconn_do_gethostbyname(void *arg)$/;"	f
lwip_netconn_do_join_leave_group	lwip/src/api/api_msg.c	/^lwip_netconn_do_join_leave_group(void *m)$/;"	f
lwip_netconn_do_join_leave_group_netif	lwip/src/api/api_msg.c	/^lwip_netconn_do_join_leave_group_netif(void *m)$/;"	f
lwip_netconn_do_listen	lwip/src/api/api_msg.c	/^lwip_netconn_do_listen(void *m)$/;"	f
lwip_netconn_do_newconn	lwip/src/api/api_msg.c	/^lwip_netconn_do_newconn(void *m)$/;"	f
lwip_netconn_do_recv	lwip/src/api/api_msg.c	/^lwip_netconn_do_recv(void *m)$/;"	f
lwip_netconn_do_send	lwip/src/api/api_msg.c	/^lwip_netconn_do_send(void *m)$/;"	f
lwip_netconn_do_write	lwip/src/api/api_msg.c	/^lwip_netconn_do_write(void *m)$/;"	f
lwip_netconn_do_writemore	lwip/src/api/api_msg.c	/^lwip_netconn_do_writemore(struct netconn *conn  WRITE_DELAYED_PARAM)$/;"	f	file:
lwip_netconn_err_to_msg	lwip/src/api/api_msg.c	/^lwip_netconn_err_to_msg(err_t err)$/;"	f	file:
lwip_netconn_is_deallocated_msg	lwip/src/api/api_msg.c	/^lwip_netconn_is_deallocated_msg(void *msg)$/;"	f
lwip_netconn_is_err_msg	lwip/src/api/api_msg.c	/^lwip_netconn_is_err_msg(void *msg, err_t *err)$/;"	f
lwip_ntohl	lwip/src/include/lwip/def.h	103;"	d
lwip_ntohl	lwip/src/include/lwip/def.h	89;"	d
lwip_ntohs	lwip/src/include/lwip/def.h	87;"	d
lwip_ntohs	lwip/src/include/lwip/def.h	98;"	d
lwip_num_cyclic_timers	lwip/src/core/timeouts.c	/^const int lwip_num_cyclic_timers = LWIP_ARRAYSIZE(lwip_cyclic_timers);$/;"	v
lwip_poll	lwip/src/api/sockets.c	/^lwip_poll(struct pollfd *fds, nfds_t nfds, int timeout)$/;"	f
lwip_poll	lwip/src/include/lwip/sockets.h	555;"	d
lwip_poll_dec_sockets_used	lwip/src/api/sockets.c	/^lwip_poll_dec_sockets_used(struct pollfd *fds, nfds_t nfds)$/;"	f	file:
lwip_poll_dec_sockets_used	lwip/src/api/sockets.c	2317;"	d	file:
lwip_poll_inc_sockets_used	lwip/src/api/sockets.c	/^lwip_poll_inc_sockets_used(struct pollfd *fds, nfds_t nfds)$/;"	f	file:
lwip_poll_inc_sockets_used	lwip/src/api/sockets.c	2316;"	d	file:
lwip_poll_should_wake	lwip/src/api/sockets.c	/^lwip_poll_should_wake(const struct lwip_select_cb *scb, int fd, int has_recvevent, int has_sendevent, int has_errevent)$/;"	f	file:
lwip_pollscan	lwip/src/api/sockets.c	/^lwip_pollscan(struct pollfd *fds, nfds_t nfds, enum lwip_pollscan_opts opts)$/;"	f	file:
lwip_pollscan_opts	lwip/src/api/sockets.c	/^enum lwip_pollscan_opts$/;"	g	file:
lwip_rand	lwip/port/sys_arch.c	/^u32_t lwip_rand(void)$/;"	f
lwip_read	lwip/src/api/sockets.c	/^lwip_read(int s, void *mem, size_t len)$/;"	f
lwip_read	lwip/src/include/lwip/sockets.h	562;"	d
lwip_readv	lwip/src/api/sockets.c	/^lwip_readv(int s, const struct iovec *iov, int iovcnt)$/;"	f
lwip_readv	lwip/src/include/lwip/sockets.h	563;"	d
lwip_recv	lwip/src/api/sockets.c	/^lwip_recv(int s, void *mem, size_t len, int flags)$/;"	f
lwip_recv	lwip/src/include/lwip/sockets.h	544;"	d
lwip_recv_tcp	lwip/src/api/sockets.c	/^lwip_recv_tcp(struct lwip_sock *sock, void *mem, size_t len, int flags)$/;"	f	file:
lwip_recv_tcp_from	lwip/src/api/sockets.c	/^lwip_recv_tcp_from(struct lwip_sock *sock, struct sockaddr *from, socklen_t *fromlen, const char *dbg_fn, int dbg_s, ssize_t dbg_ret)$/;"	f	file:
lwip_recvfrom	lwip/src/api/sockets.c	/^lwip_recvfrom(int s, void *mem, size_t len, int flags,$/;"	f
lwip_recvfrom	lwip/src/include/lwip/sockets.h	546;"	d
lwip_recvfrom_udp_raw	lwip/src/api/sockets.c	/^lwip_recvfrom_udp_raw(struct lwip_sock *sock, int flags, struct msghdr *msg, u16_t *datagram_len, int dbg_s)$/;"	f	file:
lwip_recvmsg	lwip/src/api/sockets.c	/^lwip_recvmsg(int s, struct msghdr *message, int flags)$/;"	f
lwip_recvmsg	lwip/src/include/lwip/sockets.h	545;"	d
lwip_select	lwip/src/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select	lwip/src/include/lwip/sockets.h	552;"	d
lwip_select_cb	lwip/src/include/lwip/priv/sockets_priv.h	/^struct lwip_select_cb {$/;"	s
lwip_select_dec_sockets_used	lwip/src/api/sockets.c	/^lwip_select_dec_sockets_used(int maxfdp, fd_set *used_sockets)$/;"	f	file:
lwip_select_dec_sockets_used	lwip/src/api/sockets.c	1962;"	d	file:
lwip_select_inc_sockets_used	lwip/src/api/sockets.c	/^lwip_select_inc_sockets_used(int maxfdp, fd_set *fdset1, fd_set *fdset2, fd_set *fdset3, fd_set *used_sockets)$/;"	f	file:
lwip_select_inc_sockets_used	lwip/src/api/sockets.c	1961;"	d	file:
lwip_select_inc_sockets_used_set	lwip/src/api/sockets.c	/^lwip_select_inc_sockets_used_set(int maxfdp, fd_set *fdset, fd_set *used_sockets)$/;"	f	file:
lwip_selscan	lwip/src/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset_in, fd_set *writeset_in, fd_set *exceptset_in,$/;"	f	file:
lwip_send	lwip/src/api/sockets.c	/^lwip_send(int s, const void *data, size_t size, int flags)$/;"	f
lwip_send	lwip/src/include/lwip/sockets.h	547;"	d
lwip_sendmsg	lwip/src/api/sockets.c	/^lwip_sendmsg(int s, const struct msghdr *msg, int flags)$/;"	f
lwip_sendmsg	lwip/src/include/lwip/sockets.h	548;"	d
lwip_sendto	lwip/src/api/sockets.c	/^lwip_sendto(int s, const void *data, size_t size, int flags,$/;"	f
lwip_sendto	lwip/src/include/lwip/sockets.h	549;"	d
lwip_setgetsockopt_data	lwip/src/include/lwip/priv/sockets_priv.h	/^struct lwip_setgetsockopt_data {$/;"	s
lwip_setsockopt	lwip/src/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt	lwip/src/include/lwip/sockets.h	539;"	d
lwip_setsockopt_callback	lwip/src/api/sockets.c	/^lwip_setsockopt_callback(void *arg)$/;"	f	file:
lwip_setsockopt_impl	lwip/src/api/sockets.c	/^lwip_setsockopt_impl(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f	file:
lwip_sha1_context	lwip/src/include/netif/ppp/pppcrypt.h	115;"	d
lwip_sha1_context	lwip/src/include/netif/ppp/pppcrypt.h	73;"	d
lwip_sha1_finish	lwip/src/include/netif/ppp/pppcrypt.h	119;"	d
lwip_sha1_finish	lwip/src/include/netif/ppp/pppcrypt.h	77;"	d
lwip_sha1_free	lwip/src/include/netif/ppp/pppcrypt.h	120;"	d
lwip_sha1_free	lwip/src/include/netif/ppp/pppcrypt.h	78;"	d
lwip_sha1_init	lwip/src/include/netif/ppp/pppcrypt.h	116;"	d
lwip_sha1_init	lwip/src/include/netif/ppp/pppcrypt.h	74;"	d
lwip_sha1_starts	lwip/src/include/netif/ppp/pppcrypt.h	117;"	d
lwip_sha1_starts	lwip/src/include/netif/ppp/pppcrypt.h	75;"	d
lwip_sha1_update	lwip/src/include/netif/ppp/pppcrypt.h	118;"	d
lwip_sha1_update	lwip/src/include/netif/ppp/pppcrypt.h	76;"	d
lwip_shutdown	lwip/src/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_shutdown	lwip/src/include/lwip/sockets.h	536;"	d
lwip_sock	lwip/src/include/lwip/priv/sockets_priv.h	/^struct lwip_sock {$/;"	s
lwip_sock_lastdata	lwip/src/include/lwip/priv/sockets_priv.h	/^union lwip_sock_lastdata {$/;"	u
lwip_sock_make_addr	lwip/src/api/sockets.c	/^lwip_sock_make_addr(struct netconn *conn, ip_addr_t *fromaddr, u16_t port,$/;"	f	file:
lwip_socket	lwip/src/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	lwip/src/include/lwip/sockets.h	550;"	d
lwip_socket_dbg_get_socket	lwip/src/api/sockets.c	/^lwip_socket_dbg_get_socket(int fd)$/;"	f
lwip_socket_drop_registered_memberships	lwip/src/api/sockets.c	/^lwip_socket_drop_registered_memberships(int s)$/;"	f	file:
lwip_socket_drop_registered_mld6_memberships	lwip/src/api/sockets.c	/^lwip_socket_drop_registered_mld6_memberships(int s)$/;"	f	file:
lwip_socket_init	lwip/src/include/lwip/sockets.h	528;"	d
lwip_socket_multicast_mld6_pair	lwip/src/api/sockets.c	/^struct lwip_socket_multicast_mld6_pair {$/;"	s	file:
lwip_socket_multicast_pair	lwip/src/api/sockets.c	/^struct lwip_socket_multicast_pair {$/;"	s	file:
lwip_socket_register_membership	lwip/src/api/sockets.c	/^lwip_socket_register_membership(int s, const ip4_addr_t *if_addr, const ip4_addr_t *multi_addr)$/;"	f	file:
lwip_socket_register_mld6_membership	lwip/src/api/sockets.c	/^lwip_socket_register_mld6_membership(int s, unsigned int if_idx, const ip6_addr_t *multi_addr)$/;"	f	file:
lwip_socket_thread_cleanup	lwip/src/api/sockets.c	/^lwip_socket_thread_cleanup(void)$/;"	f
lwip_socket_thread_init	lwip/src/api/sockets.c	/^lwip_socket_thread_init(void)$/;"	f
lwip_socket_unregister_membership	lwip/src/api/sockets.c	/^lwip_socket_unregister_membership(int s, const ip4_addr_t *if_addr, const ip4_addr_t *multi_addr)$/;"	f	file:
lwip_socket_unregister_mld6_membership	lwip/src/api/sockets.c	/^lwip_socket_unregister_mld6_membership(int s, unsigned int if_idx, const ip6_addr_t *multi_addr)$/;"	f	file:
lwip_sockopt_to_ipopt	lwip/src/api/sockets.c	/^lwip_sockopt_to_ipopt(int optname)$/;"	f	file:
lwip_standard_chksum	lwip/src/core/inet_chksum.c	/^lwip_standard_chksum(const void *dataptr, int len)$/;"	f
lwip_stats	lwip/src/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	lwip/src/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	lwip/src/include/lwip/err.h	106;"	d
lwip_stricmp	lwip/src/core/def.c	/^lwip_stricmp(const char *str1, const char *str2)$/;"	f
lwip_strnicmp	lwip/src/core/def.c	/^lwip_strnicmp(const char *str1, const char *str2, size_t len)$/;"	f
lwip_strnstr	lwip/src/core/def.c	/^lwip_strnstr(const char *buffer, const char *token, size_t n)$/;"	f
lwip_thread_fn	lwip/src/include/lwip/sys.h	/^typedef void (*lwip_thread_fn)(void *arg);$/;"	t
lwip_tolower	lwip/src/include/lwip/arch.h	225;"	d
lwip_tolower	lwip/src/include/lwip/arch.h	234;"	d
lwip_toupper	lwip/src/include/lwip/arch.h	226;"	d
lwip_toupper	lwip/src/include/lwip/arch.h	235;"	d
lwip_unlink_select_cb	lwip/src/api/sockets.c	/^lwip_unlink_select_cb(struct lwip_select_cb *select_cb)$/;"	f	file:
lwip_write	lwip/src/api/sockets.c	/^lwip_write(int s, const void *data, size_t size)$/;"	f
lwip_write	lwip/src/include/lwip/sockets.h	564;"	d
lwip_writev	lwip/src/api/sockets.c	/^lwip_writev(int s, const struct iovec *iov, int iovcnt)$/;"	f
lwip_writev	lwip/src/include/lwip/sockets.h	565;"	d
lwip_xchar	lwip/src/core/ipv6/ip6_addr.c	59;"	d	file:
m	codec2/defines.h	/^    int			m;        \/* elements in codebook	*\/$/;"	m	struct:lsp_codebook
m	codec2/nlp.c	/^    int           m;$/;"	m	struct:__anon138	file:
m	lwip/src/include/netif/ppp/polarssl/arc4.h	/^    unsigned char m[256];       \/*!< permutation table *\/$/;"	m	struct:__anon429
m_pitch	codec2/codec2_internal.h	/^    int           m_pitch;$/;"	m	struct:CODEC2
m_pitch	codec2/defines.h	/^    int   m_pitch;       \/* pitch estimation window size in samples  *\/$/;"	m	struct:__anon134
mag_to_phase	codec2/phase.c	/^void mag_to_phase(float phase[],             \/* Nfft\/2+1 output phase samples in radians       *\/$/;"	f
magic	littlefs/littlefs_include/lfs.h	/^        char magic[8];$/;"	m	struct:lfs_superblock::lfs_disk_superblock
magic	lwip/src/netif/ppp/magic.c	/^u32_t magic(void) {$/;"	f
magic_churnrand	lwip/src/netif/ppp/magic.c	/^static void magic_churnrand(char *rand_data, u32_t rand_len) {$/;"	f	file:
magic_init	lwip/src/netif/ppp/magic.c	/^void magic_init(void) {$/;"	f
magic_pow	lwip/src/netif/ppp/magic.c	/^u32_t magic_pow(u8_t pow) {$/;"	f
magic_randcount	lwip/src/netif/ppp/magic.c	/^static long magic_randcount;      \/* Pseudo-random incrementer *\/$/;"	v	file:
magic_random_bytes	lwip/src/netif/ppp/magic.c	/^void magic_random_bytes(unsigned char *buf, u32_t buf_len) {$/;"	f
magic_randomize	lwip/src/netif/ppp/magic.c	/^void magic_randomize(void) {$/;"	f
magic_randomized	lwip/src/netif/ppp/magic.c	/^static int  magic_randomized;       \/* Set when truely randomized. *\/$/;"	v	file:
magic_randomseed	lwip/src/netif/ppp/magic.c	/^static u32_t magic_randomseed;      \/* Seed used for random number generation. *\/$/;"	v	file:
magic_randomseed	lwip/src/netif/ppp/magic.c	/^static u32_t magic_randomseed;    \/* Seed used for random number generation. *\/$/;"	v	file:
magic_randpool	lwip/src/netif/ppp/magic.c	/^static char magic_randpool[MD5_HASH_SIZE];   \/* Pool of randomness. *\/$/;"	v	file:
magicnumber	lwip/src/include/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	codec2/golay23.c	/^int main() {$/;"	f
main	codec2/varicode.c	/^int main(void) {$/;"	f
main	doc/lwip/doc/NO_SYS_SampleCode.c	/^main(void)$/;"	f
main	source/main.c	/^int main(void)$/;"	f
major	usb/include/usb.h	/^    uint8_t major;  \/*!< Major *\/$/;"	m	struct:_usb_version
majorVersion	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t majorVersion;$/;"	m	struct:_rndis_init_cmplt_struct
majorVersion	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t majorVersion;$/;"	m	struct:_rndis_init_msg_struct
make_analysis_window	codec2/sine.c	/^void make_analysis_window(C2CONST *c2const, codec2_fft_cfg fft_fwd_cfg, float w[], COMP W[])$/;"	f
make_bundle_links	lwip/src/netif/ppp/multilink.c	/^static void make_bundle_links(int append)$/;"	f	file:
make_response	lwip/src/include/netif/ppp/chap-new.h	/^	void (*make_response)(ppp_pcb *pcb, unsigned char *response, int id, const char *our_name,$/;"	m	struct:chap_digest_type
make_synthesis_window	codec2/sine.c	/^void make_synthesis_window(C2CONST *c2const, float Pn[])$/;"	f
master	codec/fsl_wm8904.h	/^    bool master;                  \/*!< Master or slave *\/$/;"	m	struct:_wm8904_config
masterHandle	drivers/fsl_spi_cmsis.c	/^    spi_dma_handle_t masterHandle;$/;"	m	union:_cmsis_spi_dma_handle	file:
masterHandle	drivers/fsl_spi_cmsis.c	/^    spi_master_handle_t masterHandle;$/;"	m	union:_cmsis_spi_handle	file:
masterReceiveBuffer	source/main.c	/^uint8_t masterReceiveBuffer[32];$/;"	v
masterSendBuffer	source/main.c	/^uint8_t masterSendBuffer[32];$/;"	v
masterSlave	drivers/fsl_i2s.h	/^    i2s_master_slave_t masterSlave; \/*!< Master \/ slave configuration *\/$/;"	m	struct:_i2s_config
masterXfer	source/main.c	/^spi_transfer_t masterXfer = { 0 };$/;"	v
master_dma_handle	drivers/fsl_i2c_cmsis.c	/^    i2c_master_dma_handle_t *master_dma_handle; \/*!< i2c DMA transfer handle. *\/$/;"	m	struct:_cmsis_i2c_dma_driver_state	file:
master_handle	drivers/fsl_i2c_cmsis.c	/^    i2c_master_handle_t master_handle; \/*!< master Interupt transfer handle. *\/$/;"	m	union:_cmsis_i2c_handle	file:
master_key	lwip/src/include/netif/ppp/mppe.h	/^	u8_t master_key[MPPE_MAX_KEY_LEN];$/;"	m	struct:ppp_mppe_state
master_rtos_handle	source/main.c	/^spi_rtos_handle_t master_rtos_handle;$/;"	v
matchValue	drivers/fsl_ctimer.h	/^    uint32_t matchValue;                      \/*!< This is stored in the match register *\/$/;"	m	struct:_ctimer_match_config
max	component/lists/generic_list.h	/^    uint16_t max;                  \/*!< list max number of elements *\/$/;"	m	struct:list_tag
max	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	lwip/src/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
maxDelay	CMSIS/arm_math.h	/^    uint16_t maxDelay;            \/**< maximum offset specified by the pTapDelay array. *\/$/;"	m	struct:__anon108
maxDelay	CMSIS/arm_math.h	/^    uint16_t maxDelay;            \/**< maximum offset specified by the pTapDelay array. *\/$/;"	m	struct:__anon109
maxDelay	CMSIS/arm_math.h	/^    uint16_t maxDelay;            \/**< maximum offset specified by the pTapDelay array. *\/$/;"	m	struct:__anon110
maxDelay	CMSIS/arm_math.h	/^    uint16_t maxDelay;            \/**< maximum offset specified by the pTapDelay array. *\/$/;"	m	struct:__anon111
maxPacketSize	usb/device/class/usb_device_class.h	/^    uint16_t maxPacketSize;  \/*!< Endpoint maximum packet size *\/$/;"	m	struct:_usb_device_endpoint_struct
maxPacketSize	usb/device/include/usb_device.h	/^    uint16_t maxPacketSize;  \/*!< Endpoint maximum packet size *\/$/;"	m	struct:_usb_device_endpoint_init_struct
maxPacketSize	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t maxPacketSize : 11;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon515::__anon516
maxPacketSize	usb/device/source/khci/usb_device_khci.h	/^            uint32_t maxPacketSize : 10U; \/*!< The maximum packet size of the endpoint *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct::__anon525::__anon526
maxPacketSize	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t maxPacketSize : 11U; \/*!< The maximum packet size of the endpoint *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
maxPacketsPerTransfer	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t maxPacketsPerTransfer;$/;"	m	struct:_rndis_init_cmplt_struct
maxSlotIndex	lwip/src/include/netif/ppp/vj.h	/^  u8_t maxSlotIndex;$/;"	m	struct:vjcompress
maxTransferSize	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t maxTransferSize;$/;"	m	struct:_rndis_init_cmplt_struct
maxTransferSize	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t maxTransferSize;$/;"	m	struct:_rndis_init_msg_struct
max_amp	codec2/defines.h	/^    int   max_amp;       \/* maximum number of harmonics              *\/$/;"	m	struct:__anon134
max_col_weight	codec2/mpdecode_core.h	/^    int max_col_weight;$/;"	m	struct:LDPC
max_fdb_dynamic_entries	lwip/src/include/netif/bridgeif.h	/^  u16_t           max_fdb_dynamic_entries;$/;"	m	struct:bridgeif_initdata_s
max_fdb_entries	lwip/src/netif/bridgeif_fdb.c	/^  u16_t max_fdb_entries;$/;"	m	struct:bridgeif_dfdb_s	file:
max_fdb_static_entries	lwip/src/include/netif/bridgeif.h	/^  u16_t           max_fdb_static_entries;$/;"	m	struct:bridgeif_initdata_s
max_fdbd_entries	lwip/src/netif/bridgeif.c	/^  u16_t             max_fdbd_entries;$/;"	m	struct:bridgeif_private_s	file:
max_fdbs_entries	lwip/src/netif/bridgeif.c	/^  u16_t             max_fdbs_entries;$/;"	m	struct:bridgeif_private_s	file:
max_iter	codec2/mpdecode_core.h	/^    int max_iter;$/;"	m	struct:LDPC
max_ports	lwip/src/include/netif/bridgeif.h	/^  u8_t            max_ports;$/;"	m	struct:bridgeif_initdata_s
max_ports	lwip/src/netif/bridgeif.c	/^  u8_t              max_ports;$/;"	m	struct:bridgeif_private_s	file:
max_row_weight	codec2/mpdecode_core.h	/^    int max_row_weight;$/;"	m	struct:LDPC
maxconnect	lwip/src/include/netif/ppp/ppp.h	/^  u32_t  maxconnect;                  \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings_s
maxnakloops	lwip/src/include/netif/ppp/fsm.h	/^    u8_t maxnakloops;		\/* Maximum number of nak loops tolerated$/;"	m	struct:fsm
maxslotindex	lwip/src/include/netif/ppp/ipcp.h	/^    u8_t  maxslotindex;		\/* values for RFC1332 VJ compression neg. *\/$/;"	m	struct:ipcp_options
mbedtls_threading_mutex_t	amazon-freertos/include/threading_alt.h	/^} mbedtls_threading_mutex_t;$/;"	t	typeref:struct:__anon1
mbox	lwip/src/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox_threads_waiting	lwip/src/include/lwip/api.h	/^  int mbox_threads_waiting;$/;"	m	struct:netconn
mcast_ifindex	lwip/src/include/lwip/raw.h	/^  u8_t mcast_ifindex;$/;"	m	struct:raw_pcb
mcast_ifindex	lwip/src/include/lwip/udp.h	/^  u8_t mcast_ifindex;$/;"	m	struct:udp_pcb
mcast_ip4	lwip/src/include/lwip/udp.h	/^  ip4_addr_t mcast_ip4;$/;"	m	struct:udp_pcb
mcast_ttl	lwip/src/include/lwip/raw.h	/^  u8_t mcast_ttl;$/;"	m	struct:raw_pcb
mcast_ttl	lwip/src/include/lwip/udp.h	/^  u8_t mcast_ttl;$/;"	m	struct:udp_pcb
mclk_HZ	codec/fsl_wm8904.h	/^    uint32_t mclk_HZ;             \/*!< MCLK frequency value *\/$/;"	m	struct:_wm8904_config
md4	lwip/src/netif/ppp/polarssl/md4.c	/^void md4( unsigned char *input, int ilen, unsigned char output[16] )$/;"	f
md4_context	lwip/src/include/netif/ppp/polarssl/md4.h	/^md4_context;$/;"	t	typeref:struct:__anon428
md4_finish	lwip/src/netif/ppp/polarssl/md4.c	/^void md4_finish( md4_context *ctx, unsigned char output[16] )$/;"	f
md4_padding	lwip/src/netif/ppp/polarssl/md4.c	/^static const unsigned char md4_padding[64] =$/;"	v	file:
md4_process	lwip/src/netif/ppp/polarssl/md4.c	/^static void md4_process( md4_context *ctx, const unsigned char data[64] )$/;"	f	file:
md4_starts	lwip/src/netif/ppp/polarssl/md4.c	/^void md4_starts( md4_context *ctx )$/;"	f
md4_update	lwip/src/netif/ppp/polarssl/md4.c	/^void md4_update( md4_context *ctx, const unsigned char *input, int ilen )$/;"	f
md5	lwip/src/netif/ppp/polarssl/md5.c	/^void md5( unsigned char *input, int ilen, unsigned char output[16] )$/;"	f
md5_context	lwip/src/include/netif/ppp/polarssl/md5.h	/^md5_context;$/;"	t	typeref:struct:__anon431
md5_digest	lwip/src/netif/ppp/chap-md5.c	/^const struct chap_digest_type md5_digest = {$/;"	v	typeref:struct:chap_digest_type
md5_finish	lwip/src/netif/ppp/polarssl/md5.c	/^void md5_finish( md5_context *ctx, unsigned char output[16] )$/;"	f
md5_padding	lwip/src/netif/ppp/polarssl/md5.c	/^static const unsigned char md5_padding[64] =$/;"	v	file:
md5_process	lwip/src/netif/ppp/polarssl/md5.c	/^static void md5_process( md5_context *ctx, const unsigned char data[64] )$/;"	f	file:
md5_starts	lwip/src/netif/ppp/polarssl/md5.c	/^void md5_starts( md5_context *ctx )$/;"	f
md5_update	lwip/src/netif/ppp/polarssl/md5.c	/^void md5_update( md5_context *ctx, const unsigned char *input, int ilen )$/;"	f
mean_amp	codec2/ofdm_internal.h	/^    float mean_amp;$/;"	m	struct:OFDM
medium	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t medium;$/;"	m	struct:_rndis_init_cmplt_struct
mediumTypeCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t mediumTypeCode;  \/*!< The Medium Type Code field specifies the inserted medium type*\/$/;"	m	struct:_usb_device_mode_parameters_header_struct
mel_bits	codec2/quantise.c	/^int mel_bits(int i) {$/;"	f
mel_sample_freqs_kHz	codec2/newamp1.c	/^void mel_sample_freqs_kHz(float rate_K_sample_freqs_kHz[], int K, float mel_start, float mel_end)$/;"	f
mem	lwip/src/core/mem.c	/^struct mem {$/;"	s	file:
mem	lwip/src/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memWidth	drivers/fsl_emc.h	/^    emc_static_memwidth_t memWidth; \/*!< Memory width. *\/$/;"	m	struct:_emc_static_chip_config
mem_align_cb_t	drivers/fsl_common.c	/^} mem_align_cb_t;$/;"	t	typeref:struct:_mem_align_control_block	file:
mem_calloc	lwip/src/core/mem.c	/^mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_clib_calloc	lwip/src/core/mem.c	189;"	d	file:
mem_clib_free	lwip/src/core/mem.c	183;"	d	file:
mem_clib_malloc	lwip/src/core/mem.c	186;"	d	file:
mem_fir	codec2/nlp.c	/^    float         mem_fir[NLP_NTAP]; \/* decimation FIR filter memory *\/$/;"	m	struct:__anon138	file:
mem_free	lwip/src/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free_callback	lwip/src/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	lwip/src/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_init	lwip/src/core/mem.c	/^mem_init(void)$/;"	f
mem_link_valid	lwip/src/core/mem.c	/^mem_link_valid(struct mem *mem)$/;"	f	file:
mem_malloc	lwip/src/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	lwip/src/core/mem.c	/^mem_malloc(mem_size_t size_in)$/;"	f
mem_mutex	lwip/src/core/mem.c	/^static sys_mutex_t mem_mutex;$/;"	v	file:
mem_overflow_check_element	lwip/src/core/mem.c	/^mem_overflow_check_element(struct mem *mem)$/;"	f	file:
mem_overflow_check_element	lwip/src/core/mem.c	447;"	d	file:
mem_overflow_check_raw	lwip/src/core/mem.c	/^mem_overflow_check_raw(void *p, size_t size, const char *descr1, const char *descr2)$/;"	f
mem_overflow_init_element	lwip/src/core/mem.c	/^mem_overflow_init_element(struct mem *mem, mem_size_t user_size)$/;"	f	file:
mem_overflow_init_element	lwip/src/core/mem.c	446;"	d	file:
mem_overflow_init_raw	lwip/src/core/mem.c	/^mem_overflow_init_raw(void *p, size_t size)$/;"	f
mem_ptr_t	lwip/port/arch/cc.h	/^typedef u32_t          mem_ptr_t;$/;"	t
mem_ptr_t	lwip/src/include/lwip/arch.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_sanity	lwip/src/core/mem.c	/^mem_sanity(void)$/;"	f	file:
mem_size_t	lwip/src/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	lwip/src/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	lwip/src/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
mem_to_ptr	lwip/src/core/mem.c	/^mem_to_ptr(void *mem)$/;"	f	file:
mem_trim	lwip/src/core/mem.c	/^mem_trim(void *mem, mem_size_t size)$/;"	f
mem_trim	lwip/src/core/mem.c	/^mem_trim(void *rmem, mem_size_t new_size)$/;"	f
mem_x	codec2/nlp.c	/^    float         mem_x,mem_y;       \/* memory for notch filter      *\/$/;"	m	struct:__anon138	file:
mem_y	codec2/nlp.c	/^    float         mem_x,mem_y;       \/* memory for notch filter      *\/$/;"	m	struct:__anon138	file:
memerr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_igmp
memerr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memp	lwip/src/include/lwip/priv/memp_priv.h	/^struct memp {$/;"	s
memp	lwip/src/include/lwip/stats.h	/^  struct stats_mem *memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp_desc	lwip/src/include/lwip/priv/memp_priv.h	/^struct memp_desc {$/;"	s
memp_free	lwip/src/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_free_pool	lwip/src/core/memp.c	/^memp_free_pool(const struct memp_desc *desc, void *mem)$/;"	f
memp_init	lwip/src/core/memp.c	/^memp_init(void)$/;"	f
memp_init_pool	lwip/src/core/memp.c	/^memp_init_pool(const struct memp_desc *desc)$/;"	f
memp_malloc	lwip/src/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	lwip/src/include/lwip/memp.h	145;"	d
memp_malloc_helper	lwip/src/include/lwip/memp.h	/^struct memp_malloc_helper$/;"	s
memp_malloc_pool	lwip/src/core/memp.c	/^memp_malloc_pool(const struct memp_desc *desc)$/;"	f
memp_malloc_pool	lwip/src/include/lwip/priv/memp_priv.h	151;"	d
memp_overflow_check_all	lwip/src/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	lwip/src/core/memp.c	/^memp_overflow_check_element(struct memp *p, const struct memp_desc *desc)$/;"	f	file:
memp_overflow_init_element	lwip/src/core/memp.c	/^memp_overflow_init_element(struct memp *p, const struct memp_desc *desc)$/;"	f	file:
memp_pool_helper_t	lwip/src/include/lwip/priv/memp_priv.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon452
memp_pools	lwip/src/core/memp.c	/^const struct memp_desc *const memp_pools[MEMP_MAX] = {$/;"	v
memp_sanity	lwip/src/core/memp.c	/^memp_sanity(const struct memp_desc *desc)$/;"	f	file:
memp_t	lwip/src/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon476
message	codec2/mpdecode_core.h	/^  float *message;     $/;"	m	struct:c_node
message	codec2/mpdecode_core.h	/^  float *message;     $/;"	m	struct:v_node
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_halt_msg_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_indicate_status_msg_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_init_cmplt_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_init_msg_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_keepalive_cmplt_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_keepalive_msg_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_packet_msg_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_query_cmplt_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_query_msg_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_reset_cmplt_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_reset_msg_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_set_cmplt_struct
messageLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageLength;$/;"	m	struct:_rndis_set_msg_struct
messageType	drivers/fsl_enet.h	/^    uint8_t messageType;                         \/*!< PTP message type. *\/$/;"	m	struct:_enet_ptp_time_data
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_halt_msg_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_indicate_status_msg_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_init_cmplt_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_init_msg_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_keepalive_cmplt_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_keepalive_msg_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_packet_msg_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_query_cmplt_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_query_msg_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_reset_cmplt_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_reset_msg_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_set_cmplt_struct
messageType	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t messageType;$/;"	m	struct:_rndis_set_msg_struct
method	lwip/src/include/netif/ppp/ccp.h	/^    u8_t method;		\/* code for chosen compression method *\/$/;"	m	struct:ccp_options
method_name	lwip/src/netif/ppp/ccp.c	/^static const char *method_name(ccp_options *opt, ccp_options *opt2) {$/;"	f	file:
mib2	lwip/src/include/lwip/stats.h	/^  struct stats_mib2 mib2;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mib2
mib2_add_arp_entry	lwip/src/include/lwip/snmp.h	154;"	d
mib2_add_arp_entry	lwip/src/include/lwip/snmp.h	181;"	d
mib2_add_ip4	lwip/src/include/lwip/snmp.h	185;"	d
mib2_add_route_ip4	lwip/src/include/lwip/snmp.h	187;"	d
mib2_counters	lwip/src/include/lwip/netif.h	/^  struct stats_mib2_netif_ctrs mib2_counters;$/;"	m	struct:netif	typeref:struct:netif::stats_mib2_netif_ctrs
mib2_netif_added	lwip/src/include/lwip/snmp.h	177;"	d
mib2_netif_removed	lwip/src/include/lwip/snmp.h	178;"	d
mib2_remove_arp_entry	lwip/src/include/lwip/snmp.h	155;"	d
mib2_remove_arp_entry	lwip/src/include/lwip/snmp.h	182;"	d
mib2_remove_ip4	lwip/src/include/lwip/snmp.h	186;"	d
mib2_remove_route_ip4	lwip/src/include/lwip/snmp.h	188;"	d
mib2_udp_bind	lwip/src/include/lwip/snmp.h	191;"	d
mib2_udp_unbind	lwip/src/include/lwip/snmp.h	192;"	d
microwire	CMSIS_driver/Driver_SPI.h	/^  uint32_t microwire        : 1;        \/\/\/< supports Microwire Interface$/;"	m	struct:_ARM_SPI_CAPABILITIES
miiDuplex	drivers/fsl_enet.h	/^    enet_mii_duplex_t miiDuplex; \/*!< MII duplex. *\/$/;"	m	struct:_enet_config
miiMode	drivers/fsl_enet.h	/^    enet_mii_mode_t miiMode;     \/*!< MII mode. *\/$/;"	m	struct:_enet_config
miiSpeed	drivers/fsl_enet.h	/^    enet_mii_speed_t miiSpeed;   \/*!< MII Speed. *\/$/;"	m	struct:_enet_config
minor	usb/include/usb.h	/^    uint8_t minor;  \/*!< Minor *\/$/;"	m	struct:_usb_version
minorVersion	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t minorVersion;$/;"	m	struct:_rndis_init_cmplt_struct
minorVersion	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t minorVersion;$/;"	m	struct:_rndis_init_msg_struct
mld6	lwip/src/include/lwip/stats.h	/^  struct stats_igmp mld6;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
mld6_delayed_report	lwip/src/core/ipv6/mld6.c	/^mld6_delayed_report(struct mld_group *group, u16_t maxresp_in)$/;"	f	file:
mld6_input	lwip/src/core/ipv6/mld6.c	/^mld6_input(struct pbuf *p, struct netif *inp)$/;"	f
mld6_joingroup	lwip/src/core/ipv6/mld6.c	/^mld6_joingroup(const ip6_addr_t *srcaddr, const ip6_addr_t *groupaddr)$/;"	f
mld6_joingroup_netif	lwip/src/core/ipv6/mld6.c	/^mld6_joingroup_netif(struct netif *netif, const ip6_addr_t *groupaddr)$/;"	f
mld6_leavegroup	lwip/src/core/ipv6/mld6.c	/^mld6_leavegroup(const ip6_addr_t *srcaddr, const ip6_addr_t *groupaddr)$/;"	f
mld6_leavegroup_netif	lwip/src/core/ipv6/mld6.c	/^mld6_leavegroup_netif(struct netif *netif, const ip6_addr_t *groupaddr)$/;"	f
mld6_lookfor_group	lwip/src/core/ipv6/mld6.c	/^mld6_lookfor_group(struct netif *ifp, const ip6_addr_t *addr)$/;"	f
mld6_new_group	lwip/src/core/ipv6/mld6.c	/^mld6_new_group(struct netif *ifp, const ip6_addr_t *addr)$/;"	f	file:
mld6_remove_group	lwip/src/core/ipv6/mld6.c	/^mld6_remove_group(struct netif *netif, struct mld_group *group)$/;"	f	file:
mld6_report_groups	lwip/src/core/ipv6/mld6.c	/^mld6_report_groups(struct netif *netif)$/;"	f
mld6_send	lwip/src/core/ipv6/mld6.c	/^mld6_send(struct netif *netif, struct mld_group *group, u8_t type)$/;"	f	file:
mld6_stop	lwip/src/core/ipv6/mld6.c	/^mld6_stop(struct netif *netif)$/;"	f
mld6_tmr	lwip/src/core/ipv6/mld6.c	/^mld6_tmr(void)$/;"	f
mld_group	lwip/src/include/lwip/mld6.h	/^struct mld_group {$/;"	s
mld_header	lwip/src/include/lwip/prot/mld6.h	/^struct mld_header {$/;"	s
mld_mac_filter	lwip/src/include/lwip/netif.h	/^  netif_mld_mac_filter_fn mld_mac_filter;$/;"	m	struct:netif
mode	CMSIS_driver/Driver_I2C.h	/^  uint32_t mode             : 1;        \/\/\/< Mode: 0=Slave, 1=Master$/;"	m	struct:_ARM_I2C_STATUS
mode	codec2/codec2_internal.h	/^    int           mode;$/;"	m	struct:CODEC2
mode	codec2/fsk.h	/^    int mode;               \/* 2FSK or 4FSK *\/$/;"	m	struct:FSK
mode	component/serial_manager/serial_manager.c	/^    serial_manager_transmission_mode_t mode;$/;"	m	struct:_serial_manager_transfer	file:
mode	drivers/fsl_ctimer.h	/^    ctimer_timer_mode_t mode;       \/*!< Timer mode *\/$/;"	m	struct:_ctimer_config
mode	drivers/fsl_gpio.h	/^    uint8_t mode;         \/* The trigger mode of GPIO interrupts *\/$/;"	m	struct:_gpio_interrupt_config
mode	drivers/fsl_i2s.h	/^    i2s_mode_t mode;                \/*!< I2S mode *\/$/;"	m	struct:_i2s_config
mode	lwip/src/include/netif/ppp/polarssl/des.h	/^    int mode;                   \/*!<  encrypt\/decrypt   *\/$/;"	m	struct:__anon432
modeDataLength	usb/device/class/usb_device_msc_ufi.h	/^    uint16_t modeDataLength; \/*!< Mode Data Length*\/$/;"	m	struct:_usb_device_mode_parameters_header_struct
mode_fault	CMSIS_driver/Driver_SPI.h	/^  uint32_t mode_fault : 1;              \/\/\/< Mode fault detected; optional (cleared on start of transfer operation)$/;"	m	struct:_ARM_SPI_STATUS
modefunc	drivers/fsl_iocon.h	/^    uint32_t modefunc : 16; \/* Function and mode *\/$/;"	m	struct:_iocon_group
modem_probe_close	codec2/modem_probe.h	/^static inline void modem_probe_close(){$/;"	f
modem_probe_init	codec2/modem_probe.h	/^static inline void modem_probe_init(char *modname,char *runname){$/;"	f
modem_probe_samp_c	codec2/modem_probe.h	/^static inline void modem_probe_samp_c(char *name,COMP samp[],size_t cnt){$/;"	f
modem_probe_samp_c	codec2/modem_probe.h	/^static inline void modem_probe_samp_c(char *tracename,COMP samp[],size_t cnt){$/;"	f
modem_probe_samp_cft	codec2/modem_probe.h	/^static inline void modem_probe_samp_cft(char *name,complex float samp[],size_t cnt){$/;"	f
modem_probe_samp_cft	codec2/modem_probe.h	/^static inline void modem_probe_samp_cft(char *tracename,complex float samp[],size_t cnt){$/;"	f
modem_probe_samp_f	codec2/modem_probe.h	/^static inline void modem_probe_samp_f(char *name,float samp[],size_t cnt){$/;"	f
modem_probe_samp_f	codec2/modem_probe.h	/^static inline void modem_probe_samp_f(char *tracename,float samp[],size_t cnt){$/;"	f
modem_probe_samp_i	codec2/modem_probe.h	/^static inline void modem_probe_samp_i(char *name,int samp[],size_t sampcnt){$/;"	f
modem_probe_samp_i	codec2/modem_probe.h	/^static inline void modem_probe_samp_i(char *tracename,int samp[],size_t cnt){$/;"	f
mp_bundle_terminated	lwip/src/include/netif/ppp/ppp_impl.h	605;"	d
mp_bundle_terminated	lwip/src/netif/ppp/multilink.c	/^void mp_bundle_terminated()$/;"	f
mp_check_options	lwip/src/netif/ppp/multilink.c	/^mp_check_options()$/;"	f
mp_exit_bundle	lwip/src/include/netif/ppp/ppp_impl.h	606;"	d
mp_exit_bundle	lwip/src/netif/ppp/multilink.c	/^void mp_exit_bundle()$/;"	f
mp_join_bundle	lwip/src/netif/ppp/multilink.c	/^mp_join_bundle()$/;"	f
mppe	lwip/src/include/netif/ppp/ccp.h	/^    u8_t mppe;			\/* MPPE bitfield *\/$/;"	m	struct:ccp_options
mppe_comp	lwip/src/include/netif/ppp/ppp.h	/^  ppp_mppe_state mppe_comp;      \/* MPPE "compressor" structure *\/$/;"	m	struct:ppp_pcb_s
mppe_comp_reset	lwip/src/netif/ppp/mppe.c	/^void mppe_comp_reset(ppp_pcb *pcb, ppp_mppe_state *state)$/;"	f
mppe_compress	lwip/src/netif/ppp/mppe.c	/^mppe_compress(ppp_pcb *pcb, ppp_mppe_state *state, struct pbuf **pb, u16_t protocol)$/;"	f
mppe_decomp	lwip/src/include/netif/ppp/ppp.h	/^  ppp_mppe_state mppe_decomp;    \/* MPPE "decompressor" structure *\/$/;"	m	struct:ppp_pcb_s
mppe_decomp_reset	lwip/src/netif/ppp/mppe.c	/^void mppe_decomp_reset(ppp_pcb *pcb, ppp_mppe_state *state)$/;"	f
mppe_decompress	lwip/src/netif/ppp/mppe.c	/^mppe_decompress(ppp_pcb *pcb, ppp_mppe_state *state, struct pbuf **pb)$/;"	f
mppe_init	lwip/src/netif/ppp/mppe.c	/^mppe_init(ppp_pcb *pcb, ppp_mppe_state *state, u8_t options)$/;"	f
mppe_keys_set	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int mppe_keys_set           :1; \/* Have the MPPE keys been set? *\/$/;"	m	struct:ppp_pcb_s
mppe_rekey	lwip/src/netif/ppp/mppe.c	/^static void mppe_rekey(ppp_mppe_state * state, int initial_key)$/;"	f	file:
mppe_set_key	lwip/src/netif/ppp/mppe.c	/^void mppe_set_key(ppp_pcb *pcb, ppp_mppe_state *state, u8_t *key) {$/;"	f
mppe_sha1_pad1	lwip/src/include/netif/ppp/mppe.h	/^static const u8_t mppe_sha1_pad1[SHA1_PAD_SIZE] = {$/;"	v
mppe_sha1_pad2	lwip/src/include/netif/ppp/mppe.h	/^static const u8_t mppe_sha1_pad2[SHA1_PAD_SIZE] = {$/;"	v
mrru	lwip/src/include/netif/ppp/lcp.h	/^    u16_t mrru;			\/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	lwip/src/include/netif/ppp/lcp.h	/^    u16_t mru;			\/* Value of MRU *\/$/;"	m	struct:lcp_options
msPerFrame	emwin/emWin_header/GUI.h	/^  int msPerFrame;    \/\/ Default duration of 1 frame$/;"	m	struct:__anon388
ms_lanman	lwip/src/netif/ppp/chap_ms.c	/^bool	ms_lanman = 0;    	\/* Use LanMan password instead of NT *\/$/;"	v
mscCbw	usb/device/class/usb_device_msc.h	/^    usb_device_msc_cbw_t *mscCbw; \/*!< CBW structure *\/$/;"	m	struct:_usb_device_msc_struct
mscCsw	usb/device/class/usb_device_msc.h	/^    usb_device_msc_csw_t *mscCsw; \/*!< CSW structure *\/$/;"	m	struct:_usb_device_msc_struct
mscUfi	usb/device/class/usb_device_msc.h	/^    usb_device_msc_ufi_struct_t mscUfi; \/*!< UFI command information structure*\/$/;"	m	struct:_usb_device_msc_struct
mschap2_peer_challenge	lwip/src/netif/ppp/chap_ms.c	/^static char *mschap2_peer_challenge = NULL;$/;"	v	file:
mschap_challenge	lwip/src/netif/ppp/chap_ms.c	/^static char *mschap_challenge = NULL;$/;"	v	file:
msecs	lwip/src/include/lwip/priv/tcpip_priv.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon468::__anon473
msel	drivers/fsl_clock.h	/^    uint8_t msel;       \/*!< USB PLL control register msel:1U-256U *\/$/;"	m	struct:_usb_pll_setup
msg	lwip/src/include/lwip/priv/api_msg.h	/^  } msg;$/;"	m	struct:api_msg	typeref:union:api_msg::__anon454
msg	lwip/src/include/lwip/priv/api_msg.h	/^  } msg;$/;"	m	struct:netifapi_msg	typeref:union:netifapi_msg::__anon463
msg	lwip/src/include/lwip/priv/tcpip_priv.h	/^      void* msg;$/;"	m	struct:tcpip_msg::__anon468::__anon469
msg	lwip/src/include/lwip/priv/tcpip_priv.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon468
msg	lwip/src/include/netif/ppp/pppapi.h	/^  struct pppapi_msg_msg msg;$/;"	m	struct:pppapi_msg	typeref:struct:pppapi_msg::pppapi_msg_msg
msg	lwip/src/include/netif/ppp/pppapi.h	/^  } msg;$/;"	m	struct:pppapi_msg_msg	typeref:union:pppapi_msg_msg::__anon435
msg	osa/usb_osa_freertos.c	/^    uint32_t msg[USB_OSA_FREERTOS_MSG_SIZE]; \/* Message entity pointer *\/$/;"	m	struct:_usb_osa_msg_struct	file:
msg_control	lwip/src/include/lwip/sockets.h	/^  void         *msg_control;$/;"	m	struct:msghdr
msg_controllen	lwip/src/include/lwip/sockets.h	/^  socklen_t     msg_controllen;$/;"	m	struct:msghdr
msg_flags	lwip/src/include/lwip/sockets.h	/^  int           msg_flags;$/;"	m	struct:msghdr
msg_iov	lwip/src/include/lwip/sockets.h	/^  struct iovec *msg_iov;$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec
msg_iovlen	lwip/src/include/lwip/sockets.h	/^  int           msg_iovlen;$/;"	m	struct:msghdr
msg_name	lwip/src/include/lwip/sockets.h	/^  void         *msg_name;$/;"	m	struct:msghdr
msg_namelen	lwip/src/include/lwip/sockets.h	/^  socklen_t     msg_namelen;$/;"	m	struct:msghdr
msghdr	lwip/src/include/lwip/sockets.h	/^struct msghdr {$/;"	s
msgs	osa/usb_osa_freertos.c	/^    usb_osa_msg_struct_t msgs[USB_OSA_FREERTOS_MSG_COUNT]; \/* Message entity list *\/$/;"	m	struct:_usb_osa_msgq_struct	file:
mss	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_mss_fn                mss;$/;"	m	struct:altcp_functions
mss	lwip/src/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mtCOVERAGE_TEST_DELAY	amazon-freertos/include/FreeRTOS.h	794;"	d
mtCOVERAGE_TEST_MARKER	amazon-freertos/include/FreeRTOS.h	790;"	d
mtlrxQuemap	drivers/fsl_enet.h	/^    enet_mtl_rxqueuemap mtlrxQuemap;         \/*!< Rx queue DMA Channel mapping. *\/$/;"	m	struct:enet_multiqueue_config
mtlrxSche	drivers/fsl_enet.h	/^    enet_mtl_multiqueue_rxsche mtlrxSche;    \/*!< Receive schedule for multi-queue. *\/$/;"	m	struct:enet_multiqueue_config
mtltxSche	drivers/fsl_enet.h	/^    enet_mtl_multiqueue_txsche mtltxSche;    \/*!< Transmit schedule for multi-queue. *\/$/;"	m	struct:enet_multiqueue_config
mtu	lwip/src/core/ipv6/nd6.c	/^  struct mtu_option     mtu;$/;"	m	union:ra_options	typeref:struct:ra_options::mtu_option	file:
mtu	lwip/src/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu6	lwip/src/include/lwip/netif.h	/^  u16_t mtu6;$/;"	m	struct:netif
mtu_option	lwip/src/include/lwip/prot/nd6.h	/^struct mtu_option {$/;"	s
mu	CMSIS/arm_math.h	/^    float32_t mu;         \/**< step size that control filter coefficient updates. *\/$/;"	m	struct:__anon105
mu	CMSIS/arm_math.h	/^    float32_t mu;        \/**< step size that controls filter coefficient updates. *\/$/;"	m	struct:__anon102
mu	CMSIS/arm_math.h	/^    q15_t mu;             \/**< step size that controls filter coefficient updates. *\/$/;"	m	struct:__anon107
mu	CMSIS/arm_math.h	/^    q15_t mu;            \/**< step size that controls filter coefficient updates. *\/$/;"	m	struct:__anon103
mu	CMSIS/arm_math.h	/^    q31_t mu;             \/**< step size that controls filter coefficient updates. *\/$/;"	m	struct:__anon106
mu	CMSIS/arm_math.h	/^    q31_t mu;            \/**< step size that controls filter coefficient updates. *\/$/;"	m	struct:__anon104
mult	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t mult : 2;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon515::__anon516
mult32x64	CMSIS/arm_math.h	/^  CMSIS_INLINE __STATIC_INLINE q63_t mult32x64($/;"	f
multAcc_32x32_keep32	CMSIS/arm_math.h	7038;"	d
multAcc_32x32_keep32_R	CMSIS/arm_math.h	7026;"	d
multSub_32x32_keep32	CMSIS/arm_math.h	7042;"	d
multSub_32x32_keep32_R	CMSIS/arm_math.h	7030;"	d
mult_32x32_keep32	CMSIS/arm_math.h	7046;"	d
mult_32x32_keep32_R	CMSIS/arm_math.h	7034;"	d
multiQueEnable	drivers/fsl_enet.h	/^    bool multiQueEnable;                           \/*!< Enable multi-queue. *\/$/;"	m	struct:_enet_handle
multi_addr	lwip/src/api/sockets.c	/^  ip4_addr_t multi_addr;$/;"	m	struct:lwip_socket_multicast_pair	file:
multi_addr	lwip/src/api/sockets.c	/^  ip6_addr_t multi_addr;$/;"	m	struct:lwip_socket_multicast_mld6_pair	file:
multicast_address	lwip/src/core/ipv6/nd6.c	/^static ip6_addr_t multicast_address;$/;"	v	file:
multilink_join_hook	lwip/src/netif/ppp/auth.c	/^void (*multilink_join_hook) (void) = NULL;$/;"	v
multilink_master	lwip/src/include/netif/ppp/ppp_impl.h	608;"	d
multilink_master	lwip/src/netif/ppp/multilink.c	/^bool multilink_master;		\/* we own the multilink bundle *\/$/;"	v
multiplierOverride	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t multiplierOverride : 2;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon521::__anon522
multiplierOverride	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t multiplierOverride : 2;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon517::__anon518
multiqueueCfg	drivers/fsl_enet.h	/^    enet_multiqueue_config_t *multiqueueCfg; \/*!< Use both tx\/rx queue(dma channel) 0 and 1. *\/$/;"	m	struct:_enet_config
mutex	amazon-freertos/include/threading_alt.h	/^    SemaphoreHandle_t mutex;$/;"	m	struct:__anon1
mutex	drivers/freertos/fsl_i2c_freertos.h	/^    SemaphoreHandle_t mutex;        \/*!< A mutex to lock the handle during a transfer *\/$/;"	m	struct:_i2c_rtos_handle
mutex	drivers/freertos/fsl_spi_freertos.h	/^    SemaphoreHandle_t mutex; \/*!< Mutex to lock the handle during a trasfer *\/$/;"	m	struct:_spi_rtos_handle
mutex	lwip/src/include/lwip/stats.h	/^  struct stats_syselem mutex;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mutex	usb/device/class/usb_device_cdc_acm.h	/^    usb_osa_mutex_handle mutex; \/*!< The mutex of the pipe. *\/$/;"	m	struct:_usb_device_cdc_acm_pipe
mutexBuffer	drivers/freertos/fsl_i2c_freertos.h	/^    StaticSemaphore_t mutexBuffer;     \/*!< Statically allocated memory for mutex *\/$/;"	m	struct:_i2c_rtos_handle
my_custom_pbuf	doc/lwip/doc/ZeroCopyRx.c	/^typedef struct my_custom_pbuf$/;"	s	file:
my_custom_pbuf_t	doc/lwip/doc/ZeroCopyRx.c	/^} my_custom_pbuf_t;$/;"	t	typeref:struct:my_custom_pbuf	file:
my_pbuf_free_custom	doc/lwip/doc/ZeroCopyRx.c	/^void my_pbuf_free_custom(void* p)$/;"	f
n	lwip/src/include/lwip/priv/api_msg.h	/^    } n;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::__anon455
nPRIV	CMSIS/core_armv8mbl.h	/^    uint32_t nPRIV:1;                    \/*!< bit:      0  Execution privilege in Thread mode *\/$/;"	m	struct:__anon119::__anon120
nPRIV	CMSIS/core_armv8mml.h	/^    uint32_t nPRIV:1;                    \/*!< bit:      0  Execution privilege in Thread mode *\/$/;"	m	struct:__anon15::__anon16
nPRIV	CMSIS/core_cm4.h	/^    uint32_t nPRIV:1;                    \/*!< bit:      0  Execution privilege in Thread mode *\/$/;"	m	struct:__anon37::__anon38
nValues	CMSIS/arm_math.h	/^    uint32_t nValues;           \/**< nValues *\/$/;"	m	struct:__anon65
n_in	codec2/varicode.h	/^    int            n_in;$/;"	m	struct:VARICODE_DEC
n_samp	codec2/codec2_internal.h	/^    int           n_samp;$/;"	m	struct:CODEC2
n_samp	codec2/defines.h	/^    int   n_samp;        \/* number of samples per 10ms frame at Fs   *\/$/;"	m	struct:__anon134
n_zeros	codec2/varicode.h	/^    int            n_zeros;$/;"	m	struct:VARICODE_DEC
na_header	lwip/src/include/lwip/prot/nd6.h	/^struct na_header {$/;"	s
nagle_disable	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_nagle_disable_fn      nagle_disable;$/;"	m	struct:altcp_functions
nagle_disabled	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_nagle_disabled_fn     nagle_disabled;$/;"	m	struct:altcp_functions
nagle_enable	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_nagle_enable_fn       nagle_enable;$/;"	m	struct:altcp_functions
nakci	lwip/src/include/netif/ppp/fsm.h	/^    int  (*nakci)		\/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	lwip/src/include/netif/ppp/fsm.h	/^    u8_t nakloops;		\/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	littlefs/littlefs_include/lfs.h	/^    char name[LFS_NAME_MAX+1];$/;"	m	struct:lfs_info
name	lwip/src/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	lwip/src/include/lwip/dns.h	/^  const char *name;$/;"	m	struct:local_hostlist_entry
name	lwip/src/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	lwip/src/include/lwip/priv/api_msg.h	/^      char name[NETIF_NAMESIZE];$/;"	m	struct:netifapi_msg::__anon463::__anon466
name	lwip/src/include/lwip/priv/api_msg.h	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_api_msg
name	lwip/src/include/lwip/stats.h	/^  const char *name;$/;"	m	struct:stats_mem
name	lwip/src/include/netif/ppp/chap-new.h	/^	const char *name;$/;"	m	struct:chap_client_state
name	lwip/src/include/netif/ppp/chap-new.h	/^	const char *name;$/;"	m	struct:chap_server_state
name	lwip/src/include/netif/ppp/ppp_impl.h	/^    const char *name;		\/* Text name of protocol *\/$/;"	m	struct:protent
name	lwip/src/netif/ppp/ppp.c	/^  const char *name;$/;"	m	struct:protocol_list	file:
name_of_pn_file	lwip/src/netif/ppp/eap.c	/^name_of_pn_file()$/;"	f	file:
nanosecond	drivers/fsl_enet.h	/^    uint32_t nanosecond; \/*!< Nanosecond. *\/$/;"	m	struct:_enet_ptp_time
nd6	lwip/src/include/lwip/stats.h	/^  struct stats_proto nd6;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
nd6_adjust_mld_membership	lwip/src/core/ipv6/nd6.c	/^nd6_adjust_mld_membership(struct netif *netif, s8_t addr_idx, u8_t new_state)$/;"	f
nd6_cached_destination_index	lwip/src/core/ipv6/nd6.c	/^static netif_addr_idx_t nd6_cached_destination_index;$/;"	v	file:
nd6_cached_neighbor_index	lwip/src/core/ipv6/nd6.c	/^static u8_t nd6_cached_neighbor_index;$/;"	v	file:
nd6_cleanup_netif	lwip/src/core/ipv6/nd6.c	/^nd6_cleanup_netif(struct netif *netif)$/;"	f
nd6_clear_destination_cache	lwip/src/core/ipv6/nd6.c	/^nd6_clear_destination_cache(void)$/;"	f
nd6_destination_cache_entry	lwip/src/include/lwip/priv/nd6_priv.h	/^struct nd6_destination_cache_entry {$/;"	s
nd6_duplicate_addr_detected	lwip/src/core/ipv6/nd6.c	/^nd6_duplicate_addr_detected(struct netif *netif, s8_t addr_idx)$/;"	f	file:
nd6_find_destination_cache_entry	lwip/src/core/ipv6/nd6.c	/^nd6_find_destination_cache_entry(const ip6_addr_t *ip6addr)$/;"	f	file:
nd6_find_neighbor_cache_entry	lwip/src/core/ipv6/nd6.c	/^nd6_find_neighbor_cache_entry(const ip6_addr_t *ip6addr)$/;"	f	file:
nd6_find_route	lwip/src/core/ipv6/nd6.c	/^nd6_find_route(const ip6_addr_t *ip6addr)$/;"	f
nd6_free_neighbor_cache_entry	lwip/src/core/ipv6/nd6.c	/^nd6_free_neighbor_cache_entry(s8_t i)$/;"	f	file:
nd6_free_q	lwip/src/core/ipv6/nd6.c	/^nd6_free_q(struct nd6_q_entry *q)$/;"	f	file:
nd6_free_q	lwip/src/core/ipv6/nd6.c	134;"	d	file:
nd6_get_destination_mtu	lwip/src/core/ipv6/nd6.c	/^nd6_get_destination_mtu(const ip6_addr_t *ip6addr, struct netif *netif)$/;"	f
nd6_get_next_hop_addr_or_queue	lwip/src/core/ipv6/nd6.c	/^nd6_get_next_hop_addr_or_queue(struct netif *netif, struct pbuf *q, const ip6_addr_t *ip6addr, const u8_t **hwaddrp)$/;"	f
nd6_get_next_hop_entry	lwip/src/core/ipv6/nd6.c	/^nd6_get_next_hop_entry(const ip6_addr_t *ip6addr, struct netif *netif)$/;"	f	file:
nd6_get_onlink_prefix	lwip/src/core/ipv6/nd6.c	/^nd6_get_onlink_prefix(const ip6_addr_t *prefix, struct netif *netif)$/;"	f	file:
nd6_get_router	lwip/src/core/ipv6/nd6.c	/^nd6_get_router(const ip6_addr_t *router_addr, struct netif *netif)$/;"	f	file:
nd6_input	lwip/src/core/ipv6/nd6.c	/^nd6_input(struct pbuf *p, struct netif *inp)$/;"	f
nd6_is_prefix_in_netif	lwip/src/core/ipv6/nd6.c	/^nd6_is_prefix_in_netif(const ip6_addr_t *ip6addr, struct netif *netif)$/;"	f	file:
nd6_neighbor_cache_entry	lwip/src/include/lwip/priv/nd6_priv.h	/^struct nd6_neighbor_cache_entry {$/;"	s
nd6_neighbor_cache_entry_state	lwip/src/include/lwip/priv/nd6_priv.h	/^enum nd6_neighbor_cache_entry_state {$/;"	g
nd6_new_destination_cache_entry	lwip/src/core/ipv6/nd6.c	/^nd6_new_destination_cache_entry(void)$/;"	f	file:
nd6_new_neighbor_cache_entry	lwip/src/core/ipv6/nd6.c	/^nd6_new_neighbor_cache_entry(void)$/;"	f	file:
nd6_new_onlink_prefix	lwip/src/core/ipv6/nd6.c	/^nd6_new_onlink_prefix(const ip6_addr_t *prefix, struct netif *netif)$/;"	f	file:
nd6_new_router	lwip/src/core/ipv6/nd6.c	/^nd6_new_router(const ip6_addr_t *router_addr, struct netif *netif)$/;"	f	file:
nd6_prefix_list_entry	lwip/src/include/lwip/priv/nd6_priv.h	/^struct nd6_prefix_list_entry {$/;"	s
nd6_process_autoconfig_prefix	lwip/src/core/ipv6/nd6.c	/^nd6_process_autoconfig_prefix(struct netif *netif,$/;"	f	file:
nd6_q_entry	lwip/src/include/lwip/priv/nd6_priv.h	/^struct nd6_q_entry {$/;"	s
nd6_queue_packet	lwip/src/core/ipv6/nd6.c	/^nd6_queue_packet(s8_t neighbor_index, struct pbuf *q)$/;"	f	file:
nd6_ra_buffer	lwip/src/core/ipv6/nd6.c	/^static union ra_options nd6_ra_buffer;$/;"	v	typeref:union:ra_options	file:
nd6_reachability_hint	lwip/src/core/ipv6/nd6.c	/^nd6_reachability_hint(const ip6_addr_t *ip6addr)$/;"	f
nd6_restart_netif	lwip/src/core/ipv6/nd6.c	/^nd6_restart_netif(struct netif *netif)$/;"	f
nd6_router_list_entry	lwip/src/include/lwip/priv/nd6_priv.h	/^struct nd6_router_list_entry {$/;"	s
nd6_select_router	lwip/src/core/ipv6/nd6.c	/^nd6_select_router(const ip6_addr_t *ip6addr, struct netif *netif)$/;"	f	file:
nd6_send_na	lwip/src/core/ipv6/nd6.c	/^nd6_send_na(struct netif *netif, const ip6_addr_t *target_addr, u8_t flags)$/;"	f	file:
nd6_send_neighbor_cache_probe	lwip/src/core/ipv6/nd6.c	/^nd6_send_neighbor_cache_probe(struct nd6_neighbor_cache_entry *entry, u8_t flags)$/;"	f	file:
nd6_send_ns	lwip/src/core/ipv6/nd6.c	/^nd6_send_ns(struct netif *netif, const ip6_addr_t *target_addr, u8_t flags)$/;"	f	file:
nd6_send_q	lwip/src/core/ipv6/nd6.c	/^nd6_send_q(s8_t i)$/;"	f	file:
nd6_send_rs	lwip/src/core/ipv6/nd6.c	/^nd6_send_rs(struct netif *netif)$/;"	f	file:
nd6_tmr	lwip/src/core/ipv6/nd6.c	/^nd6_tmr(void)$/;"	f
nd6_tmr_rs_reduction	lwip/src/core/ipv6/nd6.c	/^static u8_t nd6_tmr_rs_reduction;$/;"	v	file:
ndis_physical_medium_enum_t	usb/device/class/usb_device_cdc_rndis.h	/^} ndis_physical_medium_enum_t;$/;"	t	typeref:enum:_ndis_physical_medium_enum
needInStallFlag	usb/device/class/usb_device_msc.h	/^    uint8_t needInStallFlag;      \/*!< In endpoint should be stalled*\/$/;"	m	struct:_usb_device_msc_struct
needOutStallFlag	usb/device/class/usb_device_msc.h	/^    uint8_t needOutStallFlag;     \/*!< Out endpoint should be stalled*\/$/;"	m	struct:_usb_device_msc_struct
neg_accompression	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_accompression :1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int neg_addr               :1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_asyncmap      :1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_cbcp          :1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_chap          :1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_eap	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_eap           :1; \/* Ask for EAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_endpoint      :1; \/* negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_ifaceid	lwip/src/include/netif/ppp/ipv6cp.h	/^    unsigned int neg_ifaceid    :1;  \/* Negotiate interface identifier? *\/$/;"	m	struct:ipv6cp_options
neg_lqr	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_lqr           :1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_magicnumber   :1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_mrru          :1; \/* negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_mru           :1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_pcompression  :1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_ssnhf         :1; \/* negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int neg_upap          :1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int neg_vj                 :1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
neg_vj	lwip/src/include/netif/ppp/ipv6cp.h	/^    unsigned int neg_vj         :1;  \/* Van Jacobson Compression? *\/$/;"	m	struct:ipv6cp_options
neighbor_cache	lwip/src/core/ipv6/nd6.c	/^struct nd6_neighbor_cache_entry neighbor_cache[LWIP_ND6_NUM_NEIGHBORS];$/;"	v	typeref:struct:nd6_neighbor_cache_entry
neighbor_entry	lwip/src/include/lwip/priv/nd6_priv.h	/^  struct nd6_neighbor_cache_entry *neighbor_entry;$/;"	m	struct:nd6_router_list_entry	typeref:struct:nd6_router_list_entry::nd6_neighbor_cache_entry
net_short	lwip/src/netif/ppp/ipcp.c	2385;"	d	file:
netbuf	lwip/src/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	lwip/src/include/lwip/priv/sockets_priv.h	/^  struct netbuf *netbuf;$/;"	m	union:lwip_sock_lastdata	typeref:struct:lwip_sock_lastdata::netbuf
netbuf_alloc	lwip/src/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	lwip/src/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	lwip/src/include/lwip/netbuf.h	90;"	d
netbuf_copy_partial	lwip/src/include/lwip/netbuf.h	88;"	d
netbuf_data	lwip/src/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	lwip/src/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_destaddr	lwip/src/include/lwip/netbuf.h	97;"	d
netbuf_destport	lwip/src/include/lwip/netbuf.h	100;"	d
netbuf_destport	lwip/src/include/lwip/netbuf.h	102;"	d
netbuf_first	lwip/src/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	lwip/src/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	lwip/src/include/lwip/netbuf.h	93;"	d
netbuf_fromport	lwip/src/include/lwip/netbuf.h	95;"	d
netbuf_len	lwip/src/include/lwip/netbuf.h	92;"	d
netbuf_new	lwip/src/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	lwip/src/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	lwip/src/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netbuf_set_chksum	lwip/src/include/lwip/netbuf.h	106;"	d
netbuf_set_destaddr	lwip/src/include/lwip/netbuf.h	98;"	d
netbuf_set_fromaddr	lwip/src/include/lwip/netbuf.h	94;"	d
netbuf_take	lwip/src/include/lwip/netbuf.h	91;"	d
netconn	lwip/src/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_aborted	lwip/src/api/api_msg.c	/^const u8_t netconn_aborted = 0;$/;"	v
netconn_accept	lwip/src/api/api_lib.c	/^netconn_accept(struct netconn *conn, struct netconn **new_conn)$/;"	f
netconn_addr	lwip/src/include/lwip/api.h	324;"	d
netconn_alloc	lwip/src/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_apimsg	lwip/src/api/api_lib.c	/^netconn_apimsg(tcpip_callback_fn fn, struct api_msg *apimsg)$/;"	f	file:
netconn_bind	lwip/src/api/api_lib.c	/^netconn_bind(struct netconn *conn, const ip_addr_t *addr, u16_t port)$/;"	f
netconn_bind_if	lwip/src/api/api_lib.c	/^netconn_bind_if(struct netconn *conn, u8_t if_idx)$/;"	f
netconn_callback	lwip/src/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_clear_flags	lwip/src/include/lwip/api.h	373;"	d
netconn_close	lwip/src/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_close_shutdown	lwip/src/api/api_lib.c	/^netconn_close_shutdown(struct netconn *conn, u8_t how)$/;"	f	file:
netconn_closed	lwip/src/api/api_msg.c	/^const u8_t netconn_closed = 0;$/;"	v
netconn_connect	lwip/src/api/api_lib.c	/^netconn_connect(struct netconn *conn, const ip_addr_t *addr, u16_t port)$/;"	f
netconn_delete	lwip/src/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_deleted	lwip/src/api/api_msg.c	/^const u8_t netconn_deleted = 0;$/;"	v
netconn_disconnect	lwip/src/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_drain	lwip/src/api/api_msg.c	/^netconn_drain(struct netconn *conn)$/;"	f	file:
netconn_err	lwip/src/api/api_lib.c	/^netconn_err(struct netconn *conn)$/;"	f
netconn_evt	lwip/src/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	lwip/src/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_get_ipv6only	lwip/src/include/lwip/api.h	395;"	d
netconn_get_recvbufsize	lwip/src/include/lwip/api.h	414;"	d
netconn_get_recvtimeout	lwip/src/include/lwip/api.h	408;"	d
netconn_get_sendtimeout	lwip/src/include/lwip/api.h	402;"	d
netconn_getaddr	lwip/src/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, ip_addr_t *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	lwip/src/include/lwip/api.h	362;"	d
netconn_gethostbyname_addrtype	lwip/src/api/api_lib.c	/^netconn_gethostbyname_addrtype(const char *name, ip_addr_t *addr, u8_t dns_addrtype)$/;"	f
netconn_gethostbyname_addrtype	lwip/src/include/lwip/api.h	365;"	d
netconn_igmp	lwip/src/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_is_flag_set	lwip/src/include/lwip/api.h	374;"	d
netconn_is_nonblocking	lwip/src/include/lwip/api.h	382;"	d
netconn_join_leave_group	lwip/src/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_join_leave_group_netif	lwip/src/api/api_lib.c	/^netconn_join_leave_group_netif(struct netconn *conn,$/;"	f
netconn_listen	lwip/src/include/lwip/api.h	332;"	d
netconn_listen_with_backlog	lwip/src/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_mark_mbox_invalid	lwip/src/api/api_msg.c	/^netconn_mark_mbox_invalid(struct netconn *conn)$/;"	f	file:
netconn_new	lwip/src/include/lwip/api.h	310;"	d
netconn_new_with_callback	lwip/src/include/lwip/api.h	311;"	d
netconn_new_with_proto_and_callback	lwip/src/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	lwip/src/include/lwip/api.h	322;"	d
netconn_prepare_delete	lwip/src/api/api_lib.c	/^netconn_prepare_delete(struct netconn *conn)$/;"	f
netconn_recv	lwip/src/api/api_lib.c	/^netconn_recv(struct netconn *conn, struct netbuf **new_buf)$/;"	f
netconn_recv_bufsize	lwip/src/include/lwip/api.h	370;"	d
netconn_recv_data	lwip/src/api/api_lib.c	/^netconn_recv_data(struct netconn *conn, void **new_buf, u8_t apiflags)$/;"	f	file:
netconn_recv_data_tcp	lwip/src/api/api_lib.c	/^netconn_recv_data_tcp(struct netconn *conn, struct pbuf **new_buf, u8_t apiflags)$/;"	f	file:
netconn_recv_tcp_pbuf	lwip/src/api/api_lib.c	/^netconn_recv_tcp_pbuf(struct netconn *conn, struct pbuf **new_buf)$/;"	f
netconn_recv_tcp_pbuf_flags	lwip/src/api/api_lib.c	/^netconn_recv_tcp_pbuf_flags(struct netconn *conn, struct pbuf **new_buf, u8_t apiflags)$/;"	f
netconn_recv_udp_raw_netbuf	lwip/src/api/api_lib.c	/^netconn_recv_udp_raw_netbuf(struct netconn *conn, struct netbuf **new_buf)$/;"	f
netconn_recv_udp_raw_netbuf_flags	lwip/src/api/api_lib.c	/^netconn_recv_udp_raw_netbuf_flags(struct netconn *conn, struct netbuf **new_buf, u8_t apiflags)$/;"	f
netconn_reset	lwip/src/api/api_msg.c	/^const u8_t netconn_reset = 0;$/;"	v
netconn_send	lwip/src/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	lwip/src/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, const ip_addr_t *addr, u16_t port)$/;"	f
netconn_set_flags	lwip/src/include/lwip/api.h	372;"	d
netconn_set_ipv6only	lwip/src/include/lwip/api.h	388;"	d
netconn_set_nonblocking	lwip/src/include/lwip/api.h	377;"	d
netconn_set_recvbufsize	lwip/src/include/lwip/api.h	412;"	d
netconn_set_recvtimeout	lwip/src/include/lwip/api.h	406;"	d
netconn_set_sendtimeout	lwip/src/include/lwip/api.h	400;"	d
netconn_shutdown	lwip/src/api/api_lib.c	/^netconn_shutdown(struct netconn *conn, u8_t shut_rx, u8_t shut_tx)$/;"	f
netconn_state	lwip/src/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_tcp_recvd	lwip/src/api/api_lib.c	/^netconn_tcp_recvd(struct netconn *conn, size_t len)$/;"	f
netconn_tcp_recvd_msg	lwip/src/api/api_lib.c	/^netconn_tcp_recvd_msg(struct netconn *conn, size_t len, struct api_msg *msg)$/;"	f	file:
netconn_thread_cleanup	lwip/src/api/api_lib.c	/^netconn_thread_cleanup(void)$/;"	f
netconn_thread_cleanup	lwip/src/include/lwip/api.h	422;"	d
netconn_thread_init	lwip/src/api/api_lib.c	/^netconn_thread_init(void)$/;"	f
netconn_thread_init	lwip/src/include/lwip/api.h	421;"	d
netconn_type	lwip/src/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_type	lwip/src/include/lwip/api.h	317;"	d
netconn_write	lwip/src/include/lwip/api.h	348;"	d
netconn_write_partly	lwip/src/api/api_lib.c	/^netconn_write_partly(struct netconn *conn, const void *dataptr, size_t size,$/;"	f
netconn_write_vectors_partly	lwip/src/api/api_lib.c	/^netconn_write_vectors_partly(struct netconn *conn, struct netvector *vectors, u16_t vectorcnt,$/;"	f
netif	lwip/src/core/ipv4/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	lwip/src/include/lwip/netif.h	/^struct netif {$/;"	s
netif	lwip/src/include/lwip/priv/api_msg.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netif
netif	lwip/src/include/lwip/priv/nd6_priv.h	/^  struct netif *netif;$/;"	m	struct:nd6_neighbor_cache_entry	typeref:struct:nd6_neighbor_cache_entry::netif
netif	lwip/src/include/lwip/priv/nd6_priv.h	/^  struct netif *netif;$/;"	m	struct:nd6_prefix_list_entry	typeref:struct:nd6_prefix_list_entry::netif
netif	lwip/src/include/lwip/priv/tcpip_priv.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon468::__anon471	typeref:struct:tcpip_msg::__anon468::__anon471::netif
netif	lwip/src/include/netif/ppp/ppp.h	/^  struct netif *netif;           \/* PPP interface *\/$/;"	m	struct:ppp_pcb_s	typeref:struct:ppp_pcb_s::netif
netif	lwip/src/include/netif/ppp/pppapi.h	/^      struct netif *netif;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon439	typeref:struct:pppapi_msg_msg::__anon435::__anon439::netif
netif	lwip/src/include/netif/ppp/pppol2tp.h	/^  struct netif *netif;         \/* Output interface, used as a default route *\/$/;"	m	struct:pppol2tp_pcb_s	typeref:struct:pppol2tp_pcb_s::netif
netif	lwip/src/netif/bridgeif.c	/^  struct netif     *netif;$/;"	m	struct:bridgeif_private_s	typeref:struct:bridgeif_private_s::netif	file:
netif_add	lwip/src/core/netif.c	/^netif_add(struct netif *netif,$/;"	f
netif_add_ext_callback	lwip/src/core/netif.c	/^netif_add_ext_callback(netif_ext_callback_t *callback, netif_ext_callback_fn fn)$/;"	f
netif_add_ext_callback	lwip/src/include/lwip/netif.h	660;"	d
netif_add_ip6_address	lwip/src/core/netif.c	/^netif_add_ip6_address(struct netif *netif, const ip6_addr_t *ip6addr, s8_t *chosen_idx)$/;"	f
netif_add_noaddr	lwip/src/core/netif.c	/^netif_add_noaddr(struct netif *netif, void *state, netif_init_fn init, netif_input_fn input)$/;"	f
netif_addr_idx_t	lwip/src/include/lwip/netif.h	/^typedef u16_t netif_addr_idx_t;$/;"	t
netif_addr_idx_t	lwip/src/include/lwip/netif.h	/^typedef u8_t netif_addr_idx_t;$/;"	t
netif_alloc_client_data_id	lwip/src/core/netif.c	/^netif_alloc_client_data_id(void)$/;"	f
netif_autoip_data	lwip/src/include/lwip/autoip.h	91;"	d
netif_clear_flags	lwip/src/include/lwip/netif.h	453;"	d
netif_client_id	lwip/src/core/netif.c	/^static u8_t netif_client_id;$/;"	v	file:
netif_create_ip6_linklocal_address	lwip/src/core/netif.c	/^netif_create_ip6_linklocal_address(struct netif *netif, u8_t from_mac_48bit)$/;"	f
netif_default	lwip/src/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_dhcp6_data	lwip/src/include/lwip/dhcp6.h	96;"	d
netif_dhcp_data	lwip/src/include/lwip/dhcp.h	131;"	d
netif_do_ip_addr_changed	lwip/src/core/netif.c	/^netif_do_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)$/;"	f	file:
netif_do_set_gw	lwip/src/core/netif.c	/^netif_do_set_gw(struct netif *netif, const ip4_addr_t *gw, ip_addr_t *old_gw)$/;"	f	file:
netif_do_set_ipaddr	lwip/src/core/netif.c	/^netif_do_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr, ip_addr_t *old_addr)$/;"	f	file:
netif_do_set_netmask	lwip/src/core/netif.c	/^netif_do_set_netmask(struct netif *netif, const ip4_addr_t *netmask, ip_addr_t *old_nm)$/;"	f	file:
netif_ext_callback	lwip/src/include/lwip/netif.h	/^typedef struct netif_ext_callback$/;"	s
netif_ext_callback_args_t	lwip/src/include/lwip/netif.h	/^} netif_ext_callback_args_t;$/;"	t	typeref:union:__anon451
netif_ext_callback_fn	lwip/src/include/lwip/netif.h	/^typedef void (*netif_ext_callback_fn)(struct netif* netif, netif_nsc_reason_t reason, const netif_ext_callback_args_t* args);$/;"	t
netif_ext_callback_t	lwip/src/include/lwip/netif.h	/^} netif_ext_callback_t;$/;"	t	typeref:struct:netif_ext_callback
netif_find	lwip/src/core/netif.c	/^netif_find(const char *name)$/;"	f
netif_get_by_index	lwip/src/core/netif.c	/^netif_get_by_index(u8_t idx)$/;"	f
netif_get_client_data	lwip/src/include/lwip/netif.h	237;"	d
netif_get_hostname	lwip/src/include/lwip/netif.h	483;"	d
netif_get_igmp_mac_filter	lwip/src/include/lwip/netif.h	489;"	d
netif_get_index	lwip/src/include/lwip/netif.h	556;"	d
netif_get_ip6_addr_match	lwip/src/core/netif.c	/^netif_get_ip6_addr_match(struct netif *netif, const ip6_addr_t *ip6addr)$/;"	f
netif_get_mld_mac_filter	lwip/src/include/lwip/netif.h	495;"	d
netif_get_mtu	lwip/src/netif/ppp/ppp.c	/^int netif_get_mtu(ppp_pcb *pcb) {$/;"	f
netif_hint	lwip/src/include/lwip/netif.h	/^struct netif_hint {$/;"	s
netif_igmp_data	lwip/src/include/lwip/igmp.h	107;"	d
netif_igmp_mac_filter_fn	lwip/src/include/lwip/netif.h	/^typedef err_t (*netif_igmp_mac_filter_fn)(struct netif *netif,$/;"	t
netif_index_to_name	lwip/src/core/netif.c	/^netif_index_to_name(u8_t idx, char *name)$/;"	f
netif_index_to_num	lwip/src/core/netif.c	114;"	d	file:
netif_init	doc/lwip/doc/NO_SYS_SampleCode.c	/^netif_init(struct netif *netif)$/;"	f	file:
netif_init	lwip/src/core/netif.c	/^netif_init(void)$/;"	f
netif_init_fn	lwip/src/include/lwip/netif.h	/^typedef err_t (*netif_init_fn)(struct netif *netif);$/;"	t
netif_input	lwip/src/core/netif.c	/^netif_input(struct pbuf *p, struct netif *inp)$/;"	f
netif_input_fn	lwip/src/include/lwip/netif.h	/^typedef err_t (*netif_input_fn)(struct pbuf *p, struct netif *inp);$/;"	t
netif_invoke_ext_callback	lwip/src/core/netif.c	/^netif_invoke_ext_callback(struct netif *netif, netif_nsc_reason_t reason, const netif_ext_callback_args_t *args)$/;"	f
netif_invoke_ext_callback	lwip/src/include/lwip/netif.h	662;"	d
netif_ip4_addr	lwip/src/include/lwip/netif.h	439;"	d
netif_ip4_gw	lwip/src/include/lwip/netif.h	443;"	d
netif_ip4_netmask	lwip/src/include/lwip/netif.h	441;"	d
netif_ip6_addr	lwip/src/include/lwip/netif.h	513;"	d
netif_ip6_addr_isstatic	lwip/src/include/lwip/netif.h	531;"	d
netif_ip6_addr_isstatic	lwip/src/include/lwip/netif.h	534;"	d
netif_ip6_addr_pref_life	lwip/src/include/lwip/netif.h	527;"	d
netif_ip6_addr_set	lwip/src/core/netif.c	/^netif_ip6_addr_set(struct netif *netif, s8_t addr_idx, const ip6_addr_t *addr6)$/;"	f
netif_ip6_addr_set_parts	lwip/src/core/netif.c	/^netif_ip6_addr_set_parts(struct netif *netif, s8_t addr_idx, u32_t i0, u32_t i1, u32_t i2, u32_t i3)$/;"	f
netif_ip6_addr_set_pref_life	lwip/src/include/lwip/netif.h	529;"	d
netif_ip6_addr_set_state	lwip/src/core/netif.c	/^netif_ip6_addr_set_state(struct netif *netif, s8_t addr_idx, u8_t state)$/;"	f
netif_ip6_addr_set_valid_life	lwip/src/include/lwip/netif.h	525;"	d
netif_ip6_addr_state	lwip/src/include/lwip/netif.h	516;"	d
netif_ip6_addr_valid_life	lwip/src/include/lwip/netif.h	523;"	d
netif_ip_addr4	lwip/src/include/lwip/netif.h	445;"	d
netif_ip_addr6	lwip/src/include/lwip/netif.h	511;"	d
netif_ip_gw4	lwip/src/include/lwip/netif.h	449;"	d
netif_ip_netmask4	lwip/src/include/lwip/netif.h	447;"	d
netif_is_flag_set	lwip/src/include/lwip/netif.h	454;"	d
netif_is_link_up	lwip/src/include/lwip/netif.h	473;"	d
netif_is_up	lwip/src/include/lwip/netif.h	461;"	d
netif_issue_reports	lwip/src/core/netif.c	/^netif_issue_reports(struct netif *netif, u8_t report_type)$/;"	f	file:
netif_linkoutput_fn	lwip/src/include/lwip/netif.h	/^typedef err_t (*netif_linkoutput_fn)(struct netif *netif, struct pbuf *p);$/;"	t
netif_list	lwip/src/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_loop_output	lwip/src/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p)$/;"	f
netif_loop_output_ipv4	lwip/src/core/netif.c	/^netif_loop_output_ipv4(struct netif *netif, struct pbuf *p, const ip4_addr_t *addr)$/;"	f	file:
netif_loop_output_ipv6	lwip/src/core/netif.c	/^netif_loop_output_ipv6(struct netif *netif, struct pbuf *p, const ip6_addr_t *addr)$/;"	f	file:
netif_loopif_init	lwip/src/core/netif.c	/^netif_loopif_init(struct netif *netif)$/;"	f	file:
netif_mac_filter_action	lwip/src/include/lwip/netif.h	/^enum netif_mac_filter_action {$/;"	g
netif_mld6_data	lwip/src/include/lwip/mld6.h	91;"	d
netif_mld_mac_filter	lwip/src/include/lwip/netif.h	496;"	d
netif_mld_mac_filter_fn	lwip/src/include/lwip/netif.h	/^typedef err_t (*netif_mld_mac_filter_fn)(struct netif *netif,$/;"	t
netif_mtu6	lwip/src/include/lwip/netif.h	537;"	d
netif_mtu6	lwip/src/include/lwip/netif.h	539;"	d
netif_name_to_index	lwip/src/core/netif.c	/^netif_name_to_index(const char *name)$/;"	f
netif_nsc_reason_t	lwip/src/include/lwip/netif.h	/^typedef u16_t netif_nsc_reason_t;$/;"	t
netif_null_output_ip4	lwip/src/core/netif.c	/^netif_null_output_ip4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr)$/;"	f	file:
netif_null_output_ip6	lwip/src/core/netif.c	/^netif_null_output_ip6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr)$/;"	f	file:
netif_num	lwip/src/core/netif.c	/^static u8_t netif_num;$/;"	v	file:
netif_output	doc/lwip/doc/NO_SYS_SampleCode.c	/^netif_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
netif_output	lwip/src/include/netif/ppp/ppp_impl.h	/^  err_t (*netif_output)(ppp_pcb *pcb, void *ctx, struct pbuf *p, u_short protocol);$/;"	m	struct:link_callbacks
netif_output_fn	lwip/src/include/lwip/netif.h	/^typedef err_t (*netif_output_fn)(struct netif *netif, struct pbuf *p,$/;"	t
netif_output_ip6_fn	lwip/src/include/lwip/netif.h	/^typedef err_t (*netif_output_ip6_fn)(struct netif *netif, struct pbuf *p,$/;"	t
netif_poll	lwip/src/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	lwip/src/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	lwip/src/core/netif.c	/^netif_remove(struct netif *netif)$/;"	f
netif_remove_ext_callback	lwip/src/core/netif.c	/^netif_remove_ext_callback(netif_ext_callback_t* callback)$/;"	f
netif_remove_ext_callback	lwip/src/include/lwip/netif.h	661;"	d
netif_set_addr	lwip/src/core/netif.c	/^netif_set_addr(struct netif *netif, const ip4_addr_t *ipaddr, const ip4_addr_t *netmask,$/;"	f
netif_set_client_data	lwip/src/include/lwip/netif.h	233;"	d
netif_set_default	lwip/src/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	lwip/src/core/netif.c	/^netif_set_down(struct netif *netif)$/;"	f
netif_set_flags	lwip/src/include/lwip/netif.h	452;"	d
netif_set_gw	lwip/src/core/netif.c	/^netif_set_gw(struct netif *netif, const ip4_addr_t *gw)$/;"	f
netif_set_hostname	lwip/src/include/lwip/netif.h	481;"	d
netif_set_igmp_mac_filter	lwip/src/include/lwip/netif.h	488;"	d
netif_set_ip6_autoconfig_enabled	lwip/src/include/lwip/netif.h	521;"	d
netif_set_ipaddr	lwip/src/core/netif.c	/^netif_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr)$/;"	f
netif_set_link_callback	lwip/src/core/netif.c	/^netif_set_link_callback(struct netif *netif, netif_status_callback_fn link_callback)$/;"	f
netif_set_link_down	lwip/src/core/netif.c	/^netif_set_link_down(struct netif *netif)$/;"	f
netif_set_link_up	lwip/src/core/netif.c	/^netif_set_link_up(struct netif *netif)$/;"	f
netif_set_mld_mac_filter	lwip/src/include/lwip/netif.h	494;"	d
netif_set_mtu	lwip/src/netif/ppp/ppp.c	/^void netif_set_mtu(ppp_pcb *pcb, int mtu) {$/;"	f
netif_set_netmask	lwip/src/core/netif.c	/^netif_set_netmask(struct netif *netif, const ip4_addr_t *netmask)$/;"	f
netif_set_remove_callback	lwip/src/core/netif.c	/^netif_set_remove_callback(struct netif *netif, netif_status_callback_fn remove_callback)$/;"	f
netif_set_status_callback	lwip/src/core/netif.c	/^netif_set_status_callback(struct netif *netif, netif_status_callback_fn status_callback)$/;"	f
netif_set_up	lwip/src/core/netif.c	/^netif_set_up(struct netif *netif)$/;"	f
netif_status_callback	doc/lwip/doc/NO_SYS_SampleCode.c	/^netif_status_callback(struct netif *netif)$/;"	f	file:
netif_status_callback_fn	lwip/src/include/lwip/netif.h	/^typedef void (*netif_status_callback_fn)(struct netif *netif);$/;"	t
netifapi_arp_add	lwip/src/api/netifapi.c	/^netifapi_arp_add(const ip4_addr_t *ipaddr, struct eth_addr *ethaddr, enum netifapi_arp_entry type)$/;"	f
netifapi_arp_entry	lwip/src/include/lwip/netifapi.h	/^enum netifapi_arp_entry {$/;"	g
netifapi_arp_remove	lwip/src/api/netifapi.c	/^netifapi_arp_remove(const ip4_addr_t *ipaddr, enum netifapi_arp_entry type)$/;"	f
netifapi_autoip_start	lwip/src/include/lwip/netifapi.h	149;"	d
netifapi_autoip_stop	lwip/src/include/lwip/netifapi.h	153;"	d
netifapi_dhcp_inform	lwip/src/include/lwip/netifapi.h	126;"	d
netifapi_dhcp_release	lwip/src/include/lwip/netifapi.h	135;"	d
netifapi_dhcp_release_and_stop	lwip/src/include/lwip/netifapi.h	139;"	d
netifapi_dhcp_renew	lwip/src/include/lwip/netifapi.h	130;"	d
netifapi_dhcp_start	lwip/src/include/lwip/netifapi.h	117;"	d
netifapi_dhcp_stop	lwip/src/include/lwip/netifapi.h	122;"	d
netifapi_do_index_to_name	lwip/src/api/netifapi.c	/^netifapi_do_index_to_name(struct tcpip_api_call_data *m)$/;"	f	file:
netifapi_do_name_to_index	lwip/src/api/netifapi.c	/^netifapi_do_name_to_index(struct tcpip_api_call_data *m)$/;"	f	file:
netifapi_do_netif_add	lwip/src/api/netifapi.c	/^netifapi_do_netif_add(struct tcpip_api_call_data *m)$/;"	f	file:
netifapi_do_netif_common	lwip/src/api/netifapi.c	/^netifapi_do_netif_common(struct tcpip_api_call_data *m)$/;"	f	file:
netifapi_do_netif_set_addr	lwip/src/api/netifapi.c	/^netifapi_do_netif_set_addr(struct tcpip_api_call_data *m)$/;"	f	file:
netifapi_errt_fn	lwip/src/include/lwip/priv/api_msg.h	/^typedef err_t (*netifapi_errt_fn)(struct netif *netif);$/;"	t
netifapi_msg	lwip/src/include/lwip/priv/api_msg.h	/^struct netifapi_msg {$/;"	s
netifapi_netif_add	lwip/src/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	lwip/src/api/netifapi.c	/^netifapi_netif_common(struct netif *netif, netifapi_void_fn voidfunc,$/;"	f
netifapi_netif_index_to_name	lwip/src/api/netifapi.c	/^netifapi_netif_index_to_name(u8_t idx, char *name)$/;"	f
netifapi_netif_name_to_index	lwip/src/api/netifapi.c	/^netifapi_netif_name_to_index(const char *name, u8_t *idx)$/;"	f
netifapi_netif_remove	lwip/src/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_addr	lwip/src/api/netifapi.c	/^netifapi_netif_set_addr(struct netif *netif,$/;"	f
netifapi_netif_set_default	lwip/src/include/lwip/netifapi.h	99;"	d
netifapi_netif_set_down	lwip/src/include/lwip/netifapi.h	95;"	d
netifapi_netif_set_link_down	lwip/src/include/lwip/netifapi.h	107;"	d
netifapi_netif_set_link_up	lwip/src/include/lwip/netifapi.h	103;"	d
netifapi_netif_set_up	lwip/src/include/lwip/netifapi.h	91;"	d
netifapi_void_fn	lwip/src/include/lwip/priv/api_msg.h	/^typedef void (*netifapi_void_fn)(struct netif *netif);$/;"	t
netmask	lwip/src/include/lwip/netif.h	/^  ip_addr_t netmask;$/;"	m	struct:netif
netmask	lwip/src/include/netif/ppp/ppp.h	/^  ip4_addr_t our_ipaddr, his_ipaddr, netmask;$/;"	m	struct:ppp_addrs
netvector	lwip/src/include/lwip/api.h	/^struct netvector {$/;"	s
network_phase	lwip/src/netif/ppp/auth.c	/^static void network_phase(ppp_pcb *pcb) {$/;"	f	file:
new_phase	lwip/src/netif/ppp/ppp.c	/^void new_phase(ppp_pcb *pcb, int p) {$/;"	f
newamp1_indexes_to_model	codec2/newamp1.c	/^void newamp1_indexes_to_model(C2CONST *c2const,$/;"	f
newamp1_indexes_to_rate_K_vec	codec2/newamp1.c	/^void newamp1_indexes_to_rate_K_vec(float  rate_K_vec_[],  $/;"	f
newamp1_interpolate	codec2/newamp1.c	/^void newamp1_interpolate(float interpolated_surface_[], float left_vec[], float right_vec[], int K)$/;"	f
newamp1_model_to_indexes	codec2/newamp1.c	/^void newamp1_model_to_indexes(C2CONST *c2const,$/;"	f
newdata	littlefs/littlefs_source/lfs.c	/^    const void *newdata;$/;"	m	struct:lfs_region	file:
newlen	littlefs/littlefs_source/lfs.c	/^    lfs_size_t newlen;$/;"	m	struct:lfs_region	file:
next	codec2/sine.c	/^static unsigned long next = 1;$/;"	v	file:
next	component/lists/generic_list.h	/^    struct list_element_tag *next; \/*!< next list element   *\/$/;"	m	struct:list_element_tag	typeref:struct:list_element_tag::list_element_tag
next	littlefs/littlefs_include/lfs.h	/^    struct lfs_dir *next;$/;"	m	struct:lfs_dir	typeref:struct:lfs_dir::lfs_dir
next	littlefs/littlefs_include/lfs.h	/^    struct lfs_file *next;$/;"	m	struct:lfs_file	typeref:struct:lfs_file::lfs_file
next	lwip/src/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	lwip/src/include/lwip/dns.h	/^  struct local_hostlist_entry *next;$/;"	m	struct:local_hostlist_entry	typeref:struct:local_hostlist_entry::local_hostlist_entry
next	lwip/src/include/lwip/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	lwip/src/include/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	lwip/src/include/lwip/ip4_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	lwip/src/include/lwip/ip6_frag.h	/^  struct ip6_reassdata *next;$/;"	m	struct:ip6_reassdata	typeref:struct:ip6_reassdata::ip6_reassdata
next	lwip/src/include/lwip/mld6.h	/^  struct mld_group *next;$/;"	m	struct:mld_group	typeref:struct:mld_group::mld_group
next	lwip/src/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	lwip/src/include/lwip/netif.h	/^  struct netif_ext_callback* next;$/;"	m	struct:netif_ext_callback	typeref:struct:netif_ext_callback::netif_ext_callback
next	lwip/src/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	lwip/src/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf_rom	typeref:struct:pbuf_rom::pbuf
next	lwip/src/include/lwip/priv/memp_priv.h	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp
next	lwip/src/include/lwip/priv/nd6_priv.h	/^  struct nd6_q_entry *next;$/;"	m	struct:nd6_q_entry	typeref:struct:nd6_q_entry::nd6_q_entry
next	lwip/src/include/lwip/priv/sockets_priv.h	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb
next	lwip/src/include/lwip/priv/tcp_priv.h	/^  struct tcp_seg *next;    \/* used when putting segments on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	lwip/src/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	lwip/src/include/lwip/timeouts.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	lwip/src/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	lwip/src/include/netif/ppp/pppoe.h	/^  struct pppoe_softc *next;$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::pppoe_softc
next	lwip/src/netif/ppp/demand.c	/^    struct packet *next;$/;"	m	struct:packet	typeref:struct:packet::packet	file:
next	usb/device/class/usb_device_ccid.h	/^    struct _usb_device_ccid_transfer_struct *next;   \/*!< Next transfer pointer *\/$/;"	m	struct:_usb_device_ccid_transfer_struct	typeref:struct:_usb_device_ccid_transfer_struct::_usb_device_ccid_transfer_struct
nextDesc	drivers/fsl_dma.h	/^    uint8_t *nextDesc;     \/*!< Chain custom descriptor *\/$/;"	m	struct:_dma_transfer_config
nextDesc	drivers/fsl_dma.h	/^    void *nextDesc;                 \/*!< Chain custom descriptor *\/$/;"	m	struct:_dma_channel_config
nextDtdPointer	usb/device/source/ehci/usb_device_ehci.h	/^    volatile uint32_t nextDtdPointer;$/;"	m	struct:_usb_device_ehci_dtd_struct
nextDtdPointer	usb/device/source/ehci/usb_device_ehci.h	/^    volatile uint32_t nextDtdPointer;$/;"	m	struct:_usb_device_ehci_qh_struct
next_hop_addr	lwip/src/include/lwip/priv/nd6_priv.h	/^  ip6_addr_t next_hop_addr;$/;"	m	struct:nd6_destination_cache_entry
next_hop_address	lwip/src/include/lwip/priv/nd6_priv.h	/^  ip6_addr_t next_hop_address;$/;"	m	struct:nd6_neighbor_cache_entry
next_packet	lwip/src/netif/lowpan6.c	/^  struct lowpan6_reass_helper *next_packet;$/;"	m	struct:lowpan6_reass_helper	typeref:struct:lowpan6_reass_helper::lowpan6_reass_helper	file:
next_timeout	lwip/src/core/timeouts.c	/^static struct sys_timeo *next_timeout;$/;"	v	typeref:struct:sys_timeo	file:
nexth	lwip/src/include/lwip/ip6_frag.h	/^  u8_t nexth;$/;"	m	struct:ip6_reassdata
neyesamp	codec2/modem_stats.h	/^    int    neyesamp;                         \/* How many samples in the eye diagram *\/$/;"	m	struct:MODEM_STATS
neyetr	codec2/modem_stats.h	/^    int    neyetr;                           \/* How many eye traces are plotted *\/$/;"	m	struct:MODEM_STATS
nfds_t	lwip/src/include/lwip/sockets.h	/^typedef unsigned int nfds_t;$/;"	t
nfft	codec2/_kiss_fft_guts.h	/^    int nfft;$/;"	m	struct:kiss_fft_state
nin	codec2/fsk.h	/^    int nin;                \/* Number of samples to feed the next demod cycle *\/$/;"	m	struct:FSK
nin	codec2/ofdm_internal.h	/^    int nin;$/;"	m	struct:OFDM
nlen	littlefs/littlefs_include/lfs.h	/^        uint8_t nlen;$/;"	m	struct:lfs_entry::lfs_disk_entry
nlen	littlefs/littlefs_include/lfs.h	/^        uint8_t nlen;$/;"	m	struct:lfs_superblock::lfs_disk_superblock
nlp	codec2/codec2_internal.h	/^    void         *nlp;                     \/* pitch predictor states                    *\/$/;"	m	struct:CODEC2
nlp	codec2/nlp.c	/^float nlp($/;"	f
nlp_create	codec2/nlp.c	/^void *nlp_create(C2CONST *c2const)$/;"	f
nlp_destroy	codec2/nlp.c	/^void nlp_destroy(void *nlp_state)$/;"	f
nlp_fir	codec2/nlp.c	/^const float nlp_fir[] = {$/;"	v
nocarrier	lwip/src/include/netif/ppp/pppapi.h	/^      u8_t nocarrier;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon441
noendpoint	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  noendpoint          :1;      \/* don't send\/accept endpoint discriminator *\/$/;"	m	struct:ppp_settings_s
noise_var	codec2/ofdm_internal.h	/^    float noise_var;$/;"	m	struct:OFDM
noopt	lwip/src/netif/ppp/lcp.c	/^noopt(argv)$/;"	f	file:
noremoteip	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  noremoteip          :1;      \/* Let him have no IP address *\/$/;"	m	struct:ppp_settings_s
norm_rx_timing	codec2/fsk.h	/^    float norm_rx_timing;   \/* Normalized RX timing *\/$/;"	m	struct:FSK
normalise_eye	codec2/fsk.h	/^    int normalise_eye;      \/* enables\/disables normalisation of eye diagram *\/$/;"	m	struct:FSK
normalize	CMSIS/arm_math.h	/^    float32_t normalize;                 \/**< normalizing factor. *\/$/;"	m	struct:__anon83
normalize	CMSIS/arm_math.h	/^    q15_t normalize;                     \/**< normalizing factor. *\/$/;"	m	struct:__anon85
normalize	CMSIS/arm_math.h	/^    q31_t normalize;                     \/**< normalizing factor. *\/$/;"	m	struct:__anon84
notificationQueue	usb/device/source/usb_device_dci.h	/^    usb_osa_msgq_handle notificationQueue; \/*!< Message queue *\/$/;"	m	struct:_usb_device_struct
notify_phase_cb	lwip/src/include/netif/ppp/ppp.h	/^  void (*notify_phase_cb)(ppp_pcb *pcb, u8_t phase, void *ctx);   \/* Notify phase callback *\/$/;"	m	struct:ppp_pcb_s
notify_phase_cb	lwip/src/include/netif/ppp/pppapi.h	/^      ppp_notify_phase_cb_fn notify_phase_cb;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon436
np_down	lwip/src/netif/ppp/auth.c	/^void np_down(ppp_pcb *pcb, int proto) {$/;"	f
np_finished	lwip/src/netif/ppp/auth.c	/^void np_finished(ppp_pcb *pcb, int proto) {$/;"	f
np_up	lwip/src/netif/ppp/auth.c	/^void np_up(ppp_pcb *pcb, int proto) {$/;"	f
nr	codec2/modem_stats.h	/^    int    nr;                               \/* number of rows in rx_symbols                       *\/$/;"	m	struct:MODEM_STATS
nrtx	lwip/src/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
ns_header	lwip/src/include/lwip/prot/nd6.h	/^struct ns_header {$/;"	s
nsel	drivers/fsl_clock.h	/^    uint8_t nsel;       \/*!< USB PLL control register nsel:only suppoet inter 1U 2U 3U 4U *\/$/;"	m	struct:_usb_pll_setup
nstash	codec2/fsk.h	/^    int nstash;             \/* How many elements are in there *\/$/;"	m	struct:FSK
ntohl	lwip/src/include/lwip/def.h	122;"	d
ntohs	lwip/src/include/lwip/def.h	120;"	d
null_login	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  null_login          :1;      \/* Username of "" and a password of "" are acceptable *\/$/;"	m	struct:ppp_settings_s
num	lwip/src/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	lwip/src/include/lwip/priv/memp_priv.h	/^  u16_t num;$/;"	m	struct:memp_desc
numCols	CMSIS/arm_math.h	/^    uint16_t numCols;     \/**< number of columns of the matrix.  *\/$/;"	m	struct:__anon58
numCols	CMSIS/arm_math.h	/^    uint16_t numCols;     \/**< number of columns of the matrix.  *\/$/;"	m	struct:__anon59
numCols	CMSIS/arm_math.h	/^    uint16_t numCols;     \/**< number of columns of the matrix.  *\/$/;"	m	struct:__anon60
numCols	CMSIS/arm_math.h	/^    uint16_t numCols;     \/**< number of columns of the matrix.  *\/$/;"	m	struct:__anon61
numCols	CMSIS/arm_math.h	/^    uint16_t numCols;   \/**< number of columns in the data table. *\/$/;"	m	struct:__anon66
numCols	CMSIS/arm_math.h	/^    uint16_t numCols;   \/**< number of columns in the data table. *\/$/;"	m	struct:__anon67
numCols	CMSIS/arm_math.h	/^    uint16_t numCols;   \/**< number of columns in the data table. *\/$/;"	m	struct:__anon68
numCols	CMSIS/arm_math.h	/^    uint16_t numCols;   \/**< number of columns in the data table. *\/$/;"	m	struct:__anon69
numFramesRxError	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numFramesRxError;            \/*!< The number of the frames received failed. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
numFramesRxOk	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numFramesRxOk;               \/*!< The number of the frames received successfully. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
numFramesTxError	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numFramesTxError;            \/*!< The number of the frames sent failed. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
numFramesTxManyCollision	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numFramesTxManyCollision;    \/*!< The number of the frames sent that has many collision. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
numFramesTxOk	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numFramesTxOk;               \/*!< The number of the frames sent successfully. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
numFramesTxOneCollision	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numFramesTxOneCollision;     \/*!< The number of the frames sent that has one collision. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
numOOBDataElements	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numOOBDataElements;$/;"	m	struct:_rndis_packet_msg_struct
numRecvFramesAlignmentError	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numRecvFramesAlignmentError; \/*!< The number of the frames received that has alignment error. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
numRecvFramesMissed	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t numRecvFramesMissed;         \/*!< The number of the frames missed to receive. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
numRows	CMSIS/arm_math.h	/^    uint16_t numRows;     \/**< number of rows of the matrix.     *\/$/;"	m	struct:__anon58
numRows	CMSIS/arm_math.h	/^    uint16_t numRows;     \/**< number of rows of the matrix.     *\/$/;"	m	struct:__anon59
numRows	CMSIS/arm_math.h	/^    uint16_t numRows;     \/**< number of rows of the matrix.     *\/$/;"	m	struct:__anon60
numRows	CMSIS/arm_math.h	/^    uint16_t numRows;     \/**< number of rows of the matrix.     *\/$/;"	m	struct:__anon61
numRows	CMSIS/arm_math.h	/^    uint16_t numRows;   \/**< number of rows in the data table. *\/$/;"	m	struct:__anon66
numRows	CMSIS/arm_math.h	/^    uint16_t numRows;   \/**< number of rows in the data table. *\/$/;"	m	struct:__anon67
numRows	CMSIS/arm_math.h	/^    uint16_t numRows;   \/**< number of rows in the data table. *\/$/;"	m	struct:__anon68
numRows	CMSIS/arm_math.h	/^    uint16_t numRows;   \/**< number of rows in the data table. *\/$/;"	m	struct:__anon69
numStages	CMSIS/arm_math.h	/^    int8_t numStages;        \/**< number of 2nd order stages in the filter.  Overall order is 2*numStages. *\/$/;"	m	struct:__anon55
numStages	CMSIS/arm_math.h	/^    uint16_t numStages;                  \/**< number of filter stages. *\/$/;"	m	struct:__anon96
numStages	CMSIS/arm_math.h	/^    uint16_t numStages;                  \/**< number of filter stages. *\/$/;"	m	struct:__anon97
numStages	CMSIS/arm_math.h	/^    uint16_t numStages;                  \/**< number of filter stages. *\/$/;"	m	struct:__anon98
numStages	CMSIS/arm_math.h	/^    uint16_t numStages;                  \/**< number of stages in the filter. *\/$/;"	m	struct:__anon100
numStages	CMSIS/arm_math.h	/^    uint16_t numStages;                  \/**< number of stages in the filter. *\/$/;"	m	struct:__anon101
numStages	CMSIS/arm_math.h	/^    uint16_t numStages;                  \/**< number of stages in the filter. *\/$/;"	m	struct:__anon99
numStages	CMSIS/arm_math.h	/^    uint32_t numStages;      \/**< number of 2nd order stages in the filter.  Overall order is 2*numStages. *\/$/;"	m	struct:__anon56
numStages	CMSIS/arm_math.h	/^    uint32_t numStages;      \/**< number of 2nd order stages in the filter.  Overall order is 2*numStages. *\/$/;"	m	struct:__anon57
numStages	CMSIS/arm_math.h	/^    uint8_t numStages;         \/**< number of 2nd order stages in the filter.  Overall order is 2*numStages. *\/$/;"	m	struct:__anon93
numStages	CMSIS/arm_math.h	/^    uint8_t numStages;         \/**< number of 2nd order stages in the filter.  Overall order is 2*numStages. *\/$/;"	m	struct:__anon94
numStages	CMSIS/arm_math.h	/^    uint8_t numStages;         \/**< number of 2nd order stages in the filter.  Overall order is 2*numStages. *\/$/;"	m	struct:__anon95
numStages	CMSIS/arm_math.h	/^    uint8_t numStages;       \/**< number of 2nd order stages in the filter.  Overall order is 2*numStages. *\/$/;"	m	struct:__anon92
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;             \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon108
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;             \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon109
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;             \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon110
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;             \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon111
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;           \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon86
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;           \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon87
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;           \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon88
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;         \/**< number of filter coefficients in the filter. *\/$/;"	m	struct:__anon52
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;         \/**< number of filter coefficients in the filter. *\/$/;"	m	struct:__anon53
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;        \/**< number of filter coefficients in the filter. *\/$/;"	m	struct:__anon51
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;     \/**< Number of coefficients in the filter. *\/$/;"	m	struct:__anon107
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;     \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon105
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;     \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon106
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;     \/**< number of filter coefficients in the filter. *\/$/;"	m	struct:__anon54
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;    \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon102
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;    \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon103
numTaps	CMSIS/arm_math.h	/^    uint16_t numTaps;    \/**< number of coefficients in the filter. *\/$/;"	m	struct:__anon104
num_np_open	lwip/src/include/netif/ppp/ppp.h	/^  u8_t num_np_open;              \/* Number of network protocols which we have opened. *\/$/;"	m	struct:ppp_pcb_s
num_np_up	lwip/src/include/netif/ppp/ppp.h	/^  u8_t num_np_up;                \/* Number of network protocols which have come up. *\/$/;"	m	struct:ppp_pcb_s
num_ports	lwip/src/netif/bridgeif.c	/^  u8_t              num_ports;$/;"	m	struct:bridgeif_private_s	file:
number	source/common.c	/^static char *number(char *buf, unsigned long num, int base, int size, int precision, int type)$/;"	f	file:
numloops	lwip/src/include/netif/ppp/lcp.h	/^    u8_t  numloops;		\/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
nw	codec2/defines.h	/^    int   nw;            \/* analysis window size in samples          *\/      $/;"	m	struct:__anon134
off	littlefs/littlefs_include/lfs.h	/^    lfs_block_t off;$/;"	m	struct:lfs_free
off	littlefs/littlefs_include/lfs.h	/^    lfs_off_t off;$/;"	m	struct:lfs_cache
off	littlefs/littlefs_include/lfs.h	/^    lfs_off_t off;$/;"	m	struct:lfs_dir
off	littlefs/littlefs_include/lfs.h	/^    lfs_off_t off;$/;"	m	struct:lfs_entry
off	littlefs/littlefs_include/lfs.h	/^    lfs_off_t off;$/;"	m	struct:lfs_file
off	littlefs/littlefs_include/lfs.h	/^    lfs_off_t off;$/;"	m	struct:lfs_superblock
offered_gw_addr	lwip/src/include/lwip/dhcp.h	/^  ip4_addr_t offered_gw_addr;$/;"	m	struct:dhcp
offered_ip_addr	lwip/src/include/lwip/dhcp.h	/^  ip4_addr_t offered_ip_addr;$/;"	m	struct:dhcp
offered_si_addr	lwip/src/include/lwip/dhcp.h	/^  ip4_addr_t offered_si_addr;$/;"	m	struct:dhcp
offered_sn_mask	lwip/src/include/lwip/dhcp.h	/^  ip4_addr_t offered_sn_mask;$/;"	m	struct:dhcp
offered_t0_lease	lwip/src/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	lwip/src/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	lwip/src/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 87.5 of lease period)  *\/$/;"	m	struct:dhcp
offset	drivers/fsl_common.c	/^    uint16_t offset;     \/*!< offset from aligned address to real address *\/$/;"	m	struct:_mem_align_control_block	file:
offset	lwip/src/include/lwip/priv/api_msg.h	/^      size_t offset;$/;"	m	struct:api_msg::__anon454::__anon458
offset	usb/device/class/usb_device_msc.h	/^    uint32_t offset; \/*!< Offset of the block need to access*\/$/;"	m	struct:_usb_device_lba_app_struct
oid	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t oid;$/;"	m	struct:_rndis_query_msg_struct
oid	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t oid;$/;"	m	struct:_rndis_set_msg_struct
old_address	lwip/src/include/lwip/netif.h	/^    const ip_addr_t* old_address;$/;"	m	struct:__anon451::ipv4_changed_s
old_address	lwip/src/include/lwip/netif.h	/^    const ip_addr_t* old_address;$/;"	m	struct:__anon451::ipv6_set_s
old_addrs	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int old_addrs              :1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_gw	lwip/src/include/lwip/netif.h	/^    const ip_addr_t* old_gw;$/;"	m	struct:__anon451::ipv4_changed_s
old_link_stats	lwip/src/netif/ppp/ppp.c	/^static struct pppd_stats old_link_stats;$/;"	v	typeref:struct:pppd_stats	file:
old_netmask	lwip/src/include/lwip/netif.h	/^    const ip_addr_t* old_netmask;$/;"	m	struct:__anon451::ipv4_changed_s
old_state	lwip/src/include/lwip/netif.h	/^    u8_t old_state;$/;"	m	struct:__anon451::ipv6_addr_state_changed_s
old_vj	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int old_vj                 :1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldlen	littlefs/littlefs_source/lfs.c	/^    lfs_size_t oldlen;$/;"	m	struct:lfs_region	file:
oldoff	littlefs/littlefs_source/lfs.c	/^    lfs_off_t oldoff;$/;"	m	struct:lfs_region	file:
oneChannel	drivers/fsl_i2s.h	/^    bool oneChannel;                            \/*!< true mono, false stereo *\/$/;"	m	struct:_i2s_handle
oneChannel	drivers/fsl_i2s.h	/^    bool oneChannel;      \/*!< true mono, false stereo *\/$/;"	m	struct:_i2s_config
onebyfftLen	CMSIS/arm_math.h	/^    float32_t onebyfftLen;             \/**< value of 1\/fftLen. *\/$/;"	m	struct:__anon74
onebyfftLen	CMSIS/arm_math.h	/^    float32_t onebyfftLen;             \/**< value of 1\/fftLen. *\/$/;"	m	struct:__anon75
oobDataLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t oobDataLength;$/;"	m	struct:_rndis_packet_msg_struct
oobDataOffset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t oobDataOffset;$/;"	m	struct:_rndis_packet_msg_struct
ooseq	lwip/src/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	lwip/src/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
op_completed_sem	lwip/src/include/lwip/priv/api_msg.h	/^  sys_sem_t* op_completed_sem;$/;"	m	struct:api_msg
open	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*open) (ppp_pcb *pcb);$/;"	m	struct:protent
open	lwip/src/include/netif/ppp/pppos.h	/^  unsigned int open            :1; \/* Set if PPPoS is open *\/$/;"	m	struct:pppos_pcb_s
open_pn_file	lwip/src/netif/ppp/eap.c	/^open_pn_file(modebits)$/;"	f	file:
openedReadHandleHead	component/serial_manager/serial_manager.c	/^    serial_manager_read_handle_t *openedReadHandleHead;$/;"	m	struct:_serial_manager_handle	file:
openedWriteHandleCount	component/serial_manager/serial_manager.c	/^    uint32_t openedWriteHandleCount;$/;"	m	struct:_serial_manager_handle	file:
operationCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t operationCode;     \/*!< Operation Code*\/$/;"	m	struct:_usb_device_inquiry_command_struct
operationCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t operationCode;     \/*!< Operation Code*\/$/;"	m	struct:_usb_device_read_capacities_command_struct
operationCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t operationCode;     \/*!< Operation Code*\/$/;"	m	struct:_usb_device_read_format_capacities_command_struct
operationCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t operationCode;     \/*!< Operation Code*\/$/;"	m	struct:_usb_device_read_write_10_command_struct
operationCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t operationCode;     \/*!< Operation Code*\/$/;"	m	struct:_usb_device_request_sense_command_struct
operation_mode_t	drivers/fsl_dmic.h	/^} operation_mode_t;$/;"	t	typeref:enum:_operation_mode
opt_local	lwip/src/include/netif/ppp/ipv6cp.h	/^    unsigned int opt_local      :1;  \/* ourtoken set by option *\/$/;"	m	struct:ipv6cp_options
opt_remote	lwip/src/include/netif/ppp/ipv6cp.h	/^    unsigned int opt_remote     :1;  \/* histoken set by option *\/$/;"	m	struct:ipv6cp_options
opterr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_given	lwip/src/core/ipv6/dhcp6.c	/^  u8_t option_given;$/;"	m	struct:dhcp6_option_info	file:
options	lwip/src/include/netif/ppp/ppp_impl.h	/^    option_t *options;		\/* List of command-line options *\/$/;"	m	struct:protent
optlen	lwip/src/include/lwip/priv/sockets_priv.h	/^  socklen_t optlen;$/;"	m	struct:lwip_setgetsockopt_data
optname	lwip/src/include/lwip/priv/sockets_priv.h	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data
optval	lwip/src/include/lwip/priv/sockets_priv.h	/^  u8_t optval[LWIP_SETGETSOCKOPT_MAXOPTLEN];$/;"	m	struct:lwip_setgetsockopt_data
optval	lwip/src/include/lwip/priv/sockets_priv.h	/^  } optval;$/;"	m	struct:lwip_setgetsockopt_data	typeref:union:lwip_setgetsockopt_data::__anon467
orderedCpy	CMSIS/mpu_armv7.h	/^__STATIC_INLINE void orderedCpy(volatile uint32_t* dst, const uint32_t* __RESTRICT src, uint32_t len)$/;"	f
orderedCpy	CMSIS/mpu_armv8.h	/^__STATIC_INLINE void orderedCpy(volatile uint32_t* dst, const uint32_t* __RESTRICT src, uint32_t len)$/;"	f
orig_hdr	lwip/src/include/lwip/ip6_frag.h	/^  u8_t orig_hdr[sizeof(struct ip6_frag_hdr) + sizeof(void*)];$/;"	m	struct:ip6_reassdata
orig_hdr	lwip/src/include/lwip/ip6_frag.h	/^  u8_t orig_hdr[sizeof(struct ip6_frag_hdr)];$/;"	m	struct:ip6_reassdata
original	lwip/src/include/lwip/ip4_frag.h	/^  struct pbuf *original;$/;"	m	struct:pbuf_custom_ref	typeref:struct:pbuf_custom_ref::pbuf
original	lwip/src/include/lwip/ip6_frag.h	/^  struct pbuf *original;$/;"	m	struct:pbuf_custom_ref	typeref:struct:pbuf_custom_ref::pbuf
originalBufferInfo	usb/device/source/ehci/usb_device_ehci.h	/^        } originalBufferInfo;$/;"	m	union:_usb_device_ehci_dtd_struct::__anon523	typeref:struct:_usb_device_ehci_dtd_struct::__anon523::__anon524
originalBufferLength	usb/device/source/ehci/usb_device_ehci.h	/^            uint32_t originalBufferLength : 19;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon523::__anon524
originalBufferOffest	usb/device/source/ehci/usb_device_ehci.h	/^            uint32_t originalBufferOffest : 12;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon523::__anon524
osr	drivers/fsl_dmic.h	/^    uint32_t osr;                       \/*!< oversampling rate(CIC decimation rate) for PCM *\/$/;"	m	struct:_dmic_channel_config
otgStatus	usb/device/source/khci/usb_device_khci.h	/^    uint8_t otgStatus;$/;"	m	struct:_usb_device_khci_state_struct
otpApiBase	device/LPC54018.h	/^  __I OTP_API_Type *otpApiBase;                  \/** OTP API Base *\/$/;"	m	struct:__anon194
otpDisableBankWriteMask	device/LPC54018.h	/^  uint32_t (*otpDisableBankWriteMask)(uint32_t bankMask);       \/** Lock one or more OTP banks for write access *\/$/;"	m	struct:__anon193
otpEnableBankReadLock	device/LPC54018.h	/^  uint32_t (*otpEnableBankReadLock)(uint32_t bankIndex, uint32_t regEnableMask, uint32_t regDisableMask,$/;"	m	struct:__anon193
otpEnableBankWriteLock	device/LPC54018.h	/^  uint32_t (*otpEnableBankWriteLock)(uint32_t bankIndex, uint32_t regEnableMask, uint32_t regDisableMask,$/;"	m	struct:__anon193
otpEnableBankWriteMask	device/LPC54018.h	/^  uint32_t (*otpEnableBankWriteMask)(uint32_t bankMask);        \/** Unlock one or more OTP banks for write access *\/$/;"	m	struct:__anon193
otpGetDriverVersion	device/LPC54018.h	/^  uint32_t (*otpGetDriverVersion)(void);                        \/** Returns the version of the OTP driver in ROM *\/$/;"	m	struct:__anon193
otpInit	device/LPC54018.h	/^  uint32_t (*otpInit)(void);                                    \/** Initializes OTP controller *\/$/;"	m	struct:__anon193
otpProgramReg	device/LPC54018.h	/^  uint32_t (*otpProgramReg)(uint32_t bankIndex, uint32_t regIndex, uint32_t value);  \/** Program a single register in an OTP bank *\/$/;"	m	struct:__anon193
our6_ipaddr	lwip/src/include/netif/ppp/ppp.h	/^  ip6_addr_t our6_ipaddr, his6_ipaddr;$/;"	m	struct:ppp_addrs
our_ipaddr	lwip/src/include/netif/ppp/ppp.h	/^  ip4_addr_t our_ipaddr, his_ipaddr, netmask;$/;"	m	struct:ppp_addrs
our_ns	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t our_ns;                \/* NS to peer *\/$/;"	m	struct:pppol2tp_pcb_s
ouraddr	lwip/src/include/netif/ppp/ipcp.h	/^    u32_t ouraddr, hisaddr;	\/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
ourid	lwip/src/include/netif/ppp/ipv6cp.h	/^    eui64_t ourid, hisid;       \/* Interface identifiers *\/$/;"	m	struct:ipv6cp_options
outControl	drivers/fsl_ctimer.h	/^    ctimer_match_output_control_t outControl; \/*!< Action to be taken on a match on the EM bit\/output *\/$/;"	m	struct:_ctimer_match_config
outEndpointStallFlag	usb/device/class/usb_device_msc.h	/^    uint8_t outEndpointStallFlag; \/*!< Out endpoint stall flag*\/$/;"	m	struct:_usb_device_msc_struct
outInitState	drivers/fsl_sctimer.h	/^    uint8_t outInitState;               \/*!< Defines the initial output value *\/$/;"	m	struct:_sctimer_config
outPinInitState	drivers/fsl_ctimer.h	/^    bool outPinInitState;                     \/*!< Initial value of the EM bit\/output *\/$/;"	m	struct:_ctimer_match_config
out_accm	lwip/src/include/netif/ppp/pppos.h	/^  ext_accm out_accm;               \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:pppos_pcb_s
output	drivers/fsl_sctimer.h	/^    sctimer_out_t output;             \/*!< The output pin to use to generate the PWM signal *\/$/;"	m	struct:_sctimer_pwm_signal_param
output	lwip/src/include/lwip/netif.h	/^  netif_output_fn output;$/;"	m	struct:netif
output	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_output_fn             output;$/;"	m	struct:altcp_functions
outputLogic	drivers/fsl_gpio.h	/^    uint8_t outputLogic; \/*!< Set default output logic, no use in input *\/$/;"	m	struct:_gpio_pin_config
output_cb	lwip/src/include/netif/ppp/pppapi.h	/^      pppos_output_cb_fn output_cb;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon437
output_cb	lwip/src/include/netif/ppp/pppos.h	/^  pppos_output_cb_fn output_cb;    \/* PPP serial output callback *\/$/;"	m	struct:pppos_pcb_s
output_ip6	lwip/src/include/lwip/netif.h	/^  netif_output_ip6_fn output_ip6;$/;"	m	struct:netif
oversize_left	lwip/src/include/lwip/priv/tcp_priv.h	/^  u16_t oversize_left;     \/* Extra bytes available at the end of the last$/;"	m	struct:tcp_seg
owns_unit	lwip/src/netif/ppp/multilink.c	/^owns_unit(key, unit)$/;"	f	file:
p	doc/lwip/doc/ZeroCopyRx.c	/^   struct pbuf_custom p;$/;"	m	struct:my_custom_pbuf	typeref:struct:my_custom_pbuf::pbuf_custom	file:
p	emwin/emWin_header/GUI_Type.h	/^  void * p;$/;"	m	struct:__anon245
p	emwin/emWin_header/GUI_Type.h	/^  } p;$/;"	m	struct:GUI_FONT	typeref:union:GUI_FONT::__anon261
p	emwin/emWin_header/WIDGET.h	/^  void     * p;$/;"	m	struct:__anon209
p	emwin/emWin_header/WM.h	/^    const void * p;     \/* Message specific data pointer *\/$/;"	m	union:WM_MESSAGE::__anon291
p	lwip/src/include/lwip/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	lwip/src/include/lwip/ip4_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	lwip/src/include/lwip/ip6_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip6_reassdata	typeref:struct:ip6_reassdata::pbuf
p	lwip/src/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	lwip/src/include/lwip/priv/nd6_priv.h	/^  struct pbuf *p;$/;"	m	struct:nd6_q_entry	typeref:struct:nd6_q_entry::pbuf
p	lwip/src/include/lwip/priv/sockets_priv.h	/^    void *p;$/;"	m	union:lwip_setgetsockopt_data::__anon467
p	lwip/src/include/lwip/priv/tcp_priv.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	lwip/src/include/lwip/priv/tcpip_priv.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon468::__anon471	typeref:struct:tcpip_msg::__anon468::__anon471::pbuf
p	lwip/src/include/netif/ppp/ppp_impl.h	/^    struct pppstat p;		\/* basic PPP statistics *\/$/;"	m	struct:ppp_stats	typeref:struct:ppp_stats::pppstat
p	lwip/src/netif/slipif.c	/^  struct pbuf *p, *q;$/;"	m	struct:slipif_priv	typeref:struct:slipif_priv::pbuf	file:
pAFont	emwin/emWin_header/GUI.h	/^  const GUI_FONT * pAFont;$/;"	m	struct:GUI_CONTEXT
pAPI	emwin/emWin_header/GUI_Private.h	/^  const tUSAGE_APIList * pAPI;$/;"	m	struct:GUI_Usage
pAttrib	emwin/emWin_header/CHOOSEFILE.h	/^  char            * pAttrib;                             \/\/ (for internal use only)$/;"	m	struct:CHOOSEFILE_INFO
pBM	emwin/emWin_header/GUI_SPRITE_Private.h	/^  const GUI_BITMAP * pBM;$/;"	m	struct:__anon294
pBitRevTable	CMSIS/arm_math.h	/^    const uint16_t *pBitRevTable;      \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon76
pBitRevTable	CMSIS/arm_math.h	/^    const uint16_t *pBitRevTable;      \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon77
pBitRevTable	CMSIS/arm_math.h	/^    const uint16_t *pBitRevTable;      \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon78
pBitRevTable	CMSIS/arm_math.h	/^    uint16_t *pBitRevTable;            \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon74
pBitRevTable	CMSIS/arm_math.h	/^    uint16_t *pBitRevTable;            \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon75
pBitRevTable	CMSIS/arm_math.h	/^    uint16_t *pBitRevTable;          \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon70
pBitRevTable	CMSIS/arm_math.h	/^    uint16_t *pBitRevTable;          \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon71
pBitRevTable	CMSIS/arm_math.h	/^    uint16_t *pBitRevTable;          \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon72
pBitRevTable	CMSIS/arm_math.h	/^    uint16_t *pBitRevTable;          \/**< points to the bit reversal table. *\/$/;"	m	struct:__anon73
pBitmap	emwin/emWin_header/GUI.h	/^  const GUI_BITMAP  * pBitmap;$/;"	m	struct:__anon389
pBmCheck	emwin/emWin_header/RADIO_Private.h	/^  const GUI_BITMAP * pBmCheck;$/;"	m	struct:__anon342
pBmOCL	emwin/emWin_header/TREEVIEW.h	/^  const GUI_BITMAP * pBmOCL;$/;"	m	struct:__anon372
pBmPM	emwin/emWin_header/TREEVIEW.h	/^  const GUI_BITMAP * pBmPM;$/;"	m	struct:__anon372
pBuffer	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  U16 * pBuffer;        \/\/ Pointer for writing operations$/;"	m	struct:DRIVER_CONTEXT
pBuffer	emwin/emWin_header/GUI_GIF_Private.h	/^  const U8          * pBuffer;              \/* Pointer into buffer for reading data *\/$/;"	m	struct:__anon323
pBuffer	emwin/emWin_header/GUI_JPEG_Private.h	/^  const U8 * pBuffer;$/;"	m	struct:GUI_JPEG_DCONTEXT
pBuffer	emwin/emWin_header/GUI_VNC.h	/^  U8 * pBuffer;$/;"	m	struct:GUI_VNC_CONTEXT
pBuffer	emwin/emWin_header/GUI_VNC.h	/^  U8 * pBuffer;$/;"	m	struct:__anon344
pBuffer	emwin/emWin_header/SEGGER.h	/^  char* pBuffer;$/;"	m	struct:__anon201
pBufferDesc	emwin/emWin_header/SEGGER.h	/^  SEGGER_BUFFER_DESC* pBufferDesc;                    \/\/ Buffer descriptor to use for output.$/;"	m	struct:SEGGER_SNPRINTF_CONTEXT_struct
pCB	emwin/emWin_header/GUI_SPRITE_Private.h	/^  void            (* pCB)(GUI_HSPRITE hSprite, int Cmd); \/\/ Callback routine for animated sprites$/;"	m	struct:__anon294
pCfft	CMSIS/arm_math.h	/^    arm_cfft_radix4_instance_f32 *pCfft;        \/**< points to the complex FFT instance. *\/$/;"	m	struct:__anon81
pCfft	CMSIS/arm_math.h	/^    arm_cfft_radix4_instance_f32 *pCfft; \/**< points to the complex FFT instance. *\/$/;"	m	struct:__anon83
pCfft	CMSIS/arm_math.h	/^    arm_cfft_radix4_instance_q15 *pCfft; \/**< points to the complex FFT instance. *\/$/;"	m	struct:__anon85
pCfft	CMSIS/arm_math.h	/^    arm_cfft_radix4_instance_q31 *pCfft; \/**< points to the complex FFT instance. *\/$/;"	m	struct:__anon84
pCfft	CMSIS/arm_math.h	/^    const arm_cfft_instance_q15 *pCfft;       \/**< points to the complex FFT instance. *\/$/;"	m	struct:__anon79
pCfft	CMSIS/arm_math.h	/^    const arm_cfft_instance_q31 *pCfft;         \/**< points to the complex FFT instance. *\/$/;"	m	struct:__anon80
pClipRect_HL	emwin/emWin_header/GUI.h	/^  GUI_RECT * pClipRect_HL;                 \/\/ High level clip rectangle ... Speed optimization so drawing routines can optimize$/;"	m	struct:GUI_CONTEXT
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;                  \/**< points to the coefficient array. The array is of length numStages. *\/$/;"	m	struct:__anon98
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;            \/**< points to the coefficient array. The array is of length L*phaseLength. *\/$/;"	m	struct:__anon91
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;           \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon108
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;         \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon88
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;        \/**< points to the array of coefficients.  The array is of length 5*numStages. *\/$/;"	m	struct:__anon93
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;        \/**< points to the array of coefficients.  The array is of length 5*numStages. *\/$/;"	m	struct:__anon94
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;      \/**< Points to the array of coefficients.  The array is of length 5*numStages. *\/$/;"	m	struct:__anon57
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;   \/**< points to the coefficient array. The array is of length numTaps. *\/$/;"	m	struct:__anon105
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;   \/**< points to the coefficient array. The array is of length numTaps. *\/$/;"	m	struct:__anon54
pCoeffs	CMSIS/arm_math.h	/^    float32_t *pCoeffs;  \/**< points to the coefficient array. The array is of length numTaps. *\/$/;"	m	struct:__anon102
pCoeffs	CMSIS/arm_math.h	/^    float64_t *pCoeffs;        \/**< points to the array of coefficients.  The array is of length 5*numStages. *\/$/;"	m	struct:__anon95
pCoeffs	CMSIS/arm_math.h	/^    q15_t *pCoeffs;                      \/**< points to the coefficient array. The array is of length numStages. *\/$/;"	m	struct:__anon96
pCoeffs	CMSIS/arm_math.h	/^    q15_t *pCoeffs;                 \/**< points to the coefficient array. The array is of length L*phaseLength. *\/$/;"	m	struct:__anon89
pCoeffs	CMSIS/arm_math.h	/^    q15_t *pCoeffs;               \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon110
pCoeffs	CMSIS/arm_math.h	/^    q15_t *pCoeffs;             \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon86
pCoeffs	CMSIS/arm_math.h	/^    q15_t *pCoeffs;           \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon52
pCoeffs	CMSIS/arm_math.h	/^    q15_t *pCoeffs;          \/**< Points to the array of coefficients.  The array is of length 5*numStages. *\/$/;"	m	struct:__anon55
pCoeffs	CMSIS/arm_math.h	/^    q15_t *pCoeffs;       \/**< points to the coefficient array. The array is of length numTaps. *\/$/;"	m	struct:__anon107
pCoeffs	CMSIS/arm_math.h	/^    q15_t *pCoeffs;      \/**< points to the coefficient array. The array is of length numTaps. *\/$/;"	m	struct:__anon103
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;                      \/**< points to the coefficient array. The array is of length numStages. *\/$/;"	m	struct:__anon97
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;                 \/**< points to the coefficient array. The array is of length L*phaseLength. *\/$/;"	m	struct:__anon90
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;               \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon109
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;             \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon87
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;           \/**< points to the coefficient array. The array is of length numTaps. *\/$/;"	m	struct:__anon53
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;          \/**< Points to the array of coefficients.  The array is of length 5*numStages. *\/$/;"	m	struct:__anon56
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;          \/**< points to the array of coefficients.  The array is of length 5*numStages. *\/$/;"	m	struct:__anon92
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;       \/**< points to the coefficient array. The array is of length numTaps. *\/$/;"	m	struct:__anon106
pCoeffs	CMSIS/arm_math.h	/^    q31_t *pCoeffs;      \/**< points to the coefficient array. The array is of length numTaps. *\/$/;"	m	struct:__anon104
pCoeffs	CMSIS/arm_math.h	/^    q7_t *pCoeffs;                \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon111
pCoeffs	CMSIS/arm_math.h	/^    q7_t *pCoeffs;           \/**< points to the coefficient array. The array is of length numTaps.*\/$/;"	m	struct:__anon51
pColor	emwin/emWin_header/CHOOSECOLOR.h	/^  const GUI_COLOR * pColor;$/;"	m	struct:__anon234
pColorConvAPI	emwin/emWin_header/GUI.h	/^  const LCD_API_COLOR_CONV * pColorConvAPI;$/;"	m	struct:GUI_DEVICE
pColorConvAPI	emwin/emWin_header/GUI_Type.h	/^  const LCD_API_COLOR_CONV * pColorConvAPI;$/;"	m	struct:__anon242
pColors	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  U32 * pColors;$/;"	m	struct:DRIVER_CONTEXT
pConnectInfo	emwin/emWin_header/GUI_VNC.h	/^  void       * pConnectInfo;$/;"	m	struct:GUI_VNC_CONTEXT
pConsts	emwin/emWin_header/WIDGET.h	/^  const GUI_DRAW_CONSTS* pConsts;$/;"	m	struct:GUI_DRAW
pContext	emwin/emWin_header/GUI.h	/^    void   * pContext; \/\/ Pointer for context data in a fixed block$/;"	m	union:GUI_DEVICE::__anon383
pContext	emwin/emWin_header/SEGGER.h	/^  void*               pContext;                       \/\/ Application specific context.$/;"	m	struct:SEGGER_SNPRINTF_CONTEXT_struct
pConvert	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  LCD_PIXELINDEX * pConvert;$/;"	m	struct:__anon370
pCosFactor	CMSIS/arm_math.h	/^    float32_t *pCosFactor;               \/**< points to the cosFactor table. *\/$/;"	m	struct:__anon83
pCosFactor	CMSIS/arm_math.h	/^    q15_t *pCosFactor;                   \/**< points to the cosFactor table. *\/$/;"	m	struct:__anon85
pCosFactor	CMSIS/arm_math.h	/^    q31_t *pCosFactor;                   \/**< points to the cosFactor table. *\/$/;"	m	struct:__anon84
pData	CMSIS/arm_math.h	/^    float32_t *pData;     \/**< points to the data of the matrix. *\/$/;"	m	struct:__anon58
pData	CMSIS/arm_math.h	/^    float32_t *pData;   \/**< points to the data table. *\/$/;"	m	struct:__anon66
pData	CMSIS/arm_math.h	/^    float64_t *pData;     \/**< points to the data of the matrix. *\/$/;"	m	struct:__anon59
pData	CMSIS/arm_math.h	/^    q15_t *pData;         \/**< points to the data of the matrix. *\/$/;"	m	struct:__anon60
pData	CMSIS/arm_math.h	/^    q15_t *pData;       \/**< points to the data table. *\/$/;"	m	struct:__anon68
pData	CMSIS/arm_math.h	/^    q31_t *pData;         \/**< points to the data of the matrix. *\/$/;"	m	struct:__anon61
pData	CMSIS/arm_math.h	/^    q31_t *pData;       \/**< points to the data table. *\/$/;"	m	struct:__anon67
pData	CMSIS/arm_math.h	/^    q7_t *pData;        \/**< points to the data table. *\/$/;"	m	struct:__anon69
pData	emwin/emWin_header/GUI.h	/^  void * pData;         \/\/ Pointer to first pixel$/;"	m	struct:__anon385
pData	emwin/emWin_header/GUI_SetOrientation.h	/^  U8 * pData;$/;"	m	struct:DRIVER_CONTEXT
pData	emwin/emWin_header/GUI_Type.h	/^  const U8 * pData;$/;"	m	struct:__anon243
pData	emwin/emWin_header/GUI_Type.h	/^  const unsigned char      * pData;$/;"	m	struct:__anon257
pData	emwin/emWin_header/GUI_Type.h	/^  const unsigned char * pData;$/;"	m	struct:__anon255
pData	emwin/emWin_header/GUI_Type.h	/^  const unsigned char * pData;$/;"	m	struct:__anon256
pData	emwin/emWin_header/GUI_Type.h	/^  const void * pData;      \/* Pointer to TTF font file in addressable memory area *\/$/;"	m	struct:__anon267
pData	emwin/emWin_header/ICONVIEW_Private.h	/^  const void        * pData;$/;"	m	struct:__anon220
pData	emwin/emWin_header/IMAGE_Private.h	/^  const void        * pData;                                                          \/\/ Data pointer of the object to be drawn (Bitmap, BMP, GIF, JPEG, PNG)$/;"	m	struct:__anon315
pData	emwin/emWin_header/IP_FS.h	/^  const unsigned char* pData;$/;"	m	struct:__anon300
pData	emwin/emWin_header/LISTVIEW_Private.h	/^  void                       * pData;$/;"	m	struct:__anon332
pData	emwin/emWin_header/LISTWHEEL_Private.h	/^  void * pData;$/;"	m	struct:__anon351
pData	emwin/emWin_header/WIDGET.h	/^    const void * pData;$/;"	m	union:GUI_DRAW::__anon214
pDevice	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  GUI_DEVICE * pDevice;$/;"	m	struct:DRIVER_CONTEXT
pDevice	emwin/emWin_header/GUI_Private.h	/^  GUI_DEVICE * pDevice;$/;"	m	struct:__anon295
pDevice	emwin/emWin_header/GUI_SPRITE_Private.h	/^  GUI_DEVICE       * pDevice;$/;"	m	struct:__anon294
pDevice	emwin/emWin_header/GUI_VNC.h	/^  GUI_DEVICE * pDevice;$/;"	m	struct:GUI_VNC_CONTEXT
pDeviceAPI	emwin/emWin_header/GUI.h	/^  const GUI_DEVICE_API     * pDeviceAPI;$/;"	m	struct:GUI_DEVICE
pDialogStatus	emwin/emWin_header/FRAMEWIN_Private.h	/^  WM_DIALOG_STATUS      * pDialogStatus;$/;"	m	struct:__anon280
pDialogStatus	emwin/emWin_header/WINDOW_Private.h	/^  WM_DIALOG_STATUS * pDialogStatus;$/;"	m	struct:__anon310
pDirtyMax	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  U16 * pDirtyMax;$/;"	m	struct:DRIVER_CONTEXT
pDirtyMin	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  U16 * pDirtyMin;$/;"	m	struct:DRIVER_CONTEXT
pDrawObj	emwin/emWin_header/MULTIPAGE.h	/^  GUI_DRAW_HANDLE * pDrawObj;$/;"	m	struct:__anon200
pDrawingAPI	emwin/emWin_header/GUI_SetOrientation.h	/^  const GUI_ORIENTATION_API * pDrawingAPI;$/;"	m	struct:DRIVER_CONTEXT
pDriver	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  GUI_DEVICE * pDriver;$/;"	m	struct:__anon370
pEffect	emwin/emWin_header/WIDGET.h	/^  const WIDGET_EFFECT* pEffect;$/;"	m	struct:__anon212
pExt	emwin/emWin_header/CHOOSEFILE.h	/^  char            * pExt;                                \/\/ (for internal use only)$/;"	m	struct:CHOOSEFILE_INFO
pFileData	emwin/emWin_header/GUI_BMP_Private.h	/^  const U8 * pFileData;$/;"	m	struct:__anon328
pFileData	emwin/emWin_header/GUI_GIF_Private.h	/^  const U8 * pFileData;$/;"	m	struct:__anon325
pFileData	emwin/emWin_header/GUI_JPEG_Private.h	/^  const U8 * pFileData;$/;"	m	struct:__anon361
pFirstHook	emwin/emWin_header/FRAMEWIN_Private.h	/^  GUI_HOOK              * pFirstHook;$/;"	m	struct:__anon280
pFont	emwin/emWin_header/BUTTON_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon401
pFont	emwin/emWin_header/CHECKBOX_Private.h	/^  const GUI_FONT      * pFont;$/;"	m	struct:__anon205
pFont	emwin/emWin_header/DROPDOWN_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon359
pFont	emwin/emWin_header/EDIT_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon217
pFont	emwin/emWin_header/FRAMEWIN_Private.h	/^  const GUI_FONT      * pFont;$/;"	m	struct:__anon279
pFont	emwin/emWin_header/GRAPH_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon308
pFont	emwin/emWin_header/HEADER_Private.h	/^  const GUI_FONT    * pFont;$/;"	m	struct:__anon275
pFont	emwin/emWin_header/ICONVIEW_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon218
pFont	emwin/emWin_header/LISTBOX_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon312
pFont	emwin/emWin_header/LISTVIEW_Private.h	/^  const GUI_FONT             * pFont;$/;"	m	struct:__anon331
pFont	emwin/emWin_header/LISTWHEEL_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon352
pFont	emwin/emWin_header/MENU_Private.h	/^  const GUI_FONT    * pFont;$/;"	m	struct:__anon318
pFont	emwin/emWin_header/MULTIPAGE_Private.h	/^  const GUI_FONT          * pFont;$/;"	m	struct:__anon340
pFont	emwin/emWin_header/PROGBAR_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon423
pFont	emwin/emWin_header/RADIO_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon342
pFont	emwin/emWin_header/TEXT_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon297
pFont	emwin/emWin_header/TREEVIEW.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon372
pFont	emwin/emWin_header/TREEVIEW_Private.h	/^  const GUI_FONT * pFont;$/;"	m	struct:__anon226
pFontData	emwin/emWin_header/GUI_Type.h	/^    const void              * pFontData;$/;"	m	union:GUI_FONT::__anon261
pFunc	emwin/emWin_header/WM.h	/^    void (* pFunc)(void);$/;"	m	union:WM_MESSAGE::__anon291
pHeaderFont	emwin/emWin_header/SWIPELIST_Private.h	/^  const GUI_FONT * pHeaderFont;$/;"	m	struct:__anon237
pHookFunc	emwin/emWin_header/GUI_HOOK.h	/^  GUI_HOOK_FUNC*   pHookFunc;$/;"	m	struct:GUI_HOOK
pIndex	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  LCD_PIXELINDEX * pIndex;$/;"	m	struct:__anon370
pLCD_HL	emwin/emWin_header/GUI.h	/^  const tLCD_HL_APIList * pLCD_HL;       \/\/ Required to reroute drawing (HLine & Pixel) to the AA module$/;"	m	struct:GUI_CONTEXT
pLineBuffer	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void * pLineBuffer;$/;"	m	struct:DRIVER_CONTEXT
pLineBuffer	emwin/emWin_header/GUI_GCache_Private.h	/^  LCD_PIXELINDEX * pLineBuffer;$/;"	m	struct:__anon239
pList	emwin/emWin_header/GUI_Type.h	/^  const GUI_FONT_TRANSLIST * pList;$/;"	m	struct:__anon254
pMask	emwin/emWin_header/CHOOSEFILE.h	/^  const char      * pMask;                               \/\/ Mask to be used for searching files$/;"	m	struct:CHOOSEFILE_INFO
pMemdev_API	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  const GUI_DEVICE_API * pMemdev_API;$/;"	m	struct:__anon370
pMemdev_API	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  const GUI_DEVICE_API * pMemdev_API;$/;"	m	struct:DRIVER_CONTEXT
pMethods	emwin/emWin_header/GUI_Type.h	/^  const GUI_BITMAP_METHODS * pMethods;$/;"	m	struct:__anon243
pMirror	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  const U8 * pMirror;$/;"	m	struct:DRIVER_CONTEXT
pMono	emwin/emWin_header/GUI_Type.h	/^    const GUI_FONT_MONO     * pMono;$/;"	m	union:GUI_FONT::__anon261
pName	emwin/emWin_header/CHOOSEFILE.h	/^  char            * pName;                               \/\/ (for internal use only)$/;"	m	struct:CHOOSEFILE_INFO
pName	emwin/emWin_header/DIALOG_Intern.h	/^  const char             * pName;            \/\/ Text ... Not used on all widgets$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
pNext	emwin/emWin_header/GUI.h	/^  GUI_DEVICE * pNext;$/;"	m	struct:GUI_DEVICE
pNext	emwin/emWin_header/GUI_HOOK.h	/^  struct GUI_HOOK* pNext;$/;"	m	struct:GUI_HOOK	typeref:struct:GUI_HOOK::GUI_HOOK
pNext	emwin/emWin_header/GUI_Type.h	/^  GUI_REGISTER_HOOK * pNext;$/;"	m	struct:GUI_REGISTER_HOOK
pNext	emwin/emWin_header/GUI_Type.h	/^  const struct GUI_FONT_PROP * pNext;          \/* Pointer to next               *\/$/;"	m	struct:GUI_FONT_PROP	typeref:struct:GUI_FONT_PROP::GUI_FONT_PROP
pNext	emwin/emWin_header/GUI_Type.h	/^  const struct GUI_FONT_PROP_EXT * pNext;      \/* Pointer to next               *\/$/;"	m	struct:GUI_FONT_PROP_EXT	typeref:struct:GUI_FONT_PROP_EXT::GUI_FONT_PROP_EXT
pNext	emwin/emWin_header/GUI_VNC.h	/^  struct GUI_VNC_CONTEXT * pNext;$/;"	m	struct:GUI_VNC_CONTEXT	typeref:struct:GUI_VNC_CONTEXT::GUI_VNC_CONTEXT
pNext	emwin/emWin_header/IP_FS.h	/^  IP_FS_READ_ONLY_FILE_HOOK* pNext;$/;"	m	struct:IP_FS_READ_ONLY_FILE_HOOK_STRUCT
pNext	emwin/emWin_header/SEGGER.h	/^  struct SEGGER_PRINTF_FORMATTER* pNext;              \/\/ Pointer to next formatter.$/;"	m	struct:SEGGER_PRINTF_FORMATTER	typeref:struct:SEGGER_PRINTF_FORMATTER::SEGGER_PRINTF_FORMATTER
pNext	emwin/emWin_header/WM.h	/^  WM_WINDOW_INFO * pNext;$/;"	m	struct:WM_WINDOW_INFO
pNext	emwin/emWin_header/WM_Intern.h	/^  struct  WM_CRITICAL_HANDLE * pNext;$/;"	m	struct:WM_CRITICAL_HANDLE	typeref:struct:WM_CRITICAL_HANDLE::WM_CRITICAL_HANDLE
pNextPixel_API	emwin/emWin_header/GUI_BMP_Private.h	/^  LCD_API_NEXT_PIXEL  * pNextPixel_API;$/;"	m	struct:__anon330
pPal	emwin/emWin_header/GUI_Type.h	/^  const GUI_LOGPALETTE * pPal;$/;"	m	struct:__anon243
pPalEntries	emwin/emWin_header/LCD.h	/^  const LCD_COLOR * pPalEntries;$/;"	m	struct:__anon405
pPalEntries	emwin/emWin_header/LCD.h	/^  const LCD_COLOR * pPalEntries;$/;"	m	struct:__anon407
pPalette	emwin/emWin_header/GUI_GCache_Private.h	/^  LCD_PIXELINDEX * pPalette;$/;"	m	struct:__anon239
pParam	emwin/emWin_header/GUI_BMP_Private.h	/^  void              * pParam;    \/\/ Parameter pointer passed to function$/;"	m	struct:__anon329
pParam	emwin/emWin_header/GUI_GIF_Private.h	/^  void              * pParam;               \/* Parameter pointer passed to function *\/$/;"	m	struct:__anon323
pParam	emwin/emWin_header/GUI_JPEG_Private.h	/^  void * pParam;                 \/\/ Pointer passed to 'GetData' function$/;"	m	struct:GUI_JPEG_DCONTEXT
pPeriod	emwin/emWin_header/GUI.h	/^  const unsigned    * pPeriod;$/;"	m	struct:__anon390
pPrev	emwin/emWin_header/GUI.h	/^  GUI_DEVICE * pPrev;$/;"	m	struct:GUI_DEVICE
pProp	emwin/emWin_header/GUI_Type.h	/^    const GUI_FONT_PROP     * pProp;$/;"	m	union:GUI_FONT::__anon261
pPropExt	emwin/emWin_header/GUI_Type.h	/^    const GUI_FONT_PROP_EXT * pPropExt;$/;"	m	union:GUI_FONT::__anon261
pReadBuffer	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U8 * pReadBuffer;$/;"	m	struct:DRIVER_CONTEXT
pRfft	CMSIS/arm_math.h	/^    arm_rfft_instance_f32 *pRfft;        \/**< points to the real FFT instance. *\/$/;"	m	struct:__anon83
pRfft	CMSIS/arm_math.h	/^    arm_rfft_instance_q15 *pRfft;        \/**< points to the real FFT instance. *\/$/;"	m	struct:__anon85
pRfft	CMSIS/arm_math.h	/^    arm_rfft_instance_q31 *pRfft;        \/**< points to the real FFT instance. *\/$/;"	m	struct:__anon84
pRoot	emwin/emWin_header/CHOOSEFILE.h	/^  char              pRoot[CHOOSEFILE_MAXLEN];            \/\/ Buffer used internally and for passing result$/;"	m	struct:CHOOSEFILE_INFO
pRotation	emwin/emWin_header/MULTIPAGE.h	/^    GUI_ROTATION  * pRotation;$/;"	m	struct:__anon200
pSampleBuf	emwin/emWin_header/GUI_JPEG_Private.h	/^  U8     * pSampleBuf;$/;"	m	struct:GUI_JPEG_DCONTEXT
pSel_Divide_1	drivers/fsl_clock.h	/^    pSel_Divide_1 = 0U,$/;"	e	enum:_usb_pll_psel
pSel_Divide_2	drivers/fsl_clock.h	/^    pSel_Divide_2,$/;"	e	enum:_usb_pll_psel
pSel_Divide_4	drivers/fsl_clock.h	/^    pSel_Divide_4,$/;"	e	enum:_usb_pll_psel
pSel_Divide_8	drivers/fsl_clock.h	/^    pSel_Divide_8$/;"	e	enum:_usb_pll_psel
pSepFont	emwin/emWin_header/SWIPELIST_Private.h	/^  const GUI_FONT * pSepFont;$/;"	m	struct:__anon237
pSkinPrivate	emwin/emWin_header/WIDGET.h	/^  void          * pSkinPrivate;$/;"	m	struct:__anon210
pSrc	emwin/emWin_header/GUI_BMP_Private.h	/^  const U8            * pSrc;           \/\/ Pointer to data$/;"	m	struct:__anon330
pState	CMSIS/arm_math.h	/^    float32_t *pState;                   \/**< points to the state variable array. The array is of length numStages+blockSize. *\/$/;"	m	struct:__anon101
pState	CMSIS/arm_math.h	/^    float32_t *pState;                   \/**< points to the state variable array. The array is of length numStages. *\/$/;"	m	struct:__anon98
pState	CMSIS/arm_math.h	/^    float32_t *pState;             \/**< points to the state variable array. The array is of length phaseLength+numTaps-1. *\/$/;"	m	struct:__anon91
pState	CMSIS/arm_math.h	/^    float32_t *pState;            \/**< points to the state buffer array. The array is of length maxDelay+blockSize-1. *\/$/;"	m	struct:__anon108
pState	CMSIS/arm_math.h	/^    float32_t *pState;          \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon88
pState	CMSIS/arm_math.h	/^    float32_t *pState;         \/**< points to the array of state coefficients.  The array is of length 2*numStages. *\/$/;"	m	struct:__anon93
pState	CMSIS/arm_math.h	/^    float32_t *pState;         \/**< points to the array of state coefficients.  The array is of length 4*numStages. *\/$/;"	m	struct:__anon94
pState	CMSIS/arm_math.h	/^    float32_t *pState;       \/**< Points to the array of state coefficients.  The array is of length 4*numStages. *\/$/;"	m	struct:__anon57
pState	CMSIS/arm_math.h	/^    float32_t *pState;    \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon105
pState	CMSIS/arm_math.h	/^    float32_t *pState;    \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon54
pState	CMSIS/arm_math.h	/^    float32_t *pState;   \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon102
pState	CMSIS/arm_math.h	/^    float64_t *pState;         \/**< points to the array of state coefficients.  The array is of length 2*numStages. *\/$/;"	m	struct:__anon95
pState	CMSIS/arm_math.h	/^    q15_t *pState;                       \/**< points to the state variable array. The array is of length numStages+blockSize. *\/$/;"	m	struct:__anon99
pState	CMSIS/arm_math.h	/^    q15_t *pState;                       \/**< points to the state variable array. The array is of length numStages. *\/$/;"	m	struct:__anon96
pState	CMSIS/arm_math.h	/^    q15_t *pState;                  \/**< points to the state variable array. The array is of length blockSize+phaseLength-1. *\/$/;"	m	struct:__anon89
pState	CMSIS/arm_math.h	/^    q15_t *pState;                \/**< points to the state buffer array. The array is of length maxDelay+blockSize-1. *\/$/;"	m	struct:__anon110
pState	CMSIS/arm_math.h	/^    q15_t *pState;              \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon86
pState	CMSIS/arm_math.h	/^    q15_t *pState;            \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon52
pState	CMSIS/arm_math.h	/^    q15_t *pState;           \/**< Points to the array of state coefficients.  The array is of length 4*numStages. *\/$/;"	m	struct:__anon55
pState	CMSIS/arm_math.h	/^    q15_t *pState;        \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon107
pState	CMSIS/arm_math.h	/^    q15_t *pState;       \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon103
pState	CMSIS/arm_math.h	/^    q31_t *pState;                       \/**< points to the state variable array. The array is of length numStages+blockSize. *\/$/;"	m	struct:__anon100
pState	CMSIS/arm_math.h	/^    q31_t *pState;                       \/**< points to the state variable array. The array is of length numStages. *\/$/;"	m	struct:__anon97
pState	CMSIS/arm_math.h	/^    q31_t *pState;                  \/**< points to the state variable array. The array is of length blockSize+phaseLength-1. *\/$/;"	m	struct:__anon90
pState	CMSIS/arm_math.h	/^    q31_t *pState;                \/**< points to the state buffer array. The array is of length maxDelay+blockSize-1. *\/$/;"	m	struct:__anon109
pState	CMSIS/arm_math.h	/^    q31_t *pState;              \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon87
pState	CMSIS/arm_math.h	/^    q31_t *pState;            \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon53
pState	CMSIS/arm_math.h	/^    q31_t *pState;           \/**< Points to the array of state coefficients.  The array is of length 4*numStages. *\/$/;"	m	struct:__anon56
pState	CMSIS/arm_math.h	/^    q31_t *pState;        \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon106
pState	CMSIS/arm_math.h	/^    q31_t *pState;       \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon104
pState	CMSIS/arm_math.h	/^    q63_t *pState;           \/**< points to the array of state coefficients.  The array is of length 4*numStages. *\/$/;"	m	struct:__anon92
pState	CMSIS/arm_math.h	/^    q7_t *pState;                 \/**< points to the state buffer array. The array is of length maxDelay+blockSize-1. *\/$/;"	m	struct:__anon111
pState	CMSIS/arm_math.h	/^    q7_t *pState;            \/**< points to the state variable array. The array is of length numTaps+blockSize-1. *\/$/;"	m	struct:__anon51
pState	emwin/emWin_header/WM.h	/^  GUI_PID_STATE * pState;$/;"	m	struct:__anon287
pTTF	emwin/emWin_header/GUI_Type.h	/^  GUI_TTF_DATA * pTTF;     \/* Pointer to GUI_TTF_DATA structure which contains location and size of font file *\/$/;"	m	struct:__anon268
pTapDelay	CMSIS/arm_math.h	/^    int32_t *pTapDelay;           \/**< points to the array of delay values.  The array is of length numTaps. *\/$/;"	m	struct:__anon108
pTapDelay	CMSIS/arm_math.h	/^    int32_t *pTapDelay;           \/**< points to the array of delay values.  The array is of length numTaps. *\/$/;"	m	struct:__anon109
pTapDelay	CMSIS/arm_math.h	/^    int32_t *pTapDelay;           \/**< points to the array of delay values.  The array is of length numTaps. *\/$/;"	m	struct:__anon110
pTapDelay	CMSIS/arm_math.h	/^    int32_t *pTapDelay;           \/**< points to the array of delay values.  The array is of length numTaps. *\/$/;"	m	struct:__anon111
pText	emwin/emWin_header/MENU.h	/^  const char  * pText;$/;"	m	struct:__anon232
pText	emwin/emWin_header/PROGBAR.h	/^  const char * pText;$/;"	m	struct:__anon222
pText	emwin/emWin_header/TREEVIEW.h	/^  char * pText;$/;"	m	struct:__anon372
pText	emwin/emWin_header/WM.h	/^  const char * pText;$/;"	m	struct:__anon293
pTextFont	emwin/emWin_header/SWIPELIST_Private.h	/^  const GUI_FONT * pTextFont;$/;"	m	struct:__anon237
pTrans	emwin/emWin_header/GUI_Type.h	/^  const GUI_FONT_TRANSINFO * pTrans;$/;"	m	struct:__anon257
pTransData	emwin/emWin_header/GUI_Type.h	/^  const U8                 * pTransData;$/;"	m	struct:__anon257
pTwiddle	CMSIS/arm_math.h	/^    const float32_t *pTwiddle;         \/**< points to the Twiddle factor table. *\/$/;"	m	struct:__anon78
pTwiddle	CMSIS/arm_math.h	/^    const q15_t *pTwiddle;             \/**< points to the Twiddle factor table. *\/$/;"	m	struct:__anon76
pTwiddle	CMSIS/arm_math.h	/^    const q31_t *pTwiddle;             \/**< points to the Twiddle factor table. *\/$/;"	m	struct:__anon77
pTwiddle	CMSIS/arm_math.h	/^    float32_t *pTwiddle;                 \/**< points to the twiddle factor table. *\/$/;"	m	struct:__anon83
pTwiddle	CMSIS/arm_math.h	/^    float32_t *pTwiddle;               \/**< points to the Twiddle factor table. *\/$/;"	m	struct:__anon74
pTwiddle	CMSIS/arm_math.h	/^    float32_t *pTwiddle;               \/**< points to the Twiddle factor table. *\/$/;"	m	struct:__anon75
pTwiddle	CMSIS/arm_math.h	/^    q15_t *pTwiddle;                     \/**< points to the twiddle factor table. *\/$/;"	m	struct:__anon85
pTwiddle	CMSIS/arm_math.h	/^    q15_t *pTwiddle;                 \/**< points to the Sin twiddle factor table. *\/$/;"	m	struct:__anon70
pTwiddle	CMSIS/arm_math.h	/^    q15_t *pTwiddle;                 \/**< points to the twiddle factor table. *\/$/;"	m	struct:__anon71
pTwiddle	CMSIS/arm_math.h	/^    q31_t *pTwiddle;                     \/**< points to the twiddle factor table. *\/$/;"	m	struct:__anon84
pTwiddle	CMSIS/arm_math.h	/^    q31_t *pTwiddle;                 \/**< points to the Twiddle factor table. *\/$/;"	m	struct:__anon72
pTwiddle	CMSIS/arm_math.h	/^    q31_t *pTwiddle;                 \/**< points to the twiddle factor table. *\/$/;"	m	struct:__anon73
pTwiddleAReal	CMSIS/arm_math.h	/^    float32_t *pTwiddleAReal;                   \/**< points to the real twiddle factor table. *\/$/;"	m	struct:__anon81
pTwiddleAReal	CMSIS/arm_math.h	/^    q15_t *pTwiddleAReal;                     \/**< points to the real twiddle factor table. *\/$/;"	m	struct:__anon79
pTwiddleAReal	CMSIS/arm_math.h	/^    q31_t *pTwiddleAReal;                       \/**< points to the real twiddle factor table. *\/$/;"	m	struct:__anon80
pTwiddleBReal	CMSIS/arm_math.h	/^    float32_t *pTwiddleBReal;                   \/**< points to the imag twiddle factor table. *\/$/;"	m	struct:__anon81
pTwiddleBReal	CMSIS/arm_math.h	/^    q15_t *pTwiddleBReal;                     \/**< points to the imag twiddle factor table. *\/$/;"	m	struct:__anon79
pTwiddleBReal	CMSIS/arm_math.h	/^    q31_t *pTwiddleBReal;                       \/**< points to the imag twiddle factor table. *\/$/;"	m	struct:__anon80
pTwiddleRFFT	CMSIS/arm_math.h	/^    float32_t * pTwiddleRFFT;        \/**< Twiddle factors real stage  *\/$/;"	m	struct:__anon82
pUserDraw	emwin/emWin_header/GRAPH_Private.h	/^  void            (* pUserDraw)(WM_HWIN hObj, int Stage);$/;"	m	struct:GRAPH_OBJ
pVMEM	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  U16 * pVMEM;$/;"	m	struct:DRIVER_CONTEXT
pVMEM	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  U8 * pVMEM;$/;"	m	struct:DRIVER_CONTEXT
pVMEM	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  U8 * pVMEM;$/;"	m	struct:DRIVER_CONTEXT
pVMEM	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  U8 * pVMEM;$/;"	m	struct:DRIVER_CONTEXT
pVMEM	emwin/emWin_header/GUI_GCache_Private.h	/^  U32 * pVMEM;$/;"	m	struct:__anon239
pVRAM	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  U8 * pVRAM;$/;"	m	struct:__anon370
pVRAM	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void * pVRAM;$/;"	m	struct:DRIVER_CONTEXT
pVRAM	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  U8 * pVRAM;$/;"	m	struct:DRIVER_CONTEXT
pVRAM	emwin/emWin_header/LCD.h	/^  void * pVRAM;$/;"	m	struct:__anon409
pVRAM_Lock	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  U8 * pVRAM_Lock;$/;"	m	struct:__anon370
pVoid	emwin/emWin_header/GUI_Type.h	/^  void * pVoid;                      \/* Void pointer passed to GetData-function *\/$/;"	m	struct:__anon266
pVoid	emwin/emWin_header/IMAGE_Private.h	/^  void              * pVoid;        \/\/ Void pointer passed to GetData() function$/;"	m	struct:__anon315
pWidgetSkin	emwin/emWin_header/BUTTON_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:__anon402
pWidgetSkin	emwin/emWin_header/CHECKBOX_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:__anon206
pWidgetSkin	emwin/emWin_header/DROPDOWN_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:__anon360
pWidgetSkin	emwin/emWin_header/FRAMEWIN_Private.h	/^  WIDGET_SKIN const     * pWidgetSkin;$/;"	m	struct:__anon280
pWidgetSkin	emwin/emWin_header/HEADER_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:__anon276
pWidgetSkin	emwin/emWin_header/MENU_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:__anon319
pWidgetSkin	emwin/emWin_header/MULTIPAGE_Private.h	/^  WIDGET_SKIN const    * pWidgetSkin;$/;"	m	struct:MULTIPAGE_Obj
pWidgetSkin	emwin/emWin_header/PROGBAR_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:__anon424
pWidgetSkin	emwin/emWin_header/RADIO_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:__anon343
pWidgetSkin	emwin/emWin_header/SCROLLBAR_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:SCROLLBAR_OBJ
pWidgetSkin	emwin/emWin_header/SLIDER_Private.h	/^  WIDGET_SKIN const * pWidgetSkin;$/;"	m	struct:__anon378
pWidgetSkin	emwin/emWin_header/SPINBOX_Private.h	/^  const WIDGET_SKIN * pWidgetSkin;$/;"	m	struct:__anon322
pWrite	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  U16 * pWrite;$/;"	m	struct:DRIVER_CONTEXT
pWrite	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U8 * pWrite;$/;"	m	struct:DRIVER_CONTEXT
pWriteBuffer	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void * pWriteBuffer;$/;"	m	struct:DRIVER_CONTEXT
pWriteBuffer	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  U16 * pWriteBuffer;$/;"	m	struct:DRIVER_CONTEXT
pWriteBuffer	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U8 * pWriteBuffer;$/;"	m	struct:DRIVER_CONTEXT
pYData	CMSIS/arm_math.h	/^    float32_t *pYData;          \/**< pointer to the table of Y values *\/$/;"	m	struct:__anon65
pZoomInfo	emwin/emWin_header/WM.h	/^  WM_ZOOM_INFO * pZoomInfo; \/\/ Pointer to WM_ZOOM_INFO structure$/;"	m	struct:__anon289
p_max	codec2/defines.h	/^    int   p_max;         \/* maximum pitch period in samples          *\/$/;"	m	struct:__anon134
p_min	codec2/defines.h	/^    int   p_min;         \/* minimum pitch period in samples          *\/$/;"	m	struct:__anon134
paCharInfo	emwin/emWin_header/GUI_Type.h	/^  const GUI_CHARINFO         * paCharInfo;     \/* Address of first character    *\/$/;"	m	struct:GUI_FONT_PROP
paCharInfo	emwin/emWin_header/GUI_Type.h	/^  const GUI_CHARINFO_EXT         * paCharInfo; \/* Address of first character    *\/$/;"	m	struct:GUI_FONT_PROP_EXT
paColor	emwin/emWin_header/LCD_Protected.h	/^  LCD_COLOR * paColor;$/;"	m	struct:__anon355
pack	codec2/pack.c	/^pack($/;"	f
pack48	drivers/fsl_i2s.h	/^    bool pack48;     \/*!< Packing format for 48-bit data (false - 24 bit values, true - alternating 32-bit and 16-bit$/;"	m	struct:_i2s_handle
pack48	drivers/fsl_i2s.h	/^    bool pack48; \/*!< Packing format for 48-bit data (false - 24 bit values, true - alternating 32-bit and 16-bit$/;"	m	struct:_i2s_config
pack_natural_or_gray	codec2/pack.c	/^pack_natural_or_gray($/;"	f
packed	codec2/varicode.h	/^    unsigned short packed;$/;"	m	struct:VARICODE_DEC
packed_struct_test	lwip/src/core/init.c	/^struct packed_struct_test {$/;"	s	file:
packet	lwip/src/netif/ppp/demand.c	/^struct packet {$/;"	s	file:
packetAlignmentFactor	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t packetAlignmentFactor;$/;"	m	struct:_rndis_init_cmplt_struct
pad	codec2/kiss_fftr.c	/^    void * pad;$/;"	m	struct:kiss_fftr_state	file:
pafEncode	emwin/emWin_header/GUI_Type.h	/^  const tGUI_ENC_APIList* pafEncode;$/;"	m	struct:GUI_FONT
pafEncode	emwin/emWin_header/GUI_Type.h	/^  const tGUI_ENC_APIList* pafEncode;$/;"	m	struct:tGUI_SIF_APIList_struct
pafEncode	emwin/emWin_header/GUI_Type.h	/^  const tGUI_ENC_APIList* pafEncode;$/;"	m	struct:tGUI_XBF_APIList_struct
pageCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t pageCode;          \/*!< Page Code*\/$/;"	m	struct:_usb_device_inquiry_command_struct
pair	littlefs/littlefs_include/lfs.h	/^    lfs_block_t pair[2];$/;"	m	struct:lfs_dir
pair	littlefs/littlefs_include/lfs.h	/^    lfs_block_t pair[2];$/;"	m	struct:lfs_file
pap_max_transmits	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  pap_max_transmits;       \/* Number of auth-reqs sent *\/$/;"	m	struct:ppp_settings_s
pap_option_list	lwip/src/netif/ppp/upap.c	/^static option_t pap_option_list[] = {$/;"	v	file:
pap_protent	lwip/src/netif/ppp/upap.c	/^const struct protent pap_protent = {$/;"	v	typeref:struct:protent
pap_req_timeout	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  pap_req_timeout;         \/* Time to wait for auth-req from peer *\/$/;"	m	struct:ppp_settings_s
pap_timeout_time	lwip/src/include/netif/ppp/ppp.h	/^  u8_t  pap_timeout_time;        \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:ppp_settings_s
parityMode	component/serial_manager/serial_port_uart.h	/^    serial_port_uart_parity_mode_t parityMode;      \/*!< Parity mode, disabled (default), even, odd *\/$/;"	m	struct:_serial_port_uart_config
parityMode	component/uart/uart.h	/^    hal_uart_parity_mode_t parityMode;      \/*!< Parity mode, disabled (default), even, odd *\/$/;"	m	struct:_hal_uart_config
parityMode	drivers/fsl_usart.h	/^    usart_parity_mode_t parityMode;       \/*!< Parity mode, disabled (default), even, odd *\/$/;"	m	struct:_usart_config
parse_dotted_ip	lwip/src/netif/ppp/ipcp.c	/^parse_dotted_ip(p, vp)$/;"	f
parse_num	lwip/src/netif/ppp/multilink.c	/^parse_num(str, key, valp)$/;"	f	file:
passive	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int passive           :1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passive_open	lwip/src/include/lwip/tcp.h	/^  tcp_extarg_callback_passive_open_fn passive_open;$/;"	m	struct:tcp_ext_arg_callbacks
passwd	lwip/src/include/netif/ppp/ppp.h	/^  const char  *passwd;                 \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings_s
pauseDuration	drivers/fsl_enet.h	/^    uint16_t pauseDuration; \/*!< Used in the tx flow control frame, only valid when kENET_FlowControlEnable is set. *\/$/;"	m	struct:_enet_config
payload	lwip/src/include/lwip/pbuf.h	/^  const void *payload;$/;"	m	struct:pbuf_rom
payload	lwip/src/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
pbuf	lwip/src/include/lwip/pbuf.h	/^  struct pbuf pbuf;$/;"	m	struct:pbuf_custom	typeref:struct:pbuf_custom::pbuf
pbuf	lwip/src/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf	lwip/src/include/lwip/priv/sockets_priv.h	/^  struct pbuf *pbuf;$/;"	m	union:lwip_sock_lastdata	typeref:struct:lwip_sock_lastdata::pbuf
pbuf_add_header	lwip/src/core/pbuf.c	/^pbuf_add_header(struct pbuf *p, size_t header_size_increment)$/;"	f
pbuf_add_header_force	lwip/src/core/pbuf.c	/^pbuf_add_header_force(struct pbuf *p, size_t header_size_increment)$/;"	f
pbuf_add_header_impl	lwip/src/core/pbuf.c	/^pbuf_add_header_impl(struct pbuf *p, size_t header_size_increment, u8_t force)$/;"	f	file:
pbuf_alloc	lwip/src/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_alloc_reference	lwip/src/core/pbuf.c	/^pbuf_alloc_reference(void *payload, u16_t length, pbuf_type type)$/;"	f
pbuf_alloced_custom	lwip/src/core/pbuf.c	/^pbuf_alloced_custom(pbuf_layer l, u16_t length, pbuf_type type, struct pbuf_custom *p,$/;"	f
pbuf_cat	lwip/src/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	lwip/src/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	lwip/src/core/pbuf.c	/^pbuf_clen(const struct pbuf *p)$/;"	f
pbuf_clone	lwip/src/core/pbuf.c	/^pbuf_clone(pbuf_layer layer, pbuf_type type, struct pbuf *p)$/;"	f
pbuf_coalesce	lwip/src/core/pbuf.c	/^pbuf_coalesce(struct pbuf *p, pbuf_layer layer)$/;"	f
pbuf_copy	lwip/src/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, const struct pbuf *p_from)$/;"	f
pbuf_copy_partial	lwip/src/core/pbuf.c	/^pbuf_copy_partial(const struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_custom	lwip/src/include/lwip/pbuf.h	/^struct pbuf_custom {$/;"	s
pbuf_custom_ref	lwip/src/include/lwip/ip4_frag.h	/^struct pbuf_custom_ref {$/;"	s
pbuf_custom_ref	lwip/src/include/lwip/ip6_frag.h	/^struct pbuf_custom_ref {$/;"	s
pbuf_dechain	lwip/src/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_fill_chksum	lwip/src/core/pbuf.c	/^pbuf_fill_chksum(struct pbuf *p, u16_t start_offset, const void *dataptr,$/;"	f
pbuf_free	lwip/src/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	lwip/src/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_custom_fn	lwip/src/include/lwip/pbuf.h	/^typedef void (*pbuf_free_custom_fn)(struct pbuf *p);$/;"	t
pbuf_free_header	lwip/src/core/pbuf.c	/^pbuf_free_header(struct pbuf *q, u16_t size)$/;"	f
pbuf_free_int	lwip/src/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_free_ooseq	lwip/src/core/pbuf.c	/^pbuf_free_ooseq(void)$/;"	f	file:
pbuf_free_ooseq_callback	lwip/src/core/pbuf.c	/^pbuf_free_ooseq_callback(void *arg)$/;"	f	file:
pbuf_free_ooseq_pending	lwip/src/core/pbuf.c	/^volatile u8_t pbuf_free_ooseq_pending;$/;"	v
pbuf_get_allocsrc	lwip/src/include/lwip/pbuf.h	280;"	d
pbuf_get_at	lwip/src/core/pbuf.c	/^pbuf_get_at(const struct pbuf *p, u16_t offset)$/;"	f
pbuf_get_contiguous	lwip/src/core/pbuf.c	/^pbuf_get_contiguous(const struct pbuf *p, void *buffer, size_t bufsize, u16_t len, u16_t offset)$/;"	f
pbuf_header	lwip/src/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_header_force	lwip/src/core/pbuf.c	/^pbuf_header_force(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_header_impl	lwip/src/core/pbuf.c	/^pbuf_header_impl(struct pbuf *p, s16_t header_size_increment, u8_t force)$/;"	f	file:
pbuf_init	lwip/src/include/lwip/pbuf.h	270;"	d
pbuf_init_alloced_pbuf	lwip/src/core/pbuf.c	/^pbuf_init_alloced_pbuf(struct pbuf *p, void *payload, u16_t tot_len, u16_t len, pbuf_type type, u8_t flags)$/;"	f	file:
pbuf_layer	lwip/src/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon448
pbuf_match_allocsrc	lwip/src/include/lwip/pbuf.h	281;"	d
pbuf_match_type	lwip/src/include/lwip/pbuf.h	282;"	d
pbuf_memcmp	lwip/src/core/pbuf.c	/^pbuf_memcmp(const struct pbuf *p, u16_t offset, const void *s2, u16_t n)$/;"	f
pbuf_memfind	lwip/src/core/pbuf.c	/^pbuf_memfind(const struct pbuf *p, const void *mem, u16_t mem_len, u16_t start_offset)$/;"	f
pbuf_pool_is_empty	lwip/src/core/pbuf.c	/^pbuf_pool_is_empty(void)$/;"	f	file:
pbuf_put_at	lwip/src/core/pbuf.c	/^pbuf_put_at(struct pbuf *p, u16_t offset, u8_t data)$/;"	f
pbuf_realloc	lwip/src/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	lwip/src/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_remove_header	lwip/src/core/pbuf.c	/^pbuf_remove_header(struct pbuf *p, size_t header_size_decrement)$/;"	f
pbuf_rom	lwip/src/include/lwip/pbuf.h	/^struct pbuf_rom {$/;"	s
pbuf_skip	lwip/src/core/pbuf.c	/^pbuf_skip(struct pbuf *in, u16_t in_offset, u16_t *out_offset)$/;"	f
pbuf_skip_const	lwip/src/core/pbuf.c	/^pbuf_skip_const(const struct pbuf *in, u16_t in_offset, u16_t *out_offset)$/;"	f	file:
pbuf_split_64k	lwip/src/core/pbuf.c	/^void pbuf_split_64k(struct pbuf *p, struct pbuf **rest)$/;"	f
pbuf_strstr	lwip/src/core/pbuf.c	/^pbuf_strstr(const struct pbuf *p, const char *substr)$/;"	f
pbuf_take	lwip/src/core/pbuf.c	/^pbuf_take(struct pbuf *buf, const void *dataptr, u16_t len)$/;"	f
pbuf_take_at	lwip/src/core/pbuf.c	/^pbuf_take_at(struct pbuf *buf, const void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_try_get_at	lwip/src/core/pbuf.c	/^pbuf_try_get_at(const struct pbuf *p, u16_t offset)$/;"	f
pbuf_type	lwip/src/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon449
pc	lwip/src/include/lwip/ip4_frag.h	/^  struct pbuf_custom pc;$/;"	m	struct:pbuf_custom_ref	typeref:struct:pbuf_custom_ref::pbuf_custom
pc	lwip/src/include/lwip/ip6_frag.h	/^  struct pbuf_custom pc;$/;"	m	struct:pbuf_custom_ref	typeref:struct:pbuf_custom_ref::pbuf_custom
pc	lwip/src/include/lwip/priv/sockets_priv.h	/^    const void *pc;$/;"	m	union:lwip_setgetsockopt_data::__anon467
pcHead	amazon-freertos/freertos/queue.c	/^	int8_t *pcHead;					\/*< Points to the beginning of the queue storage area. *\/$/;"	m	struct:QueueDefinition	file:
pcInterruptPriorityRegisters	amazon-freertos/freertos/portable/port.c	/^	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * const ) portNVIC_IP_REGISTERS_OFFSET_16;$/;"	v	file:
pcName	amazon-freertos/include/task.h	/^	const char * const pcName;	\/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:xTASK_PARAMETERS
pcName	source/common.h	/^	const char pcName[configMAX_TASK_NAME_LEN]; \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:_TaskWork
pcQueueGetName	amazon-freertos/freertos/queue.c	/^	const char *pcQueueGetName( QueueHandle_t xQueue ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
pcQueueGetName	amazon-freertos/include/FreeRTOS.h	288;"	d
pcQueueGetName	amazon-freertos/include/mpu_wrappers.h	117;"	d
pcQueueGetQueueName	amazon-freertos/include/FreeRTOS.h	930;"	d
pcQueueName	amazon-freertos/freertos/queue.c	/^		const char *pcQueueName; \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:QUEUE_REGISTRY_ITEM	file:
pcReadFrom	amazon-freertos/freertos/queue.c	/^	int8_t *pcReadFrom;				\/*< Points to the last place that a queued item was read from when the structure is used as a queue. *\/$/;"	m	struct:QueuePointers	file:
pcTail	amazon-freertos/freertos/queue.c	/^	int8_t *pcTail;					\/*< Points to the byte at the end of the queue storage area.  Once more byte is allocated than necessary to store the queue items, this is used as a marker. *\/$/;"	m	struct:QueuePointers	file:
pcTaskGetName	amazon-freertos/freertos/tasks.c	/^char *pcTaskGetName( TaskHandle_t xTaskToQuery ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
pcTaskGetName	amazon-freertos/include/mpu_wrappers.h	67;"	d
pcTaskGetTaskName	amazon-freertos/include/FreeRTOS.h	928;"	d
pcTaskName	amazon-freertos/freertos/tasks.c	/^	char				pcTaskName[ configMAX_TASK_NAME_LEN ];\/*< Descriptive name given to the task when created.  Facilitates debugging only. *\/ \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:tskTaskControlBlock	file:
pcTaskName	amazon-freertos/include/task.h	/^	const char *pcTaskName;			\/* A pointer to the task's name.  This value will be invalid if the task was deleted since the structure was populated! *\/ \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:xTASK_STATUS
pcTimerGetName	amazon-freertos/freertos/timers.c	/^const char * pcTimerGetName( TimerHandle_t xTimer ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
pcTimerGetName	amazon-freertos/include/mpu_wrappers.h	128;"	d
pcTimerGetTimerName	amazon-freertos/include/FreeRTOS.h	929;"	d
pcTimerName	amazon-freertos/freertos/timers.c	/^	const char				*pcTimerName;		\/*<< Text name.  This is not used by the kernel, it is included simply to make debugging easier. *\/ \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:tmrTimerControl	file:
pcWriteTo	amazon-freertos/freertos/queue.c	/^	int8_t *pcWriteTo;				\/*< Points to the free next place in the storage area. *\/$/;"	m	struct:QueueDefinition	file:
pcache	littlefs/littlefs_include/lfs.h	/^    lfs_cache_t pcache;$/;"	m	struct:lfs
pcb	lwip/src/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon446
pcb	lwip/src/include/netif/ppp/fsm.h	/^    ppp_pcb *pcb;		\/* PPP Interface *\/$/;"	m	struct:fsm
pcb	lwip/src/include/netif/ppp/pppoe.h	/^  ppp_pcb *pcb;                \/* PPP PCB *\/$/;"	m	struct:pppoe_softc
pcb	lwip/src/netif/zepif.c	/^  struct udp_pcb *pcb;$/;"	m	struct:zepif_state	typeref:struct:zepif_state::udp_pcb	file:
pcb_allocated	lwip/src/include/lwip/dhcp.h	/^  u8_t pcb_allocated;$/;"	m	struct:dhcp
pcb_allocated	lwip/src/include/lwip/dhcp6.h	/^  u8_t pcb_allocated;$/;"	m	struct:dhcp6
pcb_idx	lwip/src/core/dns.c	/^  u8_t pcb_idx;$/;"	m	struct:dns_table_entry	file:
pcb_new	lwip/src/api/api_msg.c	/^pcb_new(struct api_msg *msg)$/;"	f	file:
pcbs	lwip/src/include/lwip/priv/tcp_priv.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pcomp	lwip/src/include/netif/ppp/pppos.h	/^  unsigned int pcomp           :1; \/* Does peer accept protocol compression? *\/$/;"	m	struct:pppos_pcb_s
pcpx	codec2/_kiss_fft_guts.h	149;"	d
pdBIG_ENDIAN	amazon-freertos/include/projdefs.h	118;"	d
pdFAIL	amazon-freertos/include/projdefs.h	48;"	d
pdFALSE	amazon-freertos/include/projdefs.h	44;"	d
pdFREERTOS_BIG_ENDIAN	amazon-freertos/include/projdefs.h	114;"	d
pdFREERTOS_ERRNO_EACCES	amazon-freertos/include/projdefs.h	79;"	d
pdFREERTOS_ERRNO_EADDRINUSE	amazon-freertos/include/projdefs.h	100;"	d
pdFREERTOS_ERRNO_EADDRNOTAVAIL	amazon-freertos/include/projdefs.h	104;"	d
pdFREERTOS_ERRNO_EAGAIN	amazon-freertos/include/projdefs.h	76;"	d
pdFREERTOS_ERRNO_EALREADY	amazon-freertos/include/projdefs.h	103;"	d
pdFREERTOS_ERRNO_EBADE	amazon-freertos/include/projdefs.h	92;"	d
pdFREERTOS_ERRNO_EBADF	amazon-freertos/include/projdefs.h	75;"	d
pdFREERTOS_ERRNO_EBUSY	amazon-freertos/include/projdefs.h	81;"	d
pdFREERTOS_ERRNO_ECANCELED	amazon-freertos/include/projdefs.h	109;"	d
pdFREERTOS_ERRNO_EEXIST	amazon-freertos/include/projdefs.h	82;"	d
pdFREERTOS_ERRNO_EFAULT	amazon-freertos/include/projdefs.h	80;"	d
pdFREERTOS_ERRNO_EFTYPE	amazon-freertos/include/projdefs.h	93;"	d
pdFREERTOS_ERRNO_EILSEQ	amazon-freertos/include/projdefs.h	108;"	d
pdFREERTOS_ERRNO_EINPROGRESS	amazon-freertos/include/projdefs.h	102;"	d
pdFREERTOS_ERRNO_EINTR	amazon-freertos/include/projdefs.h	72;"	d
pdFREERTOS_ERRNO_EINVAL	amazon-freertos/include/projdefs.h	87;"	d
pdFREERTOS_ERRNO_EIO	amazon-freertos/include/projdefs.h	73;"	d
pdFREERTOS_ERRNO_EISCONN	amazon-freertos/include/projdefs.h	105;"	d
pdFREERTOS_ERRNO_EISDIR	amazon-freertos/include/projdefs.h	86;"	d
pdFREERTOS_ERRNO_ENAMETOOLONG	amazon-freertos/include/projdefs.h	96;"	d
pdFREERTOS_ERRNO_ENMFILE	amazon-freertos/include/projdefs.h	94;"	d
pdFREERTOS_ERRNO_ENOBUFS	amazon-freertos/include/projdefs.h	98;"	d
pdFREERTOS_ERRNO_ENODEV	amazon-freertos/include/projdefs.h	84;"	d
pdFREERTOS_ERRNO_ENOENT	amazon-freertos/include/projdefs.h	71;"	d
pdFREERTOS_ERRNO_ENOMEDIUM	amazon-freertos/include/projdefs.h	107;"	d
pdFREERTOS_ERRNO_ENOMEM	amazon-freertos/include/projdefs.h	78;"	d
pdFREERTOS_ERRNO_ENOPROTOOPT	amazon-freertos/include/projdefs.h	99;"	d
pdFREERTOS_ERRNO_ENOSPC	amazon-freertos/include/projdefs.h	88;"	d
pdFREERTOS_ERRNO_ENOTCONN	amazon-freertos/include/projdefs.h	106;"	d
pdFREERTOS_ERRNO_ENOTDIR	amazon-freertos/include/projdefs.h	85;"	d
pdFREERTOS_ERRNO_ENOTEMPTY	amazon-freertos/include/projdefs.h	95;"	d
pdFREERTOS_ERRNO_ENXIO	amazon-freertos/include/projdefs.h	74;"	d
pdFREERTOS_ERRNO_EOPNOTSUPP	amazon-freertos/include/projdefs.h	97;"	d
pdFREERTOS_ERRNO_EROFS	amazon-freertos/include/projdefs.h	90;"	d
pdFREERTOS_ERRNO_ESPIPE	amazon-freertos/include/projdefs.h	89;"	d
pdFREERTOS_ERRNO_ETIMEDOUT	amazon-freertos/include/projdefs.h	101;"	d
pdFREERTOS_ERRNO_EUNATCH	amazon-freertos/include/projdefs.h	91;"	d
pdFREERTOS_ERRNO_EWOULDBLOCK	amazon-freertos/include/projdefs.h	77;"	d
pdFREERTOS_ERRNO_EXDEV	amazon-freertos/include/projdefs.h	83;"	d
pdFREERTOS_ERRNO_NONE	amazon-freertos/include/projdefs.h	70;"	d
pdFREERTOS_LITTLE_ENDIAN	amazon-freertos/include/projdefs.h	113;"	d
pdINTEGRITY_CHECK_VALUE	amazon-freertos/include/projdefs.h	63;"	d
pdINTEGRITY_CHECK_VALUE	amazon-freertos/include/projdefs.h	65;"	d
pdLITTLE_ENDIAN	amazon-freertos/include/projdefs.h	117;"	d
pdMS_TO_TICKS	amazon-freertos/include/projdefs.h	41;"	d
pdPASS	amazon-freertos/include/projdefs.h	47;"	d
pdTASK_CODE	amazon-freertos/include/FreeRTOS.h	936;"	d
pdTASK_HOOK_CODE	amazon-freertos/include/FreeRTOS.h	926;"	d
pdTRUE	amazon-freertos/include/projdefs.h	45;"	d
pd_bit_t	drivers/fsl_power.h	/^} pd_bit_t;$/;"	t	typeref:enum:pd_bits
pd_bits	drivers/fsl_power.h	/^typedef enum pd_bits$/;"	g
pdmData	drivers/fsl_i2s.h	/^    bool pdmData; \/*!< Data source is the D-Mic subsystem *\/$/;"	m	struct:_i2s_config
pdm_div_t	drivers/fsl_dmic.h	/^} pdm_div_t;$/;"	t	typeref:enum:__anon196
peer_authname	lwip/src/include/netif/ppp/ppp.h	/^  char peer_authname[MAXNAMELEN + 1]; \/* The name by which the peer authenticated itself to us. *\/$/;"	m	struct:ppp_pcb_s
peer_mru	lwip/src/include/netif/ppp/ppp.h	/^  u16_t peer_mru;                \/* currently negotiated peer MRU *\/$/;"	m	struct:ppp_pcb_s
peer_nr	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t peer_nr;               \/* NR from peer *\/$/;"	m	struct:pppol2tp_pcb_s
peer_ns	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t peer_ns;               \/* Expected NS from peer *\/$/;"	m	struct:pppol2tp_pcb_s
pend_q	lwip/src/netif/ppp/demand.c	/^struct packet *pend_q;$/;"	v	typeref:struct:packet
pend_qtail	lwip/src/netif/ppp/demand.c	/^struct packet *pend_qtail;$/;"	v	typeref:struct:packet
pending_err	lwip/src/include/lwip/api.h	/^  err_t pending_err;$/;"	m	struct:netconn
perPacketInfoLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t perPacketInfoLength;$/;"	m	struct:_rndis_packet_msg_struct
perPacketInfoOffset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t perPacketInfoOffset;$/;"	m	struct:_rndis_packet_msg_struct
performResetDoneFlag	usb/device/class/usb_device_msc.h	/^    uint8_t performResetDoneFlag; \/*!< Device has perform reset command *\/$/;"	m	struct:_usb_device_msc_struct
performResetRecover	usb/device/class/usb_device_msc.h	/^    uint8_t performResetRecover;  \/*!< Device need reset command from host*\/$/;"	m	struct:_usb_device_msc_struct
peripheralDeviceType	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t peripheralDeviceType; \/*!< Peripheral Device Type*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
persist	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  persist             :1;      \/* Persist mode, always try to open the connection *\/$/;"	m	struct:ppp_settings_s
persist_backoff	lwip/src/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	lwip/src/include/lwip/tcp.h	/^  u8_t persist_cnt;$/;"	m	struct:tcp_pcb
persist_probe	lwip/src/include/lwip/tcp.h	/^  u8_t persist_probe;$/;"	m	struct:tcp_pcb
pfAddDirtyPixel	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfAddDirtyPixel)    (DRIVER_CONTEXT * pContext, int x, int y);$/;"	m	struct:__anon301
pfAddDirtyPixelPhys	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfAddDirtyPixelPhys)(DRIVER_CONTEXT * pContext, int x, int y);$/;"	m	struct:__anon301
pfAddDirtyRect	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfAddDirtyRect)     (DRIVER_CONTEXT * pContext, int x0, int y0, int x1, int y1);$/;"	m	struct:__anon301
pfAddDirtyRectPhys	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfAddDirtyRectPhys) (DRIVER_CONTEXT * pContext, int x0, int y0, int x1, int y1);$/;"	m	struct:__anon301
pfAddHLine	emwin/emWin_header/GUI_Private.h	/^  tUSAGE_AddHLine         * pfAddHLine;$/;"	m	struct:tsUSAGE_APIList
pfAddKeyEx	emwin/emWin_header/EDIT_Private.h	/^  tEDIT_AddKeyEx     * pfAddKeyEx;      \/\/ Handle key input$/;"	m	struct:EDIT_Obj_struct
pfAddPixel	emwin/emWin_header/GUI_Private.h	/^  tUSAGE_AddPixel         * pfAddPixel;$/;"	m	struct:tsUSAGE_APIList
pfCalcPositions	emwin/emWin_header/SCROLLBAR_Private.h	/^  void (* pfCalcPositions)(SCROLLBAR_Handle hObj, SCROLLBAR_POSITIONS * pPos);$/;"	m	struct:SCROLLBAR_OBJ
pfCalcSizeOfChar	emwin/emWin_header/GUI_Type.h	/^  tGUI_CalcSizeOfChar * pfCalcSizeOfChar;$/;"	m	struct:__anon259
pfCheck	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void (* pfCheck)(GUI_DEVICE * pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfCheck	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  void (* pfCheck)(GUI_DEVICE * pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfCheck	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  void (* pfCheck)(GUI_DEVICE * pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfCheckBusy	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfCheckBusy)  (DRIVER_CONTEXT * pContext, U8 Mask);$/;"	m	struct:__anon303
pfClean	emwin/emWin_header/SEGGER.h	/^  void (*pfClean)     (void *p, unsigned NumBytes);   \/\/ Optional clean function for cached memory.$/;"	m	struct:__anon202
pfClear	emwin/emWin_header/GUI_Private.h	/^  tUSAGE_Clear            * pfClear;$/;"	m	struct:tsUSAGE_APIList
pfCloseFile	emwin/emWin_header/IP_FS.h	/^  int   (*pfCloseFile)            (void* hFile);$/;"	m	struct:__anon299
pfColor2Index	emwin/emWin_header/GUI_BMP_Private.h	/^  tLCDDEV_Color2Index * pfColor2Index;$/;"	m	struct:__anon330
pfColor2Index	emwin/emWin_header/LCD.h	/^  tLCDDEV_Color2Index  * pfColor2Index;$/;"	m	struct:__anon408
pfColor2IndexBulk	emwin/emWin_header/LCD.h	/^  tLCDDEV_Color2IndexBulk * pfColor2IndexBulk;$/;"	m	struct:__anon408
pfControlCache	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int           (* pfControlCache )(GUI_DEVICE *  _pDevice, int _Cmd);$/;"	m	struct:DRIVER_CONTEXT
pfControlCache	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int  (* pfControlCache)(GUI_DEVICE *  pDevice, int Cmd);$/;"	m	struct:DRIVER_CONTEXT
pfCreate	emwin/emWin_header/IP_FS.h	/^  void* (*pfCreate)               (const char* sFileName);$/;"	m	struct:__anon299
pfCreate	emwin/emWin_header/WIDGET.h	/^  WIDGET_CREATE * pfCreate;$/;"	m	struct:__anon210
pfCreateCompatible	emwin/emWin_header/GUI_Private.h	/^  tUSAGE_CreateCompatible * pfCreateCompatible;$/;"	m	struct:tsUSAGE_APIList
pfCreateIndirect	emwin/emWin_header/DIALOG_Intern.h	/^  GUI_WIDGET_CREATE_FUNC * pfCreateIndirect;$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
pfDMB	emwin/emWin_header/SEGGER.h	/^  void (*pfDMB)       (void);                         \/\/ Optional DMB function for Data Memory Barrier to make sure all memory operations are completed.$/;"	m	struct:__anon202
pfData	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  U8   (* pfData)       (U8 Data);$/;"	m	struct:__anon303
pfDelete	emwin/emWin_header/GUI_Private.h	/^  tUSAGE_Delete           * pfDelete;$/;"	m	struct:tsUSAGE_APIList
pfDeleteFile	emwin/emWin_header/IP_FS.h	/^  void* (*pfDeleteFile)           (const char* sFilename);$/;"	m	struct:__anon299
pfDispChar	emwin/emWin_header/GUI_Type.h	/^  GUI_DISPCHAR          * pfDispChar;$/;"	m	struct:tGUI_SIF_APIList_struct
pfDispChar	emwin/emWin_header/GUI_Type.h	/^  GUI_DISPCHAR          * pfDispChar;$/;"	m	struct:tGUI_XBF_APIList_struct
pfDispChar	emwin/emWin_header/GUI_Type.h	/^  GUI_DISPCHAR     * pfDispChar; $/;"	m	struct:GUI_FONT
pfDispLine	emwin/emWin_header/GUI_Type.h	/^  tGL_DispLine      * pfDispLine;$/;"	m	struct:__anon260
pfDraw	emwin/emWin_header/GUI_Type.h	/^  void      (* pfDraw)  (int x0,$/;"	m	struct:__anon242
pfDraw	emwin/emWin_header/LISTVIEW_Private.h	/^  void                      (* pfDraw)(LISTVIEW_Handle hObj, unsigned Column, unsigned Row, GUI_RECT * pRect);$/;"	m	struct:__anon332
pfDraw	emwin/emWin_header/WIDGET.h	/^    GUI_DRAW_SELF_CB* pfDraw;$/;"	m	union:GUI_DRAW::__anon214
pfDraw	emwin/emWin_header/WIDGET.h	/^  void (* pfDraw)    (GUI_DRAW_HANDLE hDrawObj, WM_HWIN hObj, int x, int y);$/;"	m	struct:__anon213
pfDrawBitmap	emwin/emWin_header/GUI.h	/^  void           (* pfDrawBitmap   )(GUI_DEVICE *  pDevice,  int x0, int y0, int xsize, int ysize, int BitsPerPixel, int BytesPerLine, const U8 * pData, int Diff, const LCD_PIXELINDEX * pTrans);$/;"	m	struct:GUI_DEVICE_API
pfDrawBitmap	emwin/emWin_header/GUI.h	/^  void           (* pfDrawBitmap   )(GUI_DEVICE * pDevice, int x0, int y0, int xsize, int ysize, int BitsPerPixel, int BytesPerLine, const U8 * pData, int Diff, const LCD_PIXELINDEX * pTrans);$/;"	m	struct:__anon398
pfDrawBitmap	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  void           (* pfDrawBitmap   )(GUI_DEVICE * pDevice, int x0, int y0, int xsize, int ysize, int _BitsPerPixel, int BytesPerLine, const U8 * pData, int Diff, const LCD_PIXELINDEX * pTrans);$/;"	m	struct:__anon370
pfDrawBitmap	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void          (* pfDrawBitmap   )(GUI_DEVICE *  _pDevice, int _x0, int _y0, int _xsize, int _ysize, int _BitsPerPixel, int _BytesPerLine, const U8 * _pData, int _Diff, const LCD_PIXELINDEX * _pTrans);$/;"	m	struct:DRIVER_CONTEXT
pfDrawBitmap	emwin/emWin_header/GUI_GCache_Private.h	/^  void           (* pfDrawBitmap   )(GUI_DEVICE *  pDevice,  int _x0, int _y0, int xsize, int ysize, int _BitsPerPixel, int _BytesPerLine, const U8 * pData, int Diff, const LCD_PIXELINDEX * pTrans);$/;"	m	struct:__anon239
pfDrawBitmap	emwin/emWin_header/LCD.h	/^  tLCD_DrawBitmap   * pfDrawBitmap;$/;"	m	struct:tLCD_APIList_struct
pfDrawBitmap	emwin/emWin_header/LCD_Protected.h	/^  tLCDDEV_DrawBitmap * pfDrawBitmap;$/;"	m	struct:__anon356
pfDrawDown	emwin/emWin_header/WIDGET.h	/^  void (* pfDrawDown)    (void);$/;"	m	struct:__anon211
pfDrawDownRect	emwin/emWin_header/WIDGET.h	/^  void (* pfDrawDownRect)(const GUI_RECT * pRect);$/;"	m	struct:__anon211
pfDrawFlat	emwin/emWin_header/WIDGET.h	/^  void (* pfDrawFlat)    (void);$/;"	m	struct:__anon211
pfDrawFlatRect	emwin/emWin_header/WIDGET.h	/^  void (* pfDrawFlatRect)(const GUI_RECT * pRect);$/;"	m	struct:__anon211
pfDrawHLine	emwin/emWin_header/GUI.h	/^  void           (* pfDrawHLine    )(GUI_DEVICE *  pDevice,  int x0, int y0,  int x1);$/;"	m	struct:GUI_DEVICE_API
pfDrawHLine	emwin/emWin_header/GUI.h	/^  void           (* pfDrawHLine    )(GUI_DEVICE * pDevice, int x0, int y0,  int x1);$/;"	m	struct:__anon398
pfDrawHLine	emwin/emWin_header/GUI_GCache_Private.h	/^  void           (* pfDrawHLine    )(GUI_DEVICE *  pDevice,  int _x0, int _y0, int _x1);$/;"	m	struct:__anon239
pfDrawHLine	emwin/emWin_header/LCD.h	/^  tLCD_HL_DrawHLine * pfDrawHLine;$/;"	m	struct:__anon421
pfDrawHLine	emwin/emWin_header/LCD_Protected.h	/^  tLCDDEV_DrawHLine  * pfDrawHLine;$/;"	m	struct:__anon356
pfDrawHW	emwin/emWin_header/GUI_Type.h	/^  void      (* pfDrawHW)(int x0,$/;"	m	struct:__anon242
pfDrawImage	emwin/emWin_header/ICONVIEW_Private.h	/^  tDrawImage        * pfDrawImage;$/;"	m	struct:__anon220
pfDrawImageAt	emwin/emWin_header/IMAGE_Private.h	/^  void             (* pfDrawImageAt) (IMAGE_Handle hObj, int xPos, int yPos);         \/\/ Object specific (Bitmap, BMP, GIF, JPEG, PNG) code$/;"	m	struct:__anon315
pfDrawItem	emwin/emWin_header/FRAMEWIN_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawItem;      \/\/ Only for drawing the title bar...$/;"	m	struct:__anon280
pfDrawItem	emwin/emWin_header/ICONVIEW_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawItem;$/;"	m	struct:__anon219
pfDrawItem	emwin/emWin_header/LISTBOX_Private.h	/^  WIDGET_DRAW_ITEM_FUNC* pfDrawItem;$/;"	m	struct:__anon313
pfDrawItem	emwin/emWin_header/LISTVIEW_Private.h	/^  WIDGET_DRAW_ITEM_FUNC *      pfDrawItem;$/;"	m	struct:LISTVIEW_Obj
pfDrawItem	emwin/emWin_header/SWIPELIST_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawItem;$/;"	m	struct:__anon238
pfDrawItem	emwin/emWin_header/TREEVIEW_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawItem;$/;"	m	struct:__anon227
pfDrawPixel	emwin/emWin_header/LCD.h	/^  tLCD_HL_DrawPixel * pfDrawPixel;$/;"	m	struct:__anon421
pfDrawPixel	emwin/emWin_header/LCD_Protected.h	/^  tLCDDEV_DrawPixel  * pfDrawPixel;$/;"	m	struct:__anon356
pfDrawSkin	emwin/emWin_header/BUTTON_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon400
pfDrawSkin	emwin/emWin_header/CHECKBOX_Private.h	/^  WIDGET_DRAW_ITEM_FUNC  * pfDrawSkin;$/;"	m	struct:__anon204
pfDrawSkin	emwin/emWin_header/DROPDOWN_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon358
pfDrawSkin	emwin/emWin_header/FRAMEWIN_Private.h	/^  WIDGET_DRAW_ITEM_FUNC  * pfDrawSkin;$/;"	m	struct:__anon278
pfDrawSkin	emwin/emWin_header/HEADER_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon274
pfDrawSkin	emwin/emWin_header/MENU_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon316
pfDrawSkin	emwin/emWin_header/MULTIPAGE_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon339
pfDrawSkin	emwin/emWin_header/PROGBAR_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon422
pfDrawSkin	emwin/emWin_header/RADIO_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon341
pfDrawSkin	emwin/emWin_header/SCROLLBAR_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon347
pfDrawSkin	emwin/emWin_header/SLIDER_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon376
pfDrawSkin	emwin/emWin_header/SPINBOX_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;$/;"	m	struct:__anon320
pfDrawText	emwin/emWin_header/ICONVIEW_Private.h	/^  tDrawText         * pfDrawText;$/;"	m	struct:__anon220
pfDrawTextItem	emwin/emWin_header/MULTIPAGE_Private.h	/^  void                (* pfDrawTextItem)(MULTIPAGE_Obj * pObj, const char * pText, unsigned Index, const GUI_RECT * pRect, int x0, int xSize, int ColorIndex);$/;"	m	struct:MULTIPAGE_Obj
pfDrawUp	emwin/emWin_header/WIDGET.h	/^  void (* pfDrawUp)      (void);$/;"	m	struct:__anon211
pfDrawUpRect	emwin/emWin_header/WIDGET.h	/^  void (* pfDrawUpRect)  (const GUI_RECT * pRect);$/;"	m	struct:__anon211
pfDrawVLine	emwin/emWin_header/GUI.h	/^  void           (* pfDrawVLine    )(GUI_DEVICE *  pDevice,  int x , int y0,  int y1);$/;"	m	struct:GUI_DEVICE_API
pfDrawVLine	emwin/emWin_header/GUI.h	/^  void           (* pfDrawVLine    )(GUI_DEVICE * pDevice, int x , int y0,  int y1);$/;"	m	struct:__anon398
pfDrawVLine	emwin/emWin_header/GUI_GCache_Private.h	/^  void           (* pfDrawVLine    )(GUI_DEVICE *  pDevice,  int _x , int _y0, int _y1);$/;"	m	struct:__anon239
pfDrawVLine	emwin/emWin_header/LCD_Protected.h	/^  tLCDDEV_DrawVLine  * pfDrawVLine;$/;"	m	struct:__anon356
pfEncode	emwin/emWin_header/GUI_Type.h	/^  tGUI_Encode         * pfEncode;$/;"	m	struct:__anon259
pfEnd	emwin/emWin_header/LCD.h	/^  void (* pfEnd)     (void);$/;"	m	struct:__anon420
pfFillRect	emwin/emWin_header/GUI.h	/^  void           (* pfFillRect     )(GUI_DEVICE *  pDevice,  int x0, int y0, int x1, int y1);$/;"	m	struct:GUI_DEVICE_API
pfFillRect	emwin/emWin_header/GUI.h	/^  void           (* pfFillRect     )(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1);$/;"	m	struct:__anon398
pfFillRect	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  void           (* pfFillRect     )(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1);$/;"	m	struct:__anon370
pfFillRect	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void          (* pfFillRect     )(GUI_DEVICE *  _pDevice, int _x0, int _y0, int _x1, int _y1);$/;"	m	struct:DRIVER_CONTEXT
pfFillRect	emwin/emWin_header/GUI_GCache_Private.h	/^  void           (* pfFillRect     )(GUI_DEVICE *  pDevice,  int _x0, int _y0, int _x1, int _y1);$/;"	m	struct:__anon239
pfFillRect	emwin/emWin_header/LCD_Protected.h	/^  tLCDDEV_FillRect   * pfFillRect;$/;"	m	struct:__anon356
pfFlush	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  void           (* pfFlush        )(GUI_DEVICE * pDevice);$/;"	m	struct:__anon370
pfFlush	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfFlush)            (DRIVER_CONTEXT * pContext);$/;"	m	struct:__anon301
pfFlush	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  void (* pfFlush)     (DRIVER_CONTEXT * pContext);$/;"	m	struct:__anon229
pfFlush	emwin/emWin_header/GUI_VNC.h	/^  int (* pfFlush)    (struct GUI_VNC_CONTEXT * pContext, BUFFER_CB * pBCB);$/;"	m	struct:GUI_VNC_CONTEXT
pfFlush	emwin/emWin_header/SEGGER.h	/^  void (*pfFlush)(SEGGER_SNPRINTF_CONTEXT *);         \/\/ Callback executed once the buffer is full. Callback decides if the buffer gets cleared to store more or not.$/;"	m	struct:SEGGER_SNPRINTF_CONTEXT_struct
pfFlushBuffer	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  void (* pfFlushBuffer)(DRIVER_CONTEXT * pContext);                                   \/\/ Sends remaining data of the write buffer to the controller$/;"	m	struct:__anon374
pfFlushBuffer	emwin/emWin_header/GUI_Type.h	/^  void (* pfFlushBuffer)(void);$/;"	m	struct:__anon272
pfForEachDirEntry	emwin/emWin_header/IP_FS.h	/^  void  (*pfForEachDirEntry)      (void* pContext, const char* sDir, void (*pf)(void*, void*));$/;"	m	struct:__anon299
pfFormatter	emwin/emWin_header/SEGGER.h	/^  SEGGER_pFormatter               pfFormatter;        \/\/ Formatter function.$/;"	m	struct:SEGGER_PRINTF_FORMATTER
pfGetBordersize	emwin/emWin_header/FRAMEWIN_Private.h	/^  unsigned              (* pfGetBordersize)(FRAMEWIN_Handle hObj, unsigned Index);$/;"	m	struct:__anon278
pfGetBusy	emwin/emWin_header/GUITDRV_ADS7846.h	/^  char     (* pfGetBusy)   (void);        \/\/ Retrieves the status of the busy line. 0: Not busy; 1: Busy$/;"	m	struct:__anon306
pfGetButtonSize	emwin/emWin_header/CHECKBOX_Private.h	/^  unsigned              (* pfGetButtonSize)(void);$/;"	m	struct:__anon204
pfGetButtonSize	emwin/emWin_header/RADIO_Private.h	/^  unsigned (* pfGetButtonSize)(RADIO_Handle hObj);$/;"	m	struct:__anon341
pfGetChallenge	emwin/emWin_header/GUI_VNC.h	/^  void (* pfGetChallenge)(U8 * pChallenge);$/;"	m	struct:__anon345
pfGetCharCode	emwin/emWin_header/GUI_Type.h	/^  tGUI_GetCharCode    * pfGetCharCode;$/;"	m	struct:__anon259
pfGetCharDistX	emwin/emWin_header/GUI_Type.h	/^  GUI_GETCHARDISTX      * pfGetCharDistX;$/;"	m	struct:tGUI_SIF_APIList_struct
pfGetCharDistX	emwin/emWin_header/GUI_Type.h	/^  GUI_GETCHARDISTX      * pfGetCharDistX;$/;"	m	struct:tGUI_XBF_APIList_struct
pfGetCharDistX	emwin/emWin_header/GUI_Type.h	/^  GUI_GETCHARDISTX * pfGetCharDistX; $/;"	m	struct:GUI_FONT
pfGetCharInfo	emwin/emWin_header/GUI_Type.h	/^  GUI_GETCHARINFO       * pfGetCharInfo;$/;"	m	struct:tGUI_SIF_APIList_struct
pfGetCharInfo	emwin/emWin_header/GUI_Type.h	/^  GUI_GETCHARINFO       * pfGetCharInfo;$/;"	m	struct:tGUI_XBF_APIList_struct
pfGetCharInfo	emwin/emWin_header/GUI_Type.h	/^  GUI_GETCHARINFO  * pfGetCharInfo;$/;"	m	struct:GUI_FONT
pfGetCharSize	emwin/emWin_header/GUI_Type.h	/^  tGUI_GetCharSize    * pfGetCharSize;$/;"	m	struct:__anon259
pfGetData	emwin/emWin_header/CHOOSEFILE.h	/^  int            (* pfGetData)(CHOOSEFILE_INFO * pInfo); \/\/ Pointer to GetData() function$/;"	m	struct:CHOOSEFILE_INFO
pfGetData	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  U8   (* pfGetData)    (DRIVER_CONTEXT * pContext, U32 Off);$/;"	m	struct:__anon303
pfGetData	emwin/emWin_header/GUI_BMP_Private.h	/^  GUI_GET_DATA_FUNC * pfGetData; \/\/ Function pointer$/;"	m	struct:__anon329
pfGetData	emwin/emWin_header/GUI_GIF_Private.h	/^  GUI_GET_DATA_FUNC * pfGetData;            \/* Function pointer *\/$/;"	m	struct:__anon323
pfGetData	emwin/emWin_header/GUI_JPEG_Private.h	/^  GUI_GET_DATA_FUNC * pfGetData; \/\/ 'GetData' Function pointer$/;"	m	struct:GUI_JPEG_DCONTEXT
pfGetData	emwin/emWin_header/GUI_Type.h	/^  GUI_XBF_GET_DATA_FUNC * pfGetData; \/* Pointer to callback function *\/$/;"	m	struct:__anon266
pfGetData	emwin/emWin_header/ICONVIEW_Private.h	/^  GUI_GET_DATA_FUNC * pfGetData;$/;"	m	struct:__anon220
pfGetData	emwin/emWin_header/IMAGE_Private.h	/^  GUI_GET_DATA_FUNC * pfGetData;    \/\/ Pointer to GetData() function$/;"	m	struct:__anon315
pfGetDevData	emwin/emWin_header/GUI.h	/^  void          *(* pfGetDevData   )(GUI_DEVICE *  pDevice,  int Index);$/;"	m	struct:GUI_DEVICE_API
pfGetDevData	emwin/emWin_header/GUI_GCache_Private.h	/^  void          *(* pfGetDevData   )(GUI_DEVICE *  pDevice,  int Index);$/;"	m	struct:__anon239
pfGetDevProp	emwin/emWin_header/GUI.h	/^  I32            (* pfGetDevProp   )(GUI_DEVICE *  pDevice,  int Index);$/;"	m	struct:GUI_DEVICE_API
pfGetDevProp	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  I32            (* pfGetDevProp   )(GUI_DEVICE * pDevice, int Index);$/;"	m	struct:__anon370
pfGetDirEntryAttributes	emwin/emWin_header/IP_FS.h	/^  int   (*pfGetDirEntryAttributes)(void* pFileEntry);$/;"	m	struct:__anon299
pfGetDirEntryFileName	emwin/emWin_header/IP_FS.h	/^  void  (*pfGetDirEntryFileName)  (void* pFileEntry, char* sFileName, U32 SizeOfBuffer);$/;"	m	struct:__anon299
pfGetDirEntryFileSize	emwin/emWin_header/IP_FS.h	/^  U32   (*pfGetDirEntryFileSize)  (void* pFileEntry, U32* pFileSizeHigh);$/;"	m	struct:__anon299
pfGetDirEntryFileTime	emwin/emWin_header/IP_FS.h	/^  U32   (*pfGetDirEntryFileTime)  (void* pFileEntry);$/;"	m	struct:__anon299
pfGetFontInfo	emwin/emWin_header/GUI_Type.h	/^  GUI_GETFONTINFO       * pfGetFontInfo;$/;"	m	struct:tGUI_SIF_APIList_struct
pfGetFontInfo	emwin/emWin_header/GUI_Type.h	/^  GUI_GETFONTINFO       * pfGetFontInfo;$/;"	m	struct:tGUI_XBF_APIList_struct
pfGetFontInfo	emwin/emWin_header/GUI_Type.h	/^  GUI_GETFONTINFO  * pfGetFontInfo; $/;"	m	struct:GUI_FONT
pfGetImageSize	emwin/emWin_header/IMAGE_Private.h	/^  void             (* pfGetImageSize)(IMAGE_Handle hObj, int * pxSize, int * pySize); \/\/ Returns the image size of the attached item$/;"	m	struct:__anon315
pfGetImageSizes	emwin/emWin_header/ICONVIEW_Private.h	/^  tGetImageSizes    * pfGetImageSizes;$/;"	m	struct:__anon220
pfGetIndexMask	emwin/emWin_header/LCD.h	/^  tLCDDEV_GetIndexMask * pfGetIndexMask;$/;"	m	struct:__anon408
pfGetLen	emwin/emWin_header/IP_FS.h	/^  long  (*pfGetLen)               (void* hFile);$/;"	m	struct:__anon299
pfGetLineDistX	emwin/emWin_header/GUI_Type.h	/^  tGUI_GetLineDistX * pfGetLineDistX;$/;"	m	struct:__anon260
pfGetLineLen	emwin/emWin_header/GUI_Type.h	/^  tGUI_GetLineLen   * pfGetLineLen;$/;"	m	struct:__anon260
pfGetNextDirty	emwin/emWin_header/GUI_Private.h	/^  tUSAGE_GetNextDirty     * pfGetNextDirty;$/;"	m	struct:tsUSAGE_APIList
pfGetPENIRQ	emwin/emWin_header/GUITDRV_ADS7846.h	/^  char     (* pfGetPENIRQ) (void);        \/\/ Retrieves the status of the PENIRQ line to detect a touch event.$/;"	m	struct:__anon306
pfGetPixelIndex	emwin/emWin_header/GUI.h	/^  LCD_PIXELINDEX (* pfGetPixelIndex)(GUI_DEVICE *  pDevice,  int x, int y);$/;"	m	struct:GUI_DEVICE_API
pfGetPixelIndex	emwin/emWin_header/GUI.h	/^  LCD_PIXELINDEX (* pfGetPixelIndex)(GUI_DEVICE * pDevice, int x, int y);$/;"	m	struct:__anon398
pfGetPixelIndex	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  LCD_PIXELINDEX (* pfGetPixelIndex)(GUI_DEVICE * pDevice, int x, int y);$/;"	m	struct:__anon370
pfGetPixelIndex	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  LCD_PIXELINDEX(* pfGetPixelIndex)(GUI_DEVICE *  _pDevice, int _x, int _y);$/;"	m	struct:DRIVER_CONTEXT
pfGetPixelIndex	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  LCD_PIXELINDEX (* pfGetPixelIndex)    (DRIVER_CONTEXT * pContext, int x, int y);$/;"	m	struct:__anon301
pfGetPixelIndex	emwin/emWin_header/GUI_GCache_Private.h	/^  LCD_PIXELINDEX (* pfGetPixelIndex)(GUI_DEVICE *  pDevice,  int _x, int _y);$/;"	m	struct:__anon239
pfGetPixelIndexPhys	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  LCD_PIXELINDEX (* pfGetPixelIndexPhys)(DRIVER_CONTEXT * pContext, int x, int y);$/;"	m	struct:__anon301
pfGetRect	emwin/emWin_header/GUI.h	/^  void           (* pfGetRect      )(GUI_DEVICE *  pDevice,  LCD_RECT * pRect);$/;"	m	struct:GUI_DEVICE_API
pfGetResponse	emwin/emWin_header/GUI_VNC.h	/^  void (* pfGetResponse )(U8 * pResponse );$/;"	m	struct:__anon345
pfGetResult	emwin/emWin_header/GUITDRV_ADS7846.h	/^  U16      (* pfGetResult) (void);        \/\/ Retrieves the result of the AD conversion. 4 dummy bytes have to be shifted out to the left.$/;"	m	struct:__anon306
pfGetTabBarWidth	emwin/emWin_header/MULTIPAGE_Private.h	/^  int                    (* pfGetTabBarWidth)(MULTIPAGE_Handle hObj);$/;"	m	struct:__anon340
pfGetTouchedPage	emwin/emWin_header/MULTIPAGE_Private.h	/^  int                    (* pfGetTouchedPage)(MULTIPAGE_Handle hObj, int x, int y);$/;"	m	struct:__anon340
pfGetU8	emwin/emWin_header/GUI_JPEG_Private.h	/^  int (* pfGetU8)(GUI_JPEG_DCONTEXT * pContext, U8 * pByte);$/;"	m	struct:GUI_JPEG_DCONTEXT
pfGetXSize	emwin/emWin_header/WIDGET.h	/^  int  (* pfGetXSize)(GUI_DRAW_HANDLE hDrawObj);$/;"	m	struct:__anon213
pfGetYSize	emwin/emWin_header/WIDGET.h	/^  int  (* pfGetYSize)(GUI_DRAW_HANDLE hDrawObj);$/;"	m	struct:__anon213
pfIndex2Color	emwin/emWin_header/GUI_BMP_Private.h	/^  tLCDDEV_Index2Color * pfIndex2Color;  \/\/ Used to manage bitfield conversion$/;"	m	struct:__anon330
pfIndex2Color	emwin/emWin_header/GUI_Type.h	/^  GUI_COLOR (* pfIndex2Color)(LCD_PIXELINDEX Index);$/;"	m	struct:__anon242
pfIndex2Color	emwin/emWin_header/LCD.h	/^  tLCDDEV_Index2Color  * pfIndex2Color;$/;"	m	struct:__anon408
pfIndex2ColorBulk	emwin/emWin_header/LCD.h	/^  tLCDDEV_Index2ColorBulk * pfIndex2ColorBulk;$/;"	m	struct:__anon408
pfInit	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  void           (* pfInit)         (GUI_DEVICE * pDevice);$/;"	m	struct:__anon370
pfInit	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void (* pfInit) (GUI_DEVICE * pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfInit	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfInit)(GUI_DEVICE * pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfInit	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  void (* pfInit)(GUI_DEVICE * pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfInit	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  void (* pfInit) (GUI_DEVICE * pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfInit	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  void (* pfInit) (GUI_DEVICE * pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfInvalidate	emwin/emWin_header/SEGGER.h	/^  void (*pfInvalidate)(void *p, unsigned NumBytes);   \/\/ Optional invalidate function for cached memory.$/;"	m	struct:__anon202
pfInvalidateNewItem	emwin/emWin_header/GRAPH_Private.h	/^  void         (* pfInvalidateNewItem)(GRAPH_DATA_OBJ * pDataObj); \/* Pointer to a function which can be used for invalidating the required area *\/$/;"	m	struct:GRAPH_DATA_OBJ
pfIsFolder	emwin/emWin_header/IP_FS.h	/^  int   (*pfIsFolder)             (const char* sPath);$/;"	m	struct:__anon299
pfIsInFont	emwin/emWin_header/GUI_Type.h	/^  GUI_ISINFONT          * pfIsInFont;$/;"	m	struct:tGUI_SIF_APIList_struct
pfIsInFont	emwin/emWin_header/GUI_Type.h	/^  GUI_ISINFONT          * pfIsInFont;$/;"	m	struct:tGUI_XBF_APIList_struct
pfIsInFont	emwin/emWin_header/GUI_Type.h	/^  GUI_ISINFONT     * pfIsInFont;$/;"	m	struct:GUI_FONT
pfLog2Phys	emwin/emWin_header/GUI_SetOrientation.h	/^  void (* pfLog2Phys)(DRIVER_CONTEXT * pContext, int x, int y, int * px_phys, int * py_phys);$/;"	m	struct:DRIVER_CONTEXT
pfLog2PhysX	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int  (* pfLog2PhysX)(DRIVER_CONTEXT * _pContext, int _x, int _y);$/;"	m	struct:DRIVER_CONTEXT
pfLog2PhysY	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int  (* pfLog2PhysY)(DRIVER_CONTEXT * _pContext, int _x, int _y);$/;"	m	struct:DRIVER_CONTEXT
pfMKDir	emwin/emWin_header/IP_FS.h	/^  int   (*pfMKDir)                (const char* sDirName);$/;"	m	struct:__anon299
pfManagePixel	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfManagePixel)      (DRIVER_CONTEXT * pContext, int * px, int * py);$/;"	m	struct:__anon301
pfManageRect	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfManageRect)       (DRIVER_CONTEXT * pContext, int * px0, int * py0, int * px1, int * py1);$/;"	m	struct:__anon301
pfMove	emwin/emWin_header/IP_FS.h	/^  int   (*pfMove)                 (const char* sOldFilename, const char* sNewFilename);$/;"	m	struct:__anon299
pfNextLine	emwin/emWin_header/LCD.h	/^  void (* pfNextLine)(void);$/;"	m	struct:__anon420
pfOnDelete	emwin/emWin_header/GRAPH_Private.h	/^  void    (* pfOnDelete) (WM_HMEM hObj);                          \/* Pointer to delete function *\/$/;"	m	struct:GRAPH_PAINT_OBJ
pfOnPaint	emwin/emWin_header/GRAPH_Private.h	/^  void    (* pfOnPaint)  (WM_HMEM hObj, GUI_RECT * pRectInvalid); \/* Pointer to paint function *\/ $/;"	m	struct:GRAPH_PAINT_OBJ
pfOnTimer	emwin/emWin_header/IMAGE_Private.h	/^  void             (* pfOnTimer)     (IMAGE_Handle hObj);                             \/\/ Timer function for animated images (currently only animated GIFs are supported)$/;"	m	struct:__anon315
pfOpenFile	emwin/emWin_header/IP_FS.h	/^  void* (*pfOpenFile)             (const char* sFilename);$/;"	m	struct:__anon299
pfOwnerDraw	emwin/emWin_header/LISTWHEEL_Private.h	/^  WIDGET_DRAW_ITEM_FUNC * pfOwnerDraw;$/;"	m	struct:__anon353
pfPaint	emwin/emWin_header/IMAGE_Private.h	/^  void             (* pfPaint)       (IMAGE_Handle hObj);                             \/\/ Drawing method specific (Default, Tiled, Magnified) code$/;"	m	struct:__anon315
pfPaint	emwin/emWin_header/WIDGET.h	/^  WIDGET_PAINT  * pfPaint;$/;"	m	struct:__anon210
pfPrintInt	emwin/emWin_header/SEGGER.h	/^  int  (*pfPrintInt)        (SEGGER_BUFFER_DESC* pBufferDesc, SEGGER_SNPRINTF_CONTEXT* pContext, I32 v, unsigned Base, char Flags, int Width, int Precision);$/;"	m	struct:__anon203
pfPrintUnsigned	emwin/emWin_header/SEGGER.h	/^  int  (*pfPrintUnsigned)   (SEGGER_BUFFER_DESC* pBufferDesc, SEGGER_SNPRINTF_CONTEXT* pContext, U32 v, unsigned Base, char Flags, int Width, int Precision);$/;"	m	struct:__anon203
pfPutData	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfPutData)    (DRIVER_CONTEXT * pContext, U32 Off, U8 Data);$/;"	m	struct:__anon303
pfRMDir	emwin/emWin_header/IP_FS.h	/^  int   (*pfRMDir)                (const char* sDirName);$/;"	m	struct:__anon299
pfRead	emwin/emWin_header/GUI_VNC.h	/^  int (* pfRead)     (struct GUI_VNC_CONTEXT * pContext, U8 *, int Len);$/;"	m	struct:GUI_VNC_CONTEXT
pfRead16_A0	emwin/emWin_header/GUI_Type.h	/^  U16  (* pfRead16_A0)  (void);$/;"	m	struct:__anon272
pfRead16_A1	emwin/emWin_header/GUI_Type.h	/^  U16  (* pfRead16_A1)  (void);$/;"	m	struct:__anon272
pfRead32_A0	emwin/emWin_header/GUI_Type.h	/^  U32  (* pfRead32_A0)  (void);$/;"	m	struct:__anon272
pfRead32_A1	emwin/emWin_header/GUI_Type.h	/^  U32  (* pfRead32_A1)  (void);$/;"	m	struct:__anon272
pfRead8	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  U8   (* pfRead8)     (DRIVER_CONTEXT * pContext, U32 Addr);$/;"	m	struct:__anon229
pfRead8_A0	emwin/emWin_header/GUI_Type.h	/^  U8   (* pfRead8_A0)   (void);$/;"	m	struct:__anon272
pfRead8_A1	emwin/emWin_header/GUI_Type.h	/^  U8   (* pfRead8_A1)   (void);$/;"	m	struct:__anon272
pfReadAt	emwin/emWin_header/IP_FS.h	/^  int   (*pfReadAt)               (void* hFile, void* pBuffer, U32 Pos, U32 NumBytes);$/;"	m	struct:__anon299
pfReadData	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U32  (* pfReadData)     (DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfReadData	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  U8   (* pfReadData) (U8 * pData);$/;"	m	struct:DRIVER_CONTEXT
pfReadDataM_8	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U8 * (* pfReadDataM_8)  (DRIVER_CONTEXT * pContext, U32 Addr, U8 * pData, U32 NumItems);$/;"	m	struct:__anon368
pfReadData_8	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U8   (* pfReadData_8)   (DRIVER_CONTEXT * pContext, U32 Addr);$/;"	m	struct:__anon368
pfReadM16_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfReadM16_A0) (U16 * pData, int NumItems);$/;"	m	struct:__anon272
pfReadM16_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfReadM16_A1) (U16 * pData, int NumItems);$/;"	m	struct:__anon272
pfReadM32_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfReadM32_A0) (U32 * pData, int NumItems);$/;"	m	struct:__anon272
pfReadM32_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfReadM32_A1) (U32 * pData, int NumItems);$/;"	m	struct:__anon272
pfReadM8_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfReadM8_A0)  (U8 * pData, int NumItems);$/;"	m	struct:__anon272
pfReadM8_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfReadM8_A1)  (U8 * pData, int NumItems);$/;"	m	struct:__anon272
pfReadMPixelCust_16bpp	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void(* pfReadMPixelCust_16bpp)(int LayerIndex, U16 * pBuffer, U32 NumPixels);$/;"	m	struct:DRIVER_CONTEXT
pfReadMPixelCust_18bpp	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void(* pfReadMPixelCust_18bpp)(int LayerIndex, U32 * pBuffer, U32 NumPixels);$/;"	m	struct:DRIVER_CONTEXT
pfReadPixelCust_16bpp	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U16 (* pfReadPixelCust_16bpp) (int LayerIndex);$/;"	m	struct:DRIVER_CONTEXT
pfReadPixelCust_18bpp	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U32 (* pfReadPixelCust_18bpp) (int LayerIndex);$/;"	m	struct:DRIVER_CONTEXT
pfReadPixel_16bpp_B16	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U16  (* pfReadPixel_16bpp_B16)(DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfReadPixel_16bpp_B8	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U16  (* pfReadPixel_16bpp_B8) (DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfReadPixel_18bpp_B18	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U32  (* pfReadPixel_18bpp_B18)(DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfReadPixel_18bpp_B9	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U32  (* pfReadPixel_18bpp_B9) (DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfReadPixel_32bpp_B8	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U32  (* pfReadPixel_32bpp_B8) (DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfReadRect	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfReadRect)(void);$/;"	m	struct:DRIVER_CONTEXT
pfReadRect	emwin/emWin_header/GUI_GCache_Private.h	/^  void (* pfReadRect)     (GUI_DEVICE * pDevice, int _x0, int _y0, int _x1, int _y1, LCD_PIXELINDEX * pBuffer);$/;"	m	struct:__anon239
pfReadRect_16bpp_B16	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfReadRect_16bpp_B16) (GUI_DEVICE * _pDevice, int _x0, int _y0, int _x1, int _y1, U16 * _pBuffer);$/;"	m	struct:DRIVER_CONTEXT
pfReadRect_16bpp_B8	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfReadRect_16bpp_B8)  (GUI_DEVICE * _pDevice, int _x0, int _y0, int _x1, int _y1, U16 * _pBuffer);$/;"	m	struct:DRIVER_CONTEXT
pfReadRect_18bpp_B18	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfReadRect_18bpp_B18) (GUI_DEVICE * _pDevice, int _x0, int _y0, int _x1, int _y1, U32 * _pBuffer);$/;"	m	struct:DRIVER_CONTEXT
pfReadRect_18bpp_B9	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfReadRect_18bpp_B9)  (GUI_DEVICE * _pDevice, int _x0, int _y0, int _x1, int _y1, U32 * _pBuffer);$/;"	m	struct:DRIVER_CONTEXT
pfReadRect_32bpp_B8	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfReadRect_32bpp_B8)  (GUI_DEVICE * _pDevice, int _x0, int _y0, int _x1, int _y1, U32 * _pBuffer);$/;"	m	struct:DRIVER_CONTEXT
pfReadReg	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  U16  (* pfReadReg)     (DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfReadReg	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  U16  (* pfReadReg)      (DRIVER_CONTEXT * pContext, U32 Addr);$/;"	m	struct:__anon368
pfReadVMEM	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  U8   (* pfReadVMEM )  (DRIVER_CONTEXT * pContext, U32 Off);$/;"	m	struct:__anon303
pfReadVMem	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  U8   (* pfReadVMem) (DRIVER_CONTEXT * pContext, int Column, int Page);$/;"	m	struct:DRIVER_CONTEXT
pfReceive	emwin/emWin_header/GUI_VNC.h	/^  GUI_tRecv    pfReceive;$/;"	m	struct:GUI_VNC_CONTEXT
pfRect2TextRect	emwin/emWin_header/LCD.h	/^  tRect2TextRect    * pfRect2TextRect;$/;"	m	struct:tLCD_APIList_struct
pfRefresh	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void          (* pfRefresh      )(GUI_DEVICE *  _pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfRefresh	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfRefresh     )(GUI_DEVICE *  pDevice);$/;"	m	struct:DRIVER_CONTEXT
pfRenameFile	emwin/emWin_header/IP_FS.h	/^  int   (*pfRenameFile)           (const char* sOldFilename, const char* sNewFilename);$/;"	m	struct:__anon299
pfSend	emwin/emWin_header/GUI_VNC.h	/^  GUI_tSend    pfSend;$/;"	m	struct:GUI_VNC_CONTEXT
pfSendCache	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfSendCache)  (DRIVER_CONTEXT * pContext, int x0, int y0, int x1, int y1);$/;"	m	struct:__anon303
pfSendCacheRect	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  void           (* pfSendCacheRect)(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1);$/;"	m	struct:__anon370
pfSendCacheRect	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfSendCacheRect)(DRIVER_CONTEXT * _pContext, int _x0, int _y0, int _x1, int _y1);$/;"	m	struct:DRIVER_CONTEXT
pfSendCacheRect	emwin/emWin_header/GUI_GCache_Private.h	/^  void (* pfSendCacheRect)(GUI_DEVICE * pDevice);$/;"	m	struct:__anon239
pfSendCmd	emwin/emWin_header/GUITDRV_ADS7846.h	/^  void     (* pfSendCmd)   (U8 Data);     \/\/ Sends a 8-bit command to the peripheral$/;"	m	struct:__anon306
pfSetADDR	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfSetADDR)    (DRIVER_CONTEXT * pContext, U32 Off);$/;"	m	struct:__anon303
pfSetAddr	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  void (* pfSetAddr)   (DRIVER_CONTEXT * pContext, U32 Addr);$/;"	m	struct:__anon229
pfSetAddrR	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  void (* pfSetAddrR)   (DRIVER_CONTEXT * pContext, int x, int y);                     \/\/ Sets the address to be read$/;"	m	struct:__anon374
pfSetAddrR	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  void (* pfSetAddrR) (DRIVER_CONTEXT * pContext, int Column, int Page);$/;"	m	struct:DRIVER_CONTEXT
pfSetAddrW	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  void (* pfSetAddrW)   (DRIVER_CONTEXT * pContext, int x, int y);                     \/\/ Sets the address to be written$/;"	m	struct:__anon374
pfSetAddrW	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  void (* pfSetAddrW) (DRIVER_CONTEXT * pContext, int Column, int Page);$/;"	m	struct:DRIVER_CONTEXT
pfSetBkColor	emwin/emWin_header/GUI_Private.h	/^  void         (* pfSetBkColor) (LCD_COLOR Index);$/;"	m	struct:__anon296
pfSetCS	emwin/emWin_header/GUITDRV_ADS7846.h	/^  void     (* pfSetCS)     (char OnOff);  \/\/ Set chip select line. OnOff == 1 means peripheral selected$/;"	m	struct:__anon306
pfSetCS	emwin/emWin_header/GUI_Type.h	/^  void (* pfSetCS)      (U8 NotActive);$/;"	m	struct:__anon272
pfSetColor	emwin/emWin_header/GUI_Private.h	/^  void         (* pfSetColor)   (LCD_COLOR Index);$/;"	m	struct:__anon296
pfSetDrawMode	emwin/emWin_header/GUI_Private.h	/^  LCD_DRAWMODE (* pfSetDrawMode)(LCD_DRAWMODE dm);$/;"	m	struct:__anon296
pfSetInterface	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfSetInterface)(DRIVER_CONTEXT * _pContext, int _BusWidth);$/;"	m	struct:DRIVER_CONTEXT
pfSetLog2Phys	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfSetLog2Phys)(DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfSetOrg	emwin/emWin_header/GUI.h	/^  void           (* pfSetOrg       )(GUI_DEVICE *  pDevice,  int x, int y);$/;"	m	struct:GUI_DEVICE_API
pfSetOrg	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfSetOrg)     (DRIVER_CONTEXT * pContext);$/;"	m	struct:__anon303
pfSetOrientation	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfSetOrientation)     (DRIVER_CONTEXT * _pContext);$/;"	m	struct:DRIVER_CONTEXT
pfSetPhysRAMAddr	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfSetPhysRAMAddr)     (DRIVER_CONTEXT * _pContext, int _x, int _y);$/;"	m	struct:DRIVER_CONTEXT
pfSetPixel	emwin/emWin_header/LCD.h	/^  void (* pfSetPixel)(LCD_PIXELINDEX PixelIndex);$/;"	m	struct:__anon420
pfSetPixelIndex	emwin/emWin_header/GUI.h	/^  void           (* pfSetPixelIndex)(GUI_DEVICE *  pDevice,  int x, int y, LCD_PIXELINDEX ColorIndex);$/;"	m	struct:GUI_DEVICE_API
pfSetPixelIndex	emwin/emWin_header/GUI.h	/^  void           (* pfSetPixelIndex)(GUI_DEVICE * pDevice, int x, int y, LCD_PIXELINDEX ColorIndex);$/;"	m	struct:__anon398
pfSetPixelIndex	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  void           (* pfSetPixelIndex)(GUI_DEVICE * pDevice, int x, int y, LCD_PIXELINDEX ColorIndex);$/;"	m	struct:__anon370
pfSetPixelIndex	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void          (* pfSetPixelIndex)(GUI_DEVICE *  _pDevice, int _x, int _y, LCD_PIXELINDEX _ColorIndex);$/;"	m	struct:DRIVER_CONTEXT
pfSetPixelIndex	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfSetPixelIndex)    (DRIVER_CONTEXT * pContext, int x, int y, LCD_PIXELINDEX ColorIndex);$/;"	m	struct:__anon301
pfSetPixelIndex	emwin/emWin_header/GUI_GCache_Private.h	/^  void           (* pfSetPixelIndex)(GUI_DEVICE *  pDevice,  int _x, int _y, LCD_PIXELINDEX ColorIndex);$/;"	m	struct:__anon239
pfSetPixelIndexPhys	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfSetPixelIndexPhys)(DRIVER_CONTEXT * pContext, int x, int y, LCD_PIXELINDEX ColorIndex);$/;"	m	struct:__anon301
pfSetReadMode	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfSetReadMode)(DRIVER_CONTEXT * _pContext, int OnOff, int SetCursor);$/;"	m	struct:DRIVER_CONTEXT
pfSetRect	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  void           (* pfSetRect      )(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1, int OnOff);$/;"	m	struct:__anon370
pfSetRect	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfSetRect)            (DRIVER_CONTEXT * _pContext, int _x0, int _y0, int _x1, int _y1);$/;"	m	struct:DRIVER_CONTEXT
pfSetRectR	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  void (* pfSetRectR)   (DRIVER_CONTEXT * pContext, int x0, int y0, int x1, int y1);   \/\/ Sets the rectangular area to be read$/;"	m	struct:__anon374
pfSetRectW	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  void (* pfSetRectW)   (DRIVER_CONTEXT * pContext, int x0, int y0, int x1, int y1);   \/\/ Sets the rectangular area to be written$/;"	m	struct:__anon374
pfSetReg	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfSetReg)      (DRIVER_CONTEXT * _pContext, U16 _Data);$/;"	m	struct:DRIVER_CONTEXT
pfSetWriteC	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfSetWriteC)  (DRIVER_CONTEXT * pContext);$/;"	m	struct:__anon303
pfSetWriteNC	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfSetWriteNC) (DRIVER_CONTEXT * pContext);$/;"	m	struct:__anon303
pfStart	emwin/emWin_header/LCD.h	/^  int  (* pfStart)   (int x0, int y0, int x1, int y1);$/;"	m	struct:__anon420
pfStoreChar	emwin/emWin_header/SEGGER.h	/^  void (*pfStoreChar)       (SEGGER_BUFFER_DESC* pBufferDesc, SEGGER_SNPRINTF_CONTEXT* pContext, char c);$/;"	m	struct:__anon203
pfStoreData	emwin/emWin_header/GUI_VNC.h	/^  int (* pfStoreData)(struct GUI_VNC_CONTEXT * pContext, BUFFER_CB * pBCB, const U8 * pData, int NumBytes);$/;"	m	struct:GUI_VNC_CONTEXT
pfStoreU16	emwin/emWin_header/GUI_VNC.h	/^  int (* pfStoreU16) (struct GUI_VNC_CONTEXT * pContext, BUFFER_CB * pBCB, U16 Data);$/;"	m	struct:GUI_VNC_CONTEXT
pfStoreU32	emwin/emWin_header/GUI_VNC.h	/^  int (* pfStoreU32) (struct GUI_VNC_CONTEXT * pContext, BUFFER_CB * pBCB, U32 Data);$/;"	m	struct:GUI_VNC_CONTEXT
pfStoreU8	emwin/emWin_header/GUI_VNC.h	/^  int (* pfStoreU8)  (struct GUI_VNC_CONTEXT * pContext, BUFFER_CB * pBCB, U8 Data);$/;"	m	struct:GUI_VNC_CONTEXT
pfTransformRect	emwin/emWin_header/LCD.h	/^  tRect2TextRect    * pfTransformRect;$/;"	m	struct:tLCD_APIList_struct
pfUpdateBuffer	emwin/emWin_header/EDIT_Private.h	/^  tEDIT_UpdateBuffer * pfUpdateBuffer;  \/\/ Update textbuffer$/;"	m	struct:EDIT_Obj_struct
pfVoid	emwin/emWin_header/GUI_Type.h	/^  void (* pfVoid)(void);$/;"	m	struct:GUI_REGISTER_HOOK
pfWrite	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  void (* pfWrite)    (DRIVER_CONTEXT * pContext, U8 Data);$/;"	m	struct:DRIVER_CONTEXT
pfWrite16_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfWrite16_A0) (U16 Data);$/;"	m	struct:__anon272
pfWrite16_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfWrite16_A1) (U16 Data);$/;"	m	struct:__anon272
pfWrite32_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfWrite32_A0) (U32 Data);$/;"	m	struct:__anon272
pfWrite32_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfWrite32_A1) (U32 Data);$/;"	m	struct:__anon272
pfWrite8	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  void (* pfWrite8)    (DRIVER_CONTEXT * pContext, U8  Data);$/;"	m	struct:__anon229
pfWrite8_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfWrite8_A0)  (U8 Data);$/;"	m	struct:__anon272
pfWrite8_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfWrite8_A1)  (U8 Data);$/;"	m	struct:__anon272
pfWriteAddrB	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  void (* pfWriteAddrB)(DRIVER_CONTEXT * pContext, U32 Addr);$/;"	m	struct:__anon229
pfWriteAddrW	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  void (* pfWriteAddrW)(DRIVER_CONTEXT * pContext, U32 Addr);$/;"	m	struct:__anon229
pfWriteAt	emwin/emWin_header/IP_FS.h	/^  int   (*pfWriteAt)              (void* hFile, void* pBuffer, U32 Pos, U32 NumBytes);$/;"	m	struct:__anon299
pfWriteData	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfWriteData)    (DRIVER_CONTEXT * _pContext, U32 _PixelIndex);$/;"	m	struct:DRIVER_CONTEXT
pfWriteData	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  void (* pfWriteData)  (DRIVER_CONTEXT * pContext, U16 Data);                         \/\/ Writes one 16 bit data item using the write buffer$/;"	m	struct:__anon374
pfWriteData	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfWriteData)  (DRIVER_CONTEXT * pContext, U8 Data);$/;"	m	struct:__anon303
pfWriteData	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  void (* pfWriteData)(U8 * pData, U8 Data);$/;"	m	struct:DRIVER_CONTEXT
pfWriteDataAuto_16	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  void (* pfWriteDataAuto_16) (DRIVER_CONTEXT * pContext, U32 Addr, U16 Data);$/;"	m	struct:__anon368
pfWriteDataAuto_8	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  void (* pfWriteDataAuto_8) (DRIVER_CONTEXT * pContext, U32 Addr, U8 Data);$/;"	m	struct:__anon368
pfWriteDataFlush_8	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  void (* pfWriteDataFlush_8)(DRIVER_CONTEXT * pContext);$/;"	m	struct:__anon368
pfWriteDataM	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  void (* pfWriteDataM) (DRIVER_CONTEXT * pContext, U16 Data, U32 NumPixels);          \/\/ Writes a number of items of the same color using the write buffer$/;"	m	struct:__anon374
pfWriteDataMP	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  void (* pfWriteDataMP)(DRIVER_CONTEXT * pContext, U16 const * pData, U32 NumPixels); \/\/ Writes data using the write buffer$/;"	m	struct:__anon374
pfWriteDataMP_8	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  void (* pfWriteDataMP_8)(DRIVER_CONTEXT * pContext, U32 Addr, U8 * pData, U32 NumItems);$/;"	m	struct:__anon368
pfWriteDataM_8	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  void (* pfWriteDataM_8) (DRIVER_CONTEXT * pContext, U32 Addr, U8 Data, U32 NumItems);$/;"	m	struct:__anon368
pfWriteM16_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfWriteM16_A0)(U16 * pData, int NumItems);$/;"	m	struct:__anon272
pfWriteM16_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfWriteM16_A1)(U16 * pData, int NumItems);$/;"	m	struct:__anon272
pfWriteM32_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfWriteM32_A0)(U32 * pData, int NumItems);$/;"	m	struct:__anon272
pfWriteM32_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfWriteM32_A1)(U32 * pData, int NumItems);$/;"	m	struct:__anon272
pfWriteM8_A0	emwin/emWin_header/GUI_Type.h	/^  void (* pfWriteM8_A0) (U8 * pData, int NumItems);$/;"	m	struct:__anon272
pfWriteM8_A1	emwin/emWin_header/GUI_Type.h	/^  void (* pfWriteM8_A1) (U8 * pData, int NumItems);$/;"	m	struct:__anon272
pfWritePara	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  void (* pfWritePara)   (DRIVER_CONTEXT * _pContext, U16 _Data);$/;"	m	struct:DRIVER_CONTEXT
pfWritePixels	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfWritePixels)(DRIVER_CONTEXT * pContext, U32 Off, U8 Data);$/;"	m	struct:__anon303
pfWriteReg	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  void (* pfWriteReg)     (DRIVER_CONTEXT * pContext, U32 Addr, U16 Data);$/;"	m	struct:__anon368
pfWriteReg	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  void (* pfWriteReg)  (DRIVER_CONTEXT * pContext, U16 Reg, U16 Data);$/;"	m	struct:__anon229
pfWriteVMEM	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  void (* pfWriteVMEM)  (DRIVER_CONTEXT * pContext, U32 Off, U8 Data);$/;"	m	struct:__anon303
pfWriteVMem	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  void (* pfWriteVMem)(DRIVER_CONTEXT * pContext, int Column, int Page, U8 Data);$/;"	m	struct:DRIVER_CONTEXT
pfXY2Off	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  U32  (* pfXY2Off)     (DRIVER_CONTEXT * pContext, int x, int y);$/;"	m	struct:__anon303
pfXorPixel	emwin/emWin_header/GUI.h	/^  void           (* pfXorPixel     )(GUI_DEVICE *  pDevice,  int x, int y);$/;"	m	struct:GUI_DEVICE_API
pfXorPixel	emwin/emWin_header/GUI.h	/^  void           (* pfXorPixel     )(GUI_DEVICE * pDevice, int x, int y);$/;"	m	struct:__anon398
pfXorPixel	emwin/emWin_header/GUI_GCache_Private.h	/^  void           (* pfXorPixel     )(GUI_DEVICE *  pDevice,  int _x, int _y);$/;"	m	struct:__anon239
pfXorPixelIndex	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfXorPixelIndex)    (DRIVER_CONTEXT * pContext, int x, int y);$/;"	m	struct:__anon301
pfXorPixelIndexPhys	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  void           (* pfXorPixelIndexPhys)(DRIVER_CONTEXT * pContext, int x, int y);$/;"	m	struct:__anon301
phase	drivers/fsl_spi.h	/^    spi_clock_phase_t phase;            \/*!< Clock phase *\/$/;"	m	struct:_spi_master_config
phase	drivers/fsl_spi.h	/^    spi_clock_phase_t phase;            \/*!< Clock phase *\/$/;"	m	struct:_spi_slave_config
phase	lwip/src/include/netif/ppp/ppp.h	/^  u8_t phase;                    \/* where the link is at *\/$/;"	m	struct:ppp_pcb_s
phase	lwip/src/include/netif/ppp/pppol2tp.h	/^  u8_t phase;                  \/* L2TP phase *\/$/;"	m	struct:pppol2tp_pcb_s
phaseLength	CMSIS/arm_math.h	/^    uint16_t phaseLength;           \/**< length of each polyphase filter component. *\/$/;"	m	struct:__anon89
phaseLength	CMSIS/arm_math.h	/^    uint16_t phaseLength;           \/**< length of each polyphase filter component. *\/$/;"	m	struct:__anon90
phaseLength	CMSIS/arm_math.h	/^    uint16_t phaseLength;          \/**< length of each polyphase filter component. *\/$/;"	m	struct:__anon91
phase_est_en	codec2/ofdm_internal.h	/^    bool phase_est_en;$/;"	m	struct:OFDM
phase_fft_fwd_cfg	codec2/codec2_internal.h	/^    codec2_fft_cfg phase_fft_fwd_cfg;$/;"	m	struct:CODEC2
phase_fft_inv_cfg	codec2/codec2_internal.h	/^    codec2_fft_cfg phase_fft_inv_cfg;      $/;"	m	struct:CODEC2
phase_synth_zero_order	codec2/phase.c	/^void phase_synth_zero_order($/;"	f
phi	codec2/defines.h	/^    float phi[MAX_AMP+1]; \/* phase of each harmonic                     *\/$/;"	m	struct:__anon135
phi_c	codec2/fsk.h	/^    COMP phi_c[MODE_M_MAX];$/;"	m	struct:FSK
phy_duplex_t	board/fsl_phy.h	/^} phy_duplex_t;$/;"	t	typeref:enum:_phy_duplex
phy_loop_t	board/fsl_phy.h	/^} phy_loop_t;$/;"	t	typeref:enum:_phy_loop
phy_speed_t	board/fsl_phy.h	/^} phy_speed_t;$/;"	t	typeref:enum:_phy_speed
pilot_coeff	codec2/pilot_coeff.h	/^\/* const *\/ float pilot_coeff[]={$/;"	v
pilot_samples	codec2/ofdm_internal.h	/^    complex float pilot_samples[OFDM_M + OFDM_NCP];$/;"	m	struct:OFDM
pilots	codec2/ofdm_internal.h	/^    complex float pilots[OFDM_NC + 2];$/;"	m	struct:OFDM
pin	drivers/fsl_iocon.h	/^    uint32_t pin : 8;       \/* Pin number *\/$/;"	m	struct:_iocon_group
pinDirection	drivers/fsl_gpio.h	/^    gpio_pin_direction_t pinDirection; \/*!< GPIO direction, input or output *\/$/;"	m	struct:_gpio_pin_config
pin_mux_direction_t	board/pin_mux.h	/^} pin_mux_direction_t;$/;"	t	typeref:enum:_pin_mux_direction
pint_cb_t	drivers/fsl_pint.h	/^typedef void (*pint_cb_t)(pint_pin_int_t pintr, uint32_t pmatch_status);$/;"	t
pint_intr_callback	source/main.c	/^void pint_intr_callback(pint_pin_int_t pintr, uint32_t pmatch_status)$/;"	f
pint_pin_enable_t	drivers/fsl_pint.h	/^} pint_pin_enable_t;$/;"	t	typeref:enum:_pint_pin_enable
pint_pin_int_t	drivers/fsl_pint.h	/^} pint_pin_int_t;$/;"	t	typeref:enum:_pint_int
pint_pmatch_bslice_cfg_t	drivers/fsl_pint.h	/^} pint_pmatch_bslice_cfg_t;$/;"	t	typeref:enum:_pint_pmatch_bslice_cfg
pint_pmatch_bslice_t	drivers/fsl_pint.h	/^} pint_pmatch_bslice_t;$/;"	t	typeref:enum:_pint_pmatch_bslice
pint_pmatch_cfg_t	drivers/fsl_pint.h	/^} pint_pmatch_cfg_t;$/;"	t	typeref:struct:_pint_pmatch_cfg
pint_pmatch_input_src_t	drivers/fsl_pint.h	/^} pint_pmatch_input_src_t;$/;"	t	typeref:enum:_pint_pmatch_input_src
pipeDataBuffer	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t *pipeDataBuffer;      \/*!< pipe data buffer backup when stall *\/$/;"	m	struct:_usb_device_cdc_acm_pipe
pipeDataBuffer	usb/device/class/usb_device_phdc.h	/^    uint8_t *pipeDataBuffer;      \/*!< pipe data buffer backup when stall *\/$/;"	m	struct:_usb_device_phdc_pipe
pipeDataLen	usb/device/class/usb_device_cdc_acm.h	/^    uint32_t pipeDataLen;         \/*!< pipe data length backup when stall  *\/$/;"	m	struct:_usb_device_cdc_acm_pipe
pipeDataLen	usb/device/class/usb_device_phdc.h	/^    uint32_t pipeDataLen;         \/*!< pipe data length backup when stall  *\/$/;"	m	struct:_usb_device_phdc_pipe
pipeStall	usb/device/class/usb_device_cdc_acm.h	/^    uint8_t pipeStall;            \/*!< pipe is stall  *\/$/;"	m	struct:_usb_device_cdc_acm_pipe
pipeStall	usb/device/class/usb_device_phdc.h	/^    uint8_t pipeStall;            \/*!< pipe is stall  *\/$/;"	m	struct:_usb_device_phdc_pipe
pkCoeffs	CMSIS/arm_math.h	/^    float32_t *pkCoeffs;                 \/**< points to the reflection coefficient array. The array is of length numStages. *\/$/;"	m	struct:__anon101
pkCoeffs	CMSIS/arm_math.h	/^    q15_t *pkCoeffs;                     \/**< points to the reflection coefficient array. The array is of length numStages. *\/$/;"	m	struct:__anon99
pkCoeffs	CMSIS/arm_math.h	/^    q31_t *pkCoeffs;                     \/**< points to the reflection coefficient array. The array is of length numStages. *\/$/;"	m	struct:__anon100
pkts_in	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int	pkts_in;$/;"	m	struct:pppd_stats
pkts_out	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int	pkts_out;$/;"	m	struct:pppd_stats
playSource	codec/fsl_wm8904.h	/^    uint16_t playSource;         \/*!< play source *\/$/;"	m	struct:_wm8904_config
pllDecodeM	device/system_LPC54018.c	/^static uint32_t pllDecodeM(uint32_t MDEC)$/;"	f	file:
pllDecodeM	drivers/fsl_clock.c	/^static uint32_t pllDecodeM(uint32_t MDEC)$/;"	f	file:
pllDecodeN	device/system_LPC54018.c	/^static uint32_t pllDecodeN(uint32_t NDEC)$/;"	f	file:
pllDecodeN	drivers/fsl_clock.c	/^static uint32_t pllDecodeN(uint32_t NDEC)$/;"	f	file:
pllDecodeP	device/system_LPC54018.c	/^static uint32_t pllDecodeP(uint32_t PDEC)$/;"	f	file:
pllDecodeP	drivers/fsl_clock.c	/^static uint32_t pllDecodeP(uint32_t PDEC)$/;"	f	file:
pllEncodeM	drivers/fsl_clock.c	/^static uint32_t pllEncodeM(uint32_t M)$/;"	f	file:
pllEncodeN	drivers/fsl_clock.c	/^static uint32_t pllEncodeN(uint32_t N)$/;"	f	file:
pllEncodeP	drivers/fsl_clock.c	/^static uint32_t pllEncodeP(uint32_t P)$/;"	f	file:
pllFindSel	drivers/fsl_clock.c	/^static void pllFindSel(uint32_t M, uint32_t *pSelP, uint32_t *pSelI, uint32_t *pSelR)$/;"	f	file:
pllRate	drivers/fsl_clock.h	/^    uint32_t pllRate;    \/*!< Acutal PLL rate *\/$/;"	m	struct:_pll_setup
pll_config_t	drivers/fsl_clock.h	/^} pll_config_t;$/;"	t	typeref:struct:_pll_config
pll_error_t	drivers/fsl_clock.h	/^} pll_error_t;$/;"	t	typeref:enum:_pll_error
pll_setup_t	drivers/fsl_clock.h	/^} pll_setup_t;$/;"	t	typeref:struct:_pll_setup
pllctrl	drivers/fsl_clock.h	/^    uint32_t pllctrl;    \/*!< PLL control register SYSPLLCTRL *\/$/;"	m	struct:_pll_setup
pllmdec	drivers/fsl_clock.h	/^    uint32_t pllmdec;    \/*!< PLL MDEC registers SYSPLLPDEC *\/$/;"	m	struct:_pll_setup
pllndec	drivers/fsl_clock.h	/^    uint32_t pllndec;    \/*!< PLL NDEC register SYSPLLNDEC *\/$/;"	m	struct:_pll_setup
pllpdec	drivers/fsl_clock.h	/^    uint32_t pllpdec;    \/*!< PLL PDEC register SYSPLLPDEC *\/$/;"	m	struct:_pll_setup
plug_holes	lwip/src/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmi	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t pmi;               \/*!< This bit should be set to zero for UFI*\/$/;"	m	struct:_usb_device_read_capacities_command_struct
pmtu	lwip/src/include/lwip/priv/nd6_priv.h	/^  u16_t pmtu;$/;"	m	struct:nd6_destination_cache_entry
pn_secret	lwip/src/netif/ppp/eap.c	/^static char *pn_secret = NULL;		\/* Pseudonym generating secret *\/$/;"	v	file:
pncrypt_setkey	lwip/src/netif/ppp/eap.c	/^pncrypt_setkey(int timeoffs)$/;"	f	file:
poff	littlefs/littlefs_include/lfs.h	/^    lfs_off_t poff;$/;"	m	struct:lfs_file
polarity	drivers/fsl_gpio.h	/^    uint8_t polarity;     \/* The polarity of GPIO interrupts *\/$/;"	m	struct:_gpio_interrupt_config
polarity	drivers/fsl_spi.h	/^    spi_clock_polarity_t polarity;      \/*!< Clock polarity *\/$/;"	m	struct:_spi_master_config
polarity	drivers/fsl_spi.h	/^    spi_clock_polarity_t polarity;      \/*!< Clock polarity *\/$/;"	m	struct:_spi_slave_config
poll	lwip/src/include/lwip/altcp.h	/^  altcp_poll_fn       poll;$/;"	m	struct:altcp_pcb
poll	lwip/src/include/lwip/sockets.h	653;"	d
poll	lwip/src/include/lwip/tcp.h	/^  tcp_poll_fn poll;$/;"	m	struct:tcp_pcb
poll_fds	lwip/src/include/lwip/priv/sockets_priv.h	/^  struct pollfd *poll_fds;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::pollfd
poll_nfds	lwip/src/include/lwip/priv/sockets_priv.h	/^  nfds_t poll_nfds;$/;"	m	struct:lwip_select_cb
poll_tcp	lwip/src/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollfd	lwip/src/include/lwip/sockets.h	/^struct pollfd$/;"	s
pollinterval	lwip/src/include/lwip/altcp.h	/^  u8_t pollinterval;$/;"	m	struct:altcp_pcb
pollinterval	lwip/src/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polls_left	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t polls_left;$/;"	m	struct:api_msg::__anon454::__anon460
polltmr	lwip/src/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	lwip/src/include/lwip/memp.h	/^   memp_t poolnr;$/;"	m	struct:memp_malloc_helper
popcount	codec2/golay23.c	/^static int popcount(unsigned int c) {$/;"	f	file:
popcount	codec2/golay23.c	68;"	d	file:
popcount	codec2/golay23.c	71;"	d	file:
port	drivers/fsl_iocon.h	/^    uint32_t port : 8;      \/* Pin port *\/$/;"	m	struct:_iocon_group
port	lwip/src/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	lwip/src/include/lwip/priv/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg::__anon454::__anon456
port	lwip/src/include/netif/ppp/pppapi.h	/^      u16_t port;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon439
port	lwip/src/netif/bridgeif_fdb.c	/^  u8_t port;$/;"	m	struct:bridgeif_dfdb_entry_s	file:
portAIRCR_REG	amazon-freertos/freertos/portable/port.c	76;"	d	file:
portALLOCATE_SECURE_CONTEXT	amazon-freertos/include/FreeRTOS.h	766;"	d
portARCH_NAME	amazon-freertos/include/portable.h	92;"	d
portASPEN_AND_LSPEN_BITS	amazon-freertos/freertos/portable/port.c	88;"	d	file:
portASSERT_IF_INTERRUPT_PRIORITY_INVALID	amazon-freertos/freertos/portable/portmacro.h	157;"	d
portASSERT_IF_INTERRUPT_PRIORITY_INVALID	amazon-freertos/include/FreeRTOS.h	782;"	d
portASSERT_IF_IN_ISR	amazon-freertos/include/FreeRTOS.h	798;"	d
portArch_Name	amazon-freertos/include/freertos_tasks_c_additions.h	/^char *const portArch_Name = NULL;$/;"	v
portArch_Name	amazon-freertos/include/freertos_tasks_c_additions.h	/^char *const portArch_Name = portARCH_NAME;$/;"	v
portArch_Name	amazon-freertos/include/freertos_tasks_c_additions.h	/^char *const portArch_Name __attribute__((section(".rodata"))) = portARCH_NAME;$/;"	v
portArch_Name	amazon-freertos/include/freertos_tasks_c_additions.h	/^char *const portArch_Name __attribute__((used)) = portARCH_NAME;$/;"	v
portBASE_TYPE	amazon-freertos/freertos/portable/portmacro.h	53;"	d
portBYTE_ALIGNMENT	amazon-freertos/freertos/portable/portmacro.h	75;"	d
portBYTE_ALIGNMENT_MASK	amazon-freertos/include/portable.h	56;"	d
portBYTE_ALIGNMENT_MASK	amazon-freertos/include/portable.h	60;"	d
portBYTE_ALIGNMENT_MASK	amazon-freertos/include/portable.h	64;"	d
portBYTE_ALIGNMENT_MASK	amazon-freertos/include/portable.h	68;"	d
portBYTE_ALIGNMENT_MASK	amazon-freertos/include/portable.h	72;"	d
portBYTE_ALIGNMENT_MASK	amazon-freertos/include/portable.h	76;"	d
portCHAR	amazon-freertos/freertos/portable/portmacro.h	47;"	d
portCLEAN_UP_TCB	amazon-freertos/include/FreeRTOS.h	270;"	d
portCLEAR_INTERRUPT_MASK_FROM_ISR	amazon-freertos/freertos/portable/portmacro.h	100;"	d
portCLEAR_INTERRUPT_MASK_FROM_ISR	amazon-freertos/include/FreeRTOS.h	266;"	d
portCONFIGURE_TIMER_FOR_RUN_TIME_STATS	amazon-freertos/include/FreeRTOS.h	714;"	d
portCORTEX_M7_r0p0_ID	amazon-freertos/freertos/portable/port.c	68;"	d	file:
portCORTEX_M7_r0p1_ID	amazon-freertos/freertos/portable/port.c	67;"	d	file:
portCPUID	amazon-freertos/freertos/portable/port.c	66;"	d	file:
portCRITICAL_NESTING_IN_TCB	amazon-freertos/include/FreeRTOS.h	222;"	d
portConfig	component/serial_manager/serial_manager.h	/^    void *portConfig;        \/*!< Serial port configuration *\/$/;"	m	struct:_serial_manager_config
portDISABLE_INTERRUPTS	amazon-freertos/freertos/portable/portmacro.h	101;"	d
portDOUBLE	amazon-freertos/freertos/portable/portmacro.h	49;"	d
portENABLE_INTERRUPTS	amazon-freertos/freertos/portable/portmacro.h	102;"	d
portEND_SWITCHING_ISR	amazon-freertos/freertos/portable/portmacro.h	92;"	d
portENTER_CRITICAL	amazon-freertos/freertos/portable/portmacro.h	103;"	d
portEXIT_CRITICAL	amazon-freertos/freertos/portable/portmacro.h	104;"	d
portFIRST_USER_INTERRUPT_NUMBER	amazon-freertos/freertos/portable/port.c	74;"	d	file:
portFLOAT	amazon-freertos/freertos/portable/portmacro.h	48;"	d
portFORCE_INLINE	amazon-freertos/freertos/portable/portmacro.h	166;"	d
portFPCCR	amazon-freertos/freertos/portable/port.c	87;"	d	file:
portGET_HIGHEST_PRIORITY	amazon-freertos/freertos/portable/portmacro.h	149;"	d
portHAS_STACK_OVERFLOW_CHECKING	amazon-freertos/include/portable.h	88;"	d
portINITIAL_EXC_RETURN	amazon-freertos/freertos/portable/port.c	92;"	d	file:
portINITIAL_XPSR	amazon-freertos/freertos/portable/port.c	91;"	d	file:
portINLINE	amazon-freertos/freertos/portable/portmacro.h	163;"	d
portLONG	amazon-freertos/freertos/portable/portmacro.h	50;"	d
portMAX_24_BIT_NUMBER	amazon-freertos/freertos/portable/port.c	95;"	d	file:
portMAX_8_BIT_VALUE	amazon-freertos/freertos/portable/port.c	77;"	d	file:
portMAX_DELAY	amazon-freertos/freertos/portable/portmacro.h	61;"	d
portMAX_DELAY	amazon-freertos/freertos/portable/portmacro.h	64;"	d
portMAX_PRIGROUP_BITS	amazon-freertos/freertos/portable/port.c	79;"	d	file:
portMISSED_COUNTS_FACTOR	amazon-freertos/freertos/portable/port.c	104;"	d	file:
portNOP	amazon-freertos/freertos/portable/portmacro.h	161;"	d
portNUM_CONFIGURABLE_REGIONS	amazon-freertos/include/portable.h	84;"	d
portNVIC_INT_CTRL_REG	amazon-freertos/freertos/portable/portmacro.h	90;"	d
portNVIC_IP_REGISTERS_OFFSET_16	amazon-freertos/freertos/portable/port.c	75;"	d	file:
portNVIC_PENDSVCLEAR_BIT	amazon-freertos/freertos/portable/port.c	61;"	d	file:
portNVIC_PENDSVSET_BIT	amazon-freertos/freertos/portable/portmacro.h	91;"	d
portNVIC_PENDSV_PRI	amazon-freertos/freertos/portable/port.c	70;"	d	file:
portNVIC_PEND_SYSTICK_CLEAR_BIT	amazon-freertos/freertos/portable/port.c	62;"	d	file:
portNVIC_SYSPRI2_REG	amazon-freertos/freertos/portable/port.c	56;"	d	file:
portNVIC_SYSTICK_CLK_BIT	amazon-freertos/freertos/portable/port.c	45;"	d	file:
portNVIC_SYSTICK_CLK_BIT	amazon-freertos/freertos/portable/port.c	49;"	d	file:
portNVIC_SYSTICK_COUNT_FLAG_BIT	amazon-freertos/freertos/portable/port.c	60;"	d	file:
portNVIC_SYSTICK_CTRL_REG	amazon-freertos/freertos/portable/port.c	53;"	d	file:
portNVIC_SYSTICK_CURRENT_VALUE_REG	amazon-freertos/freertos/portable/port.c	55;"	d	file:
portNVIC_SYSTICK_ENABLE_BIT	amazon-freertos/freertos/portable/port.c	59;"	d	file:
portNVIC_SYSTICK_INT_BIT	amazon-freertos/freertos/portable/port.c	58;"	d	file:
portNVIC_SYSTICK_LOAD_REG	amazon-freertos/freertos/portable/port.c	54;"	d	file:
portNVIC_SYSTICK_PRI	amazon-freertos/freertos/portable/port.c	71;"	d	file:
portPOINTER_SIZE_TYPE	amazon-freertos/include/FreeRTOS.h	292;"	d
portPRE_TASK_DELETE_HOOK	amazon-freertos/include/FreeRTOS.h	274;"	d
portPRIGROUP_SHIFT	amazon-freertos/freertos/portable/port.c	81;"	d	file:
portPRIORITY_GROUP_MASK	amazon-freertos/freertos/portable/port.c	80;"	d	file:
portPRIVILEGE_BIT	amazon-freertos/include/FreeRTOS.h	722;"	d
portRECORD_READY_PRIORITY	amazon-freertos/freertos/portable/portmacro.h	144;"	d
portRESET_READY_PRIORITY	amazon-freertos/freertos/portable/portmacro.h	145;"	d
portRESET_READY_PRIORITY	amazon-freertos/freertos/tasks.c	156;"	d	file:
portSETUP_TCB	amazon-freertos/include/FreeRTOS.h	278;"	d
portSET_INTERRUPT_MASK_FROM_ISR	amazon-freertos/freertos/portable/portmacro.h	99;"	d
portSET_INTERRUPT_MASK_FROM_ISR	amazon-freertos/include/FreeRTOS.h	262;"	d
portSHORT	amazon-freertos/freertos/portable/portmacro.h	51;"	d
portSTACK_GROWTH	amazon-freertos/freertos/portable/portmacro.h	73;"	d
portSTACK_TYPE	amazon-freertos/freertos/portable/portmacro.h	52;"	d
portSTART_ADDRESS_MASK	amazon-freertos/freertos/portable/port.c	99;"	d	file:
portSUPPRESS_TICKS_AND_SLEEP	amazon-freertos/freertos/portable/portmacro.h	118;"	d
portSUPPRESS_TICKS_AND_SLEEP	amazon-freertos/include/FreeRTOS.h	730;"	d
portTASK_FUNCTION	amazon-freertos/freertos/portable/portmacro.h	112;"	d
portTASK_FUNCTION	amazon-freertos/freertos/tasks.c	/^static portTASK_FUNCTION( prvIdleTask, pvParameters )$/;"	f	file:
portTASK_FUNCTION	amazon-freertos/freertos/timers.c	/^static portTASK_FUNCTION( prvTimerTask, pvParameters )$/;"	f	file:
portTASK_FUNCTION_PROTO	amazon-freertos/freertos/portable/portmacro.h	111;"	d
portTASK_RETURN_ADDRESS	amazon-freertos/freertos/portable/port.c	110;"	d	file:
portTASK_RETURN_ADDRESS	amazon-freertos/freertos/portable/port.c	112;"	d	file:
portTASK_USES_FLOATING_POINT	amazon-freertos/include/FreeRTOS.h	762;"	d
portTICK_PERIOD_MS	amazon-freertos/freertos/portable/portmacro.h	74;"	d
portTICK_RATE_MS	amazon-freertos/include/FreeRTOS.h	927;"	d
portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR	amazon-freertos/include/FreeRTOS.h	870;"	d
portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR	amazon-freertos/include/FreeRTOS.h	877;"	d
portTICK_TYPE_ENTER_CRITICAL	amazon-freertos/include/FreeRTOS.h	867;"	d
portTICK_TYPE_ENTER_CRITICAL	amazon-freertos/include/FreeRTOS.h	874;"	d
portTICK_TYPE_EXIT_CRITICAL	amazon-freertos/include/FreeRTOS.h	868;"	d
portTICK_TYPE_EXIT_CRITICAL	amazon-freertos/include/FreeRTOS.h	875;"	d
portTICK_TYPE_IS_ATOMIC	amazon-freertos/freertos/portable/portmacro.h	68;"	d
portTICK_TYPE_IS_ATOMIC	amazon-freertos/include/FreeRTOS.h	818;"	d
portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR	amazon-freertos/include/FreeRTOS.h	869;"	d
portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR	amazon-freertos/include/FreeRTOS.h	876;"	d
portTOP_BIT_OF_BYTE	amazon-freertos/freertos/portable/port.c	78;"	d	file:
portTickType	amazon-freertos/include/FreeRTOS.h	914;"	d
portUSING_MPU_WRAPPERS	amazon-freertos/include/mpu_wrappers.h	180;"	d
portVECTACTIVE_MASK	amazon-freertos/freertos/portable/port.c	84;"	d	file:
portYIELD	amazon-freertos/freertos/portable/portmacro.h	79;"	d
portYIELD_FROM_ISR	amazon-freertos/freertos/portable/portmacro.h	93;"	d
portYIELD_WITHIN_API	amazon-freertos/include/FreeRTOS.h	726;"	d
port_netif	lwip/src/netif/bridgeif.c	/^  struct netif *port_netif;$/;"	m	struct:bridgeif_port_private_s	typeref:struct:bridgeif_port_private_s::netif	file:
port_num	lwip/src/netif/bridgeif.c	/^  u8_t port_num;$/;"	m	struct:bridgeif_port_private_s	file:
ports	lwip/src/netif/bridgeif.c	/^  bridgeif_port_t  *ports;$/;"	m	struct:bridgeif_private_s	file:
pos	littlefs/littlefs_include/lfs.h	/^    lfs_off_t pos;$/;"	m	struct:lfs_dir
pos	littlefs/littlefs_include/lfs.h	/^    lfs_off_t pos;$/;"	m	struct:lfs_file
position	drivers/fsl_i2s.h	/^    uint16_t position;    \/*!< Data position in the frame *\/$/;"	m	struct:_i2s_config
postDelay	drivers/fsl_spi.h	/^    uint8_t postDelay;     \/*!< Delay between the end of transfer and SSEL deassertion. *\/$/;"	m	struct:_spi_delay_config
postShift	CMSIS/arm_math.h	/^    int8_t postShift;        \/**< Additional shift, in bits, applied to each output sample. *\/$/;"	m	struct:__anon55
postShift	CMSIS/arm_math.h	/^    uint32_t postShift;  \/**< bit shift applied to coefficients. *\/$/;"	m	struct:__anon103
postShift	CMSIS/arm_math.h	/^    uint32_t postShift;  \/**< bit shift applied to coefficients. *\/$/;"	m	struct:__anon104
postShift	CMSIS/arm_math.h	/^    uint8_t postShift;       \/**< Additional shift, in bits, applied to each output sample. *\/$/;"	m	struct:__anon56
postShift	CMSIS/arm_math.h	/^    uint8_t postShift;       \/**< additional shift, in bits, applied to each output sample. *\/$/;"	m	struct:__anon92
postShift	CMSIS/arm_math.h	/^    uint8_t postShift;    \/**< bit shift applied to coefficients. *\/$/;"	m	struct:__anon106
postShift	CMSIS/arm_math.h	/^    uint8_t postShift;    \/**< bit shift applied to coefficients. *\/$/;"	m	struct:__anon107
post_dc_gain_reduce	drivers/fsl_dmic.h	/^    uint32_t post_dc_gain_reduce;       \/*!< Fine gain adjustment in the form of a number of bits to downshift *\/$/;"	m	struct:_dmic_channel_config
post_filter_newamp1	codec2/newamp1.c	/^void post_filter_newamp1(float vec[], float sample_freq_kHz[], int K, float pf_gain)$/;"	f
post_process_mbe	codec2/nlp.c	/^float post_process_mbe(COMP Fw[], int pmin, int pmax, float gmax, COMP Sw[], COMP W[], float *prev_Wo)$/;"	f
post_process_sub_multiples	codec2/nlp.c	/^float post_process_sub_multiples(COMP Fw[],$/;"	f
postfilter	codec2/postfilter.c	/^void postfilter($/;"	f
power2Cal	drivers/fsl_clock.c	/^static uint32_t power2Cal(uint32_t powerTimes)$/;"	f	file:
power_mode_cfg_t	drivers/fsl_power.h	/^} power_mode_cfg_t;$/;"	t	typeref:enum:_power_mode_config
ppBm	emwin/emWin_header/GUI.h	/^  const GUI_BITMAP ** ppBm;$/;"	m	struct:__anon390
ppm	codec2/fsk.h	/^    float ppm;              \/* Estimated PPM clock offset *\/$/;"	m	struct:FSK
ppp	lwip/src/include/netif/ppp/pppapi.h	/^  ppp_pcb *ppp;$/;"	m	struct:pppapi_msg_msg
ppp	lwip/src/include/netif/ppp/pppol2tp.h	/^  ppp_pcb *ppp;                \/* PPP PCB *\/$/;"	m	struct:pppol2tp_pcb_s
ppp	lwip/src/include/netif/ppp/pppos.h	/^  ppp_pcb *ppp;                    \/* PPP PCB *\/$/;"	m	struct:pppos_pcb_s
ppp_addrs	lwip/src/include/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_close	lwip/src/netif/ppp/ppp.c	/^ppp_close(ppp_pcb *pcb, u8_t nocarrier)$/;"	f
ppp_comp_stats	lwip/src/include/netif/ppp/ppp_impl.h	/^struct ppp_comp_stats {$/;"	s
ppp_connect	lwip/src/netif/ppp/ppp.c	/^err_t ppp_connect(ppp_pcb *pcb, u16_t holdoff) {$/;"	f
ppp_dbglog	lwip/src/netif/ppp/utils.c	/^void ppp_dbglog(const char *fmt, ...) {$/;"	f
ppp_do_connect	lwip/src/netif/ppp/ppp.c	/^static void ppp_do_connect(void *arg) {$/;"	f	file:
ppp_dump_packet	lwip/src/netif/ppp/utils.c	/^void ppp_dump_packet(ppp_pcb *pcb, const char *tag, unsigned char *p, int len) {$/;"	f
ppp_error	lwip/src/netif/ppp/utils.c	/^void ppp_error(const char *fmt, ...) {$/;"	f
ppp_fatal	lwip/src/netif/ppp/utils.c	/^void ppp_fatal(const char *fmt, ...) {$/;"	f
ppp_format_packet	lwip/src/netif/ppp/utils.c	/^static void ppp_format_packet(const u_char *p, int len,$/;"	f	file:
ppp_free	lwip/src/netif/ppp/ppp.c	/^err_t ppp_free(ppp_pcb *pcb) {$/;"	f
ppp_get_fcs	lwip/src/netif/ppp/pppos.c	/^ppp_get_fcs(u8_t byte)$/;"	f	file:
ppp_ibytes	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int ppp_ibytes;	\/* bytes received *\/$/;"	m	struct:pppstat
ppp_idle	lwip/src/include/netif/ppp/ppp_impl.h	/^struct ppp_idle {$/;"	s
ppp_ierrors	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int ppp_ierrors;	\/* receive errors *\/$/;"	m	struct:pppstat
ppp_info	lwip/src/netif/ppp/utils.c	/^void ppp_info(const char *fmt, ...) {$/;"	f
ppp_init	lwip/src/netif/ppp/ppp.c	/^int ppp_init(void)$/;"	f
ppp_input	lwip/src/netif/ppp/ppp.c	/^void ppp_input(ppp_pcb *pcb, struct pbuf *pb) {$/;"	f
ppp_ioctl	lwip/src/netif/ppp/ppp.c	/^ppp_ioctl(ppp_pcb *pcb, u8_t cmd, void *arg)$/;"	f
ppp_ipackets	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int ppp_ipackets;	\/* packets received *\/$/;"	m	struct:pppstat
ppp_link_end	lwip/src/netif/ppp/ppp.c	/^void ppp_link_end(ppp_pcb *pcb) {$/;"	f
ppp_link_failed	lwip/src/netif/ppp/ppp.c	/^void ppp_link_failed(ppp_pcb *pcb) {$/;"	f
ppp_link_status_cb_fn	lwip/src/include/netif/ppp/ppp.h	/^typedef void (*ppp_link_status_cb_fn)(ppp_pcb *pcb, int err_code, void *ctx);$/;"	t
ppp_link_terminated	lwip/src/netif/ppp/ppp.c	/^void ppp_link_terminated(ppp_pcb *pcb) {$/;"	f
ppp_listen	lwip/src/netif/ppp/ppp.c	/^err_t ppp_listen(ppp_pcb *pcb) {$/;"	f
ppp_log_write	lwip/src/netif/ppp/utils.c	/^static void ppp_log_write(int level, char *buf) {$/;"	f	file:
ppp_logit	lwip/src/netif/ppp/utils.c	/^static void ppp_logit(int level, const char *fmt, va_list args) {$/;"	f	file:
ppp_mppe_state	lwip/src/include/netif/ppp/mppe.h	/^typedef struct ppp_mppe_state {$/;"	s
ppp_mppe_state	lwip/src/include/netif/ppp/mppe.h	/^} ppp_mppe_state;$/;"	t	typeref:struct:ppp_mppe_state
ppp_netif	lwip/src/include/netif/ppp/ppp.h	682;"	d
ppp_netif_init_cb	lwip/src/netif/ppp/ppp.c	/^static err_t ppp_netif_init_cb(struct netif *netif) {$/;"	f	file:
ppp_netif_output	lwip/src/netif/ppp/ppp.c	/^static err_t ppp_netif_output(struct netif *netif, struct pbuf *pb, u16_t protocol) {$/;"	f	file:
ppp_netif_output_ip4	lwip/src/netif/ppp/ppp.c	/^static err_t ppp_netif_output_ip4(struct netif *netif, struct pbuf *pb, const ip4_addr_t *ipaddr) {$/;"	f	file:
ppp_netif_output_ip6	lwip/src/netif/ppp/ppp.c	/^static err_t ppp_netif_output_ip6(struct netif *netif, struct pbuf *pb, const ip6_addr_t *ipaddr) {$/;"	f	file:
ppp_new	lwip/src/netif/ppp/ppp.c	/^ppp_pcb *ppp_new(struct netif *pppif, const struct link_callbacks *callbacks, void *link_ctx_cb, ppp_link_status_cb_fn link_status_cb, void *ctx_cb) {$/;"	f
ppp_notice	lwip/src/netif/ppp/utils.c	/^void ppp_notice(const char *fmt, ...) {$/;"	f
ppp_notify_phase_cb_fn	lwip/src/include/netif/ppp/ppp.h	/^typedef void (*ppp_notify_phase_cb_fn)(ppp_pcb *pcb, u8_t phase, void *ctx);$/;"	t
ppp_obytes	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int ppp_obytes;	\/* bytes sent *\/$/;"	m	struct:pppstat
ppp_oerrors	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int ppp_oerrors;	\/* transmit errors *\/$/;"	m	struct:pppstat
ppp_opackets	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int ppp_opackets;	\/* packets sent *\/$/;"	m	struct:pppstat
ppp_pcb	lwip/src/include/netif/ppp/ppp.h	/^typedef struct ppp_pcb_s ppp_pcb;$/;"	t	typeref:struct:ppp_pcb_s
ppp_pcb_s	lwip/src/include/netif/ppp/ppp.h	/^struct ppp_pcb_s {$/;"	s
ppp_print_string	lwip/src/netif/ppp/utils.c	/^void ppp_print_string(const u_char *p, int len, void (*printer) (void *, const char *, ...), void *arg) {$/;"	f
ppp_recv_config	lwip/src/netif/ppp/ppp.c	/^int ppp_recv_config(ppp_pcb *pcb, int mru, u32_t accm, int pcomp, int accomp) {$/;"	f
ppp_send_config	lwip/src/netif/ppp/ppp.c	/^int ppp_send_config(ppp_pcb *pcb, int mtu, u32_t accm, int pcomp, int accomp) {$/;"	f
ppp_set_asyncmap	lwip/src/include/netif/ppp/ppp.h	587;"	d
ppp_set_auth	lwip/src/netif/ppp/ppp.c	/^void ppp_set_auth(ppp_pcb *pcb, u8_t authtype, const char *user, const char *passwd) {$/;"	f
ppp_set_auth_required	lwip/src/include/netif/ppp/ppp.h	473;"	d
ppp_set_default	lwip/src/include/netif/ppp/ppp.h	593;"	d
ppp_set_ipcp_dnsaddr	lwip/src/include/netif/ppp/ppp.h	493;"	d
ppp_set_ipcp_hisaddr	lwip/src/include/netif/ppp/ppp.h	485;"	d
ppp_set_ipcp_ouraddr	lwip/src/include/netif/ppp/ppp.h	483;"	d
ppp_set_listen_time	lwip/src/include/netif/ppp/ppp.h	531;"	d
ppp_set_mppe	lwip/src/netif/ppp/ppp.c	/^void ppp_set_mppe(ppp_pcb *pcb, u8_t flags) {$/;"	f
ppp_set_neg_accomp	lwip/src/include/netif/ppp/ppp.h	564;"	d
ppp_set_neg_asyncmap	lwip/src/include/netif/ppp/ppp.h	573;"	d
ppp_set_neg_pcomp	lwip/src/include/netif/ppp/ppp.h	555;"	d
ppp_set_netif_linkcallback	lwip/src/include/netif/ppp/ppp.h	689;"	d
ppp_set_netif_statuscallback	lwip/src/include/netif/ppp/ppp.h	685;"	d
ppp_set_notify_phase_callback	lwip/src/netif/ppp/ppp.c	/^void ppp_set_notify_phase_callback(ppp_pcb *pcb, ppp_notify_phase_cb_fn notify_phase_cb) {$/;"	f
ppp_set_passive	lwip/src/include/netif/ppp/ppp.h	539;"	d
ppp_set_silent	lwip/src/include/netif/ppp/ppp.h	547;"	d
ppp_set_usepeerdns	lwip/src/include/netif/ppp/ppp.h	501;"	d
ppp_settings	lwip/src/include/netif/ppp/ppp.h	/^} ppp_settings;$/;"	t	typeref:struct:ppp_settings_s
ppp_settings_s	lwip/src/include/netif/ppp/ppp.h	/^typedef struct ppp_settings_s {$/;"	s
ppp_slprintf	lwip/src/netif/ppp/utils.c	/^int ppp_slprintf(char *buf, int buflen, const char *fmt, ...) {$/;"	f
ppp_start	lwip/src/netif/ppp/ppp.c	/^void ppp_start(ppp_pcb *pcb) {$/;"	f
ppp_stats	lwip/src/include/netif/ppp/ppp_impl.h	/^struct ppp_stats {$/;"	s
ppp_strlcat	lwip/src/netif/ppp/utils.c	/^size_t ppp_strlcat(char *dest, const char *src, size_t len) {$/;"	f
ppp_strlcpy	lwip/src/netif/ppp/utils.c	/^size_t ppp_strlcpy(char *dest, const char *src, size_t len) {$/;"	f
ppp_vslp_printer	lwip/src/netif/ppp/utils.c	/^static void ppp_vslp_printer(void *arg, const char *fmt, ...) {$/;"	f	file:
ppp_vslprintf	lwip/src/netif/ppp/utils.c	/^int ppp_vslprintf(char *buf, int buflen, const char *fmt, va_list args) {$/;"	f
ppp_warn	lwip/src/netif/ppp/utils.c	/^void ppp_warn(const char *fmt, ...) {$/;"	f
ppp_write	lwip/src/netif/ppp/ppp.c	/^err_t ppp_write(ppp_pcb *pcb, struct pbuf *p) {$/;"	f
pppapi_close	lwip/src/netif/ppp/pppapi.c	/^pppapi_close(ppp_pcb *pcb, u8_t nocarrier)$/;"	f
pppapi_connect	lwip/src/netif/ppp/pppapi.c	/^pppapi_connect(ppp_pcb *pcb, u16_t holdoff)$/;"	f
pppapi_do_ppp_close	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_ppp_close(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_ppp_connect	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_ppp_connect(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_ppp_free	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_ppp_free(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_ppp_ioctl	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_ppp_ioctl(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_ppp_listen	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_ppp_listen(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_ppp_set_default	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_ppp_set_default(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_ppp_set_notify_phase_callback	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_ppp_set_notify_phase_callback(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_pppoe_create	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_pppoe_create(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_pppol2tp_create	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_pppol2tp_create(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_do_pppos_create	lwip/src/netif/ppp/pppapi.c	/^pppapi_do_pppos_create(struct tcpip_api_call_data *m)$/;"	f	file:
pppapi_free	lwip/src/netif/ppp/pppapi.c	/^pppapi_free(ppp_pcb *pcb)$/;"	f
pppapi_ioctl	lwip/src/netif/ppp/pppapi.c	/^pppapi_ioctl(ppp_pcb *pcb, u8_t cmd, void *arg)$/;"	f
pppapi_listen	lwip/src/netif/ppp/pppapi.c	/^pppapi_listen(ppp_pcb *pcb)$/;"	f
pppapi_msg	lwip/src/include/netif/ppp/pppapi.h	/^struct pppapi_msg {$/;"	s
pppapi_msg_msg	lwip/src/include/netif/ppp/pppapi.h	/^struct pppapi_msg_msg {$/;"	s
pppapi_pppoe_create	lwip/src/netif/ppp/pppapi.c	/^pppapi_pppoe_create(struct netif *pppif, struct netif *ethif, const char *service_name,$/;"	f
pppapi_pppol2tp_create	lwip/src/netif/ppp/pppapi.c	/^pppapi_pppol2tp_create(struct netif *pppif, struct netif *netif, ip_addr_t *ipaddr, u16_t port,$/;"	f
pppapi_pppos_create	lwip/src/netif/ppp/pppapi.c	/^pppapi_pppos_create(struct netif *pppif, pppos_output_cb_fn output_cb,$/;"	f
pppapi_set_default	lwip/src/netif/ppp/pppapi.c	/^pppapi_set_default(ppp_pcb *pcb)$/;"	f
pppapi_set_notify_phase_callback	lwip/src/netif/ppp/pppapi.c	/^pppapi_set_notify_phase_callback(ppp_pcb *pcb, ppp_notify_phase_cb_fn notify_phase_cb)$/;"	f
pppcrypt_56_to_64_bit_key	lwip/src/netif/ppp/pppcrypt.c	/^void pppcrypt_56_to_64_bit_key(u_char *key, u_char * des_key) {$/;"	f
pppcrypt_get_7bits	lwip/src/netif/ppp/pppcrypt.c	/^static u_char pppcrypt_get_7bits(u_char *input, int startBit) {$/;"	f	file:
pppd_stats	lwip/src/include/netif/ppp/ppp_impl.h	/^struct pppd_stats {$/;"	s
pppif	lwip/src/include/netif/ppp/pppapi.h	/^      struct netif *pppif;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon437	typeref:struct:pppapi_msg_msg::__anon435::__anon437::netif
pppif	lwip/src/include/netif/ppp/pppapi.h	/^      struct netif *pppif;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon438	typeref:struct:pppapi_msg_msg::__anon435::__anon438::netif
pppif	lwip/src/include/netif/ppp/pppapi.h	/^      struct netif *pppif;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon439	typeref:struct:pppapi_msg_msg::__anon435::__anon439::netif
pppoe_abort_connect	lwip/src/netif/ppp/pppoe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_callbacks	lwip/src/netif/ppp/pppoe.c	/^static const struct link_callbacks pppoe_callbacks = {$/;"	v	typeref:struct:link_callbacks	file:
pppoe_connect	lwip/src/netif/ppp/pppoe.c	/^pppoe_connect(ppp_pcb *ppp, void *ctx)$/;"	f	file:
pppoe_create	lwip/src/netif/ppp/pppoe.c	/^ppp_pcb *pppoe_create(struct netif *pppif,$/;"	f
pppoe_data_input	lwip/src/netif/ppp/pppoe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	lwip/src/netif/ppp/pppoe.c	/^pppoe_destroy(ppp_pcb *ppp, void *ctx)$/;"	f	file:
pppoe_disc_input	lwip/src/netif/ppp/pppoe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_disconnect	lwip/src/netif/ppp/pppoe.c	/^pppoe_disconnect(ppp_pcb *ppp, void *ctx)$/;"	f	file:
pppoe_find_softc_by_hunique	lwip/src/netif/ppp/pppoe.c	/^static struct pppoe_softc* pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif) {$/;"	f	file:
pppoe_find_softc_by_session	lwip/src/netif/ppp/pppoe.c	/^static struct pppoe_softc* pppoe_find_softc_by_session(u_int session, struct netif *rcvif) {$/;"	f	file:
pppoe_init	lwip/src/include/netif/ppp/pppoe.h	167;"	d
pppoe_netif_output	lwip/src/netif/ppp/pppoe.c	/^static err_t pppoe_netif_output(ppp_pcb *ppp, void *ctx, struct pbuf *p, u_short protocol) {$/;"	f	file:
pppoe_output	lwip/src/netif/ppp/pppoe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_send_padi	lwip/src/netif/ppp/pppoe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	lwip/src/netif/ppp/pppoe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	lwip/src/netif/ppp/pppoe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	lwip/src/netif/ppp/pppoe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	lwip/src/netif/ppp/pppoe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	lwip/src/include/netif/ppp/pppoe.h	/^struct pppoe_softc {$/;"	s
pppoe_softc_list	lwip/src/netif/ppp/pppoe.c	/^static struct pppoe_softc *pppoe_softc_list;$/;"	v	typeref:struct:pppoe_softc	file:
pppoe_timeout	lwip/src/netif/ppp/pppoe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_write	lwip/src/netif/ppp/pppoe.c	/^static err_t pppoe_write(ppp_pcb *ppp, void *ctx, struct pbuf *p) {$/;"	f	file:
pppoe_xmit	lwip/src/netif/ppp/pppoe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoehdr	lwip/src/include/netif/ppp/pppoe.h	/^struct pppoehdr {$/;"	s
pppoetag	lwip/src/include/netif/ppp/pppoe.h	/^struct pppoetag {$/;"	s
pppol2tp_abort_connect	lwip/src/netif/ppp/pppol2tp.c	/^static void pppol2tp_abort_connect(pppol2tp_pcb *l2tp) {$/;"	f	file:
pppol2tp_callbacks	lwip/src/netif/ppp/pppol2tp.c	/^static const struct link_callbacks pppol2tp_callbacks = {$/;"	v	typeref:struct:link_callbacks	file:
pppol2tp_connect	lwip/src/netif/ppp/pppol2tp.c	/^static void pppol2tp_connect(ppp_pcb *ppp, void *ctx) {$/;"	f	file:
pppol2tp_create	lwip/src/netif/ppp/pppol2tp.c	/^ppp_pcb *pppol2tp_create(struct netif *pppif,$/;"	f
pppol2tp_destroy	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_destroy(ppp_pcb *ppp, void *ctx) {$/;"	f	file:
pppol2tp_disconnect	lwip/src/netif/ppp/pppol2tp.c	/^static void pppol2tp_disconnect(ppp_pcb *ppp, void *ctx) {$/;"	f	file:
pppol2tp_dispatch_control_packet	lwip/src/netif/ppp/pppol2tp.c	/^static void pppol2tp_dispatch_control_packet(pppol2tp_pcb *l2tp, u16_t port, struct pbuf *p, u16_t ns, u16_t nr) {$/;"	f	file:
pppol2tp_input	lwip/src/netif/ppp/pppol2tp.c	/^static void pppol2tp_input(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t port) {$/;"	f	file:
pppol2tp_netif_output	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_netif_output(ppp_pcb *ppp, void *ctx, struct pbuf *p, u_short protocol) {$/;"	f	file:
pppol2tp_pcb	lwip/src/include/netif/ppp/pppol2tp.h	/^typedef struct pppol2tp_pcb_s pppol2tp_pcb;$/;"	t	typeref:struct:pppol2tp_pcb_s
pppol2tp_pcb_s	lwip/src/include/netif/ppp/pppol2tp.h	/^struct pppol2tp_pcb_s {$/;"	s
pppol2tp_send_iccn	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_send_iccn(pppol2tp_pcb *l2tp, u16_t ns) {$/;"	f	file:
pppol2tp_send_icrq	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_send_icrq(pppol2tp_pcb *l2tp, u16_t ns) {$/;"	f	file:
pppol2tp_send_scccn	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_send_scccn(pppol2tp_pcb *l2tp, u16_t ns) {$/;"	f	file:
pppol2tp_send_sccrq	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_send_sccrq(pppol2tp_pcb *l2tp) {$/;"	f	file:
pppol2tp_send_stopccn	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_send_stopccn(pppol2tp_pcb *l2tp, u16_t ns) {$/;"	f	file:
pppol2tp_send_zlb	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_send_zlb(pppol2tp_pcb *l2tp, u16_t ns, u16_t nr) {$/;"	f	file:
pppol2tp_timeout	lwip/src/netif/ppp/pppol2tp.c	/^static void pppol2tp_timeout(void *arg) {$/;"	f	file:
pppol2tp_udp_send	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_udp_send(pppol2tp_pcb *l2tp, struct pbuf *pb) {$/;"	f	file:
pppol2tp_write	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_write(ppp_pcb *ppp, void *ctx, struct pbuf *p) {$/;"	f	file:
pppol2tp_xmit	lwip/src/netif/ppp/pppol2tp.c	/^static err_t pppol2tp_xmit(pppol2tp_pcb *l2tp, struct pbuf *pb) {$/;"	f	file:
pppos_callbacks	lwip/src/netif/ppp/pppos.c	/^static const struct link_callbacks pppos_callbacks = {$/;"	v	typeref:struct:link_callbacks	file:
pppos_connect	lwip/src/netif/ppp/pppos.c	/^pppos_connect(ppp_pcb *ppp, void *ctx)$/;"	f	file:
pppos_create	lwip/src/netif/ppp/pppos.c	/^ppp_pcb *pppos_create(struct netif *pppif, pppos_output_cb_fn output_cb,$/;"	f
pppos_destroy	lwip/src/netif/ppp/pppos.c	/^pppos_destroy(ppp_pcb *ppp, void *ctx)$/;"	f	file:
pppos_disconnect	lwip/src/netif/ppp/pppos.c	/^pppos_disconnect(ppp_pcb *ppp, void *ctx)$/;"	f	file:
pppos_input	lwip/src/netif/ppp/pppos.c	/^pppos_input(ppp_pcb *ppp, u8_t *s, int l)$/;"	f
pppos_input_callback	lwip/src/netif/ppp/pppos.c	/^static void pppos_input_callback(void *arg) {$/;"	f	file:
pppos_input_drop	lwip/src/netif/ppp/pppos.c	/^pppos_input_drop(pppos_pcb *pppos)$/;"	f	file:
pppos_input_free_current_packet	lwip/src/netif/ppp/pppos.c	/^pppos_input_free_current_packet(pppos_pcb *pppos)$/;"	f	file:
pppos_input_header	lwip/src/netif/ppp/pppos.c	/^struct pppos_input_header {$/;"	s	file:
pppos_input_sys	lwip/src/netif/ppp/pppos.c	/^err_t pppos_input_sys(struct pbuf *p, struct netif *inp) {$/;"	f
pppos_input_tcpip	lwip/src/netif/ppp/pppos.c	/^pppos_input_tcpip(ppp_pcb *ppp, u8_t *s, int l)$/;"	f
pppos_listen	lwip/src/netif/ppp/pppos.c	/^pppos_listen(ppp_pcb *ppp, void *ctx)$/;"	f	file:
pppos_netif_output	lwip/src/netif/ppp/pppos.c	/^pppos_netif_output(ppp_pcb *ppp, void *ctx, struct pbuf *pb, u16_t protocol)$/;"	f	file:
pppos_output_append	lwip/src/netif/ppp/pppos.c	/^pppos_output_append(pppos_pcb *pppos, err_t err, struct pbuf *nb, u8_t c, u8_t accm, u16_t *fcs)$/;"	f	file:
pppos_output_cb_fn	lwip/src/include/netif/ppp/pppos.h	/^typedef u32_t (*pppos_output_cb_fn)(ppp_pcb *pcb, u8_t *data, u32_t len, void *ctx);$/;"	t
pppos_output_last	lwip/src/netif/ppp/pppos.c	/^pppos_output_last(pppos_pcb *pppos, err_t err, struct pbuf *nb, u16_t *fcs)$/;"	f	file:
pppos_pcb	lwip/src/include/netif/ppp/pppos.h	/^typedef struct pppos_pcb_s pppos_pcb;$/;"	t	typeref:struct:pppos_pcb_s
pppos_pcb_s	lwip/src/include/netif/ppp/pppos.h	/^struct pppos_pcb_s {$/;"	s
pppos_recv_config	lwip/src/netif/ppp/pppos.c	/^pppos_recv_config(ppp_pcb *ppp, void *ctx, u32_t accm, int pcomp, int accomp)$/;"	f	file:
pppos_send_config	lwip/src/netif/ppp/pppos.c	/^pppos_send_config(ppp_pcb *ppp, void *ctx, u32_t accm, int pcomp, int accomp)$/;"	f	file:
pppos_write	lwip/src/netif/ppp/pppos.c	/^pppos_write(ppp_pcb *ppp, void *ctx, struct pbuf *p)$/;"	f	file:
pppstat	lwip/src/include/netif/ppp/ppp_impl.h	/^struct pppstat	{$/;"	s
ppt_state_s	radio/sx1276.h	/^} ppt_state_s;$/;"	t	typeref:enum:__anon489
preDelay	drivers/fsl_spi.h	/^    uint8_t preDelay;      \/*!< Delay between SSEL assertion and the beginning of transfer. *\/$/;"	m	struct:_spi_delay_config
pre_emp	codec2/lpc.c	/^void pre_emp($/;"	f
preac2coef	drivers/fsl_dmic.h	/^    compensation_t preac2coef;          \/*!< Pre-emphasis Filter coefficient value for 2FS *\/$/;"	m	struct:_dmic_channel_config
preac4coef	drivers/fsl_dmic.h	/^    compensation_t preac4coef;          \/*!< Pre-emphasis Filter coefficient value for 4FS *\/$/;"	m	struct:_dmic_channel_config
predictor_1	lwip/src/include/netif/ppp/ccp.h	/^    unsigned int predictor_1      :1; \/* do Predictor-1? *\/$/;"	m	struct:ccp_options
predictor_2	lwip/src/include/netif/ppp/ccp.h	/^    unsigned int predictor_2      :1; \/* do Predictor-2? *\/$/;"	m	struct:ccp_options
prefix	codec2/dump.c	/^static char  prefix[MAX_STR];$/;"	v	file:
prefix	lwip/src/core/ipv6/nd6.c	/^  struct prefix_option  prefix;$/;"	m	union:ra_options	typeref:struct:ra_options::prefix_option	file:
prefix	lwip/src/include/lwip/priv/nd6_priv.h	/^  ip6_addr_t prefix;$/;"	m	struct:nd6_prefix_list_entry
prefix_list	lwip/src/core/ipv6/nd6.c	/^struct nd6_prefix_list_entry prefix_list[LWIP_ND6_NUM_PREFIXES];$/;"	v	typeref:struct:nd6_prefix_list_entry
prefix_option	lwip/src/include/lwip/prot/nd6.h	/^struct prefix_option {$/;"	s
prescale	drivers/fsl_ctimer.h	/^    uint32_t prescale;              \/*!< Prescale value *\/$/;"	m	struct:_ctimer_config
prescale_h	drivers/fsl_sctimer.h	/^    uint8_t prescale_h;                 \/*!< Prescale value to produce the H counter clock.$/;"	m	struct:_sctimer_config
prescale_l	drivers/fsl_sctimer.h	/^    uint8_t prescale_l;                 \/*!< Prescale value to produce the L or unified counter clock *\/$/;"	m	struct:_sctimer_config
present	usb/device/class/usb_device_ccid.h	/^    uint8_t present;     \/*!< Is present or not *\/$/;"	m	struct:_usb_device_ccid_slot_status_struct
presentationTimeStamp	usb/device/class/usb_device_video.h	/^                presentationTimeStamp : 1U; \/*!< Presentation Time Stamp. This bit, when set, indicates the presence of$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
prev	component/lists/generic_list.h	/^    struct list_element_tag *prev; \/*!< previous list element *\/$/;"	m	struct:list_element_tag	typeref:struct:list_element_tag::list_element_tag
prev	lwip/src/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	lwip/src/include/lwip/priv/sockets_priv.h	/^  struct lwip_select_cb *prev;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb
prev_e_dec	codec2/codec2_internal.h	/^    float         prev_e_dec;              \/* previous frame's LPC energy               *\/$/;"	m	struct:CODEC2
prev_f0_enc	codec2/codec2_internal.h	/^    float         prev_f0_enc;             \/* previous frame's f0    estimate           *\/$/;"	m	struct:CODEC2
prev_lsps_dec	codec2/codec2_internal.h	/^    float         prev_lsps_dec[LPC_ORD];  \/* previous frame's LSPs                     *\/$/;"	m	struct:CODEC2
prev_model_dec	codec2/codec2_internal.h	/^    MODEL         prev_model_dec;          \/* previous frame's model parameters         *\/$/;"	m	struct:CODEC2
prev_rate_K_vec_	codec2/codec2_internal.h	/^    float          prev_rate_K_vec_[NEWAMP1_K];$/;"	m	struct:CODEC2
print_link_stats	lwip/src/netif/ppp/ppp.c	/^void print_link_stats() {$/;"	f
printendpoint	lwip/src/netif/ppp/lcp.c	/^printendpoint(opt, printer, arg)$/;"	f	file:
printfCb	utilities/fsl_str.h	/^typedef void (*printfCb)(char *buf, int32_t *indicator, char val, int len);$/;"	t
printifaceid	lwip/src/netif/ppp/ipv6cp.c	/^printifaceid(opt, printer, arg)$/;"	f	file:
printipaddr	lwip/src/netif/ppp/ipcp.c	/^printipaddr(opt, printer, arg)$/;"	f	file:
printpkt	lwip/src/include/netif/ppp/ppp_impl.h	/^    int  (*printpkt) (const u_char *pkt, int len,$/;"	m	struct:protent
priv	lwip/src/include/netif/ppp/chap-new.h	/^	unsigned char priv[64];		\/* private area for digest's use *\/$/;"	m	struct:chap_client_state
probes_sent	lwip/src/include/lwip/priv/nd6_priv.h	/^    u32_t probes_sent;$/;"	m	union:nd6_neighbor_cache_entry::__anon453
process_exists	lwip/src/netif/ppp/multilink.c	88;"	d	file:
producerOdd	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t producerOdd : 1U;      \/*!< When priming one transaction, prime to this endpoint buffer *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
productId	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t productId[16];        \/*!< Product Identification*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
productVersionLevel	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t productVersionLevel[4]; \/*!< Product Revision Level*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
prog	littlefs/littlefs_include/lfs.h	/^    int (*prog)(const struct lfs_config *c, lfs_block_t block,$/;"	m	struct:lfs_config
prog_buffer	littlefs/littlefs_include/lfs.h	/^    void *prog_buffer;$/;"	m	struct:lfs_config
prog_size	littlefs/littlefs_include/lfs.h	/^    lfs_size_t prog_size;$/;"	m	struct:lfs_config
protent	lwip/src/include/netif/ppp/ppp_impl.h	/^struct protent {$/;"	s
proterr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_igmp
proterr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg::__anon454::__anon455
proto	lwip/src/netif/ppp/ppp.c	/^  u_short proto;$/;"	m	struct:protocol_list	file:
proto_name	lwip/src/include/netif/ppp/fsm.h	/^    const char *proto_name;	\/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	codec/fsl_wm8904.h	/^    wm8904_protocol_t protocol;   \/*!< Audio transfer protocol *\/$/;"	m	struct:_wm8904_config
protocol	lwip/src/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	lwip/src/include/netif/ppp/fsm.h	/^    u16_t protocol;		\/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	lwip/src/include/netif/ppp/ppp_impl.h	/^    u_short protocol;		\/* PPP protocol number *\/$/;"	m	struct:protent
protocol	usb/device/class/usb_device_hid.h	/^    uint8_t protocol;                               \/*!< Current protocol *\/$/;"	m	struct:_usb_device_hid_struct
protocolCode	usb/device/class/usb_device_class.h	/^    uint8_t protocolCode;                     \/*!< Protocol code of the interface*\/$/;"	m	struct:_usb_device_interfaces_struct
protocol_list	lwip/src/netif/ppp/ppp.c	/^struct protocol_list {$/;"	s	file:
protocol_list	lwip/src/netif/ppp/ppp.c	/^} const protocol_list[] = {$/;"	v
protocol_name	lwip/src/netif/ppp/ppp.c	/^const char * protocol_name(int proto) {$/;"	f
protocols	lwip/src/netif/ppp/ppp.c	/^const struct protent* const protocols[] = {$/;"	v
protrej	lwip/src/include/netif/ppp/ppp_impl.h	/^    void (*protrej) (ppp_pcb *pcb);$/;"	m	struct:protent
protreject	lwip/src/include/netif/ppp/fsm.h	/^    void (*protreject)		\/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
prvAddCurrentTaskToDelayedList	amazon-freertos/freertos/tasks.c	/^static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )$/;"	f	file:
prvAddNewTaskToReadyList	amazon-freertos/freertos/tasks.c	/^static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )$/;"	f	file:
prvAddTaskToReadyList	amazon-freertos/freertos/tasks.c	218;"	d	file:
prvBytesInBuffer	amazon-freertos/freertos/stream_buffer.c	/^static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )$/;"	f	file:
prvCheckForValidListAndQueue	amazon-freertos/freertos/timers.c	/^static void prvCheckForValidListAndQueue( void )$/;"	f	file:
prvCheckTasksWaitingTermination	amazon-freertos/freertos/tasks.c	/^static void prvCheckTasksWaitingTermination( void )$/;"	f	file:
prvCopyDataFromQueue	amazon-freertos/freertos/queue.c	/^static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )$/;"	f	file:
prvCopyDataToQueue	amazon-freertos/freertos/queue.c	/^static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )$/;"	f	file:
prvDeleteTCB	amazon-freertos/freertos/tasks.c	/^	static void prvDeleteTCB( TCB_t *pxTCB )$/;"	f	file:
prvGetDisinheritPriorityAfterTimeout	amazon-freertos/freertos/queue.c	/^	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )$/;"	f	file:
prvGetExpectedIdleTime	amazon-freertos/freertos/tasks.c	/^	static TickType_t prvGetExpectedIdleTime( void )$/;"	f	file:
prvGetNextExpireTime	amazon-freertos/freertos/timers.c	/^static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )$/;"	f	file:
prvGetTCBFromHandle	amazon-freertos/freertos/tasks.c	231;"	d	file:
prvHeapInit	amazon-freertos/freertos/portable/heap_2.c	/^static void prvHeapInit( void )$/;"	f	file:
prvHeapInit	amazon-freertos/freertos/portable/heap_4.c	/^static void prvHeapInit( void )$/;"	f	file:
prvInitialiseMutex	amazon-freertos/freertos/queue.c	/^	static void prvInitialiseMutex( Queue_t *pxNewQueue )$/;"	f	file:
prvInitialiseNewQueue	amazon-freertos/freertos/queue.c	/^static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, const uint8_t ucQueueType, Queue_t *pxNewQueue )$/;"	f	file:
prvInitialiseNewStreamBuffer	amazon-freertos/freertos/stream_buffer.c	/^static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,$/;"	f	file:
prvInitialiseNewTask	amazon-freertos/freertos/tasks.c	/^static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,$/;"	f	file:
prvInitialiseNewTimer	amazon-freertos/freertos/timers.c	/^static void prvInitialiseNewTimer(	const char * const pcTimerName,			\/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f	file:
prvInitialiseTaskLists	amazon-freertos/freertos/tasks.c	/^static void prvInitialiseTaskLists( void )$/;"	f	file:
prvInsertBlockIntoFreeList	amazon-freertos/freertos/portable/heap_2.c	97;"	d	file:
prvInsertBlockIntoFreeList	amazon-freertos/freertos/portable/heap_4.c	/^static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )$/;"	f	file:
prvInsertBlockIntoFreeList	amazon-freertos/freertos/portable/heap_5.c	/^static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )$/;"	f	file:
prvInsertTimerInActiveList	amazon-freertos/freertos/timers.c	/^static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiryTime, const TickType_t xTimeNow, const TickType_t xCommandTime )$/;"	f	file:
prvIsQueueEmpty	amazon-freertos/freertos/queue.c	/^static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )$/;"	f	file:
prvIsQueueFull	amazon-freertos/freertos/queue.c	/^static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )$/;"	f	file:
prvListTasksWithinSingleList	amazon-freertos/freertos/tasks.c	/^	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, eTaskState eState )$/;"	f	file:
prvLockQueue	amazon-freertos/freertos/queue.c	240;"	d	file:
prvNotifyQueueSetContainer	amazon-freertos/freertos/queue.c	/^	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )$/;"	f	file:
prvPortStartFirstTask	amazon-freertos/freertos/portable/port.c	/^static void prvPortStartFirstTask( void )$/;"	f	file:
prvProcessExpiredTimer	amazon-freertos/freertos/timers.c	/^static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )$/;"	f	file:
prvProcessReceivedCommands	amazon-freertos/freertos/timers.c	/^static void	prvProcessReceivedCommands( void )$/;"	f	file:
prvProcessTimerOrBlockTask	amazon-freertos/freertos/timers.c	/^static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty )$/;"	f	file:
prvReadBytesFromBuffer	amazon-freertos/freertos/stream_buffer.c	/^static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer, uint8_t *pucData, size_t xMaxCount, size_t xBytesAvailable )$/;"	f	file:
prvReadMessageFromBuffer	amazon-freertos/freertos/stream_buffer.c	/^static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,$/;"	f	file:
prvResetNextTaskUnblockTime	amazon-freertos/freertos/tasks.c	/^static void prvResetNextTaskUnblockTime( void )$/;"	f	file:
prvSampleTimeNow	amazon-freertos/freertos/timers.c	/^static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )$/;"	f	file:
prvSearchForNameWithinSingleList	amazon-freertos/freertos/tasks.c	/^	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )$/;"	f	file:
prvSwitchTimerLists	amazon-freertos/freertos/timers.c	/^static void prvSwitchTimerLists( void )$/;"	f	file:
prvTaskCheckFreeStackSpace	amazon-freertos/freertos/tasks.c	/^	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )$/;"	f	file:
prvTaskExitError	amazon-freertos/freertos/portable/port.c	/^static void prvTaskExitError( void )$/;"	f	file:
prvTaskIsTaskSuspended	amazon-freertos/freertos/tasks.c	/^	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )$/;"	f	file:
prvTestWaitCondition	amazon-freertos/freertos/event_groups.c	/^static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxBitsToWaitFor, const BaseType_t xWaitForAllBits )$/;"	f	file:
prvUnlockQueue	amazon-freertos/freertos/queue.c	/^static void prvUnlockQueue( Queue_t * const pxQueue )$/;"	f	file:
prvWriteBytesToBuffer	amazon-freertos/freertos/stream_buffer.c	/^static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData, size_t xCount )$/;"	f	file:
prvWriteMessageToBuffer	amazon-freertos/freertos/stream_buffer.c	/^static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,$/;"	f	file:
prvWriteNameToBuffer	amazon-freertos/freertos/tasks.c	/^	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )$/;"	f	file:
psel	drivers/fsl_clock.h	/^    uint8_t psel;       \/*!< USB PLL control register psel:only support inter 1U 2U 4U 8U *\/$/;"	m	struct:_usb_pll_setup
ptp1588V2Enable	drivers/fsl_enet.h	/^    bool ptp1588V2Enable;             \/*!< ptp 1588 version 2 is used. *\/$/;"	m	struct:_enet_ptp_config
ptpConfig	drivers/fsl_enet.h	/^    enet_ptp_config_t *ptpConfig; \/*!< PTP 1588 feature configuration *\/$/;"	m	struct:_enet_config
ptpTsData	drivers/fsl_enet.h	/^    enet_ptp_time_data_t *ptpTsData; \/*!< PTP message data structure. *\/$/;"	m	struct:_enet_ptp_time_data_ring
ptpTsRxBuffNum	drivers/fsl_enet.h	/^    uint8_t ptpTsRxBuffNum;            \/*!< Receive 1588 timestamp buffer number*\/$/;"	m	struct:_enet_buffer_config
ptpTsTxBuffNum	drivers/fsl_enet.h	/^    uint8_t ptpTsTxBuffNum;            \/*!< Transmit 1588 timestamp buffer number*\/$/;"	m	struct:_enet_buffer_config
ptr	lwip/src/include/lwip/api.h	/^  const void *ptr;$/;"	m	struct:netvector
ptr	lwip/src/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	lwip/src/netif/ppp/utils.c	/^    char *ptr;$/;"	m	struct:buffer_info	file:
ptr_to_mem	lwip/src/core/mem.c	/^ptr_to_mem(mem_size_t ptr)$/;"	f	file:
ptt_handler	source/main.c	/^TaskHandle_t ptt_handler;$/;"	v
ptt_main	source/main.c	/^void ptt_main(void *handle)$/;"	f
ptt_state	radio/radio.c	/^ppt_state_s ptt_state = PTT_RELEASE;$/;"	v
pucBuffer	amazon-freertos/freertos/stream_buffer.c	/^	uint8_t *pucBuffer;					\/* Points to the buffer itself - that is - the RAM that stores the data passed through the buffer. *\/$/;"	m	struct:StreamBufferDef_t	file:
pucStartAddress	amazon-freertos/include/portable.h	/^	uint8_t *pucStartAddress;$/;"	m	struct:HeapRegion
puxStackBuffer	amazon-freertos/include/task.h	/^	StackType_t *puxStackBuffer;$/;"	m	struct:xTASK_PARAMETERS
pvBaseAddress	amazon-freertos/include/task.h	/^	void *pvBaseAddress;$/;"	m	struct:xMEMORY_REGION
pvCoeffs	CMSIS/arm_math.h	/^    float32_t *pvCoeffs;                 \/**< points to the ladder coefficient array. The array is of length numStages+1. *\/$/;"	m	struct:__anon101
pvCoeffs	CMSIS/arm_math.h	/^    q15_t *pvCoeffs;                     \/**< points to the ladder coefficient array. The array is of length numStages+1. *\/$/;"	m	struct:__anon99
pvCoeffs	CMSIS/arm_math.h	/^    q31_t *pvCoeffs;                     \/**< points to the ladder coefficient array. The array is of length numStages+1. *\/$/;"	m	struct:__anon100
pvDummy1	amazon-freertos/include/FreeRTOS.h	/^	void				*pvDummy1;$/;"	m	struct:xSTATIC_TIMER
pvDummy1	amazon-freertos/include/FreeRTOS.h	/^	void *pvDummy1[ 3 ];$/;"	m	struct:xSTATIC_QUEUE
pvDummy15	amazon-freertos/include/FreeRTOS.h	/^		void			*pvDummy15[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];$/;"	m	struct:xSTATIC_TCB
pvDummy2	amazon-freertos/include/FreeRTOS.h	/^		void *pvDummy2;$/;"	m	union:xSTATIC_QUEUE::__anon5
pvDummy2	amazon-freertos/include/FreeRTOS.h	/^	void * pvDummy2[ 3 ];$/;"	m	struct:xSTATIC_STREAM_BUFFER
pvDummy3	amazon-freertos/include/FreeRTOS.h	/^	void *pvDummy3;$/;"	m	struct:xSTATIC_LIST
pvDummy3	amazon-freertos/include/FreeRTOS.h	/^	void *pvDummy3[ 2 ];$/;"	m	struct:xSTATIC_MINI_LIST_ITEM
pvDummy3	amazon-freertos/include/FreeRTOS.h	/^	void *pvDummy3[ 4 ];$/;"	m	struct:xSTATIC_LIST_ITEM
pvDummy5	amazon-freertos/include/FreeRTOS.h	/^	void 				*pvDummy5;$/;"	m	struct:xSTATIC_TIMER
pvDummy6	amazon-freertos/include/FreeRTOS.h	/^	TaskFunction_t		pvDummy6;$/;"	m	struct:xSTATIC_TIMER
pvDummy7	amazon-freertos/include/FreeRTOS.h	/^		void *pvDummy7;$/;"	m	struct:xSTATIC_QUEUE
pvOwner	amazon-freertos/include/list.h	/^	void * pvOwner;										\/*< Pointer to the object (normally a TCB) that contains the list item.  There is therefore a two way link between the object containing the list item and the list item itself. *\/$/;"	m	struct:xLIST_ITEM
pvParameter1	amazon-freertos/freertos/timers.c	/^	void *pvParameter1;						\/* << The value that will be used as the callback functions first parameter. *\/$/;"	m	struct:tmrCallbackParameters	file:
pvParameters	amazon-freertos/include/task.h	/^	void *pvParameters;$/;"	m	struct:xTASK_PARAMETERS
pvParameters	source/common.h	/^	void * const pvParameters;$/;"	m	struct:_TaskWork
pvPortMalloc	amazon-freertos/freertos/portable/heap_1.c	/^void *pvPortMalloc( size_t xWantedSize )$/;"	f
pvPortMalloc	amazon-freertos/freertos/portable/heap_2.c	/^void *pvPortMalloc( size_t xWantedSize )$/;"	f
pvPortMalloc	amazon-freertos/freertos/portable/heap_3.c	/^void *pvPortMalloc( size_t xWantedSize )$/;"	f
pvPortMalloc	amazon-freertos/freertos/portable/heap_4.c	/^void *pvPortMalloc( size_t xWantedSize )$/;"	f
pvPortMalloc	amazon-freertos/freertos/portable/heap_5.c	/^void *pvPortMalloc( size_t xWantedSize )$/;"	f
pvTaskCode	amazon-freertos/include/task.h	/^	TaskFunction_t pvTaskCode;$/;"	m	struct:xTASK_PARAMETERS
pvTaskGetThreadLocalStoragePointer	amazon-freertos/freertos/tasks.c	/^	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )$/;"	f
pvTaskGetThreadLocalStoragePointer	amazon-freertos/include/mpu_wrappers.h	74;"	d
pvTaskIncrementMutexHeldCount	amazon-freertos/freertos/tasks.c	/^	TaskHandle_t pvTaskIncrementMutexHeldCount( void )$/;"	f
pvThreadLocalStoragePointers	amazon-freertos/freertos/tasks.c	/^		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];$/;"	m	struct:tskTaskControlBlock	file:
pvTimerGetTimerID	amazon-freertos/freertos/timers.c	/^void *pvTimerGetTimerID( const TimerHandle_t xTimer )$/;"	f
pvTimerGetTimerID	amazon-freertos/include/mpu_wrappers.h	123;"	d
pvTimerID	amazon-freertos/freertos/timers.c	/^	void 					*pvTimerID;			\/*<< An ID to identify the timer.  This allows the timer to be identified when the same callback is used for multiple timers. *\/$/;"	m	struct:tmrTimerControl	file:
pxCallbackFunction	amazon-freertos/freertos/timers.c	/^	PendedFunction_t	pxCallbackFunction;	\/* << The callback function to execute. *\/$/;"	m	struct:tmrCallbackParameters	file:
pxCallbackFunction	amazon-freertos/freertos/timers.c	/^	TimerCallbackFunction_t	pxCallbackFunction;	\/*<< The function that will be called when the timer expires. *\/$/;"	m	struct:tmrTimerControl	file:
pxContainer	amazon-freertos/include/FreeRTOS.h	942;"	d
pxContainer	amazon-freertos/include/list.h	/^	struct xLIST * configLIST_VOLATILE pxContainer;		\/*< Pointer to the list in which this list item is placed (if any). *\/$/;"	m	struct:xLIST_ITEM	typeref:struct:xLIST_ITEM::configLIST_VOLATILE
pxCurrentTCB	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;$/;"	v
pxCurrentTimerList	amazon-freertos/freertos/timers.c	/^PRIVILEGED_DATA static List_t *pxCurrentTimerList;$/;"	v	file:
pxDelayedTaskList	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				\/*< Points to the delayed task list currently being used. *\/$/;"	v	file:
pxDummy1	amazon-freertos/include/FreeRTOS.h	/^	void				*pxDummy1;$/;"	m	struct:xSTATIC_TCB
pxDummy14	amazon-freertos/include/FreeRTOS.h	/^		void			*pxDummy14;$/;"	m	struct:xSTATIC_TCB
pxDummy6	amazon-freertos/include/FreeRTOS.h	/^	void				*pxDummy6;$/;"	m	struct:xSTATIC_TCB
pxDummy8	amazon-freertos/include/FreeRTOS.h	/^		void			*pxDummy8;$/;"	m	struct:xSTATIC_TCB
pxEnd	amazon-freertos/freertos/portable/heap_4.c	/^static BlockLink_t xStart, *pxEnd = NULL;$/;"	v	file:
pxEnd	amazon-freertos/freertos/portable/heap_5.c	/^static BlockLink_t xStart, *pxEnd = NULL;$/;"	v	file:
pxEndOfStack	amazon-freertos/freertos/tasks.c	/^		StackType_t		*pxEndOfStack;		\/*< Points to the highest valid address for the stack. *\/$/;"	m	struct:tskTaskControlBlock	file:
pxISR	amazon-freertos/include/deprecated_definitions.h	/^	typedef void ( __interrupt __far *pxISR )();$/;"	t
pxISR	amazon-freertos/include/deprecated_definitions.h	/^    typedef void ( __interrupt __far *pxISR )();$/;"	t
pxIndex	amazon-freertos/include/list.h	/^	ListItem_t * configLIST_VOLATILE pxIndex;			\/*< Used to walk through the list.  Points to the last item returned by a call to listGET_OWNER_OF_NEXT_ENTRY (). *\/$/;"	m	struct:xLIST
pxNext	amazon-freertos/include/list.h	/^	struct xLIST_ITEM * configLIST_VOLATILE pxNext;		\/*< Pointer to the next ListItem_t in the list. *\/$/;"	m	struct:xLIST_ITEM	typeref:struct:xLIST_ITEM::configLIST_VOLATILE
pxNext	amazon-freertos/include/list.h	/^	struct xLIST_ITEM * configLIST_VOLATILE pxNext;$/;"	m	struct:xMINI_LIST_ITEM	typeref:struct:xMINI_LIST_ITEM::configLIST_VOLATILE
pxNextFreeBlock	amazon-freertos/freertos/portable/heap_2.c	/^	struct A_BLOCK_LINK *pxNextFreeBlock;	\/*<< The next free block in the list. *\/$/;"	m	struct:A_BLOCK_LINK	typeref:struct:A_BLOCK_LINK::A_BLOCK_LINK	file:
pxNextFreeBlock	amazon-freertos/freertos/portable/heap_4.c	/^	struct A_BLOCK_LINK *pxNextFreeBlock;	\/*<< The next free block in the list. *\/$/;"	m	struct:A_BLOCK_LINK	typeref:struct:A_BLOCK_LINK::A_BLOCK_LINK	file:
pxNextFreeBlock	amazon-freertos/freertos/portable/heap_5.c	/^	struct A_BLOCK_LINK *pxNextFreeBlock;	\/*<< The next free block in the list. *\/$/;"	m	struct:A_BLOCK_LINK	typeref:struct:A_BLOCK_LINK::A_BLOCK_LINK	file:
pxOverflowDelayedTaskList	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		\/*< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. *\/$/;"	v	file:
pxOverflowTimerList	amazon-freertos/freertos/timers.c	/^PRIVILEGED_DATA static List_t *pxOverflowTimerList;$/;"	v	file:
pxPortInitialiseStack	amazon-freertos/freertos/portable/port.c	/^StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters )$/;"	f
pxPrevious	amazon-freertos/include/list.h	/^	struct xLIST_ITEM * configLIST_VOLATILE pxPrevious;	\/*< Pointer to the previous ListItem_t in the list. *\/$/;"	m	struct:xLIST_ITEM	typeref:struct:xLIST_ITEM::configLIST_VOLATILE
pxPrevious	amazon-freertos/include/list.h	/^	struct xLIST_ITEM * configLIST_VOLATILE pxPrevious;$/;"	m	struct:xMINI_LIST_ITEM	typeref:struct:xMINI_LIST_ITEM::configLIST_VOLATILE
pxQueueSetContainer	amazon-freertos/freertos/queue.c	/^		struct QueueDefinition *pxQueueSetContainer;$/;"	m	struct:QueueDefinition	typeref:struct:QueueDefinition::QueueDefinition	file:
pxReadyTasksLists	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];\/*< Prioritised ready tasks. *\/$/;"	v	file:
pxStack	amazon-freertos/freertos/tasks.c	/^	StackType_t			*pxStack;			\/*< Points to the start of the stack. *\/$/;"	m	struct:tskTaskControlBlock	file:
pxStackBase	amazon-freertos/include/task.h	/^	StackType_t *pxStackBase;		\/* Points to the lowest address of the task's stack area. *\/$/;"	m	struct:xTASK_STATUS
pxTaskBuffer	amazon-freertos/include/task.h	/^		StaticTask_t * const pxTaskBuffer;$/;"	m	struct:xTASK_PARAMETERS
pxTaskCode	source/common.h	/^	TaskFunction_t pxTaskCode;$/;"	m	struct:_TaskWork
pxTaskTag	amazon-freertos/freertos/tasks.c	/^		TaskHookFunction_t pxTaskTag;$/;"	m	struct:tskTaskControlBlock	file:
pxTimer	amazon-freertos/freertos/timers.c	/^	Timer_t *			pxTimer;			\/*<< The timer to which the command will be applied. *\/$/;"	m	struct:tmrTimerParameters	file:
pxTopOfStack	amazon-freertos/freertos/tasks.c	/^	volatile StackType_t	*pxTopOfStack;	\/*< Points to the location of the last item placed on the tasks stack.  THIS MUST BE THE FIRST MEMBER OF THE TCB STRUCT. *\/$/;"	m	struct:tskTaskControlBlock	file:
q	lwip/src/core/ipv4/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	lwip/src/include/lwip/priv/nd6_priv.h	/^  struct nd6_q_entry *q;$/;"	m	struct:nd6_neighbor_cache_entry	typeref:struct:nd6_neighbor_cache_entry::nd6_q_entry
q	lwip/src/include/lwip/priv/nd6_priv.h	/^  struct pbuf *q;$/;"	m	struct:nd6_neighbor_cache_entry	typeref:struct:nd6_neighbor_cache_entry::pbuf
q	lwip/src/netif/slipif.c	/^  struct pbuf *p, *q;$/;"	m	struct:slipif_priv	typeref:struct:slipif_priv::	file:
q15_t	CMSIS/arm_math.h	/^  typedef int16_t q15_t;$/;"	t
q31_t	CMSIS/arm_math.h	/^  typedef int32_t q31_t;$/;"	t
q63_t	CMSIS/arm_math.h	/^  typedef int64_t q63_t;$/;"	t
q7_t	CMSIS/arm_math.h	/^  typedef int8_t q7_t;$/;"	t
q_scale_factor	codec2/mpdecode_core.h	/^    int q_scale_factor;$/;"	m	struct:LDPC
qh	usb/device/source/ehci/usb_device_ehci.h	/^    usb_device_ehci_qh_struct_t *qh;       \/*!< The QH structure base address *\/$/;"	m	struct:_usb_device_ehci_state_struct
qh_buffer	usb/device/source/ehci/usb_device_ehci.c	/^USB_CONTROLLER_DATA static uint8_t qh_buffer[(USB_DEVICE_CONFIG_EHCI - 1) * 2048 +$/;"	v	file:
qualAddress	drivers/fsl_i2c.h	/^    uint8_t qualAddress;                    \/*!< Slave address qualifier for address 0. *\/$/;"	m	struct:_i2c_slave_config
qualMode	drivers/fsl_i2c.h	/^    i2c_slave_address_qual_mode_t qualMode; \/*!< Qualify mode for slave address 0. *\/$/;"	m	struct:_i2c_slave_config
quantise	codec2/quantise.c	/^long quantise(const float * cb, float vec[], float w[], int k, int m, float *se)$/;"	f
quantise_WoE	codec2/quantise.c	/^void quantise_WoE(C2CONST *c2const, MODEL *model, float *e, float xq[])$/;"	f
quantise_init	codec2/quantise.c	/^void quantise_init()$/;"	f
queue	osa/usb_osa_freertos.c	/^    StaticQueue_t queue;                                   \/* queue struct *\/$/;"	m	struct:_usb_osa_msgq_struct	file:
queueDescriptor	drivers/fsl_i2s_dma.c	/^    volatile uint8_t queueDescriptor;                         \/*!< Queue index of buffer to be actually consumed by DMA$/;"	m	struct:_i2s_dma_private_handle	file:
queueDriver	drivers/fsl_i2s.h	/^    volatile uint8_t queueDriver;                      \/*!< Queue index of buffer actually used by the driver *\/$/;"	m	struct:_i2s_handle
queueDriver	drivers/fsl_i2s_dma.h	/^    volatile uint8_t queueDriver;                      \/*!< Queue index of buffer actually used by the driver *\/$/;"	m	struct:_i2s_dma_handle
queueLOCKED_UNMODIFIED	amazon-freertos/freertos/queue.c	53;"	d	file:
queueMUTEX_GIVE_BLOCK_TIME	amazon-freertos/freertos/queue.c	82;"	d	file:
queueOVERWRITE	amazon-freertos/include/queue.h	67;"	d
queueQUEUE_IS_MUTEX	amazon-freertos/freertos/queue.c	65;"	d	file:
queueQUEUE_TYPE_BASE	amazon-freertos/include/queue.h	70;"	d
queueQUEUE_TYPE_BINARY_SEMAPHORE	amazon-freertos/include/queue.h	74;"	d
queueQUEUE_TYPE_COUNTING_SEMAPHORE	amazon-freertos/include/queue.h	73;"	d
queueQUEUE_TYPE_MUTEX	amazon-freertos/include/queue.h	72;"	d
queueQUEUE_TYPE_RECURSIVE_MUTEX	amazon-freertos/include/queue.h	75;"	d
queueQUEUE_TYPE_SET	amazon-freertos/include/queue.h	71;"	d
queueSEMAPHORE_QUEUE_ITEM_LENGTH	amazon-freertos/freertos/queue.c	81;"	d	file:
queueSEND_TO_BACK	amazon-freertos/include/queue.h	65;"	d
queueSEND_TO_FRONT	amazon-freertos/include/queue.h	66;"	d
queueUNLOCKED	amazon-freertos/freertos/queue.c	52;"	d	file:
queueUser	drivers/fsl_i2s.h	/^    volatile uint8_t queueUser;                        \/*!< Queue index where user's next transfer will be stored *\/$/;"	m	struct:_i2s_handle
queueUser	drivers/fsl_i2s_dma.h	/^    volatile uint8_t queueUser;                        \/*!< Queue index where user's next transfer will be stored *\/$/;"	m	struct:_i2s_dma_handle
queueYIELD_IF_USING_PREEMPTION	amazon-freertos/freertos/queue.c	87;"	d	file:
queueYIELD_IF_USING_PREEMPTION	amazon-freertos/freertos/queue.c	89;"	d	file:
r	codec2/kiss_fft.h	/^    kiss_fft_scalar r;$/;"	m	struct:__anon131
r	lwip/src/include/lwip/priv/api_msg.h	/^    } r;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::__anon459
rAS_Nclk	drivers/fsl_emc.h	/^    uint8_t rAS_Nclk;         \/*!< Active to read\/write delay tRCD. *\/$/;"	m	struct:_emc_dynamic_chip_config
rClient	emwin/emWin_header/FRAMEWIN_Private.h	/^  GUI_RECT rClient;$/;"	m	struct:__anon281
rDirty	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  GUI_RECT rDirty;$/;"	m	struct:__anon370
rDirty	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  GUI_RECT rDirty;$/;"	m	struct:DRIVER_CONTEXT
rPrev	emwin/emWin_header/GUI.h	/^  GUI_RECT rView, rPrev;$/;"	m	struct:__anon393
rRestore	emwin/emWin_header/FRAMEWIN_Private.h	/^  GUI_RECT                rRestore;$/;"	m	struct:__anon280
rText	emwin/emWin_header/TREEVIEW.h	/^  GUI_RECT rText;$/;"	m	struct:__anon372
rTitleText	emwin/emWin_header/FRAMEWIN_Private.h	/^  GUI_RECT rTitleText;$/;"	m	struct:__anon281
rView	emwin/emWin_header/GUI.h	/^  GUI_RECT rView, rPrev;$/;"	m	struct:__anon393
r_scale_factor	codec2/mpdecode_core.h	/^    int r_scale_factor;$/;"	m	struct:LDPC
ra_header	lwip/src/include/lwip/prot/nd6.h	/^struct ra_header {$/;"	s
ra_options	lwip/src/core/ipv6/nd6.c	/^union ra_options {$/;"	u	file:
radio_PttPress	radio/radio.c	/^void radio_PttPress()$/;"	f
radio_PttRelease	radio/radio.c	/^void radio_PttRelease()$/;"	f
radio_Sendmsg	radio/radio.c	/^void radio_Sendmsg()$/;"	f
radio_main	radio/radio.c	/^void radio_main(void *handle)$/;"	f
radio_s	radio/sx1276.h	/^} radio_s;$/;"	t	typeref:enum:__anon488
radio_state	radio/radio.c	/^radio_s radio_state = RADIO_IDLE;$/;"	v
radio_tx_main	radio/radio.c	/^void radio_tx_main(void *handle)$/;"	f
ram	lwip/src/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram_end	lwip/src/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
rate_K_mbest_encode	codec2/newamp1.c	/^float rate_K_mbest_encode(int *indexes, float *x, float *xq, int ndim, int mbest_entries)$/;"	f
rate_K_sample_freqs_kHz	codec2/codec2_internal.h	/^    float          rate_K_sample_freqs_kHz[NEWAMP1_K];$/;"	m	struct:CODEC2
ratio	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int ratio;		\/* recent compression ratio << 8 *\/$/;"	m	struct:compstat
raw	lwip/src/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon446	typeref:struct:netconn::__anon446::raw_pcb
raw_bind	lwip/src/core/raw.c	/^raw_bind(struct raw_pcb *pcb, const ip_addr_t *ipaddr)$/;"	f
raw_bind_netif	lwip/src/core/raw.c	/^raw_bind_netif(struct raw_pcb *pcb, const struct netif *netif)$/;"	f
raw_clear_flags	lwip/src/include/lwip/raw.h	122;"	d
raw_connect	lwip/src/core/raw.c	/^raw_connect(struct raw_pcb *pcb, const ip_addr_t *ipaddr)$/;"	f
raw_disconnect	lwip/src/core/raw.c	/^raw_disconnect(struct raw_pcb *pcb)$/;"	f
raw_flags	lwip/src/include/lwip/raw.h	118;"	d
raw_get_multicast_netif_index	lwip/src/include/lwip/raw.h	132;"	d
raw_get_multicast_ttl	lwip/src/include/lwip/raw.h	134;"	d
raw_init	lwip/src/include/lwip/raw.h	125;"	d
raw_input	lwip/src/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_input_local_match	lwip/src/core/raw.c	/^raw_input_local_match(struct raw_pcb *pcb, u8_t broadcast)$/;"	f	file:
raw_input_state	lwip/src/include/lwip/priv/raw_priv.h	/^typedef enum raw_input_state$/;"	g
raw_input_state_t	lwip/src/include/lwip/priv/raw_priv.h	/^} raw_input_state_t;$/;"	t	typeref:enum:raw_input_state
raw_is_flag_set	lwip/src/include/lwip/raw.h	123;"	d
raw_netif_ip_addr_changed	lwip/src/core/raw.c	/^void raw_netif_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)$/;"	f
raw_new	lwip/src/core/raw.c	/^raw_new(u8_t proto)$/;"	f
raw_new_ip6	lwip/src/include/lwip/raw.h	128;"	d
raw_new_ip_type	lwip/src/core/raw.c	/^raw_new_ip_type(u8_t type, u8_t proto)$/;"	f
raw_pcb	lwip/src/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	lwip/src/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_recv	lwip/src/core/raw.c	/^raw_recv(struct raw_pcb *pcb, raw_recv_fn recv, void *recv_arg)$/;"	f
raw_recv_fn	lwip/src/include/lwip/raw.h	/^typedef u8_t (*raw_recv_fn)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	t
raw_remove	lwip/src/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	lwip/src/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	lwip/src/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, const ip_addr_t *ipaddr)$/;"	f
raw_sendto_if_src	lwip/src/core/raw.c	/^raw_sendto_if_src(struct raw_pcb *pcb, struct pbuf *p, const ip_addr_t *dst_ip,$/;"	f
raw_set_flags	lwip/src/include/lwip/raw.h	121;"	d
raw_set_multicast_netif_index	lwip/src/include/lwip/raw.h	131;"	d
raw_set_multicast_ttl	lwip/src/include/lwip/raw.h	133;"	d
raw_setflags	lwip/src/include/lwip/raw.h	119;"	d
rcache	littlefs/littlefs_include/lfs.h	/^    lfs_cache_t rcache;$/;"	m	struct:lfs
rcv_ann_right_edge	lwip/src/include/lwip/tcp.h	/^  u32_t rcv_ann_right_edge; \/* announced right edge of window *\/$/;"	m	struct:tcp_pcb
rcv_ann_wnd	lwip/src/include/lwip/tcp.h	/^  tcpwnd_size_t rcv_ann_wnd; \/* receiver window to announce *\/$/;"	m	struct:tcp_pcb
rcv_nxt	lwip/src/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_sacks	lwip/src/include/lwip/tcp.h	/^  struct tcp_sack_range rcv_sacks[LWIP_TCP_MAX_SACK_NUM];$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_sack_range
rcv_scale	lwip/src/include/lwip/tcp.h	/^  u8_t rcv_scale;$/;"	m	struct:tcp_pcb
rcv_wnd	lwip/src/include/lwip/tcp.h	/^  tcpwnd_size_t rcv_wnd;   \/* receiver window available *\/$/;"	m	struct:tcp_pcb
rcvevent	lwip/src/include/lwip/priv/sockets_priv.h	/^  s16_t rcvevent;$/;"	m	struct:lwip_sock
rdnss	lwip/src/core/ipv6/nd6.c	/^  struct rdnss_option   rdnss;$/;"	m	union:ra_options	typeref:struct:ra_options::rdnss_option	file:
rdnss_option	lwip/src/include/lwip/prot/nd6.h	/^struct rdnss_option {$/;"	s
reachable_time	lwip/src/core/ipv6/nd6.c	/^u32_t reachable_time = LWIP_ND6_REACHABLE_TIME;$/;"	v
reachable_time	lwip/src/include/lwip/priv/nd6_priv.h	/^    u32_t reachable_time; \/* in seconds *\/$/;"	m	union:nd6_neighbor_cache_entry::__anon453
read	littlefs/littlefs_include/lfs.h	/^    int (*read)(const struct lfs_config *c, lfs_block_t block,$/;"	m	struct:lfs_config
read	lwip/src/include/lwip/sockets.h	664;"	d
readBuffer	component/serial_manager/serial_port_uart.c	/^    uint8_t readBuffer[SERIAL_PORT_UART_RECEIVE_DATA_LENGTH];$/;"	m	struct:_serial_uart_recv_state	file:
readCapacity	usb/device/class/usb_device_msc.h	/^    usb_device_read_capacity_struct_t *readCapacity;                 \/*!< READ CAPACITY Data*\/$/;"	m	struct:_usb_device_msc_ufi_struct
readCapacity1	usb/device/class/usb_device_msc.c	/^USB_GLOBAL USB_RAM_ADDRESS_ALIGNMENT(USB_DATA_ALIGN_SIZE) usb_device_read_capacity_struct_t readCapacity1;$/;"	v
readCapacity16	usb/device/class/usb_device_msc.h	/^    usb_device_read_capacity16_data_struct_t *readCapacity16;        \/*!< READ CAPACITY Data*\/$/;"	m	struct:_usb_device_msc_ufi_struct
readCapacity2	usb/device/class/usb_device_msc.c	/^USB_GLOBAL USB_RAM_ADDRESS_ALIGNMENT(USB_DATA_ALIGN_SIZE) usb_device_read_capacity_struct_t readCapacity2;$/;"	v
readCapacity3	usb/device/class/usb_device_msc.c	/^USB_GLOBAL USB_RAM_ADDRESS_ALIGNMENT(USB_DATA_ALIGN_SIZE) usb_device_read_capacity_struct_t readCapacity3;$/;"	v
readConfig	drivers/fsl_emc.h	/^    emc_dynamic_read_t readConfig;  \/* Dynamic read strategy. *\/$/;"	m	struct:_emc_dynamic_timing_config
readRingBuffer	utilities/fsl_debug_console.c	/^    uint8_t readRingBuffer[DEBUG_CONSOLE_RECEIVE_BUFFER_LEN];$/;"	m	struct:_debug_console_state_struct	file:
read_buffer	littlefs/littlefs_include/lfs.h	/^    void *read_buffer;$/;"	m	struct:lfs_config
read_size	littlefs/littlefs_include/lfs.h	/^    lfs_size_t read_size;$/;"	m	struct:lfs_config
readset	lwip/src/include/lwip/priv/sockets_priv.h	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb
readv	lwip/src/include/lwip/sockets.h	666;"	d
real	codec2/comp.h	/^  float real;$/;"	m	struct:__anon132
reass	lwip/src/netif/lowpan6.c	/^  struct pbuf *reass;$/;"	m	struct:lowpan6_reass_helper	typeref:struct:lowpan6_reass_helper::pbuf	file:
reass_list	lwip/src/netif/lowpan6.c	/^  struct lowpan6_reass_helper *reass_list;$/;"	m	struct:lowpan6_ieee802154_data	typeref:struct:lowpan6_ieee802154_data::lowpan6_reass_helper	file:
reassdatagrams	lwip/src/core/ipv4/ip4_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	lwip/src/core/ipv6/ip6_frag.c	/^static struct ip6_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip6_reassdata	file:
receivedAddress	drivers/fsl_i2c.h	/^    uint8_t receivedAddress;          \/*!< Matching address send by master. 7-bits plus R\/nW bit0 *\/$/;"	m	struct:_i2c_slave_transfer
recipTable	CMSIS/arm_math.h	/^    q15_t *recipTable;    \/**< Points to the reciprocal initial value table. *\/$/;"	m	struct:__anon107
recipTable	CMSIS/arm_math.h	/^    q31_t *recipTable;    \/**< points to the reciprocal initial value table. *\/$/;"	m	struct:__anon106
recordChannelLeft	codec/fsl_wm8904.h	/^    uint16_t recordChannelLeft;  \/*!< record channel *\/$/;"	m	struct:_wm8904_config
recordChannelRight	codec/fsl_wm8904.h	/^    uint16_t recordChannelRight; \/*!< record channel *\/$/;"	m	struct:_wm8904_config
recordSource	codec/fsl_wm8904.h	/^    uint16_t recordSource;       \/*!< record source *\/$/;"	m	struct:_wm8904_config
recv	lwip/src/include/lwip/altcp.h	/^  altcp_recv_fn       recv;$/;"	m	struct:altcp_pcb
recv	lwip/src/include/lwip/raw.h	/^  raw_recv_fn recv;$/;"	m	struct:raw_pcb
recv	lwip/src/include/lwip/sockets.h	634;"	d
recv	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_igmp
recv	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	lwip/src/include/lwip/tcp.h	/^  tcp_recv_fn recv;$/;"	m	struct:tcp_pcb
recv	lwip/src/include/lwip/udp.h	/^  udp_recv_fn recv;$/;"	m	struct:udp_pcb
recvSize	vcom/virtual_com.h	/^    volatile uint32_t recvSize;              \/*the data length received from host*\/$/;"	m	struct:_usb_cdc_vcom_struct
recv_acked	lwip/src/core/tcp_in.c	/^static tcpwnd_size_t recv_acked;$/;"	v	file:
recv_arg	lwip/src/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	lwip/src/include/lwip/udp.h	/^  void *recv_arg;$/;"	m	struct:udp_pcb
recv_avail	lwip/src/include/lwip/api.h	/^  int recv_avail;$/;"	m	struct:netconn
recv_bufsize	lwip/src/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_config	lwip/src/include/netif/ppp/ppp_impl.h	/^  void (*recv_config)(ppp_pcb *pcb, void *ctx, u32_t accm, int pcomp, int accomp);$/;"	m	struct:link_callbacks
recv_data	lwip/src/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_flags	lwip/src/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_idle	lwip/src/include/netif/ppp/ppp_impl.h	/^    time_t recv_idle;		\/* time since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	lwip/src/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	lwip/src/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	lwip/src/include/lwip/api.h	/^  u32_t recv_timeout;$/;"	m	struct:netconn
recv_udp	lwip/src/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recved	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_recved_fn             recved;$/;"	m	struct:altcp_functions
recved	lwip/src/netif/slipif.c	/^  u16_t i, recved;$/;"	m	struct:slipif_priv	file:
recvfrom	lwip/src/include/lwip/sockets.h	638;"	d
recvmbox	lwip/src/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
recvmsg	lwip/src/include/lwip/sockets.h	636;"	d
redirect_header	lwip/src/include/lwip/prot/nd6.h	/^struct redirect_header {$/;"	s
redirected_header_option	lwip/src/include/lwip/prot/nd6.h	/^struct redirected_header_option {$/;"	s
ref	lwip/src/include/lwip/pbuf.h	/^  LWIP_PBUF_REF_T ref;$/;"	m	struct:pbuf
refreshPeriod_Nanosec	drivers/fsl_emc.h	/^    uint32_t refreshPeriod_Nanosec; \/*!< The refresh period in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
refuse_chap	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  refuse_chap         :1;      \/* Don't proceed auth. with CHAP *\/$/;"	m	struct:ppp_settings_s
refuse_eap	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  refuse_eap          :1;      \/* Don't proceed auth. with EAP *\/$/;"	m	struct:ppp_settings_s
refuse_mppe_128	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int refuse_mppe_128      :1;      \/* Allow MPPE 128-bit mode? *\/$/;"	m	struct:ppp_settings_s
refuse_mppe_40	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int refuse_mppe_40       :1;      \/* Allow MPPE 40-bit mode? *\/$/;"	m	struct:ppp_settings_s
refuse_mppe_stateful	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int refuse_mppe_stateful :1;      \/* Allow MPPE stateful mode? *\/$/;"	m	struct:ppp_settings_s
refuse_mppe_stateful	lwip/src/netif/ppp/ccp.c	/^bool refuse_mppe_stateful = 1;		\/* Allow stateful mode? *\/$/;"	v
refuse_mschap	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  refuse_mschap       :1;      \/* Don't proceed auth. with MS-CHAP *\/$/;"	m	struct:ppp_settings_s
refuse_mschap_v2	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  refuse_mschap_v2    :1;      \/* Don't proceed auth. with MS-CHAPv2 *\/$/;"	m	struct:ppp_settings_s
refuse_pap	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  refuse_pap          :1;      \/* Don't proceed auth. with PAP *\/$/;"	m	struct:ppp_settings_s
refused_data	lwip/src/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
registerBase	usb/device/source/ehci/usb_device_ehci.h	/^    USBHS_Type *registerBase;          \/*!< The base address of the register *\/$/;"	m	struct:_usb_device_ehci_state_struct
registerBase	usb/device/source/khci/usb_device_khci.h	/^    USB_Type *registerBase;            \/*!< The base address of the register *\/$/;"	m	struct:_usb_device_khci_state_struct
registerBase	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    USB_LPC3511IP_Type *registerBase;         \/*!< (4 bytes) ip base address *\/$/;"	m	struct:_usb_device_lpc3511ip_state_struct
registerNcBase	usb/device/source/ehci/usb_device_ehci.h	/^    USBNC_Type *registerNcBase; \/*!< The base address of the USBNC register *\/$/;"	m	struct:_usb_device_ehci_state_struct
registerPhyBase	usb/device/source/ehci/usb_device_ehci.h	/^    USBPHY_Type *registerPhyBase; \/*!< The base address of the PHY register *\/$/;"	m	struct:_usb_device_ehci_state_struct
rejci	lwip/src/include/netif/ppp/fsm.h	/^    int  (*rejci)		\/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
reload	drivers/fsl_dma.h	/^    bool reload;            \/*!< Reload channel configuration register after$/;"	m	struct:_dma_xfercfg
remainingBytes	drivers/fsl_i2c.h	/^    uint32_t remainingBytes; \/*!< Remaining byte count in current state. *\/$/;"	m	struct:_i2c_master_handle
remainingBytesDMA	drivers/fsl_i2c_dma.h	/^    uint32_t remainingBytesDMA; \/*!< Remaining byte count to be transferred using DMA. *\/$/;"	m	struct:_i2c_master_dma_handle
remainingSubaddr	drivers/fsl_i2c.h	/^    uint32_t remainingSubaddr;$/;"	m	struct:_i2c_master_handle
remainingSubaddr	drivers/fsl_i2c_dma.h	/^    uint32_t remainingSubaddr;$/;"	m	struct:_i2c_master_dma_handle
remote_ip	lwip/src/include/netif/ppp/pppol2tp.h	/^  ip_addr_t remote_ip;         \/* LNS IP Address *\/$/;"	m	struct:pppol2tp_pcb_s
remote_name	lwip/src/include/netif/ppp/ppp.h	/^  char  remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings_s
remote_port	lwip/src/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	lwip/src/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t remote_port;           \/* LNS port *\/$/;"	m	struct:pppol2tp_pcb_s
remote_session_id	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t remote_session_id;     \/* Session ID assigned to peer *\/$/;"	m	struct:pppol2tp_pcb_s
remote_tunnel_id	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t remote_tunnel_id;      \/* Tunnel ID assigned to peer *\/$/;"	m	struct:pppol2tp_pcb_s
remotewakeup	usb/device/source/usb_device_dci.h	/^    uint8_t remotewakeup; \/*!< Remote wakeup is enabled or not *\/$/;"	m	struct:_usb_device_struct
remove_bundle_link	lwip/src/netif/ppp/multilink.c	/^static void remove_bundle_link()$/;"	f	file:
remove_callback	lwip/src/include/lwip/netif.h	/^  netif_status_callback_fn remove_callback;$/;"	m	struct:netif
remove_pn_file	lwip/src/netif/ppp/eap.c	/^remove_pn_file()$/;"	f	file:
reportBuffer	usb/device/class/usb_device_hid.h	/^    uint8_t *reportBuffer; \/*!< The report buffer address *\/$/;"	m	struct:_usb_device_hid_report_struct
reportId	usb/device/class/usb_device_hid.h	/^    uint8_t reportId;      \/*!< The report ID *\/$/;"	m	struct:_usb_device_hid_report_struct
reportLength	usb/device/class/usb_device_hid.h	/^    uint32_t reportLength; \/*!< The report data length *\/$/;"	m	struct:_usb_device_hid_report_struct
reportType	usb/device/class/usb_device_hid.h	/^    uint8_t reportType;    \/*!< The report type *\/$/;"	m	struct:_usb_device_hid_report_struct
req_addr	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int req_addr               :1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_dns1	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int req_dns1               :1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	lwip/src/include/netif/ppp/ipcp.h	/^    unsigned int req_dns2               :1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_ifaceid	lwip/src/include/netif/ppp/ipv6cp.h	/^    unsigned int req_ifaceid    :1;  \/* Ask peer to send interface identifier? *\/$/;"	m	struct:ipv6cp_options
reqaddrtype	lwip/src/core/dns.c	/^  u8_t reqaddrtype;$/;"	m	struct:dns_req_entry	file:
reqaddrtype	lwip/src/core/dns.c	/^  u8_t reqaddrtype;$/;"	m	struct:dns_table_entry	file:
reqci	lwip/src/include/netif/ppp/fsm.h	/^    int  (*reqci)		\/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	lwip/src/include/netif/ppp/fsm.h	/^    u8_t reqid;			\/* Current request id *\/$/;"	m	struct:fsm
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_halt_msg_struct
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_init_cmplt_struct
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_init_msg_struct
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_keepalive_cmplt_struct
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_keepalive_msg_struct
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_query_cmplt_struct
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_query_msg_struct
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_set_cmplt_struct
requestID	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t requestID;$/;"	m	struct:_rndis_set_msg_struct
requestSense	usb/device/class/usb_device_msc.h	/^    usb_device_request_sense_data_struct_t *requestSense;            \/*!< Request Sense Standard Data*\/$/;"	m	struct:_usb_device_msc_ufi_struct
requestSense	usb/device/class/usb_device_msc.h	/^    usb_device_request_sense_data_struct_t *requestSense; \/*!< sense data for the current command*\/$/;"	m	struct:_usb_device_ufi_app_struct
request_config_pending	lwip/src/include/lwip/dhcp6.h	/^  u8_t request_config_pending;$/;"	m	struct:dhcp6
request_timeout	lwip/src/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
request_timeout	lwip/src/include/lwip/dhcp6.h	/^  u16_t request_timeout;$/;"	m	struct:dhcp6
require_mppe	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int require_mppe         :1;      \/* Require MPPE (Microsoft Point to Point Encryption) *\/$/;"	m	struct:ppp_settings_s
required	lwip/src/include/netif/ppp/ecp.h	/^    bool required;		\/* Is ECP required? *\/$/;"	m	struct:ecp_options
resample_const_rate_f	codec2/newamp1.c	/^void resample_const_rate_f(C2CONST *c2const, MODEL *model, float rate_K_vec[], float rate_K_sample_freqs_kHz[], int K)$/;"	f
resample_rate_L	codec2/newamp1.c	/^void resample_rate_L(C2CONST *c2const, MODEL *model, float rate_K_vec[], float rate_K_sample_freqs_kHz[], int K)$/;"	f
reserved	CMSIS_driver/Driver_I2C.h	/^  uint32_t reserved         : 26;$/;"	m	struct:_ARM_I2C_STATUS
reserved	CMSIS_driver/Driver_I2C.h	/^  uint32_t reserved       : 31;         \/\/\/< Reserved (must be zero)$/;"	m	struct:_ARM_I2C_CAPABILITIES
reserved	CMSIS_driver/Driver_SPI.h	/^  uint32_t reserved         : 28;       \/\/\/< Reserved (must be zero)$/;"	m	struct:_ARM_SPI_CAPABILITIES
reserved	CMSIS_driver/Driver_SPI.h	/^  uint32_t reserved   : 29;$/;"	m	struct:_ARM_SPI_STATUS
reserved	drivers/fsl_enet.h	/^    __IO uint32_t reserved;  \/*!< Reserved *\/$/;"	m	struct:_enet_rx_bd_struct
reserved	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t reserved;$/;"	m	struct:_rndis_packet_msg_struct
reserved	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t reserved;$/;"	m	struct:_rndis_reset_msg_struct
reserved	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved;                \/*!< reserved*\/$/;"	m	struct:_usb_device_request_sense_data_struct
reserved	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved;          \/*!< Reserved*\/$/;"	m	struct:_usb_device_inquiry_command_struct
reserved	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved;          \/*!< Reserved*\/$/;"	m	struct:_usb_device_read_write_10_command_struct
reserved	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved[2];       \/*!< Reserved*\/$/;"	m	struct:_usb_device_read_capacities_command_struct
reserved	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved[2];       \/*!< reserved*\/$/;"	m	struct:_usb_device_request_sense_command_struct
reserved	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved[3];          \/*!< reserved*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
reserved	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved[4];     \/*!< Reserved*\/$/;"	m	struct:_usb_device_mode_parameters_header_struct
reserved	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved[5];       \/*!< reserved*\/$/;"	m	struct:_usb_device_read_format_capacities_command_struct
reserved	usb/device/class/usb_device_video.h	/^            uint8_t reserved : 1U;             \/*!< Reserved. Set to 0. *\/$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
reserved	usb/device/class/usb_device_video.h	/^            uint8_t reserved : 3U;        \/*!< Reserved field.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct::__anon506::__anon507
reserved	usb/device/class/usb_device_video.h	/^            uint8_t reserved : 8U; \/*!< Reserved field.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct::__anon508::__anon509
reserved	usb/device/source/ehci/usb_device_ehci.h	/^        volatile uint32_t reserved;$/;"	m	union:_usb_device_ehci_dtd_struct::__anon523
reserved1	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved1[3];      \/*!< Reserved*\/$/;"	m	struct:_usb_device_read_capacities_command_struct
reserved1	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved1[3];      \/*!< Reserved*\/$/;"	m	struct:_usb_device_read_write_10_command_struct
reserved1	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved1[3];      \/*!< reserved*\/$/;"	m	struct:_usb_device_read_format_capacities_command_struct
reserved1	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved1[4];            \/*!< reserved*\/$/;"	m	struct:_usb_device_request_sense_data_struct
reserved1	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved1[7];      \/*!< Reserved*\/$/;"	m	struct:_usb_device_inquiry_command_struct
reserved1	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved1[7];      \/*!< reserved*\/$/;"	m	struct:_usb_device_request_sense_command_struct
reserved1	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t reserved1 : 15;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon515::__anon516
reserved1	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t reserved1 : 2;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon521::__anon522
reserved1	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t reserved1 : 2;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon517::__anon518
reserved1	usb/device/source/ehci/usb_device_ehci.h	/^    volatile uint32_t reserved1;$/;"	m	struct:_usb_device_ehci_qh_struct
reserved1	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t reserved1 : 5U;$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
reserved2	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserved2[4];            \/*!< reserved*\/$/;"	m	struct:_usb_device_request_sense_data_struct
reserved2	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t reserved2 : 2;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon515::__anon516
reserved2	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t reserved2 : 3;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon521::__anon522
reserved2	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t reserved2 : 3;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon517::__anon518
reserved2	usb/device/source/ehci/usb_device_ehci.h	/^    uint32_t reserved2;$/;"	m	struct:_usb_device_ehci_qh_struct
reserved3	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t reserved3 : 1;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon521::__anon522
reserved3	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t reserved3 : 1;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon517::__anon518
reservedUnion	usb/device/source/ehci/usb_device_ehci.h	/^    } reservedUnion;$/;"	m	struct:_usb_device_ehci_dtd_struct	typeref:union:_usb_device_ehci_dtd_struct::__anon523
reserverd	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t reserverd[3];       \/*!< reserved*\/$/;"	m	struct:_usb_device_capacity_list_header_struct
reset_ip_name_t	drivers/fsl_reset.h	/^typedef SYSCON_RSTn_t reset_ip_name_t;$/;"	t
reset_link_stats	lwip/src/netif/ppp/ppp.c	/^void reset_link_stats(int u) {$/;"	f
resetci	lwip/src/include/netif/ppp/fsm.h	/^    void (*resetci)		\/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resource	drivers/fsl_i2c_cmsis.c	/^    cmsis_i2c_resource_t *resource;             \/*!< i2c basic resource.      *\/$/;"	m	struct:_cmsis_i2c_dma_driver_state	file:
resource	drivers/fsl_i2c_cmsis.c	/^    cmsis_i2c_resource_t *resource; \/*!< Basic I2C resource. *\/$/;"	m	struct:_cmsis_i2c_interrupt_driver_state	file:
resource	drivers/fsl_spi_cmsis.c	/^    cmsis_spi_resource_t *resource;$/;"	m	struct:_cmsis_spi_dma_driver_state	file:
resource	drivers/fsl_spi_cmsis.c	/^    cmsis_spi_resource_t *resource;$/;"	m	struct:_cmsis_spi_interrupt_driver_state	file:
response	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_slot_status_response_t response; \/*!< Response buffer is used when dwLength = 0. *\/$/;"	m	struct:_usb_device_ccid_transfer_struct
responseBuffer	usb/device/class/usb_device_ccid.h	/^    uint8_t *responseBuffer; \/*!< The response data need to be sent to host *\/$/;"	m	struct:_usb_device_ccid_command_struct
responseData	usb/device/class/usb_device_cdc_rndis.h	/^    uint8_t *responseData;                \/*!< The pointer to the buffer of the RNDIS response. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
responseDataFormat	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t responseDataFormat;   \/*!< Response Data Format*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
responseLength	usb/device/class/usb_device_ccid.h	/^    uint32_t responseLength; \/*!< The response data length *\/$/;"	m	struct:_usb_device_ccid_command_struct
retrans_timer	lwip/src/core/ipv6/nd6.c	/^u32_t retrans_timer = LWIP_ND6_RETRANS_TIMER; \/* @todo implement this value in timer *\/$/;"	v
retransmit	lwip/src/include/netif/ppp/fsm.h	/^    void (*retransmit)		\/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	lwip/src/include/netif/ppp/fsm.h	/^    u8_t retransmits;		\/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	lwip/src/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
rev	littlefs/littlefs_include/lfs.h	/^        uint32_t rev;$/;"	m	struct:lfs_dir::lfs_disk_dir
revents	lwip/src/include/lwip/sockets.h	/^  short revents;$/;"	m	struct:pollfd
rfc7668_compress	lwip/src/netif/lowpan6_ble.c	/^rfc7668_compress(struct netif *netif, struct pbuf *p)$/;"	f	file:
rfc7668_context	lwip/src/netif/lowpan6_ble.c	/^static ip6_addr_t rfc7668_context[LWIP_6LOWPAN_NUM_CONTEXTS];$/;"	v	file:
rfc7668_context	lwip/src/netif/lowpan6_ble.c	89;"	d	file:
rfc7668_if_init	lwip/src/netif/lowpan6_ble.c	/^rfc7668_if_init(struct netif *netif)$/;"	f
rfc7668_input	lwip/src/netif/lowpan6_ble.c	/^rfc7668_input(struct pbuf * p, struct netif *netif)$/;"	f
rfc7668_local_addr	lwip/src/netif/lowpan6_ble.c	/^static struct lowpan6_link_addr rfc7668_local_addr;$/;"	v	typeref:struct:lowpan6_link_addr	file:
rfc7668_output	lwip/src/netif/lowpan6_ble.c	/^rfc7668_output(struct netif *netif, struct pbuf *q, const ip6_addr_t *ip6addr)$/;"	f
rfc7668_peer_addr	lwip/src/netif/lowpan6_ble.c	/^static struct lowpan6_link_addr rfc7668_peer_addr;$/;"	v	typeref:struct:lowpan6_link_addr	file:
rfc7668_set_addr	lwip/src/netif/lowpan6_ble.c	/^rfc7668_set_addr(struct lowpan6_link_addr *addr, const u8_t *in_addr, size_t in_addr_len, int is_mac_48, int is_public_addr)$/;"	f	file:
rfc7668_set_context	lwip/src/netif/lowpan6_ble.c	/^rfc7668_set_context(u8_t idx, const ip6_addr_t *context)$/;"	f
rfc7668_set_local_addr_eui64	lwip/src/netif/lowpan6_ble.c	/^rfc7668_set_local_addr_eui64(struct netif *netif, const u8_t *local_addr, size_t local_addr_len)$/;"	f
rfc7668_set_local_addr_mac48	lwip/src/netif/lowpan6_ble.c	/^rfc7668_set_local_addr_mac48(struct netif *netif, const u8_t *local_addr, size_t local_addr_len, int is_public_addr)$/;"	f
rfc7668_set_peer_addr_eui64	lwip/src/netif/lowpan6_ble.c	/^rfc7668_set_peer_addr_eui64(struct netif *netif, const u8_t *peer_addr, size_t peer_addr_len)$/;"	f
rfc7668_set_peer_addr_mac48	lwip/src/netif/lowpan6_ble.c	/^rfc7668_set_peer_addr_mac48(struct netif *netif, const u8_t *peer_addr, size_t peer_addr_len, int is_public_addr)$/;"	f
right	lwip/src/include/lwip/tcp.h	/^  u32_t right;$/;"	m	struct:tcp_sack_range
rightLow	drivers/fsl_i2s.h	/^    bool rightLow;                  \/*!< Right channel data in low portion of FIFO *\/$/;"	m	struct:_i2s_config
ringBuffer	component/serial_manager/serial_manager.c	/^    serial_manager_read_ring_buffer_t ringBuffer;$/;"	m	struct:_serial_manager_handle	file:
ringBuffer	component/serial_manager/serial_manager.c	/^    uint8_t *ringBuffer;$/;"	m	struct:_serial_manager_read_ring_buffer	file:
ringBuffer	component/serial_manager/serial_manager.h	/^    uint8_t *ringBuffer;     \/*!< Ring buffer address, it is used to buffer data received by the hardware.$/;"	m	struct:_serial_manager_config
ringBuffer	utilities/fsl_debug_console.c	/^    uint8_t ringBuffer[DEBUG_CONSOLE_TRANSMIT_BUFFER_LEN];$/;"	m	struct:_debug_console_write_ring_buffer	file:
ringBufferSize	component/serial_manager/serial_manager.c	/^    uint32_t ringBufferSize;$/;"	m	struct:_serial_manager_read_ring_buffer	file:
ringBufferSize	component/serial_manager/serial_manager.h	/^    uint32_t ringBufferSize; \/*!< The size of the ring buffer *\/$/;"	m	struct:_serial_manager_config
ringBufferSize	utilities/fsl_debug_console.c	/^    uint32_t ringBufferSize;$/;"	m	struct:_debug_console_write_ring_buffer	file:
ringHead	component/serial_manager/serial_manager.c	/^    volatile uint32_t ringHead;$/;"	m	struct:_serial_manager_read_ring_buffer	file:
ringHead	utilities/fsl_debug_console.c	/^    volatile uint32_t ringHead;$/;"	m	struct:_debug_console_write_ring_buffer	file:
ringTail	component/serial_manager/serial_manager.c	/^    volatile uint32_t ringTail;$/;"	m	struct:_serial_manager_read_ring_buffer	file:
ringTail	utilities/fsl_debug_console.c	/^    volatile uint32_t ringTail;$/;"	m	struct:_debug_console_write_ring_buffer	file:
rmap	codec2/c2wideband.h	/^    int rmap[C2WB_K * C2WB_NT];$/;"	m	struct:__anon133
rmb	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t rmb;                  \/*!< Removable Media Bit*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
rnakloops	lwip/src/include/netif/ppp/fsm.h	/^    u8_t rnakloops;		\/* Number of naks received *\/$/;"	m	struct:fsm
rndisCallback	usb/device/class/usb_device_cdc_rndis.h	/^    usb_status_t (*rndisCallback)(class_handle_t handle, uint32_t event, void *param);$/;"	m	struct:_usb_device_cdc_rndis_config_struct
rndisCallback	usb/device/class/usb_device_cdc_rndis.h	/^    usb_status_t (*rndisCallback)(class_handle_t handle, uint32_t event, void *param);$/;"	m	struct:_usb_device_cdc_rndis_struct
rndisCommand	usb/device/class/usb_device_cdc_rndis.h	/^    uint8_t *rndisCommand;                \/*!< The pointer to the buffer of the RNDIS request. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
rndisDevMaxTxSize	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t rndisDevMaxTxSize;           \/*!< The maximum transmit size in byte of the device. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
rndisDeviceState	usb/device/class/usb_device_cdc_rndis.h	/^    uint8_t rndisDeviceState;             \/*!< The RNDIS device state. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
rndisHostMaxTxSize	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t rndisHostMaxTxSize;          \/*!< The maximum transmit size in byte of the host. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
rndisHwState	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t rndisHwState;                \/*!< The hardware state of the RNDIS device. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
rndisMediaConnectStatus	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t rndisMediaConnectStatus;     \/*!< The media connection status of the RNDIS device. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
rndisPacketFilter	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t rndisPacketFilter;           \/*!< The packet filter of the RNDIS device. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
rndis_event_enum_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_event_enum_t;$/;"	t	typeref:enum:_rndis_event_enum
rndis_halt_msg_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_halt_msg_struct_t;$/;"	t	typeref:struct:_rndis_halt_msg_struct
rndis_indicate_status_msg_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_indicate_status_msg_struct_t;$/;"	t	typeref:struct:_rndis_indicate_status_msg_struct
rndis_init_cmplt_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_init_cmplt_struct_t;$/;"	t	typeref:struct:_rndis_init_cmplt_struct
rndis_init_msg_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_init_msg_struct_t;$/;"	t	typeref:struct:_rndis_init_msg_struct
rndis_keepalive_cmplt_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_keepalive_cmplt_struct_t;$/;"	t	typeref:struct:_rndis_keepalive_cmplt_struct
rndis_keepalive_msg_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_keepalive_msg_struct_t;$/;"	t	typeref:struct:_rndis_keepalive_msg_struct
rndis_packet_msg_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_packet_msg_struct_t;$/;"	t	typeref:struct:_rndis_packet_msg_struct
rndis_query_cmplt_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_query_cmplt_struct_t;$/;"	t	typeref:struct:_rndis_query_cmplt_struct
rndis_query_msg_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_query_msg_struct_t;$/;"	t	typeref:struct:_rndis_query_msg_struct
rndis_reset_cmplt_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_reset_cmplt_struct_t;$/;"	t	typeref:struct:_rndis_reset_cmplt_struct
rndis_reset_msg_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_reset_msg_struct_t;$/;"	t	typeref:struct:_rndis_reset_msg_struct
rndis_set_cmplt_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_set_cmplt_struct_t;$/;"	t	typeref:struct:_rndis_set_cmplt_struct
rndis_set_msg_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_set_msg_struct_t;$/;"	t	typeref:struct:_rndis_set_msg_struct
rndis_state_enum_t	usb/device/class/usb_device_cdc_rndis.h	/^} rndis_state_enum_t;$/;"	t	typeref:enum:_rndis_state_enum
rngRead	device/LPC54018.h	/^  uint32_t (*rngRead)(void);                                    \/** Returns 32-bit number from hardware random number generator *\/$/;"	m	struct:__anon193
root	littlefs/littlefs_include/lfs.h	/^        lfs_block_t root[2];$/;"	m	struct:lfs_superblock::lfs_disk_superblock
root	littlefs/littlefs_include/lfs.h	/^    lfs_block_t root[2];$/;"	m	struct:lfs
route_option	lwip/src/include/lwip/prot/nd6.h	/^struct route_option {$/;"	s
rs_count	lwip/src/include/lwip/netif.h	/^  u8_t rs_count;$/;"	m	struct:netif
rs_header	lwip/src/include/lwip/prot/nd6.h	/^struct rs_header {$/;"	s
rstate	lwip/src/include/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rterr	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	lwip/src/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	lwip/src/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out (in ticks of TCP_SLOW_INTERVAL) *\/$/;"	m	struct:tcp_pcb
rto_end	lwip/src/include/lwip/tcp.h	/^  u32_t rto_end;$/;"	m	struct:tcp_pcb
rtseq	lwip/src/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	lwip/src/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
runningWriteHandleHead	component/serial_manager/serial_manager.c	/^    list_t runningWriteHandleHead;   \/*!< The queue of running write handle *\/$/;"	m	struct:_serial_manager_handle	file:
rx	component/serial_manager/serial_port_uart.c	/^    serial_uart_recv_state_t rx;$/;"	m	struct:_serial_uart_state	file:
rx	component/uart/usart_adapter.c	/^    hal_uart_receive_state_t rx;$/;"	m	struct:_hal_uart_state	file:
rxBdBase	drivers/fsl_enet.h	/^    enet_rx_bd_struct_t *rxBdBase; \/*!< Buffer descriptor base address pointer. *\/$/;"	m	struct:_enet_rx_bd_ring
rxBdRing	drivers/fsl_enet.h	/^    enet_rx_bd_ring_t rxBdRing[ENET_RING_NUM_MAX]; \/*!< Receive buffer descriptor.  *\/$/;"	m	struct:_enet_handle
rxBuffSizeAlign	drivers/fsl_enet.h	/^    uint32_t rxBuffSizeAlign;                  \/*!< Aligned receive data buffer size. *\/$/;"	m	struct:_enet_buffer_config
rxBuffSizeAlign	drivers/fsl_enet.h	/^    uint32_t rxBuffSizeAlign;      \/*!< Receive buffer size. *\/$/;"	m	struct:_enet_rx_bd_ring
rxBufferStartAddr	drivers/fsl_enet.h	/^    uint32_t *rxBufferStartAddr;               \/*!< Start address of the rx buffers. *\/$/;"	m	struct:_enet_buffer_config
rxData	drivers/fsl_i2c.h	/^    uint8_t *rxData;                  \/*!< Transfer buffer for receive data *\/$/;"	m	struct:_i2c_slave_transfer
rxData	drivers/fsl_spi.h	/^    uint8_t *rxData;            \/*!< Receive buffer *\/$/;"	m	struct:_spi_half_duplex_transfer
rxData	drivers/fsl_spi.h	/^    uint8_t *rxData;      \/*!< Receive buffer *\/$/;"	m	struct:_spi_transfer
rxData	drivers/fsl_spi.h	/^    uint8_t *volatile rxData;         \/*!< Receive buffer *\/$/;"	m	struct:_spi_master_handle
rxData	drivers/fsl_usart.h	/^    uint8_t *volatile rxData;   \/*!< Address of remaining data to receive. *\/$/;"	m	struct:_usart_handle
rxDataSize	drivers/fsl_spi.h	/^    size_t rxDataSize;          \/*!< Transfer bytes *\/$/;"	m	struct:_spi_half_duplex_transfer
rxDataSize	drivers/fsl_usart.h	/^    volatile size_t rxDataSize; \/*!< Size of the remaining data to receive. *\/$/;"	m	struct:_usart_handle
rxDataSizeAll	drivers/fsl_usart.h	/^    size_t rxDataSizeAll;       \/*!< Size of the data to receive. *\/$/;"	m	struct:_usart_handle
rxDescStartAddrAlign	drivers/fsl_enet.h	/^    enet_rx_bd_struct_t *rxDescStartAddrAlign; \/*!< Aligned receive descriptor start address. *\/$/;"	m	struct:_enet_buffer_config
rxDescTailAddrAlign	drivers/fsl_enet.h	/^    enet_rx_bd_struct_t *rxDescTailAddrAlign;  \/*!< Aligned receive descriptor tail address. *\/$/;"	m	struct:_enet_buffer_config
rxDmaHandle	drivers/fsl_dmic_dma.h	/^    dma_handle_t *rxDmaHandle;             \/*!< The DMA RX channel used. *\/$/;"	m	struct:_dmic_dma_handle
rxGenIdx	drivers/fsl_enet.h	/^    uint16_t rxGenIdx;             \/*!< The current available receive buffer descriptor pointer. *\/$/;"	m	struct:_enet_rx_bd_ring
rxHandle	drivers/fsl_spi_dma.h	/^    dma_handle_t *rxHandle;      \/*!< DMA handler for SPI receive *\/$/;"	m	struct:_spi_dma_handle
rxInProgress	drivers/fsl_spi_dma.h	/^    volatile bool rxInProgress;  \/*!< Receive transfer finished *\/$/;"	m	struct:_spi_dma_handle
rxPtpTsData	drivers/fsl_enet.h	/^    enet_ptp_time_data_t *rxPtpTsData; \/*!< The start address of 1588 receive timestamp buffers *\/$/;"	m	struct:_enet_buffer_config
rxPtpTsDataRing	drivers/fsl_enet.h	/^    enet_ptp_time_data_ring_t rxPtpTsDataRing; \/*!< Receive PTP 1588 time stamp data ring buffer. *\/$/;"	m	struct:_enet_rx_bd_ring
rxRemainingBytes	drivers/fsl_spi.h	/^    volatile size_t rxRemainingBytes; \/*!< Number of data to be received [in bytes] *\/$/;"	m	struct:_spi_master_handle
rxRingBuffer	drivers/fsl_usart.h	/^    uint8_t *rxRingBuffer;              \/*!< Start address of the receiver ring buffer. *\/$/;"	m	struct:_usart_handle
rxRingBufferHead	drivers/fsl_usart.h	/^    volatile uint16_t rxRingBufferHead; \/*!< Index for the driver to store received data into ring buffer. *\/$/;"	m	struct:_usart_handle
rxRingBufferSize	drivers/fsl_usart.h	/^    size_t rxRingBufferSize;            \/*!< Size of the ring buffer. *\/$/;"	m	struct:_usart_handle
rxRingBufferTail	drivers/fsl_usart.h	/^    volatile uint16_t rxRingBufferTail; \/*!< Index for the user to get data from the ring buffer. *\/$/;"	m	struct:_usart_handle
rxRingLen	drivers/fsl_enet.h	/^    uint16_t rxRingLen;            \/*!< Receive ring length. *\/$/;"	m	struct:_enet_rx_bd_ring
rxRingLen	drivers/fsl_enet.h	/^    uint8_t rxRingLen;                         \/*!< The length of receive buffer descriptor ring. *\/$/;"	m	struct:_enet_buffer_config
rxSize	drivers/fsl_i2c.h	/^    size_t rxSize;                    \/*!< Transfer size *\/$/;"	m	struct:_i2c_slave_transfer
rxState	drivers/fsl_usart.h	/^    volatile uint8_t rxState; \/*!< RX transfer state *\/$/;"	m	struct:_usart_handle
rxWatermark	drivers/fsl_spi.h	/^    spi_rxfifo_watermark_t rxWatermark; \/*!< rxFIFO watermark *\/$/;"	m	struct:_spi_master_config
rxWatermark	drivers/fsl_spi.h	/^    spi_rxfifo_watermark_t rxWatermark; \/*!< rxFIFO watermark *\/$/;"	m	struct:_spi_master_handle
rxWatermark	drivers/fsl_spi.h	/^    spi_rxfifo_watermark_t rxWatermark; \/*!< rxFIFO watermark *\/$/;"	m	struct:_spi_slave_config
rxWatermark	drivers/fsl_usart.h	/^    usart_rxfifo_watermark_t rxWatermark; \/*!< rxFIFO watermark *\/$/;"	m	struct:_usart_config
rxWatermark	drivers/fsl_usart.h	/^    usart_rxfifo_watermark_t rxWatermark; \/*!< rxFIFO watermark *\/$/;"	m	struct:_usart_handle
rx_amp	codec2/ofdm_internal.h	/^    float rx_amp[OFDM_ROWSPERFRAME * OFDM_NC];$/;"	m	struct:OFDM
rx_eye	codec2/modem_stats.h	/^    float  rx_eye[MODEM_STATS_ET_MAX][80];$/;"	m	struct:MODEM_STATS
rx_general	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER rx_general;       \/* Received general queries. *\/$/;"	m	struct:stats_igmp
rx_group	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER rx_group;         \/* Received group-specific queries. *\/$/;"	m	struct:stats_igmp
rx_np	codec2/ofdm_internal.h	/^    complex float rx_np[OFDM_ROWSPERFRAME * OFDM_NC];$/;"	m	struct:OFDM
rx_report	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER rx_report;        \/* Received reports. *\/$/;"	m	struct:stats_igmp
rx_sym	codec2/ofdm_internal.h	/^    complex float rx_sym[OFDM_NS + 3][OFDM_NC + 2];$/;"	m	struct:OFDM
rx_symbols	codec2/modem_stats.h	/^    COMP   rx_symbols[MODEM_STATS_NR_MAX][MODEM_STATS_NC_MAX+1];$/;"	m	struct:MODEM_STATS
rx_timing	codec2/modem_stats.h	/^    float  rx_timing;                        \/* estimated optimum timing offset in samples         *\/$/;"	m	struct:MODEM_STATS
rx_v1	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER rx_v1;            \/* Received v1 frames. *\/$/;"	m	struct:stats_igmp
rxbuf	codec2/ofdm_internal.h	/^    complex float rxbuf[OFDM_RXBUF];$/;"	m	struct:OFDM
rxbuffers	drivers/fsl_enet.h	/^    uint32_t rxbuffers[ENET_RXBUFFSTORE_NUM]; \/*!< The Initi-rx buffers will be used for reInitialize. *\/$/;"	m	struct:_enet_handle
rxdec_coeff	codec2/rxdec_coeff.h	/^const float rxdec_coeff[]={$/;"	v
rxdmaBase	drivers/fsl_spi_cmsis.c	/^    DMA_Type *rxdmaBase;$/;"	m	struct:_cmsis_spi_dma_resource	file:
rxdmaChannel	drivers/fsl_spi_cmsis.c	/^    uint32_t rxdmaChannel;$/;"	m	struct:_cmsis_spi_dma_resource	file:
rxintEnable	drivers/fsl_enet.h	/^    bool rxintEnable;                              \/*!< Rx interrup enabled. *\/$/;"	m	struct:_enet_handle
rxpackets	lwip/src/netif/slipif.c	/^  struct pbuf *rxpackets;$/;"	m	struct:slipif_priv	typeref:struct:slipif_priv::pbuf	file:
rxqueuePrio	drivers/fsl_enet.h	/^    uint8_t rxqueuePrio[ENET_RING_NUM_MAX];  \/*!< Receive queue priority. *\/$/;"	m	struct:enet_multiqueue_config
rxqueweight	drivers/fsl_enet.h	/^    uint8_t rxqueweight[ENET_RING_NUM_MAX];  \/*!< Refer to the MTL RxQ Control register. *\/$/;"	m	struct:enet_multiqueue_config
s	lwip/src/include/lwip/priv/sockets_priv.h	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data
s16_t	lwip/port/arch/cc.h	/^typedef signed   short s16_t;$/;"	t
s16_t	lwip/src/include/lwip/arch.h	/^typedef int16_t   s16_t;$/;"	t
s2_data1	lwip/src/include/lwip/sockets.h	/^  char        s2_data1[2];$/;"	m	struct:sockaddr_storage
s2_data2	lwip/src/include/lwip/sockets.h	/^  u32_t       s2_data2[3];$/;"	m	struct:sockaddr_storage
s2_data3	lwip/src/include/lwip/sockets.h	/^  u32_t       s2_data3[3];$/;"	m	struct:sockaddr_storage
s2_len	lwip/src/include/lwip/sockets.h	/^  u8_t        s2_len;$/;"	m	struct:sockaddr_storage
s32_t	lwip/port/arch/cc.h	/^typedef signed   int   s32_t;$/;"	t
s32_t	lwip/src/include/lwip/arch.h	/^typedef int32_t   s32_t;$/;"	t
s64_t	lwip/src/include/lwip/arch.h	/^typedef int64_t   s64_t;$/;"	t
s6_addr	lwip/src/include/lwip/inet.h	67;"	d
s8_t	lwip/port/arch/cc.h	/^typedef signed   char  s8_t;$/;"	t
s8_t	lwip/src/include/lwip/arch.h	/^typedef int8_t    s8_t;$/;"	t
sCopyright	emwin/emWin_header/GUI.h	/^  const char * sCopyright;$/;"	m	struct:GUI_CONTEXT
sPath	emwin/emWin_header/IP_FS.h	/^  const          char* sPath;$/;"	m	struct:__anon300
s_Audio_Pll_Freq	drivers/fsl_clock.c	/^static uint32_t s_Audio_Pll_Freq;$/;"	v	file:
s_ControlTransferData	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^    s_ControlTransferData[USB_DEVICE_CONFIG_LPCIP3511FS +$/;"	v	file:
s_DMAHandle	drivers/fsl_dma.c	/^static dma_handle_t *s_DMAHandle[FSL_FEATURE_DMA_ALL_CHANNELS];$/;"	v	file:
s_DmaPrivateHandle	drivers/fsl_i2s_dma.c	/^static i2s_dma_private_handle_t s_DmaPrivateHandle[FSL_FEATURE_SOC_I2S_COUNT];$/;"	v	file:
s_EMCBases	drivers/fsl_emc.c	/^static const EMC_Type *const s_EMCBases[] = EMC_BASE_PTRS;$/;"	v	file:
s_EMCClock	drivers/fsl_emc.c	/^static const clock_ip_name_t s_EMCClock[FSL_FEATURE_SOC_EMC_COUNT] = EMC_CLOCKS;$/;"	v	file:
s_EMCDYCSBases	drivers/fsl_emc.c	/^static const uint32_t s_EMCDYCSBases[] = EMC_DYCS_ADDRESS;$/;"	v	file:
s_ENETHandle	drivers/fsl_enet.c	/^static enet_handle_t *s_ENETHandle[FSL_FEATURE_SOC_LPC_ENET_COUNT] = {NULL};$/;"	v	file:
s_EpCommandStatusList1	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^    s_EpCommandStatusList1[((USB_DEVICE_IP3511_ENDPOINTS_NUM)) * 4];$/;"	v	file:
s_EpCommandStatusList1	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^    s_EpCommandStatusList1[(USB_DEVICE_IP3511_ENDPOINTS_NUM) * 4];$/;"	v	file:
s_EpCommandStatusList2	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^    s_EpCommandStatusList2[(USB_DEVICE_IP3511_ENDPOINTS_NUM) * 4];$/;"	v	file:
s_EpReservedBuffer	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^    s_EpReservedBuffer[USB_DEVICE_IP3511_RESERVED_BUFFER_FOR_COPY][USB_DATA_ALIGN_SIZE_MULTIPLE($/;"	v	file:
s_I2sBaseAddrs	drivers/fsl_i2s_dma.c	/^static const uint32_t s_I2sBaseAddrs[FSL_FEATURE_SOC_I2S_COUNT] = I2S_BASE_ADDRS;$/;"	v	file:
s_MscCbw2	usb/device/class/usb_device_msc.c	/^USB_GLOBAL USB_RAM_ADDRESS_ALIGNMENT(USB_DATA_ALIGN_SIZE) usb_device_msc_cbw_t s_MscCbw2;$/;"	v
s_MscCsw1	usb/device/class/usb_device_msc.c	/^USB_GLOBAL USB_RAM_ADDRESS_ALIGNMENT(USB_DATA_ALIGN_SIZE) usb_device_msc_csw_t s_MscCsw1;$/;"	v
s_MscCsw2	usb/device/class/usb_device_msc.c	/^USB_GLOBAL USB_RAM_ADDRESS_ALIGNMENT(USB_DATA_ALIGN_SIZE) usb_device_msc_csw_t s_MscCsw2;$/;"	v
s_MscCsw3	usb/device/class/usb_device_msc.c	/^USB_GLOBAL USB_RAM_ADDRESS_ALIGNMENT(USB_DATA_ALIGN_SIZE) usb_device_msc_csw_t s_MscCsw3;$/;"	v
s_Pll_Freq	drivers/fsl_clock.c	/^static uint32_t s_Pll_Freq;$/;"	v	file:
s_PrinterHandle	usb/device/class/usb_device_printer.c	/^    s_PrinterHandle[USB_DEVICE_CONFIG_PRINTER];$/;"	v	file:
s_SPIDriverCapabilities	drivers/fsl_spi_cmsis.c	/^static const ARM_SPI_CAPABILITIES s_SPIDriverCapabilities = {$/;"	v	file:
s_SPIDriverVersion	drivers/fsl_spi_cmsis.c	/^static const ARM_DRIVER_VERSION s_SPIDriverVersion = {ARM_SPI_API_VERSION, ARM_SPI_DRV_VERSION};$/;"	v	file:
s_SetupData	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^    s_SetupData[USB_DEVICE_CONFIG_LPCIP3511FS + USB_DEVICE_CONFIG_LPCIP3511HS][USB_DATA_ALIGN_SIZE_MULTIPLE(8U)];$/;"	v	file:
s_UsartAdapterBase	component/uart/usart_adapter.c	/^static USART_Type *const s_UsartAdapterBase[] = USART_BASE_PTRS;$/;"	v	file:
s_UsartIRQ	component/uart/usart_adapter.c	/^static const IRQn_Type s_UsartIRQ[] = USART_IRQS;$/;"	v	file:
s_UsbDevice	usb/device/source/usb_device_dci.c	/^USB_GLOBAL static usb_device_struct_t s_UsbDevice[USB_DEVICE_CONFIG_NUM];$/;"	v	file:
s_UsbDeviceAudioHandle	usb/device/class/usb_device_audio.c	/^    s_UsbDeviceAudioHandle[USB_DEVICE_CONFIG_AUDIO];$/;"	v	file:
s_UsbDeviceCcidHandle	usb/device/class/usb_device_ccid.c	/^    s_UsbDeviceCcidHandle[USB_DEVICE_CONFIG_CCID];$/;"	v	file:
s_UsbDeviceClassInterfaceMap	usb/device/class/usb_device_class.c	/^static const usb_device_class_map_t s_UsbDeviceClassInterfaceMap[] = {$/;"	v	file:
s_UsbDeviceCommonClassStruct	usb/device/class/usb_device_class.c	/^    s_UsbDeviceCommonClassStruct[USB_DEVICE_CONFIG_NUM];$/;"	v	file:
s_UsbDeviceDcdHSState	usb/device/source/ehci/usb_device_ehci.c	/^static usb_device_dcd_state_struct_t s_UsbDeviceDcdHSState[USB_DEVICE_CONFIG_EHCI];$/;"	v	file:
s_UsbDeviceDcdState	usb/device/source/khci/usb_device_khci.c	/^    s_UsbDeviceDcdState[USB_DEVICE_CONFIG_KHCI];$/;"	v	file:
s_UsbDeviceDwc3Interface	usb/device/source/usb_device_dci.c	/^static const usb_device_controller_interface_struct_t s_UsbDeviceDwc3Interface = {$/;"	v	file:
s_UsbDeviceEhciDtd	usb/device/source/ehci/usb_device_ehci.c	/^    s_UsbDeviceEhciDtd[USB_DEVICE_CONFIG_EHCI][USB_DEVICE_CONFIG_EHCI_MAX_DTD];$/;"	v	file:
s_UsbDeviceEhciInterface	usb/device/source/usb_device_dci.c	/^static const usb_device_controller_interface_struct_t s_UsbDeviceEhciInterface = {$/;"	v	file:
s_UsbDeviceHidHandle	usb/device/class/usb_device_hid.c	/^    s_UsbDeviceHidHandle[USB_DEVICE_CONFIG_HID];$/;"	v	file:
s_UsbDeviceKhciBdtBuffer	usb/device/source/khci/usb_device_khci.c	/^USB_BDT USB_RAM_ADDRESS_ALIGNMENT(512) static uint8_t s_UsbDeviceKhciBdtBuffer[USB_DEVICE_CONFIG_KHCI][512U];$/;"	v	file:
s_UsbDeviceKhciDmaAlignBuffer	usb/device/source/khci/usb_device_khci.c	/^USB_GLOBAL USB_RAM_ADDRESS_ALIGNMENT(USB_DATA_ALIGN_SIZE) static uint32_t s_UsbDeviceKhciDmaAlignBuffer$/;"	v	file:
s_UsbDeviceKhciInterface	usb/device/source/usb_device_dci.c	/^static const usb_device_controller_interface_struct_t s_UsbDeviceKhciInterface = {$/;"	v	file:
s_UsbDeviceKhciState	usb/device/source/khci/usb_device_khci.c	/^    s_UsbDeviceKhciState[USB_DEVICE_CONFIG_KHCI];$/;"	v	file:
s_UsbDeviceLpc3511IpInterface	usb/device/source/usb_device_dci.c	/^static const usb_device_controller_interface_struct_t s_UsbDeviceLpc3511IpInterface = {$/;"	v	file:
s_UsbDeviceLpc3511IpState	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^    s_UsbDeviceLpc3511IpState[USB_DEVICE_CONFIG_LPCIP3511FS + USB_DEVICE_CONFIG_LPCIP3511HS];$/;"	v	file:
s_UsbDeviceSetupBuffer	usb/device/class/usb_device_class.c	/^    s_UsbDeviceSetupBuffer[USB_DEVICE_CONFIG_NUM][USB_DATA_ALIGN_SIZE_MULTIPLE(USB_SETUP_PACKET_SIZE)];$/;"	v	file:
s_UsbDeviceStandardRequest	usb/device/source/usb_device_ch9.c	/^static const usb_standard_request_callback_t s_UsbDeviceStandardRequest[] = {$/;"	v	file:
s_UsbDeviceVideoHandle	usb/device/class/usb_device_video.c	/^    s_UsbDeviceVideoHandle[USB_DEVICE_CONFIG_VIDEO];$/;"	v	file:
s_UsbFreertosEventStruct	osa/usb_osa_freertos.c	/^static usb_osa_event_struct_t s_UsbFreertosEventStruct[USB_OSA_FREERTOS_EVENT_COUNT];$/;"	v	file:
s_UsbFreertosMsgqStruct	osa/usb_osa_freertos.c	/^static usb_osa_msgq_struct_t s_UsbFreertosMsgqStruct[USB_OSA_FREERTOS_MSGQ_COUNT];$/;"	v	file:
s_UsbFreertosMutexStruct	osa/usb_osa_freertos.c	/^static usb_osa_sem_struct_t s_UsbFreertosMutexStruct[USB_OSA_FREERTOS_MUTEX_COUNT];$/;"	v	file:
s_UsbFreertosSemStruct	osa/usb_osa_freertos.c	/^static usb_osa_sem_struct_t s_UsbFreertosSemStruct[USB_OSA_FREERTOS_SEM_COUNT];$/;"	v	file:
s_Usb_Pll_Freq	drivers/fsl_clock.c	/^static uint32_t s_Usb_Pll_Freq;$/;"	v	file:
s_ZeroTransactionData	usb/device/source/lpcip3511/usb_device_lpcip3511.c	/^    s_ZeroTransactionData[USB_DEVICE_CONFIG_LPCIP3511FS +$/;"	v	file:
s_abstractState	vcom/virtual_com.c	/^USB_DMA_INIT_DATA_ALIGN(USB_DATA_ALIGN_SIZE) static uint8_t s_abstractState[USB_DEVICE_CONFIG_CDC_ACM][COMM_FEATURE_DATA_SIZE] = {$/;"	v	file:
s_addr	lwip/src/include/lwip/inet.h	/^  in_addr_t s_addr;$/;"	m	struct:in_addr
s_appName	vcom/composite.c	/^static char const *s_appName = "app task";$/;"	v	file:
s_buffer	source/i2s_transfer.c	/^static uint8_t s_buffer[BUFFER_SIZE * BUFFER_NUM];$/;"	v	file:
s_cdcRndisHandle	usb/device/class/usb_device_cdc_rndis.c	/^static usb_device_cdc_rndis_struct_t s_cdcRndisHandle[USB_DEVICE_CONFIG_CDC_RNDIS_MAX_INSTANCE];$/;"	v	file:
s_countryCode	vcom/virtual_com.c	/^USB_DMA_INIT_DATA_ALIGN(USB_DATA_ALIGN_SIZE) static uint8_t s_countryCode[USB_DEVICE_CONFIG_CDC_ACM][COMM_FEATURE_DATA_SIZE] = {$/;"	v	file:
s_ctimerBases	drivers/fsl_ctimer.c	/^static CTIMER_Type *const s_ctimerBases[] = CTIMER_BASE_PTRS;$/;"	v	file:
s_ctimerCallback	drivers/fsl_ctimer.c	/^static ctimer_callback_t *s_ctimerCallback[FSL_FEATURE_SOC_CTIMER_COUNT] = {0};$/;"	v	file:
s_ctimerClocks	drivers/fsl_ctimer.c	/^static const clock_ip_name_t s_ctimerClocks[] = CTIMER_CLOCKS;$/;"	v	file:
s_ctimerIRQ	drivers/fsl_ctimer.c	/^static const IRQn_Type s_ctimerIRQ[] = CTIMER_IRQS;$/;"	v	file:
s_ctimerResets	drivers/fsl_ctimer.c	/^static const reset_ip_name_t s_ctimerResets[] = CTIMER_RSTS;$/;"	v	file:
s_ctimerResets	drivers/fsl_ctimer.c	/^static const reset_ip_name_t s_ctimerResets[] = CTIMER_RSTS_N;$/;"	v	file:
s_currRecvBuf	vcom/virtual_com.c	/^USB_DMA_NONINIT_DATA_ALIGN(USB_DATA_ALIGN_SIZE) static uint8_t s_currRecvBuf[USB_DEVICE_CONFIG_CDC_ACM][DATA_BUFF_SIZE];$/;"	v	file:
s_currSendBuf	vcom/virtual_com.c	/^USB_DMA_NONINIT_DATA_ALIGN(USB_DATA_ALIGN_SIZE) static uint8_t s_currSendBuf[USB_DEVICE_CONFIG_CDC_ACM][DATA_BUFF_SIZE];$/;"	v	file:
s_currentEvent	drivers/fsl_sctimer.c	/^static uint32_t s_currentEvent;$/;"	v	file:
s_currentMatch	drivers/fsl_sctimer.c	/^static uint32_t s_currentMatch;$/;"	v	file:
s_currentState	drivers/fsl_sctimer.c	/^static uint32_t s_currentState;$/;"	v	file:
s_debugConsoleReadSemaphore	utilities/fsl_debug_console.c	/^static SemaphoreHandle_t s_debugConsoleReadSemaphore;$/;"	v	file:
s_debugConsoleReadWaitSemaphore	utilities/fsl_debug_console.c	/^static SemaphoreHandle_t s_debugConsoleReadWaitSemaphore;$/;"	v	file:
s_debugConsoleReadWaitSemaphore	utilities/fsl_debug_console.c	/^static volatile uint8_t s_debugConsoleReadWaitSemaphore;$/;"	v	file:
s_debugConsoleState	utilities/fsl_debug_console.c	/^static debug_console_state_struct_t s_debugConsoleState;$/;"	v	file:
s_dmaBases	drivers/fsl_dma.c	/^static DMA_Type *const s_dmaBases[] = DMA_BASE_PTRS;$/;"	v	file:
s_dmaClockName	drivers/fsl_dma.c	/^static const clock_ip_name_t s_dmaClockName[] = DMA_CLOCKS;$/;"	v	file:
s_dmaIRQNumber	drivers/fsl_dma.c	/^static const IRQn_Type s_dmaIRQNumber[] = DMA_IRQS;$/;"	v	file:
s_dmaPrivateHandle	drivers/fsl_i2c_dma.c	/^static i2c_master_dma_private_handle_t s_dmaPrivateHandle[FSL_FEATURE_SOC_I2C_COUNT];$/;"	v	file:
s_dmaPrivateHandle	drivers/fsl_spi_dma.c	/^static spi_dma_private_handle_t s_dmaPrivateHandle[FSL_FEATURE_SOC_SPI_COUNT];$/;"	v	file:
s_dmaResets	drivers/fsl_dma.c	/^static const reset_ip_name_t s_dmaResets[] = DMA_RSTS_N;$/;"	v	file:
s_dma_descriptor_table	drivers/fsl_dma.c	/^static dma_descriptor_t *s_dma_descriptor_table[] = {s_dma_descriptor_table0, s_dma_descriptor_table1};$/;"	v	file:
s_dma_descriptor_table	drivers/fsl_dma.c	/^static dma_descriptor_t *s_dma_descriptor_table[] = {s_dma_descriptor_table0};$/;"	v	file:
s_dmicBases	drivers/fsl_dmic.c	/^static DMIC_Type *const s_dmicBases[FSL_FEATURE_SOC_DMIC_COUNT] = DMIC_BASE_PTRS;$/;"	v	file:
s_dmicCallback	drivers/fsl_dmic.c	/^static dmic_callback_t s_dmicCallback[FSL_FEATURE_SOC_DMIC_COUNT];$/;"	v	file:
s_dmicClock	drivers/fsl_dmic.c	/^static const clock_ip_name_t s_dmicClock[FSL_FEATURE_SOC_DMIC_COUNT] = DMIC_CLOCKS;$/;"	v	file:
s_dmicDmaHandle	source/i2s_transfer.c	/^static dmic_dma_handle_t s_dmicDmaHandle;$/;"	v	file:
s_dmicHwvadCallback	drivers/fsl_dmic.c	/^static dmic_hwvad_callback_t s_dmicHwvadCallback[FSL_FEATURE_SOC_DMIC_COUNT];$/;"	v	file:
s_dmicHwvadIRQ	drivers/fsl_dmic.c	/^static const IRQn_Type s_dmicHwvadIRQ[FSL_FEATURE_SOC_DMIC_COUNT] = DMIC_HWVAD_IRQS;$/;"	v	file:
s_dmicIRQ	drivers/fsl_dmic.c	/^static const IRQn_Type s_dmicIRQ[FSL_FEATURE_SOC_DMIC_COUNT] = DMIC_IRQS;$/;"	v	file:
s_dmicRxDmaHandle	source/i2s_transfer.c	/^static dma_handle_t s_dmicRxDmaHandle;$/;"	v	file:
s_dummyData	drivers/fsl_spi.c	/^volatile uint8_t s_dummyData[FSL_FEATURE_SOC_SPI_COUNT] = {0};$/;"	v
s_emcResets	drivers/fsl_emc.c	/^static const reset_ip_name_t s_emcResets[] = EMC_RSTS;$/;"	v	file:
s_emptyBlock	source/i2s_transfer.c	/^static uint32_t volatile s_emptyBlock = BUFFER_NUM;$/;"	v	file:
s_enetBases	drivers/fsl_enet.c	/^static ENET_Type *const s_enetBases[] = ENET_BASE_PTRS;$/;"	v	file:
s_enetClock	drivers/fsl_enet.c	/^const clock_ip_name_t s_enetClock[FSL_FEATURE_SOC_LPC_ENET_COUNT] = ETH_CLOCKS;$/;"	v
s_enetIrqId	drivers/fsl_enet.c	/^static const IRQn_Type s_enetIrqId[] = ENET_IRQS;$/;"	v	file:
s_enetIsr	drivers/fsl_enet.c	/^static enet_isr_t s_enetIsr;$/;"	v	file:
s_eventCallback	drivers/fsl_sctimer.c	/^static sctimer_event_callback_t s_eventCallback[FSL_FEATURE_SCT_NUMBER_OF_EVENTS];$/;"	v	file:
s_flexcommBaseAddrs	drivers/fsl_flexcomm.c	/^static const uint32_t s_flexcommBaseAddrs[FSL_FEATURE_SOC_FLEXCOMM_COUNT] = FLEXCOMM_BASE_ADDRS;$/;"	v	file:
s_flexcommClocks	drivers/fsl_flexcomm.c	/^static const clock_ip_name_t s_flexcommClocks[] = FLEXCOMM_CLOCKS;$/;"	v	file:
s_flexcommClocks	drivers/fsl_spi_cmsis.c	/^static const clock_ip_name_t s_flexcommClocks[] = FLEXCOMM_CLOCKS;$/;"	v	file:
s_flexcommHandle	drivers/fsl_flexcomm.c	/^static void *s_flexcommHandle[FSL_FEATURE_SOC_FLEXCOMM_COUNT];$/;"	v	file:
s_flexcommIrqHandler	drivers/fsl_flexcomm.c	/^static flexcomm_irq_handler_t s_flexcommIrqHandler[FSL_FEATURE_SOC_FLEXCOMM_COUNT];$/;"	v	file:
s_flexcommResets	drivers/fsl_flexcomm.c	/^static const reset_ip_name_t s_flexcommResets[] = FLEXCOMM_RSTS;$/;"	v	file:
s_gpioClockName	drivers/fsl_gpio.c	/^static const clock_ip_name_t s_gpioClockName[] = GPIO_CLOCKS;$/;"	v	file:
s_gpioResets	drivers/fsl_gpio.c	/^static const reset_ip_name_t s_gpioResets[] = GPIO_RSTS_N;$/;"	v	file:
s_gui_memory	emwin/emwin_support.c	/^static uint32_t s_gui_memory[(GUI_NUMBYTES + 3) \/ 4]; \/* needs to be word aligned *\/$/;"	v	file:
s_i2cBaseAddrs	drivers/fsl_i2c.c	/^static const uint32_t s_i2cBaseAddrs[FSL_FEATURE_SOC_I2C_COUNT] = I2C_BASE_ADDRS;$/;"	v	file:
s_i2cBases	component/i2c/flexcomm_i2c_adapter.c	/^static I2C_Type *const s_i2cBases[] = I2C_BASE_PTRS;$/;"	v	file:
s_i2cDriverCapabilities	drivers/fsl_i2c_cmsis.c	/^static const ARM_I2C_CAPABILITIES s_i2cDriverCapabilities = {$/;"	v	file:
s_i2cDriverVersion	drivers/fsl_i2c_cmsis.c	/^static const ARM_DRIVER_VERSION s_i2cDriverVersion = {ARM_I2C_API_VERSION, ARM_I2C_DRV_VERSION};$/;"	v	file:
s_i2cIRQ	drivers/fsl_i2c.c	/^static const IRQn_Type s_i2cIRQ[] = I2C_IRQS;$/;"	v	file:
s_i2cIRQ	drivers/fsl_i2c_dma.c	/^static const IRQn_Type s_i2cIRQ[] = I2C_IRQS;$/;"	v	file:
s_i2sBaseAddrs	drivers/fsl_i2s.c	/^static const uint32_t s_i2sBaseAddrs[FSL_FEATURE_SOC_I2S_COUNT] = I2S_BASE_ADDRS;$/;"	v	file:
s_i2sIRQ	drivers/fsl_i2s.c	/^static const IRQn_Type s_i2sIRQ[] = I2S_IRQS;$/;"	v	file:
s_i2sTxDmaHandle	source/i2s_transfer.c	/^static dma_handle_t s_i2sTxDmaHandle;$/;"	v	file:
s_i2sTxHandle	source/i2s_transfer.c	/^static i2s_dma_handle_t s_i2sTxHandle;$/;"	v	file:
s_lineCoding	vcom/virtual_com.c	/^USB_DMA_INIT_DATA_ALIGN(USB_DATA_ALIGN_SIZE) static uint8_t s_lineCoding[USB_DEVICE_CONFIG_CDC_ACM][LINE_CODING_SIZE] = {$/;"	v	file:
s_listSuppOid	usb/device/class/usb_device_cdc_rndis.c	/^static uint32_t s_listSuppOid[RNDIS_NUM_OIDS_SUPPORTED] = {NDIS_OID_GEN_SUPPORTED_LIST,$/;"	v	file:
s_pintCallback	drivers/fsl_pint.c	/^    s_pintCallback[FSL_FEATURE_PINT_NUMBER_OF_CONNECTED_OUTPUTS + FSL_FEATURE_SECPINT_NUMBER_OF_CONNECTED_OUTPUTS];$/;"	v	file:
s_pintCallback	drivers/fsl_pint.c	/^static pint_cb_t s_pintCallback[FSL_FEATURE_PINT_NUMBER_OF_CONNECTED_OUTPUTS];$/;"	v	file:
s_pintIRQ	drivers/fsl_pint.c	/^static const IRQn_Type s_pintIRQ[FSL_FEATURE_PINT_NUMBER_OF_CONNECTED_OUTPUTS +$/;"	v	file:
s_pintIRQ	drivers/fsl_pint.c	/^static const IRQn_Type s_pintIRQ[FSL_FEATURE_PINT_NUMBER_OF_CONNECTED_OUTPUTS] = PINT_IRQS;$/;"	v	file:
s_receiveXfer	source/i2s_transfer.c	/^static dmic_transfer_t s_receiveXfer[2U] = {$/;"	v	file:
s_recvSize	vcom/virtual_com.c	/^volatile static uint32_t s_recvSize[USB_DEVICE_CONFIG_CDC_ACM] = {0};$/;"	v	file:
s_responseAvailableData	usb/device/class/usb_device_cdc_rndis.c	/^static uint8_t s_responseAvailableData[NOTIF_PACKET_SIZE] = {$/;"	v	file:
s_responseData	usb/device/class/usb_device_cdc_rndis.c	/^static uint32_t s_responseData[(RNDIS_MAX_EXPECTED_RESPONSE_SIZE + 3) \/ sizeof(uint32_t)];$/;"	v	file:
s_rndisCommand	usb/device/class/usb_device_cdc_rndis.c	/^USB_DMA_NONINIT_DATA_ALIGN(USB_DATA_ALIGN_SIZE) static uint8_t s_rndisCommand[RNDIS_MAX_EXPECTED_COMMAND_SIZE];$/;"	v	file:
s_rxDummy	drivers/fsl_spi_dma.c	/^__attribute__((aligned(4))) static uint16_t s_rxDummy;$/;"	v	file:
s_rxDummy	drivers/fsl_spi_dma.c	/^static uint16_t s_rxDummy;$/;"	v	file:
s_sctBases	drivers/fsl_sctimer.c	/^static SCT_Type *const s_sctBases[] = SCT_BASE_PTRS;$/;"	v	file:
s_sctClocks	drivers/fsl_sctimer.c	/^static const clock_ip_name_t s_sctClocks[] = SCT_CLOCKS;$/;"	v	file:
s_sctResets	drivers/fsl_sctimer.c	/^static const reset_ip_name_t s_sctResets[] = SCT_RSTS;$/;"	v	file:
s_sctResets	drivers/fsl_sctimer.c	/^static const reset_ip_name_t s_sctResets[] = SCT_RSTS_N;$/;"	v	file:
s_sctimerIsr	drivers/fsl_sctimer.c	/^static sctimer_isr_t s_sctimerIsr;$/;"	v	file:
s_sendSize	vcom/virtual_com.c	/^volatile static uint32_t s_sendSize[USB_DEVICE_CONFIG_CDC_ACM] = {0};$/;"	v	file:
s_spiBaseAddrs	drivers/fsl_spi.c	/^static const uint32_t s_spiBaseAddrs[FSL_FEATURE_SOC_SPI_COUNT] = SPI_BASE_ADDRS;$/;"	v	file:
s_spiIRQ	drivers/fsl_spi.c	/^static const IRQn_Type s_spiIRQ[] = SPI_IRQS;$/;"	v	file:
s_spiResetInstance	drivers/fsl_spi_cmsis.c	/^static const reset_ip_name_t s_spiResetInstance[] = FLEXCOMM_RSTS;$/;"	v	file:
s_spi_descriptor_table	drivers/fsl_spi_dma.c	/^__attribute__((aligned(16))) static dma_descriptor_t s_spi_descriptor_table[FSL_FEATURE_SOC_SPI_COUNT] = {0};$/;"	v	file:
s_spi_descriptor_table	drivers/fsl_spi_dma.c	/^static dma_descriptor_t s_spi_descriptor_table[FSL_FEATURE_SOC_SPI_COUNT] = {0};$/;"	v	file:
s_txDummy	drivers/fsl_spi_dma.c	/^__attribute__((aligned(4))) static spi_dma_txdummy_t s_txDummy[FSL_FEATURE_SOC_SPI_COUNT] = {0};$/;"	v	file:
s_txDummy	drivers/fsl_spi_dma.c	/^static spi_dma_txdummy_t s_txDummy[FSL_FEATURE_SOC_SPI_COUNT] = {0};$/;"	v	file:
s_txLastWord	drivers/fsl_spi_dma.c	/^__attribute__((aligned(4))) static uint32_t s_txLastWord[FSL_FEATURE_SOC_SPI_COUNT];$/;"	v	file:
s_txLastWord	drivers/fsl_spi_dma.c	/^static uint32_t s_txLastWord[FSL_FEATURE_SOC_SPI_COUNT];$/;"	v	file:
s_usartBaseAddrs	drivers/fsl_usart.c	/^static const uint32_t s_usartBaseAddrs[FSL_FEATURE_SOC_USART_COUNT] = USART_BASE_ADDRS;$/;"	v	file:
s_usartIRQ	drivers/fsl_usart.c	/^static const IRQn_Type s_usartIRQ[] = USART_IRQS;$/;"	v	file:
s_usbCdcAcmInfo	vcom/virtual_com.c	/^USB_DMA_INIT_DATA_ALIGN(USB_DATA_ALIGN_SIZE) static usb_cdc_acm_info_t s_usbCdcAcmInfo[USB_DEVICE_CONFIG_CDC_ACM] = {$/;"	v	file:
s_vendorInfo	usb/device/class/usb_device_cdc_rndis.c	/^static uint8_t s_vendorInfo[VENDOR_INFO_SIZE] = " FSL RNDIS PORT ";$/;"	v	file:
s_writeIndex	source/i2s_transfer.c	/^static uint32_t volatile s_writeIndex = 0U;$/;"	v	file:
sa	lwip/src/api/sockets.c	/^  struct sockaddr sa;$/;"	m	union:sockaddr_aligned	typeref:struct:sockaddr_aligned::sockaddr	file:
sa	lwip/src/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @see "Congestion Avoidance and Control" by Van Jacobson and Karels *\/$/;"	m	struct:tcp_pcb
sa_data	lwip/src/include/lwip/sockets.h	/^  char        sa_data[14];$/;"	m	struct:sockaddr
sa_family	lwip/src/include/lwip/sockets.h	/^  sa_family_t sa_family;$/;"	m	struct:sockaddr
sa_family_t	lwip/src/include/lwip/sockets.h	/^typedef u8_t sa_family_t;$/;"	t
sa_len	lwip/src/include/lwip/sockets.h	/^  u8_t        sa_len;$/;"	m	struct:sockaddr
samp_old	codec2/fsk.h	/^    COMP* samp_old;         \/* Tail end of last batch of samples *\/$/;"	m	struct:FSK
sampleRate	codec/fsl_wm8904.h	/^    wm8904_sample_rate_t sampleRate; \/*!< Sample rate *\/$/;"	m	struct:_wm8904_audio_format
sample_log_amp	codec2/interp.c	/^float sample_log_amp(MODEL *model, float w)$/;"	f
sample_phase	codec2/phase.c	/^void sample_phase(MODEL *model, $/;"	f
sample_point	codec2/ofdm_internal.h	/^    int sample_point;$/;"	m	struct:OFDM
sample_rate	drivers/fsl_dmic.h	/^    dmic_phy_sample_rate_t sample_rate; \/*!< DMIC and decimator sample rates *\/$/;"	m	struct:_dmic_channel_config
sanity_errors	lwip/src/include/netif/ppp/mppe.h	/^	u16_t sanity_errors;        \/* take down LCP if too many *\/$/;"	m	struct:ppp_mppe_state
saturate16bit	drivers/fsl_dmic.h	/^    bool saturate16bit; \/*!< Selects 16-bit saturation. 0 means results roll over if out range and do not saturate.$/;"	m	struct:_dmic_channel_config
sbBYTES_TO_STORE_MESSAGE_LENGTH	amazon-freertos/freertos/stream_buffer.c	132;"	d	file:
sbFLAGS_IS_MESSAGE_BUFFER	amazon-freertos/freertos/stream_buffer.c	135;"	d	file:
sbFLAGS_IS_STATICALLY_ALLOCATED	amazon-freertos/freertos/stream_buffer.c	136;"	d	file:
sbRECEIVE_COMPLETED	amazon-freertos/freertos/stream_buffer.c	57;"	d	file:
sbRECEIVE_COMPLETED_FROM_ISR	amazon-freertos/freertos/stream_buffer.c	72;"	d	file:
sbSEND_COMPLETED	amazon-freertos/freertos/stream_buffer.c	96;"	d	file:
sbSEND_COMPLETE_FROM_ISR	amazon-freertos/freertos/stream_buffer.c	111;"	d	file:
sc_ac_cookie	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t sc_ac_cookie[PPPOE_MAX_AC_COOKIE_LEN]; \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc
sc_ac_cookie_len	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t sc_ac_cookie_len;       \/* length of cookie data *\/$/;"	m	struct:pppoe_softc
sc_concentrator_name	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc
sc_dest	lwip/src/include/netif/ppp/pppoe.h	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr
sc_ethif	lwip/src/include/netif/ppp/pppoe.h	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif
sc_hunique	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc
sc_hunique_len	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t sc_hunique_len;         \/* length of host unique *\/$/;"	m	struct:pppoe_softc
sc_padi_retried	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t sc_padi_retried;        \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc
sc_padr_retried	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t sc_padr_retried;        \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc
sc_service_name	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc
sc_session	lwip/src/include/netif/ppp/pppoe.h	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc
sc_state	lwip/src/include/netif/ppp/pppoe.h	/^  u8_t sc_state;               \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc
sccrq_retried	lwip/src/include/netif/ppp/pppol2tp.h	/^  u8_t sccrq_retried;          \/* number of SCCRQ retries already done *\/$/;"	m	struct:pppol2tp_pcb_s
sckPol	drivers/fsl_i2s.h	/^    bool sckPol;          \/*!< SCK polarity *\/$/;"	m	struct:_i2s_config
sctimer_clock_mode_t	drivers/fsl_sctimer.h	/^} sctimer_clock_mode_t;$/;"	t	typeref:enum:_sctimer_clock_mode
sctimer_clock_select_t	drivers/fsl_sctimer.h	/^} sctimer_clock_select_t;$/;"	t	typeref:enum:_sctimer_clock_select
sctimer_config_t	drivers/fsl_sctimer.h	/^} sctimer_config_t;$/;"	t	typeref:struct:_sctimer_config
sctimer_conflict_resolution_t	drivers/fsl_sctimer.h	/^} sctimer_conflict_resolution_t;$/;"	t	typeref:enum:_sctimer_conflict_resolution
sctimer_counter_t	drivers/fsl_sctimer.h	/^} sctimer_counter_t;$/;"	t	typeref:enum:_sctimer_counter
sctimer_event_callback_t	drivers/fsl_sctimer.h	/^typedef void (*sctimer_event_callback_t)(void);$/;"	t
sctimer_event_t	drivers/fsl_sctimer.h	/^} sctimer_event_t;$/;"	t	typeref:enum:_sctimer_event
sctimer_input_t	drivers/fsl_sctimer.h	/^} sctimer_input_t;$/;"	t	typeref:enum:_sctimer_input
sctimer_interrupt_enable_t	drivers/fsl_sctimer.h	/^} sctimer_interrupt_enable_t;$/;"	t	typeref:enum:_sctimer_interrupt_enable
sctimer_isr_t	drivers/fsl_sctimer.c	/^typedef void (*sctimer_isr_t)(SCT_Type *base);$/;"	t	file:
sctimer_out_t	drivers/fsl_sctimer.h	/^} sctimer_out_t;$/;"	t	typeref:enum:_sctimer_out
sctimer_pwm_level_select_t	drivers/fsl_sctimer.h	/^} sctimer_pwm_level_select_t;$/;"	t	typeref:enum:_sctimer_pwm_level_select
sctimer_pwm_mode_t	drivers/fsl_sctimer.h	/^} sctimer_pwm_mode_t;$/;"	t	typeref:enum:_sctimer_pwm_mode
sctimer_pwm_signal_param_t	drivers/fsl_sctimer.h	/^} sctimer_pwm_signal_param_t;$/;"	t	typeref:struct:_sctimer_pwm_signal_param
sctimer_status_flags_t	drivers/fsl_sctimer.h	/^} sctimer_status_flags_t;$/;"	t	typeref:enum:_sctimer_status_flags
sd	lwip/src/include/lwip/priv/api_msg.h	/^    } sd;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::__anon460
sd	lwip/src/netif/slipif.c	/^  sio_fd_t sd;$/;"	m	struct:slipif_priv	file:
sdns	lwip/src/netif/ppp/ppp.c	/^int sdns(ppp_pcb *pcb, u32_t ns1, u32_t ns2) {$/;"	f
sdramExtModeReg	drivers/fsl_emc.h	/^    uint16_t sdramExtModeReg; \/*!< Used for low-power sdram device. The extended mode register. *\/$/;"	m	struct:_emc_dynamic_chip_config
sdramModeReg	drivers/fsl_emc.h	/^    uint16_t sdramModeReg;    \/*!< Sdram mode register setting. *\/$/;"	m	struct:_emc_dynamic_chip_config
second	drivers/fsl_enet.h	/^    uint64_t second;     \/*!< Second. *\/$/;"	m	struct:_enet_ptp_time
secret	lwip/src/include/netif/ppp/pppapi.h	/^      const u8_t *secret;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon439
secret	lwip/src/include/netif/ppp/pppol2tp.h	/^  const u8_t *secret;          \/* Secret string *\/$/;"	m	struct:pppol2tp_pcb_s
secret_len	lwip/src/include/netif/ppp/pppapi.h	/^      u8_t secret_len;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon439
secret_len	lwip/src/include/netif/ppp/pppol2tp.h	/^  u8_t secret_len;             \/* Secret string length *\/$/;"	m	struct:pppol2tp_pcb_s
secret_rv	lwip/src/include/netif/ppp/pppol2tp.h	/^  u8_t secret_rv[16];          \/* Random vector *\/$/;"	m	struct:pppol2tp_pcb_s
secureApiBase	device/LPC54018.h	/^  __I uint32_t secureApiBase;                    \/** Secure API Base *\/$/;"	m	struct:__anon194
seen_ack	lwip/src/include/netif/ppp/fsm.h	/^    u8_t seen_ack;		\/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
select	lwip/src/include/lwip/sockets.h	649;"	d
select_cb_ctr	lwip/src/api/sockets.c	/^static volatile int select_cb_ctr;$/;"	v	file:
select_cb_list	lwip/src/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_check_waiters	lwip/src/api/sockets.c	/^static void select_check_waiters(int s, int has_recvevent, int has_sendevent, int has_errevent)$/;"	f	file:
select_waiting	lwip/src/include/lwip/priv/sockets_priv.h	/^  SELWAIT_T select_waiting;$/;"	m	struct:lwip_sock
sem	lwip/src/include/lwip/priv/sockets_priv.h	/^  SELECT_SEM_T sem;$/;"	m	struct:lwip_select_cb
sem	lwip/src/include/lwip/priv/tcpip_priv.h	/^      sys_sem_t *sem;$/;"	m	struct:tcpip_msg::__anon468::__anon470
sem	lwip/src/include/lwip/priv/tcpip_priv.h	/^  sys_sem_t sem;$/;"	m	struct:tcpip_api_call_data
sem	lwip/src/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	osa/usb_osa_freertos.c	/^    StaticSemaphore_t sem;    \/* Semaphore buffer *\/$/;"	m	struct:_usb_osa_sem_struct	file:
semBINARY_SEMAPHORE_QUEUE_LENGTH	amazon-freertos/include/semphr.h	39;"	d
semGIVE_BLOCK_TIME	amazon-freertos/include/semphr.h	41;"	d
semSEMAPHORE_QUEUE_ITEM_LENGTH	amazon-freertos/include/semphr.h	40;"	d
sem_signalled	lwip/src/include/lwip/priv/sockets_priv.h	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb
semaphore	drivers/freertos/fsl_i2c_freertos.h	/^    SemaphoreHandle_t semaphore;    \/*!< A semaphore to notify and unblock task when the transfer ends *\/$/;"	m	struct:_i2c_rtos_handle
semaphoreBuffer	drivers/freertos/fsl_i2c_freertos.h	/^    StaticSemaphore_t semaphoreBuffer; \/*!< Statically allocated memory for semaphore *\/$/;"	m	struct:_i2c_rtos_handle
send	lwip/src/include/lwip/sockets.h	640;"	d
sendSize	vcom/virtual_com.h	/^    volatile uint32_t sendSize;              \/*the data length to send*\/$/;"	m	struct:_usb_cdc_vcom_struct
send_challenge	lwip/src/include/netif/ppp/pppol2tp.h	/^  u8_t send_challenge;         \/* Boolean whether the next sent packet should contains a challenge response *\/$/;"	m	struct:pppol2tp_pcb_s
send_config	lwip/src/include/netif/ppp/ppp_impl.h	/^  void (*send_config)(ppp_pcb *pcb, void *ctx, u32_t accm, int pcomp, int accomp);$/;"	m	struct:link_callbacks
send_timeout	lwip/src/include/lwip/api.h	/^  s32_t send_timeout;$/;"	m	struct:netconn
sender_addr	lwip/src/netif/lowpan6.c	/^  struct lowpan6_link_addr sender_addr;$/;"	m	struct:lowpan6_reass_helper	typeref:struct:lowpan6_reass_helper::lowpan6_link_addr	file:
sendevent	lwip/src/include/lwip/priv/sockets_priv.h	/^  u16_t sendevent;$/;"	m	struct:lwip_sock
sendhup	lwip/src/netif/ppp/multilink.c	/^static void sendhup(char *str)$/;"	f	file:
sendmsg	lwip/src/include/lwip/sockets.h	642;"	d
sendto	lwip/src/include/lwip/sockets.h	644;"	d
senseKey	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t senseKey;                \/*!< Sense Key*\/$/;"	m	struct:_usb_device_request_sense_data_struct
sent	lwip/src/include/lwip/altcp.h	/^  altcp_sent_fn       sent;$/;"	m	struct:altcp_pcb
sent	lwip/src/include/lwip/tcp.h	/^  tcp_sent_fn sent;$/;"	m	struct:tcp_pcb
sent_num	lwip/src/include/lwip/autoip.h	/^  u8_t sent_num;$/;"	m	struct:autoip
sent_tcp	lwip/src/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
seqno	lwip/src/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	lwip/src/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	lwip/src/netif/zepif.c	/^  u32_t seqno;$/;"	m	struct:zepif_state	file:
sequenceId	drivers/fsl_enet.h	/^    uint16_t sequenceId;                         \/*!< PTP sequence ID. *\/$/;"	m	struct:_enet_ptp_time_data
serialHandle	utilities/fsl_debug_console.c	/^    serial_handle_t serialHandle; \/*!< serial manager handle *\/$/;"	m	struct:_debug_console_state_struct	file:
serialHandleBuffer	utilities/fsl_debug_console.c	/^    uint8_t serialHandleBuffer[SERIAL_MANAGER_HANDLE_SIZE];$/;"	m	struct:_debug_console_state_struct	file:
serialManagerHandle	component/serial_manager/serial_manager.c	/^    struct _serial_manager_handle *serialManagerHandle;$/;"	m	struct:_serial_manager_send_handle	typeref:struct:_serial_manager_send_handle::_serial_manager_handle	file:
serialReadHandleBuffer	utilities/fsl_debug_console.c	/^    uint8_t serialReadHandleBuffer[SERIAL_MANAGER_READ_HANDLE_SIZE];$/;"	m	struct:_debug_console_state_struct	file:
serialStateBuf	vcom/virtual_com.h	/^    uint8_t serialStateBuf[NOTIF_PACKET_SIZE + UART_BITMAP_SIZE]; \/* Serial state buffer of the CDC device to notify the$/;"	m	struct:_usb_cdc_acm_info
serialWriteHandleBuffer	utilities/fsl_debug_console.c	/^    uint8_t serialWriteHandleBuffer[SERIAL_MANAGER_WRITE_HANDLE_SIZE];$/;"	m	struct:_debug_console_state_struct	file:
serial_handle_t	component/serial_manager/serial_manager.h	/^typedef void *serial_handle_t;$/;"	t
serial_manager_callback_message_t	component/serial_manager/serial_manager.h	/^} serial_manager_callback_message_t;$/;"	t	typeref:struct:_serial_manager_callback_message
serial_manager_callback_t	component/serial_manager/serial_manager.h	/^typedef void (*serial_manager_callback_t)(void *callbackParam,$/;"	t
serial_manager_config_t	component/serial_manager/serial_manager.h	/^} serial_manager_config_t;$/;"	t	typeref:struct:_serial_manager_config
serial_manager_handle_t	component/serial_manager/serial_manager.c	/^} serial_manager_handle_t;$/;"	t	typeref:struct:_serial_manager_handle	file:
serial_manager_read_handle_t	component/serial_manager/serial_manager.c	/^typedef serial_manager_write_handle_t serial_manager_read_handle_t;$/;"	t	file:
serial_manager_read_ring_buffer_t	component/serial_manager/serial_manager.c	/^} serial_manager_read_ring_buffer_t;$/;"	t	typeref:struct:_serial_manager_read_ring_buffer	file:
serial_manager_status_t	component/serial_manager/serial_manager.h	/^} serial_manager_status_t;$/;"	t	typeref:enum:_serial_manager_status
serial_manager_transfer_t	component/serial_manager/serial_manager.c	/^} serial_manager_transfer_t;$/;"	t	typeref:struct:_serial_manager_transfer	file:
serial_manager_transmission_mode_t	component/serial_manager/serial_manager.c	/^} serial_manager_transmission_mode_t;$/;"	t	typeref:enum:_serial_manager_transmission_mode	file:
serial_manager_write_handle_t	component/serial_manager/serial_manager.c	/^} serial_manager_write_handle_t;$/;"	t	typeref:struct:_serial_manager_send_handle	file:
serial_port_type_t	component/serial_manager/serial_manager.h	/^} serial_port_type_t;$/;"	t	typeref:enum:_serial_port_type
serial_port_uart_config_t	component/serial_manager/serial_port_uart.h	/^} serial_port_uart_config_t;$/;"	t	typeref:struct:_serial_port_uart_config
serial_port_uart_parity_mode_t	component/serial_manager/serial_port_uart.h	/^} serial_port_uart_parity_mode_t;$/;"	t	typeref:enum:_serial_port_uart_parity_mode
serial_port_uart_stop_bit_count_t	component/serial_manager/serial_port_uart.h	/^} serial_port_uart_stop_bit_count_t;$/;"	t	typeref:enum:_serial_port_uart_stop_bit_count
serial_read_handle_t	component/serial_manager/serial_manager.h	/^typedef void *serial_read_handle_t;$/;"	t
serial_uart_recv_state_t	component/serial_manager/serial_port_uart.c	/^} serial_uart_recv_state_t;$/;"	t	typeref:struct:_serial_uart_recv_state	file:
serial_uart_send_state_t	component/serial_manager/serial_port_uart.c	/^} serial_uart_send_state_t;$/;"	t	typeref:struct:_serial_uart_send_state	file:
serial_uart_state_t	component/serial_manager/serial_port_uart.c	/^} serial_uart_state_t;$/;"	t	typeref:struct:_serial_uart_state	file:
serial_write_handle_t	component/serial_manager/serial_manager.h	/^typedef void *serial_write_handle_t;$/;"	t
serialcreate	lwip/src/include/netif/ppp/pppapi.h	/^    } serialcreate;$/;"	m	union:pppapi_msg_msg::__anon435	typeref:struct:pppapi_msg_msg::__anon435::__anon437
server_idx	lwip/src/core/dns.c	/^  u8_t  server_idx;$/;"	m	struct:dns_table_entry	file:
server_ip_addr	lwip/src/include/lwip/dhcp.h	/^  ip_addr_t server_ip_addr; \/* dhcp server address that offered this lease (ip_addr_t because passed to UDP) *\/$/;"	m	struct:dhcp
service_name	lwip/src/include/netif/ppp/pppapi.h	/^      const char *service_name;$/;"	m	struct:pppapi_msg_msg::__anon435::__anon438
session_key	lwip/src/include/netif/ppp/mppe.h	/^	u8_t session_key[MPPE_MAX_KEY_LEN];$/;"	m	struct:ppp_mppe_state
set_errno	lwip/src/include/lwip/priv/sockets_priv.h	95;"	d
set_ip_epdisc	lwip/src/netif/ppp/multilink.c	75;"	d	file:
set_log_level	source/common.c	/^void set_log_level(uint8_t level)$/;"	f
set_poll	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_set_poll_fn           set_poll;$/;"	m	struct:altcp_functions
setbsdcomp	lwip/src/netif/ppp/ccp.c	/^setbsdcomp(argv)$/;"	f	file:
setdeflate	lwip/src/netif/ppp/ccp.c	/^setdeflate(argv)$/;"	f	file:
setdnsaddr	lwip/src/netif/ppp/ipcp.c	/^setdnsaddr(argv)$/;"	f	file:
setendpoint	lwip/src/netif/ppp/lcp.c	/^setendpoint(argv)$/;"	f	file:
setifaceid	lwip/src/netif/ppp/ipv6cp.c	/^setifaceid(argv)$/;"	f	file:
setipaddr	lwip/src/netif/ppp/ipcp.c	/^setipaddr(arg, argv, doit)$/;"	f
setnetmask	lwip/src/netif/ppp/ipcp.c	/^setnetmask(argv)$/;"	f	file:
setnotifyphasecb	lwip/src/include/netif/ppp/pppapi.h	/^    } setnotifyphasecb;$/;"	m	union:pppapi_msg_msg::__anon435	typeref:struct:pppapi_msg_msg::__anon435::__anon436
setprio	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_setprio_fn            setprio;$/;"	m	struct:altcp_functions
setsockopt	lwip/src/include/lwip/sockets.h	624;"	d
settings	lwip/src/include/netif/ppp/ppp.h	/^  ppp_settings settings;$/;"	m	struct:ppp_pcb_s
setup	usb/device/class/usb_device_class.h	/^    usb_setup_struct_t *setup; \/*!< The pointer of the setup packet data. *\/$/;"	m	struct:_usb_device_control_request_struct
setupBuffer	usb/device/class/usb_device_class.h	/^    uint8_t *setupBuffer;                              \/*!< Setup packet data buffer*\/$/;"	m	struct:_usb_device_common_class_struct
setupBuffer	usb/device/source/ehci/usb_device_ehci.h	/^    uint32_t setupBuffer[2];$/;"	m	struct:_usb_device_ehci_qh_struct
setupBufferBack	usb/device/source/ehci/usb_device_ehci.h	/^    uint32_t setupBufferBack[2];$/;"	m	struct:_usb_device_ehci_qh_struct
setupBufferIndex	usb/device/source/khci/usb_device_khci.h	/^    uint8_t setupBufferIndex;                           \/*!< A valid setup buffer flag *\/$/;"	m	struct:_usb_device_khci_state_struct
setupData	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t *setupData;$/;"	m	struct:_usb_device_lpc3511ip_state_struct
setupPacketBuffer	usb/device/source/khci/usb_device_khci.h	/^    uint8_t setupPacketBuffer[USB_SETUP_PACKET_SIZE * 2]; \/*!< The setup request buffer *\/$/;"	m	struct:_usb_device_khci_state_struct
setupValue	usb/device/class/usb_device_cdc_acm.h	/^    uint16_t setupValue;     \/*!< The wValue field of the setup packet. *\/$/;"	m	struct:_usb_device_cdc_acm_request_param_struct
setup_tcp	lwip/src/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
setvjslots	lwip/src/netif/ppp/ipcp.c	/^setvjslots(argv)$/;"	f	file:
setwinsaddr	lwip/src/netif/ppp/ipcp.c	/^setwinsaddr(argv)$/;"	f	file:
sha1	lwip/src/netif/ppp/polarssl/sha1.c	/^void sha1( unsigned char *input, int ilen, unsigned char output[20] )$/;"	f
sha1_context	lwip/src/include/netif/ppp/polarssl/sha1.h	/^sha1_context;$/;"	t	typeref:struct:__anon430
sha1_finish	lwip/src/netif/ppp/polarssl/sha1.c	/^void sha1_finish( sha1_context *ctx, unsigned char output[20] )$/;"	f
sha1_padding	lwip/src/netif/ppp/polarssl/sha1.c	/^static const unsigned char sha1_padding[64] =$/;"	v	file:
sha1_process	lwip/src/netif/ppp/polarssl/sha1.c	/^static void sha1_process( sha1_context *ctx, const unsigned char data[64] )$/;"	f	file:
sha1_starts	lwip/src/netif/ppp/polarssl/sha1.c	/^void sha1_starts( sha1_context *ctx )$/;"	f
sha1_update	lwip/src/netif/ppp/polarssl/sha1.c	/^void sha1_update( sha1_context *ctx, const unsigned char *input, int ilen )$/;"	f
sha_algo_state_t	drivers/fsl_sha.c	/^} sha_algo_state_t;$/;"	t	typeref:enum:_sha_algo_state	file:
sha_algo_t	drivers/fsl_sha.h	/^} sha_algo_t;$/;"	t	typeref:enum:_sha_algo_t
sha_block_t	drivers/fsl_sha.c	/^} sha_block_t;$/;"	t	typeref:union:_sha_hash_block	file:
sha_check_context	drivers/fsl_sha.c	/^static status_t sha_check_context(sha_ctx_internal_t *ctxInternal, const uint8_t *message)$/;"	f	file:
sha_check_input_alg	drivers/fsl_sha.c	/^static status_t sha_check_input_alg(sha_algo_t algo)$/;"	f	file:
sha_check_input_args	drivers/fsl_sha.c	/^static status_t sha_check_input_args(SHA_Type *base, sha_ctx_t *ctx, sha_algo_t algo)$/;"	f	file:
sha_ctx_internal_t	drivers/fsl_sha.c	/^} sha_ctx_internal_t;$/;"	t	typeref:struct:_sha_ctx_internal	file:
sha_ctx_t	drivers/fsl_sha.h	/^} sha_ctx_t;$/;"	t	typeref:struct:_sha_ctx_t
sha_engine_init	drivers/fsl_sha.c	/^static void sha_engine_init(SHA_Type *base, sha_ctx_internal_t *ctxInternal)$/;"	f	file:
sha_finalize	drivers/fsl_sha.c	/^static status_t sha_finalize(SHA_Type *base, sha_ctx_internal_t *ctxInternal)$/;"	f	file:
sha_get_digest	drivers/fsl_sha.c	/^static void sha_get_digest(SHA_Type *base, uint8_t *output, size_t outputSize)$/;"	f	file:
sha_ldm_stm_16_words	drivers/fsl_sha.c	/^__STATIC_INLINE void sha_ldm_stm_16_words(SHA_Type *base, const uint32_t *src)$/;"	f
sha_ldm_stm_16_words	drivers/fsl_sha.c	/^__STATIC_INLINE void sha_ldm_stm_16_words(volatile uint32_t *dst, const uint32_t *src)$/;"	f
sha_memcpy	drivers/fsl_sha.c	23;"	d	file:
sha_one_block	drivers/fsl_sha.c	/^static void sha_one_block(SHA_Type *base, const uint8_t *blk)$/;"	f	file:
sha_process_message_data	drivers/fsl_sha.c	/^static status_t sha_process_message_data(SHA_Type *base,$/;"	f	file:
short_mac_addr	lwip/src/netif/lowpan6.c	/^static struct lowpan6_link_addr short_mac_addr = {2, {0, 0}};$/;"	v	typeref:struct:lowpan6_link_addr	file:
shut	lwip/src/include/lwip/priv/api_msg.h	/^      u8_t shut;$/;"	m	struct:api_msg::__anon454::__anon460
shutdown	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_shutdown_fn           shutdown;$/;"	m	struct:altcp_functions
shutdown	lwip/src/include/lwip/sockets.h	618;"	d
sif6addr	lwip/src/netif/ppp/ppp.c	/^int sif6addr(ppp_pcb *pcb, eui64_t our_eui64, eui64_t his_eui64) {$/;"	f
sif6down	lwip/src/netif/ppp/ppp.c	/^int sif6down(ppp_pcb *pcb) {$/;"	f
sif6up	lwip/src/netif/ppp/ppp.c	/^int sif6up(ppp_pcb *pcb) {$/;"	f
sifaddr	lwip/src/netif/ppp/ppp.c	/^int sifaddr(ppp_pcb *pcb, u32_t our_adr, u32_t his_adr, u32_t netmask) {$/;"	f
sifdown	lwip/src/netif/ppp/ppp.c	/^int sifdown(ppp_pcb *pcb) {$/;"	f
sifnpmode	lwip/src/netif/ppp/ppp.c	/^int sifnpmode(ppp_pcb *pcb, int proto, enum NPmode mode) {$/;"	f
sifup	lwip/src/netif/ppp/ppp.c	/^int sifup(ppp_pcb *pcb) {$/;"	f
sifvjcomp	lwip/src/netif/ppp/ppp.c	/^int sifvjcomp(ppp_pcb *pcb, int vjcomp, int cidcomp, int maxcid) {$/;"	f
sig_var	codec2/ofdm_internal.h	/^    float sig_var;$/;"	m	struct:OFDM
sign	codec2/mpdecode_core.h	/^  int *sign;$/;"	m	struct:v_node
signature	usb/device/class/usb_device_msc.h	/^    uint32_t signature;          \/*!< Byte 0-3 dCBWSignature*\/$/;"	m	struct:_usb_device_msc_cbw
signature	usb/device/class/usb_device_msc.h	/^    uint32_t signature;   \/*!< Byte 0-3 dCSWSignature*\/$/;"	m	struct:_usb_device_msc_csw
silent	lwip/src/include/netif/ppp/lcp.h	/^    unsigned int silent            :1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
simplex	CMSIS_driver/Driver_SPI.h	/^  uint32_t simplex          : 1;        \/\/\/< supports Simplex Mode (Master and Slave)$/;"	m	struct:_ARM_SPI_CAPABILITIES
sin	lwip/src/api/sockets.c	/^  struct sockaddr_in sin;$/;"	m	union:sockaddr_aligned	typeref:struct:sockaddr_aligned::sockaddr_in	file:
sin6	lwip/src/api/sockets.c	/^  struct sockaddr_in6 sin6;$/;"	m	union:sockaddr_aligned	typeref:struct:sockaddr_aligned::sockaddr_in6	file:
sin6_addr	lwip/src/include/lwip/sockets.h	/^  struct in6_addr sin6_addr;     \/* IPv6 address                *\/$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr
sin6_family	lwip/src/include/lwip/sockets.h	/^  sa_family_t     sin6_family;   \/* AF_INET6                    *\/$/;"	m	struct:sockaddr_in6
sin6_flowinfo	lwip/src/include/lwip/sockets.h	/^  u32_t           sin6_flowinfo; \/* IPv6 flow information       *\/$/;"	m	struct:sockaddr_in6
sin6_len	lwip/src/include/lwip/sockets.h	/^  u8_t            sin6_len;      \/* length of this structure    *\/$/;"	m	struct:sockaddr_in6
sin6_port	lwip/src/include/lwip/sockets.h	/^  in_port_t       sin6_port;     \/* Transport layer port #      *\/$/;"	m	struct:sockaddr_in6
sin6_scope_id	lwip/src/include/lwip/sockets.h	/^  u32_t           sin6_scope_id; \/* Set of interfaces for scope *\/$/;"	m	struct:sockaddr_in6
sin_addr	lwip/src/include/lwip/sockets.h	/^  struct in_addr  sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	lwip/src/include/lwip/sockets.h	/^  sa_family_t     sin_family;$/;"	m	struct:sockaddr_in
sin_len	lwip/src/include/lwip/sockets.h	/^  u8_t            sin_len;$/;"	m	struct:sockaddr_in
sin_port	lwip/src/include/lwip/sockets.h	/^  in_port_t       sin_port;$/;"	m	struct:sockaddr_in
sin_zero	lwip/src/include/lwip/sockets.h	/^  char            sin_zero[SIN_ZERO_LEN];$/;"	m	struct:sockaddr_in
sio_fd_t	lwip/src/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
size	component/lists/generic_list.h	/^    uint16_t size;                 \/*!< list size *\/$/;"	m	struct:list_tag
size	drivers/fsl_enet.h	/^    uint32_t size;                   \/*!< The size of the ring. *\/$/;"	m	struct:_enet_ptp_time_data_ring
size	littlefs/littlefs_include/lfs.h	/^                lfs_size_t size;$/;"	m	struct:lfs_entry::lfs_disk_entry::__anon425::__anon426
size	littlefs/littlefs_include/lfs.h	/^        lfs_size_t size;$/;"	m	struct:lfs_dir::lfs_disk_dir
size	littlefs/littlefs_include/lfs.h	/^    lfs_block_t size;$/;"	m	struct:lfs_free
size	littlefs/littlefs_include/lfs.h	/^    lfs_size_t size;$/;"	m	struct:lfs_file
size	littlefs/littlefs_include/lfs.h	/^    lfs_size_t size;$/;"	m	struct:lfs_info
size	lwip/src/include/lwip/memp.h	/^   u16_t size;$/;"	m	struct:memp_malloc_helper
size	lwip/src/include/lwip/priv/memp_priv.h	/^  u16_t size;$/;"	m	struct:memp_desc
size	usb/device/class/usb_device_msc.h	/^    uint32_t size;   \/*!< Size of the transferred data if commmand has data flow*\/$/;"	m	struct:_usb_device_ufi_app_struct
size	usb/device/class/usb_device_msc.h	/^    uint32_t size;   \/*!< Size of the transferred data*\/$/;"	m	struct:_usb_device_lba_app_struct
sk	lwip/src/include/netif/ppp/polarssl/des.h	/^    unsigned long sk[32];       \/*!<  DES subkeys       *\/$/;"	m	struct:__anon432
skip_atoi	source/common.c	/^static int skip_atoi(const char **s)$/;"	f	file:
slaveAddress	codec/fsl_wm8904.h	/^    uint8_t slaveAddress;         \/*!< code device slave address *\/$/;"	m	struct:_wm8904_config
slaveAddress	component/i2c/i2c.h	/^    uint16_t slaveAddress; \/*!< A slave address configuration. *\/$/;"	m	struct:_hal_i2c_slave_config
slaveAddress	component/i2c/i2c.h	/^    uint8_t slaveAddress;          \/*!< 7-bit slave address. *\/$/;"	m	struct:_hal_i2c_master_transfer
slaveAddress	drivers/fsl_i2c.h	/^    uint16_t slaveAddress;     \/*!< The 7-bit slave address. *\/$/;"	m	struct:_i2c_master_transfer
slaveFsm	drivers/fsl_i2c.h	/^    volatile i2c_slave_fsm_t slaveFsm;      \/*!< slave transfer state machine. *\/$/;"	m	struct:_i2c_slave_handle
slaveHandle	drivers/fsl_spi_cmsis.c	/^    spi_dma_handle_t slaveHandle;$/;"	m	union:_cmsis_spi_dma_handle	file:
slaveHandle	drivers/fsl_spi_cmsis.c	/^    spi_slave_handle_t slaveHandle;$/;"	m	union:_cmsis_spi_handle	file:
slave_handle	drivers/fsl_i2c_cmsis.c	/^    i2c_slave_handle_t slave_handle;   \/*!< slave Interupt transfer handle. *\/$/;"	m	union:_cmsis_i2c_handle	file:
slipif_init	lwip/src/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_loop_thread	lwip/src/netif/slipif.c	/^slipif_loop_thread(void *nf)$/;"	f	file:
slipif_output	lwip/src/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
slipif_output_v4	lwip/src/netif/slipif.c	/^slipif_output_v4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr)$/;"	f	file:
slipif_output_v6	lwip/src/netif/slipif.c	/^slipif_output_v6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr)$/;"	f	file:
slipif_poll	lwip/src/netif/slipif.c	/^slipif_poll(struct netif *netif)$/;"	f
slipif_priv	lwip/src/netif/slipif.c	/^struct slipif_priv {$/;"	s	file:
slipif_process_rxqueue	lwip/src/netif/slipif.c	/^slipif_process_rxqueue(struct netif *netif)$/;"	f
slipif_received_byte	lwip/src/netif/slipif.c	/^slipif_received_byte(struct netif *netif, u8_t data)$/;"	f
slipif_received_bytes	lwip/src/netif/slipif.c	/^slipif_received_bytes(struct netif *netif, u8_t *data, u8_t len)$/;"	f
slipif_recv_state	lwip/src/netif/slipif.c	/^enum slipif_recv_state {$/;"	g	file:
slipif_rxbyte	lwip/src/netif/slipif.c	/^slipif_rxbyte(struct netif *netif, u8_t c)$/;"	f	file:
slipif_rxbyte_enqueue	lwip/src/netif/slipif.c	/^slipif_rxbyte_enqueue(struct netif *netif, u8_t data)$/;"	f	file:
slipif_rxbyte_input	lwip/src/netif/slipif.c	/^slipif_rxbyte_input(struct netif *netif, u8_t c)$/;"	f	file:
slot	usb/device/class/usb_device_ccid.h	/^    uint8_t slot;        \/*!< The slot number need to get *\/$/;"	m	struct:_usb_device_ccid_slot_status_struct
slots	usb/device/class/usb_device_ccid.h	/^    uint8_t slots;               \/*!< The slot number of the application *\/$/;"	m	struct:_usb_device_ccid_struct
slotsChangeBuffer	usb/device/class/usb_device_ccid.h	/^    uint8_t slotsChangeBuffer[(USB_DEVICE_CONFIG_CCID_SLOT_MAX * 2 - 1U) \/ 8 + 1U +$/;"	m	struct:_usb_device_ccid_struct
slotsChanged	usb/device/class/usb_device_ccid.h	/^    uint8_t slotsChanged;        \/*!< The slot status changed *\/$/;"	m	struct:_usb_device_ccid_struct
slotsSendingChangeBuffer	usb/device/class/usb_device_ccid.h	/^    uint8_t slotsSendingChangeBuffer[(USB_DEVICE_CONFIG_CCID_SLOT_MAX * 2 - 1U) \/ 8 + 1U +$/;"	m	struct:_usb_device_ccid_struct
slotsSequenceNumber	usb/device/class/usb_device_ccid.h	/^    uint8_t slotsSequenceNumber[USB_DEVICE_CONFIG_CCID_SLOT_MAX]; \/*!< Save each slot sequence number *\/$/;"	m	struct:_usb_device_ccid_struct
smoothing	codec2/codec2_internal.h	/^    int           smoothing;               \/* enable smoothing for channels with errors *\/$/;"	m	struct:CODEC2
smul	codec2/_kiss_fft_guts.h	64;"	d
snd_buf	lwip/src/include/lwip/tcp.h	/^  tcpwnd_size_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	lwip/src/include/lwip/tcp.h	/^  u32_t snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_nxt	lwip/src/include/lwip/tcp.h	/^  u32_t snd_nxt;   \/* next new seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	lwip/src/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Number of pbufs currently in the send buffer. *\/$/;"	m	struct:tcp_pcb
snd_scale	lwip/src/include/lwip/tcp.h	/^  u8_t snd_scale;$/;"	m	struct:tcp_pcb
snd_wl1	lwip/src/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2; \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	lwip/src/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2; \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	lwip/src/include/lwip/tcp.h	/^  tcpwnd_size_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snd_wnd_max	lwip/src/include/lwip/tcp.h	/^  tcpwnd_size_t snd_wnd_max; \/* the maximum sender window announced by the remote host *\/$/;"	m	struct:tcp_pcb
sndbuf	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_sndbuf_fn             sndbuf;$/;"	m	struct:altcp_functions
sndqueuelen	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_sndqueuelen_fn        sndqueuelen;$/;"	m	struct:altcp_functions
snmp_add_ifinoctets	lwip/src/include/lwip/snmp.h	197;"	d
snmp_add_ifoutoctets	lwip/src/include/lwip/snmp.h	203;"	d
snmp_ifType	lwip/src/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	lwip/src/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_inc_ifindiscards	lwip/src/include/lwip/snmp.h	200;"	d
snmp_inc_ifinerrors	lwip/src/include/lwip/snmp.h	201;"	d
snmp_inc_ifinnucastpkts	lwip/src/include/lwip/snmp.h	199;"	d
snmp_inc_ifinucastpkts	lwip/src/include/lwip/snmp.h	198;"	d
snmp_inc_ifinunknownprotos	lwip/src/include/lwip/snmp.h	202;"	d
snmp_inc_ifoutdiscards	lwip/src/include/lwip/snmp.h	206;"	d
snmp_inc_ifouterrors	lwip/src/include/lwip/snmp.h	207;"	d
snmp_inc_ifoutnucastpkts	lwip/src/include/lwip/snmp.h	205;"	d
snmp_inc_ifoutucastpkts	lwip/src/include/lwip/snmp.h	204;"	d
snr_est	codec2/modem_stats.h	/^    float  snr_est;                          \/* estimated SNR of rx signal in dB (3 kHz noise BW)  *\/$/;"	m	struct:MODEM_STATS
soFar	component/serial_manager/serial_manager.c	/^    volatile uint32_t soFar;$/;"	m	struct:_serial_manager_transfer	file:
sock	lwip/src/api/sockets.c	/^  struct lwip_sock *sock;$/;"	m	struct:lwip_socket_multicast_mld6_pair	typeref:struct:lwip_socket_multicast_mld6_pair::lwip_sock	file:
sock	lwip/src/api/sockets.c	/^  struct lwip_sock *sock;$/;"	m	struct:lwip_socket_multicast_pair	typeref:struct:lwip_socket_multicast_pair::lwip_sock	file:
sock_inc_used	lwip/src/api/sockets.c	/^sock_inc_used(struct lwip_sock *sock)$/;"	f	file:
sock_inc_used	lwip/src/api/sockets.c	404;"	d	file:
sock_inc_used_locked	lwip/src/api/sockets.c	/^sock_inc_used_locked(struct lwip_sock *sock)$/;"	f	file:
sock_inc_used_locked	lwip/src/api/sockets.c	405;"	d	file:
sock_set_errno	lwip/src/api/sockets.c	281;"	d	file:
sockaddr	lwip/src/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_aligned	lwip/src/api/sockets.c	/^union sockaddr_aligned {$/;"	u	file:
sockaddr_in	lwip/src/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
sockaddr_in6	lwip/src/include/lwip/sockets.h	/^struct sockaddr_in6 {$/;"	s
sockaddr_storage	lwip/src/include/lwip/sockets.h	/^struct sockaddr_storage {$/;"	s
sockaddr_to_ipaddr_port	lwip/src/api/sockets.c	/^sockaddr_to_ipaddr_port(const struct sockaddr *sockaddr, ip_addr_t *ipaddr, u16_t *port)$/;"	f	file:
socket	codec2/mpdecode_core.h	/^  int *socket; \/* socket number at the c_node *\/$/;"	m	struct:v_node
socket	codec2/mpdecode_core.h	/^  int *socket; \/* socket number at the v_node *\/$/;"	m	struct:c_node
socket	lwip/src/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	lwip/src/include/lwip/sockets.h	646;"	d
socket_ipv4_multicast_memberships	lwip/src/api/sockets.c	/^static struct lwip_socket_multicast_pair socket_ipv4_multicast_memberships[LWIP_SOCKET_MAX_MEMBERSHIPS];$/;"	v	typeref:struct:lwip_socket_multicast_pair	file:
socket_ipv6_multicast_memberships	lwip/src/api/sockets.c	/^static struct lwip_socket_multicast_mld6_pair socket_ipv6_multicast_memberships[LWIP_SOCKET_MAX_MEMBERSHIPS];$/;"	v	typeref:struct:lwip_socket_multicast_mld6_pair	file:
sockets	lwip/src/api/sockets.c	/^static struct lwip_sock sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_sock	file:
socklen_t	lwip/src/include/lwip/sockets.h	/^typedef u32_t socklen_t;$/;"	t
softdec	codec2/codec2_internal.h	/^    float        *softdec;                 \/* optional soft decn bits from demod        *\/$/;"	m	struct:CODEC2
sourceClock	lwip/port/arch/sys_arch.h	84;"	d
sourceClockReference	usb/device/class/usb_device_video.h	/^            uint8_t sourceClockReference : 1U; \/*!< Source Clock Reference. This bit, when set, indicates the presence$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
sourcePortId	drivers/fsl_enet.h	/^    uint8_t sourcePortId[kENET_PtpSrcPortIdLen]; \/*!< PTP source port ID. *\/$/;"	m	struct:_enet_ptp_time_data
source_session_id	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t source_session_id;     \/* Session ID assigned by peer *\/$/;"	m	struct:pppol2tp_pcb_s
source_tunnel_id	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t source_tunnel_id;      \/* Tunnel ID assigned by peer *\/$/;"	m	struct:pppol2tp_pcb_s
sp	emwin/emWin_header/GUI_GIF_Private.h	/^  U8 *  sp;                                 \/* Pointer into the decompression buffer *\/$/;"	m	struct:__anon323
specailConfig	drivers/fsl_emc.h	/^    uint32_t specailConfig;         \/*!< Static configuration,a logical OR of "emc_static_special_config_t". *\/$/;"	m	struct:_emc_static_chip_config
specialControl	drivers/fsl_enet.h	/^    uint16_t specialControl;                 \/*!< The logicl or of enet_special_config_t *\/$/;"	m	struct:_enet_config
speech_to_uq_lsps	codec2/quantise.c	/^float speech_to_uq_lsps(float lsp[],$/;"	f
speed	usb/device/source/ehci/usb_device_ehci.h	/^    uint8_t speed;                                 \/*!< Current speed of EHCI *\/$/;"	m	struct:_usb_device_ehci_state_struct
speed	vcom/composite.h	/^    uint8_t speed;  \/* Speed of USB device. USB_SPEED_FULL\/USB_SPEED_LOW\/USB_SPEED_HIGH.                 *\/$/;"	m	struct:_usb_device_composite_struct
speed	vcom/virtual_com.h	/^    uint8_t speed;             \/* Speed of USB device. USB_SPEED_FULL\/USB_SPEED_LOW\/USB_SPEED_HIGH.                 *\/$/;"	m	struct:_usb_cdc_vcom_struct
spi_clock_phase_t	drivers/fsl_spi.h	/^} spi_clock_phase_t;$/;"	t	typeref:enum:_spi_clock_phase
spi_clock_polarity_t	drivers/fsl_spi.h	/^} spi_clock_polarity_t;$/;"	t	typeref:enum:_spi_clock_polarity
spi_config_t	drivers/fsl_spi.h	/^} spi_config_t;$/;"	t	typeref:struct:_spi_config
spi_data_width_t	drivers/fsl_spi.h	/^} spi_data_width_t;$/;"	t	typeref:enum:_spi_data_width
spi_delay_config_t	drivers/fsl_spi.h	/^} spi_delay_config_t;$/;"	t	typeref:struct:_spi_delay_config
spi_dma_callback_t	drivers/fsl_spi_dma.h	/^typedef void (*spi_dma_callback_t)(SPI_Type *base, spi_dma_handle_t *handle, status_t status, void *userData);$/;"	t
spi_dma_handle_t	drivers/fsl_spi_dma.h	/^typedef struct _spi_dma_handle spi_dma_handle_t;$/;"	t	typeref:struct:_spi_dma_handle
spi_dma_private_handle_t	drivers/fsl_spi_dma.c	/^} spi_dma_private_handle_t;$/;"	t	typeref:struct:_spi_dma_private_handle	file:
spi_dma_txdummy_t	drivers/fsl_spi_dma.c	/^} spi_dma_txdummy_t;$/;"	t	typeref:struct:_spi_dma_txdummy	file:
spi_half_duplex_transfer_t	drivers/fsl_spi.h	/^} spi_half_duplex_transfer_t;$/;"	t	typeref:struct:_spi_half_duplex_transfer
spi_master_callback_t	drivers/fsl_spi.h	/^typedef void (*spi_master_callback_t)(SPI_Type *base, spi_master_handle_t *handle, status_t status, void *userData);$/;"	t
spi_master_config_t	drivers/fsl_spi.h	/^} spi_master_config_t;$/;"	t	typeref:struct:_spi_master_config
spi_master_handle_t	drivers/fsl_spi.h	/^typedef struct _spi_master_handle spi_master_handle_t;$/;"	t	typeref:struct:_spi_master_handle
spi_rtos_handle_t	drivers/freertos/fsl_spi_freertos.h	/^} spi_rtos_handle_t;$/;"	t	typeref:struct:_spi_rtos_handle
spi_rxfifo_watermark_t	drivers/fsl_spi.h	/^} spi_rxfifo_watermark_t;$/;"	t	typeref:enum:_spi_rxfifo_watermark
spi_shift_direction_t	drivers/fsl_spi.h	/^} spi_shift_direction_t;$/;"	t	typeref:enum:_spi_shift_direction
spi_slave_callback_t	drivers/fsl_spi.h	/^typedef void (*spi_slave_callback_t)(SPI_Type *base, spi_slave_handle_t *handle, status_t status, void *userData);$/;"	t
spi_slave_config_t	drivers/fsl_spi.h	/^} spi_slave_config_t;$/;"	t	typeref:struct:_spi_slave_config
spi_slave_handle_t	drivers/fsl_spi.h	/^typedef spi_master_handle_t spi_slave_handle_t;$/;"	t
spi_spol_t	drivers/fsl_spi.h	/^} spi_spol_t;$/;"	t	typeref:enum:_spi_spol
spi_ssel_t	drivers/fsl_spi.h	/^} spi_ssel_t;$/;"	t	typeref:enum:_spi_ssel
spi_transfer_t	drivers/fsl_spi.h	/^} spi_transfer_t;$/;"	t	typeref:struct:_spi_transfer
spi_txfifo_watermark_t	drivers/fsl_spi.h	/^} spi_txfifo_watermark_t;$/;"	t	typeref:enum:_spi_txfifo_watermark
spi_xfer_option_t	drivers/fsl_spi.h	/^} spi_xfer_option_t;$/;"	t	typeref:enum:_spi_xfer_option
sprint_buf	source/common.c	/^static char sprint_buf[512];$/;"	v	file:
sq	codec2/nlp.c	/^    float         sq[PMAX_M];	     \/* squared speech samples       *\/$/;"	m	struct:__anon138	file:
src	lwip/src/include/lwip/ip6_frag.h	/^  ip6_addr_p_t src; \/* copy of the source address in the IP header *\/$/;"	m	struct:ip6_reassdata
srcAddr	drivers/fsl_dma.h	/^    uint8_t *srcAddr;      \/*!< Source data address *\/$/;"	m	struct:_dma_transfer_config
srcClock_Hz	component/i2c/i2c.h	/^    uint32_t srcClock_Hz;  \/*!< Clock source for I2C in Hz *\/$/;"	m	struct:_hal_i2c_master_config
srcClock_Hz	component/i2c/i2c.h	/^    uint32_t srcClock_Hz;  \/*!< Clock source for I2C in Hz *\/$/;"	m	struct:_hal_i2c_slave_config
srcClock_Hz	component/timer/timer.h	/^    uint32_t srcClock_Hz;                 \/*!< Source clock of the timer *\/$/;"	m	struct:_hal_timer_config
srcClock_Hz	component/uart/uart.h	/^    uint32_t srcClock_Hz;                   \/*!< Source clock *\/$/;"	m	struct:_hal_uart_config
srcEndAddr	drivers/fsl_dma.h	/^    void *srcEndAddr;          \/*!< Last source address of DMA transfer *\/$/;"	m	struct:_dma_descriptor
srcInc	drivers/fsl_dma.h	/^    uint8_t srcInc;         \/*!< Increment source address by 'srcInc' x 'byteWidth' *\/$/;"	m	struct:_dma_xfercfg
srcStartAddr	drivers/fsl_dma.h	/^    void *srcStartAddr;             \/*!< Source data address *\/$/;"	m	struct:_dma_channel_config
src_zone	lwip/src/include/lwip/ip6_frag.h	/^  u8_t src_zone; \/* zone of original packet's source address *\/$/;"	m	struct:ip6_reassdata
sround	codec2/_kiss_fft_guts.h	65;"	d
srp_lwrechallenge	lwip/src/netif/ppp/eap.c	/^static void srp_lwrechallenge(void *arg) {$/;"	f	file:
ss_family	lwip/src/include/lwip/sockets.h	/^  sa_family_t ss_family;$/;"	m	struct:sockaddr_storage
sselNum	drivers/fsl_spi.h	/^    spi_ssel_t sselNum;                 \/*!< Slave select number *\/$/;"	m	struct:_spi_master_config
sselNum	drivers/fsl_spi.h	/^    spi_ssel_t sselNum;$/;"	m	struct:_spi_config
sselNum	drivers/fsl_spi.h	/^    uint8_t sselNum;      \/*!< Slave select number to be asserted when transferring data [Valid values: 0 to 3] *\/$/;"	m	struct:_spi_master_handle
sselPol	drivers/fsl_spi.h	/^    spi_spol_t sselPol;                 \/*!< Configure active CS polarity *\/$/;"	m	struct:_spi_master_config
sselPol	drivers/fsl_spi.h	/^    spi_spol_t sselPol;                 \/*!< Configure active CS polarity *\/$/;"	m	struct:_spi_slave_config
ssize_t	lwip/src/include/lwip/arch.h	/^typedef int ssize_t;$/;"	t
ssthresh	lwip/src/include/lwip/tcp.h	/^  tcpwnd_size_t ssthresh;$/;"	m	struct:tcp_pcb
stale_time	lwip/src/include/lwip/priv/nd6_priv.h	/^    u32_t stale_time;     \/* ticks (ND6_TMR_INTERVAL) *\/$/;"	m	union:nd6_neighbor_cache_entry::__anon453
stallPrimed	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t stallPrimed : 1U;$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
stallStatus	usb/device/class/usb_device_msc.h	/^    uint8_t stallStatus;  \/*!< Stall status*\/$/;"	m	struct:_usb_device_msc_struct
stalled	usb/device/source/khci/usb_device_khci.h	/^            uint32_t stalled : 1U;        \/*!< The endpoint is stalled or not *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct::__anon525::__anon526
stalled	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t stalled : 1U;        \/*!< The endpoint is stalled or not *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
standardTranscationBuffer	usb/device/class/usb_device_class.h	/^    uint16_t standardTranscationBuffer;                \/*!<$/;"	m	struct:_usb_device_common_class_struct
startTransactions	vcom/virtual_com.h	/^    uint8_t startTransactions; \/* A flag to indicate whether a CDC device is ready to transmit and receive data.    *\/$/;"	m	struct:_usb_cdc_vcom_struct
start_networks	lwip/src/netif/ppp/auth.c	/^void start_networks(ppp_pcb *pcb) {$/;"	f
start_time	lwip/src/netif/ppp/ppp.c	/^static struct timeval start_time; \/* Time when link was started. *\/$/;"	v	typeref:struct:timeval	file:
starting	lwip/src/include/netif/ppp/fsm.h	/^    void (*starting)		\/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
startingLogicalBlockAddress	usb/device/class/usb_device_msc.h	/^    uint32_t startingLogicalBlockAddress; \/*!< The logical block at which the read\/write operation shall begin*\/$/;"	m	struct:_usb_lba_transfer_information_struct
state	CMSIS/arm_math.h	/^    float32_t state[3];    \/**< The state array of length 3. *\/$/;"	m	struct:__anon64
state	CMSIS/arm_math.h	/^    q15_t state[3];     \/**< The state array of length 3. *\/$/;"	m	struct:__anon62
state	CMSIS/arm_math.h	/^    q31_t state[3];      \/**< The state array of length 3. *\/$/;"	m	struct:__anon63
state	codec2/varicode.h	/^    int            state;$/;"	m	struct:VARICODE_DEC
state	drivers/fsl_dmic_dma.h	/^    volatile uint8_t state;                \/*!< Internal state of DMIC DMA transfer *\/$/;"	m	struct:_dmic_dma_handle
state	drivers/fsl_i2c.h	/^    uint8_t state;           \/*!< Transfer state machine current state. *\/$/;"	m	struct:_i2c_master_handle
state	drivers/fsl_i2c_dma.h	/^    uint8_t state;              \/*!< Transfer state machine current state. *\/$/;"	m	struct:_i2c_master_dma_handle
state	drivers/fsl_i2s.h	/^    uint32_t state;                             \/*!< State of transfer *\/$/;"	m	struct:_i2s_handle
state	drivers/fsl_i2s_dma.h	/^    uint32_t state;                                    \/*!< Internal state of I2S DMA transfer *\/$/;"	m	struct:_i2s_dma_handle
state	drivers/fsl_sha.c	/^    sha_algo_state_t state; \/*!< finite machine state of the hash software process *\/$/;"	m	struct:_sha_ctx_internal	file:
state	drivers/fsl_spi.h	/^    volatile uint32_t state;          \/*!< SPI internal state *\/$/;"	m	struct:_spi_master_handle
state	drivers/fsl_spi_dma.h	/^    uint32_t state;              \/*!< Internal state of SPI DMA transfer *\/$/;"	m	struct:_spi_dma_handle
state	lwip/src/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	lwip/src/core/ipv4/etharp.c	/^  u8_t state;$/;"	m	struct:etharp_entry	file:
state	lwip/src/include/lwip/altcp.h	/^  void *state;$/;"	m	struct:altcp_pcb
state	lwip/src/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	lwip/src/include/lwip/autoip.h	/^  u8_t state;$/;"	m	struct:autoip
state	lwip/src/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	lwip/src/include/lwip/dhcp6.h	/^  u8_t state;$/;"	m	struct:dhcp6
state	lwip/src/include/lwip/netif.h	/^    u8_t state;$/;"	m	struct:__anon451::link_changed_s
state	lwip/src/include/lwip/netif.h	/^    u8_t state;$/;"	m	struct:__anon451::status_changed_s
state	lwip/src/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	lwip/src/include/lwip/priv/api_msg.h	/^      void *state;$/;"	m	struct:netifapi_msg::__anon463::__anon464
state	lwip/src/include/lwip/priv/nd6_priv.h	/^  u8_t state;$/;"	m	struct:nd6_neighbor_cache_entry
state	lwip/src/include/netif/ppp/fsm.h	/^    u8_t state;			\/* State *\/$/;"	m	struct:fsm
state	lwip/src/include/netif/ppp/polarssl/md4.h	/^    unsigned long state[4];     \/*!< intermediate digest state  *\/$/;"	m	struct:__anon428
state	lwip/src/include/netif/ppp/polarssl/md5.h	/^    unsigned long state[4];     \/*!< intermediate digest state  *\/$/;"	m	struct:__anon431
state	lwip/src/include/netif/ppp/polarssl/sha1.h	/^    unsigned long state[5];     \/*!< intermediate digest state  *\/$/;"	m	struct:__anon430
state	lwip/src/netif/slipif.c	/^  u8_t state;$/;"	m	struct:slipif_priv	file:
state	usb/device/source/khci/usb_device_khci.h	/^        uint32_t state; \/*!< The state of the endpoint *\/$/;"	m	union:_usb_device_khci_endpoint_state_struct::__anon525
state	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^        uint32_t state; \/*!< The state of the endpoint *\/$/;"	m	union:_usb_device_lpc3511ip_endpoint_state_struct::__anon511
state	usb/device/source/usb_device_dci.h	/^    uint8_t state;                                     \/*!< Current device state *\/$/;"	m	struct:_usb_device_struct
stateBitField	usb/device/source/khci/usb_device_khci.h	/^        } stateBitField;$/;"	m	union:_usb_device_khci_endpoint_state_struct::__anon525	typeref:struct:_usb_device_khci_endpoint_state_struct::__anon525::__anon526
stateBitField	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^        } stateBitField;$/;"	m	union:_usb_device_lpc3511ip_endpoint_state_struct::__anon511	typeref:struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
stateIndex	CMSIS/arm_math.h	/^    uint16_t stateIndex;          \/**< state buffer index.  Points to the oldest sample in the state buffer. *\/$/;"	m	struct:__anon108
stateIndex	CMSIS/arm_math.h	/^    uint16_t stateIndex;          \/**< state buffer index.  Points to the oldest sample in the state buffer. *\/$/;"	m	struct:__anon109
stateIndex	CMSIS/arm_math.h	/^    uint16_t stateIndex;          \/**< state buffer index.  Points to the oldest sample in the state buffer. *\/$/;"	m	struct:__anon110
stateIndex	CMSIS/arm_math.h	/^    uint16_t stateIndex;          \/**< state buffer index.  Points to the oldest sample in the state buffer. *\/$/;"	m	struct:__anon111
stateUnion	usb/device/source/khci/usb_device_khci.h	/^    } stateUnion;$/;"	m	struct:_usb_device_khci_endpoint_state_struct	typeref:union:_usb_device_khci_endpoint_state_struct::__anon525
stateUnion	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    } stateUnion;$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct	typeref:union:_usb_device_lpc3511ip_endpoint_state_struct::__anon511
stateful	lwip/src/include/netif/ppp/mppe.h	/^	unsigned int stateful  :1;  \/* stateful mode flag *\/$/;"	m	struct:ppp_mppe_state
static	amazon-freertos/freertos/tasks.c	106;"	d	file:
stats	codec2/fsk.h	/^    struct MODEM_STATS *stats;$/;"	m	struct:FSK	typeref:struct:FSK::MODEM_STATS
stats	lwip/src/include/lwip/priv/memp_priv.h	/^  struct stats_mem *stats;$/;"	m	struct:memp_desc	typeref:struct:memp_desc::stats_mem
stats	lwip/src/include/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	lwip/src/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	lwip/src/core/stats.c	/^stats_display(void)$/;"	f
stats_display	lwip/src/include/lwip/stats.h	479;"	d
stats_display_igmp	lwip/src/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp, const char *name)$/;"	f
stats_display_igmp	lwip/src/include/lwip/stats.h	481;"	d
stats_display_mem	lwip/src/core/stats.c	/^stats_display_mem(struct stats_mem *mem, const char *name)$/;"	f
stats_display_mem	lwip/src/include/lwip/stats.h	482;"	d
stats_display_memp	lwip/src/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int idx)$/;"	f
stats_display_memp	lwip/src/include/lwip/stats.h	483;"	d
stats_display_proto	lwip/src/core/stats.c	/^stats_display_proto(struct stats_proto *proto, const char *name)$/;"	f
stats_display_proto	lwip/src/include/lwip/stats.h	480;"	d
stats_display_sys	lwip/src/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	lwip/src/include/lwip/stats.h	484;"	d
stats_igmp	lwip/src/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	lwip/src/core/stats.c	/^stats_init(void)$/;"	f
stats_init	lwip/src/include/lwip/stats.h	318;"	d
stats_mem	lwip/src/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_mib2	lwip/src/include/lwip/stats.h	/^struct stats_mib2 {$/;"	s
stats_mib2_netif_ctrs	lwip/src/include/lwip/stats.h	/^struct stats_mib2_netif_ctrs {$/;"	s
stats_proto	lwip/src/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	lwip/src/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	lwip/src/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	component/serial_manager/serial_manager.c	/^    serial_manager_status_t status;$/;"	m	struct:_serial_manager_transfer	file:
status	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t status;$/;"	m	struct:_rndis_indicate_status_msg_struct
status	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t status;$/;"	m	struct:_rndis_init_cmplt_struct
status	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t status;$/;"	m	struct:_rndis_keepalive_cmplt_struct
status	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t status;$/;"	m	struct:_rndis_query_cmplt_struct
status	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t status;$/;"	m	struct:_rndis_reset_cmplt_struct
status	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t status;$/;"	m	struct:_rndis_set_cmplt_struct
status	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t status : 8;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon521::__anon522
status	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t status : 8;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon517::__anon518
statusBufferLength	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t statusBufferLength;$/;"	m	struct:_rndis_indicate_status_msg_struct
statusBufferOffset	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t statusBufferOffset;$/;"	m	struct:_rndis_indicate_status_msg_struct
statusMutex	usb/device/class/usb_device_cdc_rndis.h	/^    usb_osa_mutex_handle statusMutex;     \/*!< The mutex to guarantee the consistent access to the device state. *\/$/;"	m	struct:_usb_device_cdc_rndis_struct
status_callback	lwip/src/include/lwip/netif.h	/^  netif_status_callback_fn status_callback;$/;"	m	struct:netif
status_changed	lwip/src/include/lwip/netif.h	/^  } status_changed;$/;"	m	union:__anon451	typeref:struct:__anon451::status_changed_s
status_changed_s	lwip/src/include/lwip/netif.h	/^  struct status_changed_s$/;"	s	union:__anon451
status_t	drivers/fsl_common.h	/^typedef int32_t status_t;$/;"	t
stereo_side_t	drivers/fsl_dmic.h	/^} stereo_side_t;$/;"	t	typeref:enum:_stereo_side
stillImage	usb/device/class/usb_device_video.h	/^            uint8_t stillImage : 1U;  \/*!< Still Image. This bit, when set, identifies a video sample that belongs to a$/;"	m	struct:_usb_device_video_mjpeg_payload_header_struct::__anon503::__anon504
stopBitCount	component/serial_manager/serial_port_uart.h	/^    serial_port_uart_stop_bit_count_t stopBitCount; \/*!< Number of stop bits, 1 stop bit (default) or 2 stop bits  *\/$/;"	m	struct:_serial_port_uart_config
stopBitCount	component/uart/uart.h	/^    hal_uart_stop_bit_count_t stopBitCount; \/*!< Number of stop bits, 1 stop bit (default) or 2 stop bits  *\/$/;"	m	struct:_hal_uart_config
stopBitCount	drivers/fsl_usart.h	/^    usart_stop_bit_count_t stopBitCount;  \/*!< Number of stop bits, 1 stop bit (default) or 2 stop bits  *\/$/;"	m	struct:_usart_config
str_to_epdisc	lwip/src/netif/ppp/multilink.c	/^str_to_epdisc(ep, str)$/;"	f
streamAlternate	usb/device/class/usb_device_audio.h	/^    uint8_t streamAlternate;                               \/*!< Current alternate setting of the stream interface *\/$/;"	m	struct:_usb_device_audio_struct
streamAlternate	usb/device/class/usb_device_video.h	/^    uint8_t streamAlternate;                               \/*!< Current alternate setting of the stream interface *\/$/;"	m	struct:_usb_device_video_struct
streamInPipeBusy	usb/device/class/usb_device_audio.h	/^    uint8_t streamInPipeBusy;                              \/*!< Stream IN pipe busy flag *\/$/;"	m	struct:_usb_device_audio_struct
streamInPipeBusy	usb/device/class/usb_device_video.h	/^    uint8_t streamInPipeBusy;                              \/*!< Stream IN pipe busy flag *\/$/;"	m	struct:_usb_device_video_struct
streamInterfaceHandle	usb/device/class/usb_device_audio.h	/^    usb_device_interface_struct_t *streamInterfaceHandle;  \/*!< Current stream interface handle *\/$/;"	m	struct:_usb_device_audio_struct
streamInterfaceHandle	usb/device/class/usb_device_video.h	/^    usb_device_interface_struct_t *streamInterfaceHandle;  \/*!< Current stream interface handle *\/$/;"	m	struct:_usb_device_video_struct
streamInterfaceNumber	usb/device/class/usb_device_audio.h	/^    uint8_t streamInterfaceNumber;                         \/*!< The stream interface number of the class *\/$/;"	m	struct:_usb_device_audio_struct
streamInterfaceNumber	usb/device/class/usb_device_video.h	/^    uint8_t streamInterfaceNumber;                         \/*!< The stream interface number of the class *\/$/;"	m	struct:_usb_device_video_struct
streamOutPipeBusy	usb/device/class/usb_device_audio.h	/^    uint8_t streamOutPipeBusy;                             \/*!< Stream OUT pipe busy flag *\/$/;"	m	struct:_usb_device_audio_struct
streamOutPipeBusy	usb/device/class/usb_device_video.h	/^    uint8_t streamOutPipeBusy;                             \/*!< Stream OUT pipe busy flag *\/$/;"	m	struct:_usb_device_video_struct
string	usb/include/usb_spec.h	/^    uint8_t **string;    \/* The Strings descriptor array *\/$/;"	m	struct:_usb_language
stringDescriptor	usb/device/class/usb_device_class.h	/^    usb_device_get_string_descriptor_struct_t stringDescriptor; \/*!< The structure to get string descriptor. *\/$/;"	m	union:_usb_device_get_descriptor_common_union
stringIndex	usb/device/class/usb_device_class.h	/^    uint8_t stringIndex; \/*!< String index. *\/$/;"	m	struct:_usb_device_get_string_descriptor_struct
stringLength	usb/include/usb_spec.h	/^    uint32_t stringLength;        \/* The String 0U Length *\/$/;"	m	struct:_usb_language_list
subaddrBuf	drivers/fsl_i2c.h	/^    uint8_t subaddrBuf[4];$/;"	m	struct:_i2c_master_handle
subaddrBuf	drivers/fsl_i2c_dma.h	/^    uint8_t subaddrBuf[4];$/;"	m	struct:_i2c_master_dma_handle
subaddress	component/i2c/i2c.h	/^    uint32_t subaddress;           \/*!< A sub address. Transferred MSB first. *\/$/;"	m	struct:_hal_i2c_master_transfer
subaddress	drivers/fsl_i2c.h	/^    uint32_t subaddress;       \/*!< Sub address. Transferred MSB first. *\/$/;"	m	struct:_i2c_master_transfer
subaddressSize	component/i2c/i2c.h	/^    uint8_t subaddressSize;        \/*!< A size of the command buffer. *\/$/;"	m	struct:_hal_i2c_master_transfer
subaddressSize	drivers/fsl_i2c.h	/^    size_t subaddressSize;     \/*!< Length of sub address to send in bytes. Maximum size is 4 bytes. *\/$/;"	m	struct:_i2c_master_transfer
subclassCode	usb/device/class/usb_device_class.h	/^    uint8_t subclassCode;                     \/*!< Subclass code of the interface*\/$/;"	m	struct:_usb_device_interfaces_struct
subnet_mask_given	lwip/src/include/lwip/dhcp.h	/^  u8_t subnet_mask_given;$/;"	m	struct:dhcp
substate	codec2/kiss_fftr.c	/^    kiss_fft_cfg substate;$/;"	m	struct:kiss_fftr_state	file:
super_twiddles	codec2/kiss_fftr.c	/^    kiss_fft_cpx * super_twiddles;$/;"	m	struct:kiss_fftr_state	file:
sv	lwip/src/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @see "Congestion Avoidance and Control" by Van Jacobson and Karels *\/$/;"	m	struct:tcp_pcb
swap_bytes	drivers/fsl_sha.c	/^static uint32_t swap_bytes(uint32_t in)$/;"	f	file:
swoHandleBuffer	component/serial_manager/serial_manager.c	/^        uint8_t swoHandleBuffer[SERIAL_PORT_SWO_HANDLE_SIZE];$/;"	m	union:_serial_manager_handle::__anon139	file:
swtrig	drivers/fsl_dma.h	/^    bool swtrig;            \/*!< Perform software trigger. Transfer if fired$/;"	m	struct:_dma_xfercfg
sx1276_task_handler	radio/radio.c	/^TaskHandle_t sx1276_task_handler;$/;"	v
sx1276_tx_handler	radio/radio.c	/^TaskHandle_t sx1276_tx_handler;$/;"	v
sync	codec2/modem_stats.h	/^    int    sync;                             \/* demod sync state                                   *\/$/;"	m	struct:MODEM_STATS
sync	littlefs/littlefs_include/lfs.h	/^    int (*sync)(const struct lfs_config *c);$/;"	m	struct:lfs_config
syncMode	drivers/fsl_usart.h	/^    usart_sync_mode_t syncMode; \/*!< Transfer mode select - asynchronous, synchronous master, synchronous slave. *\/$/;"	m	struct:_usart_config
sync_counter	codec2/ofdm_internal.h	/^    int sync_counter;$/;"	m	struct:OFDM
sync_end	codec2/ofdm_internal.h	/^    int sync_end;$/;"	m	struct:OFDM
sync_mode	codec2/ofdm_internal.h	/^    int sync_mode;$/;"	m	struct:OFDM
sync_start	codec2/ofdm_internal.h	/^    int sync_start;$/;"	m	struct:OFDM
sync_state	codec2/ofdm_internal.h	/^    char sync_state[OFDM_STATE_STR];$/;"	m	struct:OFDM
sync_state_interleaver	codec2/ofdm_internal.h	/^    char sync_state_interleaver[OFDM_STATE_STR];$/;"	m	struct:OFDM
syndrome	codec2/golay23.c	/^static int syndrome(int c) {$/;"	f	file:
synthesis_filter	codec2/lpc.c	/^void synthesis_filter($/;"	f
synthesise	codec2/sine.c	/^void synthesise($/;"	f
synthesise_one_frame	codec2/codec2.c	/^void synthesise_one_frame(struct CODEC2 *c2, short speech[], MODEL *model, COMP Aw[], float gain)$/;"	f
sys	lwip/src/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	lwip/port/sys_arch.c	/^u32_t sys_arch_mbox_fetch( sys_mbox_t *pxMailBox, void **ppvBuffer, u32_t ulTimeOut )$/;"	f
sys_arch_mbox_tryfetch	lwip/port/sys_arch.c	/^u32_t sys_arch_mbox_tryfetch( sys_mbox_t *pxMailBox, void **ppvBuffer )$/;"	f
sys_arch_protect	lwip/port/sys_arch.c	/^sys_prot_t sys_arch_protect( void )$/;"	f
sys_arch_sem_wait	lwip/port/sys_arch.c	/^u32_t sys_arch_sem_wait( sys_sem_t *pxSemaphore, u32_t ulTimeout )$/;"	f
sys_arch_sem_wait	lwip/src/include/lwip/sys.h	57;"	d
sys_arch_unprotect	lwip/port/sys_arch.c	/^void sys_arch_unprotect( sys_prot_t xValue )$/;"	f
sys_assert	lwip/port/sys_arch.c	/^void sys_assert( char *pcMessage )$/;"	f
sys_check_timeouts	lwip/src/core/timeouts.c	/^sys_check_timeouts(void)$/;"	f
sys_init	lwip/port/sys_arch.c	/^void sys_init(void)$/;"	f
sys_mbox_fetch	lwip/src/include/lwip/sys.h	370;"	d
sys_mbox_fetch	lwip/src/include/lwip/sys.h	70;"	d
sys_mbox_free	lwip/port/sys_arch.c	/^void sys_mbox_free( sys_mbox_t *pxMailBox )$/;"	f
sys_mbox_free	lwip/src/include/lwip/sys.h	74;"	d
sys_mbox_new	lwip/port/sys_arch.c	/^err_t sys_mbox_new( sys_mbox_t *pxMailBox, int iSize )$/;"	f
sys_mbox_new	lwip/src/include/lwip/sys.h	69;"	d
sys_mbox_post	lwip/port/sys_arch.c	/^void sys_mbox_post( sys_mbox_t *pxMailBox, void *pxMessageToPost )$/;"	f
sys_mbox_post	lwip/src/include/lwip/sys.h	72;"	d
sys_mbox_set_invalid	lwip/port/arch/sys_arch.h	67;"	d
sys_mbox_set_invalid	lwip/src/include/lwip/sys.h	77;"	d
sys_mbox_set_invalid_val	lwip/src/include/lwip/sys.h	401;"	d
sys_mbox_set_invalid_val	lwip/src/include/lwip/sys.h	78;"	d
sys_mbox_t	lwip/port/arch/sys_arch.h	/^typedef QueueHandle_t sys_mbox_t;$/;"	t
sys_mbox_t	lwip/src/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_tryfetch	lwip/src/include/lwip/sys.h	360;"	d
sys_mbox_tryfetch	lwip/src/include/lwip/sys.h	71;"	d
sys_mbox_trypost	lwip/port/sys_arch.c	/^err_t sys_mbox_trypost( sys_mbox_t *pxMailBox, void *pxMessageToPost )$/;"	f
sys_mbox_trypost	lwip/src/include/lwip/sys.h	73;"	d
sys_mbox_trypost_fromisr	lwip/port/sys_arch.c	/^err_t sys_mbox_trypost_fromisr(sys_mbox_t *mbox, void *msg)$/;"	f
sys_mbox_valid	lwip/port/arch/sys_arch.h	66;"	d
sys_mbox_valid	lwip/src/include/lwip/sys.h	75;"	d
sys_mbox_valid_val	lwip/src/include/lwip/sys.h	395;"	d
sys_mbox_valid_val	lwip/src/include/lwip/sys.h	76;"	d
sys_msleep	lwip/src/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_msleep	lwip/src/include/lwip/sys.h	82;"	d
sys_mutex_free	lwip/port/sys_arch.c	/^void sys_mutex_free( sys_mutex_t *pxMutex )$/;"	f
sys_mutex_free	lwip/src/include/lwip/sys.h	117;"	d
sys_mutex_free	lwip/src/include/lwip/sys.h	66;"	d
sys_mutex_lock	lwip/port/sys_arch.c	/^void sys_mutex_lock( sys_mutex_t *pxMutex )$/;"	f
sys_mutex_lock	lwip/src/include/lwip/sys.h	115;"	d
sys_mutex_lock	lwip/src/include/lwip/sys.h	64;"	d
sys_mutex_new	lwip/port/sys_arch.c	/^err_t sys_mutex_new( sys_mutex_t *pxMutex )$/;"	f
sys_mutex_new	lwip/src/include/lwip/sys.h	114;"	d
sys_mutex_new	lwip/src/include/lwip/sys.h	63;"	d
sys_mutex_set_invalid	lwip/src/include/lwip/sys.h	119;"	d
sys_mutex_set_invalid	lwip/src/include/lwip/sys.h	68;"	d
sys_mutex_t	lwip/port/arch/sys_arch.h	/^typedef SemaphoreHandle_t sys_mutex_t;$/;"	t
sys_mutex_t	lwip/src/include/lwip/sys.h	/^typedef u8_t sys_mutex_t;$/;"	t
sys_mutex_t	lwip/src/include/lwip/sys.h	113;"	d
sys_mutex_unlock	lwip/port/sys_arch.c	/^void sys_mutex_unlock(sys_mutex_t *pxMutex )$/;"	f
sys_mutex_unlock	lwip/src/include/lwip/sys.h	116;"	d
sys_mutex_unlock	lwip/src/include/lwip/sys.h	65;"	d
sys_mutex_valid	lwip/src/include/lwip/sys.h	118;"	d
sys_mutex_valid	lwip/src/include/lwip/sys.h	67;"	d
sys_now	lwip/port/sys_arch.c	/^u32_t sys_now(void)$/;"	f
sys_prot_t	lwip/port/arch/sys_arch.h	/^typedef unsigned long sys_prot_t;$/;"	t
sys_restart_timeouts	lwip/src/core/timeouts.c	/^sys_restart_timeouts(void)$/;"	f
sys_sem_free	lwip/port/sys_arch.c	/^void sys_sem_free( sys_sem_t *pxSemaphore )$/;"	f
sys_sem_free	lwip/src/include/lwip/sys.h	58;"	d
sys_sem_new	lwip/port/sys_arch.c	/^err_t sys_sem_new( sys_sem_t *pxSemaphore, u8_t ucCount )$/;"	f
sys_sem_new	lwip/src/include/lwip/sys.h	54;"	d
sys_sem_set_invalid	lwip/port/arch/sys_arch.h	69;"	d
sys_sem_set_invalid	lwip/src/include/lwip/sys.h	61;"	d
sys_sem_set_invalid_val	lwip/src/include/lwip/sys.h	258;"	d
sys_sem_set_invalid_val	lwip/src/include/lwip/sys.h	62;"	d
sys_sem_signal	lwip/port/sys_arch.c	/^void sys_sem_signal( sys_sem_t *pxSemaphore )$/;"	f
sys_sem_signal	lwip/src/include/lwip/sys.h	55;"	d
sys_sem_t	lwip/port/arch/sys_arch.h	/^typedef SemaphoreHandle_t sys_sem_t;$/;"	t
sys_sem_t	lwip/src/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_valid	lwip/port/arch/sys_arch.h	68;"	d
sys_sem_valid	lwip/src/include/lwip/sys.h	59;"	d
sys_sem_valid_val	lwip/src/include/lwip/sys.h	252;"	d
sys_sem_valid_val	lwip/src/include/lwip/sys.h	60;"	d
sys_sem_wait	lwip/src/include/lwip/sys.h	227;"	d
sys_sem_wait	lwip/src/include/lwip/sys.h	56;"	d
sys_thread_new	lwip/port/sys_arch.c	/^sys_thread_t sys_thread_new( const char *pcName, void( *pxThread )( void *pvParameters ), void *pvArg, int iStackSize, int iPriority )$/;"	f
sys_thread_new	lwip/src/include/lwip/sys.h	80;"	d
sys_thread_t	lwip/port/arch/sys_arch.h	/^typedef TaskHandle_t sys_thread_t;$/;"	t
sys_timeo	lwip/src/include/lwip/timeouts.h	/^struct sys_timeo {$/;"	s
sys_timeout	lwip/src/include/lwip/timeouts.h	107;"	d
sys_timeout_abs	lwip/src/core/timeouts.c	/^sys_timeout_abs(u32_t abs_time, sys_timeout_handler handler, void *arg, const char *handler_name)$/;"	f	file:
sys_timeout_debug	lwip/src/core/timeouts.c	/^sys_timeout_debug(u32_t msecs, sys_timeout_handler handler, void *arg, const char *handler_name)$/;"	f
sys_timeout_handler	lwip/src/include/lwip/timeouts.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts_get_next_timeout	lwip/src/core/timeouts.c	/^sys_timeouts_get_next_timeout(void)$/;"	f
sys_timeouts_init	lwip/src/core/timeouts.c	/^void sys_timeouts_init(void)$/;"	f
sys_timeouts_sleeptime	lwip/src/core/timeouts.c	/^sys_timeouts_sleeptime(void)$/;"	f
sys_untimeout	lwip/src/core/timeouts.c	/^sys_untimeout(sys_timeout_handler handler, void *arg)$/;"	f
t0	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_parameters_T0_response_t t0;  \/*!< Response ICC parameter structure for T0 *\/$/;"	m	union:_usb_device_ccid_parameters_response_common
t0	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_set_parameters_t0_command_t t0;  \/*!< Set ICC parameter structure for T0 *\/$/;"	m	union:_usb_device_ccid_set_parameters_command_common
t0_timeout	lwip/src/include/lwip/dhcp.h	/^  u16_t t0_timeout; \/* #ticks with period DHCP_COARSE_TIMER_SECS for lease time *\/$/;"	m	struct:dhcp
t1	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_parameters_T1_response_t t1;  \/*!< Response ICC parameter structure for T1 *\/$/;"	m	union:_usb_device_ccid_parameters_response_common
t1	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_set_parameters_t1_command_t t1;  \/*!< Set ICC parameter structure for T1 *\/$/;"	m	union:_usb_device_ccid_set_parameters_command_common
t1_renew_time	lwip/src/include/lwip/dhcp.h	/^  u16_t t1_renew_time;  \/* #ticks with period DHCP_COARSE_TIMER_SECS until next renew try *\/$/;"	m	struct:dhcp
t1_timeout	lwip/src/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_rebind_time	lwip/src/include/lwip/dhcp.h	/^  u16_t t2_rebind_time; \/* #ticks with period DHCP_COARSE_TIMER_SECS until next rebind try *\/$/;"	m	struct:dhcp
t2_timeout	lwip/src/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
tApr_Ns	drivers/fsl_emc.h	/^    uint32_t tApr_Ns;               \/*!< Last data out to active command time in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tDal_Ns	drivers/fsl_emc.h	/^    uint32_t tDal_Ns;               \/*!< Data-in to active command in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tDrawImage	emwin/emWin_header/ICONVIEW_Private.h	/^typedef void tDrawImage    (const void * pData, GUI_GET_DATA_FUNC * pfGetData, int xPos, int yPos);$/;"	t
tDrawText	emwin/emWin_header/ICONVIEW_Private.h	/^typedef void tDrawText     (ICONVIEW_OBJ * pObj, GUI_RECT * pRect, const char * s);$/;"	t
tEDIT_AddKeyEx	emwin/emWin_header/EDIT.h	/^typedef void tEDIT_AddKeyEx    (EDIT_Handle hObj, int Key);$/;"	t
tEDIT_UpdateBuffer	emwin/emWin_header/EDIT.h	/^typedef void tEDIT_UpdateBuffer(EDIT_Handle hObj);$/;"	t
tGL_DispLine	emwin/emWin_header/GUI_Type.h	/^typedef void tGL_DispLine     (const char * s, int Len);$/;"	t
tGUI_CalcSizeOfChar	emwin/emWin_header/GUI_Type.h	/^typedef int  tGUI_CalcSizeOfChar(U16 Char);$/;"	t
tGUI_ENC_APIList	emwin/emWin_header/GUI_Type.h	/^} tGUI_ENC_APIList;$/;"	t	typeref:struct:__anon260
tGUI_Encode	emwin/emWin_header/GUI_Type.h	/^typedef int  tGUI_Encode        (char * s, U16 Char);$/;"	t
tGUI_GetCharCode	emwin/emWin_header/GUI_Type.h	/^typedef U16  tGUI_GetCharCode   (const char * s);$/;"	t
tGUI_GetCharSize	emwin/emWin_header/GUI_Type.h	/^typedef int  tGUI_GetCharSize   (const char * s);$/;"	t
tGUI_GetLineDistX	emwin/emWin_header/GUI_Type.h	/^typedef int  tGUI_GetLineDistX(const char * s, int Len);$/;"	t
tGUI_GetLineLen	emwin/emWin_header/GUI_Type.h	/^typedef int  tGUI_GetLineLen  (const char * s, int MaxLen);$/;"	t
tGUI_SIF_APIList	emwin/emWin_header/GUI_Type.h	/^} tGUI_SIF_APIList;$/;"	t	typeref:struct:tGUI_SIF_APIList_struct
tGUI_SIF_APIList_struct	emwin/emWin_header/GUI_Type.h	/^typedef struct tGUI_SIF_APIList_struct {$/;"	s
tGUI_XBF_APIList	emwin/emWin_header/GUI_Type.h	/^} tGUI_XBF_APIList;$/;"	t	typeref:struct:tGUI_XBF_APIList_struct
tGUI_XBF_APIList_struct	emwin/emWin_header/GUI_Type.h	/^typedef struct tGUI_XBF_APIList_struct {$/;"	s
tGetImageSizes	emwin/emWin_header/ICONVIEW_Private.h	/^typedef void tGetImageSizes(const void * pData, GUI_GET_DATA_FUNC * pfGetData, int * xSize, int * ySize);$/;"	t
tLCDDEV_Color2Index	emwin/emWin_header/LCD.h	/^typedef LCD_PIXELINDEX tLCDDEV_Color2Index  (LCD_COLOR Color);$/;"	t
tLCDDEV_Color2IndexBulk	emwin/emWin_header/LCD.h	/^typedef void tLCDDEV_Color2IndexBulk(LCD_COLOR * pColor, void * pIndex, U32 NumItems, U8 SizeOfIndex);$/;"	t
tLCDDEV_DrawBitmap	emwin/emWin_header/LCD.h	/^typedef void tLCDDEV_DrawBitmap   (int x0, int y0, int xsize, int ysize,$/;"	t
tLCDDEV_DrawHLine	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_DrawHLine    (int x0, int y0,  int x1);$/;"	t
tLCDDEV_DrawPixel	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_DrawPixel    (int x, int y);$/;"	t
tLCDDEV_DrawVLine	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_DrawVLine    (int x , int y0,  int y1);$/;"	t
tLCDDEV_FillPolygon	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_FillPolygon  (const GUI_POINT * pPoints, int NumPoints, int x0, int y0);$/;"	t
tLCDDEV_FillPolygonAA	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_FillPolygonAA(const GUI_POINT * pPoints, int NumPoints, int x0, int y0);$/;"	t
tLCDDEV_FillRect	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_FillRect     (int x0, int y0, int x1, int y1);$/;"	t
tLCDDEV_GetDevFunc	emwin/emWin_header/LCD.h	/^typedef void *       tLCDDEV_GetDevFunc   (int Index);$/;"	t
tLCDDEV_GetDevProp	emwin/emWin_header/LCD.h	/^typedef I32          tLCDDEV_GetDevProp   (int Index);$/;"	t
tLCDDEV_GetIndexMask	emwin/emWin_header/LCD.h	/^typedef LCD_PIXELINDEX tLCDDEV_GetIndexMask (void);$/;"	t
tLCDDEV_GetPixelIndex	emwin/emWin_header/LCD.h	/^typedef unsigned int tLCDDEV_GetPixelIndex(int x, int y);$/;"	t
tLCDDEV_GetRect	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_GetRect      (LCD_RECT * pRect);$/;"	t
tLCDDEV_Index2Color	emwin/emWin_header/LCD.h	/^typedef LCD_COLOR      tLCDDEV_Index2Color  (LCD_PIXELINDEX Index);$/;"	t
tLCDDEV_Index2ColorBulk	emwin/emWin_header/LCD.h	/^typedef void tLCDDEV_Index2ColorBulk(void * pIndex, LCD_COLOR * pColor, U32 NumItems, U8 SizeOfIndex);$/;"	t
tLCDDEV_Init	emwin/emWin_header/LCD.h	/^typedef int          tLCDDEV_Init         (void);$/;"	t
tLCDDEV_Off	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_Off          (void);$/;"	t
tLCDDEV_On	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_On           (void);$/;"	t
tLCDDEV_SetLUTEntry	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_SetLUTEntry  (U8 Pos, LCD_COLOR color);$/;"	t
tLCDDEV_SetOrg	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_SetOrg       (int x, int y);$/;"	t
tLCDDEV_SetPixelIndex	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_SetPixelIndex(int x, int y, int ColorIndex);$/;"	t
tLCDDEV_XorPixel	emwin/emWin_header/LCD.h	/^typedef void         tLCDDEV_XorPixel     (int x, int y);$/;"	t
tLCD_APIList	emwin/emWin_header/LCD.h	/^typedef struct tLCD_APIList_struct tLCD_APIList;$/;"	t	typeref:struct:tLCD_APIList_struct
tLCD_APIList_struct	emwin/emWin_header/LCD.h	/^struct tLCD_APIList_struct {$/;"	s
tLCD_DrawBitmap	emwin/emWin_header/LCD.h	/^typedef void tLCD_DrawBitmap(int x0, int y0, int xsize, int ysize,$/;"	t
tLCD_HL_APIList	emwin/emWin_header/LCD.h	/^} tLCD_HL_APIList;$/;"	t	typeref:struct:__anon421
tLCD_HL_DrawHLine	emwin/emWin_header/LCD.h	/^typedef void tLCD_HL_DrawHLine    (int x0, int y0,  int x1);$/;"	t
tLCD_HL_DrawPixel	emwin/emWin_header/LCD.h	/^typedef void tLCD_HL_DrawPixel    (int x0, int y0);$/;"	t
tLCD_SetPixelAA	emwin/emWin_header/LCD.h	/^typedef void tLCD_SetPixelAA(int x, int y, U8 Intens);$/;"	t
tMrd_Nclk	drivers/fsl_emc.h	/^    uint8_t tMrd_Nclk; \/*!< Load mode register to active command time in unit of EMCCLK cycles.*\/$/;"	m	struct:_emc_dynamic_timing_config
tRADIO_SetValue	emwin/emWin_header/RADIO_Private.h	/^typedef void tRADIO_SetValue(RADIO_Handle hObj, int v);$/;"	t
tRas_Ns	drivers/fsl_emc.h	/^    uint32_t tRas_Ns;               \/*!< Active to precharge command period in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tRc_Ns	drivers/fsl_emc.h	/^    uint32_t tRc_Ns;                \/*!< Active to active command period in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tRect2TextRect	emwin/emWin_header/LCD.h	/^typedef void tRect2TextRect (LCD_RECT * pRect);$/;"	t
tRfc_Ns	drivers/fsl_emc.h	/^    uint32_t tRfc_Ns;  \/*!< Auto-refresh period and auto-refresh to active command period in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tRp_Ns	drivers/fsl_emc.h	/^    uint32_t tRp_Ns;                \/*!< Precharge command period in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tRrd_Ns	drivers/fsl_emc.h	/^    uint32_t tRrd_Ns;  \/*!< Active bank A to active bank B latency in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tSrex_Ns	drivers/fsl_emc.h	/^    uint32_t tSrex_Ns;              \/*!< Self-refresh exit time in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tUSAGE_APIList	emwin/emWin_header/GUI_Private.h	/^typedef struct tsUSAGE_APIList tUSAGE_APIList;$/;"	t	typeref:struct:tsUSAGE_APIList
tUSAGE_AddHLine	emwin/emWin_header/GUI_Private.h	/^typedef void        tUSAGE_AddHLine        (GUI_USAGE * p, int x0, int y0, int len);$/;"	t
tUSAGE_AddPixel	emwin/emWin_header/GUI_Private.h	/^typedef void        tUSAGE_AddPixel        (GUI_USAGE * p, int x, int y);$/;"	t
tUSAGE_Clear	emwin/emWin_header/GUI_Private.h	/^typedef void        tUSAGE_Clear           (GUI_USAGE * p);$/;"	t
tUSAGE_CreateCompatible	emwin/emWin_header/GUI_Private.h	/^typedef GUI_USAGE_h tUSAGE_CreateCompatible(GUI_USAGE * p);$/;"	t
tUSAGE_Delete	emwin/emWin_header/GUI_Private.h	/^typedef void        tUSAGE_Delete          (GUI_USAGE_h h);$/;"	t
tUSAGE_GetNextDirty	emwin/emWin_header/GUI_Private.h	/^typedef int         tUSAGE_GetNextDirty    (GUI_USAGE * p, int * pxOff, int yOff);$/;"	t
tWaitOutEn_Ns	drivers/fsl_emc.h	/^    uint32_t tWaitOutEn_Ns;         \/*!< The delay from chip selcet to output enable in unit of nanosecond. *\/$/;"	m	struct:_emc_static_chip_config
tWaitReadNoPage_Ns	drivers/fsl_emc.h	/^        tWaitReadNoPage_Ns;    \/*!< In No-page mode, the delay from chip select to read access in unit of nanosecond. *\/$/;"	m	struct:_emc_static_chip_config
tWaitReadPage_Ns	drivers/fsl_emc.h	/^    uint32_t tWaitReadPage_Ns; \/*!< In page mode, the read after the first read wait states in unit of nanosecond. *\/$/;"	m	struct:_emc_static_chip_config
tWaitTurn_Ns	drivers/fsl_emc.h	/^    uint32_t tWaitTurn_Ns;     \/*!< The Bus turn-around time in unit of nanosecond. *\/$/;"	m	struct:_emc_static_chip_config
tWaitWriteEn_Ns	drivers/fsl_emc.h	/^    uint32_t tWaitWriteEn_Ns;       \/*!< The delay form chip select to write enable in unit of nanosecond. *\/$/;"	m	struct:_emc_static_chip_config
tWaitWrite_Ns	drivers/fsl_emc.h	/^    uint32_t tWaitWrite_Ns;    \/*!< The delay from chip select to write access in unit of nanosecond. *\/$/;"	m	struct:_emc_static_chip_config
tWr_Ns	drivers/fsl_emc.h	/^    uint32_t tWr_Ns;                \/*!< Write recovery time in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tXsr_Ns	drivers/fsl_emc.h	/^    uint32_t tXsr_Ns;  \/*!< Exit self-refresh to active command time in unit of nanosecond. *\/$/;"	m	struct:_emc_dynamic_timing_config
tab	lwip/src/include/lwip/priv/memp_priv.h	/^  struct memp **tab;$/;"	m	struct:memp_desc	typeref:struct:memp_desc::memp
tag	component/serial_manager/serial_manager.c	/^    uint32_t tag;$/;"	m	struct:_serial_manager_send_handle	file:
tag	usb/device/class/usb_device_msc.h	/^    uint32_t tag;                \/*!< Byte 4-7 dCBWTag*\/$/;"	m	struct:_usb_device_msc_cbw
tag	usb/device/class/usb_device_msc.h	/^    uint32_t tag;         \/*!< Byte 4-7 dCSWTag*\/$/;"	m	struct:_usb_device_msc_csw
tail	component/lists/generic_list.h	/^    struct list_element_tag *tail; \/*!< list tail *\/$/;"	m	struct:list_tag	typeref:struct:list_tag::list_element_tag
tail	littlefs/littlefs_include/lfs.h	/^        lfs_block_t tail[2];$/;"	m	struct:lfs_dir::lfs_disk_dir
taskCHECK_FOR_STACK_OVERFLOW	amazon-freertos/include/stack_macros.h	123;"	d
taskCHECK_FOR_STACK_OVERFLOW	amazon-freertos/include/stack_macros.h	50;"	d
taskCHECK_FOR_STACK_OVERFLOW	amazon-freertos/include/stack_macros.h	65;"	d
taskCHECK_FOR_STACK_OVERFLOW	amazon-freertos/include/stack_macros.h	80;"	d
taskCHECK_FOR_STACK_OVERFLOW	amazon-freertos/include/stack_macros.h	99;"	d
taskDISABLE_INTERRUPTS	amazon-freertos/include/task.h	220;"	d
taskENABLE_INTERRUPTS	amazon-freertos/include/task.h	230;"	d
taskENTER_CRITICAL	amazon-freertos/include/task.h	195;"	d
taskENTER_CRITICAL_FROM_ISR	amazon-freertos/include/task.h	196;"	d
taskEVENT_LIST_ITEM_VALUE_IN_USE	amazon-freertos/freertos/tasks.c	242;"	d	file:
taskEVENT_LIST_ITEM_VALUE_IN_USE	amazon-freertos/freertos/tasks.c	244;"	d	file:
taskEXIT_CRITICAL	amazon-freertos/include/task.h	210;"	d
taskEXIT_CRITICAL_FROM_ISR	amazon-freertos/include/task.h	211;"	d
taskId	component/serial_manager/serial_manager.c	/^    uint8_t taskId[OSA_TASK_HANDLE_SIZE]; \/*!< Task handle *\/$/;"	m	struct:_serial_manager_handle	file:
taskNOTIFICATION_RECEIVED	amazon-freertos/freertos/tasks.c	70;"	d	file:
taskNOT_WAITING_NOTIFICATION	amazon-freertos/freertos/tasks.c	68;"	d	file:
taskRECORD_READY_PRIORITY	amazon-freertos/freertos/tasks.c	123;"	d	file:
taskRECORD_READY_PRIORITY	amazon-freertos/freertos/tasks.c	165;"	d	file:
taskRESET_READY_PRIORITY	amazon-freertos/freertos/tasks.c	155;"	d	file:
taskRESET_READY_PRIORITY	amazon-freertos/freertos/tasks.c	184;"	d	file:
taskSCHEDULER_NOT_STARTED	amazon-freertos/include/task.h	236;"	d
taskSCHEDULER_RUNNING	amazon-freertos/include/task.h	237;"	d
taskSCHEDULER_SUSPENDED	amazon-freertos/include/task.h	235;"	d
taskSELECT_HIGHEST_PRIORITY_TASK	amazon-freertos/freertos/tasks.c	133;"	d	file:
taskSELECT_HIGHEST_PRIORITY_TASK	amazon-freertos/freertos/tasks.c	169;"	d	file:
taskSWITCH_DELAYED_LISTS	amazon-freertos/freertos/tasks.c	198;"	d	file:
taskWAITING_NOTIFICATION	amazon-freertos/freertos/tasks.c	69;"	d	file:
taskYIELD	amazon-freertos/include/task.h	181;"	d
taskYIELD_IF_USING_PREEMPTION	amazon-freertos/freertos/tasks.c	62;"	d	file:
taskYIELD_IF_USING_PREEMPTION	amazon-freertos/freertos/tasks.c	64;"	d	file:
tcp	lwip/src/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon446	typeref:struct:netconn::__anon446::tcp_pcb
tcp	lwip/src/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abandon	lwip/src/core/tcp.c	/^tcp_abandon(struct tcp_pcb *pcb, int reset)$/;"	f
tcp_abort	lwip/src/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	lwip/src/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb, tcp_accept_fn accept)$/;"	f
tcp_accept_fn	lwip/src/include/lwip/tcp.h	/^typedef err_t (*tcp_accept_fn)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	t
tcp_accept_null	lwip/src/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	lwip/src/include/lwip/tcp.h	455;"	d
tcp_ack	lwip/src/include/lwip/priv/tcp_priv.h	448;"	d
tcp_ack_now	lwip/src/include/lwip/priv/tcp_priv.h	459;"	d
tcp_active_pcbs	lwip/src/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs_changed	lwip/src/core/tcp.c	/^u8_t tcp_active_pcbs_changed;$/;"	v
tcp_add_sack	lwip/src/core/tcp_in.c	/^tcp_add_sack(struct tcp_pcb *pcb, u32_t left, u32_t right)$/;"	f	file:
tcp_alloc	lwip/src/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	lwip/src/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backlog_accepted	lwip/src/core/tcp.c	/^tcp_backlog_accepted(struct tcp_pcb *pcb)$/;"	f
tcp_backlog_accepted	lwip/src/include/lwip/tcp.h	453;"	d
tcp_backlog_delayed	lwip/src/core/tcp.c	/^tcp_backlog_delayed(struct tcp_pcb *pcb)$/;"	f
tcp_backlog_delayed	lwip/src/include/lwip/tcp.h	452;"	d
tcp_backlog_set	lwip/src/include/lwip/tcp.h	445;"	d
tcp_backlog_set	lwip/src/include/lwip/tcp.h	451;"	d
tcp_backoff	lwip/src/core/tcp.c	/^static const u8_t tcp_backoff[13] =$/;"	v	file:
tcp_bind	lwip/src/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, const ip_addr_t *ipaddr, u16_t port)$/;"	f
tcp_bind_netif	lwip/src/core/tcp.c	/^tcp_bind_netif(struct tcp_pcb *pcb, const struct netif *netif)$/;"	f
tcp_bound_pcbs	lwip/src/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_build_sack_option	lwip/src/core/tcp_out.c	/^tcp_build_sack_option(const struct tcp_pcb *pcb, u32_t *opts, u8_t num_sacks)$/;"	f	file:
tcp_build_timestamp_option	lwip/src/core/tcp_out.c	/^tcp_build_timestamp_option(const struct tcp_pcb *pcb, u32_t *opts)$/;"	f	file:
tcp_build_wnd_scale_option	lwip/src/core/tcp_out.c	/^tcp_build_wnd_scale_option(u32_t *opts)$/;"	f	file:
tcp_clear_flags	lwip/src/include/lwip/tcp.h	424;"	d
tcp_close	lwip/src/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_close_shutdown	lwip/src/core/tcp.c	/^tcp_close_shutdown(struct tcp_pcb *pcb, u8_t rst_on_unacked_data)$/;"	f	file:
tcp_close_shutdown_fin	lwip/src/core/tcp.c	/^tcp_close_shutdown_fin(struct tcp_pcb *pcb)$/;"	f	file:
tcp_connect	lwip/src/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, const ip_addr_t *ipaddr, u16_t port,$/;"	f
tcp_connected_fn	lwip/src/include/lwip/tcp.h	/^typedef err_t (*tcp_connected_fn)(void *arg, struct tcp_pcb *tpcb, err_t err);$/;"	t
tcp_create_segment	lwip/src/core/tcp_out.c	/^tcp_create_segment(const struct tcp_pcb *pcb, struct pbuf *p, u8_t hdrflags, u32_t seqno, u8_t optflags)$/;"	f	file:
tcp_dbg_get_tcp_state	lwip/src/include/lwip/tcp.h	482;"	d
tcp_debug_print	lwip/src/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	lwip/src/include/lwip/priv/tcp_priv.h	496;"	d
tcp_debug_print_flags	lwip/src/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	lwip/src/include/lwip/priv/tcp_priv.h	497;"	d
tcp_debug_print_pcbs	lwip/src/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	lwip/src/include/lwip/priv/tcp_priv.h	499;"	d
tcp_debug_print_state	lwip/src/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	lwip/src/include/lwip/priv/tcp_priv.h	498;"	d
tcp_debug_state_str	lwip/src/core/tcp.c	/^tcp_debug_state_str(enum tcp_state s)$/;"	f
tcp_do_output_nagle	lwip/src/include/lwip/priv/tcp_priv.h	100;"	d
tcp_eff_send_mss	lwip/src/include/lwip/priv/tcp_priv.h	481;"	d
tcp_eff_send_mss_netif	lwip/src/core/tcp.c	/^tcp_eff_send_mss_netif(u16_t sendmss, struct netif *outif, const ip_addr_t *dest)$/;"	f
tcp_enqueue_flags	lwip/src/core/tcp_out.c	/^tcp_enqueue_flags(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_err	lwip/src/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb, tcp_err_fn err)$/;"	f
tcp_err_fn	lwip/src/include/lwip/tcp.h	/^typedef void  (*tcp_err_fn)(void *arg, err_t err);$/;"	t
tcp_ext_arg_alloc_id	lwip/src/core/tcp.c	/^tcp_ext_arg_alloc_id(void)$/;"	f
tcp_ext_arg_callbacks	lwip/src/include/lwip/tcp.h	/^struct tcp_ext_arg_callbacks {$/;"	s
tcp_ext_arg_get	lwip/src/core/tcp.c	/^void *tcp_ext_arg_get(const struct tcp_pcb *pcb, uint8_t id)$/;"	f
tcp_ext_arg_id	lwip/src/core/tcp.c	/^static u8_t tcp_ext_arg_id;$/;"	v	file:
tcp_ext_arg_invoke_callbacks_destroyed	lwip/src/core/tcp.c	/^tcp_ext_arg_invoke_callbacks_destroyed(struct tcp_pcb_ext_args *ext_args)$/;"	f	file:
tcp_ext_arg_invoke_callbacks_passive_open	lwip/src/core/tcp.c	/^tcp_ext_arg_invoke_callbacks_passive_open(struct tcp_pcb_listen *lpcb, struct tcp_pcb *cpcb)$/;"	f
tcp_ext_arg_set	lwip/src/core/tcp.c	/^void tcp_ext_arg_set(struct tcp_pcb *pcb, uint8_t id, void *arg)$/;"	f
tcp_ext_arg_set_callbacks	lwip/src/core/tcp.c	/^tcp_ext_arg_set_callbacks(struct tcp_pcb *pcb, uint8_t id, const struct tcp_ext_arg_callbacks * const callbacks)$/;"	f
tcp_extarg_callback_passive_open_fn	lwip/src/include/lwip/tcp.h	/^typedef err_t (*tcp_extarg_callback_passive_open_fn)(u8_t id, struct tcp_pcb_listen *lpcb, struct tcp_pcb *cpcb);$/;"	t
tcp_extarg_callback_pcb_destroyed_fn	lwip/src/include/lwip/tcp.h	/^typedef void (*tcp_extarg_callback_pcb_destroyed_fn)(u8_t id, void *data);$/;"	t
tcp_fasttmr	lwip/src/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_free	lwip/src/core/tcp.c	/^tcp_free(struct tcp_pcb *pcb)$/;"	f
tcp_free_acked_segments	lwip/src/core/tcp_in.c	/^tcp_free_acked_segments(struct tcp_pcb *pcb, struct tcp_seg *seg_list, const char *dbg_list_name,$/;"	f	file:
tcp_free_listen	lwip/src/core/tcp.c	/^tcp_free_listen(struct tcp_pcb *pcb)$/;"	f	file:
tcp_free_ooseq	lwip/src/core/tcp.c	/^tcp_free_ooseq(struct tcp_pcb *pcb)$/;"	f
tcp_get_next_optbyte	lwip/src/core/tcp_in.c	/^tcp_get_next_optbyte(void)$/;"	f	file:
tcp_get_num_sacks	lwip/src/core/tcp_out.c	/^tcp_get_num_sacks(const struct tcp_pcb *pcb, u8_t optlen)$/;"	f	file:
tcp_handle_closepend	lwip/src/core/tcp.c	/^tcp_handle_closepend(void)$/;"	f	file:
tcp_hdr	lwip/src/include/lwip/prot/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_init	lwip/src/core/tcp.c	/^tcp_init(void)$/;"	f
tcp_input	lwip/src/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_delayed_close	lwip/src/core/tcp_in.c	/^tcp_input_delayed_close(struct tcp_pcb *pcb)$/;"	f	file:
tcp_input_pcb	lwip/src/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_is_flag_set	lwip/src/include/lwip/tcp.h	425;"	d
tcp_keepalive	lwip/src/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	lwip/src/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_state	lwip/src/core/tcp.c	/^tcp_kill_state(enum tcp_state state)$/;"	f	file:
tcp_kill_timewait	lwip/src/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	lwip/src/include/lwip/tcp.h	467;"	d
tcp_listen_closed	lwip/src/core/tcp.c	/^tcp_listen_closed(struct tcp_pcb *pcb)$/;"	f	file:
tcp_listen_input	lwip/src/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	lwip/src/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	lwip/src/include/lwip/priv/tcp_priv.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	lwip/src/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_listen_with_backlog_and_err	lwip/src/core/tcp.c	/^tcp_listen_with_backlog_and_err(struct tcp_pcb *pcb, u8_t backlog, err_t *err)$/;"	f
tcp_mss	lwip/src/include/lwip/tcp.h	428;"	d
tcp_mss	lwip/src/include/lwip/tcp.h	431;"	d
tcp_nagle_disable	lwip/src/include/lwip/tcp.h	438;"	d
tcp_nagle_disabled	lwip/src/include/lwip/tcp.h	442;"	d
tcp_nagle_enable	lwip/src/include/lwip/tcp.h	440;"	d
tcp_netif_ip_addr_changed	lwip/src/core/tcp.c	/^tcp_netif_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)$/;"	f
tcp_netif_ip_addr_changed_pcblist	lwip/src/core/tcp.c	/^tcp_netif_ip_addr_changed_pcblist(const ip_addr_t *old_addr, struct tcp_pcb *pcb_list)$/;"	f	file:
tcp_new	lwip/src/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_ip6	lwip/src/include/lwip/tcp.h	485;"	d
tcp_new_ip_type	lwip/src/core/tcp.c	/^tcp_new_ip_type(u8_t type)$/;"	f
tcp_new_port	lwip/src/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	lwip/src/core/tcp.c	/^tcp_next_iss(struct tcp_pcb *pcb)$/;"	f
tcp_oos_insert_segment	lwip/src/core/tcp_in.c	/^tcp_oos_insert_segment(struct tcp_seg *cseg, struct tcp_seg *next)$/;"	f	file:
tcp_optidx	lwip/src/core/tcp_in.c	/^static u16_t tcp_optidx;$/;"	v	file:
tcp_output	lwip/src/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_alloc_header	lwip/src/core/tcp_out.c	/^tcp_output_alloc_header(struct tcp_pcb *pcb, u16_t optlen, u16_t datalen,$/;"	f	file:
tcp_output_alloc_header_common	lwip/src/core/tcp_out.c	/^tcp_output_alloc_header_common(u32_t ackno, u16_t optlen, u16_t datalen,$/;"	f	file:
tcp_output_control_segment	lwip/src/core/tcp_out.c	/^tcp_output_control_segment(const struct tcp_pcb *pcb, struct pbuf *p,$/;"	f	file:
tcp_output_fill_options	lwip/src/core/tcp_out.c	/^tcp_output_fill_options(const struct tcp_pcb *pcb, struct pbuf *p, u8_t optflags, u8_t num_sacks)$/;"	f	file:
tcp_output_nagle	lwip/src/include/lwip/priv/tcp_priv.h	106;"	d
tcp_output_segment	lwip/src/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb, struct netif *netif)$/;"	f	file:
tcp_output_segment_busy	lwip/src/core/tcp_out.c	/^tcp_output_segment_busy(const struct tcp_seg *seg)$/;"	f	file:
tcp_parseopt	lwip/src/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pbuf_prealloc	lwip/src/core/tcp_out.c	/^tcp_pbuf_prealloc(pbuf_layer layer, u16_t length, u16_t max_length,$/;"	f	file:
tcp_pbuf_prealloc	lwip/src/core/tcp_out.c	274;"	d	file:
tcp_pcb	lwip/src/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_ext_args	lwip/src/include/lwip/tcp.h	/^struct tcp_pcb_ext_args {$/;"	s
tcp_pcb_listen	lwip/src/include/lwip/tcp.h	/^struct tcp_pcb_listen {$/;"	s
tcp_pcb_lists	lwip/src/core/tcp.c	/^struct tcp_pcb **const tcp_pcb_lists[] = {&tcp_listen_pcbs.pcbs, &tcp_bound_pcbs,$/;"	v
tcp_pcb_purge	lwip/src/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	lwip/src/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	lwip/src/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	lwip/src/include/lwip/priv/tcp_priv.h	500;"	d
tcp_persist_backoff	lwip/src/core/tcp.c	/^static const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v	file:
tcp_poll	lwip/src/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb, tcp_poll_fn poll, u8_t interval)$/;"	f
tcp_poll_fn	lwip/src/include/lwip/tcp.h	/^typedef err_t (*tcp_poll_fn)(void *arg, struct tcp_pcb *tpcb);$/;"	t
tcp_port	lwip/src/core/tcp.c	/^static u16_t tcp_port = TCP_LOCAL_PORT_RANGE_START;$/;"	v	file:
tcp_process	lwip/src/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_process_refused_data	lwip/src/core/tcp.c	/^tcp_process_refused_data(struct tcp_pcb *pcb)$/;"	f
tcp_receive	lwip/src/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	lwip/src/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb, tcp_recv_fn recv)$/;"	f
tcp_recv_fn	lwip/src/include/lwip/tcp.h	/^typedef err_t (*tcp_recv_fn)(void *arg, struct tcp_pcb *tpcb,$/;"	t
tcp_recv_null	lwip/src/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f
tcp_recved	lwip/src/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_remove_listener	lwip/src/core/tcp.c	/^tcp_remove_listener(struct tcp_pcb *list, struct tcp_pcb_listen *lpcb)$/;"	f	file:
tcp_remove_sacks_gt	lwip/src/core/tcp_in.c	/^tcp_remove_sacks_gt(struct tcp_pcb *pcb, u32_t seq)$/;"	f	file:
tcp_remove_sacks_lt	lwip/src/core/tcp_in.c	/^tcp_remove_sacks_lt(struct tcp_pcb *pcb, u32_t seq)$/;"	f	file:
tcp_rexmit	lwip/src/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_fast	lwip/src/core/tcp_out.c	/^tcp_rexmit_fast(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	lwip/src/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto_commit	lwip/src/core/tcp_out.c	/^tcp_rexmit_rto_commit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto_prepare	lwip/src/core/tcp_out.c	/^tcp_rexmit_rto_prepare(struct tcp_pcb *pcb)$/;"	f
tcp_route	lwip/src/core/tcp_out.c	/^tcp_route(const struct tcp_pcb *pcb, const ip_addr_t *src, const ip_addr_t *dst)$/;"	f	file:
tcp_rst	lwip/src/core/tcp_out.c	/^tcp_rst(const struct tcp_pcb *pcb, u32_t seqno, u32_t ackno,$/;"	f
tcp_sack_range	lwip/src/include/lwip/tcp.h	/^struct tcp_sack_range {$/;"	s
tcp_seg	lwip/src/include/lwip/priv/tcp_priv.h	/^struct tcp_seg {$/;"	s
tcp_seg_add_chksum	lwip/src/core/tcp_out.c	/^tcp_seg_add_chksum(u16_t chksum, u16_t len, u16_t *seg_chksum,$/;"	f	file:
tcp_seg_copy	lwip/src/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	lwip/src/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	lwip/src/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_empty_ack	lwip/src/core/tcp_out.c	/^tcp_send_empty_ack(struct tcp_pcb *pcb)$/;"	f
tcp_send_fin	lwip/src/core/tcp_out.c	/^tcp_send_fin(struct tcp_pcb *pcb)$/;"	f
tcp_sent	lwip/src/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb, tcp_sent_fn sent)$/;"	f
tcp_sent_fn	lwip/src/include/lwip/tcp.h	/^typedef err_t (*tcp_sent_fn)(void *arg, struct tcp_pcb *tpcb,$/;"	t
tcp_set_flags	lwip/src/include/lwip/tcp.h	423;"	d
tcp_setprio	lwip/src/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_shutdown	lwip/src/core/tcp.c	/^tcp_shutdown(struct tcp_pcb *pcb, int shut_rx, int shut_tx)$/;"	f
tcp_slowtmr	lwip/src/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	lwip/src/include/lwip/tcp.h	434;"	d
tcp_sndqueuelen	lwip/src/include/lwip/tcp.h	436;"	d
tcp_split_unsent_seg	lwip/src/core/tcp_out.c	/^tcp_split_unsent_seg(struct tcp_pcb *pcb, u16_t split)$/;"	f
tcp_state	lwip/src/include/lwip/tcpbase.h	/^enum tcp_state {$/;"	g
tcp_state_str	lwip/src/core/tcp.c	/^static const char *const tcp_state_str[] = {$/;"	v	file:
tcp_tcp_get_tcp_addrinfo	lwip/src/core/tcp.c	/^tcp_tcp_get_tcp_addrinfo(struct tcp_pcb *pcb, int local, ip_addr_t *addr, u16_t *port)$/;"	f
tcp_ticks	lwip/src/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	lwip/src/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_ctr	lwip/src/core/tcp.c	/^static u8_t tcp_timer_ctr;$/;"	v	file:
tcp_timer_needed	lwip/src/core/timeouts.c	/^tcp_timer_needed(void)$/;"	f
tcp_timewait_input	lwip/src/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmr	lwip/src/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_trigger_input_pcb_close	lwip/src/core/tcp_in.c	/^tcp_trigger_input_pcb_close(void)$/;"	f
tcp_tw_pcbs	lwip/src/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_txnow	lwip/src/core/tcp.c	/^tcp_txnow(void)$/;"	f
tcp_update_rcv_ann_wnd	lwip/src/core/tcp.c	/^tcp_update_rcv_ann_wnd(struct tcp_pcb *pcb)$/;"	f
tcp_write	lwip/src/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *arg, u16_t len, u8_t apiflags)$/;"	f
tcp_write_checks	lwip/src/core/tcp_out.c	/^tcp_write_checks(struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
tcp_zero_window_probe	lwip/src/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	lwip/src/include/lwip/stats.h	/^  u32_t tcpactiveopens;$/;"	m	struct:stats_mib2
tcpattemptfails	lwip/src/include/lwip/stats.h	/^  u32_t tcpattemptfails;$/;"	m	struct:stats_mib2
tcpestabresets	lwip/src/include/lwip/stats.h	/^  u32_t tcpestabresets;$/;"	m	struct:stats_mib2
tcpflags_t	lwip/src/include/lwip/tcp.h	/^typedef u16_t tcpflags_t;$/;"	t
tcphdr	lwip/src/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	lwip/src/include/lwip/priv/tcp_priv.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr_opt1len	lwip/src/core/tcp_in.c	/^static u16_t tcphdr_opt1len;$/;"	v	file:
tcphdr_opt2	lwip/src/core/tcp_in.c	/^static u8_t *tcphdr_opt2;$/;"	v	file:
tcphdr_optlen	lwip/src/core/tcp_in.c	/^static u16_t tcphdr_optlen;$/;"	v	file:
tcpinerrs	lwip/src/include/lwip/stats.h	/^  u32_t tcpinerrs;$/;"	m	struct:stats_mib2
tcpinsegs	lwip/src/include/lwip/stats.h	/^  u32_t tcpinsegs;$/;"	m	struct:stats_mib2
tcpip_6lowpan_input	lwip/src/netif/lowpan6.c	/^tcpip_6lowpan_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_api_call	lwip/src/api/tcpip.c	/^tcpip_api_call(tcpip_api_call_fn fn, struct tcpip_api_call_data *call)$/;"	f
tcpip_api_call_data	lwip/src/include/lwip/priv/tcpip_priv.h	/^struct tcpip_api_call_data$/;"	s
tcpip_api_call_fn	lwip/src/include/lwip/priv/tcpip_priv.h	/^typedef err_t (*tcpip_api_call_fn)(struct tcpip_api_call_data* call);$/;"	t
tcpip_callback	lwip/src/api/tcpip.c	/^tcpip_callback(tcpip_callback_fn function, void *ctx)$/;"	f
tcpip_callback_fn	lwip/src/include/lwip/tcpip.h	/^typedef void (*tcpip_callback_fn)(void *ctx);$/;"	t
tcpip_callback_with_block	lwip/src/include/lwip/tcpip.h	87;"	d
tcpip_callbackmsg_delete	lwip/src/api/tcpip.c	/^tcpip_callbackmsg_delete(struct tcpip_callback_msg *msg)$/;"	f
tcpip_callbackmsg_new	lwip/src/api/tcpip.c	/^tcpip_callbackmsg_new(tcpip_callback_fn function, void *ctx)$/;"	f
tcpip_callbackmsg_trycallback	lwip/src/api/tcpip.c	/^tcpip_callbackmsg_trycallback(struct tcpip_callback_msg *msg)$/;"	f
tcpip_callbackmsg_trycallback_fromisr	lwip/src/api/tcpip.c	/^tcpip_callbackmsg_trycallback_fromisr(struct tcpip_callback_msg *msg)$/;"	f
tcpip_init	lwip/src/api/tcpip.c	/^tcpip_init(tcpip_init_done_fn initfunc, void *arg)$/;"	f
tcpip_init_done	lwip/src/api/tcpip.c	/^static tcpip_init_done_fn tcpip_init_done;$/;"	v	file:
tcpip_init_done_arg	lwip/src/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_fn	lwip/src/include/lwip/tcpip.h	/^typedef void (*tcpip_init_done_fn)(void *arg);$/;"	t
tcpip_inpkt	lwip/src/api/tcpip.c	/^tcpip_inpkt(struct pbuf *p, struct netif *inp, netif_input_fn input_fn)$/;"	f
tcpip_input	lwip/src/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_mbox	lwip/src/api/tcpip.c	/^static sys_mbox_t tcpip_mbox;$/;"	v	file:
tcpip_msg	lwip/src/include/lwip/priv/tcpip_priv.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	lwip/src/include/lwip/priv/tcpip_priv.h	/^enum tcpip_msg_type {$/;"	g
tcpip_rfc7668_input	lwip/src/netif/lowpan6_ble.c	/^tcpip_rfc7668_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_send_msg_wait_sem	lwip/src/api/tcpip.c	/^tcpip_send_msg_wait_sem(tcpip_callback_fn fn, void *apimsg, sys_sem_t *sem)$/;"	f
tcpip_tcp_timer	lwip/src/core/timeouts.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	lwip/src/core/timeouts.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_thread	lwip/src/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_thread_handle_msg	lwip/src/api/tcpip.c	/^tcpip_thread_handle_msg(struct tcpip_msg *msg)$/;"	f	file:
tcpip_thread_poll_one	lwip/src/api/tcpip.c	/^tcpip_thread_poll_one(void)$/;"	f
tcpip_timeout	lwip/src/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_timeouts_mbox_fetch	lwip/src/api/tcpip.c	/^tcpip_timeouts_mbox_fetch(sys_mbox_t *mbox, void **msg)$/;"	f	file:
tcpip_try_callback	lwip/src/api/tcpip.c	/^tcpip_try_callback(tcpip_callback_fn function, void *ctx)$/;"	f
tcpip_untimeout	lwip/src/api/tcpip.c	/^tcpip_untimeout(sys_timeout_handler h, void *arg)$/;"	f
tcplen	lwip/src/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcpoutrsts	lwip/src/include/lwip/stats.h	/^  u32_t tcpoutrsts;$/;"	m	struct:stats_mib2
tcpoutsegs	lwip/src/include/lwip/stats.h	/^  u32_t tcpoutsegs;$/;"	m	struct:stats_mib2
tcppassiveopens	lwip/src/include/lwip/stats.h	/^  u32_t tcppassiveopens;$/;"	m	struct:stats_mib2
tcpretranssegs	lwip/src/include/lwip/stats.h	/^  u32_t tcpretranssegs;$/;"	m	struct:stats_mib2
tcpwnd_size_t	lwip/src/include/lwip/tcpbase.h	/^typedef u16_t tcpwnd_size_t;$/;"	t
tcpwnd_size_t	lwip/src/include/lwip/tcpbase.h	/^typedef u32_t tcpwnd_size_t;$/;"	t
term_reason	lwip/src/include/netif/ppp/fsm.h	/^    const char *term_reason;	\/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	lwip/src/include/netif/ppp/fsm.h	/^    u8_t term_reason_len;	\/* Length of term_reason *\/$/;"	m	struct:fsm
terminalType	usb/device/class/usb_device_audio.h	/^    uint16_t terminalType;$/;"	m	struct:_usb_device_audio_entity_struct
terminalType	usb/device/class/usb_device_video.h	/^    uint16_t terminalType;$/;"	m	struct:_usb_device_video_entity_struct
terminate_layer	lwip/src/netif/ppp/fsm.c	/^static void terminate_layer(fsm *f, int nextstate) {$/;"	f	file:
test_bits	codec2/test_bits.h	/^const int test_bits[]={$/;"	v
test_candidate_mbe	codec2/nlp.c	/^float test_candidate_mbe($/;"	f
test_varicode	codec2/varicode.c	/^void test_varicode(int code_num) {$/;"	f
thirteenCase	usb/device/class/usb_device_msc.h	/^    usb_device_msc_thirteen_case_struct_t thirteenCase;              \/*!< Thirteen possible cases*\/$/;"	m	struct:_usb_device_msc_ufi_struct
ti_ssi	CMSIS_driver/Driver_SPI.h	/^  uint32_t ti_ssi           : 1;        \/\/\/< supports TI Synchronous Serial Interface$/;"	m	struct:_ARM_SPI_CAPABILITIES
time	lwip/src/include/lwip/timeouts.h	/^  u32_t time;$/;"	m	struct:sys_timeo
timeStamp	drivers/fsl_enet.h	/^    enet_ptp_time_t timeStamp;                   \/*!< PTP timestamp. *\/$/;"	m	struct:_enet_ptp_time_data
time_init	lwip/port/sys_arch.c	/^void time_init(void)$/;"	f
time_isr	lwip/port/sys_arch.c	/^void time_isr(void)$/;"	f
time_now	lwip/port/sys_arch.c	/^static volatile uint32_t time_now = 0;$/;"	v	file:
time_started	lwip/src/include/lwip/priv/api_msg.h	/^      u32_t time_started;$/;"	m	struct:api_msg::__anon454::__anon458
time_started	lwip/src/include/lwip/priv/api_msg.h	/^      u32_t time_started;$/;"	m	struct:api_msg::__anon454::__anon460
timeout	component/timer/ctimer_adapter.c	/^    uint32_t timeout;$/;"	m	struct:_hal_timer_handle_struct_t	file:
timeout	component/timer/timer.h	/^    uint32_t timeout;                     \/*!< Timeout of the timer, should use microseconds, for example: if set timeout to 1000, mean 1000 microseconds$/;"	m	struct:_hal_timer_config
timer	lwip/src/include/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	lwip/src/include/lwip/ip4_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	lwip/src/include/lwip/ip6_frag.h	/^  u8_t timer;$/;"	m	struct:ip6_reassdata
timer	lwip/src/include/lwip/mld6.h	/^  u16_t              timer;$/;"	m	struct:mld_group
timer	lwip/src/netif/lowpan6.c	/^  u8_t timer;$/;"	m	struct:lowpan6_reass_helper	file:
timerClock_Hz	component/timer/ctimer_adapter.c	/^    uint32_t timerClock_Hz;$/;"	m	struct:_hal_timer_handle_struct_t	file:
timeval	lwip/src/include/lwip/sockets.h	/^struct timeval {$/;"	s
timing_en	codec2/ofdm_internal.h	/^    bool timing_en;$/;"	m	struct:OFDM
timing_est	codec2/ofdm_internal.h	/^    int timing_est;$/;"	m	struct:OFDM
timing_mx	codec2/ofdm_internal.h	/^    float timing_mx;$/;"	m	struct:OFDM
timing_norm	codec2/ofdm_internal.h	/^    float   timing_norm;$/;"	m	struct:OFDM
timing_valid	codec2/ofdm_internal.h	/^    int timing_valid;$/;"	m	struct:OFDM
tmo	lwip/src/include/lwip/priv/tcpip_priv.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon468	typeref:struct:tcpip_msg::__anon468::__anon473
tmpbuf	codec2/kiss_fftr.c	/^    kiss_fft_cpx * tmpbuf;$/;"	m	struct:kiss_fftr_state	file:
tmr	lwip/src/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	lwip/src/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
tmrCOMMAND_CHANGE_PERIOD	amazon-freertos/include/timers.h	60;"	d
tmrCOMMAND_CHANGE_PERIOD_FROM_ISR	amazon-freertos/include/timers.h	67;"	d
tmrCOMMAND_DELETE	amazon-freertos/include/timers.h	61;"	d
tmrCOMMAND_EXECUTE_CALLBACK	amazon-freertos/include/timers.h	55;"	d
tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR	amazon-freertos/include/timers.h	54;"	d
tmrCOMMAND_RESET	amazon-freertos/include/timers.h	58;"	d
tmrCOMMAND_RESET_FROM_ISR	amazon-freertos/include/timers.h	65;"	d
tmrCOMMAND_START	amazon-freertos/include/timers.h	57;"	d
tmrCOMMAND_START_DONT_TRACE	amazon-freertos/include/timers.h	56;"	d
tmrCOMMAND_START_FROM_ISR	amazon-freertos/include/timers.h	64;"	d
tmrCOMMAND_STOP	amazon-freertos/include/timers.h	59;"	d
tmrCOMMAND_STOP_FROM_ISR	amazon-freertos/include/timers.h	66;"	d
tmrCallbackParameters	amazon-freertos/freertos/timers.c	/^typedef struct tmrCallbackParameters$/;"	s	file:
tmrFIRST_FROM_ISR_COMMAND	amazon-freertos/include/timers.h	63;"	d
tmrNO_DELAY	amazon-freertos/freertos/timers.c	59;"	d	file:
tmrSTATUS_IS_ACTIVE	amazon-freertos/freertos/timers.c	68;"	d	file:
tmrSTATUS_IS_AUTORELOAD	amazon-freertos/freertos/timers.c	70;"	d	file:
tmrSTATUS_IS_STATICALLY_ALLOCATED	amazon-freertos/freertos/timers.c	69;"	d	file:
tmrTIMER_CALLBACK	amazon-freertos/include/FreeRTOS.h	935;"	d
tmrTimerControl	amazon-freertos/freertos/timers.c	/^typedef struct tmrTimerControl \/* The old naming convention is used to prevent breaking kernel aware debuggers. *\/$/;"	s	file:
tmrTimerParameters	amazon-freertos/freertos/timers.c	/^typedef struct tmrTimerParameters$/;"	s	file:
tmrTimerQueueMessage	amazon-freertos/freertos/timers.c	/^typedef struct tmrTimerQueueMessage$/;"	s	file:
toReceiveCount	drivers/fsl_spi.h	/^    volatile size_t toReceiveCount;   \/*!< Receive data remaining in bytes *\/$/;"	m	struct:_spi_master_handle
toaddr	lwip/src/include/lwip/netbuf.h	/^  ip_addr_t toaddr;$/;"	m	struct:netbuf
toport_chksum	lwip/src/include/lwip/netbuf.h	/^  u16_t toport_chksum;$/;"	m	struct:netbuf
tot_len	lwip/src/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
total	lwip/src/include/netif/ppp/polarssl/md4.h	/^    unsigned long total[2];     \/*!< number of bytes processed  *\/$/;"	m	struct:__anon428
total	lwip/src/include/netif/ppp/polarssl/md5.h	/^    unsigned long total[2];     \/*!< number of bytes processed  *\/$/;"	m	struct:__anon431
total	lwip/src/include/netif/ppp/polarssl/sha1.h	/^    unsigned long total[2];     \/*!< number of bytes processed  *\/$/;"	m	struct:__anon430
totalByteCount	drivers/fsl_spi.h	/^    size_t totalByteCount;            \/*!< A number of transfer bytes *\/$/;"	m	struct:_spi_master_handle
totalBytes	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t totalBytes : 15;$/;"	m	struct:_usb_device_ehci_dtd_struct::__anon521::__anon522
totalBytes	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t totalBytes : 15;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon517::__anon518
totalLbaNumberSupports	usb/device/class/usb_device_msc.h	/^    uint32_t totalLbaNumberSupports;    \/*!< Total blocks number supported*\/$/;"	m	struct:_usb_device_logical_unit_information_struct
traceBLOCKING_ON_QUEUE_PEEK	amazon-freertos/include/FreeRTOS.h	366;"	d
traceBLOCKING_ON_QUEUE_RECEIVE	amazon-freertos/include/FreeRTOS.h	358;"	d
traceBLOCKING_ON_QUEUE_SEND	amazon-freertos/include/FreeRTOS.h	374;"	d
traceBLOCKING_ON_STREAM_BUFFER_RECEIVE	amazon-freertos/include/FreeRTOS.h	680;"	d
traceBLOCKING_ON_STREAM_BUFFER_SEND	amazon-freertos/include/FreeRTOS.h	664;"	d
traceCREATE_COUNTING_SEMAPHORE	amazon-freertos/include/FreeRTOS.h	432;"	d
traceCREATE_COUNTING_SEMAPHORE_FAILED	amazon-freertos/include/FreeRTOS.h	436;"	d
traceCREATE_MUTEX	amazon-freertos/include/FreeRTOS.h	408;"	d
traceCREATE_MUTEX_FAILED	amazon-freertos/include/FreeRTOS.h	412;"	d
traceEND	amazon-freertos/include/FreeRTOS.h	305;"	d
traceEVENT_GROUP_CLEAR_BITS	amazon-freertos/include/FreeRTOS.h	584;"	d
traceEVENT_GROUP_CLEAR_BITS_FROM_ISR	amazon-freertos/include/FreeRTOS.h	588;"	d
traceEVENT_GROUP_CREATE	amazon-freertos/include/FreeRTOS.h	560;"	d
traceEVENT_GROUP_CREATE_FAILED	amazon-freertos/include/FreeRTOS.h	564;"	d
traceEVENT_GROUP_DELETE	amazon-freertos/include/FreeRTOS.h	600;"	d
traceEVENT_GROUP_SET_BITS	amazon-freertos/include/FreeRTOS.h	592;"	d
traceEVENT_GROUP_SET_BITS_FROM_ISR	amazon-freertos/include/FreeRTOS.h	596;"	d
traceEVENT_GROUP_SYNC_BLOCK	amazon-freertos/include/FreeRTOS.h	568;"	d
traceEVENT_GROUP_SYNC_END	amazon-freertos/include/FreeRTOS.h	572;"	d
traceEVENT_GROUP_WAIT_BITS_BLOCK	amazon-freertos/include/FreeRTOS.h	576;"	d
traceEVENT_GROUP_WAIT_BITS_END	amazon-freertos/include/FreeRTOS.h	580;"	d
traceFREE	amazon-freertos/include/FreeRTOS.h	556;"	d
traceGIVE_MUTEX_RECURSIVE	amazon-freertos/include/FreeRTOS.h	416;"	d
traceGIVE_MUTEX_RECURSIVE_FAILED	amazon-freertos/include/FreeRTOS.h	420;"	d
traceINCREASE_TICK_COUNT	amazon-freertos/include/FreeRTOS.h	317;"	d
traceLOW_POWER_IDLE_BEGIN	amazon-freertos/include/FreeRTOS.h	322;"	d
traceLOW_POWER_IDLE_END	amazon-freertos/include/FreeRTOS.h	327;"	d
traceMALLOC	amazon-freertos/include/FreeRTOS.h	552;"	d
traceMOVED_TASK_TO_READY_STATE	amazon-freertos/include/FreeRTOS.h	392;"	d
tracePEND_FUNC_CALL	amazon-freertos/include/FreeRTOS.h	604;"	d
tracePEND_FUNC_CALL_FROM_ISR	amazon-freertos/include/FreeRTOS.h	608;"	d
tracePOST_MOVED_TASK_TO_READY_STATE	amazon-freertos/include/FreeRTOS.h	396;"	d
traceQUEUE_CREATE	amazon-freertos/include/FreeRTOS.h	400;"	d
traceQUEUE_CREATE_FAILED	amazon-freertos/include/FreeRTOS.h	404;"	d
traceQUEUE_DELETE	amazon-freertos/include/FreeRTOS.h	488;"	d
traceQUEUE_PEEK	amazon-freertos/include/FreeRTOS.h	452;"	d
traceQUEUE_PEEK_FAILED	amazon-freertos/include/FreeRTOS.h	456;"	d
traceQUEUE_PEEK_FROM_ISR	amazon-freertos/include/FreeRTOS.h	460;"	d
traceQUEUE_PEEK_FROM_ISR_FAILED	amazon-freertos/include/FreeRTOS.h	484;"	d
traceQUEUE_RECEIVE	amazon-freertos/include/FreeRTOS.h	448;"	d
traceQUEUE_RECEIVE_FAILED	amazon-freertos/include/FreeRTOS.h	464;"	d
traceQUEUE_RECEIVE_FROM_ISR	amazon-freertos/include/FreeRTOS.h	476;"	d
traceQUEUE_RECEIVE_FROM_ISR_FAILED	amazon-freertos/include/FreeRTOS.h	480;"	d
traceQUEUE_REGISTRY_ADD	amazon-freertos/include/FreeRTOS.h	612;"	d
traceQUEUE_SEND	amazon-freertos/include/FreeRTOS.h	440;"	d
traceQUEUE_SEND_FAILED	amazon-freertos/include/FreeRTOS.h	444;"	d
traceQUEUE_SEND_FROM_ISR	amazon-freertos/include/FreeRTOS.h	468;"	d
traceQUEUE_SEND_FROM_ISR_FAILED	amazon-freertos/include/FreeRTOS.h	472;"	d
traceSTART	amazon-freertos/include/FreeRTOS.h	299;"	d
traceSTREAM_BUFFER_CREATE	amazon-freertos/include/FreeRTOS.h	652;"	d
traceSTREAM_BUFFER_CREATE_FAILED	amazon-freertos/include/FreeRTOS.h	644;"	d
traceSTREAM_BUFFER_CREATE_STATIC_FAILED	amazon-freertos/include/FreeRTOS.h	648;"	d
traceSTREAM_BUFFER_DELETE	amazon-freertos/include/FreeRTOS.h	656;"	d
traceSTREAM_BUFFER_RECEIVE	amazon-freertos/include/FreeRTOS.h	684;"	d
traceSTREAM_BUFFER_RECEIVE_FAILED	amazon-freertos/include/FreeRTOS.h	688;"	d
traceSTREAM_BUFFER_RECEIVE_FROM_ISR	amazon-freertos/include/FreeRTOS.h	692;"	d
traceSTREAM_BUFFER_RESET	amazon-freertos/include/FreeRTOS.h	660;"	d
traceSTREAM_BUFFER_SEND	amazon-freertos/include/FreeRTOS.h	668;"	d
traceSTREAM_BUFFER_SEND_FAILED	amazon-freertos/include/FreeRTOS.h	672;"	d
traceSTREAM_BUFFER_SEND_FROM_ISR	amazon-freertos/include/FreeRTOS.h	676;"	d
traceTAKE_MUTEX_RECURSIVE	amazon-freertos/include/FreeRTOS.h	424;"	d
traceTAKE_MUTEX_RECURSIVE_FAILED	amazon-freertos/include/FreeRTOS.h	428;"	d
traceTASK_CREATE	amazon-freertos/include/FreeRTOS.h	492;"	d
traceTASK_CREATE_FAILED	amazon-freertos/include/FreeRTOS.h	496;"	d
traceTASK_DELAY	amazon-freertos/include/FreeRTOS.h	508;"	d
traceTASK_DELAY_UNTIL	amazon-freertos/include/FreeRTOS.h	504;"	d
traceTASK_DELETE	amazon-freertos/include/FreeRTOS.h	500;"	d
traceTASK_INCREMENT_TICK	amazon-freertos/include/FreeRTOS.h	528;"	d
traceTASK_NOTIFY	amazon-freertos/include/FreeRTOS.h	632;"	d
traceTASK_NOTIFY_FROM_ISR	amazon-freertos/include/FreeRTOS.h	636;"	d
traceTASK_NOTIFY_GIVE_FROM_ISR	amazon-freertos/include/FreeRTOS.h	640;"	d
traceTASK_NOTIFY_TAKE	amazon-freertos/include/FreeRTOS.h	620;"	d
traceTASK_NOTIFY_TAKE_BLOCK	amazon-freertos/include/FreeRTOS.h	616;"	d
traceTASK_NOTIFY_WAIT	amazon-freertos/include/FreeRTOS.h	628;"	d
traceTASK_NOTIFY_WAIT_BLOCK	amazon-freertos/include/FreeRTOS.h	624;"	d
traceTASK_PRIORITY_DISINHERIT	amazon-freertos/include/FreeRTOS.h	350;"	d
traceTASK_PRIORITY_INHERIT	amazon-freertos/include/FreeRTOS.h	342;"	d
traceTASK_PRIORITY_SET	amazon-freertos/include/FreeRTOS.h	512;"	d
traceTASK_RESUME	amazon-freertos/include/FreeRTOS.h	520;"	d
traceTASK_RESUME_FROM_ISR	amazon-freertos/include/FreeRTOS.h	524;"	d
traceTASK_SUSPEND	amazon-freertos/include/FreeRTOS.h	516;"	d
traceTASK_SWITCHED_IN	amazon-freertos/include/FreeRTOS.h	311;"	d
traceTASK_SWITCHED_OUT	amazon-freertos/include/FreeRTOS.h	333;"	d
traceTIMER_COMMAND_RECEIVED	amazon-freertos/include/FreeRTOS.h	548;"	d
traceTIMER_COMMAND_SEND	amazon-freertos/include/FreeRTOS.h	540;"	d
traceTIMER_CREATE	amazon-freertos/include/FreeRTOS.h	532;"	d
traceTIMER_CREATE_FAILED	amazon-freertos/include/FreeRTOS.h	536;"	d
traceTIMER_EXPIRED	amazon-freertos/include/FreeRTOS.h	544;"	d
transactionLength	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint16_t transactionLength : 11U;$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon513::__anon514
transfer	component/i2c/flexcomm_i2c_adapter.c	/^    hal_i2c_slave_transfer_t transfer;$/;"	m	struct:_hal_i2c_slave	file:
transfer	component/serial_manager/serial_manager.c	/^    serial_manager_transfer_t transfer;$/;"	m	struct:_serial_manager_send_handle	file:
transfer	drivers/fsl_i2c.h	/^    i2c_master_transfer_t transfer;                    \/*!< Copy of the current transfer info. *\/$/;"	m	struct:_i2c_master_handle
transfer	drivers/fsl_i2c.h	/^    volatile i2c_slave_transfer_t transfer; \/*!< I2C slave transfer. *\/$/;"	m	struct:_i2c_slave_handle
transfer	drivers/fsl_i2c_dma.h	/^    i2c_master_transfer_t transfer;                        \/*!< Copy of the current transfer info. *\/$/;"	m	struct:_i2c_master_dma_handle
transferBuffer	usb/device/source/khci/usb_device_khci.h	/^    uint8_t *transferBuffer; \/*!< Address of buffer containing the data to be transmitted *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct
transferBuffer	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t *transferBuffer;       \/*!< Address of buffer containing the data to be transmitted *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct
transferCount	drivers/fsl_dma.h	/^    uint16_t transferCount; \/*!< Number of transfers *\/$/;"	m	struct:_dma_xfercfg
transferCount	drivers/fsl_i2c.h	/^    uint32_t transferCount;  \/*!< Indicates progress of the transfer *\/$/;"	m	struct:_i2c_master_handle
transferCount	drivers/fsl_i2c_dma.h	/^    uint32_t transferCount;     \/*!< Indicates progress of the transfer *\/$/;"	m	struct:_i2c_master_dma_handle
transferCount	drivers/fsl_i2s.h	/^    volatile uint32_t transferCount;                   \/*!< Number of bytes transferred *\/$/;"	m	struct:_i2s_handle
transferDelay	drivers/fsl_spi.h	/^    uint8_t transferDelay; \/*!< Delay between transfer to transfer. *\/$/;"	m	struct:_spi_delay_config
transferDone	usb/device/source/khci/usb_device_khci.h	/^    uint32_t transferDone;   \/*!< The data length has been transferred*\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct
transferDone	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint32_t transferDone;         \/*!< The data length has been transferred*\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct
transferFree	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_transfer_struct_t *transferFree; \/*!< Transfer queue for idle*\/$/;"	m	struct:_usb_device_ccid_struct
transferHead	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_transfer_struct_t *transferHead; \/*!< Transfer queue for busy*\/$/;"	m	struct:_usb_device_ccid_struct
transferLength	usb/device/source/khci/usb_device_khci.h	/^    uint32_t transferLength; \/*!< Length of data to transmit. *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct
transferLength	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint32_t transferLength;       \/*!< Length of data to transmit. *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct
transferLengthLsb	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t transferLengthLsb; \/*!< Transfer Length (LSB)*\/$/;"	m	struct:_usb_device_read_write_10_command_struct
transferLengthMsb	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t transferLengthMsb; \/*!< Transfer Length (MSB)*\/$/;"	m	struct:_usb_device_read_write_10_command_struct
transferNumber	usb/device/class/usb_device_msc.h	/^    uint32_t transferNumber; \/*!< The number of contiguous logical blocks of data that shall be transferred*\/$/;"	m	struct:_usb_lba_transfer_information_struct
transferPrimedLength	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint32_t transferPrimedLength; \/*!< it may larger than transferLength, because the primed length may larger than the$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct
transferRemaining	usb/device/class/usb_device_msc.h	/^    uint32_t transferRemaining;                            \/*!< Transfer remaining data *\/$/;"	m	struct:_usb_device_msc_struct
transferSize	drivers/fsl_dmic_dma.h	/^    size_t transferSize;                   \/*!< Size of the data to receive. *\/$/;"	m	struct:_dmic_dma_handle
transferSize	drivers/fsl_spi_dma.h	/^    size_t transferSize;         \/*!< Bytes need to be transfer *\/$/;"	m	struct:_spi_dma_handle
transferType	usb/device/class/usb_device_class.h	/^    uint8_t transferType;    \/*!< Endpoint transfer type*\/$/;"	m	struct:_usb_device_endpoint_struct
transferType	usb/device/include/usb_device.h	/^    uint8_t transferType;    \/*!< Endpoint transfer type*\/$/;"	m	struct:_usb_device_endpoint_init_struct
transferredCount	component/i2c/i2c.h	/^    size_t transferredCount; \/*!< A number of bytes actually transferred since the start or since the last repeated$/;"	m	struct:_hal_i2c_slave_transfer
transferredCount	drivers/fsl_i2c.h	/^    size_t transferredCount;          \/*!< Number of bytes transferred during this transfer. *\/$/;"	m	struct:_i2c_slave_transfer
transferring	usb/device/source/khci/usb_device_khci.h	/^            uint32_t transferring : 1U;   \/*!< The endpoint is transferring *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct::__anon525::__anon526
transferring	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t transferring : 1U;   \/*!< The endpoint is transferring *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
transfers	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_transfer_struct_t transfers[USB_DEVICE_CONFIG_CCID_TRANSFER_COUNT]; \/*!< Transfer entity *\/$/;"	m	struct:_usb_device_ccid_struct
tried_llipaddr	lwip/src/include/lwip/autoip.h	/^  u8_t tried_llipaddr;$/;"	m	struct:autoip
tries	lwip/src/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
tries	lwip/src/include/lwip/dhcp6.h	/^  u8_t tries;$/;"	m	struct:dhcp6
trigger	drivers/fsl_dma.h	/^    dma_channel_trigger_t *trigger; \/*!< DMA trigger type *\/$/;"	m	struct:_dma_channel_config
tryget_socket	lwip/src/api/sockets.c	/^tryget_socket(int fd)$/;"	f	file:
tryget_socket_unconn	lwip/src/api/sockets.c	/^tryget_socket_unconn(int fd)$/;"	f	file:
tryget_socket_unconn_locked	lwip/src/api/sockets.c	/^tryget_socket_unconn_locked(int fd)$/;"	f	file:
tryget_socket_unconn_nouse	lwip/src/api/sockets.c	/^tryget_socket_unconn_nouse(int fd)$/;"	f	file:
ts	lwip/src/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	lwip/src/netif/bridgeif_fdb.c	/^  u32_t ts;$/;"	m	struct:bridgeif_dfdb_entry_s	file:
tsRollover	drivers/fsl_enet.h	/^    enet_ts_rollover_type tsRollover; \/*!< 1588 time nanosecond rollover. *\/$/;"	m	struct:_enet_ptp_config
tsUSAGE_APIList	emwin/emWin_header/GUI_Private.h	/^struct tsUSAGE_APIList {$/;"	s
ts_lastacksent	lwip/src/include/lwip/tcp.h	/^  u32_t ts_lastacksent;$/;"	m	struct:tcp_pcb
ts_recent	lwip/src/include/lwip/tcp.h	/^  u32_t ts_recent;$/;"	m	struct:tcp_pcb
tskBLOCKED_CHAR	amazon-freertos/freertos/tasks.c	96;"	d	file:
tskDELETED_CHAR	amazon-freertos/freertos/tasks.c	98;"	d	file:
tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB	amazon-freertos/freertos/tasks.c	79;"	d	file:
tskIDLE_PRIORITY	amazon-freertos/include/task.h	171;"	d
tskKERNEL_VERSION_BUILD	amazon-freertos/include/freertos_tasks_c_additions.h	27;"	d
tskKERNEL_VERSION_BUILD	amazon-freertos/include/task.h	49;"	d
tskKERNEL_VERSION_MAJOR	amazon-freertos/include/freertos_tasks_c_additions.h	33;"	d
tskKERNEL_VERSION_MAJOR	amazon-freertos/include/task.h	47;"	d
tskKERNEL_VERSION_MINOR	amazon-freertos/include/freertos_tasks_c_additions.h	30;"	d
tskKERNEL_VERSION_MINOR	amazon-freertos/include/task.h	48;"	d
tskKERNEL_VERSION_NUMBER	amazon-freertos/include/task.h	46;"	d
tskMPU_REGION_DEVICE_MEMORY	amazon-freertos/include/task.h	57;"	d
tskMPU_REGION_DEVICE_MEMORY	amazon-freertos/include/task.h	65;"	d
tskMPU_REGION_EXECUTE_NEVER	amazon-freertos/include/task.h	55;"	d
tskMPU_REGION_EXECUTE_NEVER	amazon-freertos/include/task.h	63;"	d
tskMPU_REGION_NORMAL_MEMORY	amazon-freertos/include/task.h	56;"	d
tskMPU_REGION_NORMAL_MEMORY	amazon-freertos/include/task.h	64;"	d
tskMPU_REGION_READ_ONLY	amazon-freertos/include/task.h	53;"	d
tskMPU_REGION_READ_ONLY	amazon-freertos/include/task.h	61;"	d
tskMPU_REGION_READ_WRITE	amazon-freertos/include/task.h	54;"	d
tskMPU_REGION_READ_WRITE	amazon-freertos/include/task.h	62;"	d
tskREADY_CHAR	amazon-freertos/freertos/tasks.c	97;"	d	file:
tskRUNNING_CHAR	amazon-freertos/freertos/tasks.c	95;"	d	file:
tskSET_NEW_STACKS_TO_KNOWN_VALUE	amazon-freertos/freertos/tasks.c	87;"	d	file:
tskSET_NEW_STACKS_TO_KNOWN_VALUE	amazon-freertos/freertos/tasks.c	89;"	d	file:
tskSTACK_FILL_BYTE	amazon-freertos/freertos/tasks.c	76;"	d	file:
tskSTATICALLY_ALLOCATED_STACK_AND_TCB	amazon-freertos/freertos/tasks.c	81;"	d	file:
tskSTATICALLY_ALLOCATED_STACK_ONLY	amazon-freertos/freertos/tasks.c	80;"	d	file:
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	amazon-freertos/include/FreeRTOS.h	1023;"	d
tskSUSPENDED_CHAR	amazon-freertos/freertos/tasks.c	99;"	d	file:
tskTCB	amazon-freertos/freertos/tasks.c	/^} tskTCB;$/;"	t	typeref:struct:tskTaskControlBlock	file:
tskTaskControlBlock	amazon-freertos/freertos/tasks.c	/^typedef struct tskTaskControlBlock 			\/* The old naming convention is used to prevent breaking kernel aware debuggers. *\/$/;"	s	file:
tstate	lwip/src/include/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	lwip/src/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	lwip/src/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	lwip/src/include/lwip/autoip.h	/^  u16_t ttw;$/;"	m	struct:autoip
tunnel_port	lwip/src/include/netif/ppp/pppol2tp.h	/^  u16_t tunnel_port;           \/* Tunnel port *\/$/;"	m	struct:pppol2tp_pcb_s
tv_sec	lwip/src/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	lwip/src/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tw	codec2/defines.h	/^    int   tw;            \/* trapezoidal synthesis window overlap     *\/$/;"	m	struct:__anon134
twidCoefModifier	CMSIS/arm_math.h	/^    uint16_t twidCoefModifier;         \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon74
twidCoefModifier	CMSIS/arm_math.h	/^    uint16_t twidCoefModifier;         \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon75
twidCoefModifier	CMSIS/arm_math.h	/^    uint16_t twidCoefModifier;       \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon70
twidCoefModifier	CMSIS/arm_math.h	/^    uint16_t twidCoefModifier;       \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon71
twidCoefModifier	CMSIS/arm_math.h	/^    uint16_t twidCoefModifier;       \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon72
twidCoefModifier	CMSIS/arm_math.h	/^    uint16_t twidCoefModifier;       \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon73
twidCoefRModifier	CMSIS/arm_math.h	/^    uint32_t twidCoefRModifier;                     \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon81
twidCoefRModifier	CMSIS/arm_math.h	/^    uint32_t twidCoefRModifier;                 \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon80
twidCoefRModifier	CMSIS/arm_math.h	/^    uint32_t twidCoefRModifier;               \/**< twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table. *\/$/;"	m	struct:__anon79
twiddleCoef	CMSIS/arm_common_tables.h	46;"	d
twiddles	codec2/_kiss_fft_guts.h	/^    kiss_fft_cpx twiddles[1];$/;"	m	struct:kiss_fft_state
two_stage_pitch_refinement	codec2/sine.c	/^void two_stage_pitch_refinement(C2CONST *c2const, MODEL *model, COMP Sw[])$/;"	f
tx	component/serial_manager/serial_port_uart.c	/^    serial_uart_send_state_t tx;$/;"	m	struct:_serial_uart_state	file:
tx	component/uart/usart_adapter.c	/^    hal_uart_send_state_t tx;$/;"	m	struct:_hal_uart_state	file:
txBdBase	drivers/fsl_enet.h	/^    enet_tx_bd_struct_t *txBdBase; \/*!< Buffer descriptor base address pointer. *\/$/;"	m	struct:_enet_tx_bd_ring
txBdRing	drivers/fsl_enet.h	/^    enet_tx_bd_ring_t txBdRing[ENET_RING_NUM_MAX]; \/*!< Transmit buffer descriptor.  *\/$/;"	m	struct:_enet_handle
txConsumIdx	drivers/fsl_enet.h	/^    uint16_t txConsumIdx;          \/*!< tx consum index. *\/$/;"	m	struct:_enet_tx_bd_ring
txData	drivers/fsl_i2c.h	/^    const uint8_t *txData;            \/*!< Transfer buffer for transmit data *\/$/;"	m	struct:_i2c_slave_transfer
txData	drivers/fsl_spi.h	/^    uint8_t *txData;            \/*!< Send buffer *\/$/;"	m	struct:_spi_half_duplex_transfer
txData	drivers/fsl_spi.h	/^    uint8_t *txData;      \/*!< Send buffer *\/$/;"	m	struct:_spi_transfer
txData	drivers/fsl_spi.h	/^    uint8_t *volatile txData;         \/*!< Transfer buffer *\/$/;"	m	struct:_spi_master_handle
txData	drivers/fsl_usart.h	/^    uint8_t *volatile txData;   \/*!< Address of remaining data to send. *\/$/;"	m	struct:_usart_handle
txDataSize	drivers/fsl_spi.h	/^    size_t txDataSize;          \/*!< Transfer bytes for transmit *\/$/;"	m	struct:_spi_half_duplex_transfer
txDataSize	drivers/fsl_usart.h	/^    volatile size_t txDataSize; \/*!< Size of the remaining data to send. *\/$/;"	m	struct:_usart_handle
txDataSizeAll	drivers/fsl_usart.h	/^    size_t txDataSizeAll;       \/*!< Size of the data to send out. *\/$/;"	m	struct:_usart_handle
txDescStartAddrAlign	drivers/fsl_enet.h	/^    enet_tx_bd_struct_t *txDescStartAddrAlign; \/*!< Aligned transmit descriptor start address. *\/$/;"	m	struct:_enet_buffer_config
txDescTailAddrAlign	drivers/fsl_enet.h	/^    enet_tx_bd_struct_t *txDescTailAddrAlign;  \/*!< Aligned transmit descriptor tail address. *\/$/;"	m	struct:_enet_buffer_config
txDescUsed	drivers/fsl_enet.h	/^    volatile uint16_t txDescUsed;  \/*!< tx descriptor used number. *\/$/;"	m	struct:_enet_tx_bd_ring
txEmptyZero	drivers/fsl_i2s.h	/^    bool txEmptyZero;     \/*!< Transmit zero when buffer becomes empty or last item *\/$/;"	m	struct:_i2s_config
txGenIdx	drivers/fsl_enet.h	/^    uint16_t txGenIdx;             \/*!< tx generate index. *\/$/;"	m	struct:_enet_tx_bd_ring
txHandle	drivers/fsl_spi_dma.h	/^    dma_handle_t *txHandle;      \/*!< DMA handler for SPI send *\/$/;"	m	struct:_spi_dma_handle
txInProgress	drivers/fsl_spi_dma.h	/^    volatile bool txInProgress;  \/*!< Send transfer finished *\/$/;"	m	struct:_spi_dma_handle
txPtpTsData	drivers/fsl_enet.h	/^    enet_ptp_time_data_t *txPtpTsData; \/*!< The start address of 1588 transmit timestamp buffers *\/$/;"	m	struct:_enet_buffer_config
txPtpTsDataRing	drivers/fsl_enet.h	/^    enet_ptp_time_data_ring_t txPtpTsDataRing; \/*!< Transmit PTP 1588 time stamp data ring buffer. *\/$/;"	m	struct:_enet_tx_bd_ring
txRemainingBytes	drivers/fsl_spi.h	/^    volatile size_t txRemainingBytes; \/*!< Number of data to be transmitted [in bytes] *\/$/;"	m	struct:_spi_master_handle
txRingLen	drivers/fsl_enet.h	/^    uint16_t txRingLen;            \/*!< tx ring length. *\/$/;"	m	struct:_enet_tx_bd_ring
txRingLen	drivers/fsl_enet.h	/^    uint8_t txRingLen;                         \/*!< The length of transmit buffer descriptor ring. *\/$/;"	m	struct:_enet_buffer_config
txSize	drivers/fsl_i2c.h	/^    size_t txSize;                    \/*!< Transfer size *\/$/;"	m	struct:_i2c_slave_transfer
txState	drivers/fsl_usart.h	/^    volatile uint8_t txState; \/*!< TX transfer state. *\/$/;"	m	struct:_usart_handle
txWatermark	drivers/fsl_spi.h	/^    spi_txfifo_watermark_t txWatermark; \/*!< txFIFO watermark *\/$/;"	m	struct:_spi_master_config
txWatermark	drivers/fsl_spi.h	/^    spi_txfifo_watermark_t txWatermark; \/*!< txFIFO watermark *\/$/;"	m	struct:_spi_master_handle
txWatermark	drivers/fsl_spi.h	/^    spi_txfifo_watermark_t txWatermark; \/*!< txFIFO watermark *\/$/;"	m	struct:_spi_slave_config
txWatermark	drivers/fsl_usart.h	/^    usart_txfifo_watermark_t txWatermark; \/*!< txFIFO watermark *\/$/;"	m	struct:_usart_config
txWatermark	drivers/fsl_usart.h	/^    usart_txfifo_watermark_t txWatermark; \/*!< txFIFO watermark *\/$/;"	m	struct:_usart_handle
tx_bpf_buf	codec2/ofdm_internal.h	/^    complex float *tx_bpf_buf;$/;"	m	struct:OFDM
tx_bpf_en	codec2/ofdm_internal.h	/^    bool tx_bpf_en;$/;"	m	struct:OFDM
tx_config	source/i2s_transfer.c	/^static i2s_config_t tx_config;$/;"	v	file:
tx_datagram_tag	lwip/src/netif/lowpan6.c	/^  u16_t tx_datagram_tag;$/;"	m	struct:lowpan6_ieee802154_data	file:
tx_frame_seq_num	lwip/src/netif/lowpan6.c	/^  u8_t tx_frame_seq_num;$/;"	m	struct:lowpan6_ieee802154_data	file:
tx_join	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER tx_join;          \/* Sent joins. *\/$/;"	m	struct:stats_igmp
tx_leave	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER tx_leave;         \/* Sent leaves. *\/$/;"	m	struct:stats_igmp
tx_phase_c	codec2/fsk.h	/^    COMP tx_phase_c;        \/* TX phase, but complex *\/ $/;"	m	struct:FSK
tx_report	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER tx_report;        \/* Sent reports. *\/$/;"	m	struct:stats_igmp
tx_uw	codec2/ofdm_internal.h	/^    int  tx_uw[OFDM_NUWBITS];$/;"	m	struct:OFDM
txdmaBase	drivers/fsl_spi_cmsis.c	/^    DMA_Type *txdmaBase;$/;"	m	struct:_cmsis_spi_dma_resource	file:
txdmaChannel	drivers/fsl_spi_cmsis.c	/^    uint32_t txdmaChannel;$/;"	m	struct:_cmsis_spi_dma_resource	file:
txdmaChnWeight	drivers/fsl_enet.h	/^    uint8_t txdmaChnWeight[ENET_RING_NUM_MAX]; \/*!< Transmit channel weight. *\/$/;"	m	struct:enet_multiqueue_config
txid	lwip/src/core/dns.c	/^  u16_t txid;$/;"	m	struct:dns_table_entry	file:
txqueuePrio	drivers/fsl_enet.h	/^    uint8_t txqueuePrio[ENET_RING_NUM_MAX];  \/*!< Refer to Transmit Queue Priority Mapping register. *\/$/;"	m	struct:enet_multiqueue_config
txqueweight	drivers/fsl_enet.h	/^    uint32_t txqueweight[ENET_RING_NUM_MAX]; \/*!< Refer to the MTL TxQ Quantum Weight register. *\/$/;"	m	struct:enet_multiqueue_config
type	component/serial_manager/serial_manager.c	/^    serial_port_type_t type;$/;"	m	struct:_serial_manager_handle	file:
type	component/serial_manager/serial_manager.h	/^    serial_port_type_t type; \/*!< Serial port type *\/$/;"	m	struct:_serial_manager_config
type	drivers/fsl_dma.h	/^    dma_trigger_type_t type;   \/*!< Select hardware trigger as edge triggered or level triggered. *\/$/;"	m	struct:_dma_channel_trigger
type	littlefs/littlefs_include/lfs.h	/^        uint8_t type;$/;"	m	struct:lfs_entry::lfs_disk_entry
type	littlefs/littlefs_include/lfs.h	/^        uint8_t type;$/;"	m	struct:lfs_superblock::lfs_disk_superblock
type	littlefs/littlefs_include/lfs.h	/^    uint8_t type;$/;"	m	struct:lfs_info
type	lwip/src/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	lwip/src/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	lwip/src/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	lwip/src/include/lwip/ip_addr.h	/^  u8_t type;$/;"	m	struct:ip_addr
type	lwip/src/include/lwip/priv/tcpip_priv.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	usb/device/class/usb_device_class.h	/^    usb_device_class_type_t type;                         \/*!< Class type*\/$/;"	m	struct:_usb_device_class_map
type	usb/device/class/usb_device_class.h	/^    usb_device_class_type_t type;               \/*!< Class type*\/$/;"	m	struct:_usb_device_class_struct
type_internal	lwip/src/include/lwip/pbuf.h	/^  u8_t type_internal;$/;"	m	struct:pbuf
u	amazon-freertos/freertos/queue.c	/^	} u;$/;"	m	struct:QueueDefinition	typeref:union:QueueDefinition::__anon7	file:
u	amazon-freertos/freertos/timers.c	/^	} u;$/;"	m	struct:tmrTimerQueueMessage	typeref:union:tmrTimerQueueMessage::__anon6	file:
u	amazon-freertos/include/FreeRTOS.h	/^	} u;$/;"	m	struct:xSTATIC_QUEUE	typeref:union:xSTATIC_QUEUE::__anon5
u	emwin/emWin_header/GUI.h	/^  } u;$/;"	m	struct:GUI_DEVICE	typeref:union:GUI_DEVICE::__anon383
u	emwin/emWin_header/WM.h	/^    PTR_ADDR u;$/;"	m	union:WM_MESSAGE::__anon291
u	littlefs/littlefs_include/lfs.h	/^        } u;$/;"	m	struct:lfs_entry::lfs_disk_entry	typeref:union:lfs_entry::lfs_disk_entry::__anon425
u16	CMSIS/core_armv8mml.h	/^    __OM  uint16_t   u16;                \/*!< Offset: 0x000 ( \/W)  ITM Stimulus Port 16-bit *\/$/;"	m	union:__anon21::__anon22
u16	CMSIS/core_cm4.h	/^    __OM  uint16_t   u16;                \/*!< Offset: 0x000 ( \/W)  ITM Stimulus Port 16-bit *\/$/;"	m	union:__anon43::__anon44
u16_t	lwip/port/arch/cc.h	/^typedef unsigned short u16_t;$/;"	t
u16_t	lwip/src/include/lwip/arch.h	/^typedef uint16_t  u16_t;$/;"	t
u32	CMSIS/core_armv8mml.h	/^    __OM  uint32_t   u32;                \/*!< Offset: 0x000 ( \/W)  ITM Stimulus Port 32-bit *\/$/;"	m	union:__anon21::__anon22
u32	CMSIS/core_cm4.h	/^    __OM  uint32_t   u32;                \/*!< Offset: 0x000 ( \/W)  ITM Stimulus Port 32-bit *\/$/;"	m	union:__anon43::__anon44
u32_addr	lwip/src/include/lwip/inet.h	/^    u32_t u32_addr[4];$/;"	m	union:in6_addr::__anon447
u32_t	lwip/port/arch/cc.h	/^typedef unsigned int   u32_t;$/;"	t
u32_t	lwip/src/include/lwip/arch.h	/^typedef uint32_t  u32_t;$/;"	t
u64_t	lwip/src/include/lwip/arch.h	/^typedef uint64_t  u64_t;$/;"	t
u8	CMSIS/core_armv8mml.h	/^    __OM  uint8_t    u8;                 \/*!< Offset: 0x000 ( \/W)  ITM Stimulus Port 8-bit *\/$/;"	m	union:__anon21::__anon22
u8	CMSIS/core_cm4.h	/^    __OM  uint8_t    u8;                 \/*!< Offset: 0x000 ( \/W)  ITM Stimulus Port 8-bit *\/$/;"	m	union:__anon43::__anon44
u8_addr	lwip/src/include/lwip/inet.h	/^    u8_t  u8_addr[16];$/;"	m	union:in6_addr::__anon447
u8_t	lwip/port/arch/cc.h	/^typedef unsigned char  u8_t;$/;"	t
u8_t	lwip/src/include/lwip/arch.h	/^typedef uint8_t   u8_t;$/;"	t
uLCD	emwin/emWin_header/GUI.h	/^  LCD_COLORINDEX_UNION uLCD;$/;"	m	struct:GUI_CONTEXT
u_addr	lwip/src/include/lwip/ip_addr.h	/^  } u_addr;$/;"	m	struct:ip_addr	typeref:union:ip_addr::__anon474
u_char	lwip/src/include/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	lwip/src/include/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	lwip/src/include/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	lwip/src/include/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
uartHandleBuffer	component/serial_manager/serial_manager.c	/^        uint8_t uartHandleBuffer[SERIAL_PORT_UART_HANDLE_SIZE];$/;"	m	union:_serial_manager_handle::__anon139	file:
uartState	vcom/virtual_com.h	/^    uint16_t uartState;       \/* UART state of the CDC device.                      *\/$/;"	m	struct:_usb_cdc_acm_info
ucDelayAborted	amazon-freertos/freertos/tasks.c	/^		uint8_t ucDelayAborted;$/;"	m	struct:tskTaskControlBlock	file:
ucDummy19	amazon-freertos/include/FreeRTOS.h	/^		uint8_t 		ucDummy19;$/;"	m	struct:xSTATIC_TCB
ucDummy21	amazon-freertos/include/FreeRTOS.h	/^		uint8_t ucDummy21;$/;"	m	struct:xSTATIC_TCB
ucDummy3	amazon-freertos/include/FreeRTOS.h	/^	uint8_t ucDummy3;$/;"	m	struct:xSTATIC_STREAM_BUFFER
ucDummy4	amazon-freertos/include/FreeRTOS.h	/^			uint8_t ucDummy4;$/;"	m	struct:xSTATIC_EVENT_GROUP
ucDummy5	amazon-freertos/include/FreeRTOS.h	/^	uint8_t ucDummy5[ 2 ];$/;"	m	struct:xSTATIC_QUEUE
ucDummy6	amazon-freertos/include/FreeRTOS.h	/^		uint8_t ucDummy6;$/;"	m	struct:xSTATIC_QUEUE
ucDummy7	amazon-freertos/include/FreeRTOS.h	/^	uint8_t				ucDummy7[ configMAX_TASK_NAME_LEN ];$/;"	m	struct:xSTATIC_TCB
ucDummy8	amazon-freertos/include/FreeRTOS.h	/^	uint8_t 			ucDummy8;$/;"	m	struct:xSTATIC_TIMER
ucDummy9	amazon-freertos/include/FreeRTOS.h	/^		uint8_t ucDummy9;$/;"	m	struct:xSTATIC_QUEUE
ucFlags	amazon-freertos/freertos/stream_buffer.c	/^	uint8_t ucFlags;$/;"	m	struct:StreamBufferDef_t	file:
ucHeap	amazon-freertos/freertos/portable/heap_1.c	/^	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];$/;"	v	file:
ucHeap	amazon-freertos/freertos/portable/heap_2.c	/^	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];$/;"	v	file:
ucHeap	amazon-freertos/freertos/portable/heap_4.c	/^	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];$/;"	v	file:
ucMaxSysCallPriority	amazon-freertos/freertos/portable/port.c	/^	 static uint8_t ucMaxSysCallPriority = 0;$/;"	v	file:
ucNotifyState	amazon-freertos/freertos/tasks.c	/^		volatile uint8_t ucNotifyState;$/;"	m	struct:tskTaskControlBlock	file:
ucPortCountLeadingZeros	amazon-freertos/freertos/portable/portmacro.h	/^	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitmap )$/;"	f
ucQueueGetQueueType	amazon-freertos/freertos/queue.c	/^	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )$/;"	f
ucQueueType	amazon-freertos/freertos/queue.c	/^		uint8_t ucQueueType;$/;"	m	struct:QueueDefinition	file:
ucStaticallyAllocated	amazon-freertos/freertos/event_groups.c	/^		uint8_t ucStaticallyAllocated; \/*< Set to pdTRUE if the event group is statically allocated to ensure no attempt is made to free the memory. *\/$/;"	m	struct:EventGroupDef_t	file:
ucStaticallyAllocated	amazon-freertos/freertos/queue.c	/^		uint8_t ucStaticallyAllocated;	\/*< Set to pdTRUE if the memory used by the queue was statically allocated to ensure no attempt is made to free the memory. *\/$/;"	m	struct:QueueDefinition	file:
ucStaticallyAllocated	amazon-freertos/freertos/tasks.c	/^		uint8_t	ucStaticallyAllocated; 		\/*< Set to pdTRUE if the task is a statically allocated to ensure no attempt is made to free the memory. *\/$/;"	m	struct:tskTaskControlBlock	file:
ucStatus	amazon-freertos/freertos/timers.c	/^	uint8_t 				ucStatus;			\/*<< Holds bits to say if the timer was statically allocated or not, and if it is active or not. *\/$/;"	m	struct:tmrTimerControl	file:
ucStreamBufferGetStreamBufferType	amazon-freertos/freertos/stream_buffer.c	/^	uint8_t ucStreamBufferGetStreamBufferType( StreamBufferHandle_t xStreamBuffer )$/;"	f
udp	lwip/src/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon446	typeref:struct:netconn::__anon446::udp_pcb
udp	lwip/src/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp	lwip/src/include/netif/ppp/pppol2tp.h	/^  struct udp_pcb *udp;         \/* UDP L2TP Socket *\/$/;"	m	struct:pppol2tp_pcb_s	typeref:struct:pppol2tp_pcb_s::udp_pcb
udp_bind	lwip/src/core/udp.c	/^udp_bind(struct udp_pcb *pcb, const ip_addr_t *ipaddr, u16_t port)$/;"	f
udp_bind_netif	lwip/src/core/udp.c	/^udp_bind_netif(struct udp_pcb *pcb, const struct netif *netif)$/;"	f
udp_clear_flags	lwip/src/include/lwip/udp.h	159;"	d
udp_connect	lwip/src/core/udp.c	/^udp_connect(struct udp_pcb *pcb, const ip_addr_t *ipaddr, u16_t port)$/;"	f
udp_debug_print	lwip/src/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	lwip/src/include/lwip/udp.h	184;"	d
udp_disconnect	lwip/src/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	lwip/src/include/lwip/udp.h	155;"	d
udp_get_multicast_netif_addr	lwip/src/include/lwip/udp.h	173;"	d
udp_get_multicast_netif_index	lwip/src/include/lwip/udp.h	176;"	d
udp_get_multicast_ttl	lwip/src/include/lwip/udp.h	178;"	d
udp_hdr	lwip/src/include/lwip/prot/udp.h	/^struct udp_hdr {$/;"	s
udp_init	lwip/src/core/udp.c	/^udp_init(void)$/;"	f
udp_input	lwip/src/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_input_local_match	lwip/src/core/udp.c	/^udp_input_local_match(struct udp_pcb *pcb, struct netif *inp, u8_t broadcast)$/;"	f	file:
udp_is_flag_set	lwip/src/include/lwip/udp.h	160;"	d
udp_netif_ip_addr_changed	lwip/src/core/udp.c	/^void udp_netif_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)$/;"	f
udp_new	lwip/src/core/udp.c	/^udp_new(void)$/;"	f
udp_new_ip6	lwip/src/include/lwip/udp.h	168;"	d
udp_new_ip_type	lwip/src/core/udp.c	/^udp_new_ip_type(u8_t type)$/;"	f
udp_new_port	lwip/src/core/udp.c	/^udp_new_port(void)$/;"	f	file:
udp_pcb	lwip/src/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	lwip/src/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_port	lwip/src/core/udp.c	/^static u16_t udp_port = UDP_LOCAL_PORT_RANGE_START;$/;"	v	file:
udp_recv	lwip/src/core/udp.c	/^udp_recv(struct udp_pcb *pcb, udp_recv_fn recv, void *recv_arg)$/;"	f
udp_recv_fn	lwip/src/include/lwip/udp.h	/^typedef void (*udp_recv_fn)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	t
udp_remove	lwip/src/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_send	lwip/src/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_send_chksum	lwip/src/core/udp.c	/^udp_send_chksum(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto	lwip/src/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_chksum	lwip/src/core/udp.c	/^udp_sendto_chksum(struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *dst_ip,$/;"	f
udp_sendto_if	lwip/src/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if_chksum	lwip/src/core/udp.c	/^udp_sendto_if_chksum(struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *dst_ip,$/;"	f
udp_sendto_if_src	lwip/src/core/udp.c	/^udp_sendto_if_src(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if_src_chksum	lwip/src/core/udp.c	/^udp_sendto_if_src_chksum(struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *dst_ip,$/;"	f
udp_set_flags	lwip/src/include/lwip/udp.h	158;"	d
udp_set_multicast_netif_addr	lwip/src/include/lwip/udp.h	172;"	d
udp_set_multicast_netif_index	lwip/src/include/lwip/udp.h	175;"	d
udp_set_multicast_ttl	lwip/src/include/lwip/udp.h	177;"	d
udp_setflags	lwip/src/include/lwip/udp.h	156;"	d
udpindatagrams	lwip/src/include/lwip/stats.h	/^  u32_t udpindatagrams;$/;"	m	struct:stats_mib2
udpinerrors	lwip/src/include/lwip/stats.h	/^  u32_t udpinerrors;$/;"	m	struct:stats_mib2
udpnoports	lwip/src/include/lwip/stats.h	/^  u32_t udpnoports;$/;"	m	struct:stats_mib2
udpoutdatagrams	lwip/src/include/lwip/stats.h	/^  u32_t udpoutdatagrams;$/;"	m	struct:stats_mib2
uint32_t	usb/device/source/ehci/usb_device_ehci.h	/^            uint32_t : 30;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon519::__anon520
ulDummy16	amazon-freertos/include/FreeRTOS.h	/^		uint32_t		ulDummy16;$/;"	m	struct:xSTATIC_TCB
ulDummy18	amazon-freertos/include/FreeRTOS.h	/^		uint32_t 		ulDummy18;$/;"	m	struct:xSTATIC_TCB
ulLengthInBytes	amazon-freertos/include/task.h	/^	uint32_t ulLengthInBytes;$/;"	m	struct:xMEMORY_REGION
ulMaxPRIGROUPValue	amazon-freertos/freertos/portable/port.c	/^	 static uint32_t ulMaxPRIGROUPValue = 0;$/;"	v	file:
ulNotifiedValue	amazon-freertos/freertos/tasks.c	/^		volatile uint32_t ulNotifiedValue;$/;"	m	struct:tskTaskControlBlock	file:
ulParameter2	amazon-freertos/freertos/timers.c	/^	uint32_t ulParameter2;					\/* << The value that will be used as the callback functions second parameter. *\/$/;"	m	struct:tmrCallbackParameters	file:
ulParameters	amazon-freertos/include/task.h	/^	uint32_t ulParameters;$/;"	m	struct:xMEMORY_REGION
ulPortRaiseBASEPRI	amazon-freertos/freertos/portable/portmacro.h	/^portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )$/;"	f
ulRunTimeCounter	amazon-freertos/freertos/tasks.c	/^		uint32_t		ulRunTimeCounter;	\/*< Stores the amount of time the task has spent in the Running state. *\/$/;"	m	struct:tskTaskControlBlock	file:
ulRunTimeCounter	amazon-freertos/include/task.h	/^	uint32_t ulRunTimeCounter;		\/* The total run time allocated to the task so far, as defined by the run time stats clock.  See http:\/\/www.freertos.org\/rtos-run-time-stats.html.  Only valid when configGENERATE_RUN_TIME_STATS is defined as 1 in FreeRTOSConfig.h. *\/$/;"	m	struct:xTASK_STATUS
ulStoppedTimerCompensation	amazon-freertos/freertos/portable/port.c	/^	static uint32_t ulStoppedTimerCompensation = 0;$/;"	v	file:
ulTaskNotifyTake	amazon-freertos/freertos/tasks.c	/^	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )$/;"	f
ulTaskNotifyTake	amazon-freertos/include/mpu_wrappers.h	83;"	d
ulTaskSwitchedInTime	amazon-freertos/freertos/tasks.c	/^	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	\/*< Holds the value of a timer\/counter the last time a task was switched in. *\/$/;"	v	file:
ulTimerCountsForOneTick	amazon-freertos/freertos/portable/port.c	/^	static uint32_t ulTimerCountsForOneTick = 0;$/;"	v	file:
ulTotalRunTime	amazon-freertos/freertos/tasks.c	/^	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		\/*< Holds the total amount of execution time as defined by the run time counter clock. *\/$/;"	v	file:
un	lwip/src/include/lwip/inet.h	/^  } un;$/;"	m	struct:in6_addr	typeref:union:in6_addr::__anon447
unacked	lwip/src/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unc_bytes	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int unc_bytes;	\/* total uncompressed bytes *\/$/;"	m	struct:compstat
unc_packets	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int unc_packets;	\/* total uncompressed packets *\/$/;"	m	struct:compstat
unmap_ipv4_mapped_ipv6	lwip/src/include/lwip/ip_addr.h	255;"	d
unpack	codec2/pack.c	/^unpack($/;"	f
unpack_natural_or_gray	codec2/pack.c	/^unpack_natural_or_gray($/;"	f
unrotate	codec2/golay23.c	/^static int unrotate(unsigned int c, int x) {$/;"	f	file:
unsent	lwip/src/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsent_oversize	lwip/src/include/lwip/tcp.h	/^  u16_t unsent_oversize;$/;"	m	struct:tcp_pcb
up	lwip/src/include/netif/ppp/fsm.h	/^    void (*up)			\/* Called when fsm reaches PPP_FSM_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	lwip/src/include/netif/ppp/ppp.h	/^  upap_state upap;           \/* PAP data *\/$/;"	m	struct:ppp_pcb_s
upap_authpeer	lwip/src/netif/ppp/upap.c	/^void upap_authpeer(ppp_pcb *pcb) {$/;"	f
upap_authwithpeer	lwip/src/netif/ppp/upap.c	/^void upap_authwithpeer(ppp_pcb *pcb, const char *user, const char *password) {$/;"	f
upap_codenames	lwip/src/netif/ppp/upap.c	/^static const char* const upap_codenames[] = {$/;"	v	file:
upap_init	lwip/src/netif/ppp/upap.c	/^static void upap_init(ppp_pcb *pcb) {$/;"	f	file:
upap_input	lwip/src/netif/ppp/upap.c	/^static void upap_input(ppp_pcb *pcb, u_char *inpacket, int l) {$/;"	f	file:
upap_lowerdown	lwip/src/netif/ppp/upap.c	/^static void upap_lowerdown(ppp_pcb *pcb) {$/;"	f	file:
upap_lowerup	lwip/src/netif/ppp/upap.c	/^static void upap_lowerup(ppp_pcb *pcb) {$/;"	f	file:
upap_printpkt	lwip/src/netif/ppp/upap.c	/^static int upap_printpkt(const u_char *p, int plen, void (*printer) (void *, const char *, ...), void *arg) {$/;"	f	file:
upap_protrej	lwip/src/netif/ppp/upap.c	/^static void upap_protrej(ppp_pcb *pcb) {$/;"	f	file:
upap_rauthack	lwip/src/netif/ppp/upap.c	/^static void upap_rauthack(ppp_pcb *pcb, u_char *inp, int id, int len) {$/;"	f	file:
upap_rauthnak	lwip/src/netif/ppp/upap.c	/^static void upap_rauthnak(ppp_pcb *pcb, u_char *inp, int id, int len) {$/;"	f	file:
upap_rauthreq	lwip/src/netif/ppp/upap.c	/^static void upap_rauthreq(ppp_pcb *pcb, u_char *inp, int id, int len) {$/;"	f	file:
upap_reqtimeout	lwip/src/netif/ppp/upap.c	/^static void upap_reqtimeout(void *arg) {$/;"	f	file:
upap_sauthreq	lwip/src/netif/ppp/upap.c	/^static void upap_sauthreq(ppp_pcb *pcb) {$/;"	f	file:
upap_sresp	lwip/src/netif/ppp/upap.c	/^static void upap_sresp(ppp_pcb *pcb, u_char code, u_char id, const char *msg, int msglen) {$/;"	f	file:
upap_state	lwip/src/include/netif/ppp/upap.h	/^typedef struct upap_state {$/;"	s
upap_state	lwip/src/include/netif/ppp/upap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	lwip/src/netif/ppp/upap.c	/^static void upap_timeout(void *arg) {$/;"	f	file:
update_link_stats	lwip/src/netif/ppp/ppp.c	/^void update_link_stats(int u) {$/;"	f
upper_layers_down	lwip/src/netif/ppp/auth.c	/^void upper_layers_down(ppp_pcb *pcb) {$/;"	f
usStackDepth	amazon-freertos/include/task.h	/^	configSTACK_DEPTH_TYPE usStackDepth;$/;"	m	struct:xTASK_PARAMETERS
usStackDepth	source/common.h	/^	const configSTACK_DEPTH_TYPE usStackDepth;$/;"	m	struct:_TaskWork
usStackHighWaterMark	amazon-freertos/include/task.h	/^	configSTACK_DEPTH_TYPE usStackHighWaterMark;	\/* The minimum amount of stack space that has remained for the task since the task was created.  The closer this value is to zero the closer the task has come to overflowing its stack. *\/$/;"	m	struct:xTASK_STATUS
us_clientstate	lwip/src/include/netif/ppp/upap.h	/^    u8_t us_clientstate;	\/* Client state *\/$/;"	m	struct:upap_state
us_id	lwip/src/include/netif/ppp/upap.h	/^    u8_t us_id;		        \/* Current id *\/$/;"	m	struct:upap_state
us_passwd	lwip/src/include/netif/ppp/upap.h	/^    const char *us_passwd;	\/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	lwip/src/include/netif/ppp/upap.h	/^    u8_t us_passwdlen;		\/* Password length *\/$/;"	m	struct:upap_state
us_serverstate	lwip/src/include/netif/ppp/upap.h	/^    u8_t us_serverstate;	\/* Server state *\/$/;"	m	struct:upap_state
us_transmits	lwip/src/include/netif/ppp/upap.h	/^    u8_t us_transmits;		\/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_user	lwip/src/include/netif/ppp/upap.h	/^    const char *us_user;	\/* User *\/$/;"	m	struct:upap_state
us_userlen	lwip/src/include/netif/ppp/upap.h	/^    u8_t us_userlen;		\/* User length *\/$/;"	m	struct:upap_state
usartHandleBuffer	component/serial_manager/serial_port_uart.c	/^    uint8_t usartHandleBuffer[HAL_UART_HANDLE_SIZE];$/;"	m	struct:_serial_uart_state	file:
usart_clock_polarity_t	drivers/fsl_usart.h	/^} usart_clock_polarity_t;$/;"	t	typeref:enum:_usart_clock_polarity
usart_config_t	drivers/fsl_usart.h	/^} usart_config_t;$/;"	t	typeref:struct:_usart_config
usart_data_len_t	drivers/fsl_usart.h	/^} usart_data_len_t;$/;"	t	typeref:enum:_usart_data_len
usart_handle_t	drivers/fsl_usart.h	/^typedef struct _usart_handle usart_handle_t;$/;"	t	typeref:struct:_usart_handle
usart_parity_mode_t	drivers/fsl_usart.h	/^} usart_parity_mode_t;$/;"	t	typeref:enum:_usart_parity_mode
usart_rxfifo_watermark_t	drivers/fsl_usart.h	/^} usart_rxfifo_watermark_t;$/;"	t	typeref:enum:_usart_rxfifo_watermark
usart_stop_bit_count_t	drivers/fsl_usart.h	/^} usart_stop_bit_count_t;$/;"	t	typeref:enum:_usart_stop_bit_count
usart_sync_mode_t	drivers/fsl_usart.h	/^} usart_sync_mode_t;$/;"	t	typeref:enum:_usart_sync_mode
usart_transfer_callback_t	drivers/fsl_usart.h	/^typedef void (*usart_transfer_callback_t)(USART_Type *base, usart_handle_t *handle, status_t status, void *userData);$/;"	t
usart_transfer_t	drivers/fsl_usart.h	/^} usart_transfer_t;$/;"	t	typeref:struct:_usart_transfer
usart_txfifo_watermark_t	drivers/fsl_usart.h	/^} usart_txfifo_watermark_t;$/;"	t	typeref:enum:_usart_txfifo_watermark
usbCdcAcmInfo	vcom/virtual_com.h	/^    usb_cdc_acm_info_t *usbCdcAcmInfo;       \/* CDC ACM information *\/$/;"	m	struct:_usb_cdc_vcom_struct
usb_bos_device_capability_susperspeed_desc_t	usb/include/usb_spec.h	/^} usb_bos_device_capability_susperspeed_desc_t;$/;"	t	typeref:struct:_usb_descriptor_super_speed_device_capability
usb_cdc_acm_info_t	vcom/virtual_com.h	/^} usb_cdc_acm_info_t;$/;"	t	typeref:struct:_usb_cdc_acm_info
usb_cdc_vcom_struct_t	vcom/virtual_com.h	/^} usb_cdc_vcom_struct_t;$/;"	t	typeref:struct:_usb_cdc_vcom_struct
usb_controller_index_t	usb/include/usb.h	/^} usb_controller_index_t;$/;"	t	typeref:enum:_usb_controller_index
usb_dcd_detection_sequence_results_t	usb/device/include/usb_device.h	/^} usb_dcd_detection_sequence_results_t;$/;"	t	typeref:enum:_usb_dcd_detection_sequence_results
usb_dcd_detection_sequence_status_t	usb/device/include/usb_device.h	/^} usb_dcd_detection_sequence_status_t;$/;"	t	typeref:enum:_usb_dcd_detection_sequence_status
usb_descriptor_bos_t	usb/include/usb_spec.h	/^} usb_descriptor_bos_t;$/;"	t	typeref:struct:_usb_descriptor_binary_device_object_store
usb_descriptor_common_t	usb/include/usb_spec.h	/^} usb_descriptor_common_t;$/;"	t	typeref:struct:_usb_descriptor_common
usb_descriptor_configuration_t	usb/include/usb_spec.h	/^} usb_descriptor_configuration_t;$/;"	t	typeref:struct:_usb_descriptor_configuration
usb_descriptor_device_t	usb/include/usb_spec.h	/^} usb_descriptor_device_t;$/;"	t	typeref:struct:_usb_descriptor_device
usb_descriptor_endpoint_companion_t	usb/include/usb_spec.h	/^} usb_descriptor_endpoint_companion_t;$/;"	t	typeref:struct:_usb_descriptor_endpoint_companion
usb_descriptor_endpoint_t	usb/include/usb_spec.h	/^} usb_descriptor_endpoint_t;$/;"	t	typeref:struct:_usb_descriptor_endpoint
usb_descriptor_interface_t	usb/include/usb_spec.h	/^} usb_descriptor_interface_t;$/;"	t	typeref:struct:_usb_descriptor_interface
usb_descriptor_union_t	usb/include/usb_spec.h	/^} usb_descriptor_union_t;$/;"	t	typeref:union:_usb_descriptor_union
usb_descriptor_usb20_extension_t	usb/include/usb_spec.h	/^} usb_descriptor_usb20_extension_t;$/;"	t	typeref:struct:_usb_descriptor_usb20_extension
usb_device_audio_entities_struct_t	usb/device/class/usb_device_audio.h	/^} usb_device_audio_entities_struct_t;$/;"	t	typeref:struct:_usb_device_audio_entities_struct
usb_device_audio_entity_struct_t	usb/device/class/usb_device_audio.h	/^} usb_device_audio_entity_struct_t;$/;"	t	typeref:struct:_usb_device_audio_entity_struct
usb_device_audio_event_t	usb/device/class/usb_device_audio.h	/^} usb_device_audio_event_t;$/;"	t	typeref:enum:__anon510
usb_device_audio_struct_t	usb/device/class/usb_device_audio.h	/^} usb_device_audio_struct_t;$/;"	t	typeref:struct:_usb_device_audio_struct
usb_device_callback_message_struct_t	usb/device/source/usb_device_dci.h	/^} usb_device_callback_message_struct_t;$/;"	t	typeref:struct:_usb_device_callback_message_struct
usb_device_callback_t	usb/device/include/usb_device.h	/^typedef usb_status_t (*usb_device_callback_t)(usb_device_handle handle, uint32_t callbackEvent, void *eventParam);$/;"	t
usb_device_capacity_list_header_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_capacity_list_header_struct_t;$/;"	t	typeref:struct:_usb_device_capacity_list_header_struct
usb_device_ccid_abort_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_abort_command usb_device_ccid_abort_command_t;$/;"	t	typeref:struct:_usb_device_ccid_abort_command
usb_device_ccid_clock_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_clock_command usb_device_ccid_clock_command_t;$/;"	t	typeref:struct:_usb_device_ccid_clock_command
usb_device_ccid_command_struct_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_command_struct_t;$/;"	t	typeref:struct:_usb_device_ccid_command_struct
usb_device_ccid_common_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_common_command usb_device_ccid_common_command_t;$/;"	t	typeref:struct:_usb_device_ccid_common_command
usb_device_ccid_common_response_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_common_response usb_device_ccid_common_response_t;$/;"	t	typeref:struct:_usb_device_ccid_common_response
usb_device_ccid_control_request_struct_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_control_request_struct_t;$/;"	t	typeref:struct:_usb_device_ccid_control_request_struct
usb_device_ccid_data_block_response_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_data_block_response usb_device_ccid_data_block_response_t;$/;"	t	typeref:struct:_usb_device_ccid_data_block_response
usb_device_ccid_data_rate_and_clock_frequency_response_t	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_data_rate_and_clock_frequency_response_t;$/;"	t	typeref:struct:_usb_device_ccid_data_rate_and_clock_frequency_response
usb_device_ccid_escape_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_escape_command usb_device_ccid_escape_command_t;$/;"	t	typeref:struct:_usb_device_ccid_escape_command
usb_device_ccid_escape_response_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_escape_response usb_device_ccid_escape_response_t;$/;"	t	typeref:struct:_usb_device_ccid_escape_response
usb_device_ccid_event_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_event_t;$/;"	t	typeref:enum:_usb_device_ccid_event
usb_device_ccid_get_parameters_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_get_parameters_command usb_device_ccid_get_parameters_command_t;$/;"	t	typeref:struct:_usb_device_ccid_get_parameters_command
usb_device_ccid_get_slot_status_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_get_slot_status_command usb_device_ccid_get_slot_status_command_t;$/;"	t	typeref:struct:_usb_device_ccid_get_slot_status_command
usb_device_ccid_hardware_error_notification_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_hardware_error_notification usb_device_ccid_hardware_error_notification_t;$/;"	t	typeref:struct:_usb_device_ccid_hardware_error_notification
usb_device_ccid_hardware_error_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_hardware_error_t;$/;"	t	typeref:enum:_usb_device_ccid_hardware_error
usb_device_ccid_mechanical_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_mechanical_command usb_device_ccid_mechanical_command_t;$/;"	t	typeref:struct:_usb_device_ccid_mechanical_command
usb_device_ccid_notification_struct_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_notification_struct_t;$/;"	t	typeref:struct:_usb_device_ccid_notification_struct
usb_device_ccid_notify_slot_chnage_notification_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_notify_slot_chnage_notification usb_device_ccid_notify_slot_chnage_notification_t;$/;"	t	typeref:struct:_usb_device_ccid_notify_slot_chnage_notification
usb_device_ccid_parameters_T0_response_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_parameters_T0_response usb_device_ccid_parameters_T0_response_t;$/;"	t	typeref:struct:_usb_device_ccid_parameters_T0_response
usb_device_ccid_parameters_T1_response_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_parameters_T1_response usb_device_ccid_parameters_T1_response_t;$/;"	t	typeref:struct:_usb_device_ccid_parameters_T1_response
usb_device_ccid_parameters_response_common_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_parameters_response_common_t;$/;"	t	typeref:union:_usb_device_ccid_parameters_response_common
usb_device_ccid_parameters_response_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_parameters_response usb_device_ccid_parameters_response_t;$/;"	t	typeref:struct:_usb_device_ccid_parameters_response
usb_device_ccid_power_off_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_power_off_command usb_device_ccid_power_off_command_t;$/;"	t	typeref:struct:_usb_device_ccid_power_off_command
usb_device_ccid_power_on_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_power_on_command usb_device_ccid_power_on_command_t;$/;"	t	typeref:struct:_usb_device_ccid_power_on_command
usb_device_ccid_reset_parameters_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_reset_parameters_command usb_device_ccid_reset_parameters_command_t;$/;"	t	typeref:struct:_usb_device_ccid_reset_parameters_command
usb_device_ccid_secure_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_secure_command usb_device_ccid_secure_command_t;$/;"	t	typeref:struct:_usb_device_ccid_secure_command
usb_device_ccid_secure_pin_modification_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_secure_pin_modification_command usb_device_ccid_secure_pin_modification_command_t;$/;"	t	typeref:struct:_usb_device_ccid_secure_pin_modification_command
usb_device_ccid_secure_pin_operation_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_secure_pin_operation_command usb_device_ccid_secure_pin_operation_command_t;$/;"	t	typeref:struct:_usb_device_ccid_secure_pin_operation_command
usb_device_ccid_set_data_rate_and_clock_frequency_command_t	usb/device/class/usb_device_ccid.h	/^    usb_device_ccid_set_data_rate_and_clock_frequency_command_t;$/;"	t	typeref:struct:_usb_device_ccid_set_data_rate_and_clock_frequency_command
usb_device_ccid_set_parameters_command_common_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_set_parameters_command_common_t;$/;"	t	typeref:union:_usb_device_ccid_set_parameters_command_common
usb_device_ccid_set_parameters_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_set_parameters_command usb_device_ccid_set_parameters_command_t;$/;"	t	typeref:struct:_usb_device_ccid_set_parameters_command
usb_device_ccid_set_parameters_t0_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_set_parameters_t0_command usb_device_ccid_set_parameters_t0_command_t;$/;"	t	typeref:struct:_usb_device_ccid_set_parameters_t0_command
usb_device_ccid_set_parameters_t1_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_set_parameters_t1_command usb_device_ccid_set_parameters_t1_command_t;$/;"	t	typeref:struct:_usb_device_ccid_set_parameters_t1_command
usb_device_ccid_seucre_pin_verification_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_seucre_pin_verification_command usb_device_ccid_seucre_pin_verification_command_t;$/;"	t	typeref:struct:_usb_device_ccid_seucre_pin_verification_command
usb_device_ccid_slot_state_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_slot_state_t;$/;"	t	typeref:enum:_usb_device_ccid_slot_state
usb_device_ccid_slot_status_response_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_slot_status_response usb_device_ccid_slot_status_response_t;$/;"	t	typeref:struct:_usb_device_ccid_slot_status_response
usb_device_ccid_slot_status_struct_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_slot_status_struct_t;$/;"	t	typeref:struct:_usb_device_ccid_slot_status_struct
usb_device_ccid_struct_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_struct_t;$/;"	t	typeref:struct:_usb_device_ccid_struct
usb_device_ccid_t0_apdu_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_t0_apdu_command usb_device_ccid_t0_apdu_command_t;$/;"	t	typeref:struct:_usb_device_ccid_t0_apdu_command
usb_device_ccid_transfer_block_command_t	usb/device/class/usb_device_ccid.h	/^typedef struct _usb_device_ccid_transfer_block_command usb_device_ccid_transfer_block_command_t;$/;"	t	typeref:struct:_usb_device_ccid_transfer_block_command
usb_device_ccid_transfer_struct_t	usb/device/class/usb_device_ccid.h	/^} usb_device_ccid_transfer_struct_t;$/;"	t	typeref:struct:_usb_device_ccid_transfer_struct
usb_device_cdc_acm_event_t	usb/device/class/usb_device_cdc_acm.h	/^} usb_device_cdc_acm_event_t;$/;"	t	typeref:enum:_usb_device_cdc_acm_event
usb_device_cdc_acm_pipe_t	usb/device/class/usb_device_cdc_acm.h	/^} usb_device_cdc_acm_pipe_t;$/;"	t	typeref:struct:_usb_device_cdc_acm_pipe
usb_device_cdc_acm_request_param_struct_t	usb/device/class/usb_device_cdc_acm.h	/^} usb_device_cdc_acm_request_param_struct_t;$/;"	t	typeref:struct:_usb_device_cdc_acm_request_param_struct
usb_device_cdc_acm_struct_t	usb/device/class/usb_device_cdc_acm.h	/^} usb_device_cdc_acm_struct_t;$/;"	t	typeref:struct:_usb_device_cdc_acm_struct
usb_device_cdc_rndis_config_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} usb_device_cdc_rndis_config_struct_t;$/;"	t	typeref:struct:_usb_device_cdc_rndis_config_struct
usb_device_cdc_rndis_request_param_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} usb_device_cdc_rndis_request_param_struct_t;$/;"	t	typeref:struct:_usb_device_cdc_rndis_request_param_struct
usb_device_cdc_rndis_struct_t	usb/device/class/usb_device_cdc_rndis.h	/^} usb_device_cdc_rndis_struct_t;$/;"	t	typeref:struct:_usb_device_cdc_rndis_struct
usb_device_class_callback_t	usb/device/class/usb_device_class.h	/^typedef usb_status_t (*usb_device_class_callback_t)(class_handle_t classHandle,$/;"	t
usb_device_class_config_list_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_class_config_list_struct_t;$/;"	t	typeref:struct:_usb_device_class_config_list_struct
usb_device_class_config_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_class_config_struct_t;$/;"	t	typeref:struct:_usb_device_class_config_struct
usb_device_class_deinit_call_t	usb/device/class/usb_device_class.h	/^typedef usb_status_t (*usb_device_class_deinit_call_t)(class_handle_t handle);$/;"	t
usb_device_class_event_callback_t	usb/device/class/usb_device_class.h	/^typedef usb_status_t (*usb_device_class_event_callback_t)(void *classHandle, uint32_t event, void *param);$/;"	t
usb_device_class_event_t	usb/device/class/usb_device_class.h	/^} usb_device_class_event_t;$/;"	t	typeref:enum:_usb_device_class_event
usb_device_class_init_call_t	usb/device/class/usb_device_class.h	/^typedef usb_status_t (*usb_device_class_init_call_t)(uint8_t controllerId,$/;"	t
usb_device_class_map_t	usb/device/class/usb_device_class.h	/^} usb_device_class_map_t;$/;"	t	typeref:struct:_usb_device_class_map
usb_device_class_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_class_struct_t;$/;"	t	typeref:struct:_usb_device_class_struct
usb_device_class_type_t	usb/device/class/usb_device_class.h	/^} usb_device_class_type_t;$/;"	t	typeref:enum:_usb_usb_device_class_type
usb_device_common_class_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_common_class_struct_t;$/;"	t	typeref:struct:_usb_device_common_class_struct
usb_device_composite_struct_t	vcom/composite.h	/^} usb_device_composite_struct_t;$/;"	t	typeref:struct:_usb_device_composite_struct
usb_device_control_range_layout2_struct_t	usb/device/class/usb_device_audio.h	/^typedef struct _usb_device_control_range_layout2_struct usb_device_control_range_layout2_struct_t;$/;"	t	typeref:struct:_usb_device_control_range_layout2_struct
usb_device_control_range_layout3_struct_t	usb/device/class/usb_device_audio.h	/^typedef struct _usb_device_control_range_layout3_struct usb_device_control_range_layout3_struct_t;$/;"	t	typeref:struct:_usb_device_control_range_layout3_struct
usb_device_control_read_write_sequence_t	usb/device/source/usb_device_ch9.h	/^} usb_device_control_read_write_sequence_t;$/;"	t	typeref:enum:_usb_device_control_read_write_sequence
usb_device_control_request_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_control_request_struct_t;$/;"	t	typeref:struct:_usb_device_control_request_struct
usb_device_control_type_t	usb/device/source/usb_device_dci.h	/^} usb_device_control_type_t;$/;"	t	typeref:enum:_usb_device_control_type
usb_device_controller_cancel_t	usb/device/source/usb_device_dci.h	/^typedef usb_status_t (*usb_device_controller_cancel_t)(usb_device_controller_handle controllerHandle,$/;"	t
usb_device_controller_control_t	usb/device/source/usb_device_dci.h	/^typedef usb_status_t (*usb_device_controller_control_t)(usb_device_controller_handle controllerHandle,$/;"	t
usb_device_controller_deinit_t	usb/device/source/usb_device_dci.h	/^typedef usb_status_t (*usb_device_controller_deinit_t)(usb_device_controller_handle controllerHandle);$/;"	t
usb_device_controller_handle	usb/device/source/usb_device_dci.h	22;"	d
usb_device_controller_init_t	usb/device/source/usb_device_dci.h	/^typedef usb_status_t (*usb_device_controller_init_t)(uint8_t controllerId,$/;"	t
usb_device_controller_interface_struct_t	usb/device/source/usb_device_dci.h	/^} usb_device_controller_interface_struct_t;$/;"	t	typeref:struct:_usb_device_controller_interface_struct
usb_device_controller_recv_t	usb/device/source/usb_device_dci.h	/^typedef usb_status_t (*usb_device_controller_recv_t)(usb_device_controller_handle controllerHandle,$/;"	t
usb_device_controller_send_t	usb/device/source/usb_device_dci.h	/^typedef usb_status_t (*usb_device_controller_send_t)(usb_device_controller_handle controllerHandle,$/;"	t
usb_device_current_max_capacity_descriptor_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_current_max_capacity_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_current_max_capacity_descriptor_struct
usb_device_dcd_charging_time_t	usb/device/include/usb_device.h	/^} usb_device_dcd_charging_time_t;$/;"	t	typeref:struct:_usb_device_dcd_charging_time
usb_device_dcd_dev_status_t	usb/device/class/usb_device_hid.h	/^} usb_device_dcd_dev_status_t;$/;"	t	typeref:enum:_usb_device_dcd_dev_status
usb_device_dcd_port_type_t	usb/device/class/usb_device_hid.h	/^} usb_device_dcd_port_type_t;$/;"	t	typeref:enum:_usb_device_dcd_port_type
usb_device_dcd_state_struct_t	usb/device/source/ehci/usb_device_ehci.h	/^} usb_device_dcd_state_struct_t;$/;"	t	typeref:struct:_usb_device_dcd_state_struct
usb_device_dcd_state_struct_t	usb/device/source/khci/usb_device_khci.h	/^} usb_device_dcd_state_struct_t;$/;"	t	typeref:struct:_usb_device_dcd_state_struct
usb_device_ehci_dtd_struct_t	usb/device/source/ehci/usb_device_ehci.h	/^} usb_device_ehci_dtd_struct_t;$/;"	t	typeref:struct:_usb_device_ehci_dtd_struct
usb_device_ehci_qh_struct_t	usb/device/source/ehci/usb_device_ehci.h	/^} usb_device_ehci_qh_struct_t;$/;"	t	typeref:struct:_usb_device_ehci_qh_struct
usb_device_ehci_state_struct_t	usb/device/source/ehci/usb_device_ehci.h	/^} usb_device_ehci_state_struct_t;$/;"	t	typeref:struct:_usb_device_ehci_state_struct
usb_device_endpoint_callback_message_struct_t	usb/device/include/usb_device.h	/^} usb_device_endpoint_callback_message_struct_t;$/;"	t	typeref:struct:_usb_device_endpoint_callback_message_struct
usb_device_endpoint_callback_struct_t	usb/device/include/usb_device.h	/^} usb_device_endpoint_callback_struct_t;$/;"	t	typeref:struct:_usb_device_endpoint_callback_struct
usb_device_endpoint_callback_t	usb/device/include/usb_device.h	/^typedef usb_status_t (*usb_device_endpoint_callback_t)(usb_device_handle handle,$/;"	t
usb_device_endpoint_init_struct_t	usb/device/include/usb_device.h	/^} usb_device_endpoint_init_struct_t;$/;"	t	typeref:struct:_usb_device_endpoint_init_struct
usb_device_endpoint_list_t	usb/device/class/usb_device_class.h	/^} usb_device_endpoint_list_t;$/;"	t	typeref:struct:_usb_device_endpoint_list
usb_device_endpoint_status_struct_t	usb/device/include/usb_device.h	/^} usb_device_endpoint_status_struct_t;$/;"	t	typeref:struct:_usb_device_endpoint_status_struct
usb_device_endpoint_status_t	usb/device/include/usb_device.h	/^} usb_device_endpoint_status_t;$/;"	t	typeref:enum:_usb_endpoint_status
usb_device_endpoint_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_endpoint_struct_t;$/;"	t	typeref:struct:_usb_device_endpoint_struct
usb_device_event_t	usb/device/include/usb_device.h	/^} usb_device_event_t;$/;"	t	typeref:enum:_usb_device_event
usb_device_format_capacity_response_data_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_format_capacity_response_data_struct_t;$/;"	t	typeref:struct:_usb_device_format_capacity_response_data_struct
usb_device_formattable_capacity_descriptor_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_formattable_capacity_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_formattable_capacity_descriptor_struct
usb_device_get_bos_descriptor_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_bos_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_get_bos_descriptor_struct
usb_device_get_configuration_descriptor_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_configuration_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_get_configuration_descriptor_struct
usb_device_get_descriptor_common_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_descriptor_common_struct_t;$/;"	t	typeref:struct:_usb_device_get_descriptor_common_struct
usb_device_get_descriptor_common_union_t	usb/device/class/usb_device_class.h	/^} usb_device_get_descriptor_common_union_t;$/;"	t	typeref:union:_usb_device_get_descriptor_common_union
usb_device_get_device_descriptor_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_device_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_get_device_descriptor_struct
usb_device_get_device_qualifier_descriptor_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_device_qualifier_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_get_device_qualifier_descriptor_struct
usb_device_get_hid_descriptor_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_hid_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_get_hid_descriptor_struct
usb_device_get_hid_physical_descriptor_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_hid_physical_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_get_hid_physical_descriptor_struct
usb_device_get_hid_report_descriptor_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_hid_report_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_get_hid_report_descriptor_struct
usb_device_get_string_descriptor_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_get_string_descriptor_struct_t;$/;"	t	typeref:struct:_usb_device_get_string_descriptor_struct
usb_device_handle	usb/include/usb.h	/^typedef void *usb_device_handle;$/;"	t
usb_device_hid_event_t	usb/device/class/usb_device_hid.h	/^} usb_device_hid_event_t;$/;"	t	typeref:enum:_usb_device_hid_event
usb_device_hid_report_struct_t	usb/device/class/usb_device_hid.h	/^} usb_device_hid_report_struct_t;$/;"	t	typeref:struct:_usb_device_hid_report_struct
usb_device_hid_struct_t	usb/device/class/usb_device_hid.h	/^} usb_device_hid_struct_t;$/;"	t	typeref:struct:_usb_device_hid_struct
usb_device_inquiry_command_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_inquiry_command_struct_t;$/;"	t	typeref:struct:_usb_device_inquiry_command_struct
usb_device_inquiry_data_fromat_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_inquiry_data_fromat_struct_t;$/;"	t	typeref:struct:_usb_device_inquiry_data_fromat_struct
usb_device_interface_list_t	usb/device/class/usb_device_class.h	/^} usb_device_interface_list_t;$/;"	t	typeref:struct:_usb_device_interface_list
usb_device_interface_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_interface_struct_t;$/;"	t	typeref:struct:_usb_device_interface_struct
usb_device_interfaces_struct_t	usb/device/class/usb_device_class.h	/^} usb_device_interfaces_struct_t;$/;"	t	typeref:struct:_usb_device_interfaces_struct
usb_device_khci_endpoint_state_struct_t	usb/device/source/khci/usb_device_khci.h	/^} usb_device_khci_endpoint_state_struct_t;$/;"	t	typeref:struct:_usb_device_khci_endpoint_state_struct
usb_device_khci_state_struct_t	usb/device/source/khci/usb_device_khci.h	/^} usb_device_khci_state_struct_t;$/;"	t	typeref:struct:_usb_device_khci_state_struct
usb_device_lba_app_struct_t	usb/device/class/usb_device_msc.h	/^} usb_device_lba_app_struct_t;$/;"	t	typeref:struct:_usb_device_lba_app_struct
usb_device_lba_information_struct_t	usb/device/class/usb_device_msc.h	/^} usb_device_lba_information_struct_t;$/;"	t	typeref:struct:_usb_device_lba_information_struct
usb_device_logical_unit_information_struct_t	usb/device/class/usb_device_msc.h	/^} usb_device_logical_unit_information_struct_t;$/;"	t	typeref:struct:_usb_device_logical_unit_information_struct
usb_device_lpc3511ip_endpoint_state_struct_t	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^} usb_device_lpc3511ip_endpoint_state_struct_t;$/;"	t	typeref:struct:_usb_device_lpc3511ip_endpoint_state_struct
usb_device_lpc3511ip_state_struct_t	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^} usb_device_lpc3511ip_state_struct_t;$/;"	t	typeref:struct:_usb_device_lpc3511ip_state_struct
usb_device_mode_parameters_header_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_mode_parameters_header_struct_t;$/;"	t	typeref:struct:_usb_device_mode_parameters_header_struct
usb_device_msc_cbw_t	usb/device/class/usb_device_msc.h	/^} usb_device_msc_cbw_t;$/;"	t	typeref:struct:_usb_device_msc_cbw
usb_device_msc_csw_t	usb/device/class/usb_device_msc.h	/^} usb_device_msc_csw_t;$/;"	t	typeref:struct:_usb_device_msc_csw
usb_device_msc_stall_type	usb/device/class/usb_device_msc.h	/^} usb_device_msc_stall_type;$/;"	t	typeref:enum:__anon500
usb_device_msc_struct_t	usb/device/class/usb_device_msc.h	/^} usb_device_msc_struct_t;$/;"	t	typeref:struct:_usb_device_msc_struct
usb_device_msc_thirteen_case_struct_t	usb/device/class/usb_device_msc.h	/^} usb_device_msc_thirteen_case_struct_t;$/;"	t	typeref:struct:_usb_device_msc_thirteen_case_struct
usb_device_msc_ufi_struct_t	usb/device/class/usb_device_msc.h	/^} usb_device_msc_ufi_struct_t;$/;"	t	typeref:struct:_usb_device_msc_ufi_struct
usb_device_notification_t	usb/device/source/usb_device_dci.h	/^} usb_device_notification_t;$/;"	t	typeref:enum:_usb_device_notification
usb_device_phdc_event_t	usb/device/class/usb_device_phdc.h	/^} usb_device_phdc_event_t;$/;"	t	typeref:enum:__anon502
usb_device_phdc_pipe_t	usb/device/class/usb_device_phdc.h	/^} usb_device_phdc_pipe_t;$/;"	t	typeref:struct:_usb_device_phdc_pipe
usb_device_phdc_struct_t	usb/device/class/usb_device_phdc.h	/^} usb_device_phdc_struct_t;$/;"	t	typeref:struct:_usb_device_phdc_struct
usb_device_printer_class_request_t	usb/device/class/usb_device_printer.h	/^} usb_device_printer_class_request_t;$/;"	t	typeref:struct:_usb_device_printer_class_request
usb_device_printer_event_t	usb/device/class/usb_device_printer.h	/^} usb_device_printer_event_t;$/;"	t	typeref:enum:_usb_device_printer_event
usb_device_printer_struct_t	usb/device/class/usb_device_printer.h	/^} usb_device_printer_struct_t;$/;"	t	typeref:struct:_usb_device_printer_struct
usb_device_read_capacities_command_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_read_capacities_command_struct_t;$/;"	t	typeref:struct:_usb_device_read_capacities_command_struct
usb_device_read_capacity16_data_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_read_capacity16_data_struct_t;$/;"	t	typeref:struct:_usb_device_read_capacity16_data_struct
usb_device_read_capacity_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_read_capacity_struct_t;$/;"	t	typeref:struct:_usb_device_read_capacity_struct
usb_device_read_format_capacities_command_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_read_format_capacities_command_struct_t;$/;"	t	typeref:struct:_usb_device_read_format_capacities_command_struct
usb_device_read_write_10_command_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_read_write_10_command_struct_t;$/;"	t	typeref:struct:_usb_device_read_write_10_command_struct
usb_device_request_sense_command_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_request_sense_command_struct_t;$/;"	t	typeref:struct:_usb_device_request_sense_command_struct
usb_device_request_sense_data_struct_t	usb/device/class/usb_device_msc_ufi.h	/^} usb_device_request_sense_data_struct_t;$/;"	t	typeref:struct:_usb_device_request_sense_data_struct
usb_device_state_t	usb/device/include/usb_device.h	/^} usb_device_state_t;$/;"	t	typeref:enum:_usb_device_state
usb_device_status_t	usb/device/include/usb_device.h	/^} usb_device_status_t;$/;"	t	typeref:enum:_usb_device_status
usb_device_struct_t	usb/device/source/usb_device_dci.h	/^} usb_device_struct_t;$/;"	t	typeref:struct:_usb_device_struct
usb_device_ufi_app_struct_t	usb/device/class/usb_device_msc.h	/^} usb_device_ufi_app_struct_t;$/;"	t	typeref:struct:_usb_device_ufi_app_struct
usb_device_video_entities_struct_t	usb/device/class/usb_device_video.h	/^} usb_device_video_entities_struct_t;$/;"	t	typeref:struct:_usb_device_video_entities_struct
usb_device_video_entity_struct_t	usb/device/class/usb_device_video.h	/^} usb_device_video_entity_struct_t;$/;"	t	typeref:struct:_usb_device_video_entity_struct
usb_device_video_event_t	usb/device/class/usb_device_video.h	/^} usb_device_video_event_t;$/;"	t	typeref:enum:_usb_device_video_event
usb_device_video_mjpeg_payload_header_struct_t	usb/device/class/usb_device_video.h	/^typedef struct _usb_device_video_mjpeg_payload_header_struct usb_device_video_mjpeg_payload_header_struct_t;$/;"	t	typeref:struct:_usb_device_video_mjpeg_payload_header_struct
usb_device_video_probe_and_commit_controls_struct_t	usb/device/class/usb_device_video.h	/^typedef struct _usb_device_video_probe_and_commit_controls_struct usb_device_video_probe_and_commit_controls_struct_t;$/;"	t	typeref:struct:_usb_device_video_probe_and_commit_controls_struct
usb_device_video_still_probe_and_commit_controls_struct_t	usb/device/class/usb_device_video.h	/^    usb_device_video_still_probe_and_commit_controls_struct_t;$/;"	t	typeref:struct:_usb_device_video_still_probe_and_commit_controls_struct
usb_device_video_struct_t	usb/device/class/usb_device_video.h	/^} usb_device_video_struct_t;$/;"	t	typeref:struct:_usb_device_video_struct
usb_echo	usb/include/usb_misc.h	34;"	d
usb_echo	usb/include/usb_misc.h	36;"	d
usb_host_handle	usb/include/usb.h	/^typedef void *usb_host_handle;$/;"	t
usb_khci_interrupt_type_t	usb/device/source/khci/usb_device_khci.h	/^} usb_khci_interrupt_type_t;$/;"	t	typeref:enum:_usb_khci_interrupt_type
usb_language_list_t	usb/include/usb_spec.h	/^} usb_language_list_t;$/;"	t	typeref:struct:_usb_language_list
usb_language_t	usb/include/usb_spec.h	/^} usb_language_t;$/;"	t	typeref:struct:_usb_language
usb_lba_transfer_information_struct_t	usb/device/class/usb_device_msc.h	/^} usb_lba_transfer_information_struct_t;$/;"	t	typeref:struct:_usb_lba_transfer_information_struct
usb_main	vcom/composite.c	/^int usb_main(void)$/;"	f
usb_osa_event_handle	osa/usb_osa.h	/^typedef void *usb_osa_event_handle;$/;"	t
usb_osa_event_mode_t	osa/usb_osa.h	/^} usb_osa_event_mode_t;$/;"	t	typeref:enum:_usb_osa_event_mode
usb_osa_event_struct_t	osa/usb_osa_freertos.c	/^} usb_osa_event_struct_t;$/;"	t	typeref:struct:_usb_osa_event_struct	file:
usb_osa_msg_struct_t	osa/usb_osa_freertos.c	/^} usb_osa_msg_struct_t;$/;"	t	typeref:struct:_usb_osa_msg_struct	file:
usb_osa_msgq_handle	osa/usb_osa.h	/^typedef void *usb_osa_msgq_handle;$/;"	t
usb_osa_msgq_struct_t	osa/usb_osa_freertos.c	/^} usb_osa_msgq_struct_t;$/;"	t	typeref:struct:_usb_osa_msgq_struct	file:
usb_osa_mutex_handle	osa/usb_osa.h	/^typedef void *usb_osa_mutex_handle;$/;"	t
usb_osa_sem_handle	osa/usb_osa.h	/^typedef void *usb_osa_sem_handle;$/;"	t
usb_osa_sem_struct_t	osa/usb_osa_freertos.c	/^} usb_osa_sem_struct_t;$/;"	t	typeref:struct:_usb_osa_sem_struct	file:
usb_osa_status_t	osa/usb_osa.h	/^} usb_osa_status_t;$/;"	t	typeref:enum:_usb_osa_status
usb_otg_handle	usb/include/usb.h	/^typedef void *usb_otg_handle;$/;"	t
usb_phy_config_struct_t	usb/phy/usb_phy.h	/^} usb_phy_config_struct_t;$/;"	t	typeref:struct:_usb_phy_config_struct
usb_pll_psel	drivers/fsl_clock.h	/^} usb_pll_psel;$/;"	t	typeref:enum:_usb_pll_psel
usb_pll_setup_t	drivers/fsl_clock.h	/^} usb_pll_setup_t;$/;"	t	typeref:struct:_usb_pll_setup
usb_setup_struct_t	usb/include/usb_spec.h	/^} usb_setup_struct_t;$/;"	t	typeref:struct:_usb_setup_struct
usb_standard_request_callback_t	usb/device/source/usb_device_ch9.c	/^typedef usb_status_t (*usb_standard_request_callback_t)(usb_device_common_class_struct_t *classHandle,$/;"	t	file:
usb_status_t	usb/include/usb.h	/^} usb_status_t;$/;"	t	typeref:enum:_usb_status
usb_version_t	usb/include/usb.h	/^} usb_version_t;$/;"	t	typeref:struct:_usb_version
usbcdcHandleBuffer	component/serial_manager/serial_manager.c	/^        uint8_t usbcdcHandleBuffer[SERIAL_PORT_USB_CDC_HANDLE_SIZE];$/;"	m	union:_serial_manager_handle::__anon139	file:
usbcdcVirtualHandleBuffer	component/serial_manager/serial_manager.c	/^        uint8_t usbcdcVirtualHandleBuffer[SERIAL_PORT_USB_VIRTUAL_HANDLE_SIZE];$/;"	m	union:_serial_manager_handle::__anon139	file:
usbdApiBase	device/LPC54018.h	/^  __I uint32_t usbdApiBase;                      \/** USB API Base *\/$/;"	m	struct:__anon194
use	lwip/src/include/lwip/igmp.h	/^  u8_t               use;$/;"	m	struct:igmp_group
use	lwip/src/include/lwip/mld6.h	/^  u8_t               use;$/;"	m	struct:mld_group
useFifo48H	drivers/fsl_i2s.h	/^    bool useFifo48H; \/*!< When dataLength 17-24: true use FIFOWR48H, false use FIFOWR *\/$/;"	m	struct:_i2s_handle
use_ip	lwip/src/include/netif/ppp/ipv6cp.h	/^    unsigned int use_ip         :1;  \/* use IP as interface identifier *\/$/;"	m	struct:ipv6cp_options
used	lwip/src/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	lwip/src/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
used	lwip/src/netif/bridgeif.c	/^  u8_t used;$/;"	m	struct:bridgeif_fdb_static_entry_s	file:
used	lwip/src/netif/bridgeif_fdb.c	/^  u8_t used;$/;"	m	struct:bridgeif_dfdb_entry_s	file:
usepeerdns	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int  usepeerdns          :1;      \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings_s
user	lwip/src/include/netif/ppp/ppp.h	/^  const char  *user;                   \/* Username for PAP *\/$/;"	m	struct:ppp_settings_s
userData	drivers/fsl_dma.h	/^    void *userData;        \/*!< Callback function parameter *\/$/;"	m	struct:_dma_handle
userData	drivers/fsl_dmic_dma.h	/^    void *userData;                        \/*!< DMIC callback function parameter.*\/$/;"	m	struct:_dmic_dma_handle
userData	drivers/fsl_enet.h	/^    void *userData;           \/*!< Callback function parameter.*\/$/;"	m	struct:_enet_handle
userData	drivers/fsl_i2c.h	/^    void *userData;                                    \/*!< Application data passed to callback. *\/$/;"	m	struct:_i2c_master_handle
userData	drivers/fsl_i2c.h	/^    void *userData;                         \/*!< Callback parameter passed to callback. *\/$/;"	m	struct:_i2c_slave_handle
userData	drivers/fsl_i2c_dma.h	/^    void *userData;                                        \/*!< Callback parameter passed to callback function. *\/$/;"	m	struct:_i2c_master_dma_handle
userData	drivers/fsl_i2s.h	/^    void *userData;                             \/*!< Application data passed to callback *\/$/;"	m	struct:_i2s_handle
userData	drivers/fsl_i2s_dma.h	/^    void *userData;                                    \/*!< Application data passed to callback *\/$/;"	m	struct:_i2s_dma_handle
userData	drivers/fsl_spi.h	/^    void *userData;                   \/*!< Callback parameter *\/$/;"	m	struct:_spi_master_handle
userData	drivers/fsl_spi_dma.h	/^    void *userData;              \/*!< User Data for SPI DMA callback *\/$/;"	m	struct:_spi_dma_handle
userData	drivers/fsl_usart.h	/^    void *userData;                     \/*!< USART callback function parameter.*\/$/;"	m	struct:_usart_handle
user_size	lwip/src/core/mem.c	/^  mem_size_t user_size;$/;"	m	struct:mem	file:
uw_errors	codec2/ofdm_internal.h	/^    int uw_errors;$/;"	m	struct:OFDM
uxBasePriority	amazon-freertos/freertos/tasks.c	/^		UBaseType_t		uxBasePriority;		\/*< The priority last assigned to the task - used by the priority inheritance mechanism. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxBasePriority	amazon-freertos/include/task.h	/^	UBaseType_t uxBasePriority;		\/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. *\/$/;"	m	struct:xTASK_STATUS
uxCriticalNesting	amazon-freertos/freertos/portable/port.c	/^static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;$/;"	v	file:
uxCriticalNesting	amazon-freertos/freertos/tasks.c	/^		UBaseType_t		uxCriticalNesting;	\/*< Holds the critical section nesting depth for ports that do not maintain their own count in the port layer. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxCurrentNumberOfTasks	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;$/;"	v	file:
uxCurrentPriority	amazon-freertos/include/task.h	/^	UBaseType_t uxCurrentPriority;	\/* The priority at which the task was running (may be inherited) when the structure was populated. *\/$/;"	m	struct:xTASK_STATUS
uxDeletedTasksWaitingCleanUp	amazon-freertos/freertos/tasks.c	/^	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;$/;"	v	file:
uxDummy1	amazon-freertos/include/FreeRTOS.h	/^	size_t uxDummy1[ 4 ];$/;"	m	struct:xSTATIC_STREAM_BUFFER
uxDummy10	amazon-freertos/include/FreeRTOS.h	/^		UBaseType_t		uxDummy10[ 2 ];$/;"	m	struct:xSTATIC_TCB
uxDummy12	amazon-freertos/include/FreeRTOS.h	/^		UBaseType_t		uxDummy12[ 2 ];$/;"	m	struct:xSTATIC_TCB
uxDummy2	amazon-freertos/include/FreeRTOS.h	/^		UBaseType_t uxDummy2;$/;"	m	union:xSTATIC_QUEUE::__anon5
uxDummy2	amazon-freertos/include/FreeRTOS.h	/^	UBaseType_t uxDummy2;$/;"	m	struct:xSTATIC_LIST
uxDummy20	amazon-freertos/include/FreeRTOS.h	/^		uint8_t			uxDummy20;$/;"	m	struct:xSTATIC_TCB
uxDummy3	amazon-freertos/include/FreeRTOS.h	/^		UBaseType_t uxDummy3;$/;"	m	struct:xSTATIC_EVENT_GROUP
uxDummy4	amazon-freertos/include/FreeRTOS.h	/^		UBaseType_t uxDummy4;$/;"	m	struct:xSTATIC_STREAM_BUFFER
uxDummy4	amazon-freertos/include/FreeRTOS.h	/^	UBaseType_t uxDummy4[ 3 ];$/;"	m	struct:xSTATIC_QUEUE
uxDummy5	amazon-freertos/include/FreeRTOS.h	/^	UBaseType_t			uxDummy5;$/;"	m	struct:xSTATIC_TCB
uxDummy7	amazon-freertos/include/FreeRTOS.h	/^		UBaseType_t		uxDummy7;$/;"	m	struct:xSTATIC_TIMER
uxDummy8	amazon-freertos/include/FreeRTOS.h	/^		UBaseType_t uxDummy8;$/;"	m	struct:xSTATIC_QUEUE
uxDummy9	amazon-freertos/include/FreeRTOS.h	/^		UBaseType_t		uxDummy9;$/;"	m	struct:xSTATIC_TCB
uxEventBits	amazon-freertos/freertos/event_groups.c	/^	EventBits_t uxEventBits;$/;"	m	struct:EventGroupDef_t	file:
uxEventGroupGetNumber	amazon-freertos/freertos/event_groups.c	/^	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )$/;"	f
uxEventGroupNumber	amazon-freertos/freertos/event_groups.c	/^		UBaseType_t uxEventGroupNumber;$/;"	m	struct:EventGroupDef_t	file:
uxItemSize	amazon-freertos/freertos/queue.c	/^	UBaseType_t uxItemSize;			\/*< The size of each items that the queue will hold. *\/$/;"	m	struct:QueueDefinition	file:
uxLength	amazon-freertos/freertos/queue.c	/^	UBaseType_t uxLength;			\/*< The length of the queue defined as the number of items it will hold, not the number of bytes. *\/$/;"	m	struct:QueueDefinition	file:
uxListRemove	amazon-freertos/freertos/list.c	/^UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )$/;"	f
uxMessagesWaiting	amazon-freertos/freertos/queue.c	/^	volatile UBaseType_t uxMessagesWaiting;\/*< The number of items currently in the queue. *\/$/;"	m	struct:QueueDefinition	file:
uxMutexesHeld	amazon-freertos/freertos/tasks.c	/^		UBaseType_t		uxMutexesHeld;$/;"	m	struct:tskTaskControlBlock	file:
uxNumberOfItems	amazon-freertos/include/list.h	/^	volatile UBaseType_t uxNumberOfItems;$/;"	m	struct:xLIST
uxPendedTicks	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;$/;"	v	file:
uxPriority	amazon-freertos/freertos/tasks.c	/^	UBaseType_t			uxPriority;			\/*< The priority of the task.  0 is the lowest priority. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxPriority	amazon-freertos/include/task.h	/^	UBaseType_t uxPriority;$/;"	m	struct:xTASK_PARAMETERS
uxPriority	source/common.h	/^	UBaseType_t uxPriority;$/;"	m	struct:_TaskWork
uxQueueGetQueueNumber	amazon-freertos/freertos/queue.c	/^	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )$/;"	f
uxQueueMessagesWaiting	amazon-freertos/freertos/queue.c	/^UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )$/;"	f
uxQueueMessagesWaiting	amazon-freertos/include/mpu_wrappers.h	96;"	d
uxQueueMessagesWaitingFromISR	amazon-freertos/freertos/queue.c	/^UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )$/;"	f
uxQueueNumber	amazon-freertos/freertos/queue.c	/^		UBaseType_t uxQueueNumber;$/;"	m	struct:QueueDefinition	file:
uxQueueSpacesAvailable	amazon-freertos/freertos/queue.c	/^UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )$/;"	f
uxQueueSpacesAvailable	amazon-freertos/include/mpu_wrappers.h	97;"	d
uxQueueType	amazon-freertos/freertos/queue.c	64;"	d	file:
uxRecursiveCallCount	amazon-freertos/freertos/queue.c	/^	UBaseType_t uxRecursiveCallCount;\/*< Maintains a count of the number of times a recursive mutex has been recursively 'taken' when the structure is used as a mutex. *\/$/;"	m	struct:SemaphoreData	file:
uxSchedulerSuspended	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;$/;"	v	file:
uxSemaphoreGetCount	amazon-freertos/include/semphr.h	1136;"	d
uxStreamBufferGetStreamBufferNumber	amazon-freertos/freertos/stream_buffer.c	/^	UBaseType_t uxStreamBufferGetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer )$/;"	f
uxStreamBufferNumber	amazon-freertos/freertos/stream_buffer.c	/^		UBaseType_t uxStreamBufferNumber;		\/* Used for tracing purposes. *\/$/;"	m	struct:StreamBufferDef_t	file:
uxTCBNumber	amazon-freertos/freertos/tasks.c	/^		UBaseType_t		uxTCBNumber;		\/*< Stores a number that increments each time a TCB is created.  It allows debuggers to determine when a task has been deleted and then recreated. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxTaskGetNumberOfTasks	amazon-freertos/freertos/tasks.c	/^UBaseType_t uxTaskGetNumberOfTasks( void )$/;"	f
uxTaskGetNumberOfTasks	amazon-freertos/include/mpu_wrappers.h	66;"	d
uxTaskGetStackHighWaterMark	amazon-freertos/freertos/tasks.c	/^	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )$/;"	f
uxTaskGetStackHighWaterMark	amazon-freertos/include/mpu_wrappers.h	69;"	d
uxTaskGetStackHighWaterMark2	amazon-freertos/freertos/tasks.c	/^	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )$/;"	f
uxTaskGetStackHighWaterMark2	amazon-freertos/include/mpu_wrappers.h	70;"	d
uxTaskGetSystemState	amazon-freertos/freertos/tasks.c	/^	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime )$/;"	f
uxTaskGetSystemState	amazon-freertos/include/mpu_wrappers.h	77;"	d
uxTaskGetTaskNumber	amazon-freertos/freertos/tasks.c	/^	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )$/;"	f
uxTaskNumber	amazon-freertos/freertos/tasks.c	/^		UBaseType_t		uxTaskNumber;		\/*< Stores a number specifically for use by third party trace code. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxTaskNumber	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;$/;"	v	file:
uxTaskPriorityGet	amazon-freertos/freertos/tasks.c	/^	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )$/;"	f
uxTaskPriorityGet	amazon-freertos/include/mpu_wrappers.h	57;"	d
uxTaskPriorityGetFromISR	amazon-freertos/freertos/tasks.c	/^	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )$/;"	f
uxTaskResetEventItemValue	amazon-freertos/freertos/tasks.c	/^TickType_t uxTaskResetEventItemValue( void )$/;"	f
uxTimerGetTimerNumber	amazon-freertos/freertos/timers.c	/^	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )$/;"	f
uxTimerNumber	amazon-freertos/freertos/timers.c	/^		UBaseType_t			uxTimerNumber;		\/*<< An ID assigned by trace tools such as FreeRTOS+Trace *\/$/;"	m	struct:tmrTimerControl	file:
uxTopReadyPriority	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;$/;"	v	file:
v	CMSIS/cmsis_armclang.h	/^  struct __attribute__((packed)) T_UINT32 { uint32_t v; };$/;"	m	struct:T_UINT32
v	CMSIS/cmsis_compiler.h	/^    @packed struct T_UINT32 { uint32_t v; };$/;"	m	struct:T_UINT32
v	CMSIS/cmsis_compiler.h	/^    struct __attribute__((packed)) T_UINT32 { uint32_t v; };$/;"	m	struct:T_UINT32
v	CMSIS/cmsis_compiler.h	/^    struct __packed__ T_UINT32 { uint32_t v; };$/;"	m	struct:T_UINT32
v	CMSIS/cmsis_gcc.h	/^  struct __attribute__((packed)) T_UINT32 { uint32_t v; };$/;"	m	struct:T_UINT32
v	CMSIS/cmsis_iccarm.h	/^__packed struct  __iar_u32 { uint32_t v; };$/;"	m	struct:__iar_u32
v	emwin/emWin_header/GUI_Type.h	/^  U32    v;$/;"	m	struct:__anon245
v	emwin/emWin_header/PROGBAR_Private.h	/^  int v;$/;"	m	struct:__anon424
v	emwin/emWin_header/SCROLLBAR_Private.h	/^  int NumItems, v, PageSize;$/;"	m	struct:SCROLLBAR_OBJ
v	emwin/emWin_header/SLIDER_Private.h	/^  int                 v;$/;"	m	struct:__anon378
v	emwin/emWin_header/WM.h	/^    int v;$/;"	m	union:WM_MESSAGE::__anon291
v	emwin/emWin_header/WM.h	/^  int NumItems, v, PageSize;$/;"	m	struct:__anon284
vEventGroupClearBitsCallback	amazon-freertos/freertos/event_groups.c	/^void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )$/;"	f
vEventGroupDelete	amazon-freertos/freertos/event_groups.c	/^void vEventGroupDelete( EventGroupHandle_t xEventGroup )$/;"	f
vEventGroupDelete	amazon-freertos/include/mpu_wrappers.h	141;"	d
vEventGroupSetBitsCallback	amazon-freertos/freertos/event_groups.c	/^void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )$/;"	f
vEventGroupSetNumber	amazon-freertos/freertos/event_groups.c	/^	void vEventGroupSetNumber( void * xEventGroup, UBaseType_t uxEventGroupNumber )$/;"	f
vListInitialise	amazon-freertos/freertos/list.c	/^void vListInitialise( List_t * const pxList )$/;"	f
vListInitialiseItem	amazon-freertos/freertos/list.c	/^void vListInitialiseItem( ListItem_t * const pxItem )$/;"	f
vListInsert	amazon-freertos/freertos/list.c	/^void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )$/;"	f
vListInsertEnd	amazon-freertos/freertos/list.c	/^void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )$/;"	f
vMessageBufferDelete	amazon-freertos/include/message_buffer.h	616;"	d
vPortDefineHeapRegions	amazon-freertos/freertos/portable/heap_5.c	/^void vPortDefineHeapRegions( const HeapRegion_t * const pxHeapRegions )$/;"	f
vPortEnableVFP	amazon-freertos/freertos/portable/port.c	/^static void vPortEnableVFP( void )$/;"	f	file:
vPortEndScheduler	amazon-freertos/freertos/portable/port.c	/^void vPortEndScheduler(void) {$/;"	f
vPortEnterCritical	amazon-freertos/freertos/portable/port.c	/^void vPortEnterCritical( void )$/;"	f
vPortExitCritical	amazon-freertos/freertos/portable/port.c	/^void vPortExitCritical( void )$/;"	f
vPortFree	amazon-freertos/freertos/portable/heap_1.c	/^void vPortFree( void *pv )$/;"	f
vPortFree	amazon-freertos/freertos/portable/heap_2.c	/^void vPortFree( void *pv )$/;"	f
vPortFree	amazon-freertos/freertos/portable/heap_3.c	/^void vPortFree( void *pv )$/;"	f
vPortFree	amazon-freertos/freertos/portable/heap_4.c	/^void vPortFree( void *pv )$/;"	f
vPortFree	amazon-freertos/freertos/portable/heap_5.c	/^void vPortFree( void *pv )$/;"	f
vPortInitialiseBlocks	amazon-freertos/freertos/portable/heap_1.c	/^void vPortInitialiseBlocks( void )$/;"	f
vPortInitialiseBlocks	amazon-freertos/freertos/portable/heap_2.c	/^void vPortInitialiseBlocks( void )$/;"	f
vPortInitialiseBlocks	amazon-freertos/freertos/portable/heap_4.c	/^void vPortInitialiseBlocks( void )$/;"	f
vPortRaiseBASEPRI	amazon-freertos/freertos/portable/portmacro.h	/^portFORCE_INLINE static void vPortRaiseBASEPRI( void )$/;"	f
vPortSVCHandler	amazon-freertos/freertos/portable/port.c	/^void vPortSVCHandler( void )$/;"	f
vPortSVCHandler	source/FreeRTOSConfig.h	149;"	d
vPortSetBASEPRI	amazon-freertos/freertos/portable/portmacro.h	/^portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )$/;"	f
vPortSetupTimerInterrupt	amazon-freertos/freertos/portable/port.c	/^__attribute__(( weak )) void vPortSetupTimerInterrupt( void )$/;"	f
vPortSuppressTicksAndSleep	amazon-freertos/freertos/portable/port.c	/^	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )$/;"	f
vPortValidateInterruptPriority	amazon-freertos/freertos/portable/port.c	/^	void vPortValidateInterruptPriority( void )$/;"	f
vQueueAddToRegistry	amazon-freertos/freertos/queue.c	/^	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
vQueueAddToRegistry	amazon-freertos/include/FreeRTOS.h	286;"	d
vQueueAddToRegistry	amazon-freertos/include/mpu_wrappers.h	115;"	d
vQueueDelete	amazon-freertos/freertos/queue.c	/^void vQueueDelete( QueueHandle_t xQueue )$/;"	f
vQueueDelete	amazon-freertos/include/mpu_wrappers.h	98;"	d
vQueueSetQueueNumber	amazon-freertos/freertos/queue.c	/^	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )$/;"	f
vQueueUnregisterQueue	amazon-freertos/freertos/queue.c	/^	void vQueueUnregisterQueue( QueueHandle_t xQueue )$/;"	f
vQueueUnregisterQueue	amazon-freertos/include/FreeRTOS.h	287;"	d
vQueueUnregisterQueue	amazon-freertos/include/mpu_wrappers.h	116;"	d
vQueueWaitForMessageRestricted	amazon-freertos/freertos/queue.c	/^	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )$/;"	f
vSemaphoreCreateBinary	amazon-freertos/include/semphr.h	94;"	d
vSemaphoreDelete	amazon-freertos/include/semphr.h	1098;"	d
vStreamBufferDelete	amazon-freertos/freertos/stream_buffer.c	/^void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )$/;"	f
vStreamBufferDelete	amazon-freertos/include/mpu_wrappers.h	148;"	d
vStreamBufferSetStreamBufferNumber	amazon-freertos/freertos/stream_buffer.c	/^	void vStreamBufferSetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer, UBaseType_t uxStreamBufferNumber )$/;"	f
vTaskAllocateMPURegions	amazon-freertos/freertos/tasks.c	/^	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )$/;"	f
vTaskAllocateMPURegions	amazon-freertos/include/mpu_wrappers.h	52;"	d
vTaskDelay	amazon-freertos/freertos/tasks.c	/^	void vTaskDelay( const TickType_t xTicksToDelay )$/;"	f
vTaskDelay	amazon-freertos/include/mpu_wrappers.h	54;"	d
vTaskDelayUntil	amazon-freertos/freertos/tasks.c	/^	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )$/;"	f
vTaskDelayUntil	amazon-freertos/include/mpu_wrappers.h	55;"	d
vTaskDelete	amazon-freertos/freertos/tasks.c	/^	void vTaskDelete( TaskHandle_t xTaskToDelete )$/;"	f
vTaskDelete	amazon-freertos/include/mpu_wrappers.h	53;"	d
vTaskEndScheduler	amazon-freertos/freertos/tasks.c	/^void vTaskEndScheduler( void )$/;"	f
vTaskEnterCritical	amazon-freertos/freertos/tasks.c	/^	void vTaskEnterCritical( void )$/;"	f
vTaskExitCritical	amazon-freertos/freertos/tasks.c	/^	void vTaskExitCritical( void )$/;"	f
vTaskGetInfo	amazon-freertos/freertos/tasks.c	/^	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState )$/;"	f
vTaskGetInfo	amazon-freertos/include/mpu_wrappers.h	59;"	d
vTaskGetRunTimeStats	amazon-freertos/freertos/tasks.c	/^	void vTaskGetRunTimeStats( char *pcWriteBuffer )$/;"	f
vTaskGetRunTimeStats	amazon-freertos/include/mpu_wrappers.h	79;"	d
vTaskGetTaskInfo	amazon-freertos/include/FreeRTOS.h	931;"	d
vTaskInternalSetTimeOutState	amazon-freertos/freertos/tasks.c	/^void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )$/;"	f
vTaskList	amazon-freertos/freertos/tasks.c	/^	void vTaskList( char * pcWriteBuffer )$/;"	f
vTaskList	amazon-freertos/include/mpu_wrappers.h	78;"	d
vTaskMissedYield	amazon-freertos/freertos/tasks.c	/^void vTaskMissedYield( void )$/;"	f
vTaskNotifyGiveFromISR	amazon-freertos/freertos/tasks.c	/^	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
vTaskPlaceOnEventList	amazon-freertos/freertos/tasks.c	/^void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )$/;"	f
vTaskPlaceOnEventListRestricted	amazon-freertos/freertos/tasks.c	/^	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )$/;"	f
vTaskPlaceOnUnorderedEventList	amazon-freertos/freertos/tasks.c	/^void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait )$/;"	f
vTaskPriorityDisinheritAfterTimeout	amazon-freertos/freertos/tasks.c	/^	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestPriorityWaitingTask )$/;"	f
vTaskPrioritySet	amazon-freertos/freertos/tasks.c	/^	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )$/;"	f
vTaskPrioritySet	amazon-freertos/include/mpu_wrappers.h	60;"	d
vTaskRemoveFromUnorderedEventList	amazon-freertos/freertos/tasks.c	/^void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )$/;"	f
vTaskResume	amazon-freertos/freertos/tasks.c	/^	void vTaskResume( TaskHandle_t xTaskToResume )$/;"	f
vTaskResume	amazon-freertos/include/mpu_wrappers.h	62;"	d
vTaskSetApplicationTaskTag	amazon-freertos/freertos/tasks.c	/^	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )$/;"	f
vTaskSetApplicationTaskTag	amazon-freertos/include/mpu_wrappers.h	71;"	d
vTaskSetTaskNumber	amazon-freertos/freertos/tasks.c	/^	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )$/;"	f
vTaskSetThreadLocalStoragePointer	amazon-freertos/freertos/tasks.c	/^	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue )$/;"	f
vTaskSetThreadLocalStoragePointer	amazon-freertos/include/mpu_wrappers.h	73;"	d
vTaskSetTimeOutState	amazon-freertos/freertos/tasks.c	/^void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )$/;"	f
vTaskSetTimeOutState	amazon-freertos/include/mpu_wrappers.h	87;"	d
vTaskStartScheduler	amazon-freertos/freertos/tasks.c	/^void vTaskStartScheduler( void )$/;"	f
vTaskStepTick	amazon-freertos/freertos/tasks.c	/^	void vTaskStepTick( const TickType_t xTicksToJump )$/;"	f
vTaskSuspend	amazon-freertos/freertos/tasks.c	/^	void vTaskSuspend( TaskHandle_t xTaskToSuspend )$/;"	f
vTaskSuspend	amazon-freertos/include/mpu_wrappers.h	61;"	d
vTaskSuspendAll	amazon-freertos/freertos/tasks.c	/^void vTaskSuspendAll( void )$/;"	f
vTaskSuspendAll	amazon-freertos/include/mpu_wrappers.h	63;"	d
vTaskSwitchContext	amazon-freertos/freertos/tasks.c	/^void vTaskSwitchContext( void )$/;"	f
vTimerSetReloadMode	amazon-freertos/freertos/timers.c	/^void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )$/;"	f
vTimerSetReloadMode	amazon-freertos/include/mpu_wrappers.h	129;"	d
vTimerSetTimerID	amazon-freertos/freertos/timers.c	/^void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )$/;"	f
vTimerSetTimerID	amazon-freertos/include/mpu_wrappers.h	124;"	d
vTimerSetTimerNumber	amazon-freertos/freertos/timers.c	/^	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )$/;"	f
v_len	codec2/varicode.h	/^    int            v_len;$/;"	m	struct:VARICODE_DEC
v_node	codec2/mpdecode_core.h	/^struct v_node {$/;"	s
val_length	lwip/src/core/ipv6/dhcp6.c	/^  u16_t val_length;$/;"	m	struct:dhcp6_option_info	file:
val_start	lwip/src/core/ipv6/dhcp6.c	/^  u16_t val_start;$/;"	m	struct:dhcp6_option_info	file:
valid	drivers/fsl_dma.h	/^    bool valid;             \/*!< Descriptor is ready to transfer *\/$/;"	m	struct:_dma_xfercfg
validErrorCode	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t validErrorCode;          \/*!< Error Code*\/$/;"	m	struct:_usb_device_request_sense_data_struct
value	lwip/src/include/netif/ppp/lcp.h	/^    unsigned char	value[MAX_ENDP_LEN];$/;"	m	struct:epdisc
varicode_decode	codec2/varicode.c	/^int varicode_decode(struct VARICODE_DEC *dec_states, char ascii_out[], short varicode_in[], int max_out, int n_in) {$/;"	f
varicode_decode1	codec2/varicode.c	/^int varicode_decode1(struct VARICODE_DEC *dec_states, char ascii_out[], short varicode_in[], int max_out, int n_in) {$/;"	f
varicode_decode2	codec2/varicode.c	/^int varicode_decode2(struct VARICODE_DEC *dec_states, char ascii_out[], short varicode_in[], int max_out, int n_in) {$/;"	f
varicode_decode_init	codec2/varicode.c	/^void varicode_decode_init(struct VARICODE_DEC *dec_states, int code_num)$/;"	f
varicode_encode	codec2/varicode.c	/^int varicode_encode(short varicode_out[], char ascii_in[], int max_out, int n_in, int code_num) {$/;"	f
varicode_encode1	codec2/varicode.c	/^int varicode_encode1(short varicode_out[], char ascii_in[], int max_out, int n_in) {$/;"	f
varicode_encode2	codec2/varicode.c	/^int varicode_encode2(short varicode_out[], char ascii_in[], int max_out, int n_in) {$/;"	f
varicode_set_code_num	codec2/varicode.c	/^void varicode_set_code_num(struct VARICODE_DEC *dec_states, int code_num)$/;"	f
varicode_table1	codec2/varicode_table.h	/^unsigned char const varicode_table1[256] =	{$/;"	v
varicode_table2	codec2/varicode_table.h	/^char const varicode_table2[] = {$/;"	v
vcHandle	usb/device/class/usb_device_cdc_rndis.h	/^    uint32_t vcHandle;$/;"	m	struct:_rndis_packet_msg_struct
vector	lwip/src/include/lwip/priv/api_msg.h	/^      const struct netvector *vector;$/;"	m	struct:api_msg::__anon454::__anon458	typeref:struct:api_msg::__anon454::__anon458::netvector
vector_cnt	lwip/src/include/lwip/priv/api_msg.h	/^      u16_t vector_cnt;$/;"	m	struct:api_msg::__anon454::__anon458
vector_off	lwip/src/include/lwip/priv/api_msg.h	/^      size_t vector_off;$/;"	m	struct:api_msg::__anon454::__anon458
vendorInformatin	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t vendorInformatin[8];  \/*!< Vendor Identification*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
verbose	codec2/ofdm_internal.h	/^    int verbose;$/;"	m	struct:OFDM
verify_response	lwip/src/include/netif/ppp/chap-new.h	/^	int (*verify_response)(ppp_pcb *pcb, int id, const char *name,$/;"	m	struct:chap_digest_type
version	drivers/fsl_enet.h	/^    uint8_t version;                             \/*!< PTP version. *\/$/;"	m	struct:_enet_ptp_time_data
version	littlefs/littlefs_include/lfs.h	/^        uint32_t version;$/;"	m	struct:lfs_superblock::lfs_disk_superblock
versions	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t versions;             \/*!< ISO Version, ECMA Version, ANSI Version*\/$/;"	m	struct:_usb_device_inquiry_data_fromat_struct
vj	lwip/src/include/netif/ppp/ppp_impl.h	/^    struct vjstat vj;		\/* VJ header compression statistics *\/$/;"	m	struct:ppp_stats	typeref:struct:ppp_stats::vjstat
vj_comp	lwip/src/include/netif/ppp/ppp.h	/^  struct vjcompress vj_comp;     \/* Van Jacobson compression header. *\/$/;"	m	struct:ppp_pcb_s	typeref:struct:ppp_pcb_s::vjcompress
vj_compress_init	lwip/src/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	lwip/src/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf **pb)$/;"	f
vj_enabled	lwip/src/include/netif/ppp/ppp.h	/^  unsigned int vj_enabled              :1; \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:ppp_pcb_s
vj_protocol	lwip/src/include/netif/ppp/ipcp.h	/^    u16_t vj_protocol;		\/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_protocol	lwip/src/include/netif/ppp/ipv6cp.h	/^    u_short vj_protocol;        \/* protocol value to use in VJ option *\/$/;"	m	struct:ipv6cp_options
vj_u16_t	lwip/src/netif/ppp/vj.c	/^struct vj_u16_t {$/;"	s	file:
vj_u32_t	lwip/src/netif/ppp/vj.c	/^struct vj_u32_t {$/;"	s	file:
vj_uncompress_err	lwip/src/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	lwip/src/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	lwip/src/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	lwip/src/include/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	lwip/src/include/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon427
vjs_compressed	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int vjs_compressed; \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressed	lwip/src/include/netif/ppp/vj.h	/^  u32_t vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int vjs_compressedin; \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	lwip/src/include/netif/ppp/vj.h	/^  u32_t vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int vjs_errorin;	\/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_errorin	lwip/src/include/netif/ppp/vj.h	/^  u32_t vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int vjs_misses;	\/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_misses	lwip/src/include/netif/ppp/vj.h	/^  u32_t vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int vjs_packets;	\/* outbound packets *\/$/;"	m	struct:vjstat
vjs_packets	lwip/src/include/netif/ppp/vj.h	/^  u32_t vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int vjs_searches;	\/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_searches	lwip/src/include/netif/ppp/vj.h	/^  u32_t vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int vjs_tossed;	\/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_tossed	lwip/src/include/netif/ppp/vj.h	/^  u32_t vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	lwip/src/include/netif/ppp/ppp_impl.h	/^    unsigned int vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjs_uncompressedin	lwip/src/include/netif/ppp/vj.h	/^  u32_t vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	lwip/src/include/netif/ppp/ppp_impl.h	/^struct vjstat {$/;"	s
vjstat	lwip/src/include/netif/ppp/vj.h	/^struct vjstat {$/;"	s
voiced	codec2/defines.h	/^    int   voiced;	  \/* non-zero if this frame is voiced           *\/$/;"	m	struct:__anon135
voicing_left	codec2/codec2_internal.h	/^    int            voicing_left;$/;"	m	struct:CODEC2
voidfunc	lwip/src/include/lwip/priv/api_msg.h	/^      netifapi_void_fn voidfunc;$/;"	m	struct:netifapi_msg::__anon463::__anon465
vxSize	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int vxSize, vySize;     \/\/ Virtual display size$/;"	m	struct:__anon370
vxSize	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int vxSize, vySize; \/\/ Virtual display size$/;"	m	struct:DRIVER_CONTEXT
vxSize	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vxSize	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vxSize	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vxSize	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vxSize	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vxSize	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vxSize	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vxSize	emwin/emWin_header/GUI_SetOrientation.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int vxSize, vySize;     \/\/ Virtual display size$/;"	m	struct:__anon370
vySize	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int vxSize, vySize; \/\/ Virtual display size$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
vySize	emwin/emWin_header/GUI_SetOrientation.h	/^  int vxSize, vySize;$/;"	m	struct:DRIVER_CONTEXT
w	CMSIS/core_armv8mbl.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon113
w	CMSIS/core_armv8mbl.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon115
w	CMSIS/core_armv8mbl.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon117
w	CMSIS/core_armv8mbl.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon119
w	CMSIS/core_armv8mml.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon11
w	CMSIS/core_armv8mml.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon13
w	CMSIS/core_armv8mml.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon15
w	CMSIS/core_armv8mml.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon9
w	CMSIS/core_cm4.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon31
w	CMSIS/core_cm4.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon33
w	CMSIS/core_cm4.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon35
w	CMSIS/core_cm4.h	/^  uint32_t w;                            \/*!< Type      used for word access *\/$/;"	m	union:__anon37
w	codec2/codec2_internal.h	/^    float        *w;	                   \/* [m_pitch] time domain hamming window      *\/$/;"	m	struct:CODEC2
w	codec2/nlp.c	/^    float         w[PMAX_M\/DEC];     \/* DFT window                   *\/$/;"	m	struct:__anon138	file:
w	drivers/fsl_sha.c	/^    uint32_t w[SHA_BLOCK_SIZE \/ 4]; \/*!< array of 32-bit words *\/$/;"	m	union:_sha_hash_block	file:
w	lwip/src/include/lwip/priv/api_msg.h	/^    } w;$/;"	m	union:api_msg::__anon454	typeref:struct:api_msg::__anon454::__anon458
wBytesPerInterval	usb/include/usb_spec.h	/^    uint8_t wBytesPerInterval[2];$/;"	m	struct:_usb_descriptor_endpoint_companion
wCompQuality	usb/device/class/usb_device_video.h	/^            uint8_t wCompQuality : 1U;    \/*!< wCompQuality field.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct::__anon506::__anon507
wCompQuality	usb/device/class/usb_device_video.h	/^    uint16_t wCompQuality;    \/*!< Compression quality control in abstract units 0U (lowest) to 10000U (highest).*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
wCompWindowSize	usb/device/class/usb_device_video.h	/^            uint8_t wCompWindowSize : 1U; \/*!< wCompWindowSize field.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct::__anon506::__anon507
wCompWindowSize	usb/device/class/usb_device_video.h	/^    uint16_t wCompWindowSize; \/*!< Window size for average bit rate control.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
wDelay	usb/device/class/usb_device_video.h	/^    uint16_t wDelay; \/*!< Internal video streaming interface latency in ms from video data capture to presentation on$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
wIndex	usb/include/usb_spec.h	/^    uint16_t wIndex;$/;"	m	struct:_usb_setup_struct
wKeyFrameRate	usb/device/class/usb_device_video.h	/^            uint8_t wKeyFrameRate : 1U;   \/*!< wKeyFrameRate field.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct::__anon506::__anon507
wKeyFrameRate	usb/device/class/usb_device_video.h	/^    uint16_t wKeyFrameRate;   \/*!< Key frame rate in key-frame per video-frame units.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
wLangId	usb/device/class/usb_device_ccid.h	/^    uint16_t wLangId;                  \/*!< Language used to display the messages.*\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
wLangId	usb/device/class/usb_device_ccid.h	/^    uint16_t wLangId;                  \/*!< Language used to display the messages.*\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
wLength	usb/include/usb_spec.h	/^    uint16_t wLength;$/;"	m	struct:_usb_setup_struct
wLevelParameter	usb/device/class/usb_device_ccid.h	/^    uint16_t wLevelParameter;      \/*!< Use changes depending on the exchange level reported by CCID in the functional$/;"	m	struct:_usb_device_ccid_secure_pin_operation_command
wLevelParameter	usb/device/class/usb_device_ccid.h	/^    uint16_t wLevelParameter;    \/*!< Use changes depending on the exchange level reported by CCID in the functional$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
wLevelParameter	usb/device/class/usb_device_ccid.h	/^    uint16_t wLevelParameter;   \/*!< Use changes depending on the exchange level reported by CCID in the functional$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
wLevelParameter	usb/device/class/usb_device_ccid.h	/^    uint16_t wLevelParameter; \/*!< Use changes depending on the exchange level reported by CCID in the functional$/;"	m	struct:_usb_device_ccid_secure_command
wLevelParameter	usb/device/class/usb_device_ccid.h	/^    uint16_t wLevelParameter; \/*!< Use changes depending on the exchange level reported by the class descriptor in$/;"	m	struct:_usb_device_ccid_transfer_block_command
wMAX	usb/device/class/usb_device_audio.h	/^    uint16_t wMAX;$/;"	m	struct:_usb_device_control_range_layout2_struct
wMAX	usb/device/class/usb_device_audio.h	/^    uint32_t wMAX;$/;"	m	struct:_usb_device_control_range_layout3_struct
wMIN	usb/device/class/usb_device_audio.h	/^    uint16_t wMIN;$/;"	m	struct:_usb_device_control_range_layout2_struct
wMIN	usb/device/class/usb_device_audio.h	/^    uint32_t wMIN;$/;"	m	struct:_usb_device_control_range_layout3_struct
wMaxPacketSize	usb/include/usb_spec.h	/^    uint8_t wMaxPacketSize[2];$/;"	m	struct:_usb_descriptor_endpoint
wNumSubRanges	usb/device/class/usb_device_audio.h	/^    uint16_t wNumSubRanges;$/;"	m	struct:_usb_device_control_range_layout2_struct
wNumSubRanges	usb/device/class/usb_device_audio.h	/^    uint16_t wNumSubRanges;$/;"	m	struct:_usb_device_control_range_layout3_struct
wPFrameRate	usb/device/class/usb_device_video.h	/^            uint8_t wPFrameRate : 1U;     \/*!< wPFrameRate field.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct::__anon506::__anon507
wPFrameRate	usb/device/class/usb_device_video.h	/^    uint16_t wPFrameRate;     \/*!< PFrame rate in PFrame\/key frame units.*\/$/;"	m	struct:_usb_device_video_probe_and_commit_controls_struct
wPINMaxExtraDigit	usb/device/class/usb_device_ccid.h	/^    uint16_t wPINMaxExtraDigit;  \/*!< Bit15~8 - Minimum PIN size in digit, Bit7~0 - Maximum PIN size in digit *\/$/;"	m	struct:_usb_device_ccid_secure_pin_modification_command
wPINMaxExtraDigit	usb/device/class/usb_device_ccid.h	/^    uint16_t wPINMaxExtraDigit; \/*!< Bit15~8 - Minimum PIN size in digit, Bit7~0 - Maximum PIN size in digit *\/$/;"	m	struct:_usb_device_ccid_seucre_pin_verification_command
wRES	usb/device/class/usb_device_audio.h	/^    uint16_t wRES;$/;"	m	struct:_usb_device_control_range_layout2_struct
wRES	usb/device/class/usb_device_audio.h	/^    uint32_t wRES;$/;"	m	struct:_usb_device_control_range_layout3_struct
wSpeedsSupported	usb/include/usb_spec.h	/^    uint8_t wSpeedsSupported[2];$/;"	m	struct:_usb_descriptor_super_speed_device_capability
wTotalLength	usb/include/usb_spec.h	/^    uint8_t wTotalLength[2];     \/* Length of concatenated descriptors *\/$/;"	m	struct:_usb_descriptor_configuration
wTotalLength	usb/include/usb_spec.h	/^    uint8_t wTotalLength[2];    \/*Length of this descriptor and all of its sub descriptors*\/$/;"	m	struct:_usb_descriptor_binary_device_object_store
wU2DevExitLat	usb/include/usb_spec.h	/^    uint8_t wU2DevExitLat[2];$/;"	m	struct:_usb_descriptor_super_speed_device_capability
wValue	usb/include/usb_spec.h	/^    uint16_t wValue;$/;"	m	struct:_usb_setup_struct
watermark	drivers/fsl_i2s.h	/^    uint8_t watermark;    \/*!< FIFO trigger level *\/$/;"	m	struct:_i2s_config
watermark	drivers/fsl_i2s.h	/^    volatile uint8_t watermark;                        \/*!< FIFO trigger level *\/$/;"	m	struct:_i2s_handle
wdtFreqLookup	device/system_LPC54018.c	/^static const uint8_t wdtFreqLookup[32] = {0, 8, 12, 15, 18, 20, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 42, 44, 45, 46,$/;"	v	file:
wdtFreqLookup	drivers/fsl_clock.c	/^static const uint8_t wdtFreqLookup[32] = {0,  8,  12, 15, 18, 20, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41,$/;"	v	file:
weight	codec2/lpc.c	/^void weight($/;"	f
wkmodulus	lwip/src/netif/ppp/eap.c	/^static const u_char wkmodulus[] = {$/;"	v	file:
wm8904Config	source/i2s_transfer.c	/^wm8904_config_t wm8904Config = {$/;"	v
wm8904_audio_format_t	codec/fsl_wm8904.h	/^} wm8904_audio_format_t;$/;"	t	typeref:struct:_wm8904_audio_format
wm8904_bit_width_t	codec/fsl_wm8904.h	/^} wm8904_bit_width_t;$/;"	t	typeref:enum:_wm8904_bit_width
wm8904_config_t	codec/fsl_wm8904.h	/^} wm8904_config_t;$/;"	t	typeref:struct:_wm8904_config
wm8904_fs_ratio_t	codec/fsl_wm8904.h	/^} wm8904_fs_ratio_t;$/;"	t	typeref:enum:_wm8904_fs_ratio
wm8904_handle_t	codec/fsl_wm8904.h	/^} wm8904_handle_t;$/;"	t	typeref:struct:_wm8904_handle
wm8904_module_t	codec/fsl_wm8904.h	/^} wm8904_module_t;$/;"	t	typeref:enum:_wm8904_module
wm8904_protocol_t	codec/fsl_wm8904.h	/^} wm8904_protocol_t;$/;"	t	typeref:enum:_wm8904_protocol
wm8904_sample_rate_t	codec/fsl_wm8904.h	/^} wm8904_sample_rate_t;$/;"	t	typeref:enum:_wm8904_sample_rate
wm8904_timeslot_t	codec/fsl_wm8904.h	/^} wm8904_timeslot_t;$/;"	t	typeref:enum:_wm8904_timeslot
word	drivers/fsl_spi_dma.c	/^    uint32_t word;$/;"	m	struct:_spi_dma_txdummy	file:
wpDpfua	usb/device/class/usb_device_msc_ufi.h	/^    uint8_t wpDpfua;         \/*!< WP and DPOFUA bit*\/$/;"	m	struct:_usb_device_mode_parameters_header_struct
wrap	drivers/fsl_dma.h	/^    dma_burst_wrap_t wrap;     \/*!< Select wrap type, source wrap or dest wrap, or both. *\/$/;"	m	struct:_dma_channel_trigger
write	lwip/src/include/lwip/priv/altcp_priv.h	/^  altcp_write_fn              write;$/;"	m	struct:altcp_functions
write	lwip/src/include/lwip/sockets.h	668;"	d
write	lwip/src/include/netif/ppp/ppp_impl.h	/^  err_t (*write)(ppp_pcb *pcb, void *ctx, struct pbuf *p);$/;"	m	struct:link_callbacks
writeRingBuffer	utilities/fsl_debug_console.c	/^    debug_console_write_ring_buffer_t writeRingBuffer;$/;"	m	struct:_debug_console_state_struct	file:
write_pseudonym	lwip/src/netif/ppp/eap.c	/^write_pseudonym(esp, inp, len, id)$/;"	f	file:
writeset	lwip/src/include/lwip/priv/sockets_priv.h	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb
writev	lwip/src/include/lwip/sockets.h	670;"	d
wsPol	drivers/fsl_i2s.h	/^    bool wsPol;           \/*!< WS polarity *\/$/;"	m	struct:_i2s_config
x	drivers/fsl_sha.h	/^    uint32_t x[SHA_CTX_SIZE];$/;"	m	struct:_sha_ctx_t
x	emwin/emWin_header/GUI_Type.h	/^  I32 x;$/;"	m	struct:__anon269
x	emwin/emWin_header/GUI_Type.h	/^  int x,y;$/;"	m	struct:__anon247
x	emwin/emWin_header/LCD.h	/^  int x,y;$/;"	m	struct:__anon406
x	emwin/emWin_header/LCD.h	/^typedef struct { I16P x,y; } GUI_POINT;$/;"	m	struct:__anon403
x	emwin/emWin_header/WM.h	/^  int x,y;$/;"	m	struct:__anon286
x	lwip/src/include/netif/ppp/polarssl/arc4.h	/^    int x;                      \/*!< permutation index *\/$/;"	m	struct:__anon429
x0	CMSIS/arm_math.h	/^    float32_t x0;         \/**< saves previous input sample. *\/$/;"	m	struct:__anon105
x0	CMSIS/arm_math.h	/^    q15_t x0;             \/**< saves previous input sample. *\/$/;"	m	struct:__anon107
x0	CMSIS/arm_math.h	/^    q31_t x0;             \/**< saves previous input sample. *\/$/;"	m	struct:__anon106
x0	emwin/emWin_header/DIALOG_Intern.h	/^  I16                      x0;               \/\/ x position$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
x0	emwin/emWin_header/GUI.h	/^  int    x0, y0;        \/\/ Coordinates of the upper left pixel$/;"	m	struct:__anon385
x0	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int x0, y0, x1, y1; \/\/ Current rectangle$/;"	m	struct:DRIVER_CONTEXT
x0	emwin/emWin_header/GUI_BMP_Private.h	/^  int                   x0;             \/\/ Used to draw data$/;"	m	struct:__anon330
x0	emwin/emWin_header/GUI_GCache_Private.h	/^  int x0, y0, x1, y1, IsDirty;$/;"	m	struct:__anon239
x0	emwin/emWin_header/GUI_Private.h	/^  I16P                   x0, y0, XSize, YSize;$/;"	m	struct:__anon295
x0	emwin/emWin_header/GUI_Private.h	/^  I16P x0, y0, XSize, YSize;$/;"	m	struct:GUI_Usage
x0	emwin/emWin_header/LCD.h	/^typedef struct { I16 x0,y0,x1,y1; } LCD_RECT;$/;"	m	struct:__anon404
x0	emwin/emWin_header/WIDGET.h	/^  int        x0, y0, x1, y1;$/;"	m	struct:__anon209
x0Dirty	emwin/emWin_header/GUI_VNC.h	/^  int x0Dirty, y0Dirty, x1Dirty, y1Dirty;$/;"	m	struct:GUI_VNC_CONTEXT
x0_LeftArrow	emwin/emWin_header/SCROLLBAR_Private.h	/^  int x0_LeftArrow;$/;"	m	struct:__anon349
x0_RightArrow	emwin/emWin_header/SCROLLBAR_Private.h	/^  int x0_RightArrow;$/;"	m	struct:__anon349
x0_Thumb	emwin/emWin_header/SCROLLBAR_Private.h	/^  int x0_Thumb;$/;"	m	struct:__anon349
x1	CMSIS/arm_math.h	/^    float32_t x1;               \/**< x1 *\/$/;"	m	struct:__anon65
x1	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int x0, y0, x1, y1; \/\/ Current rectangle$/;"	m	struct:DRIVER_CONTEXT
x1	emwin/emWin_header/GUI_BMP_Private.h	/^  int                   x1;             \/\/ Used to draw data$/;"	m	struct:__anon330
x1	emwin/emWin_header/GUI_GCache_Private.h	/^  int x0, y0, x1, y1, IsDirty;$/;"	m	struct:__anon239
x1	emwin/emWin_header/LCD.h	/^typedef struct { I16 x0,y0,x1,y1; } LCD_RECT;$/;"	m	struct:__anon404
x1	emwin/emWin_header/SCROLLBAR_Private.h	/^  int x1;$/;"	m	struct:__anon349
x1	emwin/emWin_header/WIDGET.h	/^  int        x0, y0, x1, y1;$/;"	m	struct:__anon209
x1Dirty	emwin/emWin_header/GUI_VNC.h	/^  int x0Dirty, y0Dirty, x1Dirty, y1Dirty;$/;"	m	struct:GUI_VNC_CONTEXT
x1_LeftArrow	emwin/emWin_header/SCROLLBAR_Private.h	/^  int x1_LeftArrow;$/;"	m	struct:__anon349
x1_RightArrow	emwin/emWin_header/SCROLLBAR_Private.h	/^  int x1_RightArrow;$/;"	m	struct:__anon349
x1_Thumb	emwin/emWin_header/SCROLLBAR_Private.h	/^  int x1_Thumb;$/;"	m	struct:__anon349
xActiveTimerList1	amazon-freertos/freertos/timers.c	/^PRIVILEGED_DATA static List_t xActiveTimerList1;$/;"	v	file:
xActiveTimerList2	amazon-freertos/freertos/timers.c	/^PRIVILEGED_DATA static List_t xActiveTimerList2;$/;"	v	file:
xBlockAllocatedBit	amazon-freertos/freertos/portable/heap_4.c	/^static size_t xBlockAllocatedBit = 0;$/;"	v	file:
xBlockAllocatedBit	amazon-freertos/freertos/portable/heap_5.c	/^static size_t xBlockAllocatedBit = 0;$/;"	v	file:
xBlockSize	amazon-freertos/freertos/portable/heap_2.c	/^	size_t xBlockSize;						\/*<< The size of the free block. *\/$/;"	m	struct:A_BLOCK_LINK	file:
xBlockSize	amazon-freertos/freertos/portable/heap_4.c	/^	size_t xBlockSize;						\/*<< The size of the free block. *\/$/;"	m	struct:A_BLOCK_LINK	file:
xBlockSize	amazon-freertos/freertos/portable/heap_5.c	/^	size_t xBlockSize;						\/*<< The size of the free block. *\/$/;"	m	struct:A_BLOCK_LINK	file:
xCallbackParameters	amazon-freertos/freertos/timers.c	/^			CallbackParameters_t xCallbackParameters;$/;"	m	union:tmrTimerQueueMessage::__anon6	file:
xCoRoutineHandle	amazon-freertos/include/FreeRTOS.h	925;"	d
xDelayedTaskList1	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static List_t xDelayedTaskList1;						\/*< Delayed tasks. *\/$/;"	v	file:
xDelayedTaskList2	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static List_t xDelayedTaskList2;						\/*< Delayed tasks (two lists are used - one for delays that have overflowed the current tick count. *\/$/;"	v	file:
xDummy1	amazon-freertos/include/FreeRTOS.h	/^		TickType_t xDummy1;$/;"	m	struct:xSTATIC_LIST
xDummy1	amazon-freertos/include/FreeRTOS.h	/^		TickType_t xDummy1;$/;"	m	struct:xSTATIC_LIST_ITEM
xDummy1	amazon-freertos/include/FreeRTOS.h	/^		TickType_t xDummy1;$/;"	m	struct:xSTATIC_MINI_LIST_ITEM
xDummy1	amazon-freertos/include/FreeRTOS.h	/^	TickType_t xDummy1;$/;"	m	struct:xSTATIC_EVENT_GROUP
xDummy17	amazon-freertos/include/FreeRTOS.h	/^		struct	_reent	xDummy17;$/;"	m	struct:xSTATIC_TCB	typeref:struct:xSTATIC_TCB::_reent
xDummy2	amazon-freertos/include/FreeRTOS.h	/^		xMPU_SETTINGS	xDummy2;$/;"	m	struct:xSTATIC_TCB
xDummy2	amazon-freertos/include/FreeRTOS.h	/^	StaticListItem_t	xDummy2;$/;"	m	struct:xSTATIC_TIMER
xDummy2	amazon-freertos/include/FreeRTOS.h	/^	StaticList_t xDummy2;$/;"	m	struct:xSTATIC_EVENT_GROUP
xDummy2	amazon-freertos/include/FreeRTOS.h	/^	TickType_t xDummy2;$/;"	m	struct:xSTATIC_LIST_ITEM
xDummy2	amazon-freertos/include/FreeRTOS.h	/^	TickType_t xDummy2;$/;"	m	struct:xSTATIC_MINI_LIST_ITEM
xDummy3	amazon-freertos/include/FreeRTOS.h	/^	StaticListItem_t	xDummy3[ 2 ];$/;"	m	struct:xSTATIC_TCB
xDummy3	amazon-freertos/include/FreeRTOS.h	/^	StaticList_t xDummy3[ 2 ];$/;"	m	struct:xSTATIC_QUEUE
xDummy3	amazon-freertos/include/FreeRTOS.h	/^	TickType_t			xDummy3;$/;"	m	struct:xSTATIC_TIMER
xDummy4	amazon-freertos/include/FreeRTOS.h	/^		TickType_t xDummy4;$/;"	m	struct:xSTATIC_LIST_ITEM
xDummy4	amazon-freertos/include/FreeRTOS.h	/^	StaticMiniListItem_t xDummy4;$/;"	m	struct:xSTATIC_LIST
xDummy5	amazon-freertos/include/FreeRTOS.h	/^		TickType_t xDummy5;$/;"	m	struct:xSTATIC_LIST
xEnd	amazon-freertos/freertos/portable/heap_2.c	/^static BlockLink_t xStart, xEnd;$/;"	v	file:
xEventGroupClearBits	amazon-freertos/freertos/event_groups.c	/^EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )$/;"	f
xEventGroupClearBits	amazon-freertos/include/mpu_wrappers.h	138;"	d
xEventGroupClearBitsFromISR	amazon-freertos/freertos/event_groups.c	/^	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )$/;"	f
xEventGroupClearBitsFromISR	amazon-freertos/include/event_groups.h	410;"	d
xEventGroupCreate	amazon-freertos/freertos/event_groups.c	/^	EventGroupHandle_t xEventGroupCreate( void )$/;"	f
xEventGroupCreate	amazon-freertos/include/mpu_wrappers.h	135;"	d
xEventGroupCreateStatic	amazon-freertos/freertos/event_groups.c	/^	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )$/;"	f
xEventGroupCreateStatic	amazon-freertos/include/mpu_wrappers.h	136;"	d
xEventGroupGetBits	amazon-freertos/include/event_groups.h	708;"	d
xEventGroupGetBitsFromISR	amazon-freertos/freertos/event_groups.c	/^EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )$/;"	f
xEventGroupSetBits	amazon-freertos/freertos/event_groups.c	/^EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )$/;"	f
xEventGroupSetBits	amazon-freertos/include/mpu_wrappers.h	139;"	d
xEventGroupSetBitsFromISR	amazon-freertos/freertos/event_groups.c	/^	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xEventGroupSetBitsFromISR	amazon-freertos/include/event_groups.h	562;"	d
xEventGroupSync	amazon-freertos/freertos/event_groups.c	/^EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const EventBits_t uxBitsToWaitFor, TickType_t xTicksToWait )$/;"	f
xEventGroupSync	amazon-freertos/include/mpu_wrappers.h	140;"	d
xEventGroupWaitBits	amazon-freertos/freertos/event_groups.c	/^EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait )$/;"	f
xEventGroupWaitBits	amazon-freertos/include/mpu_wrappers.h	137;"	d
xEventListItem	amazon-freertos/freertos/tasks.c	/^	ListItem_t			xEventListItem;		\/*< Used to reference a task from an event list. *\/$/;"	m	struct:tskTaskControlBlock	file:
xFreeBytesRemaining	amazon-freertos/freertos/portable/heap_2.c	/^static size_t xFreeBytesRemaining = configADJUSTED_HEAP_SIZE;$/;"	v	file:
xFreeBytesRemaining	amazon-freertos/freertos/portable/heap_4.c	/^static size_t xFreeBytesRemaining = 0U;$/;"	v	file:
xFreeBytesRemaining	amazon-freertos/freertos/portable/heap_5.c	/^static size_t xFreeBytesRemaining = 0U;$/;"	v	file:
xHandle	amazon-freertos/freertos/queue.c	/^		QueueHandle_t xHandle;$/;"	m	struct:QUEUE_REGISTRY_ITEM	file:
xHandle	amazon-freertos/include/task.h	/^	TaskHandle_t xHandle;			\/* The handle of the task to which the rest of the information in the structure relates. *\/$/;"	m	struct:xTASK_STATUS
xHead	amazon-freertos/freertos/stream_buffer.c	/^	volatile size_t xHead;				\/* Index to the next item to write within the buffer. *\/$/;"	m	struct:StreamBufferDef_t	file:
xHeapStructSize	amazon-freertos/freertos/portable/heap_4.c	/^static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT - 1 ) ) ) & ~( ( size_t ) portBYTE_ALIGNMENT_MASK );$/;"	v	file:
xHeapStructSize	amazon-freertos/freertos/portable/heap_5.c	/^static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT - 1 ) ) ) & ~( ( size_t ) portBYTE_ALIGNMENT_MASK );$/;"	v	file:
xHot	emwin/emWin_header/GUI.h	/^  int                 xHot;$/;"	m	struct:__anon389
xHot	emwin/emWin_header/GUI.h	/^  int                 xHot;$/;"	m	struct:__anon390
xIdleTaskHandle	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			\/*< Holds the handle of the idle task.  The idle task is created automatically when the scheduler is started. *\/$/;"	v	file:
xItemValue	amazon-freertos/include/list.h	/^	configLIST_VOLATILE TickType_t xItemValue;			\/*< The value being listed.  In most cases this is used to sort the list in descending order. *\/$/;"	m	struct:xLIST_ITEM
xItemValue	amazon-freertos/include/list.h	/^	configLIST_VOLATILE TickType_t xItemValue;$/;"	m	struct:xMINI_LIST_ITEM
xJumpBuf	amazon-freertos/freertos/portable/port.c	/^static jmp_buf xJumpBuf; \/* Used to restore the original context when the scheduler is ended. *\/$/;"	v	file:
xLIST	amazon-freertos/include/list.h	/^typedef struct xLIST$/;"	s
xLIST_ITEM	amazon-freertos/include/list.h	/^struct xLIST_ITEM$/;"	s
xLen	emwin/emWin_header/LCD.h	/^  int xLen, yLen;$/;"	m	struct:__anon413
xLength	amazon-freertos/freertos/stream_buffer.c	/^	size_t xLength;						\/* The length of the buffer pointed to by pucBuffer. *\/$/;"	m	struct:StreamBufferDef_t	file:
xList	amazon-freertos/include/FreeRTOS.h	938;"	d
xListEnd	amazon-freertos/include/list.h	/^	MiniListItem_t xListEnd;							\/*< List item that contains the maximum possible item value meaning it is always at the end of the list and is therefore used as a marker. *\/$/;"	m	struct:xLIST
xListItem	amazon-freertos/include/FreeRTOS.h	937;"	d
xLog0	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      xLog0;$/;"	m	struct:__anon306
xLog1	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      xLog1;$/;"	m	struct:__anon306
xMEMORY_REGION	amazon-freertos/include/task.h	/^typedef struct xMEMORY_REGION$/;"	s
xMINI_LIST_ITEM	amazon-freertos/include/list.h	/^struct xMINI_LIST_ITEM$/;"	s
xMPUSettings	amazon-freertos/freertos/tasks.c	/^		xMPU_SETTINGS	xMPUSettings;		\/*< The MPU settings are defined as part of the port layer.  THIS MUST BE THE SECOND MEMBER OF THE TCB STRUCT. *\/$/;"	m	struct:tskTaskControlBlock	file:
xMaximumPossibleSuppressedTicks	amazon-freertos/freertos/portable/port.c	/^	static uint32_t xMaximumPossibleSuppressedTicks = 0;$/;"	v	file:
xMemoryRegion	amazon-freertos/include/FreeRTOS.h	921;"	d
xMessageBufferCreate	amazon-freertos/include/message_buffer.h	138;"	d
xMessageBufferCreateStatic	amazon-freertos/include/message_buffer.h	204;"	d
xMessageBufferIsEmpty	amazon-freertos/include/message_buffer.h	649;"	d
xMessageBufferIsFull	amazon-freertos/include/message_buffer.h	633;"	d
xMessageBufferNextLengthBytes	amazon-freertos/include/message_buffer.h	713;"	d
xMessageBufferReceive	amazon-freertos/include/message_buffer.h	495;"	d
xMessageBufferReceiveCompletedFromISR	amazon-freertos/include/message_buffer.h	792;"	d
xMessageBufferReceiveFromISR	amazon-freertos/include/message_buffer.h	596;"	d
xMessageBufferReset	amazon-freertos/include/message_buffer.h	672;"	d
xMessageBufferSend	amazon-freertos/include/message_buffer.h	303;"	d
xMessageBufferSendCompletedFromISR	amazon-freertos/include/message_buffer.h	752;"	d
xMessageBufferSendFromISR	amazon-freertos/include/message_buffer.h	407;"	d
xMessageBufferSpaceAvailable	amazon-freertos/include/message_buffer.h	694;"	d
xMessageID	amazon-freertos/freertos/timers.c	/^	BaseType_t			xMessageID;			\/*<< The command being sent to the timer service task. *\/$/;"	m	struct:tmrTimerQueueMessage	file:
xMessageValue	amazon-freertos/freertos/timers.c	/^	TickType_t			xMessageValue;		\/*<< An optional value used by a subset of commands, for example, when changing the period of a timer. *\/$/;"	m	struct:tmrTimerParameters	file:
xMinimumEverFreeBytesRemaining	amazon-freertos/freertos/portable/heap_4.c	/^static size_t xMinimumEverFreeBytesRemaining = 0U;$/;"	v	file:
xMinimumEverFreeBytesRemaining	amazon-freertos/freertos/portable/heap_5.c	/^static size_t xMinimumEverFreeBytesRemaining = 0U;$/;"	v	file:
xMutexHolder	amazon-freertos/freertos/queue.c	/^	TaskHandle_t xMutexHolder;		 \/*< The handle of the task that holds the mutex. *\/$/;"	m	struct:SemaphoreData	file:
xNewLib_reent	amazon-freertos/freertos/tasks.c	/^		struct	_reent xNewLib_reent;$/;"	m	struct:tskTaskControlBlock	typeref:struct:tskTaskControlBlock::_reent	file:
xNextFreeByte	amazon-freertos/freertos/portable/heap_1.c	/^static size_t xNextFreeByte = ( size_t ) 0;$/;"	v	file:
xNextTaskUnblockTime	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; \/* Initialised to portMAX_DELAY before the scheduler starts. *\/$/;"	v	file:
xNumOfOverflows	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;$/;"	v	file:
xOff	emwin/emWin_header/GUI.h	/^    int xOff, yOff;$/;"	m	struct:GUI_CONTEXT
xOff	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int xOff;$/;"	m	struct:DRIVER_CONTEXT
xOff	emwin/emWin_header/LISTVIEW_Private.h	/^  I16                          xOff, yOff;$/;"	m	struct:__anon332
xOff	emwin/emWin_header/WIDGET.h	/^  I16 xOff, yOff;$/;"	m	struct:GUI_DRAW
xOffPM	emwin/emWin_header/TREEVIEW_Private.h	/^  I16 xOffPM, yOffPM; \/* x\/y offset of PM bitmap *\/$/;"	m	struct:__anon227
xOrg	emwin/emWin_header/GUI_VNC.h	/^  int xOrg, yOrg, xOrgNew, yOrgNew;$/;"	m	struct:GUI_VNC_CONTEXT
xOrgNew	emwin/emWin_header/GUI_VNC.h	/^  int xOrg, yOrg, xOrgNew, yOrgNew;$/;"	m	struct:GUI_VNC_CONTEXT
xOverflowCount	amazon-freertos/include/task.h	/^	BaseType_t xOverflowCount;$/;"	m	struct:xTIME_OUT
xOverlapHLine	emwin/emWin_header/TREEVIEW_Private.h	/^  U16 xOverlapHLine;$/;"	m	struct:__anon227
xPSR_C_Msk	CMSIS/core_armv8mbl.h	305;"	d
xPSR_C_Msk	CMSIS/core_armv8mml.h	398;"	d
xPSR_C_Msk	CMSIS/core_cm4.h	344;"	d
xPSR_C_Pos	CMSIS/core_armv8mbl.h	304;"	d
xPSR_C_Pos	CMSIS/core_armv8mml.h	397;"	d
xPSR_C_Pos	CMSIS/core_cm4.h	343;"	d
xPSR_GE_Msk	CMSIS/core_armv8mml.h	413;"	d
xPSR_GE_Msk	CMSIS/core_cm4.h	359;"	d
xPSR_GE_Pos	CMSIS/core_armv8mml.h	412;"	d
xPSR_GE_Pos	CMSIS/core_cm4.h	358;"	d
xPSR_ICI_IT_1_Msk	CMSIS/core_cm4.h	362;"	d
xPSR_ICI_IT_1_Pos	CMSIS/core_cm4.h	361;"	d
xPSR_ICI_IT_2_Msk	CMSIS/core_cm4.h	353;"	d
xPSR_ICI_IT_2_Pos	CMSIS/core_cm4.h	352;"	d
xPSR_ISR_Msk	CMSIS/core_armv8mbl.h	314;"	d
xPSR_ISR_Msk	CMSIS/core_armv8mml.h	416;"	d
xPSR_ISR_Msk	CMSIS/core_cm4.h	365;"	d
xPSR_ISR_Pos	CMSIS/core_armv8mbl.h	313;"	d
xPSR_ISR_Pos	CMSIS/core_armv8mml.h	415;"	d
xPSR_ISR_Pos	CMSIS/core_cm4.h	364;"	d
xPSR_IT_Msk	CMSIS/core_armv8mml.h	407;"	d
xPSR_IT_Pos	CMSIS/core_armv8mml.h	406;"	d
xPSR_N_Msk	CMSIS/core_armv8mbl.h	299;"	d
xPSR_N_Msk	CMSIS/core_armv8mml.h	392;"	d
xPSR_N_Msk	CMSIS/core_cm4.h	338;"	d
xPSR_N_Pos	CMSIS/core_armv8mbl.h	298;"	d
xPSR_N_Pos	CMSIS/core_armv8mml.h	391;"	d
xPSR_N_Pos	CMSIS/core_cm4.h	337;"	d
xPSR_Q_Msk	CMSIS/core_armv8mml.h	404;"	d
xPSR_Q_Msk	CMSIS/core_cm4.h	350;"	d
xPSR_Q_Pos	CMSIS/core_armv8mml.h	403;"	d
xPSR_Q_Pos	CMSIS/core_cm4.h	349;"	d
xPSR_T_Msk	CMSIS/core_armv8mbl.h	311;"	d
xPSR_T_Msk	CMSIS/core_armv8mml.h	410;"	d
xPSR_T_Msk	CMSIS/core_cm4.h	356;"	d
xPSR_T_Pos	CMSIS/core_armv8mbl.h	310;"	d
xPSR_T_Pos	CMSIS/core_armv8mml.h	409;"	d
xPSR_T_Pos	CMSIS/core_cm4.h	355;"	d
xPSR_Type	CMSIS/core_armv8mbl.h	/^} xPSR_Type;$/;"	t	typeref:union:__anon117
xPSR_Type	CMSIS/core_armv8mml.h	/^} xPSR_Type;$/;"	t	typeref:union:__anon13
xPSR_Type	CMSIS/core_cm4.h	/^} xPSR_Type;$/;"	t	typeref:union:__anon35
xPSR_V_Msk	CMSIS/core_armv8mbl.h	308;"	d
xPSR_V_Msk	CMSIS/core_armv8mml.h	401;"	d
xPSR_V_Msk	CMSIS/core_cm4.h	347;"	d
xPSR_V_Pos	CMSIS/core_armv8mbl.h	307;"	d
xPSR_V_Pos	CMSIS/core_armv8mml.h	400;"	d
xPSR_V_Pos	CMSIS/core_cm4.h	346;"	d
xPSR_Z_Msk	CMSIS/core_armv8mbl.h	302;"	d
xPSR_Z_Msk	CMSIS/core_armv8mml.h	395;"	d
xPSR_Z_Msk	CMSIS/core_cm4.h	341;"	d
xPSR_Z_Pos	CMSIS/core_armv8mbl.h	301;"	d
xPSR_Z_Pos	CMSIS/core_armv8mml.h	394;"	d
xPSR_Z_Pos	CMSIS/core_cm4.h	340;"	d
xPendingReadyList	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static List_t xPendingReadyList;						\/*< Tasks that have been readied while the scheduler was suspended.  They will be moved to the ready list when the scheduler is resumed. *\/$/;"	v	file:
xPhys	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      xPhys;     \/\/ Last measured x value$/;"	m	struct:__anon307
xPhys0	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      xPhys0;$/;"	m	struct:__anon306
xPhys1	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      xPhys1;$/;"	m	struct:__anon306
xPortGetFreeHeapSize	amazon-freertos/freertos/portable/heap_1.c	/^size_t xPortGetFreeHeapSize( void )$/;"	f
xPortGetFreeHeapSize	amazon-freertos/freertos/portable/heap_2.c	/^size_t xPortGetFreeHeapSize( void )$/;"	f
xPortGetFreeHeapSize	amazon-freertos/freertos/portable/heap_4.c	/^size_t xPortGetFreeHeapSize( void )$/;"	f
xPortGetFreeHeapSize	amazon-freertos/freertos/portable/heap_5.c	/^size_t xPortGetFreeHeapSize( void )$/;"	f
xPortGetMinimumEverFreeHeapSize	amazon-freertos/freertos/portable/heap_4.c	/^size_t xPortGetMinimumEverFreeHeapSize( void )$/;"	f
xPortGetMinimumEverFreeHeapSize	amazon-freertos/freertos/portable/heap_5.c	/^size_t xPortGetMinimumEverFreeHeapSize( void )$/;"	f
xPortIsInsideInterrupt	amazon-freertos/freertos/portable/portmacro.h	/^portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )$/;"	f
xPortPendSVHandler	amazon-freertos/freertos/portable/port.c	/^void xPortPendSVHandler( void )$/;"	f
xPortPendSVHandler	source/FreeRTOSConfig.h	150;"	d
xPortStartScheduler	amazon-freertos/freertos/portable/port.c	/^BaseType_t xPortStartScheduler( void )$/;"	f
xPortSysTickHandler	amazon-freertos/freertos/portable/port.c	/^void xPortSysTickHandler( void )$/;"	f
xPortSysTickHandler	source/FreeRTOSConfig.h	151;"	d
xPos	emwin/emWin_header/GUI.h	/^  int xPos;$/;"	m	struct:__anon386
xPos	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int xPos, yPos;$/;"	m	struct:DRIVER_CONTEXT
xPos	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int xPos, yPos;$/;"	m	struct:DRIVER_CONTEXT
xPos	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int xPos, yPos;$/;"	m	struct:DRIVER_CONTEXT
xPos	emwin/emWin_header/GUI_Type.h	/^  int xPos;$/;"	m	struct:__anon249
xPos	emwin/emWin_header/LCD.h	/^  int xPos, yPos;$/;"	m	struct:__anon410
xPos	emwin/emWin_header/LCD.h	/^  int xPos, yPos;$/;"	m	struct:__anon413
xPos	emwin/emWin_header/SWIPELIST_Private.h	/^  int     xPos;$/;"	m	struct:__anon235
xPos	emwin/emWin_header/WM.h	/^  int xPos, yPos;$/;"	m	struct:__anon287
xPos0	emwin/emWin_header/WM.h	/^  int       xPos0;       \/\/ Primary window position in x when starting the gesture$/;"	m	struct:__anon288
xPosOCL	emwin/emWin_header/TREEVIEW.h	/^  I16 xPosPM, xPosOCL;$/;"	m	struct:__anon372
xPosPM	emwin/emWin_header/TREEVIEW.h	/^  I16 xPosPM, xPosOCL;$/;"	m	struct:__anon372
xPosText	emwin/emWin_header/BUTTON_Private.h	/^  I16 xPosText, yPosText;$/;"	m	struct:__anon401
xQUEUE	amazon-freertos/freertos/queue.c	/^} xQUEUE;$/;"	t	typeref:struct:QueueDefinition	file:
xQueue	amazon-freertos/freertos/queue.c	/^		QueuePointers_t xQueue;		\/*< Data required exclusively when this structure is used as a queue. *\/$/;"	m	union:QueueDefinition::__anon7	file:
xQueueAddToSet	amazon-freertos/freertos/queue.c	/^	BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet )$/;"	f
xQueueAddToSet	amazon-freertos/include/mpu_wrappers.h	109;"	d
xQueueCRReceive	amazon-freertos/freertos/queue.c	/^	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )$/;"	f
xQueueCRReceiveFromISR	amazon-freertos/freertos/queue.c	/^	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWoken )$/;"	f
xQueueCRSend	amazon-freertos/freertos/queue.c	/^	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait )$/;"	f
xQueueCRSendFromISR	amazon-freertos/freertos/queue.c	/^	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken )$/;"	f
xQueueCreate	amazon-freertos/include/queue.h	146;"	d
xQueueCreateCountingSemaphore	amazon-freertos/freertos/queue.c	/^	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount )$/;"	f
xQueueCreateCountingSemaphore	amazon-freertos/include/mpu_wrappers.h	101;"	d
xQueueCreateCountingSemaphoreStatic	amazon-freertos/freertos/queue.c	/^	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue )$/;"	f
xQueueCreateCountingSemaphoreStatic	amazon-freertos/include/mpu_wrappers.h	102;"	d
xQueueCreateMutex	amazon-freertos/freertos/queue.c	/^	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )$/;"	f
xQueueCreateMutex	amazon-freertos/include/mpu_wrappers.h	99;"	d
xQueueCreateMutexStatic	amazon-freertos/freertos/queue.c	/^	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )$/;"	f
xQueueCreateMutexStatic	amazon-freertos/include/mpu_wrappers.h	100;"	d
xQueueCreateSet	amazon-freertos/freertos/queue.c	/^	QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength )$/;"	f
xQueueCreateSet	amazon-freertos/include/mpu_wrappers.h	108;"	d
xQueueCreateStatic	amazon-freertos/include/queue.h	232;"	d
xQueueGenericCreate	amazon-freertos/freertos/queue.c	/^	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType )$/;"	f
xQueueGenericCreate	amazon-freertos/include/mpu_wrappers.h	106;"	d
xQueueGenericCreateStatic	amazon-freertos/freertos/queue.c	/^	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )$/;"	f
xQueueGenericCreateStatic	amazon-freertos/include/mpu_wrappers.h	107;"	d
xQueueGenericReset	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )$/;"	f
xQueueGenericReset	amazon-freertos/include/mpu_wrappers.h	112;"	d
xQueueGenericSend	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition )$/;"	f
xQueueGenericSend	amazon-freertos/include/mpu_wrappers.h	92;"	d
xQueueGenericSendFromISR	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition )$/;"	f
xQueueGetMutexHolder	amazon-freertos/freertos/queue.c	/^	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )$/;"	f
xQueueGetMutexHolder	amazon-freertos/include/mpu_wrappers.h	103;"	d
xQueueGetMutexHolderFromISR	amazon-freertos/freertos/queue.c	/^	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )$/;"	f
xQueueGiveFromISR	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )$/;"	f
xQueueGiveMutexRecursive	amazon-freertos/freertos/queue.c	/^	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )$/;"	f
xQueueGiveMutexRecursive	amazon-freertos/include/mpu_wrappers.h	105;"	d
xQueueHandle	amazon-freertos/include/FreeRTOS.h	916;"	d
xQueueIsQueueEmptyFromISR	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )$/;"	f
xQueueIsQueueFullFromISR	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )$/;"	f
xQueueOverwrite	amazon-freertos/include/queue.h	562;"	d
xQueueOverwriteFromISR	amazon-freertos/include/queue.h	1142;"	d
xQueuePeek	amazon-freertos/freertos/queue.c	/^BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )$/;"	f
xQueuePeek	amazon-freertos/include/mpu_wrappers.h	94;"	d
xQueuePeekFromISR	amazon-freertos/freertos/queue.c	/^BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )$/;"	f
xQueueReceive	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )$/;"	f
xQueueReceive	amazon-freertos/include/mpu_wrappers.h	93;"	d
xQueueReceiveFromISR	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken )$/;"	f
xQueueRegistry	amazon-freertos/freertos/queue.c	/^	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];$/;"	v
xQueueRegistryItem	amazon-freertos/freertos/queue.c	/^	} xQueueRegistryItem;$/;"	t	typeref:struct:QUEUE_REGISTRY_ITEM	file:
xQueueRemoveFromSet	amazon-freertos/freertos/queue.c	/^	BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet )$/;"	f
xQueueRemoveFromSet	amazon-freertos/include/mpu_wrappers.h	110;"	d
xQueueReset	amazon-freertos/include/queue.h	1433;"	d
xQueueSelectFromSet	amazon-freertos/freertos/queue.c	/^	QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, TickType_t const xTicksToWait )$/;"	f
xQueueSelectFromSet	amazon-freertos/include/mpu_wrappers.h	111;"	d
xQueueSelectFromSetFromISR	amazon-freertos/freertos/queue.c	/^	QueueSetMemberHandle_t xQueueSelectFromSetFromISR( QueueSetHandle_t xQueueSet )$/;"	f
xQueueSemaphoreTake	amazon-freertos/freertos/queue.c	/^BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )$/;"	f
xQueueSemaphoreTake	amazon-freertos/include/mpu_wrappers.h	95;"	d
xQueueSend	amazon-freertos/include/queue.h	479;"	d
xQueueSendFromISR	amazon-freertos/include/queue.h	1216;"	d
xQueueSendToBack	amazon-freertos/include/queue.h	395;"	d
xQueueSendToBackFromISR	amazon-freertos/include/queue.h	1055;"	d
xQueueSendToFront	amazon-freertos/include/queue.h	313;"	d
xQueueSendToFrontFromISR	amazon-freertos/include/queue.h	984;"	d
xQueueSetHandle	amazon-freertos/include/FreeRTOS.h	918;"	d
xQueueSetMemberHandle	amazon-freertos/include/FreeRTOS.h	919;"	d
xQueueTakeMutexRecursive	amazon-freertos/freertos/queue.c	/^	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )$/;"	f
xQueueTakeMutexRecursive	amazon-freertos/include/mpu_wrappers.h	104;"	d
xRegions	amazon-freertos/include/task.h	/^	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];$/;"	m	struct:xTASK_PARAMETERS
xSTATIC_EVENT_GROUP	amazon-freertos/include/FreeRTOS.h	/^typedef struct xSTATIC_EVENT_GROUP$/;"	s
xSTATIC_LIST	amazon-freertos/include/FreeRTOS.h	/^typedef struct xSTATIC_LIST$/;"	s
xSTATIC_LIST_ITEM	amazon-freertos/include/FreeRTOS.h	/^struct xSTATIC_LIST_ITEM$/;"	s
xSTATIC_MINI_LIST_ITEM	amazon-freertos/include/FreeRTOS.h	/^struct xSTATIC_MINI_LIST_ITEM$/;"	s
xSTATIC_QUEUE	amazon-freertos/include/FreeRTOS.h	/^typedef struct xSTATIC_QUEUE$/;"	s
xSTATIC_STREAM_BUFFER	amazon-freertos/include/FreeRTOS.h	/^typedef struct xSTATIC_STREAM_BUFFER$/;"	s
xSTATIC_TCB	amazon-freertos/include/FreeRTOS.h	/^typedef struct xSTATIC_TCB$/;"	s
xSTATIC_TIMER	amazon-freertos/include/FreeRTOS.h	/^typedef struct xSTATIC_TIMER$/;"	s
xSchedulerRunning	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;$/;"	v	file:
xSemaphore	amazon-freertos/freertos/queue.c	/^		SemaphoreData_t xSemaphore; \/*< Data required exclusively when this structure is used as a semaphore. *\/$/;"	m	union:QueueDefinition::__anon7	file:
xSemaphoreCreateBinary	amazon-freertos/include/semphr.h	162;"	d
xSemaphoreCreateBinaryStatic	amazon-freertos/include/semphr.h	221;"	d
xSemaphoreCreateCounting	amazon-freertos/include/semphr.h	998;"	d
xSemaphoreCreateCountingStatic	amazon-freertos/include/semphr.h	1083;"	d
xSemaphoreCreateMutex	amazon-freertos/include/semphr.h	716;"	d
xSemaphoreCreateMutexStatic	amazon-freertos/include/semphr.h	777;"	d
xSemaphoreCreateRecursiveMutex	amazon-freertos/include/semphr.h	845;"	d
xSemaphoreCreateRecursiveMutexStatic	amazon-freertos/include/semphr.h	918;"	d
xSemaphoreGetMutexHolder	amazon-freertos/include/semphr.h	1113;"	d
xSemaphoreGetMutexHolderFromISR	amazon-freertos/include/semphr.h	1124;"	d
xSemaphoreGive	amazon-freertos/include/semphr.h	447;"	d
xSemaphoreGiveFromISR	amazon-freertos/include/semphr.h	624;"	d
xSemaphoreGiveRecursive	amazon-freertos/include/semphr.h	532;"	d
xSemaphoreHandle	amazon-freertos/include/FreeRTOS.h	917;"	d
xSemaphoreTake	amazon-freertos/include/semphr.h	289;"	d
xSemaphoreTakeFromISR	amazon-freertos/include/semphr.h	658;"	d
xSemaphoreTakeRecursive	amazon-freertos/include/semphr.h	383;"	d
xSize	emwin/emWin_header/DIALOG_Intern.h	/^  I16                      xSize;            \/\/ x size$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
xSize	emwin/emWin_header/GUI.h	/^  int    xSize, ySize;  \/\/ Size of dirty rectangle$/;"	m	struct:__anon385
xSize	emwin/emWin_header/GUI.h	/^  int xSize;         \/\/ X-size of images$/;"	m	struct:__anon388
xSize	emwin/emWin_header/GUI.h	/^  int xSize;$/;"	m	struct:__anon386
xSize	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int xSize, ySize;       \/\/ Display size$/;"	m	struct:__anon370
xSize	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int xSize, ySize;   \/\/ Display size$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUI_BMP_Private.h	/^  I32                   xSize;$/;"	m	struct:__anon330
xSize	emwin/emWin_header/GUI_GCache_Private.h	/^  int xSize, ySize;$/;"	m	struct:__anon239
xSize	emwin/emWin_header/GUI_JPEG_Private.h	/^  U16 xSize;$/;"	m	struct:GUI_JPEG_DCONTEXT
xSize	emwin/emWin_header/GUI_SetOrientation.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
xSize	emwin/emWin_header/GUI_Type.h	/^  int xSize;$/;"	m	struct:__anon249
xSize	emwin/emWin_header/GUI_Type.h	/^  int xSize;$/;"	m	struct:__anon250
xSize	emwin/emWin_header/GUI_VNC.h	/^  int xSize, ySize;$/;"	m	struct:GUI_VNC_CONTEXT
xSize	emwin/emWin_header/KNOB_Private.h	/^  int xSize;$/;"	m	struct:__anon327
xSize	emwin/emWin_header/LCD.h	/^  int xSize, ySize;$/;"	m	struct:__anon412
xSize	emwin/emWin_header/LISTBOX_Private.h	/^  U16  xSize, ySize;$/;"	m	struct:__anon311
xSize	emwin/emWin_header/TREEVIEW_Private.h	/^  U16                  xSize;$/;"	m	struct:__anon225
xSize	emwin/emWin_header/WM.h	/^  U32       xSize;       \/\/ Native xSize of window to be zoomed in pixels$/;"	m	struct:__anon288
xSize	emwin/emWin_header/WM_Intern.h	/^    int xSize, ySize; \/\/ Size of bk window$/;"	m	struct:__anon367
xSizeInBytes	amazon-freertos/include/portable.h	/^	size_t xSizeInBytes;$/;"	m	struct:HeapRegion
xSizeItems	emwin/emWin_header/ICONVIEW_Private.h	/^  int                     xSizeItems;$/;"	m	struct:__anon219
xSizeItems	emwin/emWin_header/TREEVIEW_Private.h	/^  int xSizeItems;     \/* xSize in pixel used for all visible items *\/$/;"	m	struct:__anon227
xSizeMoveable	emwin/emWin_header/SCROLLBAR_Private.h	/^  int xSizeMoveable;$/;"	m	struct:__anon349
xSizeParent	emwin/emWin_header/WM.h	/^  U32       xSizeParent; \/\/ xSize of parent window$/;"	m	struct:__anon288
xSpacing	CMSIS/arm_math.h	/^    float32_t xSpacing;         \/**< xSpacing *\/$/;"	m	struct:__anon65
xSrc	emwin/emWin_header/GUI_BMP_Private.h	/^  I32                   xSrc;           \/\/ Used to read data$/;"	m	struct:__anon330
xStart	amazon-freertos/freertos/portable/heap_2.c	/^static BlockLink_t xStart, xEnd;$/;"	v	file:
xStart	amazon-freertos/freertos/portable/heap_4.c	/^static BlockLink_t xStart, *pxEnd = NULL;$/;"	v	file:
xStart	amazon-freertos/freertos/portable/heap_5.c	/^static BlockLink_t xStart, *pxEnd = NULL;$/;"	v	file:
xStateListItem	amazon-freertos/freertos/tasks.c	/^	ListItem_t			xStateListItem;	\/*< The list that the state list item of a task is reference from denotes the state of that task (Ready, Blocked, Suspended ). *\/$/;"	m	struct:tskTaskControlBlock	file:
xStreamBufferBytesAvailable	amazon-freertos/freertos/stream_buffer.c	/^size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferBytesAvailable	amazon-freertos/include/mpu_wrappers.h	153;"	d
xStreamBufferCreate	amazon-freertos/include/stream_buffer.h	133;"	d
xStreamBufferCreateStatic	amazon-freertos/include/stream_buffer.h	214;"	d
xStreamBufferGenericCreate	amazon-freertos/freertos/stream_buffer.c	/^	StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes, size_t xTriggerLevelBytes, BaseType_t xIsMessageBuffer )$/;"	f
xStreamBufferGenericCreate	amazon-freertos/include/mpu_wrappers.h	155;"	d
xStreamBufferGenericCreateStatic	amazon-freertos/freertos/stream_buffer.c	/^	StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,$/;"	f
xStreamBufferGenericCreateStatic	amazon-freertos/include/mpu_wrappers.h	156;"	d
xStreamBufferIsEmpty	amazon-freertos/freertos/stream_buffer.c	/^BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferIsEmpty	amazon-freertos/include/mpu_wrappers.h	150;"	d
xStreamBufferIsFull	amazon-freertos/freertos/stream_buffer.c	/^BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferIsFull	amazon-freertos/include/mpu_wrappers.h	149;"	d
xStreamBufferNextMessageLengthBytes	amazon-freertos/freertos/stream_buffer.c	/^size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferNextMessageLengthBytes	amazon-freertos/include/mpu_wrappers.h	147;"	d
xStreamBufferReceive	amazon-freertos/freertos/stream_buffer.c	/^size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,$/;"	f
xStreamBufferReceive	amazon-freertos/include/mpu_wrappers.h	146;"	d
xStreamBufferReceiveCompletedFromISR	amazon-freertos/freertos/stream_buffer.c	/^BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xStreamBufferReceiveFromISR	amazon-freertos/freertos/stream_buffer.c	/^size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,$/;"	f
xStreamBufferReset	amazon-freertos/freertos/stream_buffer.c	/^BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferReset	amazon-freertos/include/mpu_wrappers.h	151;"	d
xStreamBufferSend	amazon-freertos/freertos/stream_buffer.c	/^size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,$/;"	f
xStreamBufferSend	amazon-freertos/include/mpu_wrappers.h	145;"	d
xStreamBufferSendCompletedFromISR	amazon-freertos/freertos/stream_buffer.c	/^BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xStreamBufferSendFromISR	amazon-freertos/freertos/stream_buffer.c	/^size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,$/;"	f
xStreamBufferSetTriggerLevel	amazon-freertos/freertos/stream_buffer.c	/^BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer, size_t xTriggerLevel )$/;"	f
xStreamBufferSetTriggerLevel	amazon-freertos/include/mpu_wrappers.h	154;"	d
xStreamBufferSpacesAvailable	amazon-freertos/freertos/stream_buffer.c	/^size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferSpacesAvailable	amazon-freertos/include/mpu_wrappers.h	152;"	d
xSuspendedTaskList	amazon-freertos/freertos/tasks.c	/^	PRIVILEGED_DATA static List_t xSuspendedTaskList;					\/*< Tasks that are currently suspended. *\/$/;"	v	file:
xTASK_PARAMETERS	amazon-freertos/include/task.h	/^typedef struct xTASK_PARAMETERS$/;"	s
xTASK_STATUS	amazon-freertos/include/task.h	/^typedef struct xTASK_STATUS$/;"	s
xTIMER	amazon-freertos/freertos/timers.c	/^} xTIMER;$/;"	t	typeref:struct:tmrTimerControl	file:
xTIME_OUT	amazon-freertos/include/task.h	/^typedef struct xTIME_OUT$/;"	s
xTail	amazon-freertos/freertos/stream_buffer.c	/^	volatile size_t xTail;				\/* Index to the next item to read within the buffer. *\/$/;"	m	struct:StreamBufferDef_t	file:
xTaskAbortDelay	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )$/;"	f
xTaskAbortDelay	amazon-freertos/include/mpu_wrappers.h	56;"	d
xTaskCallApplicationTaskHook	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )$/;"	f
xTaskCallApplicationTaskHook	amazon-freertos/include/mpu_wrappers.h	75;"	d
xTaskCheckForTimeOut	amazon-freertos/freertos/tasks.c	/^BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )$/;"	f
xTaskCheckForTimeOut	amazon-freertos/include/mpu_wrappers.h	88;"	d
xTaskCreate	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,$/;"	f
xTaskCreate	amazon-freertos/include/mpu_wrappers.h	49;"	d
xTaskCreateRestricted	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *pxCreatedTask )$/;"	f
xTaskCreateRestricted	amazon-freertos/include/mpu_wrappers.h	51;"	d
xTaskCreateRestrictedStatic	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *pxCreatedTask )$/;"	f
xTaskCreateStatic	amazon-freertos/freertos/tasks.c	/^	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,$/;"	f
xTaskCreateStatic	amazon-freertos/include/mpu_wrappers.h	50;"	d
xTaskGenericNotify	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue )$/;"	f
xTaskGenericNotify	amazon-freertos/include/mpu_wrappers.h	81;"	d
xTaskGenericNotifyFromISR	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xTaskGetApplicationTaskTag	amazon-freertos/freertos/tasks.c	/^	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )$/;"	f
xTaskGetApplicationTaskTag	amazon-freertos/include/mpu_wrappers.h	72;"	d
xTaskGetApplicationTaskTagFromISR	amazon-freertos/freertos/tasks.c	/^	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )$/;"	f
xTaskGetCurrentTaskHandle	amazon-freertos/freertos/tasks.c	/^	TaskHandle_t xTaskGetCurrentTaskHandle( void )$/;"	f
xTaskGetCurrentTaskHandle	amazon-freertos/include/mpu_wrappers.h	86;"	d
xTaskGetHandle	amazon-freertos/freertos/tasks.c	/^	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
xTaskGetHandle	amazon-freertos/include/mpu_wrappers.h	68;"	d
xTaskGetIdleRunTimeCounter	amazon-freertos/freertos/tasks.c	/^	TickType_t xTaskGetIdleRunTimeCounter( void )$/;"	f
xTaskGetIdleRunTimeCounter	amazon-freertos/include/mpu_wrappers.h	80;"	d
xTaskGetIdleTaskHandle	amazon-freertos/freertos/tasks.c	/^	TaskHandle_t xTaskGetIdleTaskHandle( void )$/;"	f
xTaskGetIdleTaskHandle	amazon-freertos/include/mpu_wrappers.h	76;"	d
xTaskGetSchedulerState	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskGetSchedulerState( void )$/;"	f
xTaskGetSchedulerState	amazon-freertos/include/mpu_wrappers.h	89;"	d
xTaskGetTickCount	amazon-freertos/freertos/tasks.c	/^TickType_t xTaskGetTickCount( void )$/;"	f
xTaskGetTickCount	amazon-freertos/include/mpu_wrappers.h	65;"	d
xTaskGetTickCountFromISR	amazon-freertos/freertos/tasks.c	/^TickType_t xTaskGetTickCountFromISR( void )$/;"	f
xTaskHandle	amazon-freertos/include/FreeRTOS.h	915;"	d
xTaskIncrementTick	amazon-freertos/freertos/tasks.c	/^BaseType_t xTaskIncrementTick( void )$/;"	f
xTaskNotify	amazon-freertos/include/task.h	1857;"	d
xTaskNotifyAndQuery	amazon-freertos/include/task.h	1858;"	d
xTaskNotifyAndQueryFromISR	amazon-freertos/include/task.h	1949;"	d
xTaskNotifyFromISR	amazon-freertos/include/task.h	1948;"	d
xTaskNotifyGive	amazon-freertos/include/task.h	2070;"	d
xTaskNotifyStateClear	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )$/;"	f
xTaskNotifyStateClear	amazon-freertos/include/mpu_wrappers.h	84;"	d
xTaskNotifyWait	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait )$/;"	f
xTaskNotifyWait	amazon-freertos/include/mpu_wrappers.h	82;"	d
xTaskNumber	amazon-freertos/include/task.h	/^	UBaseType_t xTaskNumber;		\/* A number unique to the task. *\/$/;"	m	struct:xTASK_STATUS
xTaskParameters	amazon-freertos/include/FreeRTOS.h	922;"	d
xTaskPriorityDisinherit	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )$/;"	f
xTaskPriorityInherit	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )$/;"	f
xTaskRemoveFromEventList	amazon-freertos/freertos/tasks.c	/^BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )$/;"	f
xTaskResumeAll	amazon-freertos/freertos/tasks.c	/^BaseType_t xTaskResumeAll( void )$/;"	f
xTaskResumeAll	amazon-freertos/include/mpu_wrappers.h	64;"	d
xTaskResumeFromISR	amazon-freertos/freertos/tasks.c	/^	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )$/;"	f
xTaskStatusType	amazon-freertos/include/FreeRTOS.h	923;"	d
xTaskWaitingToReceive	amazon-freertos/freertos/stream_buffer.c	/^	volatile TaskHandle_t xTaskWaitingToReceive; \/* Holds the handle of a task waiting for data, or NULL if no tasks are waiting. *\/$/;"	m	struct:StreamBufferDef_t	file:
xTaskWaitingToSend	amazon-freertos/freertos/stream_buffer.c	/^	volatile TaskHandle_t xTaskWaitingToSend;	\/* Holds the handle of a task waiting to send data to a message buffer that is full. *\/$/;"	m	struct:StreamBufferDef_t	file:
xTasksWaitingForBits	amazon-freertos/freertos/event_groups.c	/^	List_t xTasksWaitingForBits;		\/*< List of tasks waiting for a bit to be set. *\/$/;"	m	struct:EventGroupDef_t	file:
xTasksWaitingTermination	amazon-freertos/freertos/tasks.c	/^	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				\/*< Tasks that have been deleted - but their memory not yet freed. *\/$/;"	v	file:
xTasksWaitingToReceive	amazon-freertos/freertos/queue.c	/^	List_t xTasksWaitingToReceive;	\/*< List of tasks that are blocked waiting to read from this queue.  Stored in priority order. *\/$/;"	m	struct:QueueDefinition	file:
xTasksWaitingToSend	amazon-freertos/freertos/queue.c	/^	List_t xTasksWaitingToSend;		\/*< List of tasks that are blocked waiting to post onto this queue.  Stored in priority order. *\/$/;"	m	struct:QueueDefinition	file:
xTickCount	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT;$/;"	v	file:
xTimeOnEntering	amazon-freertos/include/task.h	/^	TickType_t xTimeOnEntering;$/;"	m	struct:xTIME_OUT
xTimeOutType	amazon-freertos/include/FreeRTOS.h	920;"	d
xTimerChangePeriod	amazon-freertos/include/timers.h	626;"	d
xTimerChangePeriodFromISR	amazon-freertos/include/timers.h	1010;"	d
xTimerCreate	amazon-freertos/freertos/timers.c	/^	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			\/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
xTimerCreate	amazon-freertos/include/mpu_wrappers.h	121;"	d
xTimerCreateStatic	amazon-freertos/freertos/timers.c	/^	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		\/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
xTimerCreateStatic	amazon-freertos/include/mpu_wrappers.h	122;"	d
xTimerCreateTimerTask	amazon-freertos/freertos/timers.c	/^BaseType_t xTimerCreateTimerTask( void )$/;"	f
xTimerDelete	amazon-freertos/include/timers.h	664;"	d
xTimerGenericCommand	amazon-freertos/freertos/timers.c	/^BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait )$/;"	f
xTimerGenericCommand	amazon-freertos/include/mpu_wrappers.h	132;"	d
xTimerGetExpiryTime	amazon-freertos/freertos/timers.c	/^TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )$/;"	f
xTimerGetExpiryTime	amazon-freertos/include/mpu_wrappers.h	131;"	d
xTimerGetPeriod	amazon-freertos/freertos/timers.c	/^TickType_t xTimerGetPeriod( TimerHandle_t xTimer )$/;"	f
xTimerGetPeriod	amazon-freertos/include/mpu_wrappers.h	130;"	d
xTimerGetTimerDaemonTaskHandle	amazon-freertos/freertos/timers.c	/^TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )$/;"	f
xTimerGetTimerDaemonTaskHandle	amazon-freertos/include/mpu_wrappers.h	126;"	d
xTimerHandle	amazon-freertos/include/FreeRTOS.h	924;"	d
xTimerIsTimerActive	amazon-freertos/freertos/timers.c	/^BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )$/;"	f
xTimerIsTimerActive	amazon-freertos/include/mpu_wrappers.h	125;"	d
xTimerListItem	amazon-freertos/freertos/timers.c	/^	ListItem_t				xTimerListItem;		\/*<< Standard linked list item as used by all kernel features for event management. *\/$/;"	m	struct:tmrTimerControl	file:
xTimerParameters	amazon-freertos/freertos/timers.c	/^		TimerParameter_t xTimerParameters;$/;"	m	union:tmrTimerQueueMessage::__anon6	file:
xTimerPendFunctionCall	amazon-freertos/freertos/timers.c	/^	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, TickType_t xTicksToWait )$/;"	f
xTimerPendFunctionCall	amazon-freertos/include/mpu_wrappers.h	127;"	d
xTimerPendFunctionCallFromISR	amazon-freertos/freertos/timers.c	/^	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xTimerPeriodInTicks	amazon-freertos/freertos/timers.c	/^	TickType_t				xTimerPeriodInTicks;\/*<< How quickly and often the timer expires. *\/$/;"	m	struct:tmrTimerControl	file:
xTimerQueue	amazon-freertos/freertos/timers.c	/^PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;$/;"	v	file:
xTimerReset	amazon-freertos/include/timers.h	788;"	d
xTimerResetFromISR	amazon-freertos/include/timers.h	1096;"	d
xTimerStart	amazon-freertos/include/timers.h	504;"	d
xTimerStartFromISR	amazon-freertos/include/timers.h	874;"	d
xTimerStop	amazon-freertos/include/timers.h	546;"	d
xTimerStopFromISR	amazon-freertos/include/timers.h	937;"	d
xTimerTaskHandle	amazon-freertos/freertos/timers.c	/^PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;$/;"	v	file:
xTriggerLevelBytes	amazon-freertos/freertos/stream_buffer.c	/^	size_t xTriggerLevelBytes;			\/* The number of bytes that must be in the stream buffer before a task that is waiting for data is unblocked. *\/$/;"	m	struct:StreamBufferDef_t	file:
xYieldPending	amazon-freertos/freertos/tasks.c	/^PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;$/;"	v	file:
xferCfg	drivers/fsl_dma.h	/^    uint32_t xferCfg;               \/*!< channel transfer configurations *\/$/;"	m	struct:_dma_channel_config
xfercfg	drivers/fsl_dma.h	/^    dma_xfercfg_t xfercfg; \/*!< Transfer options *\/$/;"	m	struct:_dma_transfer_config
xfercfg	drivers/fsl_dma.h	/^    volatile uint32_t xfercfg; \/*!< Transfer configuration *\/$/;"	m	struct:_dma_descriptor
xid	lwip/src/core/ipv4/dhcp.c	/^static u32_t xid;$/;"	v	file:
xid	lwip/src/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xid	lwip/src/include/lwip/dhcp6.h	/^  u32_t xid;$/;"	m	struct:dhcp6
xid_initialised	lwip/src/core/ipv4/dhcp.c	/^static u8_t xid_initialised;$/;"	v	file:
xmit	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_igmp
xmit	lwip/src/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_idle	lwip/src/include/netif/ppp/ppp_impl.h	/^    time_t xmit_idle;		\/* time since last NP packet sent *\/$/;"	m	struct:ppp_idle
xq_dec	codec2/codec2_internal.h	/^    float         xq_dec[2];$/;"	m	struct:CODEC2
xq_enc	codec2/codec2_internal.h	/^    float         xq_enc[2];               \/* joint pitch and energy VQ states          *\/$/;"	m	struct:CODEC2
y	emwin/emWin_header/GUI_Type.h	/^  I32 y;$/;"	m	struct:__anon269
y	emwin/emWin_header/GUI_Type.h	/^  int x,y;$/;"	m	struct:__anon247
y	emwin/emWin_header/LCD.h	/^  int x,y;$/;"	m	struct:__anon406
y	emwin/emWin_header/LCD.h	/^typedef struct { I16P x,y; } GUI_POINT;$/;"	m	struct:__anon403
y	emwin/emWin_header/WM.h	/^  int x,y;$/;"	m	struct:__anon286
y	lwip/src/include/netif/ppp/polarssl/arc4.h	/^    int y;                      \/*!< permutation index *\/$/;"	m	struct:__anon429
y0	emwin/emWin_header/DIALOG_Intern.h	/^  I16                      y0;               \/\/ y position$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
y0	emwin/emWin_header/GUI.h	/^  int    x0, y0;        \/\/ Coordinates of the upper left pixel$/;"	m	struct:__anon385
y0	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int x0, y0, x1, y1; \/\/ Current rectangle$/;"	m	struct:DRIVER_CONTEXT
y0	emwin/emWin_header/GUI_BMP_Private.h	/^  int                   y0;             \/\/ Used to draw data$/;"	m	struct:__anon330
y0	emwin/emWin_header/GUI_GCache_Private.h	/^  int x0, y0, x1, y1, IsDirty;$/;"	m	struct:__anon239
y0	emwin/emWin_header/GUI_Private.h	/^  I16P                   x0, y0, XSize, YSize;$/;"	m	struct:__anon295
y0	emwin/emWin_header/GUI_Private.h	/^  I16P x0, y0, XSize, YSize;$/;"	m	struct:GUI_Usage
y0	emwin/emWin_header/LCD.h	/^typedef struct { I16 x0,y0,x1,y1; } LCD_RECT;$/;"	m	struct:__anon404
y0	emwin/emWin_header/WIDGET.h	/^  int        x0, y0, x1, y1;$/;"	m	struct:__anon209
y0Dirty	emwin/emWin_header/GUI_VNC.h	/^  int x0Dirty, y0Dirty, x1Dirty, y1Dirty;$/;"	m	struct:GUI_VNC_CONTEXT
y1	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int x0, y0, x1, y1; \/\/ Current rectangle$/;"	m	struct:DRIVER_CONTEXT
y1	emwin/emWin_header/GUI_BMP_Private.h	/^  int                   y1;             \/\/ Used to draw data$/;"	m	struct:__anon330
y1	emwin/emWin_header/GUI_GCache_Private.h	/^  int x0, y0, x1, y1, IsDirty;$/;"	m	struct:__anon239
y1	emwin/emWin_header/LCD.h	/^typedef struct { I16 x0,y0,x1,y1; } LCD_RECT;$/;"	m	struct:__anon404
y1	emwin/emWin_header/WIDGET.h	/^  int        x0, y0, x1, y1;$/;"	m	struct:__anon209
y1Dirty	emwin/emWin_header/GUI_VNC.h	/^  int x0Dirty, y0Dirty, x1Dirty, y1Dirty;$/;"	m	struct:GUI_VNC_CONTEXT
yHot	emwin/emWin_header/GUI.h	/^  int                 yHot;$/;"	m	struct:__anon389
yHot	emwin/emWin_header/GUI.h	/^  int                 yHot;$/;"	m	struct:__anon390
yLen	emwin/emWin_header/LCD.h	/^  int xLen, yLen;$/;"	m	struct:__anon413
yLog0	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      yLog0;$/;"	m	struct:__anon306
yLog1	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      yLog1;$/;"	m	struct:__anon306
yOff	emwin/emWin_header/GUI.h	/^    int xOff, yOff;$/;"	m	struct:GUI_CONTEXT
yOff	emwin/emWin_header/LISTVIEW_Private.h	/^  I16                          xOff, yOff;$/;"	m	struct:__anon332
yOff	emwin/emWin_header/WIDGET.h	/^  I16 xOff, yOff;$/;"	m	struct:GUI_DRAW
yOffPM	emwin/emWin_header/TREEVIEW_Private.h	/^  I16 xOffPM, yOffPM; \/* x\/y offset of PM bitmap *\/$/;"	m	struct:__anon227
yOrg	emwin/emWin_header/GUI_VNC.h	/^  int xOrg, yOrg, xOrgNew, yOrgNew;$/;"	m	struct:GUI_VNC_CONTEXT
yOrgNew	emwin/emWin_header/GUI_VNC.h	/^  int xOrg, yOrg, xOrgNew, yOrgNew;$/;"	m	struct:GUI_VNC_CONTEXT
yPhys	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      yPhys;     \/\/ Last measured y value$/;"	m	struct:__anon307
yPhys0	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      yPhys0;$/;"	m	struct:__anon306
yPhys1	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      yPhys1;$/;"	m	struct:__anon306
yPos	emwin/emWin_header/GUI.h	/^  int yPos;$/;"	m	struct:__anon386
yPos	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int xPos, yPos;$/;"	m	struct:DRIVER_CONTEXT
yPos	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int xPos, yPos;$/;"	m	struct:DRIVER_CONTEXT
yPos	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int xPos, yPos;$/;"	m	struct:DRIVER_CONTEXT
yPos	emwin/emWin_header/GUI_Type.h	/^  int yPos;$/;"	m	struct:__anon249
yPos	emwin/emWin_header/LCD.h	/^  int xPos, yPos;$/;"	m	struct:__anon410
yPos	emwin/emWin_header/LCD.h	/^  int xPos, yPos;$/;"	m	struct:__anon413
yPos	emwin/emWin_header/SWIPELIST_Private.h	/^  int     yPos;$/;"	m	struct:__anon235
yPos	emwin/emWin_header/WM.h	/^  int xPos, yPos;$/;"	m	struct:__anon287
yPos0	emwin/emWin_header/WM.h	/^  int       yPos0;       \/\/ Primary window position in y when starting the gesture$/;"	m	struct:__anon288
yPosText	emwin/emWin_header/BUTTON_Private.h	/^  I16 xPosText, yPosText;$/;"	m	struct:__anon401
ySize	emwin/emWin_header/DIALOG_Intern.h	/^  I16                      ySize;            \/\/ y size$/;"	m	struct:GUI_WIDGET_CREATE_INFO_struct
ySize	emwin/emWin_header/GUI.h	/^  int    xSize, ySize;  \/\/ Size of dirty rectangle$/;"	m	struct:__anon385
ySize	emwin/emWin_header/GUI.h	/^  int ySize;         \/\/ Y-size of images$/;"	m	struct:__anon388
ySize	emwin/emWin_header/GUI.h	/^  int ySize;$/;"	m	struct:__anon386
ySize	emwin/emWin_header/GUIDRV_DCache_Private.h	/^  int xSize, ySize;       \/\/ Display size$/;"	m	struct:__anon370
ySize	emwin/emWin_header/GUIDRV_FlexColor_Private.h	/^  int xSize, ySize;   \/\/ Display size$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUIDRV_IST3088_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUIDRV_S1D13748_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUIDRV_S1D13781_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUIDRV_SLin_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUIDRV_SPage_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUIDRV_SSD1926_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUIDRV_TemplateI_Private.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUI_GCache_Private.h	/^  int xSize, ySize;$/;"	m	struct:__anon239
ySize	emwin/emWin_header/GUI_JPEG_Private.h	/^  U16 ySize;$/;"	m	struct:GUI_JPEG_DCONTEXT
ySize	emwin/emWin_header/GUI_SetOrientation.h	/^  int xSize, ySize;$/;"	m	struct:DRIVER_CONTEXT
ySize	emwin/emWin_header/GUI_Type.h	/^  int ySize;$/;"	m	struct:__anon249
ySize	emwin/emWin_header/GUI_Type.h	/^  int ySize;$/;"	m	struct:__anon250
ySize	emwin/emWin_header/GUI_VNC.h	/^  int xSize, ySize;$/;"	m	struct:GUI_VNC_CONTEXT
ySize	emwin/emWin_header/KNOB_Private.h	/^  int ySize;$/;"	m	struct:__anon327
ySize	emwin/emWin_header/LCD.h	/^  int xSize, ySize;$/;"	m	struct:__anon412
ySize	emwin/emWin_header/LISTBOX_Private.h	/^  U16  xSize, ySize;$/;"	m	struct:__anon311
ySize	emwin/emWin_header/TREEVIEW_Private.h	/^  U16                  ySize;$/;"	m	struct:__anon225
ySize	emwin/emWin_header/WM.h	/^  U32       ySize;       \/\/ Native ySize of window to be zoomed in pixels$/;"	m	struct:__anon288
ySize	emwin/emWin_header/WM_Intern.h	/^    int xSize, ySize; \/\/ Size of bk window$/;"	m	struct:__anon367
ySizeData	emwin/emWin_header/LISTWHEEL_Private.h	/^  int                     ySizeData;        \/\/ Data size in pixels$/;"	m	struct:__anon353
ySizeItems	emwin/emWin_header/ICONVIEW_Private.h	/^  int                     ySizeItems;$/;"	m	struct:__anon219
ySizeItems	emwin/emWin_header/TREEVIEW_Private.h	/^  int ySizeItems;     \/* ySize in pixel used for all visible items *\/$/;"	m	struct:__anon227
ySizeLB	emwin/emWin_header/DROPDOWN_Private.h	/^  I16     ySizeLB;    \/\/ ySize of assigned LISTBOX in expanded state$/;"	m	struct:__anon360
ySizeParent	emwin/emWin_header/WM.h	/^  U32       ySizeParent; \/\/ ySize of parent window$/;"	m	struct:__anon288
ySrc	emwin/emWin_header/GUI_BMP_Private.h	/^  int                   ySrc;           \/\/ Used to read data$/;"	m	struct:__anon330
z1Phys	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      z1Phys;    \/\/ Last measured z1 value$/;"	m	struct:__anon307
z2Phys	emwin/emWin_header/GUITDRV_ADS7846.h	/^  int      z2Phys;    \/\/ Last measured z2 value$/;"	m	struct:__anon307
zep_dst_ip_addr	lwip/src/include/netif/zepif.h	/^  const ip_addr_t    *zep_dst_ip_addr;$/;"	m	struct:zepif_init
zep_dst_udp_port	lwip/src/include/netif/zepif.h	/^  u16_t               zep_dst_udp_port;$/;"	m	struct:zepif_init
zep_hdr	lwip/src/netif/zepif.c	/^struct zep_hdr {$/;"	s	file:
zep_lowpan_timer	lwip/src/netif/zepif.c	/^zep_lowpan_timer(void *arg)$/;"	f	file:
zep_lowpan_timer_running	lwip/src/netif/zepif.c	/^static u8_t zep_lowpan_timer_running;$/;"	v	file:
zep_netif	lwip/src/include/netif/zepif.h	/^  const struct netif *zep_netif;$/;"	m	struct:zepif_init	typeref:struct:zepif_init::netif
zep_src_ip_addr	lwip/src/include/netif/zepif.h	/^  const ip_addr_t    *zep_src_ip_addr;$/;"	m	struct:zepif_init
zep_src_udp_port	lwip/src/include/netif/zepif.h	/^  u16_t               zep_src_udp_port;$/;"	m	struct:zepif_init
zepif_init	lwip/src/include/netif/zepif.h	/^struct zepif_init {$/;"	s
zepif_init	lwip/src/netif/zepif.c	/^zepif_init(struct netif *netif)$/;"	f
zepif_linkoutput	lwip/src/netif/zepif.c	/^zepif_linkoutput(struct netif *netif, struct pbuf *p)$/;"	f	file:
zepif_state	lwip/src/netif/zepif.c	/^struct zepif_state {$/;"	s	file:
zepif_udp_recv	lwip/src/netif/zepif.c	/^zepif_udp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
zeroTransactionData	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^    uint8_t *zeroTransactionData;$/;"	m	struct:_usb_device_lpc3511ip_state_struct
zlt	usb/device/include/usb_device.h	/^    uint8_t zlt;             \/*!< ZLT flag*\/$/;"	m	struct:_usb_device_endpoint_init_struct
zlt	usb/device/source/ehci/usb_device_ehci.h	/^            uint32_t zlt: 1;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon519::__anon520
zlt	usb/device/source/ehci/usb_device_ehci.h	/^            volatile uint32_t zlt : 1;$/;"	m	struct:_usb_device_ehci_qh_struct::__anon515::__anon516
zlt	usb/device/source/khci/usb_device_khci.h	/^            uint32_t zlt : 1U;            \/*!< zlt flag *\/$/;"	m	struct:_usb_device_khci_endpoint_state_struct::__anon525::__anon526
zlt	usb/device/source/lpcip3511/usb_device_lpcip3511.h	/^            uint32_t zlt : 1U;            \/*!< zlt flag *\/$/;"	m	struct:_usb_device_lpc3511ip_endpoint_state_struct::__anon511::__anon512
zone	lwip/src/include/lwip/ip6_addr.h	/^  u8_t zone;$/;"	m	struct:ip6_addr
